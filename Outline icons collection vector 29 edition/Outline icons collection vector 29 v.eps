%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: vector_421.eps
%%Creator: Adobe Illustrator(R) 16.0
%%For: Max
%%CreationDate: 10/27/2015
%%BoundingBox: 0 0 1020 1042
%%HiResBoundingBox: 0 0 1019.1954 1041.2173
%%CropBox: 0 0 1019.1954 1041.2173
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 16.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 16.0.0 x682 R agm 4.6676 ct 5.2591%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.3-c011 66.145661, 2012/02/06-14:56:27        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Basic RGB</rdf:li>
            </rdf:Alt>
         </dc:title>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:CreatorTool>Adobe Illustrator CS6 (Windows)</xmp:CreatorTool>
         <xmp:CreateDate>2015-10-27T15:38:35+02:00</xmp:CreateDate>
         <xmp:ModifyDate>2015-10-27T15:38:35+02:00</xmp:ModifyDate>
         <xmp:MetadataDate>2015-10-27T15:38:35+02:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>252</xmpGImg:width>
                  <xmpGImg:height>256</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgBAAD8AwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q+ffOPkDTbDzlqh1X&#xA;U9Hi0+4gudeuNX1nSkvZ4xJdJELYyNcR81Uy8Y6AdlAOKoPy35F8n+ZLxbLSdd8uyXbx+tDbz+VH&#xA;tZJYuvOJbm4iMi+6VGKqvmj8p00i70jTxP5cuZtZ1CLS5Vj0GKKW2W5gnkSf4bpmr/o549N967Ux&#xA;V75oemHStFsNMNxJdGxt4rb6zMaySekgTm5/malTiqNxV2KvOfzX0mGbV/LeranbXl75bsTewavb&#xA;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&#xA;w3DKw+0pB74qnuKuxV59+an5lP5ZhGnaY0Q1eWA3VzdTgtDY2fL0/rMiL8UrvIfThiG7v7DFWEWX&#xA;5T+afM0Lax5lmW3RlMyPrcR1TUStK1NoXjsLMEbiKOJmXoWriqx/yp1Kz0qHzT5WuLW4huLdLyI2&#xA;cR8u34hkX1FKSW7C1J4v/d3EHHsaYqy38rvzOudWuU0DXZRLqLiX9HagYvq73BtjS5trmDdYby3q&#xA;DIikqVIZfhxV6diqR+dfOWi+TvLtzr2sSFbS3oqogq8kj7JGg6cmPjsOp2xV86+cPOfl/VIbLzpq&#xA;vmiDUdYt7mNrnydZ3UsdsmlyHjJbQvH6RkukqJGl5gMRQAgKMVQtxefltraajr1l5ki0Oe3kA8t6&#xA;FcXd0yTRQtV2vmLtIpu/sgI49NaHrXFXaf5l/L7zD5jbUdP8wS+RLXSbOM6e0l1NcTTarJR3d1ke&#xA;ZXt4KemV25160Oyr3H8pvzUsfO9ld2kjw/p3SCseo/VWMlrKGqEuLdz/ALrk4k8W+Jeh8Sqz/FXY&#xA;qw/8z/8AjkaP/wCBBof/AHU4MVeWS+VPzI1z8t/IcnlS4mW3i0aOMxQX7aeYbt1jMN3IVB9ZI1DD&#xA;0+vh3xVlPnfS/O93+Yfk+xsPNUlnOLee4NvBADCDaw0mnuo+Y9VJpZY41B48Ry4/FviqX6n/AOtG&#xA;6Z/xmT/ujXuKvasVdiqC1zU10rRNQ1RozKthbTXRiB4lhDGX41oaV40xV5H5/wDP02o6FbaN5l8n&#xA;mSDX7c3VjDbXktzchYuDCdBa2kzRNG0qEMe/jvirELDzPp2i+SYvK9j5Tv7a1S5s7qe+kXUGnmls&#xA;riGdTIx04A8vq6pQbKuwG2KqnmTXtA8xearHzLqXkS+e+tKetEq6iILvgB6X1pP0b+89Knw/c1V2&#xA;xV6p5d/M7VdVu/Lpm0KO30nzM0qWGoxXom3itpbn4oTDE4qICu9CDir0DFXYq8+/NrySurWkOvWu&#xA;nx6nf6Ujpd6VIoZdQ052V57Q/wDFgMayQN+zIo8cVQ/5ReS4LFZfND6YNHa/hFvo2jAcTY6Zz9VE&#xA;kG5M87/vZiSTWi/s4qxFLiysPMP1jXaLY6X52vrjWnl2SFry1I0i5mB/3WFeNVc7Kflir0D839S0&#xA;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&#xA;/9k=</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#">
         <xmpMM:OriginalDocumentID>uuid:9E3E5C9A8C81DB118734DB58FDDE4BA7</xmpMM:OriginalDocumentID>
         <xmpMM:DocumentID>xmp.did:5CF86523E17BE5119F9EF5F1308E0236</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:5CF86523E17BE5119F9EF5F1308E0236</xmpMM:InstanceID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:5BF86523E17BE5119F9EF5F1308E0236</stRef:instanceID>
            <stRef:documentID>xmp.did:5BF86523E17BE5119F9EF5F1308E0236</stRef:documentID>
            <stRef:originalDocumentID>uuid:9E3E5C9A8C81DB118734DB58FDDE4BA7</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:3F831BD7736BE5118671ECE021D48F9D</stEvt:instanceID>
                  <stEvt:when>2015-10-05T18:14:57+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:5CF86523E17BE5119F9EF5F1308E0236</stEvt:instanceID>
                  <stEvt:when>2015-10-27T15:38:35+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/">
         <illustrator:StartupProfile>Basic RGB</illustrator:StartupProfile>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>1175.000000</stDim:w>
            <stDim:h>1175.000000</stDim:h>
            <stDim:unit>Points</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>White</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Black</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Red</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Yellow</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Green</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Cyan</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Blue</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Magenta</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=193 G=39 B=45</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>193</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>45</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=28 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>28</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=241 G=90 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>241</xmpG:red>
                           <xmpG:green>90</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=247 G=147 B=30</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>247</xmpG:red>
                           <xmpG:green>147</xmpG:green>
                           <xmpG:blue>30</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=251 G=176 B=59</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>251</xmpG:red>
                           <xmpG:green>176</xmpG:green>
                           <xmpG:blue>59</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=252 G=238 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>252</xmpG:red>
                           <xmpG:green>238</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=217 G=224 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>217</xmpG:red>
                           <xmpG:green>224</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=198 B=63</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>198</xmpG:green>
                           <xmpG:blue>63</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=57 G=181 B=74</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>57</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>74</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=146 B=69</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>146</xmpG:green>
                           <xmpG:blue>69</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=104 B=55</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>104</xmpG:green>
                           <xmpG:blue>55</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=34 G=181 B=115</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>34</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>115</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=169 B=157</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>169</xmpG:green>
                           <xmpG:blue>157</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=41 G=171 B=226</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>41</xmpG:red>
                           <xmpG:green>171</xmpG:green>
                           <xmpG:blue>226</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=113 B=188</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>113</xmpG:green>
                           <xmpG:blue>188</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=46 G=49 B=146</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>46</xmpG:red>
                           <xmpG:green>49</xmpG:green>
                           <xmpG:blue>146</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=27 G=20 B=100</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>27</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>100</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=45 B=145</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>45</xmpG:green>
                           <xmpG:blue>145</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=147 G=39 B=143</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>147</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>143</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=158 G=0 B=93</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>158</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>93</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=212 G=20 B=90</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>212</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>90</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=30 B=121</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>30</xmpG:green>
                           <xmpG:blue>121</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=199 G=178 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>199</xmpG:red>
                           <xmpG:green>178</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=134 B=117</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>134</xmpG:green>
                           <xmpG:blue>117</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=115 G=99 B=87</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>115</xmpG:red>
                           <xmpG:green>99</xmpG:green>
                           <xmpG:blue>87</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=83 G=71 B=65</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>83</xmpG:red>
                           <xmpG:green>71</xmpG:green>
                           <xmpG:blue>65</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=198 G=156 B=109</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>198</xmpG:red>
                           <xmpG:green>156</xmpG:green>
                           <xmpG:blue>109</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=166 G=124 B=82</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>166</xmpG:red>
                           <xmpG:green>124</xmpG:green>
                           <xmpG:blue>82</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=98 B=57</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>98</xmpG:green>
                           <xmpG:blue>57</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=117 G=76 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>117</xmpG:red>
                           <xmpG:green>76</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=96 G=56 B=19</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>96</xmpG:red>
                           <xmpG:green>56</xmpG:green>
                           <xmpG:blue>19</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=66 G=33 B=11</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>66</xmpG:red>
                           <xmpG:green>33</xmpG:green>
                           <xmpG:blue>11</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Cold</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=56 M=0 Y=20 K=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>101</xmpG:red>
                           <xmpG:green>200</xmpG:green>
                           <xmpG:blue>208</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=51 M=43 Y=0 K=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>131</xmpG:red>
                           <xmpG:green>139</xmpG:green>
                           <xmpG:blue>197</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=26 M=41 Y=0 K=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>186</xmpG:red>
                           <xmpG:green>155</xmpG:green>
                           <xmpG:blue>201</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Grays</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=0 B=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=26 G=26 B=26</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>26</xmpG:red>
                           <xmpG:green>26</xmpG:green>
                           <xmpG:blue>26</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=51 G=51 B=51</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>51</xmpG:red>
                           <xmpG:green>51</xmpG:green>
                           <xmpG:blue>51</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=77 G=77 B=77</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>77</xmpG:red>
                           <xmpG:green>77</xmpG:green>
                           <xmpG:blue>77</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=102 B=102</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>102</xmpG:green>
                           <xmpG:blue>102</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=128 G=128 B=128</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>128</xmpG:red>
                           <xmpG:green>128</xmpG:green>
                           <xmpG:blue>128</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=153 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>153</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=179 G=179 B=179</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>179</xmpG:red>
                           <xmpG:green>179</xmpG:green>
                           <xmpG:blue>179</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=204 G=204 B=204</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>204</xmpG:red>
                           <xmpG:green>204</xmpG:green>
                           <xmpG:blue>204</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=230 G=230 B=230</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>230</xmpG:red>
                           <xmpG:green>230</xmpG:green>
                           <xmpG:blue>230</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=242 G=242 B=242</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>242</xmpG:red>
                           <xmpG:green>242</xmpG:green>
                           <xmpG:blue>242</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <pdf:Producer>Adobe PDF library 10.01</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -1041.22 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 1041.22 li
1019.2 1041.22 li
1019.2 0 li
cp
clp
902.727 386.068 mo
903.951 386.068 905.031 386.842 905.537 387.814 cv
907.732 386.734 li
906.887 385.221 905.355 383.799 902.727 383.799 cv
899.107 383.799 896.318 386.301 896.318 390.011 cv
896.318 393.702 899.107 396.222 902.727 396.222 cv
905.355 396.222 906.887 394.764 907.732 393.27 cv
905.537 392.208 li
905.031 393.18 903.951 393.954 902.727 393.954 cv
900.531 393.954 898.947 392.28 898.947 390.011 cv
898.947 387.742 900.531 386.068 902.727 386.068 cv
cp
false sop
/0 
[/DeviceRGB] /CSA add_res
0 0 0 rgb
f
917.488 391.127 mo
917.488 392.801 916.533 393.954 914.68 393.954 cv
912.824 393.954 911.852 392.801 911.852 391.127 cv
911.852 383.997 li
909.26 383.997 li
909.26 391.199 li
909.26 394.17 911.023 396.222 914.68 396.222 cv
918.334 396.222 920.1 394.17 920.1 391.199 cv
920.1 383.997 li
917.488 383.997 li
917.488 391.127 li
cp
f
927.729 389.489 mo
925.027 389.489 li
925.027 386.248 li
927.729 386.248 li
928.736 386.248 929.512 386.86 929.512 387.85 cv
929.512 388.876 928.736 389.489 927.729 389.489 cv
cp
932.141 387.868 mo
932.141 385.635 930.592 383.997 928.09 383.997 cv
922.471 383.997 li
922.471 396.006 li
925.027 396.006 li
925.027 391.74 li
926.9 391.74 li
929.26 396.006 li
932.213 396.006 li
929.494 391.433 li
930.789 391.127 932.141 389.975 932.141 387.868 cv
cp
f
939.303 389.489 mo
936.602 389.489 li
936.602 386.248 li
939.303 386.248 li
940.311 386.248 941.086 386.86 941.086 387.85 cv
941.086 388.876 940.311 389.489 939.303 389.489 cv
cp
943.715 387.868 mo
943.715 385.635 942.166 383.997 939.662 383.997 cv
934.045 383.997 li
934.045 396.006 li
936.602 396.006 li
936.602 391.74 li
938.475 391.74 li
940.834 396.006 li
943.785 396.006 li
941.066 391.433 li
942.363 391.127 943.715 389.975 943.715 387.868 cv
cp
f
945.619 396.006 mo
954.117 396.006 li
954.117 393.756 li
948.176 393.756 li
948.176 391.019 li
953.992 391.019 li
953.992 388.768 li
948.176 388.768 li
948.176 386.248 li
954.117 386.248 li
954.117 383.997 li
945.619 383.997 li
945.619 396.006 li
cp
f
964.305 391.542 mo
958.742 383.997 li
956.113 383.997 li
956.113 396.006 li
958.67 396.006 li
958.67 388.174 li
964.395 396.006 li
966.861 396.006 li
966.861 383.997 li
964.305 383.997 li
964.305 391.542 li
cp
f
975.068 386.068 mo
976.293 386.068 977.373 386.842 977.877 387.814 cv
980.074 386.734 li
979.227 385.221 977.697 383.799 975.068 383.799 cv
971.449 383.799 968.658 386.301 968.658 390.011 cv
968.658 393.702 971.449 396.222 975.068 396.222 cv
977.697 396.222 979.227 394.764 980.074 393.27 cv
977.877 392.208 li
977.373 393.18 976.293 393.954 975.068 393.954 cv
972.871 393.954 971.287 392.28 971.287 390.011 cv
971.287 387.742 972.871 386.068 975.068 386.068 cv
cp
f
988.783 383.997 mo
985.813 388.804 li
982.842 383.997 li
979.926 383.997 li
984.535 391.091 li
984.535 396.006 li
987.092 396.006 li
987.092 391.091 li
991.684 383.997 li
988.783 383.997 li
cp
f
967.021 325.378 mo
880.354 325.378 li
880.354 320.878 li
967.021 320.878 li
967.021 325.378 li
cp
.0952911 .0952911 .0952911 rgb
f
940.154 315.22 mo
880.354 315.22 li
880.354 310.72 li
940.154 310.72 li
940.154 315.22 li
cp
f
931.824 305.07 mo
880.354 305.07 li
880.354 300.57 li
931.824 300.57 li
931.824 305.07 li
cp
f
927.674 294.91 mo
880.354 294.91 li
880.354 290.41 li
927.674 290.41 li
927.674 294.91 li
cp
f
926.395 284.75 mo
880.354 284.75 li
880.354 280.25 li
926.395 280.25 li
926.395 284.75 li
cp
f
927.674 274.601 mo
880.354 274.601 li
880.354 270.101 li
927.674 270.101 li
927.674 274.601 li
cp
f
931.824 264.44 mo
880.354 264.44 li
880.354 259.94 li
931.824 259.94 li
931.824 264.44 li
cp
f
940.164 254.28 mo
880.354 254.28 li
880.354 249.78 li
940.164 249.78 li
940.164 254.28 li
cp
f
967.021 244.127 mo
880.354 244.127 li
880.354 239.627 li
967.021 239.627 li
967.021 244.127 li
cp
f
967.021 244.127 mo
945.861 244.127 928.646 261.342 928.646 282.502 cv
928.646 303.663 945.861 320.878 967.021 320.878 cv
988.182 320.878 1005.4 303.663 1005.4 282.502 cv
1005.4 261.342 988.182 244.127 967.021 244.127 cv
cp
967.021 325.378 mo
943.38 325.378 924.146 306.145 924.146 282.502 cv
924.146 258.861 943.38 239.627 967.021 239.627 cv
990.663 239.627 1009.9 258.861 1009.9 282.502 cv
1009.9 306.145 990.663 325.378 967.021 325.378 cv
cp
f
967.021 252.591 mo
950.528 252.591 937.11 266.009 937.11 282.502 cv
937.11 298.996 950.528 312.415 967.021 312.415 cv
983.515 312.415 996.933 298.996 996.933 282.502 cv
996.933 266.009 983.515 252.591 967.021 252.591 cv
cp
967.021 316.915 mo
948.047 316.915 932.61 301.478 932.61 282.502 cv
932.61 263.528 948.047 248.091 967.021 248.091 cv
985.996 248.091 1001.43 263.528 1001.43 282.502 cv
1001.43 301.478 985.996 316.915 967.021 316.915 cv
cp
f
969.238 298.053 mo
964.805 298.053 li
962.427 298.053 960.192 297.128 958.513 295.447 cv
956.831 293.766 955.905 291.53 955.905 289.152 cv
960.405 289.152 li
960.405 290.328 960.863 291.434 961.694 292.266 cv
962.524 293.096 963.629 293.553 964.805 293.553 cv
969.238 293.553 li
970.411 293.553 971.518 293.095 972.354 292.262 cv
973.178 291.434 973.636 290.327 973.636 289.152 cv
973.636 287.977 973.179 286.873 972.351 286.043 cv
971.518 285.212 970.412 284.753 969.238 284.753 cv
964.805 284.753 li
962.425 284.753 960.189 283.827 958.511 282.145 cv
956.832 280.471 955.905 278.235 955.905 275.853 cv
955.905 273.471 956.832 271.236 958.515 269.558 cv
960.19 267.88 962.426 266.955 964.805 266.955 cv
969.238 266.955 li
971.611 266.955 973.846 267.879 975.529 269.558 cv
977.212 271.242 978.136 273.477 978.136 275.853 cv
973.636 275.853 li
973.636 274.677 973.179 273.572 972.35 272.741 cv
971.519 271.913 970.412 271.455 969.238 271.455 cv
964.805 271.455 li
963.629 271.455 962.524 271.912 961.695 272.742 cv
960.862 273.572 960.405 274.676 960.405 275.853 cv
960.405 277.031 960.862 278.135 961.692 278.962 cv
962.524 279.796 963.629 280.253 964.805 280.253 cv
969.238 280.253 li
971.612 280.253 973.848 281.179 975.531 282.86 cv
977.211 284.541 978.136 286.775 978.136 289.152 cv
978.136 291.525 977.213 293.76 975.536 295.444 cv
973.844 297.129 971.609 298.053 969.238 298.053 cv
cp
f
969.271 269.205 mo
964.771 269.205 li
964.771 263.883 li
969.271 263.883 li
969.271 269.205 li
cp
f
969.271 301.122 mo
964.771 301.122 li
964.771 295.803 li
969.271 295.803 li
969.271 301.122 li
cp
f
267.86 176.58 mo
271.029 176.58 li
271.029 178.02 li
270.543 178.47 269.553 178.938 268.49 178.938 cv
266.293 178.938 264.709 177.264 264.709 174.996 cv
264.709 172.726 266.293 171.052 268.49 171.052 cv
269.75 171.052 270.776 171.772 271.335 172.619 cv
273.441 171.466 li
272.541 170.043 270.975 168.784 268.49 168.784 cv
264.961 168.784 262.08 171.196 262.08 174.996 cv
262.08 178.776 264.961 181.207 268.49 181.207 cv
270.65 181.207 272.361 180.325 273.586 178.957 cv
273.586 174.347 li
267.86 174.347 li
267.86 176.58 li
cp
.0980392 .0941176 .0941176 rgb
f
280.874 174.473 mo
278.173 174.473 li
278.173 171.232 li
280.874 171.232 li
281.882 171.232 282.656 171.844 282.656 172.834 cv
282.656 173.861 281.882 174.473 280.874 174.473 cv
cp
285.285 172.852 mo
285.285 170.62 283.736 168.981 281.234 168.981 cv
275.616 168.981 li
275.616 180.991 li
278.173 180.991 li
278.173 176.724 li
280.046 176.724 li
282.404 180.991 li
285.357 180.991 li
282.639 176.417 li
283.935 176.112 285.285 174.959 285.285 172.852 cv
cp
f
292.897 178.938 mo
290.665 178.938 289.242 177.228 289.242 174.996 cv
289.242 172.745 290.665 171.052 292.897 171.052 cv
295.112 171.052 296.535 172.745 296.535 174.996 cv
296.535 177.228 295.112 178.938 292.897 178.938 cv
cp
292.897 168.784 mo
289.261 168.784 286.614 171.376 286.614 174.996 cv
286.614 178.614 289.261 181.207 292.897 181.207 cv
296.517 181.207 299.164 178.614 299.164 174.996 cv
299.164 171.376 296.517 168.784 292.897 168.784 cv
cp
f
310.953 177.66 mo
308.685 168.981 li
306.686 168.981 li
304.399 177.66 li
302.293 168.981 li
299.43 168.981 li
302.869 180.991 li
305.588 180.991 li
307.677 172.745 li
309.783 180.991 li
312.502 180.991 li
315.923 168.981 li
313.06 168.981 li
310.953 177.66 li
cp
f
316.386 171.232 mo
319.896 171.232 li
319.896 180.991 li
322.472 180.991 li
322.472 171.232 li
325.965 171.232 li
325.965 168.981 li
316.386 168.981 li
316.386 171.232 li
cp
f
335.828 168.981 mo
335.828 173.699 li
330.156 173.699 li
330.156 168.981 li
327.6 168.981 li
327.6 180.991 li
330.156 180.991 li
330.156 175.931 li
335.828 175.931 li
335.828 180.991 li
338.403 180.991 li
338.403 168.981 li
335.828 168.981 li
cp
f
261.339 93.8076 mo
345.108 93.8076 li
345.108 87.9233 li
261.339 87.9233 li
261.339 93.8076 li
cp
349.608 98.3076 mo
256.839 98.3076 li
256.839 83.4233 li
349.608 83.4233 li
349.608 98.3076 li
cp
.0952911 .0952911 .0952911 rgb
f
280.234 132.75 mo
326.213 132.75 li
336.546 98.3076 li
269.901 98.3076 li
280.234 132.75 li
cp
329.561 137.25 mo
276.886 137.25 li
263.853 93.8076 li
342.594 93.8076 li
329.561 137.25 li
cp
f
319.297 13.7441 mo
310.456 13.7441 li
310.456 9.24414 li
319.297 9.24414 li
321.339 9.24414 323.257 8.45068 324.698 7.01025 cv
327.879 10.1929 li
325.589 12.4829 322.541 13.7441 319.297 13.7441 cv
cp
f
314.351 73.0864 mo
310.456 73.0864 li
310.456 68.5864 li
314.351 68.5864 li
317.709 68.5864 320.871 67.2783 323.254 64.9033 cv
325.624 62.5254 326.932 59.3638 326.932 56.0059 cv
326.932 52.6401 325.625 49.4795 323.251 47.1055 cv
320.872 44.7261 317.711 43.4155 314.351 43.4155 cv
292.095 43.4155 li
287.538 43.4155 283.248 41.6411 280.016 38.4199 cv
276.789 35.1826 275.015 30.8926 275.015 26.335 cv
275.015 21.7666 276.79 17.4756 280.013 14.2524 cv
283.254 11.022 287.544 9.24414 292.095 9.24414 cv
295.991 9.24414 li
295.991 13.7441 li
292.095 13.7441 li
288.744 13.7441 285.582 15.0557 283.192 17.437 cv
280.822 19.8076 279.515 22.9688 279.515 26.335 cv
279.515 29.6934 280.823 32.855 283.198 35.2378 cv
285.575 37.6074 288.737 38.9155 292.095 38.9155 cv
314.351 38.9155 li
318.914 38.9155 323.204 40.6943 326.434 43.9238 cv
329.657 47.1475 331.432 51.438 331.432 56.0059 cv
331.432 60.5625 329.658 64.8525 326.436 68.0854 cv
323.199 71.312 318.909 73.0864 314.351 73.0864 cv
cp
f
279.515 85.6768 mo
275.015 85.6768 li
275.015 81.1089 276.79 76.8179 280.013 73.5947 cv
283.242 70.3652 287.533 68.5864 292.095 68.5864 cv
295.991 68.5864 li
295.991 73.0864 li
292.095 73.0864 li
288.735 73.0864 285.574 74.397 283.195 76.7764 cv
280.822 79.1499 279.515 82.3105 279.515 85.6768 cv
cp
f
305.473 85.6733 mo
300.973 85.6733 li
300.973 0 li
305.473 0 li
305.473 85.6733 li
cp
f
281.607 77.4331 mo
278.714 77.4331 li
276.311 77.4331 274.05 76.4971 272.351 74.7969 cv
270.65 73.0972 269.714 70.8369 269.714 68.4331 cv
269.714 65.5405 li
274.214 65.5405 li
274.214 68.4331 li
274.214 69.6353 274.683 70.7651 275.532 71.6152 cv
276.382 72.4648 277.512 72.9331 278.714 72.9331 cv
281.607 72.9331 li
281.607 77.4331 li
cp
f
338.432 53.7559 mo
344.682 53.7559 li
346.352 53.7559 347.921 53.106 349.101 51.9258 cv
350.282 50.7446 350.932 49.1753 350.932 47.5059 cv
350.932 41.2559 li
344.682 41.2559 li
343.013 41.2559 341.443 41.9058 340.264 43.0859 cv
339.083 44.2671 338.432 45.8364 338.432 47.5059 cv
338.432 53.7559 li
cp
344.682 58.2559 mo
333.932 58.2559 li
333.932 47.5059 li
333.932 44.6343 335.051 41.9346 337.082 39.9043 cv
339.11 37.8745 341.81 36.7559 344.682 36.7559 cv
355.432 36.7559 li
355.432 47.5059 li
355.432 50.3774 354.313 53.0771 352.283 55.1074 cv
350.254 57.1372 347.554 58.2559 344.682 58.2559 cv
cp
f
249.551 6.58496 mo
249.551 15.835 li
249.551 18.3052 250.514 20.6274 252.261 22.3745 cv
254.008 24.1226 256.331 25.085 258.801 25.085 cv
268.051 25.085 li
268.051 15.835 li
268.051 13.3643 267.089 11.0415 265.341 9.29492 cv
263.595 7.54688 261.272 6.58496 258.801 6.58496 cv
249.551 6.58496 li
cp
272.551 29.585 mo
258.801 29.585 li
255.128 29.585 251.675 28.1543 249.079 25.5562 cv
246.482 22.96 245.051 19.5073 245.051 15.835 cv
245.051 2.08496 li
258.801 2.08496 li
262.475 2.08496 265.928 3.51563 268.523 6.11328 cv
271.121 8.70898 272.551 12.1621 272.551 15.835 cv
272.551 29.585 li
cp
f
456.442 174.455 mo
453.741 174.455 li
453.741 171.232 li
456.442 171.232 li
457.45 171.232 458.225 171.844 458.225 172.852 cv
458.225 173.843 457.45 174.455 456.442 174.455 cv
cp
456.803 168.981 mo
451.185 168.981 li
451.185 180.991 li
453.741 180.991 li
453.741 176.706 li
456.803 176.706 li
459.396 176.706 460.836 174.941 460.836 172.852 cv
460.836 170.746 459.413 168.981 456.803 168.981 cv
cp
.0980392 .0941176 .0941176 rgb
f
467.692 174.473 mo
464.991 174.473 li
464.991 171.232 li
467.692 171.232 li
468.7 171.232 469.475 171.844 469.475 172.834 cv
469.475 173.861 468.7 174.473 467.692 174.473 cv
cp
472.104 172.852 mo
472.104 170.62 470.555 168.981 468.053 168.981 cv
462.435 168.981 li
462.435 180.991 li
464.991 180.991 li
464.991 176.724 li
466.864 176.724 li
469.223 180.991 li
472.176 180.991 li
469.457 176.417 li
470.753 176.112 472.104 174.959 472.104 172.852 cv
cp
f
474.009 180.991 mo
482.507 180.991 li
482.507 178.741 li
476.565 178.741 li
476.565 176.003 li
482.381 176.003 li
482.381 173.752 li
476.565 173.752 li
476.565 171.232 li
482.507 171.232 li
482.507 168.981 li
474.009 168.981 li
474.009 180.991 li
cp
f
486.698 172.258 mo
486.698 171.539 487.311 171.07 488.392 171.07 cv
489.615 171.07 490.912 171.484 491.884 172.384 cv
493.307 170.476 li
492.118 169.377 490.534 168.801 488.625 168.801 cv
485.799 168.801 484.07 170.458 484.07 172.457 cv
484.07 176.976 490.984 175.517 490.984 177.606 cv
490.984 178.308 490.317 178.938 488.896 178.938 cv
487.239 178.938 485.925 178.182 485.078 177.3 cv
483.674 179.298 li
484.809 180.433 486.465 181.207 488.787 181.207 cv
492.011 181.207 493.595 179.55 493.595 177.354 cv
493.595 172.871 486.698 174.149 486.698 172.258 cv
cp
f
495.302 180.991 mo
503.801 180.991 li
503.801 178.741 li
497.858 178.741 li
497.858 176.003 li
503.675 176.003 li
503.675 173.752 li
497.858 173.752 li
497.858 171.232 li
503.801 171.232 li
503.801 168.981 li
495.302 168.981 li
495.302 180.991 li
cp
f
513.988 176.526 mo
508.424 168.981 li
505.796 168.981 li
505.796 180.991 li
508.353 180.991 li
508.353 173.159 li
514.078 180.991 li
516.545 180.991 li
516.545 168.981 li
513.988 168.981 li
513.988 176.526 li
cp
f
527.757 168.981 mo
518.179 168.981 li
518.179 171.232 li
521.689 171.232 li
521.689 180.991 li
524.265 180.991 li
524.265 171.232 li
527.757 171.232 li
527.757 168.981 li
cp
f
531.337 176.706 mo
533.21 171.539 li
535.083 176.706 li
531.337 176.706 li
cp
531.607 168.981 mo
526.98 180.991 li
529.879 180.991 li
530.636 178.957 li
535.784 178.957 li
536.541 180.991 li
539.44 180.991 li
534.813 168.981 li
531.607 168.981 li
cp
f
538.663 171.232 mo
542.174 171.232 li
542.174 180.991 li
544.749 180.991 li
544.749 171.232 li
548.241 171.232 li
548.241 168.981 li
538.663 168.981 li
538.663 171.232 li
cp
f
549.876 180.991 mo
552.433 180.991 li
552.433 168.981 li
549.876 168.981 li
549.876 180.991 li
cp
f
560.516 178.938 mo
558.283 178.938 556.86 177.228 556.86 174.996 cv
556.86 172.745 558.283 171.052 560.516 171.052 cv
562.73 171.052 564.153 172.745 564.153 174.996 cv
564.153 177.228 562.73 178.938 560.516 178.938 cv
cp
560.516 168.784 mo
556.878 168.784 554.231 171.376 554.231 174.996 cv
554.231 178.614 556.878 181.207 560.516 181.207 cv
564.135 181.207 566.782 178.614 566.782 174.996 cv
566.782 171.376 564.135 168.784 560.516 168.784 cv
cp
f
576.771 168.981 mo
576.771 176.526 li
571.207 168.981 li
568.578 168.981 li
568.578 180.991 li
571.135 180.991 li
571.135 173.159 li
576.86 180.991 li
579.327 180.991 li
579.327 168.981 li
576.771 168.981 li
cp
f
570.424 94.0239 mo
460.089 94.0239 li
460.089 18.3271 li
500.824 18.3271 li
500.824 22.8271 li
464.589 22.8271 li
464.589 89.5239 li
565.924 89.5239 li
565.924 22.8271 li
529.689 22.8271 li
529.689 18.3271 li
570.424 18.3271 li
570.424 94.0239 li
cp
.0952911 .0952911 .0952911 rgb
f
458.817 99.1509 mo
571.695 99.1509 li
571.695 94.0283 li
458.817 94.0283 li
458.817 99.1509 li
cp
576.195 103.651 mo
454.317 103.651 li
454.317 89.5283 li
576.195 89.5283 li
576.195 103.651 li
cp
f
503.074 23.1421 mo
527.439 23.1421 li
527.439 18.0215 li
503.074 18.0215 li
503.074 23.1421 li
cp
531.939 27.6421 mo
498.574 27.6421 li
498.574 13.5215 li
531.939 13.5215 li
531.939 27.6421 li
cp
f
517.506 129.997 mo
513.006 129.997 li
513.006 103.324 li
517.506 103.324 li
517.506 129.997 li
cp
f
517.506 15.7715 mo
513.006 15.7715 li
513.006 5 li
517.506 5 li
517.506 15.7715 li
cp
f
547.211 131.125 mo
530.703 102.521 li
534.602 100.272 li
551.109 128.875 li
547.211 131.125 li
cp
f
483.3 131.125 mo
479.402 128.875 li
495.912 100.271 li
499.81 102.521 li
483.3 131.125 li
cp
f
489.301 49.4038 mo
482.807 50.48 477.84 56.1362 477.84 62.9307 cv
477.84 70.4902 483.991 76.6406 491.551 76.6406 cv
498.345 76.6406 504.001 71.6738 505.078 65.1807 cv
489.301 65.1807 li
489.301 49.4038 li
cp
491.551 81.1406 mo
481.509 81.1406 473.34 72.9717 473.34 62.9307 cv
473.34 52.8887 481.509 44.7192 491.551 44.7192 cv
493.801 44.7192 li
493.801 60.6807 li
509.762 60.6807 li
509.762 62.9307 li
509.762 72.9717 501.593 81.1406 491.551 81.1406 cv
cp
f
501.186 53.2954 mo
512.461 53.2954 li
511.506 47.5342 506.947 42.9751 501.186 42.02 cv
501.186 53.2954 li
cp
517.146 57.7954 mo
496.686 57.7954 li
496.686 37.3354 li
498.936 37.3354 li
508.977 37.3354 517.146 45.5044 517.146 55.5454 cv
517.146 57.7954 li
cp
f
554.924 42.8354 mo
529.689 42.8354 li
529.689 38.3354 li
554.924 38.3354 li
554.924 42.8354 li
cp
f
554.924 51.8354 mo
529.689 51.8354 li
529.689 47.3354 li
554.924 47.3354 li
554.924 51.8354 li
cp
f
554.924 60.8354 mo
529.689 60.8354 li
529.689 56.3354 li
554.924 56.3354 li
554.924 60.8354 li
cp
f
554.924 69.8354 mo
529.689 69.8354 li
529.689 65.3354 li
554.924 65.3354 li
554.924 69.8354 li
cp
f
542.307 78.8354 mo
529.689 78.8354 li
529.689 74.3354 li
542.307 74.3354 li
542.307 78.8354 li
cp
f
67.0068 813.905 mo
63.6758 823.124 li
60.3447 813.905 li
57.4453 813.905 li
62.0732 825.915 li
65.2783 825.915 li
69.9053 813.905 li
67.0068 813.905 li
cp
.0980392 .0941176 .0941176 rgb
f
73.2686 821.629 mo
75.1416 816.461 li
77.0137 821.629 li
73.2686 821.629 li
cp
73.5391 813.905 mo
68.9111 825.915 li
71.8105 825.915 li
72.5664 823.879 li
77.7158 823.879 li
78.4727 825.915 li
81.3711 825.915 li
76.7441 813.905 li
73.5391 813.905 li
cp
f
84.9512 813.905 mo
82.376 813.905 li
82.376 825.915 li
90.0283 825.915 li
90.0283 823.664 li
84.9512 823.664 li
84.9512 813.905 li
cp
f
99.5508 821.035 mo
99.5508 822.709 98.5967 823.862 96.7422 823.862 cv
94.8877 823.862 93.915 822.709 93.915 821.035 cv
93.915 813.905 li
91.3223 813.905 li
91.3223 821.106 li
91.3223 824.078 93.0869 826.129 96.7422 826.129 cv
100.397 826.129 102.161 824.078 102.161 821.106 cv
102.161 813.905 li
99.5508 813.905 li
99.5508 821.035 li
cp
f
113.033 816.155 mo
113.033 813.905 li
104.534 813.905 li
104.534 825.915 li
113.033 825.915 li
113.033 823.664 li
107.091 823.664 li
107.091 820.926 li
112.907 820.926 li
112.907 818.676 li
107.091 818.676 li
107.091 816.155 li
113.033 816.155 li
cp
f
85.2344 769.44 mo
80.0942 764.3 li
28.4243 712.621 li
51.1841 689.88 li
119.274 689.88 li
142.054 712.621 li
90.374 764.3 li
85.2344 769.44 li
cp
121.134 685.38 mo
49.3242 685.38 li
22.0542 712.621 li
83.2642 773.831 li
85.2344 775.8 li
87.2041 773.831 li
148.424 712.621 li
121.134 685.38 li
cp
f
85.2344 765.5 mo
68.374 714.871 li
102.084 714.871 li
85.2344 765.5 li
cp
62.1343 710.371 mo
80.0942 764.3 li
83.2642 773.831 li
85.2344 775.8 li
87.2041 773.831 li
90.374 764.3 li
108.324 710.371 li
62.1343 710.371 li
cp
f
69.231 714.869 mo
25.2393 714.869 li
25.2393 710.369 li
61.2808 710.369 li
48.3247 688.791 li
52.1831 686.474 li
69.231 714.869 li
cp
f
64.9927 716.551 mo
48.3247 688.791 li
52.1831 686.474 li
65.519 708.686 li
83.4761 686.227 li
86.9907 689.038 li
64.9927 716.551 li
cp
f
105.47 716.551 mo
83.4761 689.038 li
86.9907 686.227 li
104.944 708.686 li
118.278 686.474 li
122.136 688.791 li
105.47 716.551 li
cp
f
145.239 714.869 mo
101.232 714.869 li
118.278 686.474 li
122.136 688.791 li
109.182 710.369 li
145.239 710.369 li
145.239 714.869 li
cp
f
87.4893 667.423 mo
82.9893 667.423 li
82.9893 652.423 li
87.4893 652.423 li
87.4893 667.423 li
cp
f
99.8315 670.775 mo
95.6743 669.052 li
101.415 655.193 li
105.572 656.916 li
99.8315 670.775 li
cp
f
109.953 678.592 mo
106.771 675.411 li
117.379 664.803 li
120.561 667.985 li
109.953 678.592 li
cp
f
70.645 670.775 mo
64.9048 656.916 li
69.062 655.193 li
74.8022 669.052 li
70.645 670.775 li
cp
f
60.5229 678.592 mo
49.9175 667.985 li
53.1001 664.803 li
63.7056 675.411 li
60.5229 678.592 li
cp
f
900.917 172.258 mo
900.917 171.539 901.528 171.07 902.608 171.07 cv
903.833 171.07 905.13 171.484 906.103 172.384 cv
907.524 170.476 li
906.336 169.377 904.751 168.801 902.843 168.801 cv
900.017 168.801 898.288 170.458 898.288 172.457 cv
898.288 176.976 905.202 175.517 905.202 177.606 cv
905.202 178.308 904.535 178.938 903.112 178.938 cv
901.456 178.938 900.142 178.182 899.296 177.3 cv
897.892 179.298 li
899.026 180.433 900.683 181.207 903.005 181.207 cv
906.228 181.207 907.813 179.55 907.813 177.354 cv
907.813 172.871 900.917 174.149 900.917 172.258 cv
cp
f
918.126 168.981 mo
908.548 168.981 li
908.548 171.232 li
912.058 171.232 li
912.058 180.991 li
914.634 180.991 li
914.634 171.232 li
918.126 171.232 li
918.126 168.981 li
cp
f
921.706 176.706 mo
923.579 171.539 li
925.451 176.706 li
921.706 176.706 li
cp
921.976 168.981 mo
917.349 180.991 li
920.247 180.991 li
921.004 178.957 li
926.153 178.957 li
926.909 180.991 li
929.809 180.991 li
925.181 168.981 li
921.976 168.981 li
cp
f
929.031 171.232 mo
932.542 171.232 li
932.542 180.991 li
935.117 180.991 li
935.117 171.232 li
938.61 171.232 li
938.61 168.981 li
929.031 168.981 li
929.031 171.232 li
cp
f
940.245 180.991 mo
942.802 180.991 li
942.802 168.981 li
940.245 168.981 li
940.245 180.991 li
cp
f
947.374 172.258 mo
947.374 171.539 947.985 171.07 949.065 171.07 cv
950.29 171.07 951.587 171.484 952.56 172.384 cv
953.981 170.476 li
952.793 169.377 951.208 168.801 949.3 168.801 cv
946.474 168.801 944.745 170.458 944.745 172.457 cv
944.745 176.976 951.659 175.517 951.659 177.606 cv
951.659 178.308 950.992 178.938 949.569 178.938 cv
947.913 178.938 946.599 178.182 945.753 177.3 cv
944.349 179.298 li
945.483 180.433 947.14 181.207 949.462 181.207 cv
952.685 181.207 954.27 179.55 954.27 177.354 cv
954.27 172.871 947.374 174.149 947.374 172.258 cv
cp
f
955.005 171.232 mo
958.515 171.232 li
958.515 180.991 li
961.091 180.991 li
961.091 171.232 li
964.583 171.232 li
964.583 168.981 li
955.005 168.981 li
955.005 171.232 li
cp
f
966.218 180.991 mo
968.774 180.991 li
968.774 168.981 li
966.218 168.981 li
966.218 180.991 li
cp
f
976.983 171.052 mo
978.208 171.052 979.288 171.827 979.792 172.798 cv
981.989 171.718 li
981.143 170.206 979.612 168.784 976.983 168.784 cv
973.364 168.784 970.573 171.286 970.573 174.996 cv
970.573 178.686 973.364 181.207 976.983 181.207 cv
979.612 181.207 981.143 179.749 981.989 178.254 cv
979.792 177.192 li
979.288 178.165 978.208 178.938 976.983 178.938 cv
974.786 178.938 973.202 177.264 973.202 174.996 cv
973.202 172.726 974.786 171.052 976.983 171.052 cv
cp
f
985.712 172.258 mo
985.712 171.539 986.324 171.07 987.405 171.07 cv
988.629 171.07 989.925 171.484 990.897 172.384 cv
992.32 170.476 li
991.132 169.377 989.548 168.801 987.639 168.801 cv
984.812 168.801 983.083 170.458 983.083 172.457 cv
983.083 176.976 989.997 175.517 989.997 177.606 cv
989.997 178.308 989.331 178.938 987.909 178.938 cv
986.253 178.938 984.938 178.182 984.092 177.3 cv
982.687 179.298 li
983.821 180.433 985.478 181.207 987.801 181.207 cv
991.024 181.207 992.608 179.55 992.608 177.354 cv
992.608 172.871 985.712 174.149 985.712 172.258 cv
cp
f
974.56 94.3423 mo
971.249 91.2935 li
972.233 90.2256 973.161 89.0845 974.007 87.9009 cv
977.667 90.5181 li
976.714 91.8516 975.668 93.1382 974.56 94.3423 cv
cp
967.057 100.703 mo
964.592 96.938 li
965.807 96.1426 966.985 95.2622 968.095 94.3218 cv
971.005 97.7544 li
969.754 98.8145 968.426 99.8062 967.057 100.703 cv
cp
958.218 105.029 mo
956.759 100.772 li
958.13 100.302 959.487 99.7393 960.794 99.0996 cv
962.772 103.141 li
961.299 103.863 959.767 104.498 958.218 105.029 cv
cp
948.584 107.037 mo
948.221 102.551 li
949.67 102.434 951.125 102.224 952.546 101.929 cv
953.462 106.334 li
951.86 106.667 950.219 106.904 948.584 107.037 cv
cp
943.661 107.134 mo
942.02 107.067 940.37 106.896 938.758 106.628 cv
939.498 102.189 li
940.927 102.427 942.39 102.578 943.847 102.638 cv
943.661 107.134 li
cp
f
937.009 63.9819 mo
904.443 96.5459 li
898.407 88.0854 895.127 77.9121 895.127 67.4258 cv
895.127 42.8013 913.168 21.9302 937.009 17.9346 cv
937.009 63.9819 li
cp
890.627 67.4258 mo
890.627 80.7505 895.377 93.3442 904.051 103.303 cv
941.509 65.8457 li
941.509 12.8774 li
913.123 14.8447 890.627 38.5503 890.627 67.4258 cv
cp
f
945.324 117.623 mo
934.836 117.623 924.663 114.343 916.205 108.307 cv
948.769 75.7422 li
994.815 75.7422 li
990.819 99.5825 969.948 117.623 945.324 117.623 cv
cp
946.904 71.2422 mo
909.448 108.7 li
919.405 117.375 932 122.123 945.324 122.123 cv
974.199 122.123 997.905 99.6265 999.873 71.2422 cv
946.904 71.2422 li
cp
f
998.182 53.4224 mo
997.74 51.7607 997.222 50.1313 996.632 48.5356 cv
981.558 63.6099 li
987.994 63.6099 li
998.182 53.4224 li
cp
f
957.8 63.6099 mo
964.236 63.6099 li
990.773 37.0732 li
989.917 35.7954 989.01 34.5566 988.052 33.3579 cv
957.8 63.6099 li
cp
f
999.873 63.6094 mo
999.738 61.6709 999.491 59.7642 999.159 57.8857 cv
993.436 63.6099 li
999.873 63.6099 li
999.873 63.6094 li
cp
f
995.044 44.6816 mo
994.377 43.2285 993.646 41.8101 992.859 40.4287 cv
969.679 63.6099 li
976.115 63.6099 li
995.044 44.6816 li
cp
f
964.215 16.1177 mo
962.618 15.5288 960.989 15.0093 959.327 14.5688 cv
949.141 24.7559 li
949.141 31.1924 li
964.215 16.1177 li
cp
f
979.392 24.6978 mo
978.193 23.7402 976.954 22.8325 975.677 21.9766 cv
949.141 48.5132 li
949.141 54.9502 li
979.392 24.6978 li
cp
f
972.321 19.8906 mo
970.939 19.103 969.521 18.373 968.068 17.7061 cv
949.141 36.6348 li
949.141 43.0713 li
972.321 19.8906 li
cp
f
985.547 30.4219 mo
984.519 29.3052 983.445 28.231 982.328 27.2031 cv
949.141 60.3916 li
949.141 63.6099 li
952.358 63.6099 li
985.547 30.4219 li
cp
f
949.141 19.314 mo
954.864 13.5903 li
952.985 13.2588 951.078 13.0117 949.141 12.8774 cv
949.141 19.314 li
cp
f
1007.75 115.228 mo
989.797 115.228 li
981.399 106.832 li
984.581 103.649 li
991.66 110.728 li
1007.75 110.728 li
1007.75 115.228 li
cp
f
1007.75 124.332 mo
990.729 124.332 li
990.729 119.832 li
1007.75 119.832 li
1007.75 124.332 li
cp
f
905.919 31.3501 mo
898.84 24.2715 li
882.75 24.2715 li
882.75 19.7715 li
900.703 19.7715 li
909.101 28.1675 li
905.919 31.3501 li
cp
f
899.771 15.168 mo
882.75 15.168 li
882.75 10.668 li
899.771 10.668 li
899.771 15.168 li
cp
f
30.9697 391.721 mo
32.8423 386.554 li
34.7148 391.721 li
30.9697 391.721 li
cp
31.2397 383.997 mo
26.6123 396.006 li
29.5112 396.006 li
30.2676 393.972 li
35.417 393.972 li
36.1733 396.006 li
39.0723 396.006 li
34.4448 383.997 li
31.2397 383.997 li
cp
f
45.4067 386.068 mo
46.6313 386.068 47.7114 386.842 48.2158 387.814 cv
50.4121 386.734 li
49.5659 385.221 48.0356 383.799 45.4067 383.799 cv
41.7876 383.799 38.9971 386.301 38.9971 390.011 cv
38.9971 393.702 41.7876 396.222 45.4067 396.222 cv
48.0356 396.222 49.5659 394.764 50.4121 393.27 cv
48.2158 392.208 li
47.7114 393.18 46.6313 393.954 45.4067 393.954 cv
43.21 393.954 41.626 392.28 41.626 390.011 cv
41.626 387.742 43.21 386.068 45.4067 386.068 cv
cp
f
57.7725 386.068 mo
58.9971 386.068 60.0771 386.842 60.5815 387.814 cv
62.7783 386.734 li
61.9316 385.221 60.4014 383.799 57.7725 383.799 cv
54.1533 383.799 51.3628 386.301 51.3628 390.011 cv
51.3628 393.702 54.1533 396.222 57.7725 396.222 cv
60.4014 396.222 61.9316 394.764 62.7783 393.27 cv
60.5815 392.208 li
60.0771 393.18 58.9971 393.954 57.7725 393.954 cv
55.5762 393.954 53.9912 392.28 53.9912 390.011 cv
53.9912 387.742 55.5762 386.068 57.7725 386.068 cv
cp
f
70.0122 393.954 mo
67.7798 393.954 66.3574 392.244 66.3574 390.011 cv
66.3574 387.76 67.7798 386.068 70.0122 386.068 cv
72.2271 386.068 73.6494 387.76 73.6494 390.011 cv
73.6494 392.244 72.2271 393.954 70.0122 393.954 cv
cp
70.0122 383.799 mo
66.375 383.799 63.7285 386.392 63.7285 390.011 cv
63.7285 393.629 66.375 396.222 70.0122 396.222 cv
73.6313 396.222 76.2783 393.629 76.2783 390.011 cv
76.2783 386.392 73.6313 383.799 70.0122 383.799 cv
cp
f
86.3032 391.127 mo
86.3032 392.801 85.3486 393.954 83.4941 393.954 cv
81.6396 393.954 80.6675 392.801 80.6675 391.127 cv
80.6675 383.997 li
78.0747 383.997 li
78.0747 391.199 li
78.0747 394.17 79.8389 396.222 83.4941 396.222 cv
87.1494 396.222 88.9141 394.17 88.9141 391.199 cv
88.9141 383.997 li
86.3032 383.997 li
86.3032 391.127 li
cp
f
99.479 391.542 mo
93.915 383.997 li
91.2866 383.997 li
91.2866 396.006 li
93.8433 396.006 li
93.8433 388.174 li
99.5688 396.006 li
102.036 396.006 li
102.036 383.997 li
99.479 383.997 li
99.479 391.542 li
cp
f
103.67 386.248 mo
107.181 386.248 li
107.181 396.006 li
109.756 396.006 li
109.756 386.248 li
113.249 386.248 li
113.249 383.997 li
103.67 383.997 li
103.67 386.248 li
cp
f
114.884 396.006 mo
117.44 396.006 li
117.44 383.997 li
114.884 383.997 li
114.884 396.006 li
cp
f
128.008 391.542 mo
122.444 383.997 li
119.815 383.997 li
119.815 396.006 li
122.372 396.006 li
122.372 388.174 li
128.098 396.006 li
130.564 396.006 li
130.564 383.997 li
128.008 383.997 li
128.008 391.542 li
cp
f
138.141 389.363 mo
138.141 391.595 li
141.31 391.595 li
141.31 393.036 li
140.823 393.486 139.833 393.954 138.771 393.954 cv
136.574 393.954 134.989 392.28 134.989 390.011 cv
134.989 387.742 136.574 386.068 138.771 386.068 cv
140.031 386.068 141.057 386.788 141.615 387.634 cv
143.722 386.482 li
142.822 385.059 141.255 383.799 138.771 383.799 cv
135.242 383.799 132.361 386.211 132.361 390.011 cv
132.361 393.792 135.242 396.222 138.771 396.222 cv
140.931 396.222 142.642 395.34 143.866 393.972 cv
143.866 389.363 li
138.141 389.363 li
cp
f
49.9893 295.253 mo
60.4893 295.253 li
60.4893 284.753 li
49.9893 284.753 li
49.9893 295.253 li
cp
64.9893 299.753 mo
45.4893 299.753 li
45.4893 280.253 li
64.9893 280.253 li
64.9893 299.753 li
cp
.0952911 .0952911 .0952911 rgb
f
79.9893 295.253 mo
90.4893 295.253 li
90.4893 284.753 li
79.9893 284.753 li
79.9893 295.253 li
cp
94.9893 299.753 mo
75.4893 299.753 li
75.4893 280.253 li
94.9893 280.253 li
94.9893 299.753 li
cp
f
109.989 295.253 mo
120.489 295.253 li
120.489 284.753 li
109.989 284.753 li
109.989 295.253 li
cp
124.989 299.753 mo
105.489 299.753 li
105.489 280.253 li
124.989 280.253 li
124.989 299.753 li
cp
f
49.9893 325.253 mo
60.4893 325.253 li
60.4893 314.753 li
49.9893 314.753 li
49.9893 325.253 li
cp
64.9893 329.753 mo
45.4893 329.753 li
45.4893 310.253 li
64.9893 310.253 li
64.9893 329.753 li
cp
f
79.9893 325.253 mo
90.4893 325.253 li
90.4893 314.753 li
79.9893 314.753 li
79.9893 325.253 li
cp
94.9893 329.753 mo
75.4893 329.753 li
75.4893 310.253 li
94.9893 310.253 li
94.9893 329.753 li
cp
f
109.989 325.253 mo
120.489 325.253 li
120.489 314.753 li
109.989 314.753 li
109.989 325.253 li
cp
124.989 329.753 mo
105.489 329.753 li
105.489 310.253 li
124.989 310.253 li
124.989 329.753 li
cp
f
34.9893 340.253 mo
135.489 340.253 li
135.489 224.753 li
34.9893 224.753 li
34.9893 340.253 li
cp
139.989 344.753 mo
30.4893 344.753 li
30.4893 220.253 li
139.989 220.253 li
139.989 344.753 li
cp
f
120.739 265.503 mo
49.7393 265.503 li
49.7393 239.503 li
120.739 239.503 li
120.739 265.503 li
cp
45.2393 235.003 mo
45.2393 270.003 li
125.239 270.003 li
125.239 235.003 li
45.2393 235.003 li
cp
f
116.239 257.503 mo
111.739 257.503 li
111.739 247.503 li
116.239 247.503 li
116.239 257.503 li
cp
f
107.239 257.503 mo
102.739 257.503 li
102.739 247.503 li
107.239 247.503 li
107.239 257.503 li
cp
f
98.2393 257.503 mo
93.7393 257.503 li
93.7393 247.503 li
98.2393 247.503 li
98.2393 257.503 li
cp
f
89.2393 257.503 mo
84.7393 257.503 li
84.7393 247.503 li
89.2393 247.503 li
89.2393 257.503 li
cp
f
468.651 389.461 mo
465.95 389.461 li
465.95 386.239 li
468.651 386.239 li
469.659 386.239 470.434 386.851 470.434 387.859 cv
470.434 388.85 469.659 389.461 468.651 389.461 cv
cp
469.012 383.988 mo
463.394 383.988 li
463.394 395.998 li
465.95 395.998 li
465.95 391.712 li
469.012 391.712 li
471.604 391.712 473.045 389.948 473.045 387.859 cv
473.045 385.752 471.622 383.988 469.012 383.988 cv
cp
.0980392 .0941176 .0941176 rgb
f
476.408 391.712 mo
478.281 386.545 li
480.153 391.712 li
476.408 391.712 li
cp
476.679 383.988 mo
472.051 395.998 li
474.95 395.998 li
475.706 393.963 li
480.855 393.963 li
481.612 395.998 li
484.511 395.998 li
479.884 383.988 li
476.679 383.988 li
cp
f
490.881 389.479 mo
488.181 389.479 li
488.181 386.239 li
490.881 386.239 li
491.89 386.239 492.664 386.851 492.664 387.841 cv
492.664 388.868 491.89 389.479 490.881 389.479 cv
cp
495.293 387.859 mo
495.293 385.626 493.744 383.988 491.241 383.988 cv
485.624 383.988 li
485.624 395.998 li
488.181 395.998 li
488.181 391.73 li
490.053 391.73 li
492.412 395.998 li
495.364 395.998 li
492.646 391.424 li
493.942 391.118 495.293 389.966 495.293 387.859 cv
cp
f
496.279 386.239 mo
499.79 386.239 li
499.79 395.998 li
502.365 395.998 li
502.365 386.239 li
505.858 386.239 li
505.858 383.988 li
496.279 383.988 li
496.279 386.239 li
cp
f
515.686 391.532 mo
510.122 383.988 li
507.493 383.988 li
507.493 395.998 li
510.05 395.998 li
510.05 388.165 li
515.775 395.998 li
518.242 395.998 li
518.242 383.988 li
515.686 383.988 li
515.686 391.532 li
cp
f
520.615 395.998 mo
529.113 395.998 li
529.113 393.747 li
523.172 393.747 li
523.172 391.01 li
528.988 391.01 li
528.988 388.759 li
523.172 388.759 li
523.172 386.239 li
529.113 386.239 li
529.113 383.988 li
520.615 383.988 li
520.615 395.998 li
cp
f
536.366 389.479 mo
533.666 389.479 li
533.666 386.239 li
536.366 386.239 li
537.375 386.239 538.148 386.851 538.148 387.841 cv
538.148 388.868 537.375 389.479 536.366 389.479 cv
cp
540.777 387.859 mo
540.777 385.626 539.229 383.988 536.727 383.988 cv
531.109 383.988 li
531.109 395.998 li
533.666 395.998 li
533.666 391.73 li
535.538 391.73 li
537.896 395.998 li
540.85 395.998 li
538.131 391.424 li
539.428 391.118 540.777 389.966 540.777 387.859 cv
cp
f
544.879 387.265 mo
544.879 386.545 545.491 386.077 546.572 386.077 cv
547.796 386.077 549.092 386.491 550.064 387.391 cv
551.487 385.482 li
550.299 384.384 548.715 383.808 546.806 383.808 cv
543.979 383.808 542.25 385.464 542.25 387.463 cv
542.25 391.982 549.164 390.524 549.164 392.613 cv
549.164 393.315 548.498 393.945 547.076 393.945 cv
545.42 393.945 544.105 393.189 543.259 392.307 cv
541.854 394.305 li
542.988 395.439 544.645 396.213 546.968 396.213 cv
550.191 396.213 551.775 394.557 551.775 392.36 cv
551.775 387.877 544.879 389.156 544.879 387.265 cv
cp
f
561.711 388.706 mo
556.039 388.706 li
556.039 383.988 li
553.482 383.988 li
553.482 395.998 li
556.039 395.998 li
556.039 390.938 li
561.711 390.938 li
561.711 395.998 li
564.285 395.998 li
564.285 383.988 li
561.711 383.988 li
561.711 388.706 li
cp
f
566.641 395.998 mo
569.197 395.998 li
569.197 383.988 li
566.641 383.988 li
566.641 395.998 li
cp
f
576.829 389.461 mo
574.129 389.461 li
574.129 386.239 li
576.829 386.239 li
577.838 386.239 578.611 386.851 578.611 387.859 cv
578.611 388.85 577.838 389.461 576.829 389.461 cv
cp
577.189 383.988 mo
571.572 383.988 li
571.572 395.998 li
574.129 395.998 li
574.129 391.712 li
577.189 391.712 li
579.782 391.712 581.223 389.948 581.223 387.859 cv
581.223 385.752 579.801 383.988 577.189 383.988 cv
cp
f
554.93 304.977 mo
551.746 301.796 li
564.084 289.445 li
567.268 292.625 li
554.93 304.977 li
cp
.0952911 .0952911 .0952911 rgb
f
489.694 304.972 mo
477.351 292.626 li
480.534 289.444 li
492.876 301.791 li
489.694 304.972 li
cp
f
520.718 273.948 mo
508.378 261.601 li
511.561 258.419 li
523.901 270.766 li
520.718 273.948 li
cp
f
492.903 304.945 mo
492.861 304.988 li
492.256 305.59 491.922 306.397 491.923 307.259 cv
491.922 308.126 492.26 308.945 492.873 309.566 cv
493.472 310.161 494.288 310.497 495.154 310.497 cv
495.158 310.497 li
496.014 310.497 496.819 310.169 497.427 309.574 cv
497.44 309.561 li
498.056 308.939 498.395 308.121 498.395 307.258 cv
498.395 306.393 498.061 305.584 497.454 304.981 cv
496.22 303.753 494.157 303.741 492.903 304.945 cv
cp
495.158 314.997 mo
495.158 314.997 495.158 314.997 495.158 314.997 cv
495.153 314.997 li
493.092 314.997 491.15 314.197 489.687 312.744 cv
488.221 311.26 487.422 309.317 487.423 307.259 cv
487.422 305.232 488.195 303.328 489.602 301.884 cv
489.696 301.787 li
491.17 300.326 493.111 299.521 495.162 299.521 cv
497.215 299.521 499.156 300.327 500.626 301.79 cv
502.088 303.242 502.895 305.185 502.895 307.258 cv
502.895 309.272 502.126 311.176 500.728 312.634 cv
500.626 312.739 li
499.166 314.195 497.224 314.997 495.158 314.997 cv
cp
f
500.681 312.684 mo
500.626 312.739 li
500.011 313.353 499.672 314.164 499.672 315.022 cv
499.673 315.884 500.011 316.694 500.622 317.301 cv
501.827 318.522 503.917 318.525 505.111 317.39 cv
505.201 317.298 li
505.817 316.682 506.156 315.872 506.156 315.017 cv
506.156 314.162 505.816 313.35 505.199 312.732 cv
504.012 311.525 501.896 311.502 500.681 312.684 cv
cp
502.906 322.754 mo
500.824 322.754 498.88 321.945 497.434 320.476 cv
495.985 319.038 495.175 317.096 495.172 315.026 cv
495.172 313.005 495.945 311.103 497.352 309.65 cv
497.44 309.561 li
498.893 308.093 500.835 307.285 502.909 307.285 cv
505.001 307.285 506.951 308.095 508.396 309.565 cv
509.85 311.021 510.656 312.961 510.656 315.017 cv
510.656 316.994 509.911 318.862 508.551 320.307 cv
508.389 320.477 li
506.941 321.945 504.994 322.754 502.906 322.754 cv
cp
f
508.438 320.426 mo
508.389 320.477 li
507.775 321.1 507.438 321.919 507.438 322.785 cv
507.438 323.648 507.771 324.457 508.377 325.063 cv
509.614 326.29 511.717 326.294 512.965 325.058 cv
513.573 324.451 513.907 323.644 513.907 322.781 cv
513.907 321.917 513.567 321.094 512.951 320.466 cv
511.778 319.3 509.637 319.282 508.438 320.426 cv
cp
510.669 330.518 mo
510.668 330.518 li
508.617 330.518 506.676 329.713 505.202 328.252 cv
503.74 326.79 502.938 324.851 502.938 322.785 cv
502.938 320.807 503.677 318.934 505.024 317.485 cv
505.201 317.298 li
506.653 315.846 508.596 315.046 510.671 315.046 cv
512.745 315.046 514.685 315.844 516.143 317.294 cv
517.609 318.788 518.407 320.73 518.407 322.781 cv
518.406 324.85 517.603 326.789 516.145 328.242 cv
514.661 329.713 512.72 330.517 510.669 330.518 cv
cp
f
518.425 327.291 mo
517.57 327.291 516.76 327.629 516.145 328.242 cv
515.523 328.858 515.187 329.667 515.187 330.533 cv
515.187 331.401 515.523 332.214 516.134 332.82 cv
516.752 333.438 517.563 333.776 518.421 333.777 cv
519.271 333.777 520.09 333.432 520.729 332.806 cv
521.327 332.215 521.659 331.409 521.658 330.539 cv
521.657 329.656 521.326 328.845 520.725 328.254 cv
520.096 327.629 519.282 327.291 518.425 327.291 cv
cp
518.419 338.277 mo
518.416 338.277 li
516.357 338.275 514.418 337.469 512.958 336.008 cv
511.497 334.558 510.688 332.612 510.687 330.533 cv
510.687 328.457 511.496 326.513 512.965 325.058 cv
514.433 323.595 516.37 322.791 518.424 322.791 cv
520.479 322.791 522.418 323.594 523.887 325.052 cv
525.347 326.485 526.157 328.437 526.158 330.536 cv
526.159 332.621 525.352 334.566 523.884 336.014 cv
522.394 337.475 520.454 338.277 518.419 338.277 cv
cp
f
473.242 299.922 mo
450.322 277.001 li
453.504 273.819 li
473.242 293.558 li
512.483 254.311 li
492.744 234.57 li
495.926 231.388 li
518.847 254.311 li
473.242 299.922 li
cp
f
571.373 299.926 mo
525.774 254.31 li
548.692 231.389 li
551.874 234.571 li
532.138 254.31 li
571.373 293.562 li
591.112 273.822 li
594.294 277.003 li
571.373 299.926 li
cp
f
528.169 340.248 mo
526.122 340.248 524.181 339.447 522.702 337.993 cv
520.713 336.003 li
523.895 332.821 li
525.871 334.798 li
527.106 336.012 529.225 336.023 530.442 334.801 cv
531.062 334.182 531.399 333.369 531.398 332.507 cv
531.399 331.644 531.062 330.833 530.445 330.216 cv
533.629 327.036 li
534.848 328.256 536.969 328.272 538.211 327.033 cv
538.822 326.423 539.158 325.615 539.158 324.756 cv
539.158 323.896 538.817 323.076 538.197 322.447 cv
541.402 319.288 li
541.997 319.892 542.804 320.225 543.672 320.225 cv
543.673 320.225 543.674 320.225 543.675 320.225 cv
544.543 320.225 545.356 319.888 545.967 319.278 cv
546.573 318.672 546.906 317.862 546.906 316.995 cv
546.906 316.127 546.573 315.316 545.967 314.71 cv
549.15 311.529 li
549.756 312.135 550.566 312.469 551.434 312.469 cv
551.435 312.469 li
552.301 312.469 553.109 312.135 553.714 311.53 cv
554.327 310.916 554.663 310.102 554.662 309.234 cv
554.663 308.364 554.332 307.561 553.729 306.968 cv
539.863 293.094 li
537.351 294.944 534.325 295.943 531.146 295.944 cv
531.145 295.944 li
527.446 295.944 523.957 294.592 521.239 292.122 cv
513.838 299.522 li
512.366 300.99 510.425 301.796 508.37 301.796 cv
508.367 301.796 508.364 301.797 508.36 301.796 cv
506.306 301.796 504.365 300.99 502.896 299.526 cv
501.435 298.072 500.63 296.132 500.63 294.065 cv
500.63 292.019 501.429 290.079 502.878 288.602 cv
533.058 258.418 li
536.239 261.6 li
506.076 291.769 li
505.471 292.385 505.13 293.206 505.13 294.065 cv
505.13 294.926 505.464 295.733 506.072 296.338 cv
506.692 296.957 507.505 297.296 508.363 297.296 cv
508.364 297.296 508.366 297.296 508.367 297.296 cv
509.226 297.296 510.039 296.956 510.659 296.338 cv
521.228 285.769 li
523.899 288.442 li
525.834 290.377 528.407 291.444 531.146 291.444 cv
533.883 291.444 536.457 290.377 538.392 288.44 cv
539.983 286.848 li
556.897 303.773 li
558.355 305.206 559.165 307.15 559.162 309.234 cv
559.165 311.3 558.36 313.247 556.897 314.709 cv
555.445 316.166 553.505 316.969 551.436 316.969 cv
551.427 316.97 551.416 316.969 551.406 316.969 cv
551.406 316.978 551.406 316.986 551.406 316.995 cv
551.406 319.066 550.604 321.007 549.148 322.46 cv
547.69 323.919 545.746 324.725 543.676 324.725 cv
543.664 324.726 543.663 324.725 543.658 324.725 cv
543.658 324.735 543.658 324.746 543.658 324.756 cv
543.658 326.818 542.853 328.758 541.391 330.218 cv
539.919 331.688 537.969 332.5 535.898 332.488 cv
535.898 332.495 535.898 332.5 535.898 332.507 cv
535.901 334.568 535.094 336.514 533.626 337.98 cv
532.171 339.441 530.231 340.248 528.169 340.248 cv
cp
f
572.039 287.853 mo
568.857 284.671 li
572.039 281.488 li
575.22 284.671 li
572.039 287.853 li
cp
f
472.578 287.854 mo
469.396 284.671 li
472.578 281.489 li
475.76 284.671 li
472.578 287.854 li
cp
f
921.708 599.01 mo
912.13 599.01 li
912.13 601.262 li
915.641 601.262 li
915.641 611.02 li
918.216 611.02 li
918.216 601.262 li
921.708 601.262 li
921.708 599.01 li
cp
.0980392 .0941176 .0941176 rgb
f
925.288 606.735 mo
927.161 601.568 li
929.033 606.735 li
925.288 606.735 li
cp
925.558 599.01 mo
920.931 611.02 li
923.829 611.02 li
924.586 608.986 li
929.735 608.986 li
930.491 611.02 li
933.391 611.02 li
928.763 599.01 li
925.558 599.01 li
cp
f
939.761 604.502 mo
937.06 604.502 li
937.06 601.262 li
939.761 601.262 li
940.769 601.262 941.544 601.874 941.544 602.864 cv
941.544 603.891 940.769 604.502 939.761 604.502 cv
cp
944.173 602.881 mo
944.173 600.649 942.624 599.01 940.121 599.01 cv
934.503 599.01 li
934.503 611.02 li
937.06 611.02 li
937.06 606.753 li
938.933 606.753 li
941.292 611.02 li
944.244 611.02 li
941.525 606.448 li
942.821 606.141 944.173 604.989 944.173 602.881 cv
cp
f
951.28 606.61 mo
954.45 606.61 li
954.45 608.049 li
953.964 608.5 952.974 608.967 951.911 608.967 cv
949.714 608.967 948.13 607.293 948.13 605.025 cv
948.13 602.756 949.714 601.082 951.911 601.082 cv
953.171 601.082 954.197 601.801 954.756 602.648 cv
956.862 601.496 li
955.962 600.073 954.396 598.813 951.911 598.813 cv
948.382 598.813 945.501 601.225 945.501 605.025 cv
945.501 608.805 948.382 611.237 951.911 611.237 cv
954.071 611.237 955.782 610.354 957.007 608.986 cv
957.007 604.376 li
951.28 604.376 li
951.28 606.61 li
cp
f
959.037 611.02 mo
967.536 611.02 li
967.536 608.77 li
961.594 608.77 li
961.594 606.034 li
967.409 606.034 li
967.409 603.782 li
961.594 603.782 li
961.594 601.262 li
967.536 601.262 li
967.536 599.01 li
959.037 599.01 li
959.037 611.02 li
cp
f
968.792 599.01 mo
968.792 601.262 li
972.304 601.262 li
972.304 611.02 li
974.878 611.02 li
974.878 601.262 li
978.371 601.262 li
978.371 599.01 li
968.792 599.01 li
cp
f
919.67 557.518 mo
915.17 557.518 li
915.17 528.09 li
919.67 528.09 li
919.67 557.518 li
cp
.0952911 .0952911 .0952911 rgb
f
975.33 557.518 mo
970.83 557.518 li
970.83 528.09 li
975.33 528.09 li
975.33 557.518 li
cp
f
973.08 548.155 mo
917.42 548.155 li
917.42 543.655 li
973.08 543.655 li
973.08 548.155 li
cp
f
945.25 439.768 mo
919.165 439.768 897.943 460.99 897.943 487.075 cv
897.943 513.163 919.165 534.387 945.25 534.387 cv
971.333 534.387 992.554 513.163 992.554 487.075 cv
992.554 460.99 971.333 439.768 945.25 439.768 cv
cp
945.25 538.887 mo
916.684 538.887 893.443 515.644 893.443 487.075 cv
893.443 458.508 916.684 435.268 945.25 435.268 cv
973.814 435.268 997.054 458.508 997.054 487.075 cv
997.054 515.644 973.814 538.887 945.25 538.887 cv
cp
f
945.25 452.62 mo
926.251 452.62 910.795 468.076 910.795 487.074 cv
910.795 506.076 926.251 521.535 945.25 521.535 cv
964.246 521.535 979.701 506.076 979.701 487.074 cv
979.701 468.076 964.246 452.62 945.25 452.62 cv
cp
945.25 526.035 mo
923.771 526.035 906.295 508.557 906.295 487.074 cv
906.295 465.595 923.771 448.12 945.25 448.12 cv
966.728 448.12 984.201 465.595 984.201 487.074 cv
984.201 508.557 966.728 526.035 945.25 526.035 cv
cp
f
945.25 465.473 mo
933.338 465.473 923.646 475.163 923.646 487.075 cv
923.646 498.99 933.338 508.683 945.25 508.683 cv
957.16 508.683 966.85 498.99 966.85 487.075 cv
966.85 475.163 957.16 465.473 945.25 465.473 cv
cp
945.25 513.183 mo
930.856 513.183 919.146 501.471 919.146 487.075 cv
919.146 472.682 930.856 460.973 945.25 460.973 cv
959.642 460.973 971.35 472.682 971.35 487.075 cv
971.35 501.471 959.642 513.183 945.25 513.183 cv
cp
f
945.25 478.325 mo
940.424 478.325 936.498 482.25 936.498 487.075 cv
936.498 491.903 940.424 495.831 945.25 495.831 cv
950.073 495.831 953.998 491.903 953.998 487.075 cv
953.998 482.25 950.073 478.325 945.25 478.325 cv
cp
945.25 500.331 mo
937.942 500.331 931.998 494.384 931.998 487.075 cv
931.998 479.769 937.942 473.825 945.25 473.825 cv
952.555 473.825 958.498 479.769 958.498 487.075 cv
958.498 494.384 952.555 500.331 945.25 500.331 cv
cp
f
895.693 489.325 mo
872.896 489.325 li
872.896 484.825 li
895.693 484.825 li
895.693 489.325 li
cp
f
878.241 495.605 mo
869.715 487.074 li
878.242 478.548 li
881.424 481.73 li
876.078 487.075 li
881.425 492.423 li
878.241 495.605 li
cp
f
1010.67 489.325 mo
945.25 489.325 li
945.25 484.825 li
1010.67 484.825 li
1010.67 489.325 li
cp
f
1007.09 495.605 mo
998.565 487.074 li
1007.09 478.548 li
1010.27 481.73 li
1004.93 487.075 li
1010.28 492.423 li
1007.09 495.605 li
cp
f
1016.01 495.605 mo
1007.49 487.074 li
1016.01 478.548 li
1019.19 481.73 li
1013.85 487.075 li
1019.2 492.423 li
1016.01 495.605 li
cp
f
696.223 393.756 mo
692.91 393.756 li
692.91 391.019 li
696.223 391.019 li
697.213 391.019 697.753 391.631 697.753 392.387 cv
697.753 393.251 697.177 393.756 696.223 393.756 cv
cp
692.91 386.248 mo
696.115 386.248 li
696.979 386.248 697.52 386.77 697.52 387.508 cv
697.52 388.283 696.979 388.768 696.115 388.768 cv
692.91 388.768 li
692.91 386.248 li
cp
698.059 389.813 mo
699.193 389.579 700.13 388.552 700.13 387.058 cv
700.13 385.456 698.959 383.997 696.673 383.997 cv
690.354 383.997 li
690.354 396.006 li
696.871 396.006 li
699.176 396.006 700.363 394.566 700.363 392.748 cv
700.363 391.253 699.355 390.011 698.059 389.813 cv
cp
.0980392 .0941176 .0941176 rgb
f
705.384 391.721 mo
707.256 386.554 li
709.129 391.721 li
705.384 391.721 li
cp
705.654 383.997 mo
701.027 396.006 li
703.926 396.006 li
704.682 393.972 li
709.831 393.972 li
710.588 396.006 li
713.486 396.006 li
708.859 383.997 li
705.654 383.997 li
cp
f
717.066 383.997 mo
714.49 383.997 li
714.49 396.006 li
722.143 396.006 li
722.143 393.756 li
717.066 393.756 li
717.066 383.997 li
cp
f
726.966 391.721 mo
728.838 386.554 li
730.711 391.721 li
726.966 391.721 li
cp
727.236 383.997 mo
722.609 396.006 li
725.508 396.006 li
726.264 393.972 li
731.413 393.972 li
732.17 396.006 li
735.068 396.006 li
730.441 383.997 li
727.236 383.997 li
cp
f
744.373 391.542 mo
738.811 383.997 li
736.182 383.997 li
736.182 396.006 li
738.738 396.006 li
738.738 388.174 li
744.463 396.006 li
746.93 396.006 li
746.93 383.997 li
744.373 383.997 li
744.373 391.542 li
cp
f
755.137 386.068 mo
756.361 386.068 757.441 386.842 757.945 387.814 cv
760.143 386.734 li
759.295 385.221 757.766 383.799 755.137 383.799 cv
751.518 383.799 748.727 386.301 748.727 390.011 cv
748.727 393.702 751.518 396.222 755.137 396.222 cv
757.766 396.222 759.295 394.764 760.143 393.27 cv
757.945 392.208 li
757.441 393.18 756.361 393.954 755.137 393.954 cv
752.939 393.954 751.355 392.28 751.355 390.011 cv
751.355 387.742 752.939 386.068 755.137 386.068 cv
cp
f
770.167 386.248 mo
770.167 383.997 li
761.668 383.997 li
761.668 396.006 li
770.167 396.006 li
770.167 393.756 li
764.225 393.756 li
764.225 391.019 li
770.041 391.019 li
770.041 388.768 li
764.225 388.768 li
764.225 386.248 li
770.167 386.248 li
cp
f
736.327 229.486 mo
735.016 229.138 733.659 228.902 732.295 228.786 cv
732.676 224.303 li
734.301 224.441 735.918 224.722 737.481 225.137 cv
736.327 229.486 li
cp
724.164 229.494 mo
723.004 225.146 li
724.567 224.729 726.184 224.446 727.808 224.306 cv
728.194 228.789 li
726.831 228.907 725.476 229.144 724.164 229.494 cv
cp
743.71 232.926 mo
742.594 232.142 741.403 231.454 740.171 230.879 cv
742.071 226.8 li
743.542 227.486 744.964 228.308 746.296 229.242 cv
743.71 232.926 li
cp
716.785 232.944 mo
714.195 229.264 li
715.529 228.326 716.949 227.502 718.417 226.816 cv
720.323 230.893 li
719.093 231.468 717.902 232.158 716.785 232.944 cv
cp
749.488 238.693 mo
748.711 237.59 747.827 236.541 746.861 235.574 cv
746.725 235.424 li
748.32 234.095 li
749.957 232.309 li
750.042 232.397 li
750.045 232.394 li
751.191 233.542 752.241 234.789 753.166 236.102 cv
749.488 238.693 li
cp
711.013 238.718 mo
707.331 236.13 li
708.258 234.812 709.311 233.559 710.461 232.407 cv
710.704 232.196 li
712.042 233.981 li
713.931 235.24 li
713.624 235.563 li
713.646 235.585 li
712.678 236.556 711.791 237.61 711.013 238.718 cv
cp
752.943 246.069 mo
752.592 244.755 752.121 243.463 751.543 242.229 cv
755.617 240.32 li
756.308 241.794 756.871 243.337 757.291 244.906 cv
752.943 246.069 li
cp
707.565 246.099 mo
703.218 244.939 li
703.637 243.369 704.197 241.826 704.885 240.353 cv
708.963 242.255 li
708.387 243.49 707.917 244.784 707.565 246.099 cv
cp
.0952911 .0952911 .0952911 rgb
f
724.774 330.765 mo
735.744 330.765 li
735.744 252.187 li
735.744 250.721 735.174 249.343 734.138 248.306 cv
733.102 247.271 731.725 246.7 730.26 246.7 cv
728.795 246.7 727.418 247.271 726.381 248.307 cv
725.346 249.344 724.774 250.722 724.774 252.187 cv
724.774 330.765 li
cp
740.244 335.265 mo
720.274 335.265 li
720.274 252.187 li
720.274 249.521 721.313 247.014 723.198 245.126 cv
725.087 243.239 727.594 242.2 730.26 242.2 cv
732.926 242.2 735.433 243.239 737.32 245.125 cv
739.206 247.013 740.244 249.521 740.244 252.187 cv
740.244 335.265 li
cp
f
786.337 254.437 mo
737.994 254.437 li
737.994 249.937 li
786.337 249.937 li
786.337 254.437 li
cp
f
722.524 254.437 mo
674.183 254.437 li
674.183 249.937 li
722.524 249.937 li
722.524 254.437 li
cp
f
792.376 286.565 mo
773.176 253.315 li
777.072 251.065 li
796.272 284.315 li
792.376 286.565 li
cp
f
757.872 286.565 mo
753.976 284.315 li
773.176 251.065 li
777.072 253.315 li
757.872 286.565 li
cp
f
752.343 287.694 mo
753.477 299.264 763.26 308.333 775.122 308.333 cv
786.983 308.333 796.767 299.264 797.9 287.694 cv
752.343 287.694 li
cp
775.122 312.833 mo
760.02 312.833 747.733 300.546 747.733 285.444 cv
747.733 283.194 li
802.51 283.194 li
802.51 285.444 li
802.51 300.546 790.224 312.833 775.122 312.833 cv
cp
f
702.646 286.565 mo
683.446 253.315 li
687.343 251.065 li
706.542 284.315 li
702.646 286.565 li
cp
f
668.143 286.565 mo
664.246 284.315 li
683.446 251.065 li
687.343 253.315 li
668.143 286.565 li
cp
f
662.619 287.694 mo
663.753 299.264 673.536 308.333 685.397 308.333 cv
697.26 308.333 707.043 299.264 708.177 287.694 cv
662.619 287.694 li
cp
685.397 312.833 mo
670.296 312.833 658.01 300.546 658.01 285.444 cv
658.01 283.194 li
712.786 283.194 li
712.786 285.444 li
712.786 300.546 700.5 312.833 685.397 312.833 cv
cp
f
687.647 340.765 mo
772.872 340.765 li
772.872 340.015 li
772.872 338.747 772.378 337.554 771.48 336.656 cv
770.584 335.759 769.391 335.265 768.122 335.265 cv
692.397 335.265 li
691.129 335.265 689.937 335.759 689.039 336.656 cv
688.142 337.554 687.647 338.747 687.647 340.015 cv
687.647 340.765 li
cp
777.372 345.265 mo
683.147 345.265 li
683.147 340.015 li
683.147 337.544 684.109 335.222 685.857 333.475 cv
687.604 331.727 689.928 330.765 692.397 330.765 cv
768.122 330.765 li
770.593 330.765 772.916 331.727 774.663 333.475 cv
776.41 335.223 777.372 337.545 777.372 340.015 cv
777.372 345.265 li
cp
f
47.7373 178.75 mo
45.5586 178.75 li
45.5586 171.241 li
47.7549 171.241 li
50.2041 171.241 51.5 172.879 51.5 174.986 cv
51.5 177.039 50.1133 178.75 47.7373 178.75 cv
cp
47.7373 168.99 mo
43.002 168.99 li
43.002 181 li
47.7549 181 li
51.5 181 54.1113 178.623 54.1113 174.986 cv
54.1113 171.385 51.5 168.99 47.7373 168.99 cv
cp
.0980392 .0941176 .0941176 rgb
f
55.9258 181 mo
64.4238 181 li
64.4238 178.75 li
58.4824 178.75 li
58.4824 176.013 li
64.2979 176.013 li
64.2979 173.762 li
58.4824 173.762 li
58.4824 171.241 li
64.4238 171.241 li
64.4238 168.99 li
55.9258 168.99 li
55.9258 181 li
cp
f
69.5156 176.715 mo
71.3887 171.547 li
73.2607 176.715 li
69.5156 176.715 li
cp
69.7861 168.99 mo
65.1592 181 li
68.0576 181 li
68.8135 178.965 li
73.9629 178.965 li
74.7197 181 li
77.6182 181 li
72.9912 168.99 li
69.7861 168.99 li
cp
f
83.4668 178.75 mo
81.2881 178.75 li
81.2881 171.241 li
83.4844 171.241 li
85.9336 171.241 87.2295 172.879 87.2295 174.986 cv
87.2295 177.039 85.8428 178.75 83.4668 178.75 cv
cp
83.4668 168.99 mo
78.7314 168.99 li
78.7314 181 li
83.4844 181 li
87.2295 181 89.8408 178.623 89.8408 174.986 cv
89.8408 171.385 87.2295 168.99 83.4668 168.99 cv
cp
f
94.1221 168.99 mo
91.5469 168.99 li
91.5469 181 li
99.1992 181 li
99.1992 178.75 li
94.1221 178.75 li
94.1221 168.99 li
cp
f
100.925 181 mo
103.481 181 li
103.481 168.99 li
100.925 168.99 li
100.925 181 li
cp
f
114.049 176.535 mo
108.485 168.99 li
105.856 168.99 li
105.856 181 li
108.413 181 li
108.413 173.167 li
114.139 181 li
116.605 181 li
116.605 168.99 li
114.049 168.99 li
114.049 176.535 li
cp
f
127.477 171.241 mo
127.477 168.99 li
118.979 168.99 li
118.979 181 li
127.477 181 li
127.477 178.75 li
121.535 178.75 li
121.535 176.013 li
127.351 176.013 li
127.351 173.762 li
121.535 173.762 li
121.535 171.241 li
127.477 171.241 li
cp
f
66.1133 118.78 mo
104.365 118.78 li
103.248 109.218 95.0967 101.773 85.2393 101.773 cv
75.3818 101.773 67.2305 109.218 66.1133 118.78 cv
cp
106.746 123.28 mo
63.7324 123.28 li
62.4897 123.28 61.4824 122.273 61.4824 121.03 cv
61.4824 107.931 72.1396 97.2729 85.2393 97.2729 cv
98.3389 97.2729 108.996 107.931 108.996 121.03 cv
108.996 122.273 107.989 123.28 106.746 123.28 cv
cp
.0952911 .0952911 .0952911 rgb
f
85.2393 78.6563 mo
84.1875 78.6563 83.332 79.5117 83.332 80.5635 cv
83.332 81.6152 84.1875 82.4712 85.2393 82.4712 cv
86.291 82.4712 87.1465 81.6152 87.1465 80.5635 cv
87.1465 79.5117 86.291 78.6563 85.2393 78.6563 cv
cp
85.2393 86.6567 mo
81.8799 86.6567 79.1465 83.9233 79.1465 80.5635 cv
79.1465 77.2041 81.8799 74.4707 85.2393 74.4707 cv
88.5986 74.4707 91.332 77.2041 91.332 80.5635 cv
91.332 83.9233 88.5986 86.6567 85.2393 86.6567 cv
cp
f
61.2207 33.3975 mo
61.7207 46.2134 72.3032 56.4844 85.2393 56.4844 cv
96.8018 56.4844 106.484 48.2778 108.767 37.3838 cv
105.643 39.1865 102.087 40.147 98.3828 40.147 cv
92.8149 40.147 87.5815 37.9771 83.647 34.0371 cv
80.564 30.9546 76.4614 29.2563 72.0957 29.2563 cv
68.0425 29.2563 64.2158 30.7202 61.2207 33.3975 cv
cp
85.2393 60.9844 mo
69.5039 60.9844 56.7021 48.1826 56.7021 32.4473 cv
56.7021 31.8506 56.9395 31.2783 57.3613 30.856 cv
61.2954 26.9229 66.5283 24.7563 72.0957 24.7563 cv
77.6631 24.7563 82.896 26.9229 86.8301 30.856 cv
89.9155 33.9458 94.0181 35.647 98.3828 35.647 cv
102.748 35.647 106.85 33.9458 109.934 30.8574 cv
110.577 30.2134 111.545 30.0205 112.387 30.3682 cv
113.228 30.7163 113.776 31.5371 113.776 32.4473 cv
113.776 48.1826 100.975 60.9844 85.2393 60.9844 cv
cp
f
51.8027 118.78 mo
118.676 118.78 li
118.676 103.187 li
118.676 87.1074 107.22 73.29 91.4355 70.332 cv
90.5151 70.1592 89.812 69.4453 89.6196 68.5815 cv
89.4863 68.2446 89.4131 67.8789 89.4131 67.5 cv
89.4131 67.1392 89.479 66.791 89.6006 66.4673 cv
89.7588 65.5894 90.4258 64.8618 91.3579 64.6826 cv
91.3628 64.6816 91.3682 64.6807 91.373 64.6797 cv
91.375 64.6792 li
107.228 61.6997 118.676 47.8862 118.676 31.8135 cv
118.676 16.2197 li
51.8027 16.2197 li
51.8027 31.8135 li
51.8027 47.8799 63.2485 61.6953 79.0186 64.6636 cv
79.0239 64.6646 79.1123 64.6812 79.1177 64.6821 cv
80.0796 64.8706 80.7778 65.6465 80.9121 66.5649 cv
81.0112 66.8604 81.0649 67.1753 81.0649 67.5 cv
81.0649 67.8906 80.9873 68.2671 80.8457 68.6128 cv
80.6665 69.4531 80.019 70.1411 79.1177 70.3179 cv
79.1147 70.3184 79.1069 70.3198 79.0962 70.3218 cv
79.0942 70.3223 li
79.062 70.3281 79.0083 70.3384 78.9995 70.3398 cv
63.2485 73.3047 51.8027 87.1201 51.8027 103.187 cv
51.8027 118.78 li
cp
120.926 123.28 mo
49.5527 123.28 li
48.3101 123.28 47.3027 122.273 47.3027 121.03 cv
47.3027 103.187 li
47.3027 87.0005 57.5444 72.8271 72.3677 67.4961 cv
57.5229 62.1436 47.3027 47.9829 47.3027 31.8135 cv
47.3027 13.9697 li
47.3027 12.7271 48.3101 11.7197 49.5527 11.7197 cv
120.926 11.7197 li
122.168 11.7197 123.176 12.7271 123.176 13.9697 cv
123.176 31.8135 li
123.176 48.0034 112.937 62.1729 98.1138 67.5034 cv
112.955 72.8525 123.176 87.0112 123.176 103.187 cv
123.176 121.03 li
123.176 122.273 122.168 123.28 120.926 123.28 cv
cp
f
44.1377 4.75 mo
43.2061 4.75 42.3296 5.11279 41.6704 5.77197 cv
41.0132 6.4292 40.6514 7.30469 40.6514 8.23633 cv
40.6514 9.1665 41.0142 10.0425 41.6729 10.7026 cv
42.3286 11.3569 43.2056 11.7197 44.1377 11.7197 cv
126.341 11.7197 li
127.273 11.7197 128.149 11.3569 128.809 10.6987 cv
129.464 10.042 129.827 9.1665 129.827 8.23633 cv
129.827 7.30469 129.465 6.42969 128.808 5.77246 cv
128.148 5.11279 127.272 4.75 126.341 4.75 cv
44.1377 4.75 li
cp
126.341 16.2197 mo
44.1377 16.2197 li
42.0059 16.2197 40.0005 15.3906 38.4907 13.8848 cv
36.9805 12.3706 36.1514 10.3662 36.1514 8.23633 cv
36.1514 6.10254 36.9814 4.09717 38.4888 2.59033 cv
39.9976 1.08105 42.0039 .25 44.1377 .25 cv
126.341 .25 li
128.475 .25 130.481 1.08105 131.99 2.59033 cv
133.497 4.09668 134.327 6.10205 134.327 8.23633 cv
134.327 10.3667 133.498 12.3711 131.991 13.8809 cv
130.479 15.3901 128.473 16.2197 126.341 16.2197 cv
cp
f
44.1377 123.28 mo
43.2056 123.28 42.3286 123.643 41.6685 124.302 cv
41.0142 124.958 40.6514 125.833 40.6514 126.764 cv
40.6514 127.695 41.0132 128.571 41.6704 129.228 cv
42.3296 129.887 43.2061 130.25 44.1377 130.25 cv
126.341 130.25 li
127.272 130.25 128.148 129.887 128.807 129.228 cv
129.465 128.57 129.827 127.695 129.827 126.764 cv
129.827 125.833 129.464 124.958 128.806 124.298 cv
128.149 123.643 127.273 123.28 126.341 123.28 cv
44.1377 123.28 li
cp
126.341 134.75 mo
44.1377 134.75 li
42.0039 134.75 39.9976 133.919 38.4888 132.41 cv
36.9814 130.903 36.1514 128.897 36.1514 126.764 cv
36.1514 124.634 36.9805 122.629 38.4863 121.12 cv
40.0005 119.609 42.0059 118.78 44.1377 118.78 cv
126.341 118.78 li
128.473 118.78 130.479 119.61 131.988 121.116 cv
133.498 122.629 134.327 124.633 134.327 126.764 cv
134.327 128.898 133.497 130.903 131.989 132.41 cv
130.481 133.919 128.475 134.75 126.341 134.75 cv
cp
f
44.5762 602.289 mo
44.5762 601.569 45.1885 601.1 46.2695 601.1 cv
47.4932 601.1 48.79 601.514 49.7617 602.415 cv
51.1846 600.506 li
49.9961 599.408 48.4121 598.832 46.5029 598.832 cv
43.6768 598.832 41.9482 600.488 41.9482 602.487 cv
41.9482 607.006 48.8623 605.547 48.8623 607.636 cv
48.8623 608.338 48.1953 608.968 46.7734 608.968 cv
45.1172 608.968 43.8027 608.212 42.9561 607.331 cv
41.5518 609.329 li
42.6865 610.463 44.3428 611.237 46.665 611.237 cv
49.8887 611.237 51.4727 609.581 51.4727 607.383 cv
51.4727 602.901 44.5762 604.179 44.5762 602.289 cv
cp
.0980392 .0941176 .0941176 rgb
f
58.8877 608.968 mo
56.6553 608.968 55.2324 607.258 55.2324 605.026 cv
55.2324 602.774 56.6553 601.083 58.8877 601.083 cv
61.1025 601.083 62.5244 602.774 62.5244 605.026 cv
62.5244 607.258 61.1025 608.968 58.8877 608.968 cv
cp
58.8877 598.813 mo
55.25 598.813 52.6035 601.407 52.6035 605.026 cv
52.6035 608.644 55.25 611.237 58.8877 611.237 cv
62.5068 611.237 65.1533 608.644 65.1533 605.026 cv
65.1533 601.407 62.5068 598.813 58.8877 598.813 cv
cp
f
69.417 599.011 mo
66.8418 599.011 li
66.8418 611.021 li
74.4941 611.021 li
74.4941 608.77 li
69.417 608.77 li
69.417 599.011 li
cp
f
84.0166 606.141 mo
84.0166 607.816 83.0625 608.968 81.208 608.968 cv
79.3535 608.968 78.3809 607.816 78.3809 606.141 cv
78.3809 599.011 li
75.7881 599.011 li
75.7881 606.213 li
75.7881 609.184 77.5527 611.237 81.208 611.237 cv
84.8633 611.237 86.627 609.184 86.627 606.213 cv
86.627 599.011 li
84.0166 599.011 li
84.0166 606.141 li
cp
f
88.2617 601.262 mo
91.7725 601.262 li
91.7725 611.021 li
94.3477 611.021 li
94.3477 601.262 li
97.8408 601.262 li
97.8408 599.011 li
88.2617 599.011 li
88.2617 601.262 li
cp
f
99.4756 611.021 mo
102.032 611.021 li
102.032 599.011 li
99.4756 599.011 li
99.4756 611.021 li
cp
f
110.115 608.968 mo
107.883 608.968 106.46 607.258 106.46 605.026 cv
106.46 602.774 107.883 601.083 110.115 601.083 cv
112.33 601.083 113.752 602.774 113.752 605.026 cv
113.752 607.258 112.33 608.968 110.115 608.968 cv
cp
110.115 598.813 mo
106.478 598.813 103.831 601.407 103.831 605.026 cv
103.831 608.644 106.478 611.237 110.115 611.237 cv
113.734 611.237 116.381 608.644 116.381 605.026 cv
116.381 601.407 113.734 598.813 110.115 598.813 cv
cp
f
126.37 599.011 mo
126.37 606.555 li
120.806 599.011 li
118.178 599.011 li
118.178 611.021 li
120.734 611.021 li
120.734 603.188 li
126.46 611.021 li
128.927 611.021 li
128.927 599.011 li
126.37 599.011 li
cp
f
85.2393 449.323 mo
68.5103 449.323 54.9004 462.933 54.9004 479.663 cv
54.9004 496.391 68.5103 510 85.2393 510 cv
101.969 510 115.579 496.391 115.579 479.663 cv
115.579 462.933 101.969 449.323 85.2393 449.323 cv
cp
85.2393 514.5 mo
66.0288 514.5 50.4004 498.872 50.4004 479.663 cv
50.4004 460.452 66.0288 444.823 85.2393 444.823 cv
104.45 444.823 120.079 460.452 120.079 479.663 cv
120.079 498.872 104.45 514.5 85.2393 514.5 cv
cp
.0952911 .0952911 .0952911 rgb
f
82.2402 491.845 mo
68.6484 478.253 li
71.8301 475.072 li
82.2402 485.48 li
98.6479 469.07 li
101.831 472.251 li
82.2402 491.845 li
cp
f
65.168 530.983 mo
105.311 530.983 li
105.311 517.02 li
106.434 516.37 li
119.509 508.804 127.632 494.738 127.632 479.663 cv
127.632 456.286 108.615 437.268 85.2393 437.268 cv
61.8638 437.268 42.8467 456.286 42.8467 479.663 cv
42.8467 494.738 50.9692 508.804 64.0449 516.37 cv
65.168 517.02 li
65.168 530.983 li
cp
109.811 535.483 mo
60.668 535.483 li
60.668 519.593 li
46.8657 511.083 38.3467 495.903 38.3467 479.663 cv
38.3467 453.805 59.3828 432.768 85.2393 432.768 cv
111.096 432.768 132.132 453.805 132.132 479.663 cv
132.132 495.903 123.613 511.083 109.811 519.593 cv
109.811 535.483 li
cp
f
109.811 544.413 mo
60.668 544.413 li
60.668 539.913 li
109.811 539.913 li
109.811 544.413 li
cp
f
109.811 553.34 mo
60.668 553.34 li
60.668 548.84 li
109.811 548.84 li
109.811 553.34 li
cp
f
95.0791 562.268 mo
75.4004 562.268 li
75.4004 557.768 li
95.0791 557.768 li
95.0791 562.268 li
cp
f
261.47 604.484 mo
258.77 604.484 li
258.77 601.261 li
261.47 601.261 li
262.479 601.261 263.253 601.875 263.253 602.882 cv
263.253 603.873 262.479 604.484 261.47 604.484 cv
cp
261.831 599.011 mo
256.213 599.011 li
256.213 611.021 li
258.77 611.021 li
258.77 606.736 li
261.831 606.736 li
264.423 606.736 265.864 604.97 265.864 602.882 cv
265.864 600.775 264.441 599.011 261.831 599.011 cv
cp
.0980392 .0941176 .0941176 rgb
f
269.93 599.011 mo
267.354 599.011 li
267.354 611.021 li
275.007 611.021 li
275.007 608.771 li
269.93 608.771 li
269.93 599.011 li
cp
f
279.83 606.736 mo
281.702 601.568 li
283.575 606.736 li
279.83 606.736 li
cp
280.1 599.011 mo
275.473 611.021 li
278.371 611.021 li
279.127 608.986 li
284.277 608.986 li
285.033 611.021 li
287.932 611.021 li
283.305 599.011 li
280.1 599.011 li
cp
f
297.237 606.556 mo
291.674 599.011 li
289.045 599.011 li
289.045 611.021 li
291.602 611.021 li
291.602 603.189 li
297.327 611.021 li
299.794 611.021 li
299.794 599.011 li
297.237 599.011 li
297.237 606.556 li
cp
f
310.359 606.556 mo
304.795 599.011 li
302.167 599.011 li
302.167 611.021 li
304.723 611.021 li
304.723 603.189 li
310.449 611.021 li
312.916 611.021 li
312.916 599.011 li
310.359 599.011 li
310.359 606.556 li
cp
f
315.288 611.021 mo
317.845 611.021 li
317.845 599.011 li
315.288 599.011 li
315.288 611.021 li
cp
f
328.412 606.556 mo
322.849 599.011 li
320.22 599.011 li
320.22 611.021 li
322.776 611.021 li
322.776 603.189 li
328.502 611.021 li
330.969 611.021 li
330.969 599.011 li
328.412 599.011 li
328.412 606.556 li
cp
f
338.545 604.376 mo
338.545 606.609 li
341.714 606.609 li
341.714 608.05 li
341.228 608.5 340.237 608.968 339.175 608.968 cv
336.979 608.968 335.394 607.294 335.394 605.025 cv
335.394 602.755 336.979 601.082 339.175 601.082 cv
340.436 601.082 341.461 601.802 342.02 602.648 cv
344.126 601.496 li
343.226 600.074 341.66 598.814 339.175 598.814 cv
335.646 598.814 332.765 601.226 332.765 605.025 cv
332.765 608.806 335.646 611.236 339.175 611.236 cv
341.335 611.236 343.046 610.355 344.271 608.986 cv
344.271 604.376 li
338.545 604.376 li
cp
f
255.124 487.374 mo
345.36 487.374 li
345.36 444.504 li
255.124 444.504 li
255.124 487.374 li
cp
349.86 491.874 mo
250.624 491.874 li
250.624 440.004 li
349.86 440.004 li
349.86 491.874 li
cp
.0952911 .0952911 .0952911 rgb
f
263.124 479.374 mo
337.36 479.374 li
337.36 452.504 li
263.124 452.504 li
263.124 479.374 li
cp
341.86 483.874 mo
258.624 483.874 li
258.624 448.004 li
341.86 448.004 li
341.86 483.874 li
cp
f
302.492 520.518 mo
297.992 520.518 li
297.992 496.624 li
302.492 496.624 li
302.492 520.518 li
cp
f
349.86 520.518 mo
345.36 520.518 li
345.36 510.821 li
255.124 510.821 li
255.124 520.518 li
250.624 520.518 li
250.624 506.321 li
349.86 506.321 li
349.86 520.518 li
cp
f
252.874 529.768 mo
247.149 529.768 242.492 534.425 242.492 540.149 cv
242.492 545.875 247.149 550.532 252.874 550.532 cv
258.598 550.532 263.255 545.875 263.255 540.149 cv
263.255 534.425 258.598 529.768 252.874 529.768 cv
cp
252.874 555.032 mo
244.667 555.032 237.992 548.355 237.992 540.149 cv
237.992 531.944 244.667 525.268 252.874 525.268 cv
261.079 525.268 267.755 531.944 267.755 540.149 cv
267.755 548.355 261.079 555.032 252.874 555.032 cv
cp
f
300.242 529.768 mo
294.517 529.768 289.86 534.425 289.86 540.149 cv
289.86 545.875 294.517 550.532 300.242 550.532 cv
305.966 550.532 310.624 545.875 310.624 540.149 cv
310.624 534.425 305.966 529.768 300.242 529.768 cv
cp
300.242 555.032 mo
292.036 555.032 285.36 548.355 285.36 540.149 cv
285.36 531.944 292.036 525.268 300.242 525.268 cv
308.448 525.268 315.124 531.944 315.124 540.149 cv
315.124 548.355 308.448 555.032 300.242 555.032 cv
cp
f
347.61 529.768 mo
341.885 529.768 337.228 534.425 337.228 540.149 cv
337.228 545.875 341.885 550.532 347.61 550.532 cv
353.334 550.532 357.992 545.875 357.992 540.149 cv
357.992 534.425 353.334 529.768 347.61 529.768 cv
cp
347.61 555.032 mo
339.404 555.032 332.728 548.355 332.728 540.149 cv
332.728 531.944 339.404 525.268 347.61 525.268 cv
355.816 525.268 362.492 531.944 362.492 540.149 cv
362.492 548.355 355.816 555.032 347.61 555.032 cv
cp
f
302.492 468.19 mo
297.992 468.19 li
297.992 463.69 li
302.492 463.69 li
302.492 468.19 li
cp
f
293.492 468.19 mo
288.992 468.19 li
288.992 463.69 li
293.492 463.69 li
293.492 468.19 li
cp
f
311.492 468.19 mo
306.992 468.19 li
306.992 463.69 li
311.492 463.69 li
311.492 468.19 li
cp
f
438.39 606.519 mo
435.473 599.011 li
431.89 599.011 li
431.89 611.021 li
434.446 611.021 li
434.446 602.361 li
437.831 611.021 li
438.947 611.021 li
442.332 602.361 li
442.332 611.021 li
444.907 611.021 li
444.907 599.011 li
441.306 599.011 li
438.39 606.519 li
cp
.0980392 .0941176 .0941176 rgb
f
450.376 606.736 mo
452.249 601.568 li
454.121 606.736 li
450.376 606.736 li
cp
450.646 599.011 mo
446.02 611.021 li
448.918 611.021 li
449.674 608.986 li
454.823 608.986 li
455.58 611.021 li
458.479 611.021 li
453.852 599.011 li
450.646 599.011 li
cp
f
464.849 604.503 mo
462.148 604.503 li
462.148 601.261 li
464.849 601.261 li
465.857 601.261 466.632 601.875 466.632 602.865 cv
466.632 603.89 465.857 604.503 464.849 604.503 cv
cp
469.261 602.882 mo
469.261 600.65 467.712 599.011 465.209 599.011 cv
459.592 599.011 li
459.592 611.021 li
462.148 611.021 li
462.148 606.753 li
464.021 606.753 li
466.38 611.021 li
469.332 611.021 li
466.613 606.447 li
467.91 606.142 469.261 604.99 469.261 602.882 cv
cp
f
481.122 599.011 mo
477.972 599.011 li
473.722 604.359 li
473.722 599.011 li
471.165 599.011 li
471.165 611.021 li
473.722 611.021 li
473.722 607.33 li
474.658 606.195 li
478.295 611.021 li
481.446 611.021 li
476.351 604.646 li
481.122 599.011 li
cp
f
482.613 611.021 mo
491.111 611.021 li
491.111 608.771 li
485.17 608.771 li
485.17 606.033 li
490.985 606.033 li
490.985 603.783 li
485.17 603.783 li
485.17 601.261 li
491.111 601.261 li
491.111 599.011 li
482.613 599.011 li
482.613 611.021 li
cp
f
492.368 601.261 mo
495.88 601.261 li
495.88 611.021 li
498.454 611.021 li
498.454 601.261 li
501.947 601.261 li
501.947 599.011 li
492.368 599.011 li
492.368 601.261 li
cp
f
513.466 604.503 mo
510.765 604.503 li
510.765 601.261 li
513.466 601.261 li
514.474 601.261 515.248 601.875 515.248 602.865 cv
515.248 603.89 514.474 604.503 513.466 604.503 cv
cp
517.877 602.882 mo
517.877 600.65 516.328 599.011 513.826 599.011 cv
508.208 599.011 li
508.208 611.021 li
510.765 611.021 li
510.765 606.753 li
512.638 606.753 li
514.996 611.021 li
517.949 611.021 li
515.23 606.447 li
516.526 606.142 517.877 604.99 517.877 602.882 cv
cp
f
519.782 611.021 mo
528.28 611.021 li
528.28 608.771 li
522.339 608.771 li
522.339 606.033 li
528.154 606.033 li
528.154 603.783 li
522.339 603.783 li
522.339 601.261 li
528.28 601.261 li
528.28 599.011 li
519.782 599.011 li
519.782 611.021 li
cp
f
532.472 602.289 mo
532.472 601.568 533.084 601.099 534.165 601.099 cv
535.389 601.099 536.685 601.513 537.657 602.414 cv
539.08 600.505 li
537.892 599.408 536.308 598.832 534.398 598.832 cv
531.571 598.832 529.843 600.488 529.843 602.486 cv
529.843 607.005 536.757 605.546 536.757 607.636 cv
536.757 608.337 536.091 608.968 534.669 608.968 cv
533.013 608.968 531.698 608.212 530.852 607.33 cv
529.446 609.328 li
530.581 610.462 532.237 611.236 534.561 611.236 cv
537.784 611.236 539.368 609.58 539.368 607.384 cv
539.368 602.9 532.472 604.179 532.472 602.289 cv
cp
f
541.075 611.021 mo
549.573 611.021 li
549.573 608.771 li
543.632 608.771 li
543.632 606.033 li
549.448 606.033 li
549.448 603.783 li
543.632 603.783 li
543.632 601.261 li
549.573 601.261 li
549.573 599.011 li
541.075 599.011 li
541.075 611.021 li
cp
f
554.665 606.736 mo
556.538 601.568 li
558.411 606.736 li
554.665 606.736 li
cp
554.936 599.011 mo
550.308 611.021 li
553.207 611.021 li
553.964 608.986 li
559.112 608.986 li
559.869 611.021 li
562.769 611.021 li
558.141 599.011 li
554.936 599.011 li
cp
f
569.138 604.503 mo
566.438 604.503 li
566.438 601.261 li
569.138 601.261 li
570.146 601.261 570.921 601.875 570.921 602.865 cv
570.921 603.89 570.146 604.503 569.138 604.503 cv
cp
573.55 602.882 mo
573.55 600.65 572.001 599.011 569.499 599.011 cv
563.881 599.011 li
563.881 611.021 li
566.438 611.021 li
566.438 606.753 li
568.31 606.753 li
570.669 611.021 li
573.622 611.021 li
570.903 606.447 li
572.199 606.142 573.55 604.99 573.55 602.882 cv
cp
f
581.288 601.082 mo
582.513 601.082 583.593 601.857 584.097 602.828 cv
586.294 601.748 li
585.447 600.236 583.917 598.814 581.288 598.814 cv
577.669 598.814 574.878 601.316 574.878 605.025 cv
574.878 608.716 577.669 611.236 581.288 611.236 cv
583.917 611.236 585.447 609.779 586.294 608.285 cv
584.097 607.222 li
583.593 608.195 582.513 608.968 581.288 608.968 cv
579.091 608.968 577.507 607.294 577.507 605.025 cv
577.507 602.755 579.091 601.082 581.288 601.082 cv
cp
f
596.049 599.011 mo
596.049 603.728 li
590.377 603.728 li
590.377 599.011 li
587.82 599.011 li
587.82 611.021 li
590.377 611.021 li
590.377 605.96 li
596.049 605.96 li
596.049 611.021 li
598.624 611.021 li
598.624 599.011 li
596.049 599.011 li
cp
f
506.33 440.956 mo
506.33 475.211 li
504.605 475.626 li
484.11 480.548 469.796 498.717 469.796 519.809 cv
469.796 544.875 490.189 565.268 515.256 565.268 cv
540.323 565.268 560.717 544.875 560.717 519.809 cv
560.717 498.717 546.403 480.548 525.908 475.626 cv
524.184 475.211 li
524.184 440.956 li
506.33 440.956 li
cp
515.256 569.768 mo
487.708 569.768 465.296 547.357 465.296 519.809 cv
465.296 497.224 480.229 477.689 501.83 471.696 cv
501.83 436.456 li
528.684 436.456 li
528.684 471.696 li
550.284 477.689 565.217 497.224 565.217 519.809 cv
565.217 547.357 542.805 569.768 515.256 569.768 cv
cp
.0952911 .0952911 .0952911 rgb
f
501.356 429.768 mo
499.509 429.768 498.006 431.266 498.006 433.108 cv
498.006 434.956 499.509 436.458 501.356 436.458 cv
529.166 436.458 li
531.008 436.458 532.506 434.956 532.506 433.108 cv
532.506 431.266 531.008 429.768 529.166 429.768 cv
501.356 429.768 li
cp
529.166 440.958 mo
501.356 440.958 li
497.028 440.958 493.506 437.437 493.506 433.108 cv
493.506 428.785 497.028 425.268 501.356 425.268 cv
529.166 425.268 li
533.489 425.268 537.006 428.785 537.006 433.108 cv
537.006 437.437 533.489 440.958 529.166 440.958 cv
cp
f
511.011 466.993 mo
504.08 466.993 li
504.08 462.493 li
511.011 462.493 li
511.011 466.993 li
cp
f
511.011 458.307 mo
504.08 458.307 li
504.08 453.807 li
511.011 453.807 li
511.011 458.307 li
cp
f
511.011 449.629 mo
504.08 449.629 li
504.08 445.129 li
511.011 445.129 li
511.011 449.629 li
cp
f
515.256 488.559 mo
498.025 488.559 484.006 502.578 484.006 519.809 cv
484.006 537.041 498.025 551.059 515.256 551.059 cv
532.487 551.059 546.506 537.041 546.506 519.809 cv
546.506 502.578 532.487 488.559 515.256 488.559 cv
cp
515.256 555.559 mo
495.544 555.559 479.506 539.522 479.506 519.809 cv
479.506 500.097 495.544 484.059 515.256 484.059 cv
534.969 484.059 551.006 500.097 551.006 519.809 cv
551.006 539.522 534.969 555.559 515.256 555.559 cv
cp
f
517.363 534.667 mo
513.152 534.667 li
510.856 534.667 508.707 533.778 507.101 532.164 cv
505.488 530.544 504.599 528.398 504.599 526.122 cv
509.099 526.122 li
509.099 527.2 509.522 528.218 510.29 528.989 cv
511.046 529.749 512.062 530.167 513.152 530.167 cv
517.363 530.167 li
518.454 530.167 519.474 529.748 520.235 528.986 cv
520.992 528.219 521.414 527.199 521.414 526.122 cv
521.414 525.033 520.995 524.014 520.235 523.253 cv
519.463 522.485 518.441 522.059 517.363 522.059 cv
513.152 522.059 li
510.869 522.059 508.721 521.167 507.104 519.547 cv
505.492 517.949 504.599 515.797 504.599 513.495 cv
504.599 511.214 505.489 509.069 507.105 507.454 cv
508.723 505.839 510.87 504.95 513.152 504.95 cv
517.363 504.95 li
519.642 504.95 521.79 505.837 523.412 507.449 cv
525.029 509.08 525.914 511.223 525.914 513.495 cv
521.414 513.495 li
521.414 512.418 520.993 511.4 520.229 510.63 cv
519.467 509.873 518.445 509.45 517.363 509.45 cv
513.152 509.45 li
512.071 509.45 511.053 509.872 510.286 510.638 cv
509.521 511.402 509.099 512.417 509.099 513.495 cv
509.099 514.587 509.519 515.605 510.28 516.359 cv
511.055 517.136 512.072 517.559 513.152 517.559 cv
517.363 517.559 li
519.64 517.559 521.788 518.45 523.413 520.068 cv
525.027 521.682 525.914 523.831 525.914 526.122 cv
525.914 528.39 525.031 530.534 523.427 532.158 cv
521.806 533.779 519.656 534.667 517.363 534.667 cv
cp
f
517.508 507.2 mo
513.007 507.2 li
513.007 502.155 li
517.508 502.155 li
517.508 507.2 li
cp
f
517.508 537.463 mo
513.007 537.463 li
513.007 532.417 li
517.508 532.417 li
517.508 537.463 li
cp
f
283.818 391.532 mo
278.255 383.988 li
275.626 383.988 li
275.626 395.998 li
278.183 395.998 li
278.183 388.165 li
283.908 395.998 li
286.375 395.998 li
286.375 383.988 li
283.818 383.988 li
283.818 391.532 li
cp
.0980392 .0941176 .0941176 rgb
f
288.747 395.998 mo
297.246 395.998 li
297.246 393.747 li
291.304 393.747 li
291.304 391.01 li
297.12 391.01 li
297.12 388.759 li
291.304 388.759 li
291.304 386.239 li
297.246 386.239 li
297.246 383.988 li
288.747 383.988 li
288.747 395.998 li
cp
f
309.594 392.667 mo
307.325 383.988 li
305.327 383.988 li
303.04 392.667 li
300.934 383.988 li
298.07 383.988 li
301.51 395.998 li
304.229 395.998 li
306.317 387.751 li
308.424 395.998 li
311.143 395.998 li
314.563 383.988 li
311.7 383.988 li
309.594 392.667 li
cp
f
317.962 387.265 mo
317.962 386.545 318.573 386.077 319.654 386.077 cv
320.878 386.077 322.175 386.491 323.147 387.391 cv
324.569 385.482 li
323.381 384.384 321.797 383.808 319.888 383.808 cv
317.062 383.808 315.333 385.464 315.333 387.463 cv
315.333 391.982 322.247 390.524 322.247 392.613 cv
322.247 393.315 321.58 393.945 320.158 393.945 cv
318.502 393.945 317.188 393.189 316.341 392.307 cv
314.937 394.305 li
316.071 395.439 317.728 396.213 320.05 396.213 cv
323.273 396.213 324.857 394.557 324.857 392.36 cv
324.857 387.877 317.962 389.156 317.962 387.265 cv
cp
f
256.038 344.753 mo
252.754 344.753 249.667 343.475 247.344 341.153 cv
245.021 338.83 243.741 335.741 243.741 332.456 cv
243.741 252.036 li
266.084 252.036 li
266.084 256.536 li
248.241 256.536 li
248.241 332.456 li
248.241 334.539 249.052 336.498 250.525 337.971 cv
251.998 339.442 253.956 340.253 256.038 340.253 cv
256.038 344.753 li
cp
.0952911 .0952911 .0952911 rgb
f
265.549 340.253 mo
344.446 340.253 li
346.529 340.253 348.487 339.442 349.959 337.971 cv
351.431 336.497 352.242 334.538 352.242 332.456 cv
352.242 230.802 li
347.125 225.685 li
339.757 233.052 li
332.39 225.685 li
325.021 233.052 li
317.656 225.685 li
310.289 233.052 li
302.921 225.685 li
295.554 233.052 li
288.187 225.685 li
280.819 233.052 li
273.452 225.685 li
268.334 230.802 li
268.334 332.456 li
268.334 335.333 267.353 338.059 265.549 340.253 cv
cp
344.446 344.753 mo
256.038 344.753 li
256.038 340.253 li
258.121 340.253 260.079 339.442 261.551 337.97 cv
263.023 336.498 263.834 334.539 263.834 332.456 cv
263.834 228.938 li
273.452 219.321 li
280.819 226.688 li
288.187 219.321 li
295.554 226.688 li
302.921 219.321 li
310.289 226.688 li
317.657 219.321 li
325.022 226.688 li
332.391 219.321 li
339.757 226.688 li
347.125 219.321 li
356.742 228.938 li
356.742 332.456 li
356.742 335.739 355.463 338.828 353.142 341.152 cv
350.819 343.474 347.731 344.753 344.446 344.753 cv
cp
f
338.528 270.575 mo
282.047 270.575 li
282.047 258.786 li
338.528 258.786 li
338.528 270.575 li
cp
277.547 254.286 mo
277.547 275.075 li
343.028 275.075 li
343.028 254.286 li
277.547 254.286 li
cp
f
343.028 245.784 mo
277.547 245.784 li
277.547 241.284 li
343.028 241.284 li
343.028 245.784 li
cp
f
305.951 288.077 mo
277.547 288.077 li
277.547 283.577 li
305.951 283.577 li
305.951 288.077 li
cp
f
305.951 298.831 mo
277.547 298.831 li
277.547 294.331 li
305.951 294.331 li
305.951 298.831 li
cp
f
305.951 309.584 mo
277.547 309.584 li
277.547 305.084 li
305.951 305.084 li
305.951 309.584 li
cp
f
305.951 320.337 mo
277.547 320.337 li
277.547 315.837 li
305.951 315.837 li
305.951 320.337 li
cp
f
305.951 331.091 mo
277.547 331.091 li
277.547 326.591 li
305.951 326.591 li
305.951 331.091 li
cp
f
343.028 288.077 mo
314.625 288.077 li
314.625 283.577 li
343.028 283.577 li
343.028 288.077 li
cp
f
343.028 298.831 mo
314.625 298.831 li
314.625 294.331 li
343.028 294.331 li
343.028 298.831 li
cp
f
343.028 309.584 mo
314.625 309.584 li
314.625 305.084 li
343.028 305.084 li
343.028 309.584 li
cp
f
343.028 320.337 mo
314.625 320.337 li
314.625 315.837 li
343.028 315.837 li
343.028 320.337 li
cp
f
343.028 331.091 mo
314.625 331.091 li
314.625 326.591 li
343.028 326.591 li
343.028 331.091 li
cp
f
686.96 604.485 mo
684.26 604.485 li
684.26 601.262 li
686.96 601.262 li
687.969 601.262 688.743 601.875 688.743 602.882 cv
688.743 603.874 687.969 604.485 686.96 604.485 cv
cp
687.321 599.011 mo
681.703 599.011 li
681.703 611.021 li
684.26 611.021 li
684.26 606.736 li
687.321 606.736 li
689.913 606.736 691.354 604.971 691.354 602.882 cv
691.354 600.776 689.932 599.011 687.321 599.011 cv
cp
.0980392 .0941176 .0941176 rgb
f
698.661 608.968 mo
696.429 608.968 695.006 607.258 695.006 605.026 cv
695.006 602.774 696.429 601.083 698.661 601.083 cv
700.876 601.083 702.298 602.774 702.298 605.026 cv
702.298 607.258 700.876 608.968 698.661 608.968 cv
cp
698.661 598.813 mo
695.023 598.813 692.377 601.407 692.377 605.026 cv
692.377 608.644 695.023 611.237 698.661 611.237 cv
702.28 611.237 704.927 608.644 704.927 605.026 cv
704.927 601.407 702.28 598.813 698.661 598.813 cv
cp
f
711.98 604.502 mo
709.28 604.502 li
709.28 601.262 li
711.98 601.262 li
712.989 601.262 713.763 601.875 713.763 602.865 cv
713.763 603.891 712.989 604.502 711.98 604.502 cv
cp
716.392 602.882 mo
716.392 600.65 714.843 599.011 712.341 599.011 cv
706.724 599.011 li
706.724 611.021 li
709.28 611.021 li
709.28 606.754 li
711.152 606.754 li
713.511 611.021 li
716.464 611.021 li
713.745 606.448 li
715.042 606.141 716.392 604.989 716.392 602.882 cv
cp
f
717.379 601.262 mo
720.89 601.262 li
720.89 611.021 li
723.465 611.021 li
723.465 601.262 li
726.958 601.262 li
726.958 599.011 li
717.379 599.011 li
717.379 601.262 li
cp
f
728.593 611.021 mo
731.149 611.021 li
731.149 606.034 li
736.966 606.034 li
736.966 603.783 li
731.149 603.783 li
731.149 601.262 li
737.091 601.262 li
737.091 599.011 li
728.593 599.011 li
728.593 611.021 li
cp
f
744.578 608.968 mo
742.346 608.968 740.923 607.258 740.923 605.026 cv
740.923 602.774 742.346 601.083 744.578 601.083 cv
746.793 601.083 748.216 602.774 748.216 605.026 cv
748.216 607.258 746.793 608.968 744.578 608.968 cv
cp
744.578 598.813 mo
740.94 598.813 738.294 601.407 738.294 605.026 cv
738.294 608.644 740.94 611.237 744.578 611.237 cv
748.197 611.237 750.845 608.644 750.845 605.026 cv
750.845 601.407 748.197 598.813 744.578 598.813 cv
cp
f
755.107 599.011 mo
752.532 599.011 li
752.532 611.021 li
760.185 611.021 li
760.185 608.77 li
755.107 608.77 li
755.107 599.011 li
cp
f
761.911 611.021 mo
764.468 611.021 li
764.468 599.011 li
761.911 599.011 li
761.911 611.021 li
cp
f
772.55 608.968 mo
770.317 608.968 768.895 607.258 768.895 605.026 cv
768.895 602.774 770.317 601.083 772.55 601.083 cv
774.765 601.083 776.187 602.774 776.187 605.026 cv
776.187 607.258 774.765 608.968 772.55 608.968 cv
cp
772.55 598.813 mo
768.913 598.813 766.267 601.407 766.267 605.026 cv
766.267 608.644 768.913 611.237 772.55 611.237 cv
776.169 611.237 778.815 608.644 778.815 605.026 cv
778.815 601.407 776.169 598.813 772.55 598.813 cv
cp
f
765.26 507.27 mo
765.26 502.77 li
771.34 502.77 777.054 500.405 781.349 496.11 cv
785.644 491.806 788.01 486.091 788.01 480.021 cv
788.01 457.271 li
672.51 457.271 li
672.51 480.021 li
672.51 486.091 674.876 491.806 679.172 496.113 cv
683.466 500.405 689.181 502.77 695.26 502.77 cv
695.26 507.27 li
687.979 507.27 681.135 504.437 675.988 499.293 cv
670.843 494.135 668.01 487.291 668.01 480.021 cv
668.01 452.771 li
792.51 452.771 li
792.51 480.021 li
792.51 487.292 789.677 494.135 784.532 499.291 cv
779.385 504.437 772.541 507.27 765.26 507.27 cv
cp
f
755.26 507.27 mo
705.26 507.27 li
705.26 502.77 li
755.26 502.77 li
755.26 507.27 li
cp
f
780.26 557.268 mo
680.26 557.268 li
676.989 557.268 673.913 555.995 671.599 553.682 cv
669.284 551.367 668.01 548.29 668.01 545.018 cv
668.01 505.018 li
672.51 505.018 li
672.51 545.018 li
672.51 547.088 673.316 549.035 674.78 550.5 cv
676.244 551.962 678.19 552.768 680.26 552.768 cv
780.26 552.768 li
782.329 552.768 784.275 551.962 785.741 550.499 cv
787.203 549.035 788.01 547.088 788.01 545.018 cv
788.01 505.018 li
792.51 505.018 li
792.51 545.018 li
792.51 548.29 791.235 551.367 788.923 553.681 cv
786.606 555.995 783.53 557.268 780.26 557.268 cv
cp
f
758.51 455.018 mo
754.01 455.018 li
754.01 447.018 li
754.01 445.75 753.516 444.557 752.618 443.659 cv
751.722 442.762 750.528 442.268 749.26 442.268 cv
711.26 442.268 li
709.991 442.268 708.798 442.762 707.9 443.66 cv
707.004 444.557 706.51 445.75 706.51 447.018 cv
706.51 455.018 li
702.01 455.018 li
702.01 447.018 li
702.01 444.549 702.972 442.226 704.718 440.479 cv
706.466 438.73 708.789 437.768 711.26 437.768 cv
749.26 437.768 li
751.73 437.768 754.054 438.73 755.801 440.478 cv
757.548 442.226 758.51 444.549 758.51 447.018 cv
758.51 455.018 li
cp
f
697.51 512.768 mo
703.01 512.768 li
703.01 497.268 li
697.51 497.268 li
697.51 512.768 li
cp
707.51 517.268 mo
693.01 517.268 li
693.01 492.768 li
707.51 492.768 li
707.51 517.268 li
cp
f
757.51 512.768 mo
763.01 512.768 li
763.01 497.268 li
757.51 497.268 li
757.51 512.768 li
cp
767.51 517.268 mo
753.01 517.268 li
753.01 492.768 li
767.51 492.768 li
767.51 517.268 li
cp
f
274.323 814.003 mo
264.745 814.003 li
264.745 816.253 li
268.256 816.253 li
268.256 826.013 li
270.831 826.013 li
270.831 816.253 li
274.323 816.253 li
274.323 814.003 li
cp
f
277.903 821.728 mo
279.776 816.56 li
281.648 821.728 li
277.903 821.728 li
cp
278.174 814.003 mo
273.547 826.013 li
276.445 826.013 li
277.201 823.978 li
282.351 823.978 li
283.107 826.013 li
286.006 826.013 li
281.379 814.003 li
278.174 814.003 li
cp
f
292.341 816.074 mo
293.565 816.074 294.646 816.849 295.149 817.82 cv
297.347 816.74 li
296.5 815.228 294.97 813.806 292.341 813.806 cv
288.722 813.806 285.931 816.308 285.931 820.017 cv
285.931 823.708 288.722 826.228 292.341 826.228 cv
294.97 826.228 296.5 824.771 297.347 823.277 cv
295.149 822.214 li
294.646 823.187 293.565 823.96 292.341 823.96 cv
290.145 823.96 288.56 822.287 288.56 820.017 cv
288.56 817.748 290.145 816.074 292.341 816.074 cv
cp
f
298.135 816.253 mo
301.646 816.253 li
301.646 826.013 li
304.221 826.013 li
304.221 816.253 li
307.713 816.253 li
307.713 814.003 li
298.135 814.003 li
298.135 816.253 li
cp
f
309.349 826.013 mo
311.905 826.013 li
311.905 814.003 li
309.349 814.003 li
309.349 826.013 li
cp
f
320.113 816.074 mo
321.338 816.074 322.418 816.849 322.923 817.82 cv
325.119 816.74 li
324.272 815.228 322.742 813.806 320.113 813.806 cv
316.494 813.806 313.704 816.308 313.704 820.017 cv
313.704 823.708 316.494 826.228 320.113 826.228 cv
322.742 826.228 324.272 824.771 325.119 823.277 cv
322.923 822.214 li
322.418 823.187 321.338 823.96 320.113 823.96 cv
317.917 823.96 316.333 822.287 316.333 820.017 cv
316.333 817.748 317.917 816.074 320.113 816.074 cv
cp
f
328.843 817.281 mo
328.843 816.56 329.454 816.091 330.535 816.091 cv
331.759 816.091 333.056 816.505 334.028 817.406 cv
335.45 815.498 li
334.262 814.4 332.678 813.824 330.769 813.824 cv
327.942 813.824 326.214 815.48 326.214 817.478 cv
326.214 821.998 333.128 820.539 333.128 822.628 cv
333.128 823.33 332.461 823.96 331.039 823.96 cv
329.383 823.96 328.068 823.205 327.222 822.322 cv
325.817 824.32 li
326.952 825.455 328.608 826.228 330.931 826.228 cv
334.154 826.228 335.738 824.572 335.738 822.376 cv
335.738 817.892 328.843 819.171 328.843 817.281 cv
cp
f
348.879 777.271 mo
251.604 777.271 li
251.604 655.58 li
292.43 655.58 li
292.43 660.08 li
256.104 660.08 li
256.104 772.771 li
344.379 772.771 li
344.379 660.08 li
308.055 660.08 li
308.055 655.58 li
348.879 655.58 li
348.879 777.271 li
cp
f
340.09 768.482 mo
260.393 768.482 li
260.393 657.83 li
264.893 657.83 li
264.893 763.982 li
335.59 763.982 li
335.59 657.83 li
340.09 657.83 li
340.09 768.482 li
cp
f
285.403 671.21 mo
315.083 671.21 li
315.083 660.083 li
305.805 660.083 li
305.805 657.833 li
305.805 654.766 303.31 652.271 300.243 652.271 cv
297.175 652.271 294.68 654.766 294.68 657.833 cv
294.68 660.083 li
285.403 660.083 li
285.403 671.21 li
cp
319.583 675.71 mo
280.903 675.71 li
280.903 655.583 li
290.434 655.583 li
291.458 651.115 295.467 647.771 300.243 647.771 cv
305.018 647.771 309.027 651.115 310.052 655.583 cv
319.583 655.583 li
319.583 675.71 li
cp
f
302.493 657.83 mo
302.493 659.072 301.485 660.08 300.243 660.08 cv
299 660.08 297.993 659.072 297.993 657.83 cv
297.993 656.587 299 655.58 300.243 655.58 cv
301.485 655.58 302.493 656.587 302.493 657.83 cv
cp
f
276.992 738.177 mo
276.992 733.677 li
296.153 733.677 311.742 718.088 311.742 698.927 cv
311.742 688.927 li
316.242 688.927 li
316.242 698.927 li
316.242 720.57 298.634 738.177 276.992 738.177 cv
cp
f
321.901 700.018 mo
313.992 692.109 li
306.083 700.018 li
302.901 696.836 li
313.992 685.746 li
325.083 696.836 li
321.901 700.018 li
cp
f
309.963 752.356 mo
306.782 749.174 li
321.782 734.174 li
324.963 737.356 li
309.963 752.356 li
cp
f
321.782 752.356 mo
306.782 737.356 li
309.963 734.174 li
324.963 749.174 li
321.782 752.356 li
cp
f
284.611 691.177 mo
281.716 691.177 279.361 693.533 279.361 696.427 cv
279.361 699.323 281.716 701.679 284.611 701.679 cv
287.506 701.679 289.861 699.323 289.861 696.427 cv
289.861 693.533 287.506 691.177 284.611 691.177 cv
cp
284.611 706.179 mo
279.235 706.179 274.861 701.804 274.861 696.427 cv
274.861 691.051 279.235 686.677 284.611 686.677 cv
289.987 686.677 294.361 691.051 294.361 696.427 cv
294.361 701.804 289.987 706.179 284.611 706.179 cv
cp
f
695.474 180.991 mo
698.03 180.991 li
698.03 168.981 li
695.474 168.981 li
695.474 180.991 li
cp
f
708.599 176.526 mo
703.034 168.981 li
700.405 168.981 li
700.405 180.991 li
702.962 180.991 li
702.962 173.159 li
708.688 180.991 li
711.155 180.991 li
711.155 168.981 li
708.599 168.981 li
708.599 176.526 li
cp
f
718.497 178.2 mo
715.165 168.981 li
712.267 168.981 li
716.894 180.991 li
720.099 180.991 li
724.727 168.981 li
721.827 168.981 li
718.497 178.2 li
cp
f
731.187 178.938 mo
728.954 178.938 727.532 177.228 727.532 174.996 cv
727.532 172.745 728.954 171.052 731.187 171.052 cv
733.401 171.052 734.824 172.745 734.824 174.996 cv
734.824 177.228 733.401 178.938 731.187 178.938 cv
cp
731.187 168.784 mo
727.55 168.784 724.903 171.376 724.903 174.996 cv
724.903 178.614 727.55 181.207 731.187 181.207 cv
734.806 181.207 737.453 178.614 737.453 174.996 cv
737.453 171.376 734.806 168.784 731.187 168.784 cv
cp
f
739.249 180.991 mo
741.806 180.991 li
741.806 168.981 li
739.249 168.981 li
739.249 180.991 li
cp
f
750.015 171.052 mo
751.239 171.052 752.319 171.827 752.823 172.798 cv
755.021 171.718 li
754.174 170.206 752.644 168.784 750.015 168.784 cv
746.396 168.784 743.604 171.286 743.604 174.996 cv
743.604 178.686 746.396 181.207 750.015 181.207 cv
752.644 181.207 754.174 179.749 755.021 178.254 cv
752.823 177.192 li
752.319 178.165 751.239 178.938 750.015 178.938 cv
747.817 178.938 746.233 177.264 746.233 174.996 cv
746.233 172.726 747.817 171.052 750.015 171.052 cv
cp
f
765.046 171.232 mo
765.046 168.981 li
756.547 168.981 li
756.547 180.991 li
765.046 180.991 li
765.046 178.741 li
759.104 178.741 li
759.104 176.003 li
764.919 176.003 li
764.919 173.752 li
759.104 173.752 li
759.104 171.232 li
765.046 171.232 li
cp
f
791.01 121.131 mo
771.76 121.131 li
771.76 116.631 li
786.51 116.631 li
786.51 72.5088 li
791.01 72.5088 li
791.01 121.131 li
cp
f
774.01 126.631 mo
779.51 126.631 li
779.51 27.0688 li
776.76 24.3188 li
774.01 27.0688 li
774.01 126.631 li
cp
784.01 131.131 mo
769.51 131.131 li
769.51 25.2046 li
776.76 17.9546 li
784.01 25.2046 li
784.01 131.131 li
cp
f
781.76 74.7588 mo
771.76 74.7588 li
771.76 70.2588 li
781.76 70.2588 li
781.76 74.7588 li
cp
f
779.01 21.1367 mo
774.51 21.1367 li
774.51 16.1279 li
779.01 16.1279 li
779.01 21.1367 li
cp
f
674.01 126.631 mo
759.51 126.631 li
759.51 27.0728 li
740.809 8.36914 li
674.01 8.36914 li
674.01 126.631 li
cp
764.01 131.131 mo
669.51 131.131 li
669.51 3.86914 li
742.672 3.86914 li
764.01 25.2085 li
764.01 131.131 li
cp
f
761.758 28.3867 mo
739.49 28.3867 li
739.49 6.11914 li
743.99 6.11914 li
743.99 23.8867 li
761.758 23.8867 li
761.758 28.3867 li
cp
f
716.76 28.3867 mo
684.76 28.3867 li
684.76 23.8867 li
716.76 23.8867 li
716.76 28.3867 li
cp
f
746.76 76.1309 mo
686.76 76.1309 li
686.76 71.6309 li
746.76 71.6309 li
746.76 76.1309 li
cp
f
749.26 86.1309 mo
684.26 86.1309 li
684.26 81.6309 li
749.26 81.6309 li
749.26 86.1309 li
cp
f
749.26 96.1309 mo
684.26 96.1309 li
684.26 91.6309 li
749.26 91.6309 li
749.26 96.1309 li
cp
f
749.26 106.131 mo
684.26 106.131 li
684.26 101.631 li
749.26 101.631 li
749.26 106.131 li
cp
f
749.26 116.131 mo
684.26 116.131 li
684.26 111.631 li
749.26 111.631 li
749.26 116.131 li
cp
f
749.01 76.1309 mo
684.51 76.1309 li
684.51 46.8418 li
689.01 46.8418 li
689.01 71.6309 li
744.51 71.6309 li
744.51 46.8418 li
749.01 46.8418 li
749.01 76.1309 li
cp
f
689.01 44.5918 mo
744.51 44.5918 li
744.51 38.3867 li
689.01 38.3867 li
689.01 44.5918 li
cp
749.01 49.0918 mo
684.51 49.0918 li
684.51 33.8867 li
749.01 33.8867 li
749.01 49.0918 li
cp
f
734.01 73.8809 mo
729.51 73.8809 li
729.51 36.1367 li
734.01 36.1367 li
734.01 73.8809 li
cp
f
719.01 73.8809 mo
714.51 73.8809 li
714.51 36.1367 li
719.01 36.1367 li
719.01 73.8809 li
cp
f
463.354 821.511 mo
460.437 814.003 li
456.854 814.003 li
456.854 826.013 li
459.41 826.013 li
459.41 817.353 li
462.795 826.013 li
463.911 826.013 li
467.296 817.353 li
467.296 826.013 li
469.871 826.013 li
469.871 814.003 li
466.27 814.003 li
463.354 821.511 li
cp
f
477.951 823.96 mo
475.719 823.96 474.296 822.25 474.296 820.017 cv
474.296 817.767 475.719 816.074 477.951 816.074 cv
480.166 816.074 481.588 817.767 481.588 820.017 cv
481.588 822.25 480.166 823.96 477.951 823.96 cv
cp
477.951 813.806 mo
474.313 813.806 471.667 816.398 471.667 820.017 cv
471.667 823.636 474.313 826.228 477.951 826.228 cv
481.57 826.228 484.217 823.636 484.217 820.017 cv
484.217 816.398 481.57 813.806 477.951 813.806 cv
cp
f
494.206 821.548 mo
488.643 814.003 li
486.014 814.003 li
486.014 826.013 li
488.57 826.013 li
488.57 818.181 li
494.296 826.013 li
496.763 826.013 li
496.763 814.003 li
494.206 814.003 li
494.206 821.548 li
cp
f
499.135 826.013 mo
507.634 826.013 li
507.634 823.763 li
501.691 823.763 li
501.691 821.025 li
507.508 821.025 li
507.508 818.775 li
501.691 818.775 li
501.691 816.253 li
507.634 816.253 li
507.634 814.003 li
499.135 814.003 li
499.135 826.013 li
cp
f
514.256 818.81 mo
511.285 814.003 li
508.368 814.003 li
512.977 821.097 li
512.977 826.013 li
515.534 826.013 li
515.534 821.097 li
520.125 814.003 li
517.227 814.003 li
514.256 818.81 li
cp
f
525.864 826.013 mo
528.421 826.013 li
528.421 821.025 li
534.236 821.025 li
534.236 818.775 li
528.421 818.775 li
528.421 816.253 li
534.363 816.253 li
534.363 814.003 li
525.864 814.003 li
525.864 826.013 li
cp
f
538.609 814.003 mo
536.033 814.003 li
536.033 826.013 li
543.686 826.013 li
543.686 823.763 li
538.609 823.763 li
538.609 814.003 li
cp
f
550.634 823.96 mo
548.401 823.96 546.979 822.25 546.979 820.017 cv
546.979 817.767 548.401 816.074 550.634 816.074 cv
552.849 816.074 554.271 817.767 554.271 820.017 cv
554.271 822.25 552.849 823.96 550.634 823.96 cv
cp
550.634 813.806 mo
546.996 813.806 544.35 816.398 544.35 820.017 cv
544.35 823.636 546.996 826.228 550.634 826.228 cv
554.253 826.228 556.9 823.636 556.9 820.017 cv
556.9 816.398 554.253 813.806 550.634 813.806 cv
cp
f
570.796 814.003 mo
568.689 822.681 li
566.421 814.003 li
564.422 814.003 li
562.135 822.681 li
560.029 814.003 li
557.166 814.003 li
560.605 826.013 li
563.324 826.013 li
565.412 817.767 li
567.52 826.013 li
570.238 826.013 li
573.658 814.003 li
570.796 814.003 li
cp
f
457.506 765.771 mo
573.006 765.771 li
573.006 705.271 li
457.506 705.271 li
457.506 765.771 li
cp
577.506 770.271 mo
453.006 770.271 li
453.006 700.771 li
577.506 700.771 li
577.506 770.271 li
cp
.0952911 .0952911 .0952911 rgb
f
476.835 758.771 mo
553.677 758.771 li
554.651 752.436 559.671 747.417 566.006 746.442 cv
566.006 724.6 li
559.671 723.625 554.651 718.606 553.677 712.271 cv
476.835 712.271 li
475.861 718.606 470.841 723.625 464.506 724.6 cv
464.506 746.442 li
470.841 747.417 475.861 752.436 476.835 758.771 cv
cp
558.006 763.271 mo
472.506 763.271 li
472.506 761.021 li
472.506 755.369 467.908 750.771 462.256 750.771 cv
460.006 750.771 li
460.006 720.271 li
462.256 720.271 li
467.908 720.271 472.506 715.673 472.506 710.021 cv
472.506 707.771 li
558.006 707.771 li
558.006 710.021 li
558.006 715.673 562.604 720.271 568.256 720.271 cv
570.506 720.271 li
570.506 750.771 li
568.256 750.771 li
562.604 750.771 558.006 755.369 558.006 761.021 cv
558.006 763.271 li
cp
f
515.256 719.771 mo
506.571 719.771 499.506 726.836 499.506 735.521 cv
499.506 744.206 506.571 751.271 515.256 751.271 cv
523.94 751.271 531.006 744.206 531.006 735.521 cv
531.006 726.836 523.94 719.771 515.256 719.771 cv
cp
515.256 755.771 mo
504.09 755.771 495.006 746.687 495.006 735.521 cv
495.006 724.355 504.09 715.271 515.256 715.271 cv
526.422 715.271 535.506 724.355 535.506 735.521 cv
535.506 746.687 526.422 755.771 515.256 755.771 cv
cp
f
516.579 745.705 mo
513.934 745.705 li
512.276 745.705 510.715 745.06 509.54 743.888 cv
508.362 742.707 507.717 741.145 507.717 739.486 cv
512.217 739.486 li
512.217 739.947 512.396 740.38 512.722 740.707 cv
513.042 741.026 513.475 741.205 513.934 741.205 cv
516.579 741.205 li
517.039 741.205 517.473 741.025 517.8 740.7 cv
518.113 740.384 518.291 739.95 518.291 739.486 cv
518.291 739.023 518.116 738.593 517.798 738.276 cv
517.472 737.951 517.038 737.771 516.579 737.771 cv
513.934 737.771 li
512.277 737.771 510.716 737.125 509.54 735.953 cv
508.364 734.779 507.717 733.217 507.717 731.554 cv
507.717 729.896 508.362 728.335 509.533 727.16 cv
510.716 725.981 512.277 725.335 513.934 725.335 cv
516.579 725.335 li
518.235 725.335 519.796 725.981 520.974 727.153 cv
522.148 728.333 522.791 729.894 522.791 731.554 cv
518.291 731.554 li
518.291 731.091 518.113 730.658 517.792 730.334 cv
517.471 730.015 517.037 729.835 516.579 729.835 cv
513.934 729.835 li
513.476 729.835 513.043 730.015 512.715 730.341 cv
512.396 730.662 512.217 731.094 512.217 731.554 cv
512.217 732.014 512.395 732.445 512.717 732.767 cv
513.043 733.091 513.476 733.271 513.934 733.271 cv
516.579 733.271 li
518.238 733.271 519.8 733.917 520.976 735.09 cv
522.146 736.257 522.791 737.819 522.791 739.486 cv
522.791 741.148 522.148 742.708 520.981 743.881 cv
519.797 745.06 518.236 745.705 516.579 745.705 cv
cp
f
517.508 727.585 mo
513.007 727.585 li
513.007 723.519 li
517.508 723.519 li
517.508 727.585 li
cp
f
517.508 747.519 mo
513.007 747.519 li
513.007 743.455 li
517.508 743.455 li
517.508 747.519 li
cp
f
557.756 737.771 mo
543.756 737.771 li
543.756 733.271 li
557.756 733.271 li
557.756 737.771 li
cp
f
486.756 737.771 mo
472.756 737.771 li
472.756 733.271 li
486.756 733.271 li
486.756 737.771 li
cp
f
542.99 693.021 mo
538.49 693.021 li
538.49 683.021 li
538.49 679.748 539.765 676.671 542.08 674.359 cv
544.394 672.045 547.469 670.771 550.74 670.771 cv
577.756 670.771 li
577.756 675.271 li
550.74 675.271 li
548.671 675.271 546.726 676.078 545.261 677.542 cv
543.796 679.004 542.99 680.951 542.99 683.021 cv
542.99 693.021 li
cp
f
540.74 696.203 mo
529.149 684.612 li
532.331 681.43 li
540.74 689.839 li
549.149 681.43 li
552.331 684.612 li
540.74 696.203 li
cp
f
492.022 693.021 mo
487.522 693.021 li
487.522 683.021 li
487.522 680.951 486.716 679.004 485.252 677.542 cv
483.788 676.078 481.842 675.271 479.772 675.271 cv
452.756 675.271 li
452.756 670.771 li
479.772 670.771 li
483.044 670.771 486.12 672.045 488.434 674.36 cv
490.748 676.672 492.022 679.749 492.022 683.021 cv
492.022 693.021 li
cp
f
489.772 696.203 mo
478.181 684.612 li
481.363 681.43 li
489.772 689.839 li
498.181 681.43 li
501.363 684.612 li
489.772 696.203 li
cp
f
517.506 696.556 mo
513.006 696.556 li
513.006 657.021 li
517.506 657.021 li
517.506 696.556 li
cp
f
506.847 668.612 mo
503.666 665.43 li
515.256 653.839 li
526.847 665.43 li
523.665 668.612 li
515.256 660.203 li
506.847 668.612 li
cp
f
911.04 816.245 mo
914.552 816.245 li
914.552 826.003 li
917.126 826.003 li
917.126 816.245 li
920.619 816.245 li
920.619 813.994 li
911.04 813.994 li
911.04 816.245 li
cp
.0980392 .0941176 .0941176 rgb
f
927.512 819.486 mo
924.812 819.486 li
924.812 816.245 li
927.512 816.245 li
928.521 816.245 929.294 816.857 929.294 817.847 cv
929.294 818.873 928.521 819.486 927.512 819.486 cv
cp
931.923 817.865 mo
931.923 815.632 930.374 813.994 927.872 813.994 cv
922.255 813.994 li
922.255 826.003 li
924.812 826.003 li
924.812 821.736 li
926.684 821.736 li
929.042 826.003 li
931.995 826.003 li
929.276 821.43 li
930.573 821.125 931.923 819.972 931.923 817.865 cv
cp
f
933.828 826.003 mo
942.327 826.003 li
942.327 823.753 li
936.385 823.753 li
936.385 821.016 li
942.2 821.016 li
942.2 818.765 li
936.385 818.765 li
936.385 816.245 li
942.327 816.245 li
942.327 813.994 li
933.828 813.994 li
933.828 826.003 li
cp
f
952.515 821.539 mo
946.95 813.994 li
944.321 813.994 li
944.321 826.003 li
946.878 826.003 li
946.878 818.171 li
952.604 826.003 li
955.071 826.003 li
955.071 813.994 li
952.515 813.994 li
952.515 821.539 li
cp
f
962.179 823.753 mo
960 823.753 li
960 816.245 li
962.196 816.245 li
964.646 816.245 965.942 817.882 965.942 819.99 cv
965.942 822.042 964.556 823.753 962.179 823.753 cv
cp
962.179 813.994 mo
957.443 813.994 li
957.443 826.003 li
962.196 826.003 li
965.942 826.003 968.553 823.626 968.553 819.99 cv
968.553 816.388 965.942 813.994 962.179 813.994 cv
cp
f
972.563 817.271 mo
972.563 816.55 973.176 816.083 974.257 816.083 cv
975.48 816.083 976.776 816.497 977.749 817.397 cv
979.172 815.488 li
977.983 814.39 976.399 813.814 974.49 813.814 cv
971.663 813.814 969.935 815.47 969.935 817.468 cv
969.935 821.988 976.849 820.53 976.849 822.619 cv
976.849 823.321 976.183 823.951 974.761 823.951 cv
973.104 823.951 971.79 823.195 970.943 822.312 cv
969.539 824.311 li
970.673 825.445 972.329 826.22 974.652 826.22 cv
977.876 826.22 979.46 824.563 979.46 822.367 cv
979.46 817.882 972.563 819.162 972.563 817.271 cv
cp
f
945.25 654.771 mo
913.406 654.771 887.5 680.677 887.5 712.521 cv
887.5 744.365 913.406 770.271 945.25 770.271 cv
977.094 770.271 1003 744.365 1003 712.521 cv
1003 680.677 977.094 654.771 945.25 654.771 cv
cp
945.25 774.771 mo
910.925 774.771 883 746.846 883 712.521 cv
883 678.196 910.925 650.271 945.25 650.271 cv
979.575 650.271 1007.5 678.196 1007.5 712.521 cv
1007.5 746.846 979.575 774.771 945.25 774.771 cv
cp
.0952911 .0952911 .0952911 rgb
f
945.254 737.27 mo
940.854 737.27 936.524 736.094 932.735 733.871 cv
935.013 729.99 li
938.112 731.808 941.653 732.77 945.254 732.77 cv
956.42 732.77 965.504 723.686 965.504 712.52 cv
965.504 708.912 964.543 705.375 962.726 702.292 cv
966.603 700.007 li
968.827 703.782 970.004 708.109 970.004 712.52 cv
970.004 726.167 958.901 737.27 945.254 737.27 cv
cp
f
923.905 725.033 mo
921.681 721.259 920.504 716.933 920.504 712.52 cv
920.504 698.873 931.606 687.77 945.254 687.77 cv
949.667 687.77 953.994 688.947 957.768 691.173 cv
955.48 695.048 li
952.4 693.231 948.863 692.27 945.254 692.27 cv
934.088 692.27 925.004 701.354 925.004 712.52 cv
925.004 716.129 925.965 719.666 927.782 722.748 cv
923.905 725.033 li
cp
f
945.25 664.771 mo
918.921 664.771 897.5 686.192 897.5 712.521 cv
897.5 738.85 918.921 760.271 945.25 760.271 cv
971.579 760.271 993 738.85 993 712.521 cv
993 686.192 971.579 664.771 945.25 664.771 cv
cp
945.25 764.771 mo
916.439 764.771 893 741.332 893 712.521 cv
893 683.71 916.439 660.271 945.25 660.271 cv
974.061 660.271 997.5 683.71 997.5 712.521 cv
997.5 741.332 974.061 764.771 945.25 764.771 cv
cp
f
947.5 681.771 mo
943 681.771 li
943 674.771 li
947.5 674.771 li
947.5 681.771 li
cp
f
914.5 714.771 mo
907.5 714.771 li
907.5 710.271 li
914.5 710.271 li
914.5 714.771 li
cp
f
947.5 750.271 mo
943 750.271 li
943 743.271 li
947.5 743.271 li
947.5 750.271 li
cp
f
983 714.771 mo
976 714.771 li
976 710.271 li
983 710.271 li
983 714.771 li
cp
f
945.25 708.77 mo
944.248 708.77 943.307 709.16 942.599 709.868 cv
941.891 710.577 941.5 711.518 941.5 712.52 cv
941.5 713.521 941.89 714.462 942.598 715.169 cv
944.017 716.588 946.484 716.589 947.901 715.17 cv
949.363 713.708 949.363 711.33 947.901 709.868 cv
947.194 709.16 946.252 708.77 945.25 708.77 cv
cp
945.251 720.769 mo
943.047 720.769 940.975 719.911 939.416 718.352 cv
937.858 716.795 937 714.724 937 712.52 cv
937 710.316 937.858 708.245 939.417 706.686 cv
940.975 705.127 943.047 704.27 945.25 704.27 cv
947.453 704.27 949.525 705.127 951.084 706.685 cv
954.299 709.902 954.3 715.135 951.086 718.352 cv
949.525 719.911 947.454 720.769 945.251 720.769 cv
cp
f
937.45 704.717 mo
923.306 734.462 li
953.057 720.325 li
967.195 690.575 li
937.45 704.717 li
cp
913.808 743.958 mo
934.073 701.34 li
976.691 681.077 li
956.434 723.702 li
913.808 743.958 li
cp
f
939.417 709.868 mo
934.171 704.62 li
937.353 701.438 li
942.599 706.686 li
939.417 709.868 li
cp
f
953.154 723.604 mo
947.903 718.352 li
951.085 715.17 li
956.336 720.422 li
953.154 723.604 li
cp
f
666.522 823.762 mo
663.21 823.762 li
663.21 821.025 li
666.522 821.025 li
667.513 821.025 668.054 821.637 668.054 822.393 cv
668.054 823.257 667.478 823.762 666.522 823.762 cv
cp
663.21 816.253 mo
666.415 816.253 li
667.279 816.253 667.819 816.776 667.819 817.514 cv
667.819 818.288 667.279 818.774 666.415 818.774 cv
663.21 818.774 li
663.21 816.253 li
cp
668.359 819.819 mo
669.493 819.584 670.431 818.558 670.431 817.063 cv
670.431 815.461 669.26 814.002 666.974 814.002 cv
660.653 814.002 li
660.653 826.012 li
667.171 826.012 li
669.476 826.012 670.664 824.572 670.664 822.753 cv
670.664 821.258 669.655 820.016 668.359 819.819 cv
cp
.0980392 .0941176 .0941176 rgb
f
677.845 819.495 mo
675.144 819.495 li
675.144 816.253 li
677.845 816.253 li
678.853 816.253 679.628 816.866 679.628 817.856 cv
679.628 818.881 678.853 819.495 677.845 819.495 cv
cp
682.257 817.874 mo
682.257 815.641 680.708 814.002 678.205 814.002 cv
672.587 814.002 li
672.587 826.012 li
675.144 826.012 li
675.144 821.745 li
677.017 821.745 li
679.376 826.012 li
682.328 826.012 li
679.609 821.439 li
680.905 821.133 682.257 819.981 682.257 817.874 cv
cp
f
687.258 821.727 mo
689.13 816.559 li
691.003 821.727 li
687.258 821.727 li
cp
687.528 814.002 mo
682.9 826.012 li
685.8 826.012 li
686.556 823.977 li
691.705 823.977 li
692.462 826.012 li
695.36 826.012 li
690.733 814.002 li
687.528 814.002 li
cp
f
704.665 821.547 mo
699.102 814.002 li
696.474 814.002 li
696.474 826.012 li
699.03 826.012 li
699.03 818.18 li
704.755 826.012 li
707.222 826.012 li
707.222 814.002 li
704.665 814.002 li
704.665 821.547 li
cp
f
715.429 816.073 mo
716.653 816.073 717.733 816.848 718.237 817.82 cv
720.434 816.739 li
719.587 815.227 718.058 813.805 715.429 813.805 cv
711.81 813.805 709.019 816.307 709.019 820.016 cv
709.019 823.708 711.81 826.229 715.429 826.229 cv
718.058 826.229 719.587 824.77 720.434 823.276 cv
718.237 822.213 li
717.733 823.186 716.653 823.959 715.429 823.959 cv
713.231 823.959 711.647 822.286 711.647 820.016 cv
711.647 817.748 713.231 816.073 715.429 816.073 cv
cp
f
730.188 818.72 mo
724.517 818.72 li
724.517 814.002 li
721.96 814.002 li
721.96 826.012 li
724.517 826.012 li
724.517 820.953 li
730.188 820.953 li
730.188 826.012 li
732.764 826.012 li
732.764 814.002 li
730.188 814.002 li
730.188 818.72 li
cp
f
745.452 823.959 mo
743.22 823.959 741.797 822.249 741.797 820.016 cv
741.797 817.766 743.22 816.073 745.452 816.073 cv
747.667 816.073 749.089 817.766 749.089 820.016 cv
749.089 822.249 747.667 823.959 745.452 823.959 cv
cp
745.452 813.805 mo
741.814 813.805 739.168 816.397 739.168 820.016 cv
739.168 823.635 741.814 826.229 745.452 826.229 cv
749.071 826.229 751.718 823.635 751.718 820.016 cv
751.718 816.397 749.071 813.805 745.452 813.805 cv
cp
f
753.515 826.012 mo
756.071 826.012 li
756.071 821.025 li
761.887 821.025 li
761.887 818.774 li
756.071 818.774 li
756.071 816.253 li
762.013 816.253 li
762.013 814.002 li
753.515 814.002 li
753.515 826.012 li
cp
f
763.792 826.012 mo
766.349 826.012 li
766.349 821.025 li
772.165 821.025 li
772.165 818.774 li
766.349 818.774 li
766.349 816.253 li
772.29 816.253 li
772.29 814.002 li
763.792 814.002 li
763.792 826.012 li
cp
f
774.069 826.012 mo
776.626 826.012 li
776.626 814.002 li
774.069 814.002 li
774.069 826.012 li
cp
f
784.835 816.073 mo
786.06 816.073 787.14 816.848 787.644 817.82 cv
789.841 816.739 li
788.994 815.227 787.464 813.805 784.835 813.805 cv
781.216 813.805 778.425 816.307 778.425 820.016 cv
778.425 823.708 781.216 826.229 784.835 826.229 cv
787.464 826.229 788.994 824.77 789.841 823.276 cv
787.644 822.213 li
787.14 823.186 786.06 823.959 784.835 823.959 cv
782.639 823.959 781.054 822.286 781.054 820.016 cv
781.054 817.748 782.639 816.073 784.835 816.073 cv
cp
f
799.866 816.253 mo
799.866 814.002 li
791.367 814.002 li
791.367 826.012 li
799.866 826.012 li
799.866 823.762 li
793.924 823.762 li
793.924 821.025 li
799.739 821.025 li
799.739 818.774 li
793.924 818.774 li
793.924 816.253 li
799.866 816.253 li
cp
f
758.448 677.589 mo
747.588 677.589 738.753 686.419 738.753 697.273 cv
738.753 708.135 747.588 716.972 758.448 716.972 cv
769.311 716.972 778.148 708.135 778.148 697.273 cv
778.148 686.419 769.311 677.589 758.448 677.589 cv
cp
758.448 721.472 mo
745.106 721.472 734.253 710.617 734.253 697.273 cv
734.253 683.938 745.106 673.089 758.448 673.089 cv
771.792 673.089 782.648 683.938 782.648 697.273 cv
782.648 710.617 771.792 721.472 758.448 721.472 cv
cp
.0952911 .0952911 .0952911 rgb
f
758.446 664.013 mo
740.105 664.013 725.185 678.934 725.185 697.275 cv
725.185 704.317 727.519 711.16 732.121 717.615 cv
758.446 754.51 li
784.779 717.611 li
789.382 711.165 791.716 704.323 791.716 697.275 cv
791.716 678.934 776.791 664.013 758.446 664.013 cv
cp
758.446 762.258 mo
728.457 720.228 li
723.3 712.995 720.685 705.272 720.685 697.275 cv
720.685 676.453 737.624 659.513 758.446 659.513 cv
779.272 659.513 796.216 676.453 796.216 697.275 cv
796.216 705.167 793.527 713.102 788.441 720.225 cv
758.446 762.258 li
cp
f
684.113 664.013 mo
675.672 664.013 668.804 670.881 668.804 679.324 cv
668.804 682.565 669.887 685.727 672.021 688.723 cv
684.113 705.67 li
696.211 688.72 li
698.347 685.731 699.429 682.57 699.429 679.324 cv
699.429 670.881 692.559 664.013 684.113 664.013 cv
cp
684.113 713.418 mo
668.357 691.335 li
665.668 687.562 664.304 683.521 664.304 679.324 cv
664.304 668.4 673.19 659.513 684.113 659.513 cv
695.04 659.513 703.929 668.4 703.929 679.324 cv
703.929 683.467 702.526 687.621 699.873 691.334 cv
684.113 713.418 li
cp
f
684.113 673.666 mo
680.991 673.666 678.451 676.204 678.451 679.324 cv
678.451 682.447 680.991 684.988 684.113 684.988 cv
687.237 684.988 689.778 682.447 689.778 679.324 cv
689.778 676.204 687.237 673.666 684.113 673.666 cv
cp
684.113 689.488 mo
678.51 689.488 673.951 684.928 673.951 679.324 cv
673.951 673.722 678.51 669.166 684.113 669.166 cv
689.719 669.166 694.278 673.722 694.278 679.324 cv
694.278 684.928 689.719 689.488 684.113 689.488 cv
cp
f
681.802 721.029 mo
681.802 716.529 li
686.238 716.529 li
686.238 721.029 li
681.802 721.029 li
cp
691.675 721.029 mo
691.675 716.529 li
696.11 716.529 li
696.11 721.029 li
691.675 721.029 li
cp
701.546 721.029 mo
701.546 716.529 li
705.981 716.529 li
705.981 721.029 li
701.546 721.029 li
cp
713.979 722.256 mo
713.173 721.623 712.225 721.22 711.21 721.082 cv
711.621 716.598 li
713.571 716.824 715.391 717.596 716.912 718.843 cv
713.979 722.256 li
cp
715.871 728.633 mo
716.074 728.04 716.177 727.417 716.177 726.781 cv
716.177 726.391 716.138 726.004 716.062 725.628 cv
720.431 724.542 li
720.594 725.277 720.677 726.028 720.677 726.779 cv
720.677 727.981 720.471 729.156 720.063 730.276 cv
715.871 728.633 li
cp
690.651 737.029 mo
690.651 732.529 li
695.087 732.529 li
695.087 737.029 li
690.651 737.029 li
cp
700.522 737.029 mo
700.522 732.529 li
704.959 732.529 li
704.959 737.029 li
700.522 737.029 li
cp
710.395 737.029 mo
710.395 732.529 li
710.426 732.529 li
711.47 732.529 712.482 732.249 713.37 731.716 cv
715.85 735.475 li
714.224 736.493 712.354 737.029 710.427 737.029 cv
710.395 737.029 li
cp
680.521 732.605 mo
681.025 732.554 681.54 732.529 682.054 732.529 cv
685.215 732.529 li
685.215 737.029 li
682.054 737.029 li
681.712 737.029 681.372 737.044 681.041 737.076 cv
680.521 732.605 li
cp
670.496 737.827 mo
671.655 736.482 673.022 735.361 674.563 734.491 cv
676.711 738.447 li
675.67 739.043 674.744 739.803 673.954 740.709 cv
670.496 737.827 li
cp
666.82 748.509 mo
666.809 748.268 666.804 748.025 666.804 747.779 cv
666.804 746.251 667.029 744.744 667.474 743.292 cv
671.755 744.684 li
671.455 745.683 671.304 746.723 671.304 747.779 cv
671.304 747.928 671.307 748.077 671.313 748.225 cv
666.82 748.509 li
cp
671.509 758.795 mo
670.226 757.568 669.179 756.145 668.391 754.56 cv
672.453 752.623 li
672.994 753.692 673.704 754.656 674.567 755.494 cv
671.509 758.795 li
cp
681.959 763.029 mo
680.187 763.018 678.455 762.706 676.806 762.1 cv
678.425 757.902 li
679.555 758.307 680.742 758.518 681.959 758.529 cv
681.959 763.029 li
cp
687.396 763.029 mo
687.396 758.529 li
691.831 758.529 li
691.831 763.029 li
687.396 763.029 li
cp
697.267 763.029 mo
697.267 758.529 li
701.703 758.529 li
701.703 763.029 li
697.267 763.029 li
cp
707.14 763.029 mo
707.14 758.529 li
711.575 758.529 li
711.575 763.029 li
707.14 763.029 li
cp
717.011 763.029 mo
717.011 758.529 li
721.447 758.529 li
721.447 763.029 li
717.011 763.029 li
cp
726.883 763.029 mo
726.883 758.529 li
731.319 758.529 li
731.319 763.029 li
726.883 763.029 li
cp
736.755 763.029 mo
736.755 758.529 li
741.19 758.529 li
741.19 763.029 li
736.755 763.029 li
cp
.0980392 .0941176 .0941176 rgb
f
0 1031.24 mo
3.51123 1031.24 li
3.51123 1041 li
6.08594 1041 li
6.08594 1031.24 li
9.57861 1031.24 li
9.57861 1028.99 li
0 1028.99 li
0 1031.24 li
cp
f
11.2139 1041 mo
13.7705 1041 li
13.7705 1028.99 li
11.2139 1028.99 li
11.2139 1041 li
cp
f
22.6455 1036.5 mo
19.7285 1028.99 li
16.1455 1028.99 li
16.1455 1041 li
18.7021 1041 li
18.7021 1032.34 li
22.0874 1041 li
23.2036 1041 li
26.5884 1032.34 li
26.5884 1041 li
29.1631 1041 li
29.1631 1028.99 li
25.562 1028.99 li
22.6455 1036.5 li
cp
f
31.5356 1041 mo
40.0342 1041 li
40.0342 1038.75 li
34.0923 1038.75 li
34.0923 1036.01 li
39.9082 1036.01 li
39.9082 1033.76 li
34.0923 1033.76 li
34.0923 1031.24 li
40.0342 1031.24 li
40.0342 1028.99 li
31.5356 1028.99 li
31.5356 1041 li
cp
f
53.1553 1036.5 mo
50.2383 1028.99 li
46.6553 1028.99 li
46.6553 1041 li
49.2119 1041 li
49.2119 1032.34 li
52.5972 1041 li
53.7134 1041 li
57.0981 1032.34 li
57.0981 1041 li
59.6729 1041 li
59.6729 1028.99 li
56.0718 1028.99 li
53.1553 1036.5 li
cp
f
65.1421 1036.72 mo
67.0146 1031.55 li
68.8872 1036.72 li
65.1421 1036.72 li
cp
65.4121 1028.99 mo
60.7847 1041 li
63.6836 1041 li
64.4399 1038.97 li
69.5894 1038.97 li
70.3457 1041 li
73.2446 1041 li
68.6172 1028.99 li
65.4121 1028.99 li
cp
f
82.5498 1036.54 mo
76.9858 1028.99 li
74.3574 1028.99 li
74.3574 1041 li
76.9141 1041 li
76.9141 1033.17 li
82.6396 1041 li
85.1064 1041 li
85.1064 1028.99 li
82.5498 1028.99 li
82.5498 1036.54 li
cp
f
90.5757 1036.72 mo
92.4482 1031.55 li
94.3208 1036.72 li
90.5757 1036.72 li
cp
90.8457 1028.99 mo
86.2183 1041 li
89.1172 1041 li
89.8735 1038.97 li
95.0229 1038.97 li
95.7793 1041 li
98.6782 1041 li
94.0508 1028.99 li
90.8457 1028.99 li
cp
f
104.383 1036.59 mo
107.552 1036.59 li
107.552 1038.03 li
107.065 1038.48 106.075 1038.95 105.013 1038.95 cv
102.816 1038.95 101.232 1037.27 101.232 1035.01 cv
101.232 1032.74 102.816 1031.06 105.013 1031.06 cv
106.273 1031.06 107.299 1031.78 107.858 1032.63 cv
109.964 1031.48 li
109.064 1030.05 107.498 1028.79 105.013 1028.79 cv
101.484 1028.79 98.603 1031.21 98.603 1035.01 cv
98.603 1038.79 101.484 1041.22 105.013 1041.22 cv
107.173 1041.22 108.884 1040.34 110.108 1038.97 cv
110.108 1034.36 li
104.383 1034.36 li
104.383 1036.59 li
cp
f
112.139 1041 mo
120.638 1041 li
120.638 1038.75 li
114.696 1038.75 li
114.696 1036.01 li
120.512 1036.01 li
120.512 1033.76 li
114.696 1033.76 li
114.696 1031.24 li
120.638 1031.24 li
120.638 1028.99 li
112.139 1028.99 li
112.139 1041 li
cp
f
129.133 1036.5 mo
126.216 1028.99 li
122.633 1028.99 li
122.633 1041 li
125.189 1041 li
125.189 1032.34 li
128.575 1041 li
129.691 1041 li
133.076 1032.34 li
133.076 1041 li
135.65 1041 li
135.65 1028.99 li
132.049 1028.99 li
129.133 1036.5 li
cp
f
138.023 1041 mo
146.521 1041 li
146.521 1038.75 li
140.58 1038.75 li
140.58 1036.01 li
146.396 1036.01 li
146.396 1033.76 li
140.58 1033.76 li
140.58 1031.24 li
146.521 1031.24 li
146.521 1028.99 li
138.023 1028.99 li
138.023 1041 li
cp
f
156.709 1036.54 mo
151.145 1028.99 li
148.517 1028.99 li
148.517 1041 li
151.073 1041 li
151.073 1033.17 li
156.799 1041 li
159.266 1041 li
159.266 1028.99 li
156.709 1028.99 li
156.709 1036.54 li
cp
f
160.9 1028.99 mo
160.9 1031.24 li
164.411 1031.24 li
164.411 1041 li
166.986 1041 li
166.986 1031.24 li
170.479 1031.24 li
170.479 1028.99 li
160.9 1028.99 li
cp
f
85.2393 878.333 mo
58.1221 878.333 36.0605 900.394 36.0605 927.51 cv
36.0605 954.627 58.1221 976.689 85.2393 976.689 cv
112.356 976.689 134.418 954.627 134.418 927.51 cv
134.418 900.394 112.356 878.333 85.2393 878.333 cv
cp
85.2393 981.189 mo
55.6406 981.189 31.5605 957.109 31.5605 927.51 cv
31.5605 897.913 55.6406 873.833 85.2393 873.833 cv
114.838 873.833 138.918 897.913 138.918 927.51 cv
138.918 957.109 114.838 981.189 85.2393 981.189 cv
cp
f
85.2393 869.762 mo
53.396 869.762 27.4893 895.667 27.4893 927.51 cv
27.4893 959.354 53.396 985.26 85.2393 985.26 cv
117.083 985.26 142.989 959.354 142.989 927.51 cv
142.989 895.667 117.083 869.762 85.2393 869.762 cv
cp
85.2393 989.76 mo
50.9146 989.76 22.9893 961.835 22.9893 927.51 cv
22.9893 893.187 50.9146 865.262 85.2393 865.262 cv
119.564 865.262 147.489 893.187 147.489 927.51 cv
147.489 961.835 119.564 989.76 85.2393 989.76 cv
cp
f
64.4932 896.079 mo
61.4331 890.778 li
65.3306 888.528 li
68.3906 893.829 li
64.4932 896.079 li
cp
f
51.5547 910.664 mo
46.2554 907.602 li
48.5063 903.706 li
53.8057 906.767 li
51.5547 910.664 li
cp
f
47.644 929.762 mo
41.5249 929.762 li
41.5249 925.262 li
47.644 925.262 li
47.644 929.762 li
cp
f
48.5068 951.317 mo
46.2568 947.42 li
51.5552 944.361 li
53.8052 948.257 li
48.5068 951.317 li
cp
f
65.3311 966.495 mo
61.4336 964.245 li
64.4932 958.945 li
68.3906 961.195 li
65.3311 966.495 li
cp
f
87.4902 971.226 mo
82.9902 971.226 li
82.9902 965.107 li
87.4902 965.107 li
87.4902 971.226 li
cp
f
105.148 966.495 mo
102.089 961.195 li
105.986 958.945 li
109.045 964.245 li
105.148 966.495 li
cp
f
121.972 951.317 mo
116.673 948.255 li
118.924 944.359 li
124.223 947.42 li
121.972 951.317 li
cp
f
129.237 929.76 mo
91.7969 929.76 li
91.7969 925.26 li
124.674 925.26 li
123.504 904.525 106.264 888.014 85.2393 888.014 cv
85.2393 883.514 li
109.5 883.514 129.237 903.25 129.237 927.51 cv
129.237 929.76 li
cp
f
85.2393 923.203 mo
82.8643 923.203 80.9316 925.135 80.9316 927.51 cv
80.9316 929.885 82.8643 931.818 85.2393 931.818 cv
87.6143 931.818 89.5469 929.885 89.5469 927.51 cv
89.5469 925.135 87.6143 923.203 85.2393 923.203 cv
cp
85.2393 936.318 mo
80.3828 936.318 76.4316 932.367 76.4316 927.51 cv
76.4316 922.654 80.3828 918.703 85.2393 918.703 cv
90.0957 918.703 94.0469 922.654 94.0469 927.51 cv
94.0469 932.367 90.0957 936.318 85.2393 936.318 cv
cp
f
87.4893 920.953 mo
82.9893 920.953 li
82.9893 904.341 li
87.4893 904.341 li
87.4893 920.953 li
cp
f
219.945 1031.06 mo
221.17 1031.06 222.25 1031.84 222.754 1032.81 cv
224.951 1031.73 li
224.104 1030.22 222.574 1028.79 219.945 1028.79 cv
216.326 1028.79 213.536 1031.3 213.536 1035.01 cv
213.536 1038.7 216.326 1041.22 219.945 1041.22 cv
222.574 1041.22 224.104 1039.76 224.951 1038.27 cv
222.754 1037.2 li
222.25 1038.17 221.17 1038.95 219.945 1038.95 cv
217.749 1038.95 216.165 1037.27 216.165 1035.01 cv
216.165 1032.74 217.749 1031.06 219.945 1031.06 cv
cp
f
234.706 1036.12 mo
234.706 1037.8 233.751 1038.95 231.897 1038.95 cv
230.042 1038.95 229.07 1037.8 229.07 1036.12 cv
229.07 1028.99 li
226.478 1028.99 li
226.478 1036.19 li
226.478 1039.16 228.242 1041.22 231.897 1041.22 cv
235.552 1041.22 237.317 1039.16 237.317 1036.19 cv
237.317 1028.99 li
234.706 1028.99 li
234.706 1036.12 li
cp
f
241.886 1032.27 mo
241.886 1031.55 242.498 1031.08 243.579 1031.08 cv
244.803 1031.08 246.099 1031.49 247.072 1032.4 cv
248.494 1030.49 li
247.306 1029.39 245.721 1028.81 243.813 1028.81 cv
240.986 1028.81 239.257 1030.47 239.257 1032.47 cv
239.257 1036.99 246.171 1035.53 246.171 1037.62 cv
246.171 1038.32 245.505 1038.95 244.083 1038.95 cv
242.426 1038.95 241.112 1038.19 240.266 1037.31 cv
238.861 1039.31 li
239.996 1040.44 241.652 1041.22 243.975 1041.22 cv
247.198 1041.22 248.782 1039.56 248.782 1037.36 cv
248.782 1032.88 241.886 1034.16 241.886 1032.27 cv
cp
f
249.517 1031.24 mo
253.028 1031.24 li
253.028 1041 li
255.603 1041 li
255.603 1031.24 li
259.096 1031.24 li
259.096 1028.99 li
249.517 1028.99 li
249.517 1031.24 li
cp
f
266.007 1038.95 mo
263.774 1038.95 262.352 1037.24 262.352 1035.01 cv
262.352 1032.76 263.774 1031.06 266.007 1031.06 cv
268.222 1031.06 269.644 1032.76 269.644 1035.01 cv
269.644 1037.24 268.222 1038.95 266.007 1038.95 cv
cp
266.007 1028.79 mo
262.37 1028.79 259.723 1031.39 259.723 1035.01 cv
259.723 1038.62 262.37 1041.22 266.007 1041.22 cv
269.626 1041.22 272.273 1038.62 272.273 1035.01 cv
272.273 1031.39 269.626 1028.79 266.007 1028.79 cv
cp
f
280.569 1036.5 mo
277.652 1028.99 li
274.069 1028.99 li
274.069 1041 li
276.626 1041 li
276.626 1032.34 li
280.011 1041 li
281.127 1041 li
284.512 1032.34 li
284.512 1041 li
287.087 1041 li
287.087 1028.99 li
283.486 1028.99 li
280.569 1036.5 li
cp
f
289.459 1041 mo
297.958 1041 li
297.958 1038.75 li
292.016 1038.75 li
292.016 1036.01 li
297.832 1036.01 li
297.832 1033.76 li
292.016 1033.76 li
292.016 1031.24 li
297.958 1031.24 li
297.958 1028.99 li
289.459 1028.99 li
289.459 1041 li
cp
f
305.21 1034.48 mo
302.51 1034.48 li
302.51 1031.24 li
305.21 1031.24 li
306.219 1031.24 306.993 1031.85 306.993 1032.85 cv
306.993 1033.87 306.219 1034.48 305.21 1034.48 cv
cp
309.622 1032.86 mo
309.622 1030.63 308.073 1028.99 305.571 1028.99 cv
299.953 1028.99 li
299.953 1041 li
302.51 1041 li
302.51 1036.73 li
304.382 1036.73 li
306.741 1041 li
309.694 1041 li
306.975 1036.43 li
308.271 1036.12 309.622 1034.97 309.622 1032.86 cv
cp
f
318.349 1032.27 mo
318.349 1031.55 318.961 1031.08 320.042 1031.08 cv
321.266 1031.08 322.563 1031.49 323.535 1032.4 cv
324.958 1030.49 li
323.769 1029.39 322.185 1028.81 320.276 1028.81 cv
317.449 1028.81 315.721 1030.47 315.721 1032.47 cv
315.721 1036.99 322.635 1035.53 322.635 1037.62 cv
322.635 1038.32 321.968 1038.95 320.546 1038.95 cv
318.89 1038.95 317.575 1038.19 316.729 1037.31 cv
315.325 1039.31 li
316.459 1040.44 318.115 1041.22 320.438 1041.22 cv
323.661 1041.22 325.246 1039.56 325.246 1037.36 cv
325.246 1032.88 318.349 1034.16 318.349 1032.27 cv
cp
f
326.953 1041 mo
335.451 1041 li
335.451 1038.75 li
329.509 1038.75 li
329.509 1036.01 li
335.325 1036.01 li
335.325 1033.76 li
329.509 1033.76 li
329.509 1031.24 li
335.451 1031.24 li
335.451 1028.99 li
326.953 1028.99 li
326.953 1041 li
cp
f
342.704 1034.48 mo
340.003 1034.48 li
340.003 1031.24 li
342.704 1031.24 li
343.712 1031.24 344.486 1031.85 344.486 1032.85 cv
344.486 1033.87 343.712 1034.48 342.704 1034.48 cv
cp
347.115 1032.86 mo
347.115 1030.63 345.566 1028.99 343.064 1028.99 cv
337.446 1028.99 li
337.446 1041 li
340.003 1041 li
340.003 1036.73 li
341.875 1036.73 li
344.234 1041 li
347.187 1041 li
344.468 1036.43 li
345.765 1036.12 347.115 1034.97 347.115 1032.86 cv
cp
f
353.81 1038.21 mo
350.479 1028.99 li
347.58 1028.99 li
352.207 1041 li
355.412 1041 li
360.04 1028.99 li
357.141 1028.99 li
353.81 1038.21 li
cp
f
361.152 1041 mo
363.709 1041 li
363.709 1028.99 li
361.152 1028.99 li
361.152 1041 li
cp
f
371.917 1031.06 mo
373.142 1031.06 374.222 1031.84 374.727 1032.81 cv
376.923 1031.73 li
376.077 1030.22 374.546 1028.79 371.917 1028.79 cv
368.298 1028.79 365.508 1031.3 365.508 1035.01 cv
365.508 1038.7 368.298 1041.22 371.917 1041.22 cv
374.546 1041.22 376.077 1039.76 376.923 1038.27 cv
374.727 1037.2 li
374.222 1038.17 373.142 1038.95 371.917 1038.95 cv
369.721 1038.95 368.136 1037.27 368.136 1035.01 cv
368.136 1032.74 369.721 1031.06 371.917 1031.06 cv
cp
f
386.948 1031.24 mo
386.948 1028.99 li
378.45 1028.99 li
378.45 1041 li
386.948 1041 li
386.948 1038.75 li
381.006 1038.75 li
381.006 1036.01 li
386.822 1036.01 li
386.822 1033.76 li
381.006 1033.76 li
381.006 1031.24 li
386.948 1031.24 li
cp
f
250.039 905.63 mo
249.725 905.63 249.432 905.751 249.215 905.97 cv
244.353 910.828 li
234.368 920.816 242.56 945.881 262.244 965.561 cv
275.938 979.254 292.275 987.761 304.878 987.762 cv
310.048 987.762 314.119 986.313 316.976 983.456 cv
321.831 978.602 li
322.052 978.381 322.172 978.086 322.172 977.769 cv
322.172 977.451 322.052 977.155 321.833 976.937 cv
306.972 962.069 li
306.535 961.634 305.737 961.635 305.296 962.074 cv
300.453 966.923 li
298.917 968.46 296.723 969.272 294.107 969.272 cv
294.106 969.272 294.106 969.272 294.105 969.272 cv
287.627 969.273 278.802 964.469 271.071 956.737 cv
265.996 951.663 262.079 945.986 260.044 940.753 cv
257.776 934.921 258.075 930.163 260.885 927.355 cv
265.732 922.5 li
265.956 922.277 266.076 921.983 266.076 921.666 cv
266.076 921.351 265.957 921.06 265.742 920.847 cv
250.873 905.979 li
250.647 905.751 250.354 905.63 250.039 905.63 cv
cp
304.878 992.262 mo
304.878 992.262 304.878 992.262 304.878 992.262 cv
291.125 992.261 273.569 983.25 259.062 968.743 cv
236.915 946.601 229.057 919.763 241.171 907.645 cv
246.025 902.796 li
247.084 901.725 248.513 901.13 250.039 901.13 cv
251.565 901.13 252.994 901.725 254.063 902.806 cv
268.915 917.657 li
269.983 918.712 270.576 920.139 270.576 921.666 cv
270.576 923.189 269.985 924.616 268.912 925.684 cv
264.067 930.537 li
262.638 931.964 262.703 935.173 264.238 939.123 cv
266.052 943.787 269.608 948.912 274.253 953.555 cv
280.961 960.265 288.94 964.773 294.106 964.772 cv
295.522 964.772 296.587 964.426 297.27 963.743 cv
302.119 958.888 li
303.195 957.818 304.622 957.232 306.14 957.232 cv
307.656 957.232 309.08 957.819 310.15 958.883 cv
325.013 973.752 li
326.082 974.819 326.672 976.246 326.672 977.769 cv
326.672 979.291 326.082 980.717 325.01 981.787 cv
320.158 986.637 li
316.479 990.317 311.195 992.262 304.878 992.262 cv
cp
.0952911 .0952911 .0952911 rgb
f
291.819 929.597 mo
293.405 931.364 li
300.692 939.477 311.117 944.131 322.006 944.132 cv
343.198 944.132 360.439 926.89 360.439 905.697 cv
360.439 884.503 343.198 867.261 322.006 867.261 cv
300.813 867.263 283.572 884.504 283.572 905.695 cv
283.572 937.844 li
291.819 929.597 li
cp
279.072 948.709 mo
279.072 905.695 li
279.072 882.023 298.332 862.763 322.006 862.761 cv
345.68 862.761 364.939 882.022 364.939 905.697 cv
364.939 929.372 345.68 948.632 322.006 948.632 cv
322.006 948.632 li
310.632 948.631 299.714 944.087 291.69 936.09 cv
279.072 948.709 li
cp
f
322.006 880.445 mo
308.083 880.447 296.755 891.774 296.755 905.695 cv
296.755 919.618 308.083 930.947 322.007 930.949 cv
335.929 930.949 347.255 919.621 347.255 905.697 cv
347.255 891.773 335.929 880.445 322.006 880.445 cv
cp
322.006 935.449 mo
322.006 935.449 li
305.602 935.447 292.255 922.099 292.255 905.695 cv
292.255 889.292 305.602 875.947 322.006 875.945 cv
338.41 875.945 351.755 889.292 351.755 905.697 cv
351.755 922.102 338.41 935.449 322.006 935.449 cv
cp
f
315.255 907.947 mo
310.755 907.947 li
310.755 903.447 li
315.255 903.447 li
315.255 907.947 li
cp
f
324.255 907.947 mo
319.755 907.947 li
319.755 903.447 li
324.255 903.447 li
324.255 907.947 li
cp
f
333.255 907.947 mo
328.755 907.947 li
328.755 903.447 li
333.255 903.447 li
333.255 907.947 li
cp
f
457.119 1028.99 mo
453.967 1028.99 li
449.718 1034.34 li
449.718 1028.99 li
447.162 1028.99 li
447.162 1041 li
449.718 1041 li
449.718 1037.31 li
450.655 1036.18 li
454.292 1041 li
457.442 1041 li
452.347 1034.63 li
457.119 1028.99 li
cp
.0980392 .0941176 .0941176 rgb
f
458.609 1041 mo
467.108 1041 li
467.108 1038.75 li
461.166 1038.75 li
461.166 1036.01 li
466.982 1036.01 li
466.982 1033.76 li
461.166 1033.76 li
461.166 1031.24 li
467.108 1031.24 li
467.108 1028.99 li
458.609 1028.99 li
458.609 1041 li
cp
f
473.73 1033.8 mo
470.759 1028.99 li
467.842 1028.99 li
472.452 1036.09 li
472.452 1041 li
475.009 1041 li
475.009 1036.09 li
479.6 1028.99 li
476.701 1028.99 li
473.73 1033.8 li
cp
f
487.536 1032.27 mo
487.536 1031.55 488.147 1031.08 489.228 1031.08 cv
490.452 1031.08 491.749 1031.49 492.721 1032.39 cv
494.144 1030.49 li
492.955 1029.39 491.371 1028.81 489.462 1028.81 cv
486.635 1028.81 484.907 1030.47 484.907 1032.47 cv
484.907 1036.99 491.821 1035.53 491.821 1037.62 cv
491.821 1038.32 491.154 1038.95 489.732 1038.95 cv
488.076 1038.95 486.761 1038.19 485.915 1037.31 cv
484.51 1039.31 li
485.645 1040.44 487.301 1041.22 489.624 1041.22 cv
492.847 1041.22 494.432 1039.56 494.432 1037.36 cv
494.432 1032.88 487.536 1034.16 487.536 1032.27 cv
cp
f
501.846 1038.95 mo
499.614 1038.95 498.191 1037.24 498.191 1035.01 cv
498.191 1032.76 499.614 1031.06 501.846 1031.06 cv
504.061 1031.06 505.483 1032.76 505.483 1035.01 cv
505.483 1037.24 504.061 1038.95 501.846 1038.95 cv
cp
501.846 1028.79 mo
498.209 1028.79 495.563 1031.39 495.563 1035.01 cv
495.563 1038.62 498.209 1041.22 501.846 1041.22 cv
505.465 1041.22 508.112 1038.62 508.112 1035.01 cv
508.112 1031.39 505.465 1028.79 501.846 1028.79 cv
cp
f
512.375 1028.99 mo
509.8 1028.99 li
509.8 1041 li
517.453 1041 li
517.453 1038.75 li
512.375 1038.75 li
512.375 1028.99 li
cp
f
526.976 1036.12 mo
526.976 1037.8 526.021 1038.95 524.166 1038.95 cv
522.313 1038.95 521.34 1037.8 521.34 1036.12 cv
521.34 1028.99 li
518.747 1028.99 li
518.747 1036.19 li
518.747 1039.17 520.512 1041.22 524.166 1041.22 cv
527.822 1041.22 529.586 1039.17 529.586 1036.19 cv
529.586 1028.99 li
526.976 1028.99 li
526.976 1036.12 li
cp
f
531.221 1031.24 mo
534.732 1031.24 li
534.732 1041 li
537.307 1041 li
537.307 1031.24 li
540.799 1031.24 li
540.799 1028.99 li
531.221 1028.99 li
531.221 1031.24 li
cp
f
542.435 1041 mo
544.991 1041 li
544.991 1028.99 li
542.435 1028.99 li
542.435 1041 li
cp
f
553.074 1038.95 mo
550.842 1038.95 549.418 1037.24 549.418 1035.01 cv
549.418 1032.76 550.842 1031.06 553.074 1031.06 cv
555.289 1031.06 556.711 1032.76 556.711 1035.01 cv
556.711 1037.24 555.289 1038.95 553.074 1038.95 cv
cp
553.074 1028.79 mo
549.437 1028.79 546.79 1031.39 546.79 1035.01 cv
546.79 1038.62 549.437 1041.22 553.074 1041.22 cv
556.693 1041.22 559.34 1038.62 559.34 1035.01 cv
559.34 1031.39 556.693 1028.79 553.074 1028.79 cv
cp
f
569.328 1036.54 mo
563.766 1028.99 li
561.137 1028.99 li
561.137 1041 li
563.693 1041 li
563.693 1033.17 li
569.418 1041 li
571.885 1041 li
571.885 1028.99 li
569.328 1028.99 li
569.328 1036.54 li
cp
f
576.455 1032.27 mo
576.455 1031.55 577.066 1031.08 578.146 1031.08 cv
579.371 1031.08 580.668 1031.49 581.641 1032.39 cv
583.063 1030.49 li
581.874 1029.39 580.289 1028.81 578.381 1028.81 cv
575.555 1028.81 573.826 1030.47 573.826 1032.47 cv
573.826 1036.99 580.74 1035.53 580.74 1037.62 cv
580.74 1038.32 580.073 1038.95 578.65 1038.95 cv
576.994 1038.95 575.68 1038.19 574.834 1037.31 cv
573.43 1039.31 li
574.564 1040.44 576.221 1041.22 578.543 1041.22 cv
581.766 1041.22 583.351 1039.56 583.351 1037.36 cv
583.351 1032.88 576.455 1034.16 576.455 1032.27 cv
cp
f
515.255 890.441 mo
508.21 890.441 502.479 896.172 502.479 903.218 cv
502.479 910.265 508.21 915.998 515.255 915.998 cv
522.302 915.998 528.035 910.265 528.035 903.218 cv
528.035 896.172 522.302 890.441 515.255 890.441 cv
cp
515.255 920.498 mo
505.729 920.498 497.979 912.747 497.979 903.218 cv
497.979 893.692 505.729 885.941 515.255 885.941 cv
524.783 885.941 532.535 893.692 532.535 903.218 cv
532.535 912.747 524.783 920.498 515.255 920.498 cv
cp
.0952911 .0952911 .0952911 rgb
f
511.848 995.261 mo
518.666 995.261 li
518.666 990.544 li
535.598 990.544 li
535.598 985.617 li
527.135 985.617 li
527.135 971.689 li
535.598 971.689 li
535.598 966.759 li
518.666 966.759 li
518.666 926.721 li
520.427 926.329 li
531.15 923.94 538.934 914.22 538.934 903.218 cv
538.934 890.163 528.312 879.541 515.255 879.541 cv
502.198 879.541 491.575 890.163 491.575 903.218 cv
491.575 914.22 499.36 923.939 510.087 926.329 cv
511.848 926.721 li
511.848 995.261 li
cp
523.166 999.761 mo
507.348 999.761 li
507.348 930.267 li
495.498 926.796 487.075 915.701 487.075 903.218 cv
487.075 887.681 499.716 875.041 515.255 875.041 cv
530.793 875.041 543.434 887.681 543.434 903.218 cv
543.434 915.702 535.013 926.796 523.166 930.267 cv
523.166 962.259 li
540.098 962.259 li
540.098 976.189 li
531.635 976.189 li
531.635 981.117 li
540.098 981.117 li
540.098 995.044 li
523.166 995.044 li
523.166 999.761 li
cp
f
517.506 867.4 mo
513.005 867.4 li
513.005 857.511 li
517.506 857.511 li
517.506 867.4 li
cp
f
499.469 870.988 mo
495.685 861.851 li
499.842 860.128 li
503.626 869.265 li
499.469 870.988 li
cp
f
488.335 879.485 mo
481.343 872.491 li
484.525 869.309 li
491.518 876.303 li
488.335 879.485 li
cp
f
481.3 891.594 mo
472.165 887.809 li
473.887 883.651 li
483.023 887.436 li
481.3 891.594 li
cp
f
479.436 905.472 mo
469.547 905.472 li
469.547 900.972 li
479.436 900.972 li
479.436 905.472 li
cp
f
473.889 922.793 mo
472.167 918.635 li
481.303 914.852 li
483.024 919.01 li
473.889 922.793 li
cp
f
484.528 937.133 mo
481.346 933.952 li
488.338 926.961 li
491.52 930.143 li
484.528 937.133 li
cp
f
531.044 870.987 mo
526.886 869.266 li
530.667 860.129 li
534.825 861.85 li
531.044 870.987 li
cp
f
542.175 879.483 mo
538.993 876.301 li
545.987 869.307 li
549.169 872.489 li
542.175 879.483 li
cp
f
549.209 891.591 mo
547.486 887.435 li
556.621 883.648 li
558.344 887.804 li
549.209 891.591 li
cp
f
551.074 905.468 mo
551.074 900.968 li
560.965 900.966 li
560.965 905.466 li
551.074 905.468 li
cp
f
556.624 922.79 mo
547.487 919.006 li
549.208 914.848 li
558.345 918.631 li
556.624 922.79 li
cp
f
545.987 937.131 mo
538.993 930.137 li
542.175 926.956 li
549.169 933.95 li
545.987 937.131 li
cp
f
706.741 1031.25 mo
710.252 1031.25 li
710.252 1041.01 li
712.827 1041.01 li
712.827 1031.25 li
716.319 1031.25 li
716.319 1029 li
706.741 1029 li
706.741 1031.25 li
cp
.0980392 .0941176 .0941176 rgb
f
717.955 1041.01 mo
726.454 1041.01 li
726.454 1038.76 li
720.512 1038.76 li
720.512 1036.02 li
726.327 1036.02 li
726.327 1033.77 li
720.512 1033.77 li
720.512 1031.25 li
726.454 1031.25 li
726.454 1029 li
717.955 1029 li
717.955 1041.01 li
cp
f
731.546 1036.73 mo
733.418 1031.56 li
735.29 1036.73 li
731.546 1036.73 li
cp
731.815 1029 mo
727.188 1041.01 li
730.087 1041.01 li
730.843 1038.98 li
735.993 1038.98 li
736.749 1041.01 li
739.647 1041.01 li
735.021 1029 li
731.815 1029 li
cp
f
750.177 1029 mo
747.261 1036.51 li
744.344 1029 li
740.761 1029 li
740.761 1041.01 li
743.317 1041.01 li
743.317 1032.35 li
746.702 1041.01 li
747.819 1041.01 li
751.204 1032.35 li
751.204 1041.01 li
753.778 1041.01 li
753.778 1029 li
750.177 1029 li
cp
f
774.704 936.928 mo
773.994 922.732 766.421 909.616 754.447 901.844 cv
756.896 898.069 li
770.079 906.625 778.416 921.069 779.198 936.704 cv
774.704 936.928 li
cp
.0952911 .0952911 .0952911 rgb
f
730.26 988.195 mo
722.419 988.195 714.914 986.387 707.955 982.823 cv
710.006 978.817 li
716.324 982.054 723.139 983.695 730.26 983.695 cv
737.38 983.695 744.194 982.053 750.513 978.816 cv
752.565 982.821 li
745.605 986.386 738.101 988.195 730.26 988.195 cv
cp
f
685.815 936.93 mo
681.321 936.706 li
682.104 921.068 690.44 906.625 703.623 898.069 cv
706.072 901.844 li
694.099 909.615 686.525 922.731 685.815 936.93 cv
cp
f
741.465 915.617 mo
741.245 914.163 740.582 912.847 739.549 911.813 cv
738.271 910.536 736.57 909.832 734.76 909.832 cv
725.75 909.832 li
723.946 909.832 722.249 910.536 720.971 911.813 cv
719.938 912.847 719.274 914.163 719.055 915.617 cv
714.605 914.945 li
714.97 912.533 716.07 910.35 717.789 908.631 cv
719.917 906.503 722.744 905.332 725.75 905.332 cv
734.76 905.332 li
737.772 905.332 740.603 906.503 742.73 908.631 cv
744.449 910.35 745.55 912.533 745.914 914.945 cv
741.465 915.617 li
cp
f
730.26 887.121 mo
727.326 887.121 724.939 889.507 724.939 892.441 cv
724.939 895.374 727.326 897.759 730.26 897.759 cv
733.192 897.759 735.578 895.374 735.578 892.441 cv
735.578 889.507 733.192 887.121 730.26 887.121 cv
cp
730.26 902.259 mo
724.845 902.259 720.439 897.855 720.439 892.441 cv
720.439 887.026 724.845 882.621 730.26 882.621 cv
735.674 882.621 740.078 887.026 740.078 892.441 cv
740.078 897.855 735.674 902.259 730.26 902.259 cv
cp
f
759.555 985.757 mo
755.105 985.085 li
755.47 982.672 756.57 980.488 758.289 978.77 cv
760.415 976.643 763.243 975.472 766.25 975.472 cv
775.26 975.472 li
778.267 975.472 781.095 976.643 783.221 978.77 cv
784.954 980.505 786.055 982.696 786.406 985.107 cv
781.953 985.755 li
781.742 984.31 781.08 982.995 780.038 981.951 cv
778.763 980.675 777.065 979.972 775.26 979.972 cv
766.25 979.972 li
764.444 979.972 762.747 980.675 761.471 981.952 cv
760.438 982.986 759.774 984.301 759.555 985.757 cv
cp
f
770.756 957.261 mo
767.822 957.261 765.436 959.648 765.436 962.582 cv
765.436 965.514 767.822 967.9 770.756 967.9 cv
773.688 967.9 776.074 965.514 776.074 962.582 cv
776.074 959.648 773.688 957.261 770.756 957.261 cv
cp
770.756 972.4 mo
765.341 972.4 760.936 967.996 760.936 962.582 cv
760.936 957.167 765.341 952.761 770.756 952.761 cv
776.17 952.761 780.574 957.167 780.574 962.582 cv
780.574 967.996 776.17 972.4 770.756 972.4 cv
cp
f
700.965 985.757 mo
700.745 984.301 700.082 982.986 699.049 981.952 cv
697.772 980.675 696.075 979.972 694.27 979.972 cv
685.26 979.972 li
683.454 979.972 681.757 980.675 680.48 981.952 cv
679.439 982.995 678.777 984.31 678.566 985.755 cv
674.113 985.107 li
674.465 982.696 675.565 980.505 677.298 978.771 cv
679.425 976.643 682.253 975.472 685.26 975.472 cv
694.27 975.472 li
697.276 975.472 700.104 976.643 702.23 978.77 cv
703.949 980.488 705.05 982.672 705.414 985.085 cv
700.965 985.757 li
cp
f
689.764 957.261 mo
686.831 957.261 684.445 959.648 684.445 962.582 cv
684.445 965.514 686.831 967.9 689.764 967.9 cv
692.697 967.9 695.084 965.514 695.084 962.582 cv
695.084 959.648 692.697 957.261 689.764 957.261 cv
cp
689.764 972.4 mo
684.35 972.4 679.945 967.996 679.945 962.582 cv
679.945 957.167 684.35 952.761 689.764 952.761 cv
695.179 952.761 699.584 957.167 699.584 962.582 cv
699.584 967.996 695.179 972.4 689.764 972.4 cv
cp
f
732.51 939.193 mo
728.01 939.193 li
728.01 925.339 li
732.51 925.339 li
732.51 939.193 li
cp
f
719.385 948.071 mo
717.135 944.174 li
729.135 937.245 li
731.385 941.141 li
719.385 948.071 li
cp
f
741.135 948.071 mo
729.135 941.141 li
731.385 937.245 li
743.385 944.174 li
741.135 948.071 li
cp
f
730.26 868.191 mo
716.889 868.191 706.01 879.07 706.01 892.441 cv
706.01 905.812 716.889 916.691 730.26 916.691 cv
743.631 916.691 754.51 905.812 754.51 892.441 cv
754.51 879.07 743.631 868.191 730.26 868.191 cv
cp
730.26 921.191 mo
714.407 921.191 701.51 908.293 701.51 892.441 cv
701.51 876.588 714.407 863.691 730.26 863.691 cv
746.112 863.691 759.01 876.588 759.01 892.441 cv
759.01 908.293 746.112 921.191 730.26 921.191 cv
cp
f
770.756 938.332 mo
757.385 938.332 746.506 949.21 746.506 962.582 cv
746.506 975.953 757.385 986.832 770.756 986.832 cv
784.127 986.832 795.006 975.953 795.006 962.582 cv
795.006 949.21 784.127 938.332 770.756 938.332 cv
cp
770.756 991.332 mo
754.903 991.332 742.006 978.434 742.006 962.582 cv
742.006 946.729 754.903 933.832 770.756 933.832 cv
786.608 933.832 799.506 946.729 799.506 962.582 cv
799.506 978.434 786.608 991.332 770.756 991.332 cv
cp
f
689.764 938.332 mo
676.393 938.332 665.514 949.21 665.514 962.582 cv
665.514 975.952 676.393 986.83 689.764 986.83 cv
703.135 986.83 714.014 975.952 714.014 962.582 cv
714.014 949.21 703.135 938.332 689.764 938.332 cv
cp
689.764 991.33 mo
673.911 991.33 661.014 978.433 661.014 962.582 cv
661.014 946.729 673.911 933.832 689.764 933.832 cv
705.616 933.832 718.514 946.729 718.514 962.582 cv
718.514 978.433 705.616 991.33 689.764 991.33 cv
cp
f
908.296 1032.27 mo
908.296 1031.55 908.908 1031.08 909.989 1031.08 cv
911.213 1031.08 912.509 1031.49 913.481 1032.4 cv
914.904 1030.49 li
913.716 1029.39 912.132 1028.81 910.223 1028.81 cv
907.396 1028.81 905.667 1030.47 905.667 1032.47 cv
905.667 1036.99 912.581 1035.53 912.581 1037.62 cv
912.581 1038.32 911.915 1038.95 910.493 1038.95 cv
908.837 1038.95 907.522 1038.19 906.676 1037.31 cv
905.271 1039.31 li
906.405 1040.44 908.062 1041.22 910.385 1041.22 cv
913.608 1041.22 915.192 1039.56 915.192 1037.36 cv
915.192 1032.88 908.296 1034.16 908.296 1032.27 cv
cp
.0980392 .0941176 .0941176 rgb
f
925.128 1036.12 mo
925.128 1037.8 924.173 1038.95 922.319 1038.95 cv
920.464 1038.95 919.492 1037.8 919.492 1036.12 cv
919.492 1028.99 li
916.899 1028.99 li
916.899 1036.19 li
916.899 1039.16 918.664 1041.22 922.319 1041.22 cv
925.974 1041.22 927.738 1039.16 927.738 1036.19 cv
927.738 1028.99 li
925.128 1028.99 li
925.128 1036.12 li
cp
f
935.944 1031.06 mo
937.169 1031.06 938.249 1031.84 938.754 1032.81 cv
940.95 1031.73 li
940.104 1030.22 938.573 1028.79 935.944 1028.79 cv
932.325 1028.79 929.535 1031.3 929.535 1035.01 cv
929.535 1038.7 932.325 1041.22 935.944 1041.22 cv
938.573 1041.22 940.104 1039.76 940.95 1038.26 cv
938.754 1037.2 li
938.249 1038.17 937.169 1038.95 935.944 1038.95 cv
933.748 1038.95 932.164 1037.27 932.164 1035.01 cv
932.164 1032.74 933.748 1031.06 935.944 1031.06 cv
cp
f
948.311 1031.06 mo
949.535 1031.06 950.615 1031.84 951.12 1032.81 cv
953.316 1031.73 li
952.47 1030.22 950.939 1028.79 948.311 1028.79 cv
944.691 1028.79 941.901 1031.3 941.901 1035.01 cv
941.901 1038.7 944.691 1041.22 948.311 1041.22 cv
950.939 1041.22 952.47 1039.76 953.316 1038.26 cv
951.12 1037.2 li
950.615 1038.17 949.535 1038.95 948.311 1038.95 cv
946.114 1038.95 944.529 1037.27 944.529 1035.01 cv
944.529 1032.74 946.114 1031.06 948.311 1031.06 cv
cp
f
954.843 1041 mo
963.341 1041 li
963.341 1038.75 li
957.399 1038.75 li
957.399 1036.01 li
963.216 1036.01 li
963.216 1033.76 li
957.399 1033.76 li
957.399 1031.24 li
963.341 1031.24 li
963.341 1028.99 li
954.843 1028.99 li
954.843 1041 li
cp
f
967.533 1032.27 mo
967.533 1031.55 968.146 1031.08 969.226 1031.08 cv
970.45 1031.08 971.746 1031.49 972.719 1032.4 cv
974.142 1030.49 li
972.952 1029.39 971.368 1028.81 969.46 1028.81 cv
966.633 1028.81 964.904 1030.47 964.904 1032.47 cv
964.904 1036.99 971.818 1035.53 971.818 1037.62 cv
971.818 1038.32 971.151 1038.95 969.729 1038.95 cv
968.073 1038.95 966.759 1038.19 965.913 1037.31 cv
964.508 1039.31 li
965.643 1040.44 967.299 1041.22 969.622 1041.22 cv
972.845 1041.22 974.429 1039.56 974.429 1037.36 cv
974.429 1032.88 967.533 1034.16 967.533 1032.27 cv
cp
f
978.333 1032.27 mo
978.333 1031.55 978.944 1031.08 980.025 1031.08 cv
981.249 1031.08 982.546 1031.49 983.519 1032.4 cv
984.94 1030.49 li
983.753 1029.39 982.168 1028.81 980.259 1028.81 cv
977.433 1028.81 975.704 1030.47 975.704 1032.47 cv
975.704 1036.99 982.618 1035.53 982.618 1037.62 cv
982.618 1038.32 981.952 1038.95 980.529 1038.95 cv
978.873 1038.95 977.559 1038.19 976.712 1037.31 cv
975.308 1039.31 li
976.442 1040.44 978.099 1041.22 980.421 1041.22 cv
983.645 1041.22 985.229 1039.56 985.229 1037.36 cv
985.229 1032.88 978.333 1034.16 978.333 1032.27 cv
cp
f
958.647 878.433 mo
962.209 880.157 li
962.209 862.261 li
955.086 862.261 li
955.086 880.157 li
958.647 878.433 li
cp
966.709 887.334 mo
958.647 883.433 li
950.586 887.334 li
950.586 857.761 li
966.709 857.761 li
966.709 887.334 li
cp
.0952911 .0952911 .0952911 rgb
f
925.686 973.39 mo
964.82 973.39 li
964.82 962.677 li
925.686 962.677 li
925.686 973.39 li
cp
969.32 977.89 mo
921.186 977.89 li
921.186 958.177 li
969.32 958.177 li
969.32 977.89 li
cp
f
972.634 907.709 mo
970.651 903.668 li
981.646 898.276 988.75 886.89 988.75 874.662 cv
988.75 873.847 988.43 873.076 987.848 872.492 cv
987.272 871.917 986.504 871.599 985.689 871.599 cv
978.601 871.599 li
978.601 867.099 li
985.689 867.099 li
987.704 867.099 989.602 867.884 991.031 869.311 cv
992.464 870.75 993.25 872.648 993.25 874.662 cv
993.25 888.593 985.157 901.566 972.634 907.709 cv
cp
f
917.866 907.708 mo
905.343 901.564 897.25 888.592 897.25 874.662 cv
897.25 872.648 898.036 870.75 899.465 869.316 cv
900.898 867.884 902.796 867.099 904.811 867.099 cv
911.899 867.099 li
911.899 871.599 li
904.811 871.599 li
903.996 871.599 903.228 871.917 902.648 872.497 cv
902.07 873.076 901.75 873.847 901.75 874.662 cv
901.75 886.888 908.854 898.275 919.849 903.669 cv
917.866 907.708 li
cp
f
908.757 992.761 mo
981.743 992.761 li
981.743 987.576 li
908.757 987.576 li
908.757 992.761 li
cp
986.243 997.261 mo
904.257 997.261 li
904.257 983.076 li
986.243 983.076 li
986.243 997.261 li
cp
f
915.998 983.076 mo
974.508 983.076 li
974.508 952.994 li
915.998 952.994 li
915.998 983.076 li
cp
979.008 987.576 mo
911.498 987.576 li
911.498 948.494 li
979.008 948.494 li
979.008 987.576 li
cp
f
929.933 948.494 mo
960.568 948.494 li
960.514 947.939 960.27 947.424 959.87 947.024 cv
959.412 946.567 958.803 946.314 958.156 946.314 cv
952.006 946.314 947.002 941.312 947.002 935.164 cv
947.002 931.172 949.148 927.462 952.603 925.483 cv
952.791 925.387 li
953.046 925.271 953.294 925.139 953.543 925.004 cv
966.981 917.953 976.353 895.071 976.353 869.349 cv
976.353 862.261 li
914.147 862.261 li
914.147 869.349 li
914.147 895.071 923.519 917.953 936.937 924.994 cv
937.207 925.139 937.457 925.272 937.712 925.388 cv
937.897 925.483 li
941.352 927.462 943.498 931.172 943.498 935.164 cv
943.498 941.312 938.494 946.314 932.344 946.314 cv
931.697 946.314 931.088 946.567 930.629 947.025 cv
930.23 947.423 929.987 947.938 929.933 948.494 cv
cp
965.081 952.994 mo
925.42 952.994 li
925.42 948.74 li
925.42 946.889 926.141 945.15 927.448 943.842 cv
928.758 942.534 930.496 941.814 932.344 941.814 cv
936.013 941.814 938.998 938.831 938.998 935.164 cv
938.998 932.811 937.751 930.624 935.738 929.433 cv
935.431 929.289 935.127 929.13 934.824 928.967 cv
919.773 921.069 909.647 897.106 909.647 869.349 cv
909.647 857.761 li
980.853 857.761 li
980.853 869.349 li
980.853 897.106 970.727 921.069 955.655 928.978 cv
955.37 929.131 955.069 929.289 954.762 929.433 cv
952.748 930.625 951.502 932.811 951.502 935.164 cv
951.502 938.831 954.487 941.814 958.156 941.814 cv
960.004 941.814 961.742 942.534 963.051 943.841 cv
964.36 945.151 965.081 946.89 965.081 948.74 cv
965.081 952.994 li
cp
f
926.83 905.68 mo
922.043 895.907 919.383 883.129 919.34 869.702 cv
923.84 869.688 li
923.881 882.447 926.378 894.527 930.871 903.702 cv
926.83 905.68 li
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 16.0.0
%%For: (Max) ()
%%Title: (vector_421.eps)
%%CreationDate: 10/27/2015 3:38 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb"-6H]K8jE@(Ir!.BY%a+1P/C0/,!1Nb>dk\bQj^$lDm^%R/b(sj6pid->!E&dRArU`%o3>#Co9hM#)A(Lp>^DX>,d?XCIbfG%!
%3;FqOErYQs\"CE\qoek\s6ia%;Q2T>8ZCmBPT#!%gCJf'-\(^EhYca5f?Xu?mB')(SSm37-^p:SfhuFogTo-GNF0>Fp!&i,hgY?i
%p[;G%rqbr9G@/"0s7K0+*e+(YmEK"Pr2'ASjj!hsqMR#`rTh`,(GB.oZaI@@oCgkdRkJ)4]mKe@b7?Q/m7(O[N/dl*CMRK/^sA8>
%ci3i8'E.k%LC\QXG&H1/ci3;1HqBOmo:pg5g$<"Zq>/#+QQP(sHi$$WN'm(5I+P?Irq`[^qLtKaT$feeZ<uJ$Gl<PehgFr[f=X,(
%Z6)=/p]dYkcSp@P'dR.meSZ0qr+uA[[ksBn5!MX6ml9[oTC?p9.5t8Yq4#-EJSSd:Y\uJ.frq_@80;+;Ors3@nHT$eop9$6naaS5
%p>XrqqY2RiLkG'Mo70^n#e%>%bdQF,,e*&/*1cs&?f&Hpf:Upt\(<8tJ,S7$mdC%/T>14%XH.1:2#cUOpt7T5]RKm)Dr5rHf9@_R
%HLZL\mdo%;f^ZugT"]HkXuni^s7R]:p>u0Y^A_NXo%b,>i4]0_Ao."L^\[*9^NfS?f,/)@0Cm_%]mfjfn,<Q1od@*,gJYKYVUg#s
%R_?K'G2N%CPIFu<\CMW?e]1D<k,AIC&i^uY(>%g7S%l3opt+ulr:8+eT4Ya_kqBDnp1NjOI!uK"RpJI3nVM/(l2MY$qi0?Gq!d88
%gN\mG5C<1Kdm2f.s75?_o]+]P+5VF&*r-^]mqmlq[F,#n]3kDQO"^F%S`6-Br)kHCm'#8KK/[^giZJ0XYOoHsg#%2INW&FohS8sM
%X$;+2Mg%D`_2n"JJ+laBDuRfC=!-;4[m'fhk-+gLJ(^/1hu&:onE+ZH^O0VUYj^nFgQuimqXM=?6@7#PYAa&;CWipTmk=2![qTb:
%e<Ipl!_FKkrlaU\hL0N-nWLP4qt\Lo^O6(3[lO9AI.?dpbP*sn`B*a#]_NB@btECpa4V!V[lUW#SZhB+Yn<%BG)>*s_!+qXl;B9"
%r6!OTlaNL9^!<dacYd(+Dfa'ns8'ogHM>CJYJ4<i4A48Oht$2!]RKnSYM\V'hgb7jYAX@5h7G>#(SLs/=%=XQs.D:MDD&4)rmV,<
%QiDM1rp]K:0AcWtrQDBnp#af&cMraYY7(;`[bkg6^#E8re.o1%=r7(G`P8>:`#sC(r/E/?h_;0^lS1X(f9[RcrQ<X55J;RBrlsbY
%@kOL&J+;['Xh?YXs5qR]f11>(qsl7>Cc=TYe]Y-=`fX&p,EMH)cYS.l0*"64a_tN)k0<kZo+?KGroN<]D!h&_c&_;-pr;1S5QBH_
%I/If]>e[cKr.dN3`uk:g]5;oKMlgn:^8/F)<r>TC1T)6XNP;eTnC,Uf-F4HPc(BB,s8I$G/tP*)IoQ$/BRLPRmGbPoVes=#YZuYN
%]:\']lehC3^[K]qmJ@\iQc3b?%:/L:n%SSpk/B8dIm@?\?gL0<3og8>i=GKkT4FS<s)Tgj<;SNLm.T]A%/W`t5P(FomeuVOr*Z-5
%p3FTscM3Wrb(fpLT>^aC:TqM@s4<n.J*YSY^]48M+7SHas4cc4YIa0mSe#Ia]U)L`b'eO`O6*>f]7%"kCTG./3pU("Yg6g-C0NJI
%`D""sp=@u7GO<+-[)_n4_]S674`#ZmBV*E'I_WYM+8;\IFn:B7mB,i*o\&^06\!K*a#9*oOtt8U)1B_K2t"`(GT9M#ZWC,'h=o];
%T4?a&qtYj<STsJTGQ!_S_^Fb[B>hR:pKdT/r9W`Z:UA`FDj-eTqqUf7@%S8/H.9m[pp<3S,5*Bjq4kX$7sg/Tp5[hXM'$O&ilOBF
%p<fK;qqTrhc9B]@K-,GU0C57DB_JG#r9sqEML@1%P'qQW%o;nEZk#p+5POl^Zd6">^#=alcYaij3V;W)iQ"FH%tF)1lsgQIs)e8T
%pW]K&qaC7Th:fdFrVbRN]H?nHI_TgqotK'L:A<N!e(peTp;>_bh;-o")gD6u^MA&dY1RD`GM@M6p3,er*ir;<F`+Z`DR3N%kF(Hj
%Snn\FYhQh"!AVX!Ts<>`WA[SY%@F7^oga?@&,k>hd^0&*D-5IfYlRmAR&.Oa]'o#_H1hMXUrgs=qV8:#_tq#JT?!!V:\\VA`/E<(
%NV6so54>I6=mnQ,Cm](lgo*,(b_`;pf&-3[K1=[62OS>[;gG\JJ$?IAD9cQj(<gX>r82pUs40D\+1Lr)2lmsArqSOGD"&e;P@Ash
%XH0sce[.NP\%[2tIJ@?j3a8dgleUBCH!#"B=g(%lmm#Ynfbd:=,)VA=(9ccO%*H?To:+n&a*2ss_VanB2:'I7c"dO<))[%(G@S?R
%Q^;5d0(#X9&^PX@abXYAD[9hlUO1^!_t^Au^9bhgNUD/kP,#X/FPGHVOc=(&cV\OofLC"g&Y3`+^Tc*J3KgG&iQ]m7$WE[AqtQoq
%$,#,5GEa0K8Uhf[6[eVq?1W0aO3RR"acAUJP<ICDDBG>^:GrBJCrehL=i1rZ2uRDge4tW\d!?4`2PM70bWX[lHQ8))_]S7d4Ka6H
%;]D@O<<VX/hXP7RH?*Z%mm4"3I@dsSBPk"gkNg<qf,e^dXX1^,Co.iLel:r\XYl<Cc%C/tiu6L`rQfC#bb&-T:<UoRca2a41Akjn
%j^biY:eNSBZ6T'_]Bph]0Q_W3>IK#u_)IR5p7ds;F.-LtPMu/GT0n?;10\P7_=iWL*q:$r(7_)]<bJcZqlNSeEOu#8dTY8YVHFnO
%\ZOU+er<%,o^`so1j;-@/\?FL3`0\deEM&k^]1ih:H6?0Y>P3#S!d4QZ*nKZ4iY-OAj)YYfC.5S3uY2Mp\+!t0403Xo1Kmf_%"ld
%;rY,RJKb$VqCb_Ce^/bM0X3l,Ep64RD_')d^._Zc?pC)0l1F`CVrN,-J&`6pZ#XcgQ_YPf>Uf$HSdOk^NV:d&D59bXBW"j0BFA[a
%JR0nhF]M(38r$S2'U,REIND;-komG'AN#uS48[;eXKtt3>&Q-?Ei/#NZ(+#>3doVG4p0#(W-^q/_m?TiqYBpXFhV^Nhfk=8:Ca],
%d27e5f4lkK]"9PB7iV<DD]OH@1s7]cD%rEHUN,L-O:KbRSXMmc7o%=);tGTYc";uqgmXdoc(187%q\AUYqa5qO_aQ_4dt&rkh&k`
%R,(G"3B%Jl]odqGgr8Nl-t,]QQb!s.r7_u4/4Ws,YT1W6'MD=T8m%B#BKK^pI%gcl)\,nRTbZ!hbO)Z0"tdDXX6u!Kb<>6Z(UWZ#
%H%M;oSIZNkQLH9aE@ahiTD$fJGH9'Jon9NDSpT=<pGRG[hYWNYH/=2,qs`gg]5'XbCs9Yj0B&]JI6"r!iMsVBZcYHpH5/'5fim`F
%or[uVEaOmam2)PXA!<[4%pL-FR;ql)qYB@>:\Aj;rB8hRhWJhYe`YN\dHf\lYO9*-*nLf^c`tYEZbAK_ft""UqYh-kV1/8/:K7Oi
%545E6VsOA(m4%\Vd8T>.kc''4YG/L82TC-'rd+EoM.ib5B-l^%\FeG6V8q$L[A2W&n$d)9^#2Ra^O9<bniQmIhg3:<RBu'i8R#]m
%U*8l^+)?\q]%oiGlNN5)kQHl$N3X[!-#IO<[QM,Ra-[bR:VF"&UsRV/h0I$QoRnnA[J",jlH.%9Z#S0n_]BYH6MRMjo*#_PZ6!W1
%Bt6?eFE6g6g'l[GNE-/JKoK-M^La+O3,Fg$rnu7+$6qBON6QIaAA32f`OsW;&T.&?bMBXa[b,s%<q2Js["[B%"8u6+C[GCP,Z5?k
%g$Kgu(jWsEa;omXh0Q#FJ0]DrjG!9b^%ETO-/Cp7"i6A50jO:$!L#Tu9W[tM_^;dUn,)DI^A>RIr^_H[EHcRf".Y.[!8;G)B8"@m
%LGm:MYN#?W'/%W"db:8Y'6rTKL\%KPrk?ZOqkQ$sI`s<)F(Wk8iQV4CVu"BcWA\DO'5mIuZT`):rD#i$iKuiRdF[jSN/)2?fAG9]
%^.,GdN.@thrWehM0@%kV:%@[7_(UqoCWu@*=Pg09jmrI<rCm:o7P:<.d7]3"(r9/[1SU8sLh(raJFGX[CmuR#-8;2mgRd6-miFR%
%SQhP0qK16G4#["bkL':NH*ff.7u2ZLXCsLRMTq;pQ[V7:b@V;tP3GQ-=.!9Y,;"V3WkQIBD"4IZQaMFmM0:u8<OODAG.2+do=EqV
%\%_m.XZ\jJD:%_%`F_/7\)5poG[Z6aabGYs=rTX7:'mEq38-:[?J)bj=ge9>XY5!KS%7nn"8C5'5^M9LTg!'_<7oNH:h9?E,[5LG
%Ok&@dAA:Fr?cMZ7J,T8)f^[&q4._544Rf'j@YA&%Ho]%s$G[W)R(F)bGuu4,I8!Ec&>Kbji6'D2dJ6AXo4R4YGCGV^Ta,=*pO-H[
%(`?msX9h"fpk-O,q>5&f5<a;Bo?-+2q0n!C]4u1j%W&h(@I"E-$,A$4J1Ku>L$499<8aOR>7\/gh:X:On]ZDdZd<<HS[\JYo!o]8
%`ejCW,O:JHedHs\O]k\(D=F;7gWk#t4OmIph54M/_6tfg7!JOIJJNKB_q7,flmO<JIRHYf$lSr?e`O>Z,Q58flNF%D=rPA@:1N?O
%Qn1,^VkUTVZ/P.5g?0hRqu!";[biiNq]3S4h_M_:*<Ta-1(<k`^U#rl/cCt'kQh'Y53k)n@B[%J5UO-ANn9N>23Ed"I;AEf5C=pg
%o)#!AIuAO?pV2%GiUq[t=U!s2jnnf:NW3t^%Jp]UGL(ul*<&QT9-_Ad-d8D#l7rWhM9k#Sn;j.1_*9UNj6$BT],';%;?#UO;8/kA
%G91ODV\/)6ZToS'I9p/Chkt8hj.pIVp=\$lpiqJ!dl9A-b%\fHQoN+1FmRo&W;/V/oH,A2A7K6*3-hmccSbiJld'pIf2&90MlFX4
%_rr-l_8Gu.c,JBY\uD2]>9k72?C5ZF]h%:_!OCHdFAlSr<5Q<d=te+XH@"Ajr$laO^CQP.`sIqCM>pkpk)U]m"H-VLkMP>ZIm59o
%*u!OmM=8L'D]KK-GJ1I;VZV!t+1<_fiKeZ-*e)6ps,IQg..6kSXK#c=]dgKk+D;hoIt.&CYMm%`hj`=s3S%#jI_-DLdos*@g$2:,
%o@=+DdB29iT7?W;r;2Jf">R\Vr*&"X]D_ZB9_tr9[[Y%Eq8`NGh0f2h[e^jOLeG^DDn^nsU[-b6`C7FWln?ZIppB[>$If`<p8<-'
%5J274$MF<MhuEQ8V`a^uTAI>0pB>dYr3^pL]#i:d?bZALH[0-Pq!;Xp62rTOnUKN$p#Q/;)kH)E*rE/6D7_\"_Mg(BCb+WZ@f=1K
%Z&8*m)^FC0<?_?kGfaQoh/5-ADL0!e2R31N5\dI=9t,Uh9&2a?;_g^jM+7T=P_*.X?EmcV[qYI=Bc\:r&Y#DAgt"<[$1&,/4Fnd`
%4i%5imHN1+Ek`LVem>GK^$`?UD0DLbBA\VQY2As.p7"os[lT7NcD:0f1SkbY?P>9O[g@)\_^H?:hb2Yc\_0HOq+XFn#I*"eX`Ok=
%ku31sO/Hcmlg2%5@BJFM=TlNb]Bd.4(YH?efj=7=B5@D3CaDA,q$*9NC`PI@hrY!a3PH1%^ZAZu>k)WCESZfsQ9$=+lkP`6I34W>
%(-\0FSCs]c4V76;AKBB;Q_`m$VJr;9^9p^/W%XMI#OQo!3C"n,^,3N[hqBT`hI`tb:9<bTj4HEnA]ikT=PAYr<75Yi>mg"?^[:/]
%7*FD@PUWuHNE]?:(bG><c#-8)G+4B&,7KNZUn*[7XG:0%GgU"dbRWBk^Ef#YcYs39O\j&:gb6T5ijmUV"3p;=(+J'WaM%/Een:.V
%S(HLRhfeV=.8JRnRq*Z:hXRC"?2-2%0[48:2OQ/_k3?O\`!4V+bBr>$Z,L<O1ALoS\fEZIkcl"6pSJuaA([bNZeqO%2Ogt]gO]*Y
%+7).r]6-u,8!UUIZLbl/YFM'!-P%O#\lf^@ZMB'2LY6EKFo$j%!f>0M8m7W3)NNRb@5ah>FTm-7^(lZf^29McYn;`dBS1dVFcV<b
%QIQa+)d/a'C=ZTn5!&lL,<g#O7:Y];KWD`B.\rTr-J`;&4=k[q5gs$dPT9oEK-i;L,+mR(qmB#-]`=Y;fYj9+8V>nZ)uTP=j8#Qd
%\md/4Uh7Nsqjc6>e*bNLeeW]sSNY#t'ClseL"X&)D[BKt$8]TZ[U>P,:R8PZ+RN&1qtYY<MFnSHEelubiNsr9aanWD7%"EY_4F9+
%CO0]Vg:P/pDPuTA0_-[.CW>J%d`ACkYO9oiALf$d0i`"5=fq/>XnJ&t"W=geVuqN/;hZ&MV@q/?Bl(b`lnnU,&>3.IIcu$u.BWlS
%]gYIPk9)2:+^6&TSgjn?PPDkqG@JFRa/$(eZOKK^UY.?WA[`U+IMI:HFehCffL)?jpL\hc$V^!8h:@G=XBPt/_u9+gY1L9TW"!]E
%;5V2k<icaKa]>FtqV6/nVtR\C-_Et)0bbX_"jI0T7sRTa&Hq9/>H^0B`eS83P]9M;SH@<uo"9*.>W+06.NWl"KV#IUM",=X]92m/
%m]GK\*GE,#>05o9`gq<.>hK1'Mabu$T=mT<fe7SMZYiO\$rT0RXjDISps,p-YX'Y+?Dlam!r*1Z[dW%l32C%2XU95/1rEkN.Ug6G
%";=co9BU?G["$?e[BoU%VLjd\ZXYI,/jm<>0A9#MNIlU;;]N^'N1r_HA&&)KmVNs_fIiN<h6m<,;ffZRG98rU87:Pb"YnWKR3GW;
%Ei!L9&`,`aXP3n*/aD)r9cf"_5'CFkU,9]@'bs5(N@f3\%Nc?\C(t&I_V#lQRNP.gWFils><=IH9iFHgg6a<gGktit&LKg$FP@JD
%YfGD@g@L*+(TUtR;KSs"8Ch+bU1#3uNJAruVVmJgq:.5(nIQ^e@.5SIES^<,7i!A>rBdCGMe+,DR`DmVdG2_uWD0>uBrbG91T$%X
%`P;>bm>7t1b_Nk4^C4$*$OY,VJO&oC"IrpmqV'\ldMl;HL9Hn)eegN2rL:.[!&m(fGSP+Hf%i=0?7oSlDUQO4LhgTVh@t>9'MB>l
%&_<,ES&*IGH'GQHV*\sT5@clQMRRG#N^/e_EO%l#T>''9hq9K]V&/h]f"E%-PR.[DA&_dbfgiSrT!t"$F4gsaY!</Od,]Q$`3c5c
%Gh;J6W!AY\COS^aWN\`GlqmSep!HL=VmXW>bG^jkO*>'NCmf-/a.%0d0U#27j*1h:Vl@qmc!DmRR3k&Mc-<*pUqNfL4WP24X0Nal
%WDp!brciTj[PC4HD!3#JVWkZ2qq%*.Q57:>LFIEq*DT:q8so;`!(CIN0elUN=NZ83lJ.^f!\*Qok+P"7efkAcUBtdUC_e%r*VOg2
%(c.^.[8Xp'As]hQ#G&j@%\(i5HcK66#W&)k]=IZHNgWUA)rkm-WT5ONXD-!q;onmOBP2*&?7u25+uRinO+BVH)0;S^f*j?CHZWVW
%5lkE7e(OI(2E_<aAqC=%(Y)54cYBoACZ4j69"U2c]%F+$"HsYhYi>:LO6:71Be"(qfYLuD6_p,o1>ihsXOi+C3Qk<A2AFlH>!oVu
%*W7V2"s;6i5\i8-6D1C4r8oK=%PpJH@MtqE)R?+u<nc5m6l_lR+M"a0if&G[^rg#RYE'!*LCIS%rNZhL8:.L$V0E1MBXL.ATp_SN
%m3S3o_T5sK-75$Me\r*dVFC<(Y_qI/I7aJigtTB1Apr"[9e#[_WB$Vg1V?CC%s0]$P[:5TS@^4o]Q7,Jo=d:eHhWoP3g0N(Fo9UT
%-KX>3jTNgq.i8BkCK*bgTKcZJ+[h[Ofb6!=UG<!5@h@Q\[c1+;f%W$X8p,o?%+c2A]Yf<-+\msY&D64!f*]0d_qdjF4XV^a?0G.)
%IaW&]G9>1L?EJk8c&$,L+ilQ-95(Sl,.9cr^*K8^_EGi#'I0q.f%38N,Vr&#m$X+(2k3Nk6D/d?EX-nu.DneEVte=Qo!V7r_L\Js
%!WgLK%e7rG0DPBE]@-A,iAU0e_MdUlfYS?P?$>2#`);aAD!""9fMuNYe8/oNHWLUn@4!0FK7a)Xk]9Mq!eXc'/=RH0PuA@;Af)a$
%%-=S6@GYQo*f/oC`Bh;$'*L.!i@E,HQc!=:FrN7lU`$iN_/:L?"D(V&p=PA$l\+ToqClF53fTRMpK9NcOleBcN"D91V[^Y`'0rbE
%"6a1B,mB@rD,`n].Vqd_>O5_RQtnE--$\VdWZ9aAf$<Uo/r[Z)R:BjSXQQj&c5'-V_6I.m/,$YX]O!FI6(MEfDY%O2bDaFW`Ybk:
%Q^/k$JjGI&Po7aN'eM3b([6rZS*n7%_9?#[.maW'G//97Q&oU&PR(,oS\gjhhK=39\6F=4Z6C26ja]+#h.^LLRFA.I&qp<kdH-n#
%Am-614^iWdV"&4%Xia`e_-I8]0u>F,3<WUJP9h19<#,cmKNn+2/^GsiEilL5Q$+go%7\b'iDmhWBR",WMq7Xa*l/XS%Y@>^X3iM^
%mrNn9X\Au`NEk*MG(;)$\=cV>CX3IY__f]J4>O((MMBrRP+qp\-:li.>fmLF\41haU78,VTOR`&gu!]_c2c(/\Gs*c#R5$OcnoS\
%8''^)5D4:%qE[8ppB?Bk&!HQoK+S_=Y9_f\nKH1s0J?.AX@d=OC<E6cQ"3T&?@sCrHW<-I`JgLL(_RTR/pZ,^HLDp?kN\^1/[uW.
%FFU+g$&lE\M]ufe1e17W^:5nf9,E;:JJG*'YTX'>:=UY$`@IjOO"j1DlH:HlLqcm*.>C@3.%g]lOqu=@FA_ld=<jO4ELb6:hJ^9A
%lq%O8.SRW4fDVS1D.5#I9d8n.9H<801rrLB0J(HpZQZfp/Q<"'Y,n=bD/#bGa)*MJP.Rn)VWX!WCPFi(WIQl1qTVAaNJ:SS&mE2`
%@$#!'T6(YCDDr*[64APTM;kpf&=A-8i3l7@f=tM;6A2kbZ0&U\+r@m'/4R,r@N^of^lI0Omdc^GZj&9Nh$k/'eha00(-B1r!TSJp
%gGH+<fJ!Md0H$UBWG1iEZpr4im7Oq%ML_1<,fKT*_\u5hL'LqLK_LB!+QhTs=iVjD6Y\_;,P]66@+I2ZY43jt]NB/&FgGe?M5hiV
%DW=gD^mod,_PH)r4FG_.C=qLB`pAD2\d1S'"MP,]dS-eDn-6=d*C(%@\eO94"H&Eg;TOQ<-A=UnoZo^^Q>WprQmV?F6]5_C,/0<2
%l7hMd>0i:o5nK-'&Nhc-Mg\[hKYKhf[^%T&UN-hRLc5=QBlB)A"a2:ABLJ1!Vdi!Dh>uYO8+b(8G"OP7Ko)7B_M:haIG!bRKAhMc
%&XT".!HQX.eC-AbK?R.2cjqHoaFd/f(d@:E"_22/=cm.==/C-qGqbrVTX'&T39]UIel%9Y@E]&<RND&gHt:-AfsCn+/2qKQYTjhd
%C#Va<r/=A5ktW0$#g&O.@@^]kG/QD&8qSY9'>YSC6.p%IJ5LLtdV3$IQImf7gk,jmBUPG(KPmNjBfA4K`+q&DiFL6Yj1KZdF<$d7
%4Pl!%[JT=^g#(lER1ou7hgs_HG9kHV@'0\89[2*]Y%H(^0[E5YM2mN4`Ya^i?PA#inCs2P0G=gs;S)\NTt%Yl;&:Ws/iU,XTD-(+
%JV_Jm5RPOc;pBH=:eT8`eT@pY,(U$OJ/$R^%QbX(3;Ji]4o@L1;_&b/OLDjn0LdlnYV(X&=Z:[]YLOIu,H(U^WA+`g=`JBqq?.]8
%))U%uZAR0@d?(B2*Uj@YTGfTe_kn,)jCbnVda<rteZ;A-nhdQl9L(Co=$q3^Z;BBf^U=/Yj!MYp^eHS7a36iC`P^I47TtjTR5o0Y
%Jo"Q8?.lIkVi[H+geqlFC7)u/atESQ&C,/m$`tQm6Ti4nP)Ms^*5I+g'i7,`@6,Tdb>e[X+%\IP/jtff$qW5!FZa%%beApb=69Sc
%/jiXGiKA.>:!kEm(>1e%ILNK"`Rc2JR6gEL)'j<nW<HLV]6lV.eo]"s7kb#=L<5;IQkm#&nP)V"eXPkCBb3)TS2S?;Gqu6OT]>g%
%E)d*,+ZZ]_&.!38/fc9cFb@Of\qWV++6QJ9dOi5r$16"9*Adm\V#/6?2nOi'@K)=aYE;sh1ruO)!Z;hcPH!J>Ps!@(qd?crB.S]I
%[m;Mq.qOt`2.`4=b8-d+&*jUd^;`LT&KkX[NfrJ4_6hlcDSX@]J3pHu.GK*5LB,3l_o0Rf[WQ-p$Naqb%6JoU0%`8&*W+:J8QHg_
%GuFN2ZNPQIh:lqcg3qJQFrO*h8<Y\_JH#-3E_n^@OmOM<#OU_c+Pqb$#^J]GW*3be0a!65$gd\;j_?ro>@$2u7=e1^b22&U%Y8GN
%O[4"nNl-1n$e[JMFNCdCnCNa)?VsZkboqY&@h4DE)`.uM@>l?Y!tEB"\fZpA@^OC4KI1(dcAuF0%pB'J4b*n\aTs[^5aBE8101f_
%3&i-b".kbA#64,2:ltbl#>JkW7ZHT>+5c#gY*Ta+,T'@H^.=a>6#-\W!QK0X]>)3,UZFHb.me'#_o1+=<(*&8n`D.9RLedpO0K.;
%*jQGMa)d^#H)+Oc`;>:jH-W#8&37AJG;8`MlTBrB+GCIn4_cen$A=ZO_[6GTE!VI@p96tq+Lj3bf^S#.[NS!8Pj"^!=9ubESeFs4
%!H>#P4]TDCUB%b`A7D?pgG@Rd5T["1hU?!>D3,5g9dX7-g(Y)Cq5O746EnZc8=B>!m`tI(S/rKIUt_Dq\Y.WaH2sq_XYLKq.hL2)
%lJZM6au_L-C1(@VE^.KeX;D[aMXA"1VQ^`H-n\QA"Dll<L):'.g*S&O<\:[pL:!3Po$3$F'`EVkSsjY)7qA0Q$Qp#]#/F)1?P+*k
%Bi"QA*N$kF!)>6uAB+p]BiV0iYEh<](O%2)JF(*M`e5%Y9^ZH-!i"G$qn_)h1Z?@]DXjT?KH[s2FsX_6,2$B7BU[($@C.[f9ds+!
%ls3&X%g#k9Pln@a:XloBq=Qk$M#8HE@lt6B9\Z6N[_V'Bnr)8)VIF:6]_]K-Ag"6%E(s0j.B^S4\"`m\JB1$."a1M@W^7G$&$<_\
%:6>_$n$Y@292o;6H6Ru7n4JO5i;<#(MgWY2aM*8a#F8ke`)mNWSV<p"&BSg\0-)9(Y-V9Vcjhmu6@cF<?S5OgVh5oP51'H+OHD+0
%>-;+cqWb@8[12^K>m)7SRh(@n4CqfP*($_>2X,6sQiU.(%:9FC@/LX/?KA6l.m%<:YqQR2(04-:0PAum5XF?AAKuK%G$+i\KOPXa
%-m0etlr8e"pa1?)"W?p_Ni*he.9P]>0i=s2@b1YT,]g0qC?&Vp;B?iV/<:@`;fc<(GU[m'3$L#&'erGXDcu+ULJ^JacpCi7G'#!M
%kNGTX\&h;qRl#>L*1*(;*$QIB4qGg`qG2U]^G#(\?oC*W1UbQj6L_KE)$,ou\T9j8flpubKtG;Io`AK40G(*)nr'^o^0FQJ4a4qF
%0g_7PR%ho_qn]iQ_/^<jhgs`S.$!-+dqbtf="ufe(X7cg^tpOr<p3a>B=2=D3G`1p6gH$6CJld((#]A,kJad8FbM3DihlA]SZE1t
%R#j$ASfL?'#afLcN'7F*'OW2>%;.&9/0W]"Pm@t0R-)J,_+lO[#f)4_'=?"l=Q$&9,_b(48qPHa!8"kHPiZ&*FbS]bis3._OjQlj
%RW+=XNb/DGAInQ$5kbHa=R["iP9@pQ2u?SX,6Z1\ITFDM&BQIlYp+9'4Y`FhC#Kg=DR5rQ(58XmJ1(oM?*X=0.5hFlaq8Usk)>%:
%EJ#<=)q5"B_3uL94:i]Ql7%tIBt#UGbuqs"QR`4\^u4.JPkEF_J2g&B-4ekj%8uNMC7L$JU?R,nP>Gf&;*G%$Y/0MmDW.8IdJ;,U
%Z'7Ksd49hJ^]Fu2PcdGmmMI-m`I"3A:G$c(ceI-@baedTMBSI5!@_I-9d5qH.?Fe6ks%d!!gnM.gaht`P8V5g8]'G\OPXa(9$Z^P
%bbJ"O_XCI5&:cW!(VT+aCbl<S]usM>E1&L`oY4YX!>D^N2FIHAYhHpq.63]L:7Jg?a$Y'3*+Ef'm=Z8IF6s+kG7R>USo`$>DAbe@
%O(CdHMO+@*fHrP48`\l7#6IB\.9Pi=hJ#J(A'>eb5`j>.#Ldes5F]iHN?$jfE5Lkm!:mu6JWnJTDk#;ZjP5mk7l$)rF?o2c-Zh@>
%@?U\(a,C7DG)1;ReQLE41EQk;k$-)d:4SSkDM.K2"oDh"%K`$RKRGI?[WR/*=qS'":cDK:L`S7M!?]bK&tJIjGXGUV3&pOW!Z0Ln
%6>+=b_;toRr<+Un$68KUn^S1E#mA?N=9a'_K!C%I!KD@ib'7)60G/!Q;`j7rT(rA'mSX)JDfR&D:B6>!!^=;5Bl:)o*l=K+oicM8
%$J86E+d&($VK6\Hc[fqNb:SIU'*bQ=b3j$\!7%sK@*J4)j.,b]D*iO9M?)Qr*JB.?KV/^=^$Gummf[EY^)a3+5%N1uN^p![.)aK0
%@NB?%H6Qkn(ad`g6S:Xg,+hPF0qt=@n.Jf39f`L4L$?4Ol2"4C(d&?`!"Qi&0lOj^g@U&[TrQ?>q`#,HoiqrJ241%0bq_]oHlDSY
%O]OdJ/"C@KYE8%ij1EIhBpr'f<Jo3:bb)\#6kkT\$jKh'Vd)5U6k,cEZ>];3(Z%0!71-U+lgq0u7aN[B*BF7C?it?P!h#"$aYA0M
%n3[KG>sc[Kaoi,G@c/Ba:-mEe=%m+pCKEY/Y$M\?fqB"Y;LXQ5n!bN5*d6Gm30>*'I.H@&aRTeO??/-F%VX`Co)U:9?b!I#Ns'i@
%-6<c2:R.CIkU-?H-gUUNhu)`b5J2L;p6R^&]"c",p$/#"J+i:4GPlkqA*1"$RM/(t,VQ4n1;q$X5V--?b;5uJ&=C^^<".)*BG#l9
%6uYC"4[[?Zf-#s:P0HXKQsVpQOMheTdDk*.YK@h74Nlt47(RjkEKalK(?RSoEp+ag[EIt./D.,*YD6d<QP2edoMFIj0jS]rQf/Y`
%4&mO3E(F:F>B1,d?K!5X9fNUgP"UH;J(AYhZ3i=+5*W;,VahUq;KW<le5siL;t8Gc\AS9oW'NV3#U'-W^c_84ZA?$q+c/Ve,!"!T
%q7,R8aZ'H=G*_G&.:(f`Kfas<Z#U,5G:d5aBF!"6[::h<G,>'a@*tK-+5iCuFFNCVlq[k!csGZ"'O)oWd8WPqfJZ\FZn@ZM"(&9Y
%5pd/U/:Q:-d`)oU\PE6$JEj9PNhO.CRtjsQg^=>el)!XY.1_%5f#gLT(Fqsr.!o$U&LA%%3cmki(6'j#_fC=ul4@T:c8TANLC=0S
%0k-Q:[37Lg\\bBfSZUig%D"t:NAGdHJ_>Xpfsc#n]f9&=hcs;":WD?IFsYTZKr@M1oZL=20#tiLH<J+i)pJHfl$+7#pU`*=hJDd"
%hV<;]"Bu+i&I'efDnIA!*FXZt_[XRl\N3ON5t/_i!rfb,>RH%[>.TmqlS'm"=<GeT:b!>P$UtIQ(m_Fjg&GYo+J+X!@])qOUa_Yd
%<YXY)=l"D6joqM)-7;JJ:9s;%EOabBF@OkI>jZ2I+rno$&HXr-UMD/c4'#SQEZS9POqutH>&nYQno=Ng!5<1LS7qAMS*=3&j[W^e
%4kj;-U15)`c2]%R)8T)_5JUSRb<<&J038=*L-RV(<Q^$t)!!@q%fB,qX>(\9U6TuUUk!m71K3[?KdXN=UTQB^A_p*j%jNtBl^p`n
%s)-C4Xa4pH64Y'q;<\&R,i^it81nTM;+1R,(X9C2=D:C>FU&'lJgmnZgUVD_NR,h=KUn^e!R-05QUlSL\h^TWH3<>m*$r%o'`/*s
%,&>liCd@11+^CHAq7e-F:9tl'5I`g&@+:2s4P3VT*9X:Ar@jb$a)Er08$XHFcm7h`6[N7U_n&<d2eJG/`*:.]@'cL.-Y)<MdG)%6
%E"ot>L-YuY*Moj-4IB>I)>EefTRcRbaNjB+9LE:mj#bLo<_m:5lDQD_oV@_QB-%fF\IMWmEYK'":uu/f8#,6uMGfBtj9:qo0cN@`
%2'D0eZiPNb*>'dA:gqTrmK[nTNDt6t"h?O)3%i8XKYs=!rAC"aS&8ku0PAOcUIYW.[s6^\ZJsmuOq=*lAJ<!#R8J-j[.Th4KG#J)
%^)T;-Od3C0_urLK)D%-B3K)MS:i_0a.=o,@O)VoO+r]1Y]SPgio5h`TfTHkT-qB=0'2uR1>5_R9Lmik9"]'nU@k0!26NQcaa[:Mn
%8MCdoioNFnG`7en1CQD<^nf(S4dZ@C+#.0f>g#S:,JsaC-b-B].M&>rP<=U?kQij.=A,b]qhWnpZ%0S67M&,1>lcVoXh3KsY6j"Q
%LM[Nq8Al"hZNQ<,*2g);([k\?M]nIPjk!?,a?opE3s2Q&@.BI/8l`NjP!CfWM2@&h9U\g+\'+8ce2ZZC^)Y+j59jtHI@*196ei$l
%F*<rV=p#uHPS)]BaPUfcZQL*?&RLi'OC5kJ'1##Hg+bX3Zu`]+:+lW(7>KR;bHZdf.Yt$!VAuLp;'8)jCrhLUl03_ea)AS1prIh*
%Oub8tLc]a$>4M6J0#kcEM-J[N4^pi+_E`g]>pYf\<Yp'^X.Z7W.P/[b5j8HY?s20,HtO9*/'g1^%[$;$j[2ugYUtpJ*5Yrg#4J60
%nAM[B!%&kr^P_q38dA5H;`GBm"nbn`6/^ur&qGsL-9!EJb`Vu2">bZOX-n_o_->;hUmZpigL*S4Z8H>#PBGk5h5cS55[f8W2h:cs
%W*e[:^u0`T>54aDJ/BdUPJc(WO@bhR$aNr!aG"L/l;@50BH2Ur5M;,>7@jW33lVh*.!]+/!mu3DV@0CqOmZfANg6&ncAlpn!,`R,
%4L&K?+ghTXTgk.e=#]Xt^g/-sd*ntb`d^(ug%5SKkU4Bi!6F"Sk)[k-HaO*H7om8NH)VRN7&u\A[N;EL)YlD*.0):9:Cdl/@d9FB
%=E6Sqo#<#H0VlqC"#!M*4L3a3+pri5cBh-/85[3cZRVn%BFO,b=s#,dZ_:'Ma7?6hCIJ$lo#($g?A[@J;T3eO6ZendGf(\;Zt1)"
%B0;&#GBbkhT3Q!*pp%h(8rtom!/4RGXpPnFj!?2eEC:dtn1.XQQ)b,'7+et14[pl@gq<*=K#)#b(O8t0(Yt\J6^]'nWMl_qDT7n`
%TKtOQY'Nr)PS>UoiFU(B>Z]sd02\+O]?OI5XlC!aBE7JRB0WfAJm,&'A+*a*!Wdif-tYrU\Th<E#bo5..ap+sbtX;Z)+W9"@ucq*
%@m&=(cP)^G"%cHOS9`A;rW.@6VQkF&WmC6Ara-Tcaf2m+.r>RB%0<b&c&5t21O5`?MN;p92`0XWp_Ct`F)h_.eQ&^!*!OSj,[rt>
%%9]7:U,[:QG?n7[AQ?taO2A3AkUk:unRuk,k;Y\h3cJeP;q,p.@0dFKYR:LXG9C"=2+Xd.P'L6d#&jIM*0j[m69W&?<Kb(.*D4>G
%8jibtOH5)<8N]slAdUDJc/s.o>ea2-3et!BP)d^6*eIS_\Ca:L+9bjc:o5K4Bjm59hbTU),#Ka#G\#T2-oJsa!Sca]*eK`iKi8]K
%#Fkbt/?fu!GaGAqh2*E_fP*ccB]L=GNf5S`kck\<e7[*l6,<#]AC@Q&$oFV0Z$K[]mfk+eeT\k3MH9ehJWho3iK_J&D%9Le:<&Mu
%>S\cuA\O:HL1NnCeXBIpX<jm,nD/oH5;,5$\d3?9)(5b-CJ)>+:s`3KGV8Pd/9-qj9FYrOSa#?SNcrPd&6VdfPk!;kdXIt)+8?b?
%W`Nn.%"5VBFq&MW09`1705]&rEO-DB.^LL[#'q@bcRo]'4/V#<<G-LOi*;^`M[CWWTtB(oiZ6>12$N??J14o$_ps^e##o0]KSH.o
%Ah&&4St#(r"Kqet3lqh$/D6H`CoCc=NT)l0gh4;(2q[7(g*S-O?NN,K#ss;5Ij;l;l[#a@p9o=E-OI6XM$Anp#Z<%j?mln*D]rLX
%YFXGnS=Nt1'&O,SK/!LC$,kP2iZ_`dS.4`o(,gohc<Y7-Ht]<'1UQBfF]8Xb!e)!gchqW1kH)R5pXc-C>,2??N'LfAMg0"]KR]'s
%NscGX_OsBb%lnV0s"WV);IF4Hii5)Q&<hB0LALg%$D;*PScu>`"qRk0G@*.##E3h%0rNtbm!dofl%>;J3XY8:VBVH?@laaf?CJD=
%:^`;.gg-s3-gIeb*6<K\#t!QnhU&o>LWrOJkSXBt-.ks8ZR$X(03&:j@K;E:GT4pj1@dFoN*hc=aE]iq!9/-3&Y)[Z&WOEVYsi1m
%_a.@\;kie9Ps+,Q4Wa`Df7fK@'M(Dg]tk<]hLVI=!&>`j9^Sg!$+_L)E!7K4F;Q38&a>di->PB"GsH?t`FMAD;-Qc*G23B=^=,G+
%_1'VZl(nI;ZY2U7iYh9W"XMPii,G9?Urj,^jI$i9"I0oh+2lpD/l&%Q%)si'+\&?E#074!KcG/!(s#r<&=qSkFD'O^YF)-aL9LJj
%#IT4m4WXt4>)^?,b#^[=C.PUkZ]ks/K+kLD1TOD##kV/jLD@%d8Q0bCQ2QLRR%+h;^C#9Hr4sK%$/-MfF#:cpK*5UB<<]Z2H9^B%
%F_g2%L-p\.p&o),_PN0UM]O"/7iosrCLW/S.V5>(pN2k,Cpj"c,]J=+gblA?JRns=+)2u&reS\V.4TE%I)IO(SZ0gRbe&PE)\Q3d
%h49XM+L3oT@uNP\LSd-6_bjZ,#Wq(:i:NZihIB\o7E0`qA^r0Dpc(mHjaf\?D,*;>F/aN&,`aqs6![oAFU,TqOXOfp.Za&_>Vm%u
%bifK:j0BU$H&04)%2d9I0OscRO[.qf[(1fVH6MJI+>[#:@j$6S`sI4U`UD?,%pqq6R8mBq;A)hS0ZI;Nd?OU=E6@*$;([s[eF4$L
%4FfNIiJ]h)"-I'C<pru#JAPBjec^8t@.mhVO9?;K)M%Q0a%rP1^h&<t262+?!FSHY,[QS+6?5V1-#E#$Of>$6%gkU;h@^ue/Y1`_
%.X/f6d![6"?X9&F?a_r@0"^Zs;Y#roRuT=ODDjZU_$r1DPlFQmqi*!#"G?6:J,S&-^3oPGZ\Na3rVEjE^EB<AT=oaKbu]AB:H/+&
%l`XX0r:'RScg2k%Y<HlRo])Ejpj;r61%"N"aERQP1`Cr%\X+iF0kP>jaNahXd%!,+NY/T!dfSa<cJ6GD(=1VLol3WRAnO;^9afb!
%RJ7VJq']bC*lGCn.kfUdpgD>)SQV!S671ZbP9/aGmP[%cnXZPsRIcf*A.gS4L,8QH3:=XFcY%XG^fI1G/Ei*+b6<TpfT$m^Asg:[
%Z=BQB;_<pn(^6\(5U+.BY^k7!M@Z`IZ]l`L'm9t,8IuooiWQk0T&U_Gbe\@*@A)e(clCZ3U:Ml$EHT(!di9T]gMi@N3GuRZ?>,@M
%#8O5"ZQ(b5?dli3N%g>M_O9I%OcWi=_/YG1>c%cN>=<j(*mY[`!=)/4*!F;V1nfiaR,@XNjMhnZH#O__1h>DJC1CMNmI_@'EC7U&
%l<hKL^hjk^DaA1Ja%iEDB3sTu[4YYCh:]OZX78@nBQ`GoL9FDn=2j:/GG/W$d2;2VQOb23'pnN?*d#DMT'2q(iM*XFb%D\o>#&^h
%!kI:V`agmn_/+9<1PSK&*3=3!pYe;C:`9#m-0]%hj6jaE+>Pi&L7t'o0qM^QGG-`\=m6JmMW#iXcM1G%(uor]<siHE@I^fDN2II!
%3.Wfc/_KA*ro115,oZEpR+6.^K=r,r%Su+O?48M**0&l/At:Ui6uWr`OX*ZXKaW3J9/a;<\P>0l0tE2Ym-VYq9[k#L#efABdosM,
%+o"h!jg]8\m;d3!\eqUm+k`M@2P5UNmk]%TFJ)8<(MdW8&_;es\V_VNFs/K(FOnDa$iu?CIIWS>WlVe+(N\@S`8SYR1ii;0BuT;u
%Ksu;Q+>mhj_0&')P+u\fR*b\pZZrJQ4;a!oHO@XLkqT1G?SR5$>X;GM!!Qis_,cNlB[1S/g2ramc;fgK!09"1]>4.QP'^XfT(&U]
%>=?FM6oKpnV\mT+N8t@@0j%oDN<MspRpu"!QK%$8-l8'+k)dP).0d`n->@E5KAck.2-_PeS&a'2Tbqpu\5G!pj81/]d=\_9\WHoC
%ZL\_C5[VO*-\bn-9E3429U`+@(-1of$tW6K,K>c6F.jpmSai;(R2GEBT*JQq]]S7k93f/F.<p\8+kK_s5\((5#5<+K,t?%MMW'pP
%$JYo6X,E/Yhn/ZdO*FD2('Z!<F">'(M3,5JnIT(&Ll3e/THcqa]9YV4Lgb?^;_T"C@_,RG";c(OALXR6T,ViAgs[Fk=N3kfY=-;W
%rVupi1rQ'?@,`jl<53r8B,9JLeHcdsV?o\!a4HAA=hd0nMOO]QK7Ok@,3-Eo$THT+@qe!q&$mHj*\>:3CaLm+W[<ilLBDQD+%A\J
%l#UhTUU4<FM`=6Q^bR$mBB%n4m^Mcrj'E32@[O,pCr-GA0M&&QlO;'II,@N4VH<o6ZX!1I3/mJoW+(BuR'RQ^0-V$6?dEi3-lBmS
%'l:eMH]e"PaG(WXKdo2J\;$,gLQrEM_]U_k`>G\&L*geg$dgZp*giG51CP;Ae;;W_j7hbr$d3K&bsQFY,@q,/4Xc%(Wi0sM1(6P6
%lPfF1^-h]$^G*#e]oic@7O(-uEsi(FM"qY4_P!e-GL2%H(`?0*YS.BH?9(qj]Y`4nV7=kZ'5=`%`@;;GK@>WS4b3bRb59%)$kc3t
%]*>)c>mK/e1CAa:P`tu<-k+m9WHf'_POYue`@$W5BpL9?E1UO]$T?tF+Cf?sUJ5H(-K.iZ[[fr+Bl$]sMat8k]p/tb0X>n*h!?$!
%]8-V+47I.]\R"X?+cPbX/kZE,#i3C+&DfAZb'_2OCnm>],9d]=;Q-a=]>.J.>+`&)UO&[-K01!R_q#@di(a$s.s3O*m<V!aK=Sbm
%_&L$arEWNXZ$%;W'r8[]DdjkmUqr>a_M'`^`4oD5(1Zj2il+>'4@RhCjU4NnDsN<6(j/)dE<TuF&mc>[A6%$V5o%Ur8j8VoVr4@P
%U>RXE[<R:#eHb7hBS,:AKdA^35nZ9p*H:j^n?9]A5>q][^iYl2,E1hq;1>'\Y4_b;%iiHZ#=aghcF__[IE5^8JL<8,F`@M9D?'l8
%:]kWXW&8o4m,c)N"Z7uQ.'+0pC>b(*[kb,9^mM=bZ?C-DTA["aYB=mDNCCdb>fhOo&PJciE!*uf.t(7s1GmqAPo1F'P+ZH.@UL-6
%e;]A&Ql^Nu7LO%='f.&db!82.*(R476YeB_Ea]-k/#D2;2$P#Q\V1?_M7PG6nVe/aFCj^p"Q#ZT0.;A`^+&*b#`L/hU/jPc$rkR(
%9(2jK)f7K&/p+m2Duae`2IJ3nYZNB4KFiqhjiRasI1J!/!bTtAkm`:J^irn`(F%f(=h!;i7_2gj9Fa@*$6,O=J75s]2E+`gnZ%<,
%<YuiR8VD:?*5E^+$=Mdo`^l!hQu@]F,pt6+?r7b!5l_=p!gI3as5NdK,!5Dr(6>^(rGV3epL+")!e;,f;\:(M\rdMCmU)%]9X9^M
%%SC0`HY;JJfI,$262V+M#KGucoPFj[T^eHFQc=J7KZnh9Lk"I^L%oiuSbT[&l)8[nr]W8^%m(U?BdZ,,oDWL"PHeeN;tXV*`VU%Y
%`"Z>9`;?$]-^PY<090PV+F&C@Q'sVr\FBJq9RqDMpHkUU9^r$.(.dlh)=K4T)XNEXjmM^nBR_Jim9F=S;[F*)T`#UDX#$Y&6URdW
%0NT(E?S]G*A0fl9ZrDc*BRe-7gOmZDJDidF#$@f%`=KlX9=/:*"1)5KemFR<eoJ"onc=SU$J&S`.QL`(5noW?QOsGf0=,%jRg874
%4,Add_YT0iQ#^?ZqMTQo"A5otC'ZKsG@pebMN3d!-iG@=/;$>cqTI[s(aQeVro+:%@L)-NDFph=+T:Cn)=5&@rh^[ZK#.:VQkm5I
%KCtQDNqj(M0:N<Wk-Vmf&:tb+^Q>[Gj%B2A^0D`^AGnr%P\"3[pQtD=Adm"m^Wb2A?9.I-_ad>=q95ARJ[H<N?SGIo7tJL_"q)_#
%UVZebh9!$&hO4"[[OAY.c<hXDgHkXn'=!k_9_aNj&3DlHIMqiW*Jm_oi_brK]28LPkq>1:IqNdI6P05@/WlQ9s5<cC1fBg`H("SL
%kfok!Kn.\F(Ui4`*K1eF^CZ3adCF]NGB0PV72^I<#LP3bF2^(4oK^+m3NkicHu=O`KB\_.3'=(9IH69[T,46ZakBF$q*cQfJMh*9
%`HPG/B9HWCMR[pLiPGm<Mfjnad[k@Db4(lYB5@s1?O#[RXs.A8ePS/hB8U']26pcu`@p+2UXi31bEmq?>UY%=`p[Inr:2pC`aJS<
%^mT`aL0pd->$h]Qb0eGG(k.ml!GfT,i>6]4gF!he=_NJB4;`P;,be$s1]29C$H+6BiYNN*1WLqnq-I/^Gindt'MH)[r3D+una>?1
%Kn.j7$caor5n1JB!d6.r_=:/!\"l*,r"?\7!0D:"EdsFQ(q/oE?noH#E?Y,mT$shY,elI#KqV94Rt@*m_Xe-ao,>I:)mE,cr$Ki7
%N@W1*KLAB9b:a$$fn8CQ!cIgTVYPou(Or^=r+[I2\HgA4ZKfqJ(Re]%kqiOf0*EP3$(>3.=Qt8]qN]Q:71fFg7'+1GU0e1.nT#fL
%jX(afMBMaqAI(&^e[<,0G&SW$eS],K=[^$WLkpt8&H)[\?(@DY+SmD8>C>>FGZ8<^G+N&ikO:\,r)0O_PGiY](ba#VaP*RYr-tF9
%'gt/7ha&e"[rm9C&2_-0rI(C8V#dN?l9)h+;'&;JSmPG(k_BPl0>t_T"j\hI^3hre0-uPf>^1_Hg4-tRIX*PD9a8iqE;t!*&_o\D
%M[,M)(,Wd2Xd(P_7Qd&'bS4B.IYl>O[O#U9d86*V61^#$+XW!QbqEK$:1*?E^DLD]3!RWGC;,\kQ0+EE6D9\JX[^B0&0.VDV=@='
%R5<)@V6ooIk#W21%2jR9RJeM"!,?Zj*<+ml'tH_MMrtn&QWS"cq:.0dqj$?2;Aa;fo8BpgTH-/0&9-=6nGG%q5K$hM&tR8bkC_r!
%JmPWC^UP=@gqiU*=X#UsRU'#WSFGnGg`b4'MNhNEAY(`V7H"UX2>2&:qLrt]6mm[2);8^6Rbo-sB.I&L?O/TgiuL18)'3eq!d4u&
%o1\\t>mV68AghSAmOpd/?Y</9Ic%iBKE?E>]/0(?EA)JND?njubTCKPEZ(O10_9nN2nkopI@&0gI>>#O6.u\j>?32DWI;D1;Qk^@
%2]]QFrq4M#)^=J;[@8O]_E!%b`dc9m^;J.^K@+mZSgeY=^i0LH$_QnWC?XUI`HdT[$Td1MBc(40I(Sib'P+r60u1We$P!A='qVCP
%am3-R@e/XT<#:ZMK&'67(EQoh1$F80(Z-rVK#JN<EROcV8UUEtR8G@%71:0hYi,"^9K]4'L%"H\6nnCFrdh:5(jp[Hr,="P"YJ=i
%bMr!0N^cS$"b#j2"YD^?pJN?0A#?QZ"rh(WG;%U5RPqTY85/N5Q+\d3?6iTNY>3j\cEWtqQ+**A8!NU+D(j>Vg>c#*-d40,IO4CC
%`j[M7'k]2b#6q-CS['(+Og,MdRB`);"&:X"m+pK1%)-%GYQ4iKVX%fu)q:(Xos,hQj35VkO-?*DHIp`E:=U<<M/R0E4&IZp4W+4h
%m2XQ2Q$:.f-teiP@*qq1l3C$D?,=qSP[YG`?;c9'_+tCW?X^YQ6#R<j>kiT"P5tnQ0>RN;j`5ZR&.V'c?eBY%@`aOu(To8ImdT6#
%pjT+&>r$'T"^_b]BFdKn"7g).hW\Q4_9*.8cM7^8Ru5R1m14BEnj4hQZiX])TsTH;Q]?sPm@O#,"m6TC3Pkt$?7_#j=6/^-Jrn\B
%.k_Z!Wod^NKeZb!j2dt;iVE9W-SIS7,R]6gQhRlO.,X2<Ws7h*a\2L4%ih+P1+gFWlp*8^@edg^]<$qKjFr+5Yi+T=JE>X#:0sB&
%]Qr]$,n1%PNH7kOO,T<YA\\-t3I)LAKA*hSnl!W;^N8rqITQB?i+5lJ7/^an?H-5XncU<n=Yk;KEUll&9"7^gimI#b#:8j0/YeID
%iALId(J8"NMCC'rUPN5A=BFj.Qf1aoTgNJl#YNqZh?>,Wb8tYI(Ih_cY:r.mOdFH!\8B('bNK5<l"<KBAQCi:0*`cb=>9:egKpBf
%H-]BBY<96)N4e5mB`1QE98J!rAm*n0,Xp",&b6u*+D4#I_B,tV#9g:lf\0G\]]_r`9G^$%'WAf#%7X[R=HQ-L`P5=jVd/G1JZ<`[
%E%4*)ZWTj>T,H=+-p!R^175qQ'5->?PZF8hX3^p"p5Fr36;dspT?-V['eS]-ZgYnZB&clJOJOX;4gi7HD5-'%(b;L7+"m[Yn6U^,
%GIW)02I9FEjEW'3FZ(jbip@u#JY\pLMUjCB]T<knC_E)d]s'CsGe6b0$OJHdG%?t<,bdAOBi+<mfNR[d^tX:pSfltYh$\CSYTSTd
%b5!jl0"0bi^('el*<tYl(Af`;60E\ChZ^h03D,fh(CX-J[DfgP7]:cIhVD[;%2&'sN9:?0md<Zd$gB:[-t;1IFrrf1A<m+/'<<Ig
%SI=O3\#r37c5Ch/TUs.IgoZV-](#)"$S_IPgVrTCJ<U2k/ndXWI`Af(7hk3q+PVT?Y`H?)G4?SdoaB;&!&33=^mTAV4]32VBG\Uk
%ouaRul;6P>K4MHb\9'Il!epg,qh8Do_VY"*Y7(,#COOUk!o=$Wk/+:U(epHW>dnFZd8M!rnSr-k73+NGlH]AplQ+iUoBN'GL3W)A
%XY(GP\@IO(l8IN93(S0h%Kn!?$`>V1#c.^&0'qjKLj(NTkTje1?(g!SmWCj%j>OXAlb[05TgI0+3=#EjSp/Jkk]Gc*@GD'V/kTl@
%cFAu#:A9g$96^6X9L5K_\2*=Ac;_A?_BN;.9Y/#@_k@Sb?/Vmuju`1u##IBpFJm1)K1-U6j$JYmQO*[T@'Jiaj??+VLP,@T*4dP)
%U`\nB]$o=HK0jd.!;XL)MeiMN@XA6_^!JoM\;NE6_OsON-@RZ4-;p>q\JTE+7*cbO#DFdS8Oo.&.!2`\1ZB2b\g_fn3)f#^-ekDb
%cZN]9kd"Xu6.ZL"/iaacF)_[q->0jo]6!0c='Y'V6^Iuqp\!`?%3X8eG1nhH@b;^kYWjh"me!a$Psfi9DXgJqMdUJn3%#.JXS^*g
%FUnJtFJ?:aT0$\%n`BDRBZD[LKftc6RoKJTP35TDh$lt]7HN=74K*=$'[cL95j[7EjDL(B*XS]"HS-mp2agUo#^;-[@FeiC$hg"s
%""j\1JbAIQ#olBm\19Baf!CDUC6,3ac;e/s9K.kkQP.^I?+=t/!g=n>F8=TF-_3>CID9aa16,&B"6[s0.J&pb4.!Lb.Pf`l&^]ZH
%BlN6%!#X8GcD@Wo:>Ae<-&aAlMF!eki'2Di%:Cn#-t;I)W,m5_V(Uoc'\bqWF"Rh9TOKRu\Wh-7YQ!0ZeMqV&eJr2QKfPL.Tm1Ui
%b^MKMK/aYKhVElGQ_#Yoh5PIP^47^Oe@ANr,@?j[l)<U\"`l:#31%s!c;h<ZbU[`e#s-H3_47RmHVTJ\(T@GLe-gIQ=]/APi7tjS
%cijjG>br.gIc\j$ecK9Yi6J0lLb!\MSr%,^k$7!>oYOgCj/5#B@*Z_'btIR;k$4Q7(fCe)>c.L>P<k$5fM4F]l$Do0.!*+_JsAXY
%$7F+fmY(c)6C\E4ds3_!_7E&34.()O-=Z'#_OO9U2u'JjS-o@-RDGCd!UQ'ZF"WlBW^>:R4-1?eL4V5EZ5ouocHNhU\EmB7F"YUd
%WuE&421W<S,FWmec;bWs.uQESpYB@;B^_bV4DPbq>Y&utB?j5JGn#omk>D9jn%tS&.=lZYSBJhF(7[COB26_WHdD`nFN;2)':>JO
%M0f^"ga0Ilk8mN6cc,,dgB_!<7.bRM=8#n[EZ$]<LLp4/Jj&i>SCqtM1tZkJ:o"8ADN)gJH#BYZilu&"28#U?c"0@=3uK#75mjNk
%3DF1_e)8LSD(]m=71mb=Z@deDWWS[s\.Q>og0FUm#3LUuQ]tsHI_hMsoUn*J%C\KI<S<3fQh64U<seH[@V?(A&\PZE>+XA1D]_kk
%4?.=5^61f:LiX`49lqQ(Kp9s:@*YUapTG<b$3DR.cciqIh(Si"3L<n+Li:EK.(erSI::Di="@Slbdh7Mkh87%@&E:EMAPD[@MuJ=
%lnubg1BB/o>RWi7rcP'_Kt,+e+[f`.<8XFqV1]0G$[")J84(Ilc6_J2$1ab7Kg[W'K/o86.<Df?S4f?:bV6l'93`H>!)CbK9=U@1
%\Pc/ZdT.BFpI4qf$Zdr=)I:XY$NX2+M`I,ZLmI_XS4bS`.[Y9G]f)BR=+h>lC@Fid9,&N?^d4M!W/=-O,%d.88En9fbG[+%I;nAT
%4I"2A-cP0Ui3T&dF6W4j6TB^?,1ma!i'Nr\8=dq[S!3UW\tUm-DNk)4XFHOIOhB^BS#_GEZrhBXjO6a0dThH`&amAPk3e+8/BZaR
%!:n*r4&l60--S5T(Hnq@$:#Y+b;`eqLi"WfCq9$>pN)hL6E?d%Fo:Ni.Ml*JW/>Q("h%5>`Ja1/Q'LgN&ENso%Z1<8b!fDAe]#?i
%$OU;0&ppLtKb/M%@*(hGE#X][(F924(:m?'!eOagH__L!nU5F^8292b4%d[K"M(<H[^d"J\,b1aD6`L=fO=Uo-SdWX@0ejD-A]98
%d!M<&-itcQ\PM:r5R`4C9%p]r^k#rVB>uMb2d/Gpikj3dn2$RLQWrusAWbu(@BaY0)(0;N!\>lp>ThlhGd,=U+@(>>b(pESEfiYD
%Mt6qp^'J^Od2')j52:`!#dW*%Od\]V=H"(B_9EV+EoC'EK"7h!).K(H1#^"F-`b(O#T*#kHI1TEcpeDMdK6(ghal7;@NgC9ZlQu6
%Maio3/0;+L[-d+3!>eb*lo?H/-!(0G)X"j=0EX]/9RdG+9]fAA.[C<S"+d[!^P+Da/`b6J@0j=t`TG[ZW.SB_\(tgA0<DY(btCNu
%UcSrR:u7oUWBJOk\%q*9hqO/kRb4EWmm21+(g.V!m(mn(7jPXJe(s!uE#*^-'HtVpbm4h-(NDUC=#*.Y'RCdXlB\FJdB60P&Ak^Z
%U>%)n%\?m:r3>G?RHBf>=d6L"DHB9.PM?p,j1^W1!dU/%Ijt-p2J[%b-uKXaL!%(_gldjGbscTp4Zi^pET[_egDF"<>6n*2*:1,,
%kWj\nOPAbeaiSFe<K="8:]`q"$^3*%ZC#K+!`kr`g(G&"4GD8<K),VVaB<BM(4Ze+OP3$WA4(=iJeSm7qOk2!&U<d/8nf4a28Nsa
%n)/G17U(6D<oQGZMcTsa2>D"2maqg.BgF<SQ1p]k(.D"MJ5[TtNl`k+/mB#i@3T$VCg$1V0R]#,?Ne^d,$SSMpO8sD76VC]4_S[%
%*CMHp@Z0]RY.9YHk,MnX`F2u!!/\S$;>iUeYXMm;CWN#r4ji*rr`T_8U*.bR[3h[o(hISe3LMOCnleGO@+&?%CFAH7e%o<o=c7T&
%f0YmbnVk#eM,.dsf-Xj%S[TAeU8BGXmGJK@BsH5!Noku$(2G6=q92tLZ3g*X4(U!qP<i$grLnF2[@ZSs"nc#7[G:jE:0*jt+R2R"
%CP*&.*K-uLENkA$QGa!RR;0;,Aj(rb[B;'L>5Lq%`.b'(Om[L(WPuC/NY"r`98lYl`_frNirhefp9ct!C0CJilBS"Xi/bQ)H<U(b
%9fjDSSJH?E>C+RiCOK%F,,];5r\F^:/_3<j87&f?KqNt.kM3EM;#7WVK"#Qt"d\t0OOGD"0=($YI/RcC?f_D]*uW(JGhX/u'bgF1
%:(+E1L/;j<#$"Z"disK(>.l]?_QelI'u[I-&Vi([]X5ok&21Dt:f('j;(#/,bSYZ>%)-raqX?XO(,&T_dNVHn(hbVOP*fga=$kX'
%'qGr$"t(-B@dqTn8&_fF#93&$ia<'9>]3^Rc:&-7+,>ap<4!3Gd0M5UkrU:Q'.nGjTf=\n["t6iM$P/+e,_:AQI[rb$u0*NBZEp]
%=0U$]pGIS0[X5IQ_Ej([hGi;8KfbM3%X&35pjQYE%:KgpG,IqA@bL1n0GjRgTLKf$ET'GD?@mQJI6Vf!L+oQ=]8*M?H+#dJ`J&OP
%\Ci>i=p9/?m$+06m1/g&Yg.FLbrA7,]0gUj@MV>EW6l2g#&>a`(NmaNiT0>k3")ZkE2tV6=[__9[Z=mRKAXWsV4E^J:g+[Lg#5Ug
%5rUlQ_kj#q*PR7&Kl)"CVsIs#,@I%e2&gho1Y$<',R)Z`(qpe_&Bt\TIU%/1LF5WFAp+q)q?4tm=DbD(dg*uGKt/ap=Z.1D;9Yb*
%#?0^#0KY>tj;<CmIrF4s?^>ge\R"H2_8q9`;m=G?0Ag!pZ@&.U_9KeJ4.IfWQt;B`;9c!PbMlj<TC[b<2@+sPXXrms[?A?UMqT+N
%.:-+f&V;:uGinm$=[mAQ*p5L]b)T#,3hu%<RO@</A&_m>A:`_S?*3=$8*!$h,dpdPK"I,dJkq(_K-<[hB-'aP"A&:_N(=`.,28\!
%*a)C#ZuOI6G"7Kr=CaK9s'Cm?Q90=gI2j64-4h!NKgKrQKXn"565ElX3=LO-FpZG>ZA27-ZFf_c//$F'!uZ:EO<qbuLUf'hnsV^%
%LHGltVW_?h*3oRr[lsH:JgEXPO3e2DiPK+98KK<SUmP'MPO[uakRa;b"9R.D?eAl)V$Uta,*,09NHF.)*SZ4^pqe&0KI6G$F6Zm(
%<F&+gLmI[t75T&nnppkAibs@7[[Moa>/[]8=qm&[o>Xf6(K3NS3!:P.$TLQuBY2-R93Yh;7)mQ)1mXXOZRjDSkLRkp+5C3!Shp)P
%EQ3$K0'</+FA3c;/@[[u7O%<ZXrO&FjH*%]$aW1#NrJVA<Y/nQ4j,*@hVo/8XrHSf<GOc=_!"ORdklVR]/ORo,G79Q4fC13PM'[.
%M$Z;@$lQ#R4@KS7`,lJ;8qo.<_qR;]FJa89VTWHC.73!u85e1OG]7Xc.;L#N$#g`X+N6nln5ucBlH6j:34P*f4n[&F10J&U9$$om
%\@K,,?CQ^kYXe6bmQ??4!_958jXDHc'4<kgHQb[Qd]$s@G/MuJ*pRjSE=#lVXIN"s?6TA5ei!r]2_O:-_=4IEqfQXXjK^MkO)e3:
%,b,ZI!*i-<;N[Lo"Tb[9[,J8[/)f*#,O#(Ski-4JYg]hCFeK#qSX9l@?'?M!4#531"aSPe]sMhokhWNXrfX,se9$d[aRM@KFP^+<
%\_;lS#6#rB+)n(tn6t7*>AOA[*>p$RUFo<RL_X2nbSTJb]LE5>j/,V;]=2$j\gW$d?LbF:bD@QTS)'qKl?Z;C_qR\kI0?A_p6Zs2
%P?e@$%\$/=7DQX^gog_t0G"kXf>nHr,Y.V-b40Y_Ip#9d(/\Jbf.bc(8aC8&/92iXaM1!7W"L_uPSYTjW9;U'@)2E2T8ns+C[A(2
%_q:W+!7H6IT@aG?KPhYK7ap5FQt0(Qb^HT@\*N`>__?@,9;A^,O@TL3Dbd]28ae\OKOGQO6HOH5OH,W\^Y`U$jIel5"EDGoq+doP
%XCD"i-*\!hk=6.g[]!MEO([JOV8O$9TCO%Zp>3HlJNJ!h3sfTbXGtP[lK[OK9JMH0J1AULi;d?L&8jIOG6F<<=m^4Q(/YS0[8+A^
%=29_!C(CPSKDXAb@&*#ZLI0r0iQMXi#Z9$q8EqFQiit:oJ6="$J?&*//_]WT)fD<`"YFlTE)&T?0D>[&6aU;s'N^S7:!H=k$tc%2
%cd6mQp$ai@=0t\%lQjn*HTP4A7m!Ur=D*'th*R&)B,E[UmJh`a"jT-5RN<oJ0pQ)7VbDP2prar/!o_-m^)%oEEU7HL'6rne,mY[V
%hM*&(igWE9ej<d#Ye(9]N$mr<5Z("p?!77mU6qo!!,IGQJ-9;08;;;?aJ:#<VV-5dJ0cH3#eVO*7>#NGq0Ok<:m.&0F^53c.R$As
%lldkk#F/X^oFKY_).HPX*Ej"`B!OtHNj$#!/2F#nfcAjA8QdQ&au_oJ/hmS(0$7k!M=F+h02i5of9rJ?8a2g[C;Y^]>mRti&'d0t
%8;2%V`_L4m'N:*/$-k7Q'1n:0Fa[le&&;S5Ke,7b?h(`=0(S%DmtVm>@oq!,Rn9mEA\n^l3s0AY3hDID#_X%L"PG8B&'4;j86S10
%@bUL+*=nbD'(-`j9)u"f$(3.p!:rK:i7/#<9ZBb/emLB;%=.Om@,Y@"n1:.F'aP^Ga]V?<j50T(OHcFn8X/K/)Y$nPl4d<&odu&Z
%YFLF\Z.MnH@^$n>=,/6RnDGqDgm<;II=Co]G<u^5Z*Xc9'nV!]Tb,<!"Y0OgaWsio:e]:B86?l;+qWIDOO-0Din'*c;=I1J4DBR'
%EUB-ocAb#u,M;/N>ElYReU5Q+FWb/%_H9d8'oQo_8_;>cZ7j$B]o0adb(:S/OE7#j_I_W>N.mLmM"0)8Gk6InYT,`?%o/e(,Z,G`
%l!!5kV:fu\mW?TGb7kO;@Mn#X;##8<3j>g)+;P2D[RY#e.3geTRe*YQ,XX,2bE`nO#UU6eT,-15_ZR*tLU6ak=!079$gb=Bp,(Fq
%I<([^ig[qeh^sc+*8_m-Y*m8/,IlLtH.,_cH=N&@ieK,=J(t'LD4u]r_pHhl.KlXZ5rlG"XqXr\W+G^^n"I6JT8.IAPgBs06U`W_
%^K'$T%='k4W?-\^n=-SSMGN[?1UQhUFp<Sp*I^A:Xb6=D>s[&qA%)Ui#F]YEkI_kQjUflO#@#_r1Elq<hE'/QgpkltSdcIE2r+U<
%jFBWV6iIje>AeQk0GSYX=mOVp(@JFej$%YE---P+=Jj1M"DJEV!Gst1cs?"91HZ4%$2+1m+:akR,)-[*0lLe6lX>"8W&eL>@UU8S
%a-ut?m?oH['kZu!bICr$=ukj[.[4'j^r1UV@$c+%X=>TE*/G%<\QJPBO5&C,p2&bA>[(slk82!7ZoNp]-!_0=&>I$EZQ.XOi7(>!
%K;:EYoe\D(C[2\N0iHdHl+>o!68IU5\EFeh%Opcc1;X'pneJfO=H%p[3!,+9$j$b+l=@(3`V?+@WRjcc>#Ee#Rih,+KUW0tG:79!
%GU[Kd6N\P=b)8UAS.e[8@FuE)*Z%mdIr8`V[AEMuc15s]Q=T>LFGE:1:_)m`VRu.f65Kb:'F^DFI,;i*'X;4qb9clY6,n0f"i44J
%WG9+e1X[R5nAEO5%Wi5@G#fRB/.irC>DBLF,<*^OGmV]DHHp<uJdM]_L\GL!O@It]CMT9N%p9Z`QS>*`n^cF1+Q.BlI!*%kGhp`9
%KK*B]&E=-i4h,c:b/Mh(h_.X7F/,MAn"q;d"[.0F6#a!S:a^"-W'%pUOIOPOMNA\</LZ;<g@[*hAK#N-RVK`!ZRKuZ=<YP<"#f-`
%@Y6[55V</<8RtfC_c,Ph=_,UNF`$p^kD$R\G1DmVZ=CD<@$H1*1hF1SKJ(;E9-S]t=Vq7uK?+JSD4B]n[*:P^E0f6Fpp>:bp+S.`
%A)U;-d&7_dZWeX+<*&Z6@b!l.@k/fV$j_f%MNLVuM3K4*+_`RL!T5V?1oFH.f=*^#=<'o@bM(a4an+%^'b`8%8YB46,ggdGgou#c
%&/+W,l[.%WCBs&Qa?-(-S.Rh3`IeM_`l(bG92#Bm6=bp`o9n(eX[U++YL!aRME'T<hQlq36m5%p-hIrq:2N6,F1%6b_fBfH8J9VA
%P%aZ(d0RRHkA?hNhMHLFSh!,J[)sTNLUd4)XpAEF(69R2U_AmS-E\<3..-q3"Y.GOW:e"2bHm+tq>;oYq5F@Ok-k_K8t>da5=8U;
%3QBlHMXj^bNZYe9L\HmSd5>Kc$o'A_s0PMm,!!7kR@VAMA'lFuY^-<k%cIIApV/bu?7l^lajmjdb,g7^XMkAQD1l06&NPPe(Y&eu
%'7u<rc&n$u8:a(Bl:21r]E3m,M7^,?hO[e>qOS#AES/'A8-4fF1aT;a!=ltsSD@&]F"il:-nNsd4X^$G3Y)A8&>*]9I9\,U$<Jgn
%_`dI_#3lk2O]_*%aL9N^gS4lP+\9P/ceTMj-?-pAoQeH5J%Zm]dm2qBG#^p$;-RF3GYpY5Bj*',TO0iAFfKt#G[s:=]VUtlU$K6<
%9L]I&E)QI>OA-_6G2d2&UA\+k15b\#Op5REe`eK4IB5d`;im+MDek\qaN\>6WY(<8^(FHoof18I<]14Q%DW"?MHE5.phhu#<b%I:
%4:)-M!>W^M7me2f&2W1a;o/-[7.1,B7(KZM!?fR=gL>J.hq*c@qrZpuI-Y&aj`oMgc*(ei9Ik#BUAuEgY@N,q`2f!-&qV1U5(p"E
%KQP$!L4j,A4HB@H$1ATdNk$2_$/^?!O[:)o,S;;r]AFU^6HRsB+`E9qUM).b-:^$s[$+2SV2F*a".+i%p)]&!f$/4CCW9+8>QnXh
%2ji^n-X68t<[)62+UF2tj`\eBG(PD53P\9uLk8W4((3%Y9)sr^g?B$c\qL?FkIMZ%#K_G]&4Tii3gF;b2M>&J:hn)Yc#DRA7*2-n
%oqZg59eEol,eGl0S"dI3NHr"-i%K^.7hh*gKq$scT5_hYjdUF$n?oH><Qqll1E5?!eA+o"/'k&ZqV^)C4BrnARF`;8c5mfE>EeTn
%2cDlY"f9*k1-JXf[K*/bm%eYqEZn24f>)tAS870I6tu7H!$!k;.6m0CQl+P"g>L0q&M^IJq1fZW=H9R7"^Mq`UZf2shCHo0\di7I
%4*0;tO^4,GZ]&F7Hrm&H)'YosJ]s?f9T(lDCYB!.HZ]*Jaj[$<aIodZED0I3GY(oo;]7Eo&t1nFLoP'Zd44&q%LM7XjX0:]!3U_l
%5\)2Hf./b"p<AG=%:YiI%/CgGj6%$D#=tFC!&O>t!Eb,hc$NOu\p2h].n,q&Gb7aiNtM;d[?*t\hE='X],%cN.irE"icMYeOlP9<
%hAqgpEg(e9"XOOG%'_@K+oG(^']!-X\fqeK!8HmVh$+k4q:=X9<+HhU_tX#)[um/$K2U[YcmTG=c9a7bP<c%?A6TZ3$RIiC?Zc>]
%Ft#pJ4*`:eH9_N6OI'cd)KhW(=Toa6/rTf4gb#:_OAm).^-Nn0T?"H!2717_Eu-D!BK<NE)/`fhTJ;%2Zf47^P=1mLY(uLH2*%P3
%o5KY#_,N>OBW?K-VT=;Yg+R<4@P37C(PC4:TsQb$PUOJaS!_*dW5kii\6\H[CgeSP@6(X;"'BQG?O4'dI"HB)l6Pi7DM;5]O%n`+
%4bmM6n!e_[`%oR8:Nip@JE0sQO;/pN2B%4:-c8&S10rY-3&ZVVj/UA'#EZ1>RT/)aM;</lCedI5M^Y^^Nm;g#jaq@a9cE;9DK&#(
%RM8`2j?_RlS)[JAX9ufn(ig:TOH;0`Sp,DHTVP3po0>nN0^W$r.h):62=ieo#R6nApp?Isc%.o%Nk!oE.Cfr<Y)?W!Lm*IBFeC@Z
%gd\_7$l4/+$:f)35tHZ!hnq9=p7Hno^8jTK[<_<`@JfI#7WP6lmecWA_?H!UoKJ>%>BYMtb=oER.,VTdO?eZnLAT(q6;uc]Wb=C[
%T.]8AJLu[`K0NYT0#u3Yh\8g/HtIXC;hbF,_?pm(5:!O$!!5Xhr]%.6GX9tJW@2??'r:mEXFMqAp]dugKODA;\rcPHRj=^Q!)RAI
%'+g)iIeR:Z-/_BY%V-?7e_g8$*qcDT0n',S1VuRm?OuZW^,B.ok`'X+DE=?OEStZmMub&t&r#BJ0ES)iJ%)4KSVq'?3f^WC4U[gS
%+Hm32m5hl5l+$(7mi&$o9>[Y*@U(n2<TmA%0fRr-ah=ob.ONoi.7^KsCR0'',XMo%R)OnBF/PQsI/4Oc)SQY:U=Qpu-PR>@PfV!1
%*.o`_$IB=Qj>--[[6G=gn-le!0QJCi?mlbEfJXC0MI[jcU.pLhZpT]-08n3`.ptgP:ngCN"_f.Paa1-iJJ8f0#Fl'8<*GbSZhSKZ
%Z>rlW*N-7tQr07H,`c-VmA^?tkGjH7$JUXt,__0o2eZS3[jbM$W:ee*4$_69Gg%MQ2e#rnQeXuu_X%JJVqhRXhpBG[Z>:Q_!dXU]
%9_@HaFKAd&<1mQ+3_7E(WGc3q`7a'g!aOYgb(jo8c\(;K>MWlD,/0p>)L(R\JBZ2ne(QSsgV;f<S)-:E!jNj2Xrer<cK:)mMHrYe
%\F*E6(W=PT+_FIQ!XWZ!pN\Ik[+02X*=e0FU"4gk"=jNYn+g5QoR;5#;JqYh]1.E.DR;dZ=egX<O3.m_Y$H=9%a:MS-.scA/P_/9
%,d((9lhEGY#/s=%WXL)'LY*F6EOA/nq%a6)#u!r^3.ZSL&nYZr@d.5OMpq'.$\qko';=c,E)\$#!TGh,O^W;<\e+4qmUg9-Z!#OY
%!7'H/6iBS=*MLUrAu:?RRE5MC$UGT1i/PT9/9IWN5Y/(;=b5Y[9-o*LBotRF$A:$59\V%Be.;[oNpt;C+e_WJA*OB+V>[uH=BCTG
%T:$YK&_n0VM%&7NBXfsll4IMT,-PKUSnfn9C>9F(OeLD`%*qKjB!%(rKHnUJc-S6)NlcLh^cO'O,s9/q6h"?=1RVO(9+o,o8XM^G
%m["4hF->$$7:V7-ku%1E5[8K6/&;P"Xc%)%Z,[Wlr^@_:!Dkb*+'E(ab>S4Inh;l:8^\OFA/fV/'J!D#3rk:lca5d.W-F,^q>ZO-
%:KN?*!,"7-7rqo;@-=DSR)TOOF`M<;9f'#`fu2G2n@6;T+2Lcj(>:C7k2J6nbYq87?UVcCXU&`cNk0Cn^fEn6Ll10rP.1]>)lQ^O
%%rUmO5dG=+33&X-/EBP]Q:2(8qYsUX%gk<&T5bpu)HM"I_Q4@8kS\-RS:.%"`(Ke]NoB'YTr!Y[-9$IZTsL&u;GNUKdZ:9bQmj*;
%,/fj1X,n]TaQ&H_@6OTlL@u$P9[\S<&6%(a=nER?_m,.;iRW\s6(F&o9Ukq%6'OmP40oc.F1u.+`Y!"kH;OF@m*5mLC[)ZJ$u?8/
%d=W),.681oe#)+PDPb8XVCh":POK,530L%t;tNdU_p&4qalCsr<fcC0UrnIg0?97f?sS=L<efpB[gWSM/)E[;#,EJ=\B2F:<4bq$
%V_cBJ&5[)LfKdc,1X^#q,"iR$Q.TPZm&E]/^9=gL++18_,HR<SQI[A=M)HU-C@ueqZmtAGd;e69fT2=tG3Y9cWXK)PGR:D;iSbHQ
%3pg=^WU?a)-e$n&S<J*fRq&#i>%OW=#cBpfTcou5RN2;:+E:?>:^HmbTiB5W@_.l_UpF(gD$P,]22^&(R;6O2+=1*Q]^.Y7\X(h3
%c\Y;6OOb=^:LoM03KfV4PU0"(&e$N8UQ=31J,lMLm8NLGc;-SO!.)kJihH&ni'DA:2.oS?%lAptn$Q`,5g0<"me[qZ_9$q/pMqiV
%[#Ji5@IS"\0F0t2=b)1&X^&1[08X-I-h@>*_cK]dHkAc/TLG;MjR@r2d;,CSS7T__Fng-IE6m_Km9XGL+pMN>J.j0r<DR8jBb*s=
%OQ7".&'8pMTMi9CC/`V>j>@'aB=XhJ2*pN7CYu\%2H/c&&"p(HQRA(!:0l)[4P=..h.oDWlppUX5*2oS>UCs>!A%i)[]=:Qd1o+q
%Lll&g@M&;%n95]qHRt#,^DB28r*89@-J6#WNNbQ64h-jm?Eui1]..*2p1:GSf+>),MQZ.W1+\!K-4Br$JXQ9P!J9.mSIlb1i%B,b
%THBgu9oL]^<KOH_AUZs:0^84hR$dg09osO7;Zab@<)obZX/WPl_Cc@Xg23E%iIO[KE.(SVqSc*9X5!fK2A7[)Th12$15nFsY"]ni
%^0kuW51AG,/9+eh>lp(ORG<YS^ci5J!\@@/WI(Hj2K9]VJGAIg:@+:tQXuGQA%@ZQ-+Pum-b<EgCLI5j%p@7W86$Z80c*%W.`kD@
%95nBUnmqOKO%@Q9_BrlA"sHkAcI"k"`H&rq\PL&b4E1t`+V<,:B?Hg@BF%:q\Iih)>h;ir!Fq=T?=;o@NM;,JpQ3G9G3]anqucOa
%dsBuehI%$`2!E*o%i$qGYk5O)CeFEd'e%cbI%G:aN)3QagU))_,`LG%PhiusL%[DT`S+/tjMWk>HIdRfKjBd:,.S;<XA%<%`!r2A
%gQ`l$WUuhEDK612c%qqKk-@s1a.0AaNta3H4?E*\Z&UL^]WjF$]6`&ii[#%WLl'RC^%F3fP%?Fal\T7K2c$G#a'2Eh'T2XbU?"a=
%+RV>>OY$nC]<Ie&[5Q:^'VAYD(/"kQ(G3V)Js77GT&aQ8->KIQBNMT@=#=^c-p;\'Mq+n.Xbaq=C#6n+.U^`1VkY]/a='g.Zb.d:
%"S]J[>.d[j/%\#ZE>D%]LO.<T3uj@pJ;0hbL2L.M*ocmVUdScEo<`j0H7Hh.]eptSql-DO/.p$BStXS=Q&s@BfR/0Cnue8./QF@"
%J4ii.-#qHiT!+XAG1';4?fpDkQHN$.r7j\dLBCOl"QffNbU=PC9b-H+<+`5/g7\aU?85lS\QNn2IKo"*i9@2'&.^l9&gboq&6#hL
%hf4nop+V\$7<(m7+Y@n9e[ARB0fL6=*_Kt)P38Rm%`X-2aHnJ>Tt3IRUM^p)C4n0qj5F30&b6^]Y(3L-G`rM$P/?iR_Gk)=Y!MY#
%'$jkVfY8sI6lLpJXB?`>keeV(0I$P<5m!I&%rnC;&0&U1BW[q(M5tlB8rgha+P*<^;M8BSN6)L:3DIW`5R$N16m+G^PK4+fd!T%1
%LpbSr666bU2[ODS9i^DdbElA2@[Wb-7c5T#l)ki2.>2ht%'V]cqQ=@qhJ[1,A;BP_RZa>tbS`ejS]lQ5$YNjioG%m&"bnX5<UgKN
%]l#GpOs-f29mZ0]9ejZj(^eXc4Dmd,Him.sPuSQ8nWln=E'q<i!s*hbHS%<8F7C9i[Ukj59,c?an<u8=';GYq=]jT!s._geE%9Or
%lTh[gX15C6GjQbB?2!iXQZtEb<\em$,iW74P^O!HB(APuq=#lV,JZg&m+XJV/Ro9oX$g-Q)@LIsJQJ7`/T+3R'6(.IXE)]_%E[AA
%n#Q;BPCl%^c3IE4Zdu#<<89<bP,)tVBg>Xg&0_1n0P2TjkY.3rQiVO^4%>/bl6/Uu=bW,M9nIeV#ELAgB,W+,EtlQ=6h$"IU]@L9
%nk7!\Wa]qQa*/n^G!OeE*]/.=Q5'H89TNE(.6Wdrfr3'7YNJm9T/^jrMQ)f@@U?k[X&B]eVS&E>@N]C@+Q#F,)pkUaHeBgH5)Yag
%@s$(6E=FmU)m8U4!L.ao.23Lc@ZW&SO%g#nCTR<.EtC9i>u(k:[nm3LAU["VL"q`d!]n0W'=;jp'[bp`Nc\hdOiOOdk\1E_gTF$X
%chE44_m?q90MR/PBN6Tp[)C&e5K#CDlF4f/--DQ?l>e@SaMi^q6H=*unr,]k[a`6s2Cu^u*X!,jZcdkB*5oF+*9Ie<Q%mX(Z$lFQ
%84cou%2VCTFhO(?P*GP`?t"6uS"B7U^VqON!#hKQ/3!E^Ld#lE01+KP")KDH6AO;XM2C.6]S1/#?;D4#@T-?-pCQe"EXk'*&r]/p
%nfsdb&+=tON's136N^VJUYL[(W=h_6'd+X[VC6BpRG7r-S14icUueuGlHpN]S-[PRkB00Rc7=]o2`[&)*HLMgh<]K#X3-d=I+De<
%Tn&L1U'I)=F=>33EDslPC$ZlTf9!qWC+JAhM_ZZFSB)NY\\5"lWN.Gb1GDC?7Qi-i0jYY?:^%DOHgL7C5[8<iTm$??[<gA=Z2"N*
%75WfG9`$"LV:JVI(V>HLdhW8.m.p/!4En:p?^c0;k#:u-LrDfN+@t9!%>TdOIGO4.F:;dUG&6!=\L@g^:E$8'A&'H^fkT=`&H_+p
%UE0h$+!SXIqH-9H'fGar^"eX#_+sK+oi([?13=rP2Gbj/HS/FU2)PPu]ecd8dfAYubcii8#r'*/+'PDWLEdi_[</E[PU25m-=aQq
%K!XEo%]K51DG2r1).ToNOQ-aG4,1^Ob,$)Z%lA/7hn!.g@C7OQjDufWYb/0kEhbKF!QEVpbc;!7qPsm<.O^o6:5B>Z@h0N1]I;_J
%"/):/WMp0_iQhX]5cFa^GS.\!B1rJF2(^6!hP.&td+Mr*rM&_?3VVYD+Qk@hQ:GDbc]7!I/e%;+:l%f4nd<dVW#.LgP:12-P_Q^4
%3#,Y=+%F(M=Em*I;&o`ne)r!dor?]eLg+g6o3>QmKY";AFBEJIe`:&UIG1./97g@^27]`:Le^rM(M8nF+aa[!lLAF0*Z.>Lq;gE`
%9$?jC<c1EP$r;=,8M''22tG#sT,b[HmcHcXZ`7f>r+Qb9Fm"_Zs4Mb*hDgR3?239,s$PZHYWkNrc,97?741CpTa05lf`j>m"Ia(.
%gub7sOWO)Z^KP-tgOo.@QI=T2a,*/9<`dn_C5pP+b&ELpS%f!'fl>(>B@o:Ds!V<dcq]/`Jn>q2mKYKR$mpS[-Kpa!6j1\YoCNqd
%.W^tb(1FTm#+nFaBdL"'M+o]'(o(KHJ.S0^"kE]?3T(jT!`3H5+@s>h]Odo23\R"b"(Z0L8)#/F8mq*>IKH\f,TA&3iLmT)0uDHS
%C_U1),iBFLlA@4n"Gq`$Yp@mp+YsLI?UNfY,L"\i]aF+%K25Oe,uuEJ+B&>G,++_8*_dnVjbZ[>)#e&X^_hk9FHXIs>U0[E<=hP7
%aOpXnJbN-$O[RLH_M3pG,_7bZn]%IhqE2QkMAd7l0ga/Y$j[7XK<t'AA*dSMa+\t!E'$\UpJTHEC0/ea@^6W@Br1eI1>"$!N>T_/
%:]bJ^Kc>S_%=)>hO;@[@R'e=Q1iqlEja7qN4@H<U&gA"A\>C@E$8dpU9&W^2.%I7'WV@K%nd]#q)*A&]^#A1LQ.p79Ug_*\aJm3n
%A!X)VHT\P#('_#]((c(a"S>*=#iHG!)\Z7L6&u&.&JtQXZ#i&Y3uBQ%0B&+-qF$O3o!/D$N1C^WOF"^hThKNsR%d//+:2HJ)WY.7
%I;:#qh%7Aij4$Nf?`N`hOA2,&<[i/36#n\V#0o9BgZWNDj\)4'Gc/qajMbJ]0/oeAUX>DVoT7]bjr@=U51F3P^%laX5l3h=/gFe?
%Suat6:D3/iWX/Hj]Z;Cd:T(]1J_4k&KF>XBM$3:&RICKEMC]aAXU%9N@X8kPpA5efBiL\^<QKLp!G@4c!8/DAb8OD!;2">R*#ObF
%(HBG`HPHK/MQ2b3K+p\PqPf7KBm^5a!?+R/8#UPs8BjPjWY4bd?,9'1[MNK"=%+JjSi-kM_k@@g+SZ$VLX/M]FWg;hISNQIY9onC
%^tq=j+%r;Qo!QlW$'Yq1!O+1)1]^`5@]4eiFB08VO+!^1d,<hD.+eVQ@i30!36N1SN+\)j[>[W]jYA]<$,+?8;'-0e8;Gt;.P$,G
%"Y^u7I`hk;R2U).F#-',VA8))DmY.*fP!.<QDh-TCu0o=05-,R*pf@5Io.'b)C\r=JL[L^A)%C.*ZVY"cK'^N61tH;CQJoV!sXOb
%D@Fu?pLRdS-<m:OA=7s-+[1)eg0k#%b[[Xm'qpj1-D*tpXCi@^$,Fh2]6^G?%3-bf@g[qObX1`Sh@R@+OaK2EN5(i*:f,7n@=7no
%?ld/*+BB1f^`mGSeW#U`,%s,)L9(cYi%nR<L9",T)(*MA%ZKtcBCQ!RlA6GmA4P`"/blI$%2Af?PXbg2.+aQDM4t2VW#[+;7Qb&A
%^n>1A3Bm[ac\Q;3(tF.OMJ=E,B]NWYBs3R[>*n3.P_sJ"FRj-14[Y?0X:5a;bslYN$jikC0Z=bqD_=j9L#Z(D'7=hNKG2J+(.(cJ
%aUl=_'l:%q=5@;]#n8$ZDaD=;Phbji1$oJbYq2IY.jeYI:@bkt(8`U?(&1Xbqgkqpe/*tBQ*CnmP8$+Z:5rL-NJrH[YQ-Ro9k%]M
%p)_]@k]LP\KG(k\%NG`a#g?2&ZU/?2<J!"1S/K5b,,R20f%qllOdPqcd@t;'9bGTZRNOkj"(*=>l_tR0JKQ/hcJpSujt/Wn`20(o
%;#nZSmYqq)c@U@HRUI^p'jY-M`>]j,@hi!e"Ca,Fb)4&6Peo5aBHY0fF_h;l(7#d./Q&AHoRHN"#_cDRB&m-4#d4b"'0pa6N'W;h
%-72L!%PCl*HA1%9pdqXDJU*G!/]26%H'2B.3[Oj+6bj>^5E5nu3'`+ZjF%n5Zncn@BO<OVl(Bcdoh:rN%`9Ft7u3JJDDA0lIF=E/
%K]2^R97C(r4^JEqGgIasi)[rS.P"(cO]+j!(i8LL%`Z!fJK\JfZQk"T5\4%'k,8Km,:D51l69l>b?#7tY%,s.CuQ#h^_9,(52#!@
%YZs*oZ'>lq!/)qOm4eU%+uak#M.PmRKKA3c1ci45Eq]kFfhnVVO#TI+1J)aIb5?c*LAC>??m=A3.+d)s)b&.1<%G?E5VrOPOni$J
%%c,)8$0?T6*[\1:dlS[98^'K>YeCham,X]FGt1-k[f\IRe;5WG3EY/]CJs-8_/SfV]GsQsOo]+qB'q0pU_V&m_#(*TL,&u7)::5f
%8EQ#(>!*+3!+[^)`Y?H5e3.hdNcocj`?NZ+7PRD`SQlp;@L`MR9h#\8r1'Tg*&RFVpK7O?$^JZ2o"2d3$UhG]Q\2gT%Bfh?%V:?P
%Vg"r3QV4k4"YUDQ"B"[Z^bMohm.*p5`,4#T0qb&!b5qMQ&ToG9jT#Pi+o_mS*kYIX@f$TKLpNCNFPu`*@FL*<%VCBMj(-s9-r9Di
%>7NC#LjgJdFGsW6jSVA,0.&da$?K+DJgar%!A0)VEHLFQAiW=^\?Z0=NhuM[l%nFt<mQ'-/'$Pq'Wi?h[<AcpkQ@Mh"KNNV$6u2j
%;!!he)AT4kbZ[3`N`6M2@qKD0%ag2`l!QSJH")_^KdffOj4ZtaE[YDX3Jn7f?[r@#Ei/t9%aVYY-0oRg55'ha.Bpa$m;VQN#Ug"C
%;h/o1oM^-X"F=[E'*L`*6KR\%i7X2_8'YcP-c[WB7gTS@XI=e"-]HF5R4U(L9]#CboXZJ*3GJqa@)P,Z3Tq?7&Y1Y"+7p-H+!FU(
%pmprG41IZn1`_,mLX,E$$6jcW!n:.6nrhWk/9p4UU]EN^_ND_uYb^"VNP$#VKWSYCQu(qG<rriQ=<3(!-7<KqL(!W%(c`?<+[g;S
%,6nRd<$l#6(+!lL&[A",(p<][=QE#G@+[5cb"Jg1$Pkbdi<Y8m=QH,1TaPrD7:*OS]crS+5o",^8E<mu"RULK,]Y(RDC=Iu",.@)
%1;ir+:AC>EOTQI5Hj#9G/%q`6IZ3Wu'-QkgB`!ZS0#aLeL)^h',4"q064QctI$[*[Mc-DXjL%OCh$?7U<-5tar]$991+0o5"qJP-
%!_]Y`h,"oXlp(tC%Y_(u``5@-CM%M*"F;%%AooF-np$"E8u'2^OMZs]IhUW-`.b]8G!&ffbSYM.;p6Vfj,nsd)0Hqg9@.E"T]:Q0
%6?P:Xbjd*95Cjf8%*tu9j$40gapnX`SfgWSB#&Dc"tOrY(nul?Zm4?c\jS*I^k/ODZ27S+`kg/ckA,Z,%\>)m>7d`Q#[,V,_hD+4
%eN*^L&!H!#5i[F?:l7%=.A;k+9fpQYpdB_!B_oa2!;qJ,="q]T&@-iAX-!^8_itsl(e84\U3hX"bErNf<fd>i*)o;\/&<#,IjS_q
%0t]IOG6h#/5o4aEVb0gB$U8fl/\WPnG+1'RVLr]8q;i9#EQA53jJ^&4!kJg9<>ejX6ilAB'3K6?P#51uoV"<@Tu.5Hie3h0MM'3-
%JA)(6%c<$kUB$!X/OpIU!6)eSK#^B[R%[O%PDO8<;K$f;-4V(=/:SmPidmmOKb=WG+@`Y1OMiB5!>IF37Pt7*K9R>m*5&&&7n-<R
%&9/hCSu`dg5TlGG&OIJs.3deo@jhOT(QJ"f+PmDLI^gYU.XZITMl35'a%.@E;t09)<QPA**8npP"+[.$13,7j$$&#fZliU%",DM(
%8PUMM%7g'P8t419_dQNlFjP(-i]rS._$lBU]k.r!E1kANM*^5gYRGZ*7TSGAoRqFqE.i4NN$43[#n6V_=Q'8@7*#uc<&cjrEThug
%*X!-YJAQpRo_B(H4@m,F^k@>!NpqH7-/?[J495bDciCul(6%aun`gGnmKG_%Je7>rr'_16TgEVXk6D%)Z",FV7!*fq#MD#$5"E[Q
%<3&m4_;So%\G"uD3:D)(";r1Q8dQ0S(`45fG3,60`<?K3!@Pi*&0F.N9EjcE;&/OK.!T4aRh-$DWfCD1f!"&.E34uu&fc&,fFbr`
%j=h2f\7*/2'FpWhF?:DN@@rp=JK&c":U.\Ei?i^rE.c#G#6G,bbc\a3__Xl`>`8_*Y]MP;oi'j_+E-fR"2(;SRf`!a!o.b'X<N0r
%G3DU#^am#A"ofMVTFUr1^LI,[jL'1OfriubfSnd!aMgt),'X:eRgjrVr1,7>^>jYm@06>.<'gJcD!V]aDmW!fg^,g]aHg.L`WEOl
%IWrX/poQs#qf\G+.WF9c/15,g'uL*i6GU<$ftrP)_>6''pLI+h*^C*]:q.?NI1r2>E#n9!?oY8A.p1[5;)'dfKu(JFJ_uNnV]"k@
%clD6]StLLaR$&:'J:c>hBg]/>SH+IATY<^)7jj-9I92YQ.8UB>&=OC4@Kkp6EfQ*/H<UN7i'Puro*m_Q"H#!dq$%._e/j2:2@.S]
%i>*K8<+cOAR%ShR6li*h5%6=P?C%?<%:'8KV4U)%4%=$_KQ$<-4[T7aJXKC5dtmH%@4`=E-LfmKZ%H<.]`Cm!_ECD.D^U5E"l%dO
%V.bSV"p,.`'4c%%c:J'1L@Ba>d1."%*8*e>Jb94MOs3./PQpaA$dBLZ+;&WQQ,OHe>H*5=%1sPH@P*u(\5"T_orJG;LnQ<)jMg\[
%Lo#XYciR4+$)"aD$_uX*6_";ANshI:9Rqb/HC?45obZB!]R=AR+^!S>Q8_-U6Q@+%0L>8alk"i+(Plr/B#<e-OM"FTnH1WThL].S
%.Udqih5Q@o*@k@Z"iu$b&FZ>S0IB76*.bc%hGWSthAG7-Bo<&RNU`!q7kk&8L:`A19S'jM+[K`JO>lMfeSH1U]TJ'X"p2h>V]EUD
%\Inr*j!M5:j:0.h0NIatM<_Z+N]6rD(bFAL=SS;9CDFl/@QBue)3XM,"/n?DaEAPAKZLsQ'uBF[\578e$'$qG,\9Fl*s-D49T[PY
%j,G"sN]5)gF,YE0L%31()T4LF(iPA4.CF77Derl#qg?3BK+%fT<tuQjN4MIE>DD[&QluNfSA9AZcotko1Q8e3Uh*5p?l3fATEISD
%Jap`fD3m>A2\6NO6;bB%CF[gK'Q7ctI$ULO6bF*n0a5N8,G3B34b<,-11>S<N&Sc!+oF17GU!78quk%Z5Da)3K&_h)0Mj0X2c.lR
%5K3/IM':HY^j&6E3Mm06O>fX*Tdt9(n](.CEimDd!+mtV;)44l=?-q3Fp.@?ZQ,El"in5E$JJJsDlBd/2*V<[mi!LYRmF]l<K8*;
%)u?OW"i7eX)S#imUH&k0b_"d_1VmJ,.>Bc,6/eXO#k)LGg/JWr&cJ)ZcP=57m&j:iP6&<>.#3tu)8@,cF?Gi;m-rh-i>m!,"hbi\
%"H^dah=.tjptd%')iTB2Hn2-LU"'a-0*Jg)X2>TCl\O>Udrt(P+fC^d$=F4s%9^Iq]#>Ao]6_VTA#Mo%kn,O#_ffOppd?\pC,\sP
%6Z&T("1fZ)1LYH:&U=TT;93X5JJ4?te@:g+T[4$X2n^u/*&SbCS&"_[(T,1*FpLaWW(;T^!oO^4o-]p]5c225L?qA2<9k.;DBoM?
%GDGNS11k&'A2er><[SI"DP0g'e-TYER'oji;TN`Lha!8*JaA+?0uWSffo8!:(mlnBh2m=V^hA>QNJg1BV^#k6Ou#U+OeK[)%aYs;
%DG8tRTjn/XNG15,pJ#*`jpW^?m7%F_eJple0rUC)WYi)^.mtQYT:gAFo0n3U'@^n,Z\<<4e8B(>)-rI7dBb?;$J^WX%op/Ni,4Op
%(#3[L"@h;:Yh_R@^f?-V7KTIB#])FtW2/(%gPmOD67;L/[OR\hK%l9>/*(mfghp)l0SDl6]7CU9'ud]=80Itf&\4CP(hCS+h:NSk
%oFc1'&?#TL"M#JPgL,,W+Es%/^f]G%4dA+SI7N_&nrJX.N`$(FB3@K]]2?ldSF)?lNT''EG7_8',Lkt80Q8sKkUqh0h+2/@>U6X`
%V@[%PmDeT?d"`4BRtCV[-.B0Y&KH[51P!mi,as4?gPtbK!VnNj2_5mO6OIckR70(]FpN'his=`c=$_HKr;6k?2jm8NUR`fP\(,d]
%N8%'](@O>&2]?>/J=Z<cD,V`p:2mgB=<q7c.(o'E@LDQ,\/Q+fb0H:C8"_k>67h,>,M\i$B62,\7a!R;k$Zt^3,iOC<SVI2V2"Ps
%gPooW(`=U/h,k5OigL^n)b#6-C,!Kk7P]jYK%j!6'0C++]%/QK'Yp)qj>89(2n1%\]24$i/]*3LECGuo!I#.GoHqB08<0(*Pk<Y%
%OEprq"q$(?:Op'.S-f@5&2'4+&ek].9b_]\NPOB>V,VS2J@iWf9#_C]m08oO5U:O*DKL_EMO)&$"3:T8;*j7Ir[30)Nnb'J7rf.s
%'p,dNJW+T\;iii4&[iXWL+Qd-p&KY/M\rf_Kc\CnFb7R2*eirU_O@9'@]ZUZ@!CU&l&+(%OEH;[lY%5i1@0#!mj8o&Eb/4DQ:uS`
%$J)>4$!;DL10AbZQX;JW!?R.sfLDt1*'*m`Rh=;c!d2]T':<Y`&kI4A*(_Y'h13H&iaN8BNI^,LZ\eZ[0QEjO.1"`pTK7cO5W=(N
%*30Lp%D?6]Lu<=j_af1Xc^gnYR\4^($4bUDA8lG%Hm(c%&Xs`eQil%1cp!'bZm%7\GIEH;3<F7(&[/%hEW[J(Q3')S^n<7"h&VbB
%Ri_?[5#OY56(aj$EWZ?[$n%FtM.IHVj9?PRU6,g/GEuGq+E@Qp*Q!dD+ErtMb(@YC+K_%$0S/7R.`7W`VuV2TlN%A1G9`2PD1]`t
%6o/4!DQs"9iAS]q:b;/D&3#?@@Z<Uli<CYl=TK@o)cdd@3DND\YsN];*J?LG.^WT&_gjH$BEH#0_ZH\a#i)Z6a:/9&)[IkEO8.H2
%&?,*QQrP#E8)GBbl/:<"_HF+PZT,2mBNr$b"F1rZ.Oi]3J[[EOMblD#,*ao2YhLIDaLsL4Ua[eW2M<<p4GDQ[GYq%_6Cnf89q2g)
%MhJZ8!4RkoHjejjUii>c;"1mo<udil$/B\]CiC)qD:#oBS^(WtqYLD2]2KS^)t7jC$oKB9'fOoBE42h*:C56'kbK]6:eD#5mrSHE
%%^QUTdXf?8LTs0cJD!C$9Am.'NFrO;6F8Csf`k&l%,"?t*M?-OIKHhbmju-n!jc/7"#gM.2CM%>1aX@"D3>1PU*/2M0O/,hfgZ7#
%,*:G?G6S1FS@a;f,6gJC]Q,JOBr,)3"CrHq'lu_ZA/gR7q?mI;)_$FT4G%BZThq-\):q/DUl(KAZFqkNSZ#N\5!cX)r.o#q'9I&V
%@j$MVCm/#Mk74JNk!lBJ0nO5:4U`R)"CrI[RD4A?[K-gN&'P/d)qKNp0*Pjt/'*=I9io#K4c+%[FrXM`(u%Tt)+6?C-4t^)k#'.,
%;2f@b&54WBCh%oGns'O"2U%C0li^c:NZl5J$,e_mKG5%XJ_9D]Y=;O-Gt#tb+LVU-UQCP<6Ym9DL=jKIcfjR+Li&emK\HW<)rWPK
%2]%-aMt#ng3^D='&1NQSB7d>s-^Xt/"CW7e$RnN3&[l,;.<BifYRS-h#bE@SgQ8d30__)u?E&b0'OMg=j.nX7WXL#%48*U_*HIt=
%9[L2pIY?K]i3gs]KL$LXYDndVMQT\'8>!i)<9suKaou)j^Q[ppO7:k6&iDK[b.f`eClO=U?&RX6%fk@G9n\6N_:L<-1h_Tp`p=m>
%0\ROQ)[cP*Y7t=f#QdG5PsB+tc@h\fCBG0ZVVl3%amp3Lm4>_[7+DLlLe>Li\KqX9Y[D2J@NdqA'1hN729$>-4(h,.B0^;6A4%<_
%J>WhkJI8<0URN,g57F#Y@+PD?N!pULRPmF*+^TkqBdYRb$O5'L&2j#XG:;jS216<5)u:F[[$18u-Rd])Ku2Kr(efM>MMtqol(Tkk
%?jL)5@q\4@"WA0\66#iVBQOghm3"-1'*)mfR&^pULqZVL?U1bFnC\s`9[jb?)a_4d0::.n+g<&P^BH_]81;CZ3uc&#&=#\WZa%(\
%NtV[]^i^,;Yh>,19IL^9RN2\k80G6)XhlXD$">eh.0GMBn0-'a9lgA^%?X`qrA)6$8'X=r[-YlqQ\UVFgu];#>73%i;Dp!EW;/2F
%2MAf;PB2>>%?mG7<"+s2V6[\*A4(qde[cYbZD4'k#Y6l;!7j_DG$>Fn&ToosAA_&mFqI$]L=[k1A2_H)7aAl?!b?r)Ns2$W*ufri
%-X>T7+XF*2"Nl7T>t*!OE9nL>r$#W\f>N6U,;qF_8RiI<5[sm;-5nWB)&j_T]b!esI^U)+,e2Kl*=rR9%0ZL<%Z?;V(51'H=D[MY
%-n7+XVP36o!fC9h<5W*?lmaumJr*dPnifBLK8YNU`KPTK"KFcIZr(u:>\0p&@Nub-*Wh18&Y#/_"^07^N!D/T`!16NPQ\h@7f4jV
%)%fPYX0ldkR+Oce%#PK._Sm-aChl$3E!hJ^5U3d_!fE!:n%c_6<+-gk+@902`C=hZ"V(RP7]/%+G63]9/noL@iB)e5#*HfB?/Ua#
%>q86@-mghP%:K-GJ]%a!__O])O,a9s&GiL3&/tn8o8X@m)a9$`Z3_L/V@Kr?(=B?:6Wsl;2;'QK>f"9H5R`_<VU?"u3"aeGd'*`c
%h?\mr>"'h[%3&;.#VHZBCc&%^RVbR%7\_HLK/4?&%aKiiKoNrpi6%M;:QhbVYcs6VaIubB=r\pFN*t;*_EsNB)%7HsT!<;bK4-9A
%!eq/V,b,\P_hMrajV\a@)s"1faZ:X`2NXp/Z[cHd"[_#\$AONa4%!6`8\cIq+_mi]@0=FOPu]4[Ci"YA2o3ANYos3[-u>q1AcrG[
%dpJ1_O&4J"%9uSZ!7$+Hgk_Z.OW@m<c3+In`DOIb-8!/6HFkA0",3Hf-;`?n7q4D-_8<XJ'BglER772cV776gCfIKA80&$VP[R13
%&L_I91Ljk!&IKHd0o1#t:tV^L;:uHa_aZ>k^sDCUjG-hA8s3U:C]pL`Pu,h@LRfQj9u*tfjooU?%#0`Ecd::#MW7,lj;t#!_0sIq
%^eiYpYsN$5":?+%d%X7-YS#V&bpNRHNIFnJXWUl$9^bJfD"\&Jc777cn@T>k$R9)4c:OpIJqT-7Cr-0a,]&Q68J)L^Cp66fI;K%>
%9t4'NFXV'b?).kM:tS=T9XG*?2T:;\hk@7\9FT=/P8)T)I!R/:fP$HbAFtbY7@(>,J\jl.Pd'"7-u<p')W.6mE<_)(_,/cl(Lm`5
%&IKJur1sOMNV5.H*(+-Z"`6pH-u:">e077g@lmj+L;LsU/L*<#-u;kA#jOm`7NopYE(s7&Ft$jOL-:V9%NE-6$oW]XN@$%\/f<QO
%6.7(]Tf."eQO+Z*5T/Ob4'CLG;'i#7!f"UYj#]]I[Z"oeTlGSuJ.W4lKT1FS/qMFq5*9#OF<i15IS<_I#R;;SOd$;5ia>\%548be
%CI\$h#nAl%6'Z]sKM=2P:e+W<YfTq_V(9XT!-YQ_<Pgg/2F=>\F@.hq2EIHA0LLApnLdG@_-!]cOD#h/fK`!kfG,ZJ[$2_!aTMnh
%m7[f>+Ag]]Tbi`^Y`V1J&0hlImK374"UZ2Sn5ShETs2A'5e4!1-u=PJ$]G9a#s[>fc<NViZkUPP[SnSjN'2/Y!<_#,'8USC_FF,)
%Q@PT8@07Beg_C29.C`N4KoHcTYFK!/@uhHm,Zr]4KY\ksJq]2-)O"6qYYbIF>SDdMD2`&%:tY!>+L$b9$G2K*$6,VPRVIVp`cWdq
%X[$:sREh<f@0;3M]*&H[gL/+R":?*i\7G_q:$@>NFt@HgJY]S&A(i$EFrJBop@MZ=@P\@GN?07`U3-^Y7aj?$49`XBgh$te'T?gh
%3"Xbe$AOOTQQ<#),";\W<='<alqV,r0<BK<e]RDYY%[q*6/TJC2fURk_=kCaG+gVBYh`DI8l;f+(R^bE?mdkE-jFj(MmPfY(WO"Q
%,%)3F3\$"E-h_c^lQSi<!e4M&au=d.0T-\C\o9jX'`/g>jtL8&Z*3]16mp@5&E&/kn-SZn!"gaP2$BHnZP,$,a/QlgghS#FdO)k<
%KBL@@%XO*uXQik@Y8ud6.HE>t.Mp,OKFe^Cg$mkWk7C9+oH+.IL*A"4's;&JU-judf8u_XR(WQF/HA`WGO;4lp]Tt&!kuJ2+B[54
%nI.a?5[=IUeI'U0O!8^%bdEcEc@U(rSh3lA5d%pZ:6%'K\;%X$/?:?>f:F]m-4nco6r1!/>^HcW'SL8kL1*76$,AEos&@V/Xhh&(
%=of]k8@$).jV)V!:`3#6YcZ;d=FGt5:(iFF6+-uY;&F8S+\Dq^o`Wha.R2i>-`GUQ2$*rhL<h#0[:!0*a(Y4:5[$OR7:gF_699\Y
%4'+M:2$=KM!M&(N6]j_uo)`P6@5dme$CWjI_GNFdJ6AY1Agdlh2!>@0=+Xok^L.YJ$&g_iND)_OCK)M:OpZq$Hjo>r9JEQaJ>4P7
%Qp_oR(/YXE+[47m+lNo=%J(mmCrWZu+IYiEHSg4\GXs-.kcU%h`ghW^@j",][hAOD1";poM[j#%<6X\CjD"i*&E)h!R"Q..C+PA)
%8bYK@ZtFD8C:+kRJdH0L`15hN.%o+@ToAc'Jls*3;J6,7NL2Sr\M.K8'GrM)X9J`nN2CjM5fF.ZJZAtt)moGJ=uC\s<VU=\D\$!0
%"KNG/3eX@FW+pFLY6%^Vb673\Jl<+46$VVsVV6*IckN>1C[jjuWJ4(\_DGh_C;c.M.'aG[>#CjoU)F=0/@%n[#T1iB6)aKT&jQGs
%!RM@&J`'HW55PJS)H,iKnWK)tTG]pq"A\=s?eu)I[?Ig\JYiX\E9(V1bV9\Zl3*FlI)Ykk#VItGYQP$D;ELkC3^KT[EW?+P-n'5"
%o>R*H&c($.,]uL-3?V5;_grkB!MkJAN?67L*d*-@58/?l,qr8<82D/A=KBfQ5!bsHk_unW"euQ4#@=[61Sr$m5Z,#BZkh(Ea;\R`
%eJ99BNgZHt:`%WtQjQV-71[ClU/2YZ?=!f/###f6Pp%!oL%R\sTGEI`$N;m&Cao:(Q@]d/54'WODMgWK.%@#b:NK@/@S`cB@1@N$
%*A*GH$(%-R/B+07o3jY%YN&AF2B61'#jaAfDUr4ZdND%*D5`(^HPWaeF4uJ8+HY'>aj4)DMDu%_Iu/2A;4[i;-urU=^=dA<\A\%G
%2pL=HJi4XsemLSl[))Zki)[Xj.Bk,q%Q4dY=c00nY\=M:2+#^c/.?cgL6sCj'WRTMB[c8Kqn#o:J2J"3l@:c5fXIbddt/%,=OYYP
%>l"S<)XJ%=a2pm$!#@n$VAX&.8fm=%B,Vm[:lZ-TBtscnk:<<$"!M`DXr^$P7W?A7#0/AdF:#lB\4`Y`;%MK>P&&9bH3epfNlo/b
%:p=-YM[D+C/41:0&J9Dclep4AP!NQ7/Ib\''+o'F.]$8N=rLdl0m@5]/6si/Q5!_@84OoZ+?+p;TMKM..pWJudM>sL_O2U*((JV3
%Loi?3Q-KedU"%$VVhuq*KF+H]:_chGSG-,Y<,eQT0Gub4$(`sV'U+6,WPpW-/>5Z0?UleaTdl?b6=JKoTqo#fZV6IV+i68G^,.rO
%3H@NWi(*r9.PM?qXAk)o'^7/7<!!r.,J-l%(t*s(77ERM6Fo]&#=4H+H_^Y`MBQ7LV^2Y&1_P3$#h!B;[rDR:\d2OVj$sn<$7GVr
%=FWNR(&2IX`$D6@UIR[b.Jc.E4;q["E@iQjd>C^Hd*[YuM=*>mN\68k4U$k#Cb7+lRl-=i9&0hj1iODSk5()VNE#(&BJb1@35pg\
%0Q)PVRm9HpZ!Jbr35juL:h0ch`WS[G=7Dpb&IiSj!Z)<N"dG[sB[O?$eusTm(P]R;W+`Dl;j&m\7DjXbnl)2pJI#>IBG_G\p'OK8
%ob<'AKo(OGLrk:$&mZdu83ioiN]KXO&c](#6l0m).3,^6LFGDD"Rcs+2<.%+=rT#iU-@bUi/JClBS]DKCf$gW2n]^JckofUlO#C(
%\?HOiQ%>XfG6HB*>j-""Rc"GZ%A'iAWUp<eBc$hD5bZ$9LA7/M9^!0>Vb]%@6-i$U;#uAO_?:Ub;]-?30m8dj&qbLH20heZTqT1$
%'i/GL"qnP2[2fuC<!m-+JjKQ'=6.=gIiRZH/p0Qq:oGA'?+Va,Zn`3Q'G)1I\&a71n_O9I"i^ig1k=R0aK2%#",[bW$=GRO/AU<K
%(j+aK0?&N4/MGk="c]alhQK11UDRW\7tMN$=HT7RG><De#TE>OKWC4m&"Fi@0[N'MV"P*%1uNIa6!$@'7S&j13sbJYA9@CfAZu%9
%J_l(Ih"q%Dqu>"Am[sL?qAK$\KF!7/?f#%;h$/2W`qnm2e"81@B\tTCjhhVCI#3>'oX?3WpTIn:?Q]7<qYKPnq.u0Wrm32[qsX]o
%q!R;U5Iec6:*H=Ui]l0ns4_3O0>c_,`IIoK=ZgIAqX0g`5Bu6&^o&dZs/pkb;l6X#-D%@Q%9:t>SU>f0O["<>U\_"h$aKq$75GL?
%jlcrrOs$Vb6]<N<pb[HUF9D<3h>Dp?Zn+MM4,q3HpOH>s(hk'L8:<l20.%9.rG4k-#A`[R3Ydl>:t?q=P:7t?%dgiK&%+PBfWB)T
%Cp?0Sp@7=q"*g^nrlL@fkXt)I*lO+=.)eQ3$G]SZc`fQ)9;c"j3L-cJM*%%HIklSi,(nNZ/C?3=M22W_:aBKY$[l^iSrZ9@#k``3
%)(^\&R+T>t*Fru]Ttr\MkCa?![*WS<nr;<KmbG\^[W0O&@K;O,.doe-"5K0g*JedD(PSah.HODc#QUugL]In5"2D`IO#0R(2LZeb
%+V$Y#;?[XQWQ7K:m2u]u4)WhAbUUOV`0FJa'3sf"9(oN?BZ)"_1;Q.i&%ql6_cri/6P?&P!WNHP:L-uU5bpnH.Sb\(K3T(^q0O:`
%\oM<LH%^]#kBY_I^!kMLEcmVYK3A+?oL0N,XV;_pFtsIfJn^,1RdiFTE,\:D@kcW9dSo(nBO-m3UWcA!_e4G#kAc,(E%W,+Kd_X6
%IOSSAAdG[l9dSf"&4=g$B$Zh#>*=?FERRjs"/ee'!=kQrU;q"[B]H%tI\VH:6J^U2JeKbMZ5cY:Hg)L(Q7rnh$]Q$Mkf9\?*_??<
%`MXb"D.k1@VT$P0S.&Y[m'aup5Z:Q5<C+K8FGT93U%=EeMR8Eh]gTnGX_&U_aGR?m&GdLI@cKE@_5-&4#*8qjK^PqgS$5P$Q"VYc
%A"^gH'9hO1f$9D\<MW-=)M9R/<9P048nT+h8KJ*&+l-3*DqR+YES)dKWl&`FNk@Rf4EdalCUM%tB4?rt/9pTk9rD@7-lZS;j[@Ep
%jhX#Nm+0pQZ4YZ*]^PKXIQDPm'S+.rcKfY(INNgr%HrqP6I3[B,.E-A:1*7`Ig#o<n4,2,k=Xs@b([,qmT:#T"^4\-_fUHdLjmf!
%RhP$0Z]"n1.!$2X/)l]LklE!*)[Q=W9@J6dY/hF[`.GV/aU26H6<opIhkiI4$.%%bcohXeI&(iFOeC<_q?d'4DAsW@_8rY=/9AW5
%'C#U?J;n%u)7J2M,,_U;iB`K;bfZF>$=r-!FGZ.n0r0PA&;.M,h6qf)cZV8n#k$#\T;:Y7XUq75C`M1hm++Z=aY!uLF5*%-,>Wjo
%V[O/i<OND]0MH:FQAK-#Q+"(m>NXKJm$NK/SFjBJ[#n/*/)_nX;u$RY2>7?7B5^0N`S#06&nr>c4=1I'<5oN8Z`T1Z%ka$Y%KDYe
%+'bUt#SJ3S&gU)r+i2Zi":s0t7MlFY_(+bf\cTVT/k9b`7;b$1GiK@\LSZNPaIduYG8BLUFJs"+Mj5LtTf"ClK!DBIhF<<rjH_,I
%0mL:A)o(obgrCaqnX$+64B(PfiV&u9?kVh[l'?cf^6i]uh)Aa1<5)J&lC8ZfJ^ILd"SO!dTSSWI\`pt)4:fh0()74QSabn6[0is.
%70`-p*r'K-EYFlC+cW8Rh^7ClEFfX?rN0)G0j#!0H:E,"[^3gK)!=uh*a61-gc^kunF3!EiAIlX+^ZUVSL^6j)1rD0_%'F&K*9:H
%V&Qs/Y)ko)JH&pDm)7n.,!LfNM<+>q=bblb4\82'<[<J"l'5\:kG=#:][d,%03uq$XiS-4[3VKM,+%5/`C-79R]LWtK*rm)Unml.
%AX.ZQrXC4ZbFA"Q'ks2']nNK)Q!'(7BN=R1"ZUp#X"!tT<N!$.Yqd+?!`l/Q0-W`uX'UWf7?4H5bPeE^o.uGRo#<DS%-rs,,O-7r
%5Q*jJN,Bgq5>2FG_dPl4@L?7oUE!c\Q3g"qHE:*q^T&!R157g,Z`7r:$I,lCcV\RQNGgctm?*TFL9C^i:F7J*T%DfNW:XbT/l<0L
%ctQ_H#MB<IDH8"mU)18B?5k:fSqnPQ]$0un6u3Bo[*2Rh(kCH:Q5d.[:dFm$np"a/hf.V@4!9.@.P^$1*MA9X&$7]V&!>CHY6lYA
%`!LOg!"))?5_("'jr=T>JZ^b(\lk08Qn406jF\""$Zcl&*W7[HlD4_Y&k[_6-dO9:ASJQVm1"muQ!k(O4)q9B^_B8L>dOS$L!)kP
%I$0J9gp\AFqdo0RCT`=3S7R/$2M+kE?_b>D.I`L0JH\5XF=Ue#fiDhO2='#>`uZk+NO#Z`*^%X"q\E3BU%HJmh.1'FR@Fa,0`.fW
%!C(61ke\IA,6aKoF!CX?e5fQnKJO8G"rK^9!R6N+&&N-'X,@/`&Vu78@t@'/4CeVpZr+HdiJ^<KWH2[1S`TZm4,fkD2>]'HWHqEm
%[q&?k[RiBE">kQ%+a$Q58@0QpD1)\3^ns*U6$-:#-=C/MW\&!,As'+e4;^d^3em54;:Q1B-s7pPU#Y3u7i#7N'U<rrZ6T747B/qC
%*qXH\@Z#_T)jMG3Y^TTPDHn4H=CnElg_g>-h>0FF_s0'%9QhgD4V4U6ol+gf!>C*WVQQCj2\7o$@;fpd?\%?!Cs7XiI18,T3X$5!
%LhO)u(d."$YOKJb`)6krmA`o)cT`7aZR@RE[YoqcSKtLHdS!T*G6=Dn(!&aA"g/-s%YZ"g[3:L(o=Uq;'fh5uo.pM-e0kD2Ma6LS
%(T<9I16DYe*hgk,jsj%fe#><P'F*B9g\d"i4;U/5OV6mBlUm<]6l>OflLYh^C:f/PFX<2>?SJ-.s%.k*l9Z43Z<Kb72+,]H`CTKS
%'H'@kU-0<$X_TFL(#D=Y5[dlN[oBA0=%uZ%&jku%)P6h$YF4/.fR4*\&FX9plqPZ7;"8$fWcUs*1/XHs.$d?)gk3UWajmN>Ick#%
%^fp%l+$Z]jQFa7BC&_<&Q2Am.%6bnhKZ*>&Kj?aqdZ8cEJf*Q:S=UrLY(WDA.j-aJn.^Bo@q<0M\;a$ipI,;=_Q_\Fo8.p1<)YST
%guM=&3h&/b^Ga0"7[6%HaKI.^k[]A54P\;iIOX4&"Z7l#bI8AQ=adNbTMUiV(;)%Yc62"7@T&+n'^$+U96'f]M?f;jelU@#krC*@
%dNTV!2iLId%Hr3`1LJ7Ss)t5\[V5lM!#%(fiL@f[JI.09K`!_hG,QUUbmo;Fk_U-YoEuq7&CK+TNf3?hK^<r"O`UrsQ;-[MgMGn$
%`X.O;(ZV7N"@=^RqfEq\4saN8N9M\R"sW/]N3EU0Q&*BH2fu.Y$+WE+c;%36>/JF+oE]&lpeQU(ToD`9ILX6:k/U/Vn&Cra=]@cV
%Ge[]pWL0t)jQ.\b"/2V^XK9F\^dPOeo79e^X)c9/ouo&oI%?^.6kWcI_g!WLpZ2T<'\q`OU'D=@&nX@3DVSRn,X`Y/.X3>pZW_Yg
%#pDk3+rs-WPrKdO?TgLG9bDdJ9'AI<Ia"D>MC9-Y,;XU2+V;+$'mm57]+C%h6jf8/"Gk<&;[C+fY@%=PJh#n!a;?JOT#b>n\2"Ft
%IuI[9bV'Rdo1J8@.*'<Y'T!AH9>o88/-R89!l)cHB4dIKhLWTjNEM.o0ErO=>dbbe3&*h[e]d$_c5,e(5d^C3@?CO6)Mmi.U=$jZ
%FB)Ao.Y'[\9g"PBE,>_m-APL+:7j["c<Q1LNT0XuQRfOV8n(`[lDIE9GM6D8!+le%Z<_\e$\?Uc6!tquD?42^5<rhU&=,!BiXG6U
%'7aDUE1<pNk8,/5^WCE$4oejq-ruEBZYs+1/#?nE#J(I8o[OW/rTd->d2oso^a^K?X#/*IoWF86AD!la+(1sJh^VWEdJ$:%B9b--
%&LhI>"+0le]:@U(%'^K4<n4sYgQaLP_m:7/;nFso5/KD)GfNK7=ZD'^OVe2&7@7a>g%DJL6.eb;5;tJ9H(oQSbcHk6*+%.YTF/LK
%3kWgbQ1oU+ZNRbea9QY\l?NY)kJeoX+jkKIZ)qrS/Qpgh*CA,W*K9FB3!hUX#r$)Hr>fSd=$lX$1_M5jOboCrXXKB&U+8R;U+HC/
%YRu]A4XRH\&"Yb.G;kJS$]pJn[BY-XpC5ME'KWK\+S$h/\8J\8+u*-_U!&MD2Hq>/.r@:o/R_+#dl='*5`oe%3gbq$ja0DT,,Gnb
%c`<!BFA:2L^m@S#eo\#."T"MBn=?u6iJ"q*.cT.8(Xc+[7Mm1kJ,h(il@<hu-$3"*&TC2BJ&!\3@oXp\M27G14'?q5fJ/;_&Cl'3
%jkG<A&_n?ig8%+_ROjN$&V!!k'?b!U%/m(jcUJsJQ]lNSS`@^R-HALWU`a.9^A$tRS.T`["#g_VP>$C@8Sq:sI#/Mg'Wd[4f8BoH
%@YTDLJLJHZ<K+mK]`D5*=S8eFGk&D&L^=<nZ"3XL*g.,0YQIkB=F10qNKSV.gCud1MV\?%G0kJ0J=g>J'!fh'+&R-FneVKf=ptcD
%fJQfX!$=)m:o%[D[<EbIA0QNIWR)5tM!kJG=nlj>9dKr@ZH3",l=9;8Z[3[t6)uj9*3kVSQ5,4+H>*(Y]-(P`cqBZ\LgH-@To48l
%OLR\H(Zi`uOTm"AR.BA.-0s1`Jt)u;65<e)LE&^aYo0)se?+uFojSpE]!]i+Ts0*_%Ne7d<[NYP2c3F/*J+"9gRPgNY<p(:TgTU8
%(`4+f0EG.?]W,AP1j55g,*4L@=!<bNOGGV[*c"XM)UKck'#=Z52\pTT"O-?q[IcQ3eDh&Y%;<t=T10n4*'B,o-&H:`8&D<<6[KB&
%%>9P4pHJ[HOKj2).l2#n&ZJHn@8DD[RO2M>WoZot#!e+TH<jZJXt"C$.)'ME#Iu70ECTWiU(2fDdO,\gmOX3:Lr:E.H2!0s4_/8s
%1/G&$o)u:Tau"C&'D[cu"$DtCp-^qd;#SV\U2uQ'Ji)F12q=1lWrl@)q>)DsD[:Y6N$7`%#GMf><S&A?dI9f1V:$LlfV0qCHOQKl
%!*he,,"[>IG4I!O7cYCCPQ2>?,*?>3bu#Es.R_T4_+-CFJMEsX-W7H'=A;n<_%Ka8&"X:M"R@F\Nj23X@@LuU<_P/K%gG+(LWo'8
%7\3UILkC^C2Mk??&tXa3Ahe77*?4C^G]C.2@&:-,H@``Mgb!:mO<^2!]2qgqWpL"j^s6Y[lQ<gkE[D;)oPFC345Q`38IP`r14#0>
%[>/3kUohQY/6AMfU8tS_M,beGf[ClSgUj/7.dMTsA1Zni)44OMiG#'E2b[!rb)K?s?Y#0(IKSDa^kN"(X&TA24U.H[5sH_sjAF.,
%@(IF*DG30&\l/i]U/VOF3``gW3hQqeqRRhH](.>OVDup)\Z*'DqiTbJ/@R#_%'nF_H$50;$'7qbM,=\@'X%SF`68j+7[:TA/hS:W
%IqBlhAVnY'6juZ<VH?'A+@sNi@=,$H/4RiW_/D;m-mOX\0a+5Y67euu"I:N9ciGma2t6*4?3i&WM'44hXNKe[N!:USHBsA#SJ,UJ
%SId#YdNgS_p)^Ma%61:G!Se>Y)RK!06j[^hj*M2JJ]\b/TiVJ\T8X<h+Lj0]aOH04O<U?E:1fBpP)oY]jk;Y)gbBE4)OWJ[d!IH)
%a:jht#\!d`S43)ACor:e1e@g?j?>tr:p5\S_^D07V3#pJU19eq4AhhR#1e)pd]fiA5RsfRKq-**'IDrakYVG0!db6HIV]Q1brPM&
%h,I'JM/6&roDG@'1mYNM>e%r1@(q_O^7WQ`Cs#/*"H)J'^oFiK5=&DR$"X(2Yu[FrE6gA@q*]>+j=m[9p)lZ+?.ObM6+'dC%KX*q
%$C_u62$4=oBcM!:`a/edOM,ao+eO-:ot`>R121E>WT_G)(II,"'M/QK-flZ"b1B3c%dnuCle%Mge;+U=$WU>!@T"nSm\c_@(fe</
%[6_bs4]g1tjc7:VN$W.[H4=H1\=>DgiE3$SbcuX9r&%UqUKYm28Ko('91LA4)m:_3PXFR5"2L9]M&TY@=>EGf.LV&jlq6bH=,'G8
%<M(E_]..,b5W`?u.n\*bd^[<u(`(s6>$Esqatho#WajU=*H3h,_IB/`&OR1F)=7phXd(i<p?69WZfNIS/.mQfXVqOuE'?X\BHk;2
%d2lJ89^b;0dVGE[riclpH!d:n+==Bl#q&'7"fMiip_J`VZ2m*M-P%::$#<OVF4:2HMT);Y*31"C8V$L):pZ9"+F:@8MCPDM6@6/s
%q8-/PC0K6oNJ5&6]$=',W>)gfd\$i?\"JX*csA>&VQ)[F'\<s[7(eb@W]S[l#YE(&1qF:9+4t7ue:a:fP'+B2VH666LfkS/KPac.
%+6,.^1<$EHUt/RBV.d4@a`?_sY;L(e>9LOA&Q/D%a.`eN!UOimSMQQJ'=8F`i+)r+??I.DZ0E>t-`WsWB3M*1:0L0gG@G$2dBgjH
%5ufrnZ76(.8e3+Q"ZaBf&BQL,J#r8BcrlKblbmKf!7]5d@)-M+aM'ER,=/#:cji=OBFjm<1=<$;mYZ6SC@"9G-EJ=pFQ1tF=AqZF
%`2]!]+k3+1(b"!(]eEIhAgI<]Ldi(Eajo52K`O5fX@;P#P?\_4'IWG#9IAX13&"A(0VttK*H&=o'GC_S;&3P!g'YWSP0."/Srsae
%A9DE[m-[V;hW%MQK.SGhG.J4"BYHmaN&^=CEh".4YsH"0_TgH!UHM!Tl%rjh_/<E"NLDn6HIuaRfo@'o<R!%FXS4hbc8&G6&EfNO
%O$QuL?\dunh^(u2r:<tN\AAidQ1>[R#$26c/-,\nRIZNu<N9YIJqV!<`0Cn2Lger3DAt:&>A9V[8Q5tPcVmLrLQ?(*1H@5%Et=pZ
%BNBRj03B:FEDkVC-L(;VWYO_/`9@ROd]RQLie8$`c4_ab#q%BJWN#WR2/0NINPjORbm10nH5@,lbK?Q#880Mfc4+=Eeb-=>^/2+m
%$cY5I%oG)`UA?;_-+'[V/0kP,@8Ro5E5os9R!YT8:$usZQse60`"L"d3Yf5^$G]W@39Q7sPm9gPBN1RtqR'tR0eH_L.1ooZ_sp)0
%U,\&nJ\%j['D3k:<@7"R#L.P`r?;Eq)UQd#R>?._gbQ2s%<P[J#9S5R^%tu[:aji$AeUK.8d[[=5]mkt&(<O6KcZC&p/K(V#4&-Y
%FEKJSN\A[&7i8SfZQi9VO'^S^na:9s2r#`(<dl51h*ZN#K8``A4=meXOQ8_Z$)]=G7(L2Q^^:>:f-5#n03Z^"k=!i51m8#M-;*_M
%>Cee"'-D.J`o3D#ARJ_Jg-qdkXAS/le*+67\&/>?i'SK;i<3<j`--G=9[XncINCEDm%pri+eq&,HE\D-[$fS<D1!5AO>R&%Fk;(C
%ZicV$E>D,l#\dNK:#BtTb$L;`!=_6V#*g>$;'GWH'o+&Zbqj&M5=p01P=!57?[=b[kj+<YQ6,:R>6PbkZK0b>X8_uo-'8cA^9n1H
%)t7AA3`UKfOJbMG,\6aH&g&E<!Es4fOQeN>8a:J=K\!+"=gIrWjm<U6F9!$6NEL0#S5kgVJAZ^?EQF<i;CH72DZQIP%,o`-9RVQ`
%"dK2Y3q*U*P6ASZ!B??G5O$XQ%VpOdSQsTX=b,6JC_enIgc6mEMieAKlI1=g26X"'^2(-4g*`qpcQ1pNo&6n<G:+9T)o7#cPXb`0
%j&f7<?Zco3-,eQ"EV^9(rgHu^4ItLN<N<>MGH6gsI-`"(WdH/1MC,omWifI7@j\0i<)&VUaF2?ap+#=uR!YMFRO"[Db,,Bi^E`i?
%9emO8;1b2VMPmKKM6?0_M2uDKmNuC]'@@aZgI$]tXT[TL/((b3$$QN&;(F,GeqDK0\p_g31R<8i.'M_9\gW_bL6`U'\Upquf<gb[
%_XoBV`Y.(q8D9NdC>=nD5`I(VRULX.lf:M+'Kq4>bq_R>]j#i(cN\PJ@'TEE\_fn],+Z8adNi`;MADK0$"a\\]oJa\5-NY9#Y%D(
%W7O4Pgc3jedG..7fRI0@GH#V-`2@'j>+Qt20G?=*(\;CkasKS.9*#hsluA)X6a[@nAMJD;Y4l=gS)hecmidi&9*%GI,VuF5cGSgt
%PB;;//c_X0\Xj.BP=8?5+?-+>!Sq>of.Fr:d+kV(*9.J.d;"7;MY:dRm0G\A&<1j8c,UNJ+LGZf$M9nKH4N24.L/!_fg'A2U+ukV
%7Z2g7l\Z2'jJpihki#>oGu+f+`Al5NPIY(()^;^R'%F3$Kc$StiN[-Z%b/.(U!-1'4%<R+1kM/2P6QF1!UpBZ+fUc/eOH%XGrn\^
%CB,=[qb`.no.o5RpY7!e*6jqc142ANL#'!E8V=G"kgg>R%F<'-!7nhmpJ<mo'(p#4YX>(A_&^g^&I02.U<lM%*J!pB0\'4$@%Ae<
%r"BZRQRs);*hi&-a,/hlE2#P<cnkWG^n-_f7[XaC<PHZ;m^`M,RKB4&p`:2X'"J;hO\EtKR1A(@YO@[O>'`<8/=8NYjKKXSbE=6O
%Hc:VJ*0os@mQp]KHfdaUpOj]c4n)UkcTG\:E6[s6GtG#t[Ioc*WSn9*90*f'P<a4rOK^:Vb7(OlO>L_jH3eOiYiOmj$E4;O6AD-A
%#s-*6Np=U&!-&lq$kh,'WrfQ%.RXlOrTNK3jF,-ipYm^JqW)lU_'Z6B+Lf[tHjB:SKL__(E%:Kt09Y6<>P+K\O!D9M$UkiY!b[LW
%Z5mcgik@6kcIO/R%@'7pN%&p6FgOSNg!e`Idh-(E?AU]J;*d:`Qt0"O,t?mZU*^Ool6sYEC"AfM:f:eK%m9q_C35c[g',mX0KMjp
%O\\Q#_7DDc]__LG?SoJf*9Cci$_or9:dHX*9B1'X4X=Y!+Lr6S5p&*qLsB_MZD72qhF!G23$]lFD^_'"%LSP*#V_#S1,'kr:@+@V
%kJd3>"bm[d0]911XZ/K6/ninFU\%/&p4Rf%Z6Wo?'Qc;]@HaEYf>Vgk85[=4B^G_>Boi`qZ+?*4d&i0C;LsLgq,D7V%n_Ir_MK0B
%$>Y:HZ4+PD'%&3Z"I<uh*jRgp0EHqIf)_,PEFL"$'b`*Ah`d9e:ub-p1hWV"\fQ0lQ!T?hX.84=TO<L0gra>E:hG>e6r,H:J"n#h
%p5XcA]iCs9a;4FC!AQ(N5`q:i"JF=k"],;W?IQ;mjUn:mEdbQR'BiOGLq_/jrejoq<ZVQee7-7tW:E'iPsH-_Pmg:JK0WLd-V&K0
%J>gVNgb4_2MT7*7Hg']XT%!=qa20ueP8m*BpnEm!=Kt,H!!/&LTS0,gbuj$sJ3ah>0TXc9'cr'Vr4Z!].o3E^)KlIIg"[4E0F]qC
%'M+;@8jJ]GMZ2lIe"cXKje4tfMGp2bdiV(Jc:J%/5g)P.6,b%q#hqi<.I%d#e/3nD+MG?L!.ua:3L0tEjU0&I$FAMT(k?cA>)UBY
%A6aA2@8hJCqMcK.!Yq@BOc%U(TEpSnaUYf[6p#R4A/Q'qLfoB3%_DpCQ(*Ga21If($u]4$?rYr#C5RsB]\!3GV0<N/Ba&>ni\7d/
%2':4=U34=&>QP[/2`E!^]f`.f'/=jEj2S)_#.9Fi_3amV5QJ*gO,R7r/X9[35B^GQn1"6k:234fMO'+-GH*W[#n'ai3"2>B<6,^0
%jsf[sl.&fL\L<[`MT[9MLt8S5=Odk?GCsG]ei6bd;b05Km%G,"YYK^NK$bB2j5=E+13c*T!2;lcG`#l0+p\RnepNOhNMr/$,"*IT
%+;uV08!k8l`/olW2tTAQkVT<dOn];PY7D)seqf,^AnZb-.N[9:6&1iogF7kSmq8mK#)Z,%VB,LM^l0g*?LUB&=/552$r"l6%k2uh
%C(LLl3RA0I3?.5\=*2;*-jaL=Kd0\IpOIBDP.WKe.N:+CODG1q)-^]mj#Da)Ji(pdS;01O.eKfd(>"M%.d[J$m>[B=1["m3[rnon
%EHHQ/K3lDKHIu&&IU(ddA/.JK$-kAciPMTT.MlSZ'_T^c5"(8Xre#I:4[@f!9M6#;e$aYV3!^;d#K"JH'Q)$[#DcFLK=[p?_FIHG
%okhO0?I=EgM_(5^V$XdSapb+s<#$(b$Yl3,\Ef[Y$NWA(]IVL]WLK-Y,E^&%L1=Hk7D`f8!<q1R"LI04Lc-W3!42i7,M']gDC$4I
%qC%=,i#kUa!_*F)T)W<Ud"A2b)!8OLmihjGLaNP8-ldD^YXI86TLY!U:?)(Hi0(l=9=B7pe0Nq.Tq)M56XlXE<tc4&[![6\Wod:E
%d;+92j'uYUgknWND1m2;iIB[b#]RRS65(V?"Z.\V&YCNC=gMWkURd;]>R=c(,bhoT.MqC^q12uG6kn6E+uoRNBr_YEQ8j&Y1m'%U
%6uOB]&kregK@:g"lnnDn@RQhV,=-F[Eg^A_UahI=%>[UIIFoKm7%R\]f22:03*!5rDrScG(<cn1rFehj]l:d.F:8]pL+=c]#osWr
%CXsIpCJ4+^Egm`IV,Q?unsoAh<%("721LLI-LcH27J;%fTdkGSbTRDS4I)7+gt%T%@3V!YXI>NkJcRLf9rPe@T#-m.Q%D%3HB15O
%?j7bIf[q[ZJQ$nlU1ZrB((f:i0+H)/<MOQ)F<E&:,)_Be(\467-"An;9>Rnr3E#CBeO91'/hue1W'lnAA3CZR@Sm23\sYu,Ys1Ya
%DZl4T&e.(p>S*%'KV/[h6>/<Z8A%u_/2'82;V;BcN+5_gW_GHgJdt`e@\]bh>pcZK.G9us9,o)'GmTGTNWo&9U]a;]+I"9`h\Q\p
%3BT.\pC]f(S:$m3KLkl849jqkA!e[)Th9-dB72JLjkuoZ\W0MD=X-GaU"1OP."SC\%F[k4'-ba[Ls01'?q*!W\?[A=5cuWbU@sHJ
%k(m^D0]pZZ66r03XdIKeoPB40%rd=3'EsFu+/t>9.OpQH[Hf85(6(\,;$AJU]Y(b9USMmU8Y8dT"f'"F-3?.lF\S&70^&&TQMc!%
%)iYfF'F0BK)N!_mNWJFA7bdW=.8i7h!G4.kS:eheisSY`+RqmWC*;^WMNdOD`]_7C<96Og;]R'-8uX,8o&kE:Rf11uKn)2()O8Pm
%8H_ae(e<a3Q;C7;eGTF>]]:h@kWBQ^dQ@k"O^@Rre*':/I_]p=<4u5(a!d!RilmkL[FPo=5pc4)A[oC'FEJ-eBIr-O(DWjfibr6`
%8M+3_2N8lGgk2A\-/)tO-3m&lC[@@>SA7,350(U'<="+)]#p`kCG3LQ&kNk_Ht\Au>?P3-qd&DfX]Z3bJ1*n#/@\59'RtBLD.-72
%O6oYE`<,7sj6UaM7kd;Z1FB5=%jD#9c3t+]ZCs_IB.Om"5_*^]@160]R[\u5-7c1`.+."4]%2Z>=3bnPTiQ;sGjQ>Z@%Ga4R*qU5
%?Ss_dOh.];lh]Ub,chJVS]D^:`2MZH-iZMA^8Sm>d0u<o)s)rK;B2(b1h`?\Y(.q74dMU6`.$lL*p0\FZj]S#&UUFLW+3SL5on?:
%Wuhip'$/`0[2lrr+Z\db5Xf*;1nbDn9',[`)##P]:tYl;JB2d*,blGn`^*Um8qmo)kR$s!_hO>8CdlDJK<E3kESY(M$Mc`>W6,am
%LoXnu_8>DEocPW]E28&]5Sn9tdk&"K:MjMd"q7k9YM<Mb:6aa.lU-7%5a4f&\2-QI^I<9s_3kT$,2"P;:,YMQ$BJTe:)oW75,W*h
%BREQP2UgucNZ'1kYIO$^?7+,M&]LUUH`/P9*u#j-BG/)KcI\Y5%OUfnbZ4gWJ?&Hr[pH0-?=tVY:GC%;(l"b.$m*=[KVoFC&paV\
%nFk)*PTHJ,XK7#uKB'f5;hE]8lI$5S%&iK,`$(6WCkWNUd.n8!NAc"V*h4OFn1SL_d&h=$:D&mX%!jC5lK?kLSck"?c44<q#Z!g_
%/eR2:j^ZW>TF/6R.d\]rN)*SB-)qMXcs]Z\Wl?YT(\aH0IM*e1?4#H^oBdD,O5lT*R(<Gt)HO/*:eXs2?du\(N$<J!%O8oXWqA*:
%-uPd2LpBR4r0>V:B3`=Hik4A-,:*T>(73"#KQa?r%@-T59Lk@uL6>MEO;-re0q9Xo<Mo7<:\Jua(P6b6gj(M[2'`T\J!7dJo+:DG
%"l<"MLYro]3(/T8oj2Ha:-Ur`!=d?$raI.&&U,KI:L5JU6Wc<VP_e>snluq:Lf"9>Cr]+CjIrImI$LAXm%dfZcjkp;V1^#+)r>8%
%7pi*4<mRuM3j)7fHAFp0igY:G)cW#a6uNV8c@F=hcVr%BW"I/FLdua(BDQ5=L!!&IYoY6l_I$1G0,5.Ml6-m-Pe9W,.<tJg!!S4K
%KEk-h=/1QUU#Rn%a)EfNJ1BOgg7b]2?%`4e11Xi.r"cQ"Ds-[@2+hh=n*rMC+A+SeKl.ltU(9T=RhaHuom9]tbnGq>NXQK"VGZn]
%IU/7Gcr<amQiK8`Z(VMjoD0=#[J,o:jtWa,=*lEGa<JE)#gLE276UAj1F(:Y#pbf>M.r&NcdDhQP>hl>>TC'ETjS`_=D\mZ+1>%Q
%Bco:5f2AgcWfgVO8f1lUDc/2cS&-,dW(amp,1)nUOO:5[CEA/181:!Q?keMYBYN^,fZ)Hb>)3pd#[M:%B!X\C=Y<af0sPB%j<X`2
%*kR&HNCF=]CB]OZJ;m7e0r-<ApJQQ4dNUEj7`3'DB(`6!U!M"ugqP4\OMY?t[ZqZ8*2`%@@(l#6gM-X%gpEZbJo"TL)[)GTOX*8Q
%"iG:r$mu,sA'pBJ(HWJ/+A+VE-UqR1["_6u!ts:9D]]MSCf(dH/=H$qc"dK>kTm!9o)7UJ&B*EjG=GA^NIm"JYs*I=4*5o;Pmu@B
%3?<Z5oa82k5bLa-&8)Pi7TeX]JO%?'9XL8Kb"7s+GUh<YbV[L(6:S&L0hCFL\h#`Klstcd*IH?L2[1iF8>/YuP>a"4kDKt"iKr1Q
%B7a=*JqX#2[m;XP'c+&<\'?h<Z2q6uh(T-WJ=E_RrKqgW/o.gjT5NnkDcg"M6*=@0-$3!]!N</nM/H`3S:D-LYaSFjR?*UWf8-B.
%<;aH[V$M\6%98SOkfX#`qmDRZFXa=I1/>oUd&l:>8]=4CE`J#g"ZSI\LgsTIJ/=%6DH3;SriCM-\:TkachL8HJmN;o;VAYRU01'l
%q/E3;9T^a0kZW+>)Sqjp*VML:E7hQQS.'F(XccFa#NXc5_0SX*]hWN8%kR=qP&'IWQ$tc[."i?DDuiGQ.Y>BY@Q>BJ=?<%CfF]6Q
%,Be-s.ZVLYG12rrDSPH1@Mrg"#,H?Cd?7sZ6P%-bNZYk<&B/")@146h5)YV5Jh*DX"G=:JS4kT7W2]8>>[*YQ6_M+mEA#Wp`'ac0
%NGe(C(k+OWWL9-+HR8<!V,UA6>lD>Sbi!/=mmT/o[2WOSn.u*2a]^@E5p3QrrA@t]n_qnu26Vl(j>r$rVQilc,7LI,V@s.28$@0*
%=umG`SBI5?NH2%@Fh8Da4`X:t`("90ACjj/V!=-q?T4:j-q0*FkXec>I$&\0-15P_$j!ZUPS\DPV'#XCD\Up5:tF'[d)?/m.,Tu>
%@`3dk@3`!Rb>4i0P*=Mk+K<Q?0<dVEg5DiJe\t$#0>@=e[@dKkg#(!%^Ka!MEdRiO`ReaHGK\`VVES/^E,e%;J+V(Qla*YRZNZL.
%9OEJJnV:`H)(:F#rVYUZp\8+%YR?*`I.o/hp7L`Ms)#-8(LcjQikPN6/=s6[IJ6I*@ueAVn6]8q2[&s!oH*.N(lN7m\'s)e:+(It
%hlbpr^M<ec9W<4/_'W`&dut3)OD\^5N=W,^hM1_kE?99D9O\k>rP(G[*C>^'/Nc;r<aRo`FHpYB?-8-Og-j@"K.Wks\[6k?f=*+<
%<(RpLJ05,R%lNa:><j."*=O%i<s(i&9SNjJ\D$6%J9"g4.+kpW(V8`]2NWYh5CY&]M;Q.'+4c1a)9W[S`6tJE)<M-$s"k572u\cR
%"9oS\%^Wk1$-/H=A"U!Z\\2;UJ#LZ$GDF5LroL25"c,:-b;b(_V!0it:20Za^7/o+2dFOMIP^N'%6(WBhqu]Fh]]IepS^n@hWh3F
%3i%io3_4C>D_hR^D'rQ9Lf\5tQ/9:K?/4f'Z.r'BVMk'Z10qoIah%%k5rOgD[,,Yk`<Q1S+FZ7.(j^o5&ET3</4^N]qWS>-\#PHe
%DN2)f-O[::PmugRS\LeZoPTdQKYUN>"G'[m5X/PJ:JN.[]Z+q!4))8s)^hq2,WnA)#8[?u@H6'Eli`P`<Y=Og+`<)sLBu2Keb74A
%fBD#9--8h2(T`DnP`@)8%d41Mj6La/L"nr6IP1X`E_h,H%+\CXX#THd-fIj0A>\Z,AZs!bINP2i1/_6HFohAG6BDg%A4$[/SUS.:
%LCH,lNtX"HV8J$WU%e$37N]A=GOo%pR.Y1`"TVZU%Fa]d3:[.+3_jH@*RsAe^'rc[dq.:BbT"%QpG$JI$L;37HL4tHXj,G)K`&+G
%3r4dmqjjfm&&S10?G1NDG0>:63k4@/`EO(^qr"s2Vj#rH#V58e/j=VBm+3"%:0GUQ*j^D:9ps6#Pm5!d\BW`[10Mh)J6+f@#YDq9
%EqJ9Wie:+tI.[.%n5qV#_R(EEq1!_ea_/),T3n,G?//\Wh>Y"\&"n=RkQ7a*gZ@J7-f<e:?<mN7puoh`cd'l*YJ.QX4+kNp0E)AS
%5D=UO"bKrYWUfA?0HGF+1W>A[:)_"[)EV3?TndhR_UlG<ZX13Ke>H[1>^tSDm&kcoUIS"u(NB;qLECp>')uPQrUJYBqmX=H>dge!
%r887e)(+prG@-khH1Pj/5>UJ;RQl53pun'FbNnlB7r<dc(Z4--/RRIQgJZk!XgU6>EH1g@G"M#Y(8(O'qQBi1rcRu$b9d/X,AYMq
%L'8S:rH*4.c`LM)07J.c\"t+Xr7J*15T9WIYG_!``O!/m1M4PlFu>\Wn,ITWIeVpcrq]b:k*)9AhE8.-GgQG8I<#!r`r%0cG;[Ri
%rr2PrbEjm-T%Z,!n)E#Z=[Afg9kM]8qfTmuIbjHACcdL6'RnFOhDEN+j,&!S\)6(M0!ETfDdEbHe/K2k45\;K4uVrU;u-FZeafoQ
%bPueDAj5C:Y-d*:jP65;G("l5ebS%S:WkalEGW:g3F1NiHZsIR^?pmuVY1AOrSumXf%_USG;VCj?>lFfmIJg+jW'CM)U;kOgW"&:
%2s*'6]?>]:M.mB.If7FXnYTPrDnBkM#8gY3l?$<:^Ng_V0:0.\G;luek0faeC-ph7gu"\Vs)rb_o#8TDS1U2;6T`%9-T>*[DdH`)
%c+>UsBbVuq^3K^NI(k!Bq"1N-mGW/IWn]e<EoEt>*EBXui/,cuc^HD7q;ol?X,!IobqPA%W%L#]D]Eo1UFpc?jc6q-;3sB0EXu9=
%$P,msRl-`=dH-g_o47[Go((NOB?tIEILpCt8+$Ck47afhYk9#_?r./Z\'N73WWTHmSpe?Nl%6f;AdHXko3KW,qoekR0@^(rc$qge
%J+`*dm/"itg$Q9(4QEq7S&5?#mC*;uC^pi#p<10WO1j^_2p\,2>2HsT2B;3lrsIq4OLP-#6t(o6428>=\c%S]?Yn=u-L]0^QZHtq
%ghp2+DFU#6X8CZ7BBRHVcd1`JB[Zh"&q8Fh?G0U8Is&NnhY^,tYTkgWN"afTI=HNcqj1YrhHV_;k=f[i,<MCQr:uo=>edj3H`Qu8
%NuY+8d?Lg-T/Wt$^Lf%>^NQP;g3M0"G83*_R`2nhJ_ufQnb(/Gp"ejp$eM$.h_;e+X*Vp/_a+VmDeU"IH3X(D1AGA&3/?PUfJa9o
%j&u.sS#eD`"uP&ad@)kHD$H*D*5Z%*P<\n(F7B&iLH//OO#q_ThLa_SrG-Y$HZAf>C3_bYVgM=Eid:<an&Y3Ep\!4Y<XnTo3$+q0
%r&0kt6]((&@X7jg&m"QGV4IDum:#G'HQC'[b3'W'ZZ/&"!Cch^@59`9DJh)!gb+rnRc+G)s$3Ga2eqf`\23::YiD,;iu)Re[qF#>
%mcRh4Bt12QI<KUU2TNpeJ@aE$#rS2,LP,-=cIn8f@,sD7H>d\.^::_dq-aKNhEs0]aN!qFNBIF,oq#'cp2quXk4NYUV&qrbm&WUb
%ID=Vpr%3\F^Ya%FbUtRD!Cssi^r6"N-YqW.\sXct*b]`sN8Wc,G!F;i0=(JiT;0(>bel5H15GGi*&p4"[eQ0Y[`hHAfPt67S3s^a
%!@/38l26"MYrWkB2.JCgmu@-ZL+DEI`S'qWo((Psjmmejc"R&#]:.V91Yag*5JQlPm.e!ar8Q8MbHpg%eaiS)MmJ`Tq;beO[I.Z%
%E">:aOn')rYupnN:4@T^K^m)C&ud_CCQ>q!Dq#2bg>T\Amhk2,QTX[=P(CAm*L#,or\eOFpAK0YagF6%]T3qrO2JO$1FD^rDuIE+
%[c]I,V4M%!?Hro^]A0):Z0h3+/WNZWBTApOg?iW)1Ut=V.K/fjE<^?Oge.HL:%J/CHH+>oK>LabYAr2jAi;L&e[4=pA,'jMZ4OFt
%eMM01W%6-FTP)S'mOisW[6<5cO'h&4[l7B0GTA]sfcciY!T)&Js)*!=LU50rc[MF)=dl"&GBQ&HUnF$cRaU<:p$uogo$$p_jnT]O
%F)iCXVE<<ZcE8h'B(=eD^TS53!+<6*A]E2<N'qskF#\Y?OXP8tF"$1/@jK2\fk4rgXF7kL&%ZH4*8%Q,/.0^?04If(+&XZ4SB2bn
%drXHP-o497",TI7Ff>!u(?IhET'$V5(1kd%Nj1"Q=Hn<UCNGG'feZps%07jf1DXO;8)3u#l64-@baH\K8CWD9M_]'$pAK.se6%t,
%LD5Y%B/56_leeP*jq)$;B'n\aE/e/kj^Ef)c&2!Om_n(8;]O(P][p$IEWcm[^[SSE5Q)QV@@k2C$dg-3?ZRcI8#2cJ"-u*[ilc7s
%13;MlDo:2TOg!#3Jg4Vao!K]L3s`RoQeOtiMJE_q>[,(B*kC!eX8T<6g/1t!:r:qKWu\b)+.B6i*hfJnn8IdMP0@$[hs6Fg-jS]#
%)SQ),b/\9S@gS1Ik]i(6B-s'9S.WP,PQ#/p%,]ET=45_CVT.*:(V_LS^V2i-p#us,*r#%Qh_)*M[_aX:)L0HEos<cOMsKba2^`$>
%0:-<qT?kC$(u"CmC(CT:k"U6n#YMF;ApXMMA*4iK,:^ruB(Z.d:gUg</<i(hl*hk1m,f'8m&/,[Ci',0MtXn]gX#9e5AbmP]UuQm
%h.\!MKD;`jU=$lYl1]*mFE\Cj40-a'_$';SS'E*1N;kS:'RQHL^6MP9WY]C3NS/OTI"$/0o&`qN?,*u.`i"855MIJ/30Dl7,SuhV
%m/(dl/SWuKBXBPt_MgKko-mDr&9]H_c^;VY:o;>Sr-lt#c6Mo?%c<AWP`5A99g$&$\9i5']USN2+4T'?G)sd3]ohaiI.9KbP)&7W
%Gg!c`QscRsVVff$Hh@@+VuLrG^k;N-QB2%&U]:)Ps#p4.O8e$24*:,p53PTU]9=;P"74701F:/<cZ`/:>C16@3Vn,a52W-]pT;E)
%)+)WfoB5kOQ7"WCm=i3EF2lcpZ)be9lgjW;k3"[!nab[p(O*!tUN6FnS2%q3&*ut^S]_nbSV^lABtZ=%@0S6s^O=tWg:>\$2W&T4
%\*kt%?ge6l.*\@2d6a^BNMD3oBH_^]HLHg%pLko.=#8O7Gjj$RFu5Dr'0YI++)[FglVF"7\GW_I>o,`\I/;=2c/nNae(`uj:N(-s
%Y.+88O7onc5jlk#AhGakD_pcT6ee0:o.jfNBE,QQ]"d!#CiI5lV<*`^1nS-J+lX2(NLe(dHqoR=.EagYH0cJ+HH6keU[_crN=W4!
%0$g$2Hi)YT#PRoAn]_%(bKHbUbVI,>Iq31*SFNc'B]$\T]`+%giT4`t3>u4aL6n[oj_/m!)IAGYQT)WX?tLS"$X7&drc0j.m'-b@
%1q^J\iFR5M`P[Q(fc(%A\#f'=Zj#]fV:7[gR#/:-Z5cS.]AuY@%5opG+Q*M`Yoe&>GHcoaF4b]@M>;^9qu8-0=J1NF=NY,DZMND/
%B,=e>mDm7eNu?[AESM'JA`"TMLOd>8Q<ME#J_^81j^?rb,6H?36=>+tI6F;X*RU3sF\Mfh3(;`=3.#i?o<Cj26d*WEJN@qtb24/#
%i8E);B,$5N2PX/!2VQ^/RPT_9n%`HD^[1jjfR*%/oDJEbjW3-2gZ>c0/G[Z\r)Yku5GAYW>B]aL.KfRV1Cplqp/+2(E#P2<k"fnZ
%TeD`',)<PaY$O40k"Ot$MeBB5d(%oWT'nn2pABpoIWmQ:7lJXPJ9,8r*K'@X-8A#Hs5dq7fF(Cr*UO[KUsg<r*MY^s43!dN*:4Si
%X6C\ZSNkg_NcpA0gR4fWj(QIm&3IlR7p!DdRh]r9d/D27DpQ_tc7ZlE\X4%K:7lmnH>*%7RF:mmNoo"h`9cM%=>8X)]itF.G5;1+
%Qe1DAoRN5#]:.Io'U\4`X0:6nr+T1]p"4LjPIeL(p?pr.I%*9@@Ng8Fs1#S/27H0CSR&342T:;7=dh.7LX,US5XVjflHXs8k&C)?
%37"Iim/]2m&Y!G1p?WcgB9n)@r:]8f%f=.U]:6p$U.9DdF6*%ah9Fr8Pr.[\9X'\'BDd#ofV%tMq"_u/mJ$@Am9MhbUYla_ABS5$
%T>!3V9fN\_mFrq4*=\idC`![5i+pncNWELemd>c@]0CjB[q2-Q;UF$c,Iln[?ZW+6YQMW-hB\C-RQJ>J2@nCR59i5PBSko_m=ci-
%Y1LRLg,\G=C[^aiQi"8LR\McbeE2eFgejQq]f%f:i&kaqq_<e[Xj'#En1aHY#.26uWcKt.G#[XblJ,7-40!?Pdl=@K7s47YW,qK;
%WH5DCF&_>r9:bs`S""%Tgn)c!^3d',4gGS`S!u?nLTSlc[%[^['V6Nl_sUGUAgYkH8/\pia-AXD@ifV9%M2]NLQd'Ebj4'bAF.;Q
%IG%#'W`/m=hd;tGs7ki182i3Jc7eU7rJt*Yh,eg8?I#fRF1Y_K]:%d5&*=qXSBmm6UVF[^431XugMgV^7a?Fq0LtA8LKs3]6>iAW
%/DbR&p$u^fIrKh\PFH?hk<2=.=T-1@%c#A`Au3%FEaeH-YN$he"BRglX81#CYk@DZfdnjqdX#!$RM!m;lMgMQg%f[V[&2*/$LI5M
%`pA#`#P0RmY9<bYJPOW%XJ+`eqe`3UG\F]F(?oJ9PI#aE>i!`s#AVFfbm0l4*FSHN0Ce;u$^;5ukBWEor&t@;9]2/-p4JUl*kK"*
%PRR7h13fj/_ZqD,bQ6XcRK)B8QT*O>=\@-=8+p&COMSYb'"Iq'UJQ%HMVb+)FHhX=q*;[U4+,CAd4mn3cY`Dp,rQ`sTVJdh4UO57
%DJM%G"uP&anX:V[r4("T5FFmkml>3:kaBZ2n+Rga4=*5[n0OK@pY>dMna,u/m`!^s<gePlH6")2&G"r%h:H9U>?/c)j1*,<mJ&[/
%LQJh1O5l`jm/,i<Q<ME#J_^81jnL_TrnD[R(?Au1_0m&Eh@K'7SGd]9UH$=.nGk:k*`c;2LC>k`XS$aMO@4!iml=dDmD+:0Y0L3p
%1B93@Jqr*7iI<caUm*ga(4Viq]qjU1goS2=[/SW?rTZ6`Ba;j.0V.BbfA3k5AeP\J3dR_9+7DE=DO5S2i%Zu.c&g'A*[Kdn6U8b<
%Io`G;9]rI+;a0P#DuTij9`14D3<3F.K+"r2$i+l4=TZ)Gi5GTS6)"B%FqDLEmEOK02*7`&nNk=Hj$q;7-9SY>FRTA)6Y"d+4^[(F
%p#:.Mp5aXViOcGbkNqV&==;p6L>r=_r.!mu+"+17bYA(_Isq=@6*cW.FN>NdKipP1A+mCl1#)@UZO`[r4kXOg#c]kGo)+R'Zg1]=
%k>Y@3___>DEVW,*a*nDf#9cUdWS=O#I5H@gg)UTIqs<nEW8[[*o6LhMHp8d?mqDoC=TmtbTDdT7Vgl7+VT"XY(4l,MbF@h$>;(de
%oSDa-Q9SVZO+6upK.gS(5PW9;J%b^Xjq=1jpNLg?f,oKU(8$$MJQ[Bpo7nFCJ,$k[G7Scm*%511^Ed.J]3jO+s(jpuDkm9DY\*FE
%ikPN6/=s6Z^AA-6fY6ZKNn-E)[DkXqd63MJ.j6D('Ig#a;R1_@XcVIbreu,m9cXM5[/W4]NtB9ch?d-9@oqJqkgc0CdF^nfAfu%O
%4?B:.Y"W:Mg=E6'@\]=E^WhdlTRAU"#CSX2qRh-h1A-niCcsq:"ob$H@JY1Q9doFL$+=f>-27O0]@nQ/VA$G>gG2UZ!ns"^'57cZ
%lX/l!8Ege#atRh4[#*NSrF43!jC-39=;tbW)`D=SlAVPi?5<CLj9NhHJB#!5rB0ls%f]'!]S<K^D"5F1fs?S`E\GSUGR#9i\.<b=
%,C9K)hE3^cT=-MX*P#,b9Yg*R\Y&K^Y,8>][al>qn&bC[o_i<<hfs=<D`gonT!U$JcOW7=X_EX0?!gt%X6nZH65__%)eFH`2]N@;
%\mOJPRiJHu-uM#Kj0:f$EmWDk_a_dnM_8(kSt@(;nNm]jD0#9'qm#+qXrlrnSt'^`ZOdm8n'JL$.8>jql.`UlB`5Bj3G^[^YO?i2
%cu/4i(Nsh4gR8#hdjDNY9a.jf4Um>!-<_/ckPE:ZbHjhK["CRq5&(V%s11cdbM2@ZmH"MFfX5qoDmpP/rm-`/C&[`]ngcr3rh_iM
%YO6;U"n`COnGi-faTG=VDD!;2s)JRGMne(T4CdpH:J]emLO`fVHT-$Mn,61pMB@8Zq!Po:a.K!j9s8f*(Vd_9)L!_#pcZCME3]#i
%2nU`P?b,WSjk`J9iV2;cq"TU$rF8(*/Da+)$N8g7$N<4o'E!9g,eZ^Y,^mlag[@X\MsK?=U(`'2DS7#DJ5*0;`iHAPhmJBIXl&f0
%0brA`2;H?7\s4:ArI&5^?haHoqQK=Kmbk=E!tSa#!UFB/KmU"pWb>I_GFO%?/#Vqq^UqOsMV*^eYS0$XIN?_4>re[',2m6[,2i,W
%Gg-PC)l]UGpZ'qGoeeMFVRG5)Nii7tO>f)*?'dJK3H-tL3&tV6SEh#.W#:'R[^:h*4Eeis%"IiijKe$*n'5mW"2:PE+7Lbpdq/a<
%r2T4.Dh!Z)gA7&@p!/&[VrZUog$STneVD'q5'tCiM4LgZG&bOQa#2s6<E3ja*(nt03%!UhcNUc$`lB711B:WiW>SX[kn9?'al5/r
%>-e&bF=7k&hXaT<FRF-^SM)>'[1TKfY>FGhI=ss\T#f:;b'[>KP:VnF0/d2.oW]a?fZ,-_8&%622Dj7shtu&m(`1;Kpt5H&nFj>,
%<GP1E*uZ)5G:nm@#%M?C03hDgGam%S`3?ZEjNF%)DjKQF\'NbFktl78PRSK8'cuPb\F8/53;Mq0J)`Qgj8$sePpAH<nSG,tg!097
%Vk<q$5&GrK((+J5m3A$j@T],gSujZDHc'm,E(jGh,Zb$N,WaX0%q]XY(QG24Ci%>efhH;aU5]8GLs`]&5[r^XY7\)oSqn[O0#gKg
%SD+#SRqnL-JnRZ:5)Eh-2L7YWAn?r=9<LVRm/S?8A0:W'!o5.bbc*b;F@;g,j!#(fF+K1^3c:@epH5h&e8<-tq0"K?ani<O`?:/<
%4>*c%"VJ)72n(oPQ7l3!.QCb.SP'4=kIf4YZq\FYjH>4a@TsNl[XhI#>!)N0Guu+%%'18Z%ZB9IdB0mfoSo5cbUcRY=uIK][>B]6
%61d8tTVio.H\mb%[h0o1)Wr:XCX"DAPU<W)aAHq@(#EU;FOb,1$S/-liH@%]._'00nQA(l-hI+&r-7`;,V8`9[Vd78i!+&)S6\AU
%[QM"Oe*i@Y(ZL#!dQ)0"+h&87_D/hAfH/f*nBj+rS`Iq`+IRD1*#K,O3scX>ka?7rSq6sSI3iDG66>?<1_Ll^?]EEkj+H='&HODX
%a07P5e]%a&3<;m%f%l@n=,e&!s2Gci=q,i\C3%!p0buT@*aIgHY5O-3hK[(/n%G+c@#TC7@eP$m%4l>[7j)BSe8=R[n`L1UUa@Fk
%SH0n*#et(0%F`>4K\DPu@\g7T&;`0'_-'i$^G.T$]*P):UWRPg_$N04!C[i#gLs*I_>%Q/BOYGF$iT"m>@;/4g-2?B41iQl1)oc*
%H/@!U$a@5<dt?(0r[Z`p-\&9LkG[n4f%sEe?.Et*=3,F/LnRufrJW2%Y=WV5SRtheB&GO<Y_G9h?p(Q7q[p"dXImUpQ_aDti]p7u
%pN+CB1`JPdE0]0ET#rZ$>3eYtF2JrOqpfBGa$>Hu!=S4QD(XPq-G@^T(`l!4+a"!XP%EbjRafe(W,[AAKu)rG^#q8bbSSM?bKR.A
%-PP7.QDJC+gLWAJmJb7+2L6o'n9tN+jC2>_=*AJ(QVTMX4pgL^W;J$J7Z[lI.7ZQZpaj.))n+:-h6?\66ZHHiV9W&qRZuP.(jZ&<
%db@Y(qBOL-)N2JPWL\B^G$R2UXtnD?A&AL8OQ7DTi#^K8lYW-\<[oTFSf0g[@5_>;<SDWS%T*bP?te#;C>=j1"?=BOnJgVYfOl?q
%d@8naVR4c25;"7%j-5@#gX2%<hd#K4%tbFD1.<-Kj-M`^2Y:Melo-UiBM=1(A@uQ[ELU'@&g>Fkg6SEaQ=m`Cn*P4>f<tb;`m,c_
%^Gi=BKIg"#KT@k`&Sc[C<&@6)d3;XPei[c95ZY$*i%6dN2#%>c2A,J=`<j$m7BU<5&8tO3"8#T-rAg*$g;Fm;QT<bj@LV$!P'Pd#
%BrW`!G>7Um/)+)`(S\CVcut;J#-B]8s/)q$9:KfV'D\k_Zt8X3ET:0(TUZjL/U9C]%^%=B[dch^*Ajong`_3,k3s-F@Wm!S)h0a7
%.3LP=/)]-gXZ!V-MA&jW)RmWgc?eJUgIp6@6\6K;,7CLTDOE:Meo@65k*<q%$u^+e9n[CtNg!aU4!5o?cct]jOULLpYTE1ei'!S3
%OL[])?MqC]eL$a=;b04ks7-FK<:RmI6Q:Cq>KZ]5c\OMLm'lAPK4b'*?ROd9q"\0Z080arFJ@XQm;'YK[qqi1+E5]X%?VK]-Z7b.
%D5qu6*#phb\Cr\a*+sWrEn0ocX]Zj]g!^>49RgW(YApLp-G?j!Y]/hlK5GG=[-%eW%a_(3/7jF.prJ$*#d0?ped@VK*gD2lO(uX,
%f4L7F]1QK._R[+ajH0[mXR4f_O4O$k)<B&M$*(_1$*[S2`ijeGqeI.CB]$e;9RL^?q)D&,!L^ne6ic%M5?kdHEV=F`\AB)@;1Ea>
%At,(;o,W5e^:hC-E';nU9&Rh'P.Q[cPQX_>B^HQ*q#!"D49i_%A0Pf)n8+SZ`dqJ`@M+0frHA/RH.52CXc6n`b8KEn$a,K2M&Wp:
%fb+r/0o<V@%8)9?>FWcLqqKJ.2!4-Z<REh-2_a.i)McF.Cq:iT(pMsKc39HG1XSi=T-Y$Vl36tB)ppZC=@6P]#HFjm)k0@2$(`?Y
%"3ul2USnN7[-)>c6BU6;I@'Q2%]qs^nS1RC-0X1G#J3.C?4>Y<0:6u:i_ZZMTT5!`0cMAr;4(Z+YXP6o!I-K7MJQ:.03h!&'20ge
%S+&VhbM0C];#,7Vh?S@3RW>I$Dt8=Ma/+XO/6=o0j!fk]/Ql$4RFnD#q4.aB:`m2P;32$o,?'0".^h1.V5N(!U)J7sA$N<HNA#Nl
%\T+RDN.L??"7rMo25Ro68Vr7Up'>8_KL.toZ&b\,K"EBl:[=s_o\.!)NUo*%FeEtu+Tm?kXiE=Fd$*22>@Xk%2YdsMiNR/??hB.Z
%X%ar4mUeMT,m!>7aBot#K^CD$lX1&jqO9\&A;-nf[e4F:r4(8!m.E;dm?>(fCZ1B'"Tk+)/b=Y/Z7qa;k/%=+nK<?%PYe8rH<-n.
%,*7U*XaUoa*5CRSTU[XQEtM4+n4q]GCClu2#=RIGWO<]Tmq:WY_<7hT;'B"%!6u7EJW%;^8@pR4V!PN"2$?*-a=U0JG4=0S[Re7^
%(_RiqV=o&6s1%`,m16t7ls$M9>u9QLVAp/RNDl<B,-P5t6+uS7-8QGJTO(E@.(YRW8)]HZX(`G*I^i^E1aiaccR/N.E4uDA1tY1R
%m^S?tDVK/j?n@tA0P!bt^`/d$!>ir]k6A7J#gUG.q/!YJ"f7<XiO7(@K8)>O2h(4Zg#!1H/OWArB2Y,RYkq/GFd/^nJb6sJDV04b
%.C@nILV)*.N7(mP.<O;@)hcS8@(6J#?J*6jN43F$"@*d`g*S]nlG;f]-pof;3>tiBkhu^EAYU4sng]2^"T6]XLTSl..O1CE^ra:K
%UEE'=Zk'W+q^,P*>5lN[I5:P$5t!,%7*r.jJc8^7dC)-O!-)]Rp:&C,[%/UTU]'pH;pC>nWW-*"Eqe8SnnadW'l?p0]c.B)C0\Xk
%0iGE#>FSH%R\jB,GXb0&c(VY?HW]/>bF]SZblo'EhLtTGiY=gX&q2pmhkIW+YiYL9DYXY6r,EXhgO_Gn2>R&8B^29?5FcROo\6AE
%(/'cbrT\=Vo$qMN&JuC9TuKJb<+$C,"?ZIp5D3AbNmcgg?f'\BSgEuGc][+5L`k?K+!UJs3(2/TLM6N'[G5_Wj?PP-WZN8VD)aTI
%#Z/_/Dq+?#7gFF+mCft`dLY_JE"DNTr0D/L6@\n/o"P)"X7-(4H%+@?)EQsr:N#W.]i]Z%G(')%nojQRmBbpAa)Ch7K)U(:G'SB'
%"/Ya3dsn`ipgi>"0CKr8^&\VY-gPX(6eqO*I_qQ*IUoR-lD&deX.RZijTFmPI!+8rp;Nj#ac!L[o:*)0`M:CZQgKjW>Ad5b/9is/
%I.H$MbF_u(Nu*k&(#-l,fC1`ea1L3G/M$KKi[+>Q`SY+'n\=_2!@@F3oDFU*:IbG/M8%fTIpA2aRt)(/^\mKfn[jRU_j?Dt2fg>F
%XuC.F.>?`_T2Q[#-OZ&JdjGP!#F=b@"ie7.\NBSh-aN.!^p*(gXA4<"nE1Q1DZ*4n^X+!,qg52?J.TZKe-E3.KAe]IgZL?uoXHrl
%147F*gDX)gRm]0B=6c"LF+*ZO2?!f`dmsF`n^I'nhnK&6n]@,7:6^@^T!+cPg>nG2[^]5l(OiA)Ll:R&2>Jc#P2V>=D>q3DA)H.6
%ScAJ>O$,LMF`BV@bjEZ9bL_6bi@gO)h/_O?s8UlfkB\,YOs^,*T'&-.:hi#5Y`o=uA4iRa:JiTE;Voh9.5n;AqFo4r^%O,9#hZ40
%P!*kuVKZ[^qlnsE"p0?@+92NGXa?3UiFM\YTP\1W]Go:=]1gcrE\X`kO+6Ii7'ulo3N=(Nk'Hc.XW=$W[VP=#@.S3tFBk$TrtqlO
%5`Y$9h_.UYSdZG7(`p?FP]r<oN'SpHXb,>#,2)&WIHCVZ6Ye^[46r.8c;#)a:$T#RoLIJ[m>Ze,>p.q8/R6WK?P)W)S92iU/Me@`
%Ac5<Sf\o:NN6/IInlJtH'09=J,!(AU+P2sG^PG__DjSWB,+@=,*c1gWA9<k]r$M\Fe;?NNgh+nl$i`EG3!1u-UV2oG[Ul';?T["(
%r>JnHQ(@lK]jT*$A4DC"b\_Rng;R%Dqh2e'W&sg9XPc't-Hif;D*3%(1=G1;ocHD!PI,j71n"$X5[S?l?`i])BsNk5]NW'4h\2XB
%Fi)a7/:e?3!Qh0&r8Z[@D0/?`ir)YXn@(Vh<a':?De/YGh1!h;%5#DKK>=>?/C!nF$o`S<RH?1:r]jOFNk;D.o#3g'p\#*sl+bS)
%:22oAV!-7sE-U;6<k2p:^6"#=\$B^q>Q"eJJ$+LrF^61:Kj(UJ>fV-fIJI#NYBK"8h)$!>plHo0d^'UPIniY'K@;^X8Zj!`A?l)6
%2[0>#$<-"*4@CfTin@g5n5EY%+cS^b`PtcG67gp?<8$nUVc4B6RF0Vi2JEk4h]_iPhW&qq%3)N@(?QKda6F(EEjA_843@^uCMBfI
%M/oSjXu'+hjA+=7Ja>ZX(H#%?!g]G2PU'[1;b`R>`9/Fb+B06I\.Y@D64At>6&dR!qGE]@^^U,U8:o$Tr_55UR&1.p<4*?CCiVpd
%1<j!fr1e/697cm/1,#U/*6eh,K(%BlWX1N(W@KQ%AR=!2'!'.A@grCXlG\AJ`!V=*A3#sLn*@Q)pLHq2ImTT2ZJ$G(6KSj^7Rnoi
%gbI<\$,nBhNoUKqj2Rb`1W34)I*4sCdl8cl&r5VV87cIS""&.5Bp?('V?ia8gbl;?PR?U?)Q,cQ8CNa'\6feM0P+3#<P#7D]L#e,
%@<\.8/ZIikYY"gLX&MC?e[;0kbUIXh%c'D[ik\QZ$:eA5TOI4:FJ^SQBnbk6I&BK3jHs6Xq,LkI?rO$;2Fsri6HlmTor;r-kd[Hg
%.c8B2O(d'9JYfHiC?A5jLd_sP'h4S>Ut@fLodFn6KV-C;'+A/VGc[&hgKTqR54#Bs/]*+adNEE6.FDVo<YSuPeMs>^Rnn`=PrEN-
%V(`1lW[27)0>UCh#N7TuR`#J29#;TAeZc!YN5dT@Q.H:f`#fGFhh:E?r+R@W\=q'Ma4;:jYc=56V5akLR\PQf;)]go+mR&M%ga'g
%>#7`c>8>?h)3ip:[RRX6i2t/9$3h5,R;?ZoR)gt#&LBmDKs"EM<A>jH!h@sU0bR\;/Z035,dtkK_(&\0j5FU?dEY`/DIfgC*!iZ&
%7E2p$j,c[8Ou,5[TWUJ$T?4a[+R45d$;GF_o9.]tigGU2HU"Yk"Y3/YbsN&=E9YV?iFLVPnJ#m9JfSu+VVFECF,1ZEKO.!COt!3f
%DCP-1<>N)HKL)aJ2Z,BN/"-*jdi"-JL=aj^VJB;+CE=@UeB".1*gf>rY4Rk$AKp31B5ILRTPRdG1b!N8L&!MX'ou`9=jp9[P,-'7
%!"!"e+PFG_%DJJ$g^I"+P9&X=BX0uQf+D:eZ&;!AE7Tr/),o*[Ni$h,n120][/EpZosSsX0[-:q=-6%]&SkKi6j)XfERM-4p*hcq
%)I.<B7GM%MrZm=mo,nB`[`keL.Tqo)=tG+oo,m9t;`>S<OqiZ`",&Sn3(S.e226G&1KIcab.9!4F;U8tj]^&HMJ[U3@0=Ec<Ot3F
%c9'.d`Ud,@/88Oi\bEJRjdlg9<oo'Y]jb\X/\nH!'eO@s*`SJ3JB1`a/h?a=+tmE&;,QgJ-0a?`!(5@4Z$+(65`<S95SPF'+CeuA
%(f*M_R?g]bEZV]GhI.@(30&&=kVBEqQ8$LlA4,a=g+3JQMALcO-U)h:jJU&BEq#M5:<4t,mVV[[cV@4gU_-3G"Q1s-<d+MUn9\M=
%4s.Ne&UhuP%oUi:2:A><])3#:Wm'[<"'a!X`i;uYc+e>`S*+<W5JdOeRgP?NQ"PiB79*rZYt%E>P,W'billt1-97fd'/f(/O&IJb
%RX5c"#AK_a2?A[s/;&)LNf+M0@]:+#NJ:,rg0[sMac$^n*.;-m@M,uuCuT1!e`:O'8GdFqJF.Vgq[[?)Tm___SVgY]h'fONj=]JB
%a=+:KW+^%ebmaV3Y7Wr+_?f@4JP9&^T!9bKHgnC:rP`&52GVora,TIN/7$/g)2eV2fjZ`#m(64WN!fR*N+%#9:$OiF.fW<((?"((
%P=;8g2!ioG,Gf.Tp^]c1MhBuUC]E@,(Mn\KbshXBk+U-J>6V;B[FeQLQR\ESS!naUmJfaj[]4/iQaF2374i1aW5Zq8LmDZWoZ+DB
%59*NFP;'U$-5\G*]/4Sr_tc)Oae`M!gU7(%.8-Pj`P?jdrsgQ\>#gPuY&QE7rhsdQ,SNlfNnSu-B-ZGj(0%o%Q\+:haYL9&`#EZF
%J:sJ"df8uU9D4#Q\siV8.DD5[Rl5_2k-+0q%sC]CPPqOq@t&N`84rnTZEJi/s-EkFKQM$M8seW*5?uQRT)r5;kHJP;5(C(^[Qcl6
%SR4HaPKVi!kdV#G5a2;Sj6,t."SkIBAeb08,4dIfAR+60E*hFiqX=:TM&Q[Ihu?e?5'_*Uej_-J+"kchm(#,Js7?8:;6B:,Cf7Sm
%IX74#P"8Z/V_;.!QOm5'r9iI:Ym6$h(FSdLEdNQ\]>Mld2:<6<=";1=>nH2]`k;<LEdbWR313F!N6Ck]s*El.Fe`pUO3=!rPl5qW
%3SM#099$jf^Oc4XDcP3^-Yk]q_Al1&k44u;5;@%V/q+H%J"!#0[taIqej'0=qYbnp,sO[8jo7,bT4`tcaD(=j_5$2#qr_p2qrad[
%TeH8O0]:SQT]K[+E=;fWZ[)E=;@TuZrtb!kb]Auk4njjQGi=jubf69)PD81qlJnJiL!@3u&RJo*n'Wa'$oGCUl\DiThB*08:1#(2
%CgW\;T:$Sqk\oK`Yf2jVs0E!hqg3Q'1u\Bbpt-[[Y&0?Foe0^Mq(FOFFjocJ>Y=1RdL9,nW%RHXY-76+)'5@9S[aG,q<!k<4M*Nl
%DSEq,nLgh(rH\)*B`*ofoD$pocd.B94(nH(2oCis]e^UejBF=ESEE&M,=J]hfhl[-%fs*D_rKUSj5J,LZkk<qo?(,nZeY2E%o7ZJ
%hQ39<%Zbi5K-QhZHL*"jQ@/8om.BN.oV.D@49Qo,%Fu#tcdoO[]iTtZB1HjX[]NQ/?*-V4S""u1=IB&pPMN[t3B9,_D3nJ]gMo-f
%3:!tt[*uLOZI$VMhJqcWRH<;Lg$,2KA(U[d]]V,I[sL@jqa6Ogp@4hpc^;"",cA'!@;d1VI+3eDV46>hg(F#6aj0n=hHD2QE:p$k
%S`2r7UGWr3)h1bn4.B4)ZWS$CW2%4Fa/A6YCWDo-C?=DoYFs%aL93a*>4/]7[Q.=RP(etq"pf)u=6#5$0p<E>NHr%<E8Vnk8GMD+
%3\?n,48<=QA0o;Q:V)_0eF=Wu*k$?@$_'5UC[4'/4/`)#;=0.^X5WTjd?$`6E@pE:gP(?257M3N*W*0*dD_m\*+CT9$*DR>H1?<:
%`ki]6r;:N?97=/'QF@L&\pHLD_qlh"W2$;OMQRtimdt0dXgp_TOfNr^O5H)SSQT8]gY6etHq/":%b%WA#'t'f?5`/o=Z`J+#DX76
%HSA_Q>bHFUpSFkR_rKkSUhou+.[INA\t`39KQ4kkl6e/F!JRiA'odWi[YCCB%>K?@pF[T$Z+"em)-QZfs%YVb9d9(m.CuAlIr`d,
%BCZSuFjaN`G1I-]\s+uLk/aObi?,tt,Fg08L$H?.:$dRJA1^jb@UmE<U?23RM'Oa#A2@NZ=ON@,40tG=QcN518=R]l=$3?L^.R_6
%HOI#Xrd&/Hfd1D1b>[$3;`$H*]P0AHDjZ#.ct4uY_B]_;3E)H#9$LM(HBY;W8D0>1Y?)@McGgT'%CRD1:+dd?ik9Q1QEtG99Zk(c
%CZ/k&)0FBiV1m>6M+_Mg;I38r@Y(B;`^ic1>uG4!@U!Gill@&cL8!GX3KPL^nsJ3>)V+T!U?UP'L[0@8\@/m0k"Ad$kaR\fE1N3t
%7(XW&-sog;A9[3MSHQ:R)Md^#a(0"I:POXPNV34D2!)X0]!*K`c#IM?q"Yt_IX8N<I'@bGMe8'/"?hdEopsS1243V?ZQln./q:7A
%^Y<+NDfE4oeX(uoo5hp;hd8J%4W,^+-2*T$fu]?"*IAu=ZpsdX\tfQ;%p9>2,,:p5PLI5EVU/e#n9rn_(WC7%BOQ'ZfqV9;2qpF(
%4;UMW(K-O9O\i?a995*nD7T6@9ndDsY5?:(G'+oBN47`,4_7<lA1OriH`5H>5)n"i*]].F.sZGcF>8PKoJilN*'U3<U5K\\<FdmE
%Hg?1Tk)X`c8=nFKIt*Osrm<bbg+jUSl=,k^0cCKK_i)_:CmQ+*G:pmn[0nP9k3unoqk.`8f4dt2m:OhX1qD]+f$<.A1'Q9)`%YJ1
%/CXS8D=ZP'Im7(XF;EOh4J6RV`L?b<G+be+ma`ZkF*us,c2QZV]Y_&dJ$*'tMnFV5LWBE,G'H'+n`5"IR?i`>qr_af/`_qAo5&6J
%'3b2?4gbY*rc(4s:H"7,2Z>hZ4@u6+K9LA!R0oMQlm8,:@p2GE[^UF%$$"ULk;@eQW$,g537eS6fSR?c3DP.9R$d2Q@%:/]2#_U[
%1^p(,;2q,kahkq1CtYP(B&/@PD&aW=>uV#7fFGG=(R7(BXt<s^06RiVf8`YPlbM"q\8[0o8tX,j\u9R1cWn?QM)`%6l"IfC\8]Y`
%f/VJF3:1YP?"!W,d*_C7iPE(%&*6R3f):se]6`drR[`Y,F;7s9M&p?pm.?M@_/ObgP[h\Y.ttqHH*/M2kR\*Le8oR0[CmRPepIS3
%m2Qj'q7/u?rpW$aU"&QGq]H-^?][c*]iHl:Ac)N+W1WLf0RI*EN^nJBhQZ2n]%uKAG87L6A$dQ6e[M6FCfan=PU='7CW6#(>.TS4
%;tBEkj#i7;,u2bOIP.mNG.Cn0eqY&d+LI.j\\sHC`O=&%2U55:.:i/s:<m2[F4msR"+LYt:9b1.$lf)K(H(`k^XDSa+0PA#%V\5@
%g&!P0o)@aO0=Q7W']W5+qrHAJhHuU:8VOCgg)8R3*hajkMAuGBT'Lo\P)#S(VJ@VDj3#E#l$-R3$G12ZG5cp"pM+rc2&tG^h&ZL*
%,%i/gCcK`\*=^V\U[]7b>Zpr6pmfoA4%FY8RF_AWIqBS5F0N9#E_9j1bR;_(EVX"OLY2$$]%?:mO'<Q\7r&@dHFnhmo8@e<$dQfO
%dA^q\V>H*F&(c.]jem?9ba9a2^.aH-SS5A@'ikhB!oVr%Ng%T/b1uQ.?-SR<2E=^SFnPOkNR)ei^7W"4@-tkfVr`o)PI&`Y9D^sB
%D]`50\p3?)`6Gi`[Jn9*rV"?b^3Y;*mF%cmlLFhhQ^c=!O3]`.i^31J^7Hit29SbWJ"PW4RpDM4n?%1eqVg8*PNe9D`BC55qSD+4
%Yq,M>FE[Q'lbW3\2-cR(R<l4phs]IX*iWqZq2m-`o8D5hRnl\To=odG<M(W,cKlV_:.Q$nJ)5IHYF[>kX)%0:J)@kpr+tt/g!fUh
%C=c.cA_t-"r+0J_Y5`BeX`:oK?`,"6/q0A*J(!5h1Oo/qg#Brujq^t7nlkt]rT2`1f%9Y.G&M]q_u6^jT;Q`pc)3[daH%;3)u8FD
%oY\^.h[:T:qIK$Kp:!Eclc-.(jium;Z]k(Nf4J&1Y9!r_+4`?rW1)lCM)uXa)qF82\Y&0aK8287b8YY;?ekU"B6s".gVp_^g$M;u
%SmMBk?t3\`(Oti-=kFYjPcF?AhO6I]\b>(_cF9^@Z[::GhjcgCoAse#Y]Ab?)K9Kg_:,#&<MLYKq`6l]Y]4aacIDFjpWWW'W?#L:
%SSXQI`uE4tS_a1R-b1u3o].#acJ0D.pLUdYIqS3+)Kg*"Htm-]mVm?q]\8]1HlQC`Sm-Ygp&2b`VF$0$q;os!l6A*/q!HAEGFP5n
%([G/;1>PG*f;V?&o^/^CQI#E@IXM2n4dt3?V'iBs^=sW<q:D[nkO5N9]Wl_CcDP/OU[c5\VSYd#RV_r3A]=[hkL&9Vqq&a[$dYXH
%gtdZ+6EU#b/<^9faR20:ZuELAJ%RpU$,)sWpgE^f(Z2_]4i]tZj_X%YTi/3m4UYU!$i.`j)jD6j`i:PqoA<^+o>?d48q5:(Dp5<.
%s*eU0le\sT$YsN:YKcA*\$$l;RK*8"B(b?,l--2D)p`.tM\7KnA%mE)8fqo!>57UInX5`,-uYi^hf]+0HEVhr`-'eS_tgF"KhW=3
%d9XA,kL%fbn"l@9RAsEbT&4fPX$/XOS3B.9q,Z=$rr+YH;I/Z0C[/ajGON`s2W*6:9Ud)]hMFic(Sn!u#C!&j-5Pe=o%EADFeAZ@
%PjJaM7sb,QqSDI]D_nFi:X;M,g$6gQoWIpQ*+&`T$Cgai^GF=Se_-F(\2\KgkgnNbrT;SGHM6k%r:'LVDDll"otYVm'(Oru/BrQl
%R^::&SG]XJ+oA?*^\k]HZW9>;[9i[:s(piZ\(Tr&F'DH+/:Y+B\N%(/s,emI7mAQLmcg_FJ[dla9RW@XZ?gYn`<91.HjjB-0C<'f
%;I-IJ_Ut++f)>>uU\qRDD9uX6:R@)j>Aorl&(HN'9HGb6>%hg:A4NujSG`;b\92ri8SH_.iVa_m1oB0cJs&:31\LCh;ci;Y(U@a$
%rH`m2Hg12"k5NTIO/MUDG,?T%Ktu9a-[KCtq;M&>]@H#N`J+0]#HHqFSS[8CQcRRkh8:&JiXL>9"*ONEZ`p_3l\;Hk#KknlR->Q^
%D[sih:>MFcZZgLQ0)'\Z$(8Z"b.ROq]0GoRj2qC&'3TEYi;</H\aa]Xn7smWVNBOkk-nr?IS6Pk2iEUODdE1\%3Yh$0VkCBXg`b%
%.Y%T4aikEHI[d4bV8J#!WuFt_aOflpLjupXkL#MHq:D%"]@."+4$0W)dC:\TZ9&$PfosOsLC;Warfp]oIJZ:PY<JSm5.gPGl_D3Y
%LOj4*a#gc\oXjdCk1,[YDt<R>DeI33=0=+h\#t.KbEq>qe+i5@BmMt.%G1&5cL4NP4ndMQW[@[8MDBqdS:uZej"L3mou`qPNF/UY
%F'lg)YZW,,o5J`t<0QolMXR0t(/X'8/2YKORJ1jKU=>)d8?+t0.?/&frZhH^""jXu?857""Bn0GAqV&/<8%bh+J;_B&"$P!L2"#k
%"K&eGjo9Eh"3Hg-T`!1>r5oIo*2G$;_4:l&@/IcU08(&UWNYGmgmZTBO3[.M96Wk+-`EJ7B?3T)=!5ct@8Wj6RGrCDs(#$AlD;9!
%<KhUiUFsMI[p+N"rl_cDC(:2W26Be?/tj444Rh_FqU3r"gR>D<RZb,M#]^QG$EZeVQX+WK%9]^NMfGcI;D4@5.?2@s4*0@brj>b,
%l^KR.,J?[[p/+Xm/du14F:=QBT#FdfN/4Lfeh"*XRI4Y**AMQ:d]h5p!g'6+ri"!YEo['7rG0QsI:@p(d+?'<^<q(PlQuQW?/XIP
%oXk)<RIf</3tXA,#;^;,[\&]"q<Y%;J'>".HZlVQS`dUac-l9]mj+366:W*?g$@r7(VcTFhO]1X]t/5siSB8:DJkrV(ASf0VpJa>
%`T<c>=>u%76aQ?SB^qBI[%M\&X)F.sGjFtRjd(2]Bs9QqmTt7_X+[iOGBipKe^T@M1UAc\G>$1FHi-OUe]`IacFc/>Grr?Q]"Gds
%B5hc5rH3$u]"*:Nef8UGL#n`PYl&e>f?DFKfiROn=KcL)OUWm@iLQf^NB@dD@,pXD)=utSS,&u&[srK3R&Q[)?(Q?8r\](:bM1e;
%]1XM)LW@sn*9^Oob.mTId\;6jdc11I"hPalB`Vtg]_sm=2S\q]AED[nX3]j)0Dq7PB=odEqgABXC$\`SWejeM5uH#h=bqQpH+>p7
%qtoi'42:*.&%;28Dj0L64"%9qqI.U;bsQG/);HS)iNDNq%A]ZDQJ2@C$P.[?D]Cm.hk%LR=DE(d55IPTgrl1.5OWui]=7BFlFuYh
%<)gt;AXBd=^DL"pY\A)A]R%G#5dcnZZ-+g4h7#E`EADFVET<1[HPd!kT'TnE&XE[dg)sk4fc<8GUF'j7=o@gg;)>uZd;741IA+`>
%-2"oFp[seU?Wq4^X(_sEiZGAe\),tE,-/C:?ej@?OJ0b==\K-](pRuiDsWK'?Y8i_f@s@C(Cn`>'\AiQg8Vm*]@ZJ!Y0FuEl0R_;
%e'shIq_.;*^tHco1Tt/e]N^o@[HW,G3e)B!1V7;cYHl!NoqSaSDJr8aT6AU@F$IEE\UWeideE3*^V9E@)uIrnGG!b9a8a[j(qfUJ
%/+[V$\!X`>Ide9\g&91o]aSu)$OHZ/fGDAuYbUoAFk,&oH4^\IU]0R@O5I)<E]'qekm,Nur^KQ)T3"qM05"=O2LhX=R5usthd1$,
%+1Mu]-I.Jl'Q8nZJ5(CgoAkjW\p7!sQE'bh7Pn.A(;:mPldHC$hX!b%C.5Q)gOlW7=23(_^0UV,2;I*4(;EP0`6OQ<Dl_Vs*S=0B
%><L[ZV`2.>]'>#i9^S"\\4ee(cQC83TkA8eYH-X)Ku5n0"N,I'$GC]Me_Yqtq<CmukL%>R[ms"r@Q,F(4,AX]m,7b:(+K+BOa_U7
%hg_sm3IUqHn%4%o>1LA>*mE<n6rLkCUL/d<oCkF2R!'[e3P>*-q!A;SH=FEhR\-nJo_haCRD5-FJ,'B!>2kRT:pVh$b"j;N2^\uW
%DX4E<$4GPmL!nSUri2mb^]1_5@-br2p@S:oM_QZchm11=f!,aF=o@77O89.rO61Lf1n10"r94FYiMQqP_kWP#p+c3iJ[u2iR")R@
%r3oM;H+,_7V4$fB[>")&_:SLbeTksB0AJ^<IPt,!c[9'OGdVarj[IkYbjF`.A6k\^bfRO7mq,T*dhn.jj='m9-`2qPS$SMaDsi%e
%^[nSaU0`>!)grBF4Yf5rh'9TNga9MlbM1#)%t<ANf31<5[8/s!I:`9,j,ILB!W@.!;m.9[p[]d$mTPR\)1L<)[9o,U'8Oi7eo1B\
%@(?P"r0.Sd?VJc5m:TY!1qTCPU\c]/:-U^Qo$PJ1EniTQeC:Z4DiZKh7IG)3Y5]ClnnE,.CHgQZS/^bLRFV,@I!2^->%bh1?TZa2
%?bYCW:5b+VLbA5^`mi"`cSTn/T?k/QSc1LH+BMA$G,Ck'9]'3i^8<"<%ngssk2&8pDPMCHNHr%?nTfS/j3=W-otEC+l2>O%YL$gC
%]j@4RqKU@Lq6G6[*G!oeI8[OeqSBLR1L'J*=2-5+s/8.P:=@GT5YBft:tlm06MEZ.]QNW<G:<:)L%TebN`*>kGcOna>[(A/IeC\f
%[IDJ.Kl=_uDXb*rW(<7M(Y35;:J`qCTAM(^c`F;+\<<f7j(2#1?oPKpD@FH/]Dqda7SB=X?(@D[9"s?X13Nm=kO5QSI[a40D0BP-
%<bG+tB"Lo)B(r9mZe<tTQl">XQF\r!E-KjED7!&BIJ7u1qVe1o*#$Tb*Fq)iBFJNtDk9.`<?H^;qdeuM\p:9`>5p7L1=?-=ea+p'
%T]O;4@6=P_oHEA;Vq<,g#$9nd>![ON!fd)&IHAH-XcKY\B:aOq2ksQST"WdHhqW/<-79kQgB8DmQb2"g)N.0Nr:.+NL9*W:&G(83
%`Sp:W>KtX1q=WK(f:0U;j+iOKHO%=U*bn>^TE7(a]`2I/hO"%NcQ:pV+0Kk%1:aoVDbVe>T6^$tldb_C1_HhGdo2/\O(S(XUM>7'
%D=@=W.GB,kMkot;%1I$%rn6j\f][(0Uka0??@?(Kc;),Q`uhB9?FbJCVfhE3I+/ieK$#/l*ZruGh=C9X/QmUm<V+HUIna9g*T:-]
%4BS+UhOeM2IX,pUEW4M[Q,W&ZMX8RaiV%@RqalK-BtYbf/,3Ct&3+0#Y0P;=5>S-u:A/UK=+aC0QE\L/Kh<q]UP%t!mYmU%ICh1Q
%ZMkRs-#^sW41Y6F4+TljjN$f@X:/^!>?e/!2"I,32mKT92KSZbjm@;,Fl&3kmIuOUEsI6Q\,XZ"#jAI$IViZ\bL6'[Y;IcRmTENa
%FKkP*<+,P@q^6d@aZd)'IQlY=q=A$j]T;^@_o:B>mV;<Qe9+r/9^hM>jb%!Jn]m`dl)/I[[`3Y/O,Ls^GCL"dr)$1HVt-V-Xi6-0
%9243jXKo%E>f@5#1Fqc]>I'nQoP`KjqnL[r7h4&@PG;K6G_Z$KX*J&9>Vcms^O.oFEqZpYSRAJXq;qRG':QsRpPHjP^%gX`ok(j<
%nFHQGCimobh],ngmW7Q)eBQscNJ7&C-^,@2>J9S+lb_A:jkj\En(``]Cp.Q8:\+;"#O:`J-k;n=/K0-aD8cXaopn/7amEHrN\A0:
%P;F6-hiD])=M/Ws1n7QYZa:F@"aRIsk9Bd:24;qm_VXYJ^V?5/?f$0Y3ra;2@M.e&bB!/1Za[Bh*n/!jNTD[nlDHUJmI4lr?-]SF
%E0%2?6Mp2r]Y=?8k0/h`4>tJ\cVCh.cV"dQ_nrg9gm3rMq_,[cT.U';<pW3&8q/c!.9<CHiG:=i@)RsKY%PA=Bs.4b0u%kkkc-gp
%Fum&+IBS,RX_-bNh/2G>PM>7![lZ*";7b6ES+>,r8PXk@Ro)+_*]EikBD6$'V3=ir+crJ.]_5e1jOT+Dk+=g8qJ1QTnCqlTdpto:
%6d`9SF[VPVb<:9'rT0$^IZA=c>(&PZZM=Cjlf@'tc/ED`U8N:L=C^CB%BjHRSt>j_;h]F^Q9Nj"?P_3oBAUsQ=#Y;+QHU:&B>=A_
%/LJYab5ukmU*"?=3VW.:_dA<XYGRBK5<h.i9Qq/XrfoE\ju;GRG3<f4gtOLnbD"olVlf%a^ST%@<bUj'/7PbcS#Ie4^L>`)M(P)#
%mF<SjqW#]2`VHhX52LZ]DTL)Eq8IuSk;8s:hO<8Kn8Qge/M3.?AF*@B<]<B"Lfd,>o_!./eZD9YfdpsrTAPZ&V_,-!eOnPQn*S>g
%_ncl^kgurmG[V%9cea%/=Le6Np'Q4Pm"[/uQ5@fc?ZmR!8&&q+SR;CNHpbg>d?CDfhiE5j_=YWYN:_N'fq$)21?XjZ=7u+L-]c@m
%H;"P?frnQ@a`"-oY:!)=<=ecW=.AqtaM,@"GWh[leb/5eGNYT)fui;48E$=K^\bDr__]6joms[2,45h+dhZkLg-1n]3rF;Z2jucd
%^9-LhXg+q>\ocLfqDRs3e#b[0!(%$1/o7'Vp8rf>Ug.cZ]2'M"I_YdJI_.J/d-AJVCFW*drKu@=\Ted#k]ObL-ZGlJAe'<]gdB0(
%bPA>'+0R"]hn^#^J%G@AGn<9IfR?Q/naj_h9@juPm/(o=Xe=NXld%f/F1$n+hE/EZYd&Y$PJ\$i(QU/\s4\"Trc^>B&!K0IY@dXI
%\&ktEeN*5l<i2@n&AL072KLi6>R]BoQ#^?r_=WA`DeI>2nnLAgFo,s*I=[Zsl$JF/R>t@<1_=jP;O\=QF^ag[dblO,3q]]3B\mJ%
%FD"g]:4E+?/6nU5^%_,+F7!/;rVi1OI=dCRZh`D%Q-VBDDXQ<:pbe[LRloUX^Uc1E4/XCBrbo.\Ge:\CmFLTKq0sH>!5UK;Dk</f
%>Ug/%iq)`thAHRf+!11U1Ulqdj-L@bphG9Jqt%^X_i:;/L\o!b_g`^u]"HFKf\HZ;&<OOI\;#KPqFUfb;>I91]q'65Si?pZ?A5>G
%8?P3pRp.t;'FR"?F!J-n_X70j,dD[.Zi;!Ws-G/2C2J=-S6WcF%3]n+?1+%PQ^s,>balenS)JP7n9Ip'ZN9t[a62=18GIECh0PGj
%rCPhp><<o":4Eb#p.f,dA9a!'3pHV7kO>-gZM"N&Ep]NTcFh-R3R*7ao[Ze,@gI:$ku%;j[jOk:rd?!J-%u:\4R4"b5P>QtH:(O>
%Aj_Alj.XG_"8T)9l-\<.<U:#3:m64'LENrYm-X9glF#L*RXFiW'"P(a*KeoFC7CEnNLsU'q-]f_kQPEnZ`T96GXbp[D?Yc<:3pOX
%]6JP%5A$FsYsXa7Nd$L9\/+!`AW[](rG__kcL@Hmk]+]oZu`HuM6d-Cq'EQ/llrdX*MKaH@J-!5)Ubd1QW,LBHNErjauKa:IEo/o
%/#R/n`fJH\nsc(']K3TE8`N;]8BT!\P8Lq?]A7o.ihB)kmMl'"gn2t!SJRW?QgtmA75F3djSsLM]R*5$EVIcKjcYgNX3S,/EbQKd
%.!cMQbSTH>QI4mFZ?3bQk?PNToPE^K!p,TK:sn"]E:rDIrqaIbcJE,+]M1f!)J*0bKZ92r@nEcA(FG(*U,Gm=@2u1pmZbD*[Z7LR
%4?.`k*P.10W/<:B7oJZa>8C!P6pF7`FIqXIaaa+oK+)^'FiJfRE<`#LVW>'"ANgs+82d0fq%qI3T*;@o*`ul;s15Zsem441o6a9m
%MHd)=L=$D"6s[fmNjsb&a'su@f-Qqu,S?DH5Q'P+BCpf1FVu!;B&iZ*II2-\p?1qTSH8$RcKM].kI38gPTpW#hj\+#4[sl"RYYE+
%mk7CrbF@"p4'OfG]%87Jpc6I#c6"jAYXXAkKj*Bi6%@ki@;B&>hrV"AGE0YNfsj_i`="c?F2Y,#`<Hc78&rX*C2Yb^hT,FJBL,;+
%8aGR;K%'`Z\qH%anSLF(EZNK#i',p\U,Q5"prTjsnS;4'l/@o"JtK$DJ.C01nS](G\sM=>%1[VC9j6A<OS\A84>!b5oQMc:X7GU=
%'n>OjRt8uUGYsA@0E1IeJ,J%=s*sp+p#TP>)ZTB5C-R*9Q):bS8D.O=lb4i_KtGZMh)CaY:kG.MWD*lHoSYgZJRf+kZ'Bk)IU8AP
%2i!Go5r@n*9%&JpDnp>Kf;d2JX+&T0[1LFL<[D1STBdC`,F0mh_(:jrMmQJ@a&?i/n4E1AYl^!5Aa]-i/,BXW2F\r"9cW8;;S0jA
%o>##f)B)RSG]o<+htEf2l`tLSEIoZtIUu'-/<M&Q.U8s-lZ\L>2TqgG;O/j\/ZSZ$rAkWEl0C*kMR7+tMBr>o0KLj'JU!>T^Q3%6
%ID,jl<?]]1'B-U-)Z"?d"df0m3i0uUE0Kjm)Bq]3WRWP2qGj)oMJBf-V@o%(Anr2SH^N<Ye@Mm,8"G[,'$%jWUscXhJJE;9C9.3N
%1p-`f%>\#\.f3@CI2Nj'<55S@>FAlPfUA6,!%3-uR>uih$jPKG\'JHuk#"P4Ibj3[]",U<UAHNEj7-hS<*+=IbX@^-<qL0-`L*lD
%nDN>_3!2iK09*Cge@[?PUBOu2[\DA1W%))5^nF7B)Uo*LL34G8QrmH;F]K=eP0HkRbTNof#T+FOR9l5m7,9XL:5j,1lIA^,;7Gqj
%NH&p<NNc3hZ!rTH,]JU<?fTS_(2^Fd\j]Po=H,6iNTaXN2l%4X>8Tn7^:Kae-VEtg;&iO/Q(8"d`JJ!+3/5!F:HQUS@oQgsF^&d+
%9jNq4D7p6pglEfNQ^(G.d9&\.8PEaH#Ya(B#@jE(P;;39Yj0h/;774[clA?1H(m8a#XNH"jcq5(aWmj$h,^&mRRD->37a1I8-2k@
%IYU'e*43_/J6/6HM\RUk^#DF*^#Fu/+Xg*WeTaWm$8U`*e^Uk$C^E.Q1m&Ra/FZ-@*foH.[b#a27b)!G]MDBCdj?dZN^`2X)hZ.6
%lW`/(L*lM.feau%bhAnJ-<u[0K+U."+<!AThMg+a!6=X5M5"bNGX-=`HeDN2_2FAV6'Z)n[!!FXEoC4X#'LH_9rFUsA2uTn4.5_j
%rCjKhp>/91e)824hiX639]L!9eBQ4:o"*'9QCCI+9Y[k3MK:R>5uhJ;qi3C0OdeqNW*bXuOqo?@jslGJbQs-?WYfnsAjk'/"B"Qk
%mgq2lMM;=\2`#2qlt/_MMZ(aiW8>jZK^[`uR&S.OUOh=C/*fbuNOOjV2`$$uGrX;8R=SW,ohbmt5%Y:Zb@Da"l4fZ]9JWOUa[@%^
%n3j?lBdTX08!ukTZ?G*/l`=fqd7D'3+Kj*/1o=*B%8D1sF>QG+a4kSa8%Tm[H5!c6+5ZnV?pAEVE4Clnf6dK-*iB52m7s[]@M?hK
%L")aX6&uLZ./Dp>N@AtET#-eaLDi:R4/nI8?[[noCl=&R/N=QuGgIWi"qF&0XLBQ-"7j#HiMKn]K3PaLGYQu0&Wnee+L:+![=Y9u
%8[>5l_MkqR_6$lK4=omXLr^Dm&D=@,YaB,.MFEi?CNXTsef9`/4#eE>"qF%)D9WbZPhrRn_6$ls4G]RDm7*(f"-KrtbD+5E513IB
%%pCZY](_0k7)m#n8C1f1kK1#1Y[MBcno1Y\)@t.U3$L*^%Rdag+]ZBFp1n8).Qs:3el"I*`k`7L0lTPA&dCi!MfQR>7/smpO+5W@
%fsr-3Tn;fs:C@!P3%IC7EF*)TktkOuebphIUTI/RSQlm97[$hhMVPA2*F.0Tq"G@hhtes^nE`N;MB(@t.8"B&?)8eKQIHtlT$]gO
%[qE),iYK]uC0Zg`^5-^h@9K^(CE*+@[b*^.$7<P7q&*ap'o47%N-L+`(U:dMKo[,Z@XkFNks\]('aFsr"3&WUNeXItbcE*4>"8/m
%RSU&5$<_ubQl9gPhBXFnjt.2sQ&gPjnq67_GHs?Q&o0@qWK]u4D-6hT<(0]J<$8C1.]+&e<'gWZI!U[D3?9[nUGuAVJ-cerp?:Eb
%H'jqV[;@MN'Aa]$==T[<(Cc5"@`<=4Pq)WBKK4sIK1ZMA""-;_8r_?K>Yd,l;TUmX0H*K:#'I:9k`/T4FISb*n"t[%XU=>M>4UAN
%<^X#6F6m:;XjEN1`oaCY@;5UuW`_4a)QS4tN%/qOAVqf^ddE\bp4Yb`Q'`e&SS=WN"!ls)BbHC&8obRqf`u64Yc$t5Kh5Ql@pgkp
%e%G^r<3qa'+qM"h*sqpj=d>:%W)8:5,@=C6MEe;d)onrq=C^)'6t3F3Q2iKfdgDHt0`bV.Qr:JPPS1I^3gS!R>L=#;PbjDn-\^lM
%mEi#(\kXq,&c"Q)oU!upc]V7d;1ki/=1`(:L1EYt(05Ln-l.GXcAN.=Vfpomfo$eeTt+-B//n-bgH>IV;4EI1,j>@h8(:"Dd=7TG
%FJLgl&Wa"oHj13_KGpn:MMiTl5Z-0nRKtPEf:F0elWI6@b%3t<)k+XRcbZMk_d-c-e2@NZ/a9IEi0i4VgLI4'G^*U">\]kM4GB;p
%+]N5N0>+I682](p$;5PV8ZU3-S(_nTkB=+:9:']M\]Z5A$=kd>%L3MJE(.rGh'>UFQDhH98qYB3@/)9N)T@/B6!X"dk`pntXDKc,
%ei9b-2@^M9n`.tpLrLrH`()LD[.D0)Pe3Uu.o7$:qiS;EB(E2nKI*'#@'XTOVKrQj\khVmASW(i85&O%*Q\FJW>fo\'=5PKM__Oe
%(2=^%M[$TJHJI\X2'm`I.ZLP:X#5Vr`qF;G1GXK+WMgL/^g7SS*)eDs-imp1?1fbf]!fVki9^qPh%\0$QbaYA9r$MQ_5basiMkYZ
%,TUsRS6GuTHWBRZ#'o/qda(f?4D;Pje0pOr?Q_*.%Re`KiK:&c2m$7HSCX\Inmm]O#X"5(E(&cjltcMP(3Eb1jIjlD`+S?QR1&kd
%.SJ2,qPD:B.2s$d1^"`r6buUp5B,\D!N^A9^doIaeSr!,>T0kn%NV>n7T#p$=u9&BTJ`._*Yuoj+#'K-NPn<tURubo"13Vth.E6K
%T`Hu)1Lt/[0'`Y?6tPW;(bN#(1VK.qodERYid*2podV^:<Ke,mH+#96E<V??*'A#2S(.Qt3$"X/\$V*0=BT&DbGl.'OJuqN;p8bn
%B6!I`:;M;/AJoLJ+kmXI7bXX,179t#;J@nK0bd8(T_'ffjEcA^$%lceF!E+nBL@*+g/o[*EG3;>,4&O/^bbnTh"=Mf-Xng1Uq/jl
%:#0L0VYIM7mSq2I1`.fTPXf+NdVjpVEi%hr&:uA^ZCl/KRO3q9E0oT9UW=[%&>NoW$0RgUl<?$p@o3jF3@</eCgUh#h*stL3\+AJ
%$:J3bAXb;t)ru*t/3&H;;49ijhPDApe[as6Xf($qcGc`DU2rB:5o71T6^"YCY3:>g$B)@HQA`d>81DKUVEnnTZ=j<%aCSJ8rFln#
%GQX9OdT2,Qfs-@T=b\ssml8n;Zj"noN=f2'S?Bb6%7:OOCF6@ihE^=8.#aZ5X\$9"aP;mc"2`ZZN#\9?a;(f9Jn=2Tc9/WCMX$0t
%a.Odr2.NGqEGl)bSD@^id!.1K-8rJ<qD;5[q1KnX@Tdpe^)KOi7*A`SW7&bOdaG[<O!k]1F.,4g(6DW0*q[)K>.t"^/`#pMJW4i:
%=cm?Q;h>\tXm?bA;DRq\0h9-jKpIg;<CRZ>20Km0bE@c`=&g3YThs8Xj9g\.A_fh6^+'L2ab<T':KPuM1n@UC9qfElO+EcYc&e]%
%NAS-s)mQs+3TJdE$topKnsbR-i"'M<"jZ4(]?LA9.;64>=khGN1u[).er@Z`ck)E6EKhP;mmeL:8S5l7a@i0<kNpPDRT-0mqKo$)
%4dn2fd-X<]?m@^CO>,5h`nq_5NiHg>-6>nV)NfUF?sB5^mFD<.Wc=7.'eRMSf>b&PLQ0]];'nU7#th69@g>RJcj<2!]:D7_.[d,.
%A'*<$$jOCmA'mSo@[g*57g(lhkkk's/UF83-J2k&%JHVd?#i>"ZH>1l.:P`$Xn%]$R^j0!:^K0T2ek'#oP0m:'cKHrek53\b;PD:
%IHk\C/RmDL;q7.Nogf>Dd,nBl9CjZe^`]9XB*74\LjMBFU<$aW4ZZ,116:._JO4rLiHnO(A8h$j+^,Bj[/<s)KBN:ELkKF[?<(H2
%nJ:%.G31;W;/7+10SrV0n5b4JBjooQZe<_IE>k'VYb-[L5X[u9o<b249cH\fhK[OI8C4BP`afs\3&KT=!*Thn(7@X\Sm`\b)]XbO
%1..d)BJZ=c0AMiTh.-S%En*gm$3A!:E`L5:*\<!tP<t)BA<-2Ri"^:'=H8J8p6DVqob-,k?tC-Eg]Ap,auV.iWe8YOZq.>Mm(%A*
%h:ViS/hRO829Q+PW6`SY6SXRop#dUrr`#n[AKGcK+GMU@1h0NnTg:9nXhL</8W/H/,-<VgZ:i,dd^lN5X2X-L<a12)cU-o>)FDBD
%rs;ED=M]%2=@4U[qNeD#L?:N&67?Q*;C4j<#oX>A5TrE*+GFKdTXBS0.1J'CpSo^rF-`qTDG-k/^a_ag@)1-RcaF$0/?Bg`U-_mF
%L*D0PPdCV;4/%DjGcn;l:u]AO1*W\f3:;#YQ7QUh%3]64+:LbD_#mCjZ4e-6f0OK"Y]2'%S$K4T2V5k01n%iAF0^#BpkG*t29X)i
%W0l+`KOGX"e@Nf=MWWA:$jUUi_`8,r4DGkg+ASZHLS2VG`N[;:"0T#Qm3&=S@Rgm'K"]_:^'6K_V#^X#bL'a-XR5P@0+_Sbe]M3U
%;dbXr;Ns:B)GcK!(KcCCV@%'tRMm/IfOYdZlNODK%8BEqeO@_'m#=s-,R:/L*SWK5-J$RC85\RQ]5CprX>Lk3"M<Be(H-oV.B95o
%['$&SD5pnn0q&O9XQXd4d96/OiLgYs?b[j62oZ%6Q;b+^D'rEZE@2TO]d6>.P&FEPGs6Ia=.tkGOFRhZZ:VR*8$Oj:j-U3h**F35
%<QV$Np9Sn,DSND(Yqq?lhGlmC0r'=$6C2[$F5drp[$%X<<iT=)<5tYTi7t)(,E@P6:=?/=P1oM*@<%<eloGr]Tc(o(F0]HV/^7t*
%6;J@VDRA+qZ61?J=_KFQY!iSd1*?1"`L2Wo2rH"Q3f=2)Q=6&g=1+MU/NAPP1+0II!@sS['NlkC_E=[BEe+o;#L?kdakJFA.3^IB
%4c[NMa*/DcdFbF6`-URE3:Q)B8:^&i(aoV!@PHrjK=)_nW^a'>Y&hB+:^T6^dqZ;O_-`Bm)$qH`Flcj?qOLXk-s0#f;%UsMr1\gk
%??/U(9).1;,d%4?A<:lH]Ac[eVQp.PN1,W_!rYttRS1J`W0Cr%jJ`VgGdi2GgF\E[%2!'G1FHO50G"-Kq+Et?G,a%)MU'?`XJaFm
%Zu2^s#YL3%6j1t>C#@=*D0^HU-&/`BN'VtF9OL+0r^Pu#[4WVF0/L&Xj<X?X_s=OignY(l\qE,ZY.8N^V1,?)_U.H+#LZM`+UAL_
%;a<5@J^i=!-J902WNGn[hK5rS#:VOZKN9%U+D@/%^!m<>&`d_Q#ok9?H0SrL,*YjSiqa<qF_*MJq+;:Z9h8,"B+8X/q^ZWq1:Sis
%ChP7oQ+9JZ^g`'1j(0SRV7$CcLcD&fdNCu`g`dD6,030Y>*(DWYui<,>V>[a1b`LQZU>YF<nnK`p8P<;c>$C*l3nG!gpIpW()0Nb
%%NQg.`++al=?\Qhn57q/'6t5s@>EdI`jk]1Q8odT>M^acPo+eb'q[!e79rCBM*'<UF.I>F(7kIW-X=.\-)Y!^`(bsa%)*5bD]Mj-
%ccsPF@6il/R&[;80Ph_ddfC[GE2Y?WaX0utMU8B&,][478TXHR@OUU=a!aV.IqrQn"7mP8S-qF"pm'V8HW%c%qYOt7P`Gj$dBEcj
%;i&gf9O^6f;<Lp+GsMkXm0Y7%JU&CB*BD;>#Nm,j"WG*V`=]&rO]%.l1F;F!*Q4b!J@-\)+m,R<d1;9bRXcVB252/nND>NkjA]Y7
%-oq4&DXBE8J%>K@U/kI>R1^E=ATAW&c]mGOgI%eI3CW*>OG&9e`2?4I42RspN!=]d.E&/j3s8Np,GLhW0bdBJ@atAlPHt[?E#uAS
%B5FPW0g[l3Pf4S&M/WQS"4l8$<2.IWnL,0KV'D)>D&<Mp3@OIlpYBL._MGBJ1fi&OhJP/f08W6[;FmYN!?Z5)mAD?a"Yu7CVKJf<
%Ie`77=%>+83@f:^^_$>N(N<'>-O%V=e(089>6%(7N?GCT<$guGlCt.:pk0s:j@V(Ma5YV$Z,g)RHA/bVI*ik&aBk9iR$3K1U,$`)
%*8?]u4A@[I+;R7sr.T&6'RR[7$>MGUO+-'&e2i;fM'?hJN:K08'[05gT6>cuD.eQAg',SW9pI(0iE"(2$Mf)b9a2M[)bW8dBJ"S4
%?s,*8i);5jnL-tX389`m(0d`3OE2=aTW.b0<U8QVEp"0d>gBkoW.If'@u*89U9r/N.)HS%U)3-[l;K3TY=&-(+DG#iB9d0Ag(MZ^
%D2T7XG^,O16W!/9)kg\f&cl!EAh4c.cfk7D1`Dqt?X7>#4FMRgdIs55[<SFiES\]V9e3"[B\N.[qs@BiO$aRXJjS$PUl&"6b6m[t
%5^3hTN/L`I*-dH/;\iU_\l%?AgLcEVe\p18buJ0s-5.RE9gi>3DQml";a;"^BjFVIm3t&g0a5m+2qg<r$Z:mrq]Km:FA@;!DY'X.
%*`['n+rN_2]@a/NDX2!V'WO'W]9&laHc)Pm,BYm;hI7\X;/QW$o:U(]<4H<R\@C<0D#[OY1lYW6['FOH-b4jr=E/"*dcHK_FHEX#
%8q5;*HpEmm2@(BF&V*A]$4,f:nUUe2LrFGdNOB>&26L,Jaga]*C?)I6`6<K`+mg_#UFfCV[#Ik\ni6%?23W[;EH_H62*tJObT"U(
%`))9SLf#)p'?GkV_q1C%/_HV1Z?U7A#_";i3(>9M6G5,=)"clU1Ig+<41g'E.&]Va=u_`@$pXQ^7Ci!l3-$=",&'HDNVJ=Ofl3@h
%h@Nb`)l0[bAPs)+b*nQ"JDtkWl5:#kHo"7G)a\<K\tIEPn;;b9QIo$aN@nE2DQpfYW\In_P5%4_Hj:Qa1#Tj)1bP8uITDeF^k@9d
%G)^ArO5<qB1Njgn/)-;oAUphL3.;;"+@^VeWNf3"M:2u!q!(>L;QaE[V,SlX3me#3Sup7JS6=$o6XpIj0k=T0K1;Ab(3cNnMlf].
%jA"?,+5FiQUr[lifZo*]pZN_cR;LDDms#2qBLK[RmoA#A&kW>E^SOtp\a'MB*Mb+9(]#k?DDY1'n)%T3U4H:d#&KU[I>60fZ3GE4
%TF*XJ,gf"JTc8t>\2N[$cq;6U:$$+9pEFN\pK"HJJ1A9>@f95$Tc8t>fJZBLOh$<LR><uA8Xbs6'fO])0\<"N"JqE"\$HYpFJBG%
%XnW.fJ`]SQNs*lP9e+B1arg4D'Y;\J!`-l)RKi`G=1A[D05d&lfhPB[@[=+I,2$i@Em$J)M!&&!>^W`LW0!=B'&H+"gA2AW:fYO8
%+O^g<A6$#bU:g4R1o*=iBhBSf/T2CF,s0E!NLm1ZR9/r6(f$tZ`)&-`RRDmQW(4+JO>Ya_nYnX*ntqXZM[e?UY\6ah^P_Au+NMN@
%Fku[V]cOI`!4"fZkTE0rb?eb'$,Z#LHou.h9$kA$8IVOYDKppfU-g^&Ch/hjSEQ;g.uA=uiS^k.d$Vgi3no*8G7PlG(6h=//mDD:
%Cf$3dUZHGOCGFqD%5BP^-:dd4+O]g\VNdk09OXQiKWiWJ7+b&5Ud7jF*'3;"?AB+d\(@mlCGHC#,&\#_$u?M]r2g&+#tV)uPM))8
%Amki(Z]:c:d&8.!Jtd6%=,d<$5)1*=-aBK"hj5DsktsJ,;WO\`+>]Z::5KMWRZ-SKNBitj&1<2P[2.0-!HKauDFSCZ`$ZoWiHgr)
%7lu,D4W#*LT1m`E9rDo_>WFW;kXHd(>KIC8RiSWXTkT5#FHZ&[,78.=:#8mD6dlBXh+>0kN@6%e@U+mnkg?cSVWoG_KuOg'+c/KC
%/eRO"<FO?R+c"E(1nr?V2K=Fh02.2lp4)'oRSEYT00QR-n;6+@m7&P8j,.W&#i4Lh&9;\78o4PB\OWlAn7<JkqSDbr;%8"&#6c]Y
%"9tfa==J6OS"e&3@ZDmZE7S3'(E#Q)Z(DU!NYr's:9+^iOC3'kU:?kT./]qd!fCVT`(MPCRhgf)*:+.\hpX^2RnbD'F'6+(,E,+(
%3<`b7:s9leUDmo9,8hfk'APqgf)rAhT:!6bK<FZq$&#Y2)$gl^nIZ)90+oT6)RkHu.8u<"=G.kW882;r.dI5dVIRFco.7CP2XDta
%BfU*&J`+_;#Zd8j.*:$VI&jW7O:C\Ik!G=o0#rP!32d,4,03eHLMo<o98$Q$bg^LC$n*O^'V^;uim8B@'Ln,'=EMXZ'CdXSfVSt6
%pIh5Y]&,LG'1r;121fHO`lnV^Fec+e[M.TMEtVem=]JT&LsVM[_oG$5=KEJ#lS3(K*"((.\ud_"MN(TG#7:fAQha`_27W25Zm^l!
%D/0BI1-!UNpVs,j9bdH*c=tRer.R$%73W.pOG(D@VC"kIEhSXd"i`)nM1aA1o-6[V>gagP]I>qREC?X--#:F`Tk$Krbu&:e4RK^G
%d#hS"-ueFVi\)2r-X5M2G>W"^%nY+pl[lIMF,eg/J3lbnl"i$D'_58B\>Bb=7R_7e]>V#<a[KC51-,7OgRA/:Uq?G'V<_bqs.GRV
%0g,N'>#LetZEj+BA\rnKU!;3&;fn6j\$S,j\^p3?ZBdVd#iO^K:6,l_'J[oL7H@>QK9;fa2]F/C/8D("Ln$^<BJurWCcZ[B@$_(F
%Wf2e!7Uj-K4imT:8/\+qQqM3_ZW2$\c*s"]gm4d:SoHnCb<(ecREaPKb(?sSLg&ATb$.P#&;`tK'd=d%J]jK9LWQGF9rfEk$r)k^
%D=6>u11s(fDdR+;VD^"ds0W35Voh'fl+"$:2!NMUpD[>]!WhrGW0no,ShIEQ#K.nG+9?1Bj1t/0-Q#%V/k*aa$T4ZfORe#mPi6Gh
%5j:bHqs=s<%AJah))c\-$IUR8S,o,5po>/NFIg8s\HuI"$q9?R0.OH112>,"OP)68,jq/3W-kHNR-YG=2%YWiHtBj%PI8q\=M+JB
%g';cO3c">G6od91.4+B!omj'f>I#*BlNSlb0bEO_2\<<c2XjgXV@a5B,9)!b5$gbC>c"ai+PWkcs"19"IaLD"M<P@%3!jCs:C5K&
%Z'l''iPuI$mD9B=(_/dY:t=tBdM52MEFkk8*.IUT[b"MH-k8HS+o-6>=<)cc,&?!(,=gcJ<K9*NEAl$?e[W+M(Qh'=mYptrn$Znd
%c)N+Ja[r]JP`rm@.YheXW]H$[M4kKG';IH8LS5nPmpj@ApX8/5/X`2oU<9WpHsdFo=llqY\Bl4IOb24b8SjDLDc%<>'V*(S/f->A
%aXHakF:tjr4K2$"8`QP$T%:<,,'4GKK]j\cNR:=>c3ENTWTQ`q>beHcZY3BEKe:TU(&AKXnY%p,L;CEY`kp+`+2;I)4)JKdKSX8[
%$p6.#K8O?2ATH==)N8:*7_#I;"/BNj?rJq&3YdBh-eKKn-?.8bKe43Hq#IRN2"bacX1!sWfoA0Yr`SJJ%_[s)Ok"P:i5.=<9m`Eq
%"CuV:#`F%)q'iMd`.8hsl*A*->H8hIS2Rp?9_MuCKEO2C-*(Q8S;P@n2[4/RCWI.k=WH0Hq-jeBk!tZ__^T^uUDn%RCiBU*gu_.a
%B7gK`ZN30"Q)CqhY(ZQUdP)WiQ)m$1U,W-%ij_\!aKF[UaD?D(%](&2%<14GB@!fg!L@<.C_@DBAZ-SF-*mViWo2E_\1!-njN1pD
%TQi'pW1OE96UlYIr)=6#GU`utT*f=)M]:Dp>_4B(Of8?4STLDt"a)GH7m%O9R1IH#VZP=,',"(E<1&(+178L7>iIAFqd(NHgEd46
%;ZV#onlHW4;+.Hbku84&nPg(9IO^-fc;+V=]'6'nght_8ndkJ8K['(T%*no$!skquh@:D.VaQXFY8q-g_<H49%$#nn6U/Vn!E6F9
%:cW;t<G$+6']=Xl+>O.=O+*o#1SP+,'M+gh..!Vt0Y\G9HmFa4A#rR;BM2))anZB[bp<`8Pg!n&?4k!H9Pn]=<&!E-5a!2bYc3GV
%30]<l%!#hN\>[#T+Q>f#SHK=?9*oE9V@gqC`fWYuN=Uuf7=BfM!tol(PIBN.U[mko3'#sm2L"V1"Hh+d/sT/sksXupHe_8VA\\rk
%Pq%r[0K[Ppeab=^J.cjHe7Q4Kab;o#;3)1\#XsK4%s;[ALg`5Zi(44-/.-G!P%./Uc",PL3Nui?Bi4!PdG;0\N8lO5;`&@P"^D0P
%DXXG3Pcf!60q(!c2)pRN(P!r+TU&7j3QJM=)ZdAqXjp]RWLGhU/=JP-fZbD7Sb0[RViDUPk)L:%P6\=neu=ZP_m$;t.K\:98JX^3
%&#\<C-4_AlQ=i:BaTK1+<N($15[f+4-(6sCnO8iu%_tsJTFXDhYUe\.BNS6FaWng"aWlPrj:SG`Rli_gFQ8m.D0`3T@Y\p'\[6gI
%U%)qE!et4d(RTV"c6!(cd.0(/@[^DiE%6DqfeW@I'kqAlH`F*f]ecO$Tn#iXc&RUB*/fb5MXt'lA..DY.orD:T9a5];t%mQ"Hr@8
%J6=,tE5!<3A?0cUC-8uKCIfH#POY]*#V_F2/RZ*IpD`(d8bSeiQ`KH#qe4t-TZJN2h$g2u'IA!s&XJ=kd2:sjL/<p`?K^+E:kbCW
%&6.2iB>JQO0GbokDqDdjQ9>E^>V`jQm*gY<$c+O]8nq^^k(dI7P\s`@@NtoH/7K+*&ZV;^#enJ\i[h49<3&?3K3%!#h7-<gkJF88
%FY9N\b[s`KoWn%\+ATt%5e7iEP*:)PEg05rmbGD.fS&F,CVl1C.'o>930\"":2\Y;-nqKOgp^;GR[htZQRoe4hO6lC.f1DVMcJYj
%`k(>\i0c\$+LBDL9k"p+:S.h,k)59';feDM,pprT#Us,piE97-[0r>`Ia7d08oeOjf5.VqejH.fihdI#79E))@T>s*0BtBQM_8&J
%Xh;ES72@Jt8aL"oE5!-)ZW:*=4cIj'p)ci*,g<Qu*#W!9j;fsHpqY:5`qfb@-jALf_]_B5Nf:@P*`at1m^X",m_P@mSCa[[3?r\)
%9@qJ<*p%Mh?AY0,?HC;]Mp'9=b=GOPW=#;A9jUhKUF>:]7J%.hYb;E.QcC\r@=Fc:(lKo(@2#4Z,s<Y%_#TE"^Zuf*6D/#SZA"A1
%)OC:un'k/sQdCEWUs!Y;P5Cc53/c^J(:'!oXM_lpS[e7.&)in5,;51p$Ff;G@3j-Ua.2bS<)j@i844Rt)]2mUK6\RmOX#`b"-0@k
%DI/NTP#*UG"R>l-$UQIUH^Ha$lidr:P36YKO?>dddB4cQ`giS/pb\>D`T4I*)J7'CSX1R?,sJlHVCHhd@NSq<#m6s8L<tBk%`BR[
%T&<Gg2"l&IA8QjQ3*IgcjnXuXR@l$dA]3SsTor\=RT[^]X@g7%.!(4q`9$+#qTf>8^G\&LrufN9(%2M)nm[_sBh"RMab/Iu7Sk3f
%61,mPAToMC,_OP3N)DOEie1AicP=)H.LO9B`He]sP#oqOZeuU.??,<b<bb7dGr`WDVYFR@9Lq(h;WciMj2A-dKHV+2AS21j"VU3i
%$E-tT(tc/aqHu95'Z\:XRq#b&`gT#KnuA\BX01h'4:"gFBR][,FNufT$pq=9QNWqL<luhO\U[1anpI5l7X4F9b/oBSYdLLeS#gj\
%_50NZ72gLQZ8;Yq?\E.[71LS@CTn?;7ZKTUMj,)3^IeoMABk[g(pk.LMeclW/;$WN-%oW1X2ZLXJ4Eu`>.MSk(E&8sb]00$'aBk/
%q.R$&",*dmMmXHNC5qi77l^"m%9P)OQ/oLAb]YHr'(3a>)&aag4<WM"fI26E"=rj)KYY[$2/Vbpct&ORKo;A]%(\&arWj$eYe&on
%9q5nB5dg@R8k`Qb^o>#5Q_r\.A1gT9cK+3l,0Y=T.O,`]>0PC00fguAbf(J*YF"]D[2!\7ZcMsNF@^MDQtG7Dpdbl!bj18^`5T+d
%8>Ap_f=Ou`Q1FE57+1o7F58_P(QK$ZB&d]^PL^Op@'DBR8P+W#MC*o[ef%1r@s7%A4M2\;QCLh_Vc$WMM8ZXo#qq+\nf3Xf`\DG2
%E@_!a_Q8t`(+]9&Z\Jc;3/^mtLl?leOh^Z"-(g7':9o.!GY35<3`B%r2BOr?mEH"/\W*_4/=cOJ,B?I:MCP7l$7VE9mk]tXicGk>
%q1T5g]Lh%Q,S$)#\A\jPaMSUP0lS9+^\d04=j*SlaQT8/G`V"QghuMu&"1S`iHYeV,?g>S55V@]lXVb2miOh7IOuimJ;di(h56'3
%CO%3fH5h!kf@XZaa@%Fp^DHI("Ll=j7*KShZFau<]9g'Ffg.!>k[4iQ2sN`=?72o/3@j*%C291327uZ-]+);b4\]29a+BJ0M>>(W
%?J0Mj&p':1?H$gl8'FB)&gJ\Dm[QZKOZf#>b/0Xd!K*N-NDT?nE?OFO)%Q>Zmh#d/6UBT<ru/.\DYt8iOA,QdE=egnM)Ydp5;+!2
%'>6bLgl;&)O;_$J_Mihs3.bT_GgsJq*6<gD*mk,&!t87s2bju#C#U`V$FmEG-5o42R,k8A1^#lpV*&uBW<fVgFY,8(3u(&/:$%u)
%QCa/)M,^9oGEjCY_NLfTZ&/Z4Q;3)o'a`rKc\HgV'aY;'K"`+/77)?2*=9$.Fi;JMX%3o)Yk3=]9V`kWqR'!sWOCKEJqcZi/-CrZ
%%Iqq7pQ"IR7f/JQ;R_N`ZJD`<[i8uufHe.4gIW?[$uSm2:s<$pQ5oB9;0*qBWf?kPi9,fW^;2Esju\0o77a@7661Cb2:mYEej^T5
%0iPMB=;JtD=N,o^)jF!^,M`b+'giR7!C\@N/.>>"F\0eWkbWkim#obR(+CfH@r`V_l4'\)d$"j^(hmp@/\pLW<r(@em5(t$C3P`C
%+Xh!UJT/o\od+-g)l;Ttm&1ba@CqXH`$-W(Dm2]E1u7.@9O27V/6_*Ie'p^(g=J\O[_-GgWLDj.dRZc3>=#i074Dk'Sl>jF)Yqg9
%7q:t=r45bWl@G!6/Wf4bIq\E.G(R=:OqL&9j.[HM#,_Y.Wi#H$Hj&F78X21H'qOIIjGMqj_,%D4?sJ1p5r\)_jVhCY@h5.4E`q^9
%'d<ZR*ZZM>`!,&cc-84%q7`.pn5qMZ3:PIX"pu>rgXqa&Nf/<)ABPj6@b(St'+WoDUO`D[e)^2cd^6@aY:&8&5Y?[[1U=hV#)ubQ
%RUXa)"(Nq1KcL(=7?N]<cTmEij8)+N]$Zh0R)6#2/)9%!!RQ:Inm)PJETQ7QAUI."**S6!A<aE@=R0#JiKqD0)`\k](3\1ePt5BA
%n;ITb6Os?CA,!A.>TQ7p\IPR-b9M&aqM0CWBu28;Y8.l6(Efi`#%%V[PrsGZHb0;*$:gB$C2[sund>T'EOPRuXY+m%/?Cs0-IR^:
%0Td.ABR.6-_!<C/^W)1(Wg\0gTL8tb[AO$;3H'9ifgf)3O),J6N^m:lkL,K7crPT;,-1mK">&gPC!`hcUK]_6cg/[>%J1p/lfVf,
%ASmad.fg\3,UgDVC=,;?)iZ9@VmgB"@t2I+UoP5]lmXtd:jrr-n_u!>UCi3'('#=GN4-:<]@n6u;<oD5h.T<J0nGCo)2GJlD2uuA
%FV0=FoXm(`SS_DuD-!3EXub<"8iLXol>1Olg#f<@c)S+pUNATO*9j-ae8=$@gT"21]2=!ZDHEC??$5G@lI=g2[(;K>lV?9eS[tpa
%[C@1CBQKu%<Ms_9S[tpa[C@/=YK^'[RoO*j<G.f%c8La3mFL[);n&f&h,^(Mgl7?&q9jVT5rclJ1K>7pg,!7`(%Z*A7:Pa#]$Zms
%*sCFd^rpY&35u?``0<#aCWoH3C[FGu$LqiE^Jn:OEAP&6*_!M_7W&0sLO';[::egW.f*5gYC)\d=W5g[#78P>!eQ/sMaeDTj72!M
%&P?Vp2r#<-:B.a!etI^!2%^`TFJBG%/\@)^XUpUrUD3ti-64LVUTFlC$9q];cA+n?$tr<q;!:AQ(%U5+8;2j\)Qb]d1$Lrs)bhj\
%>9%EhXA1m.s6GM=OR(\8k?E$$1!W0XlNJgj!]ikKXLtpA9/W<#igfl*:rIujcrV!8>/J`OW;4]0bjA^!aM\c8Co8C)$"j8HW0U]1
%9[/qOik2%CF)atO;XQKM=3`frp(R-?RPkK\o;kuq<K9D)._5T<6"J?/QcXJR*;?%6-uN'NRm&9=d>Or+FuoDi95Q5h%ZtiQE=mCJ
%BBeS-[C",GY)YnD!ait,'i$3%C,K=#cL\?$lM+?';eQ^sgTE,0nQplKYmu4-"--`0XWjV$jCkBCSB:k7DH#<K8P?[8+&m+<qa$"Y
%O:n$9*;MeO:XMc9^Go_.XCjt5ZhMIcL=GMZ>[u4-JAs>nMKnHd"3&eU8V)CkC@\AmMAg[C'bOiG5APIZJIpVlmU2EZoP*f:,@-Z]
%ZDHtX:$8G-.b3jH;4RHJ6W[i=DP*3L:R^7hZuPWoM($:jrQX<L@8*@,\Ob>3W<bhtZ:i[hcj"D)8^][jc8*ncGo0LO0:.r(4O3\<
%\jS`Z:KS'>dLk-nb1dpKd$Ol>>`M5jLITu3ERp*R$Ch2SZ[)+dmjaM,?_f?V;p38t(7YkL$lCo*he/2lMroEC78eCD#?C"I#$kBm
%<,^L5lbSs>d"6/b[ECG;Er/gr1?VEMRqka12^25Cee+*8.'#)_d9O\tV',Tqa.Psk;:qt6J\i6\lMJBM(c3"^DfI]S[5^b:NNGg"
%fG>F?#^+/5+P2I-HN4B1<F*NSm%8Ic9+t&%R`N4/$V+^SaO4K[_MM/g['3>b-PWeIQW7n7MZ(%gS!F(C_KpZ>//Z1LHuB!TjV/Y!
%PD_A_)Sj^[fDnBSe>j18(bP[]WAB&-248JTm;)bI-o-;bl3q&gc5FDpc6EF))Z)i$lJfSP;q0+-R^[#/k-<?*q2SNhl50S$F^a0`
%L^KIA<YB<m__FRAq:]`SgFNM)XBO?d+&L+kZ4CO)&i*hRJ@b8&1!M?U\lbGlhb'kh\WI[N((kF,4.V[haGuXEFdGq<(r7N%6<psL
%i^+NM6+)]r34R^ngt"35\#B]\63q8XVoD=p\O4='<N[f`\b9\45kn9)T-Gh@&5f"1\,j7p"XrD81ji\=jOt%a0d)h/Si:WTfK^A7
%N)t`"<6tq^!6X*ZGV,K.GI'EK]I7#n.cY!l>Bp^AXqR`V@EXEIK>&PE:omSdQH^Xl7/:B3ksij3Vd.ff$\<9C7Ptc=8C>Kq+b7/*
%gQQA;A"sVaN'VN7_^FG[$lW&0b-q"KjM@4eW4h##'B`');[-fspltZ=35;H8<dbPuOcCi3ULWF!jMl+;'oUUS;Kmj<VWQ9Z++u_V
%H9CK+po(J8<;%17#9(fnr!o0&>"2>!b%&pR/X[MaD=j?B1bi0;o&B^m]P-%q\;s[V0cKD,6m)^$-,"ht]G0U`8K`cI<X%!U/7W^d
%T2E=d>?+7@iTQA\;qKTfAasAQWGF22c;.^G`:[J!"DXFk9qd;HfkgM=NO6V+e@bf:kbMsa\cR^4ECiiQOLmd!G:g"4>9_cQ<t!=0
%@OlO.+C2ic&D"/(XfGW9K+k6Zg)jWoB%:=n\WkID8Nb;?G66F_eMbA]^Z&DNW?/n@*$_=?FNM6[2G.%#[+d_^=*&CnpRckkHq*o^
%LCPl(iQ*cCOd!,3.I^N++,a/*@R-)YBfI;^'\\ep'ms>[nNBd='`(4)nM>$mWOYY@4s76=bKS%]')SXY=4p[N5cr2=+L6%Z.a/AB
%mKK'OPY3+$0T/Q\+SiQR(@i-GI#OnAQ^umNR;WgXTHROQL^&XA!bLq-(gfDBBsU;ehk39&\r_R=JNi5s8ZB02`rN(FPq"?>fK7!F
%NRf%@)HYl-I1/CK7V;B#D'Z)FPH.jVP^T;Ior>U1_TstfKtr[1O<kqtfIjDPOhRT)7iI.'USrr<e7L>Y1CpX'VrbI"<F_7(b8Ku"
%'h2Mg@'lmOqmN*`>5No@Kgp/,'WgCOR#nAU#_]3q(ubo8$oMTr\HguKU6a7L:4.UN8aZ^HF_E,V(C/3]A&b6d+2jQAit?R`Q#Tg>
%fg3+!AStXJXs712NA,$?"g1\bH"C33bns3DDgT*^QgJ92<f;KCH"B=`C$"CaLClltCRjpqEd=srbTp6iTh5f#+KL7cV_a"8kW6;"
%DY-ngePl')_](3sBm72E4#.l=2#8NdGUqQD@TSb)"ijVC2YD[`c6saob,13[mO/5ojJGo)Ptf)P!VL9qPCAKspHmaLF2GjNq%?h\
%XdG4/7QN+OcKcQ]=Wtk@3s/7cEPn6X[%1&C4-KF)WJ@tuNIC"5']eoa\oQkFTto6oar=Ec]S_Y2%p<e%l&naM2,`NeB!dLUE$GY+
%>`84ueAuE=9TIRa5bOX4;feNdPDeM87h9JK0e(r;?;8P\d(4[AHIB6tDb$$7[M>;b:?j4]<0bJ&8=+0kp-D3Ae6V8kU`>Ik<O-9R
%.!0oHeJ`,=W0Who-AOGNb\LcKp]5)>Za:LZWXIsoQ@tm!n&6'b62%,^R4E4u(g5>MUo4$g%b&n(Er0\D=q=\n]8(nTgG;rWdSpiH
%E>JgYai_Vd/$2om4%H<QE[SWWc;M&5X+9Kb%?E8][knpW4FrI`8Cu4C.M_G%EA1_NG1TC61-u5?3db0N:ah@"_ZuDl\D!c<<:FFU
%^p;rm.geRi't;HG,p%j`8*WND,S7tS)eB$rO2u![@79NK6JK\BeHKlF1q#3u$]a[6AGR)Aa54/cQ;tJ<PSC:4M[2ug6/6<HP'od\
%)S*@kWF7F\,HIf7p1aDY0LciHAq=S)NRO0):61]P%GkoX+?'3S6S_it5QWt4!BEoA.2'U^(_1h:%F1]o,s[G-bZPI((W!m*S\'p#
%/2sR6n`Y`$Z2Y?8@?=oFJ#k(Jlp;_0icH)hEnc.9k(tN@Jteis:qe?FF$X!]2$2;3Zc_-H.DfIMYkGF\gbfhd!]1;jjJI#1qLN!h
%iadZ=/c(gKX_eCnW?d*:Y@6h*@g*dj:t.AFIHs]d%aGHG.gm^+W!)CNB`YLh/*U*1<Te2::^O8_2kq7Mdqi;m45LU!f0BO97QRbC
%N_f'd#'oL=+Km*H`;fq(-o$.o&18c%_K!k=PigFmjZ"kB[[2B<h,qp!bauh'(#Jk#84l/oMqZK\Z?E0]f9K$)3f*5UO6`IY5!]M&
%F!*'DU2\B_ZM[=)Gu5oMI#7sBqfNt!c?X:qTV.$""9V+"3E.L>-YUF*ELIp1&#104aecI,M+:ttQ+P%:[JQ0jdTJ!>9eOAC'-7!P
%Y*G&,=iM_2iRlcrFRBQdiJ0pOkf(rpNX'@==mCuK#0nj+Dp;'$Y*kEZa:MdF4/:RfFZ%Hti(bi$-!#7-N4TCF0D?cO$;OVR'KWpL
%4m*08B7t;!X=6RpY[D9#A`:l?p?hb5i!pW0)!.7ogkNJM,35Oj+phO:81%E`^9;rFNH.X]:J2/gD<7o%F1%kXL8h*HikKGf05Z_=
%B`PRm)$rH4)u$$=eUU284-F:m<bt=S,'@L_RiT\pnQX3/_]@,Y],>NZq*+0/f'XQFk]n`Z[T[;(HjjfC68EIYfECA]3>Bo&)+b-:
%ELmFgMO10A_ra0RbY)CB97&QqABft`r.-SCNNn@"Q!7+"c7Dp]JsEU%n!,eb<UtF);7AchjkS&=P&LXNb,.Gb`7o='R<S3:-fj=Q
%C8h]rV^,at=B"XE@4du:$&,<9['u9(hZd<@*4N_HBk2_7n7kn_A_a':*UL?;L#gW:Qj/t"&HS4;j'!a!X<*(dORmCELb^O]?mJ]_
%%03N?`4(MFBca0gZR$kgG*Fb[k=oQL)A.)3irM):X_U<;X#7MOg0Oj"d:"7<$OBZEcK0(1ro\3jGE((_gt=W3*aZI+!2u<LjU7mN
%po9=>!>#ts0\`%&9J2[](P!d+"%F-lYIr?i!V!6?`eD$"JS,TQY):qaVYS`!4FM&Y"bJ`%ir*ileBV!Ko9Y#Z/B/,=-6-R=Lp&9g
%dS(fZ"_,5hW03JOKq*AiV7a=WoiB@NT`/c_=c5DW-r[l$B#lc0'mBQ"Y=E?QmjecaUsm2h'!>0SqT2%sXGUpnZjSc:O=\&.Dip3q
%Y2b*n8BP's^^:9$+BlQ@%n7F`iflNSMBA8.j^cN:*gM.2,)/'uT5iaL<6K]sQs:s7]Q(WMU`GnfU$jljF%Pf:6f6_8;Ol#5Md,7/
%.:ftg=FUSMH>D1SZ]I=7U_0@GPUROJ6=KMsZ"MTa-+-HD-JUHO+Kr'A$\8K<"TTa7S$5tfYl/7/SnnXDr^0lulT_1E'O#<&BT9s"
%-X<WEC.QBPg@KGSeh(M@il[C,VqAWkc?nfgq:!6[a`(%1&5K=F@nn(#Zq0<(l`HZ7d"0h**iK*nm@a`h.95r3!K<6PeLcmZ.@89s
%<SJ/kfm,1Ij/RAJS$,A!gk]l_Va5Z1_#A<sS,\(VfX4<'[WeRRg`r(LGnlI1PLX*=USA*r+XQ^!o$H#`>^!09=m^AKfXMPr98JF@
%IrGQNmEG,NJS^pQ%C]+W-sgl2FudXoCp&l';Uos0>dEb@CY>WJ^+_0*4Wbou54ZNZVrGc`gURocRO($OfQSuc`1+E@U'3ChXIF^4
%!=Ha/^LAVR4J7tP4XK06\!:.A%tZ9+KrP;2RC*Z0L\!p9ORWmr.E;k]gd9_;)dg'uM!Nid%:EF7'I?$P4n9c":nhD+LU,&W;:u+I
%Y$u;9ga\@).%Ksq[0^niA\4b`$TGIo[J3C_>a38[C7"T^c=]f?^riJU2e4\mV)6euR(!DaKJIgU#?-LjDj";+og9Q\4(O3^.TenC
%n%j'7>i,*QegG-'\a(Uj'1gRTLf8i0jZnS'BH*XA#[<%n@k=F#`#rV'refuoFiLOQr\eiH2m7S]o[QM$A2e0oDhf8l\?M($_f_Xn
%g.7HY?/$^`L)D<:2P:Br0.Fi0,`&(O!_V%1f5-g8FCo`l8iSL[m3oSn>3"b@%9qe!'laCr]VdcZ>p1gf(?XIY8'mcs[r^4YY9XF\
%5dcB3K:E10Id?rqbXQqI&5o[=+RcuHe6p,;Xp1L>o+EB'3.afHP0/)ZG%8>?n.>-JnG3-^([H%FX-^X=6L;8Wr[MCuT*.Rih\O`3
%Xn*MMj_[%bEo8oB2tHr&H`T)*e`%h9c<[Sh%r!Tr-e>E>0NE?S$?^UNHdkW2CMcJlVs>lnrY"4apcuO^E>2S7>k1LMoaT?T\]BBM
%`Z<fm.;S1jJti-G^r.K9MRoNZEiXD&jn*f\@(S?P4$0dREOPo0n8o+nDtWNf2[HYU.`JoKIVIisPrlK`??3MAZR*Gq>p/9tgI^T[
%BkdQ^H2d8Z9pRm7?i6FqIBWhnC0394`2BCWeTM#en0!G,leibt%$T^'!B&nF*%'2gRp>(G$B9[:,+cV*E5Z/\8<(o2(=':$\F`gG
%E)fQl8.08[OFh5f$O&/j,$l^QO4]1;)a'K#dC$AV/\%&#h^o_,Z98JE3W-3',T?knBD,1W4HIrNiN^4=<QJC4^@7eb`h4hn/TR<N
%6B1nh>$9rF`HXZJJ*,T6f9RE.''q"8k&;\e*G5/K=ZG*i5Rud!]N#38:<l)384m-mO%8tl&Xh/T`:\7h;^=g1q)L<NSn%rTR"3/^
%,SQNoW!iIu%o!ZUE;OViHGQ)..^g9e9(3%C"8Y\_$l;=r_@8rF%k4TgPIMhc*eqp0Kp.-LZY8#1anc9&O8o3eW?CMRa+L\3\^up"
%!W2T\=/[E=?+M-_?fbde-R'M"/TL31<>`9PWd':pOt<0.W7gXSVq_J(h=k_2NNX]Ar2*9\W#r:3RQOek6aF32r`ijc5q(O\Ki)5\
%?T%SR<5F]j(+&c=Y0BQb8-D66A*J.919:f*$I<Tled;c\F,-MqiboOOW?@gACYL!1EOA6)^MJ(cJj,QuI_)*HdE$=Q`;A2UU*,6h
%>YaX[&,9a/cMEEmLe4m"2a#Pt-X%fh](.k,RZR)n(TCU406'E9q35tc)n,"KiNDqO9G/:]SC4D,$%6#Z8t?:fZ6/5X=Abn-?FV2i
%Ali=qku>`W&I)KV@$$Ye^h(\fN)D]WX1sD#VMu%*NOqsdN^DS^VhL-d:qcc14BA1$`^Sq;L%#sSg3Ha40//B+ipIE7B%&(!1J1P\
%EntEj?FGQNi4V]e1Hk6:i*E<f$bO'g)j)pkJbBnE`HgD<o9,<uRZ[g,eMU!^>`c@.WDE%6[)8LVcF>sBNPQh/#SI0_Xc,bf38&4%
%,(FUhiQhuqE?aoYmOb^WUi5=:pG^AqZY[.;lOt*4"b/.DdRs2)$]u78?-70emB!4KX^,BJMJNQU--=J6?,to4ps!OSi42l@k8BIU
%0I^1Wrs@^+8R=--A1e.XX#:Pn,fIX8s$N"7k:/2+lVf'XQho<%d]oosJet1WOp&A>:=#i^*"od$BsW(kI4SLDBr\i%mO&=q<TA$b
%M(U6Y[RfE9=`;M%VQ.I2@bX)3Ji>%F,Y?XcRKYdJ:6GakbPpF8YTJ1ZAXjKS'/HUKC;-JICY@9t?u3@Ba?%V6YcP%d"Qte;IT#*5
%Oj(>8B`5fR@B)!aB#X.9U]_KX+K)`BX_gQEQVNU;\I8CG84`7(B&;^&dRt4,0ju%1rl?E;/rt'`m%TgMA*(UT&s:,5H+u(HR/@r_
%,.N9r09HZ,WO.k^6b?M1,pk!"P3"=iK+0PbY[1iRs07bnOdl4OlSt$l!H?%qA$t3uD4!>BqINh1EKLsq:LV_t_GiU2k3cEF@[rtJ
%WTbZ7gP2-6cKHHD!o7F;0cVW&3(jC6e*Wi+(_`2IO\FWEVNll&W`_$AELj0HaWb<L0?d/WgGXp02jOC(.A[A?gdR@0>r)k34src3
%k:ZQpYat%UX,">qETmk>=tVdcQXI(IN,8nGps:O?-7Q.tBqM+I2GY[i4S&2[T.tX[Ot^e0@;"(]\j1JmT5CL!/6kuZYTpK83(GQ&
%%_n2>A8:LCa-\lB;/?Q(Z^G>PR])`\T@c7[2L3.#:YY0%7FJHCFb1F):=9<WbJ(O.r8fP&(U_^-27^0mTE"H=b(&Odd2'k(Z#>B#
%pORA3e9ur!h33jcRD#\SfAOsYLA/Z?M9$(k7-'_i)C(Dp6K2NPHVI^=(B1llr6P5NWBMV57aWtQrq*/S!?YLC_YUG2a7<PpDQ^>2
%d[cB4^R%)ZEEWhMW^8Xs9n`_6Y*d9<]W2U_%5dj);^"d#6n*AnWDL@Lh;bA"O?^[-C")#i_,@7;Pc.psD,T?q,EkPUMMd2acD%+F
%35_"Mq>/A\Q;W"2g0'*HX5mOB=d6+D2R@X@jDXb`^V0?YJ,Q+V8PDmbGYu$Nq#MD9RL^Sf4!(sPY4LAkF3tTHcVRUXSo=PXdBO+s
%72FtLR5bRn_Za.US@Nf:G7AiYO-Q$Qo%=Z@$#r6rY'r9&>i$mVml5CJ[G@!OLuTsPGl:Vq>t.+>MKGb-!4$^I&'Fb>le?$to"R0g
%F,RBs';mkqo.ps8:s]\MP>ed5iWa+PjS8MP4Z:]bo.#siHLg$<q`5,tM["X%pf91h&r"jeoD!$cYs('^,Ch33VVVLSCI[:0d2J^?
%7n\5&%.b=84#2kZN2!u3H&CB?#3+djo@Nr_U;9jogbM"lW!--n5X6+8bl;_d]-[s[S@Cfr$R>=[G8)d?Z0_\P7[Cof.If[Ebgkm=
%=*j&G?Vej]m1iR>f$iUr\RGp0;cL<X7X:ZbO$%8!Z^SCmD2LZA<\!9td=m`WE'9OsdP%9JO>lh<m_X<Pi^$6&ghe%nC>gYtCk2t'
%]Z_3PI%L;jPu7dh?+X"+h".?mnbO<T[4*ZHotpG*YM>C^p^OQib3DU3riK;teWhGa$k(RMG7)ibe["ZAk$7'Yrgfljk?I^gWI7"+
%,Ul?XolRp!Pj9;/KX4t6#EQumo,G3I^Ee%npKZm`M(@GZg/%%4:AKp1O&fmr/JgZM0^C[LEbVIRU392;>_(O.c`H6VUjC*_mYA@C
%]\a/9?><0gLN2DmZ<Aj`;;Q4\Xd0?WS,'^r?-<%=%'C+HN*4>XjJ?$4U`6>q6;!ce>Y*C$Yrd$e);rOZ@-.4J_m7j"b5fj"CLNnm
%"$D]M?$s*bI<Ou_!eFBl-!R\n,tgT,Oq?@ul39obSjB"-:hNWfe6bIJ3q7QrWr7\CP3s#j:g`H/FR\ujEm<<uKgq+46Upb*Q\DeM
%q<4McN>f9k<.i(t'n?'g+`T\o7X4MKn?PUmJO@.41q`NTQ`_f:#<j\)4V=-9n4ecLcE1JF$^maR'5i1.4FYrd;=.7crX^q#(f2eq
%/JLMe_eTTIWE1@_XA<`0oS8B`6UE2Sn^@'#$"H5PH<%g;PQFDLXeH#QeMX=X>)[1Kg3l,iB+nLlG2eA<nZ6FcABgIsa0<cBqt?j1
%GtX6@_,;HrgQY(&r.sPBCr)ST@E*=#;)t?dAH7M,U0'$Nj[nt'WYUF(o<G_[l77Kf,it2_lKnVZ8+iPWWY]r4k%lHgd#6#i72AU/
%eOlh;>5KH<lq16<`I]=acjK:u5o,^m'u3;R"j,JoD4Cim;[m'$Z!7Q"29lNl9Uc6,j$4>YF:"!-BZoZc%Q-g%Ll%Rh:l<0Q8DO&4
%1=nJnF9n<eX-E5]Z?<suoR]AT%4MdUGRg7MHd.!80"75S_TrpViZ%omMUsY%bjqbPFbb+TO^HJ4djBNK&']?)eUsVgTUJD#^6Q8@
%A93fs=J\jDY7I8jPl]59+9"PIGoD:&&umD;(pnb1CPS-h"$T)K)Vg).WEXh4NGXkuPAYA<9pU`Q)7Yp%,`Y:f:AkQRnRA861_[6C
%En,1VfLDf8M<LYm5h8]D0NWs2ea!GUVp;DZ\U<7qf>)R(&r/.)_o9ksPgh;+2N%6E)_+<6T"HmL"Ot8iVoc`4#*l3"UOh^T#20[L
%Ye?YM5(EhG@G1*9[fU-b!Y7Cg`Le($+aDS%*cde&1Y_@/F;n-R9a'FW%0^`_f:^>ueIcOhb;!6>f/b%IVh$3Fi;p(@iZbh1#HZcl
%Sd[Z@6=GWrI^nqBq5:Dc[oDutX=hWlCpO&.='5q00H)6eT.T_r<_KZLUWe;+<K^WLb3FL*8@@iR2/g:>p@t#LRnik?Q&L_[Zc4au
%Y[p-M:2r^.d'p%(@M%.HGi08`2CCH_B(M4nX+C0#MG*#f0c9E7]HfK(^S[6&<u$/]Frhi<;\bHWR0!U@R@qlX2UtOce8kq4Th?Y4
%P^tcj(>+q,1SVC<7C5DT-HVIe^[)AJ%(#193=2m81[*T=:26<u@Bes0+pZCdSaG-BK*4<;cG<o,1tGaH-H*]sR39r9>u>LBEn9QT
%>Lpb3A50:,CXp;j$i;W4$I+IuYFe\lrLZ+SKf1/M=(A`lNU>F>Th_%*4JQ,5bF>@R=*#)%FW=__\qYB]am/6>i/4KqJ.@WVac?\o
%VJ%B*8#6]*68n6,m@CD:g9E`(QniE\i<;[t_Mni+5n+GGcJ/NXq\E=Apt3-M++6Vr-E2NuoBJ;9<OokK.!?r:8b<DYYKdTn-0f1`
%'*iMp:TC.H=O$CDk*Z^>5\m4V:=QRa)(Q4[dgI2)+_/&4l5'tT4k">*&j.7PB7Z8d9S#'cIj$qJDm`c,qcP#XjY2?]j?!37Ef&Z>
%f+TglU2Y14s6nQ@/=]Wq5PShB;L1K2/O42Qg;R56_B?JEKj3+1>r,:+Q^7e32cuso_FB0fT_=0LipBM7T<Z[r.r5T8,3q@sm<TOO
%ET5mBL(Lgh#+$KBA"P'Ng`s7De$1n5i]*._b]`cs0U_(UDbEDK[`geV:p5i6168<8ONZL://]dPRkGP9hQD:)Q@`C-P@<<-H+(o2
%?UJHbhi<IDSWkU@B[/?7*?n4S%1T#@4Lq.F+X)(;G%[Ma`=e"n58F9Qlk;rXXC6u%8qr_44r2M"/A%'IHEDO=))0lAkR6ukQr=#;
%OSushH/kN,N\6V!`YuZM@^0I^9p`ErATBqoQ_YXeXY;SsnF`_LhXhr7f+dD;*oY:k_ZDg_8g\XrH6h,SOJ^MAhGBkfCaR1B>-'5"
%!QV[K7+6r-ai]]oiO3>fYSk'S:4qo4B<%O3!JqpUiP7jXgUcN2Ysu`aC5-OR2gojplaf59[RiV\37aI4q*C)AM(SXTVO#GUq1Vd?
%R<KY%6LPg[/Z"u;V?:i1_e:#*3=b.OC+3gea9=.R_^uS1WLIG%NS'&03#WBn-/'#-,m5Dd8CE+I8o=+i^c9#.qHr:1p$'r*dRi^k
%7mB(m)\[X&+L*g=Z1<R1S4Afr3?of5K2lu_JWsdG?d(WO:#RCH-#8neQ'-@I4?b[j43E/lO%E5Y^S/_"@PL5P\$Okl]q>\De9IhZ
%N047!ZR9k$[jCQ#aqA'^QcjE]R<7ndp5+9QZJ-.g^S+cS]BLd09*gDfgFY"0A%n7rd-^R;dZo.J44.f.fia\(X7U([56efr5[Zn,
%0K56_51;>i`4Hn2LTD*Re'B6>T9ieg)RrspI>rLUjV-X-hhCJ"j2G);D&C6U<QhJ!JD/X]Nh^Y&?t]uc#&O]dC5\\h`b>eL^[`(h
%K&[dCa('Ws[n79kd3(C+4C+&E2@2'(;E8ES!/P4Bo1jHMq"@8ZFk:^mh"hBH0LrV]+%NeHJJX.gY'`N</ZZ9loO>0.H(s'%&kL!Q
%2Xe;e"t.!e]I5n;QP#:Yh!IWj8Tf)m&(j+)0@`N[9(.FKK+$M&_qU*^OM@HU+JR_>$P,C+V\!A]O>7<lkg%)1iYc%-I9'Wl4ch;n
%qdFRkP,#S54JNj::A5W;'?GDD\lt#E^1-$pR`X\$obE)b4G#BomlIs#$D1\up1#;(+j+p`FAgOl.M.nrQ#!)!mSm04/;0V.fFisk
%m?4<-+X@Td)OK\:*X[rQrk^KUAs$L\!=hTo/SZ8?As`aMld1lt'(d>R$uq5GC($_9#n6E\!TcULL:[ZRfGT^ep*cjpJ!ti'b.FuV
%)pqPNr&=U-fdBVB[Ui]eTEaJ&O`<_F=sR0Z.fD^cDQQ;RGN\*G"D45MWP,WQl9SVX$53+qMNpoR'2T2uN7FP_6_F.fFTjVo5ZIC.
%$k]llBl!f-4/$RE9GoYK$NDdo9,-LK*9),J2?',7$ZVArH]si^HLUaX<DFS?*<e9f64tG@Sp+jHL83t8Uq\d-@iI78C`?F[fkRGr
%_u?@ZrDJVNEWiX&(:k?)E\>@+h?SDtY>,D>;?Ob\8RAhPM#WgKIO@J[EX7=49,/g!SNt<)"@PC2c>iD.Lt4]I:EhHuJ3pIr_O)So
%<V>eoQd<`jLI!VSXS>VT_%`Fu,U)8;^3.>mf*:QIF6:;Z>2ci=8o?IVnK;*"STsbGb8f+->,-IIFB=;Z84"RAqUV[Q)79t<6Oe-L
%C.Nh,=m!-FWZ;Ac_'h?)jOkFtF5q6Y'(L2[OCCmG+97C`Tk6+-hP/D]\5+Z@3<iDp5K:F"+n$C;B.%/,;'Xq%Ak1bGJV,onSgO+e
%c4]g;qaYuc.9a-&;U@sB&:oJQ:=^!(i91hbjRLQ8ko+OS!fN5M&(A$p)4q';E.,dIc6Z(4CQrV#f9mb(/qVa>Tm7!Dj!H%BNiD0n
%5/`GI**Q+uiBbV"N+C&C.%Qb99og>j,c$Wd;3:]o(afOR0K:fB/f>\_8eq0Q_cH/a5/T^fkt\T=#Ls%_J%]-8;f2(f%uS#YNruic
%kNpAO4<9;a-*1[j+YT"-31"W:CdJ$J3rq]Y>gInQSlIRP@t;b6r#9:j@3/,o6;mFT`^Z\f/2#-@;"OG@?Q$teSK'1'@eh:J=FH*e
%RhMd#UH58+)YI.Y76\\O#/O\?2[fIk4YG6-?sQ[U0/Vbc]X/ScaLDh>$_<f;2A@@d-tBr4pgAn!'':^SULP+?$EI%+*kAJ8Ul(FZ
%92811&(`gnAj:.FX?QULkhII9JUNl,[kOBg:aAUaJ@A*@.]S_YS)c!N&>9@fJD['Ml'ApbLam,fYm8VaCdCZ2T/n0YhG5a>#+.bn
%HDW;pZmk[2\j3N40gB`Eq9mr'?+#5UAPtd>aoO>2be-5AqnuMF8*(m\aMh\OV#H['nMKeUP@TT?:fS?s7"-oJ0o$#*i"AF?4%.dY
%2MDXbf!Z+;["F7-\q`=6R`I2qjUG@r\f))U.@@'4jrY@%l[f1>2;J(RDnnQuhMr]sJqV"7X3DeIc/Ai&Tg1#p8j1A!GT8/,L1F4?
%k/*RaLf%GN(%"pc;5W>dWK9gj9qeR#O1g"aD\H"a(e)!s^s&rAmq!k%VIY7raUF!T8,:RJ5UL+-jUgN(8^4H)OG%%sQH9[fklpah
%<Q[Ra"\)X=XPB&/._L;6eR>H!C`9:u+iDZ!2p96QXU>N82"cQ&oI(A1V%g"JM@?m#,W2V*lDHKIoPenXK=/&ZM,pHTMd5AcfJFl:
%2-Mk_](`?9CS^[%klZQF6F@i.)=1e'q)iJ,Z'NPofePe&d[qR/Ro(AbEB3jLZUtu8RI8JMLm5&>$TlMd*fu*jOs"U_/@I01Qk6\>
%?)j?caDMY'L[G_J9sg?*K15)-.5fdHTTBS`:7IMO+sJ&7r\E^Rkk?MtL(LO<H'i.[+J63_TXq?@qUuW>;7T?84nVBS5ROhGAj>#U
%#XF]n^U"PFZ\f.1nZ_.b.>1^&ZSJh^G>+5H^M@"-B<$!\.&0IXI]+QZ=Yi?)#>ts0Z?"53HnYP,X@P9QPI9,&O1J4@'[S#TQ)Bj*
%6fo[Sl\8jMT'<UGJXpldjUE(uZMpt<j91Sc3!d!f1$&\GWk+<b9%p.9prGNo/K[6c$Z/0[Eo`YpM75KUoX)jdrQmG-O0CpY@V_G8
%Do>#'DR0pg>ACSq2t2ikDFp-r=4oe-@8_U1,oIk:$4AXQ.B,*sD.5Mg2J!(/X_YTrAPT[FZ[5B!8=dg[Dp[+2%K,<U!jcr@RD3%k
%S4I0%0%>ZVaFrP.5,*])@e]("M;/9pLa_fUCOuh2`l)W0:t7<WgJ!2NRT//8Gpu;SnSZSU],hV5UG\=XGK=ZTF8;76fDJ7hd[_%c
%L:;>I,VIH!X#6#V>[s%!?L/fE-33-F]<4.eW*l;TiX-f)'NKVX]O^<oF8@qahO@:fV,7K"a`-q4K+U4@-JQXXNC6!@Xmm=*C/:cd
%Y]ZFPQOn3nW@E$!oq[F3Y(D_E6Ym*i2Vg<oR0e\6QLGb#qAPjglEc<ue\s;Xq1K%;ZDoHh[tV]"arH9Ho`;ZCZ&u^Uj"l4)*Q=%T
%RTP^b_R?[6e!*X%VU%8TS^nHPH>CbP3E#nPK]pH!Q^*Rs%n?%qF:.m!H"$_!dGeY'pP0H:YL.aoIl?dqmnk2J#r"3^@?Ks2WGX9t
%IHs`MO+I3L_T/rJOoY<B)@3hS6E@L?gZ`:W=35d@C73?PEhAD'Dme.EoH^dILh,uZ-_=OATPs3@XifcJ@]kp[eC"E2O;U@pBM2i+
%BU*NiZoU!#ApJr>UhM<6DnTn*[#2=\YV6M\:Ph(J[G6D1jI=N*C0dF!rB%QpP>&4n=_`SJd#*?C@B:MRFpIA+X`!s6,`"2,'s2g_
%-..1+?;ti1:X05Y6qR6_V/\p%)0p.u%u]"LQ8U!pJYB)T6)NClTjqQ6LK]bl';#27ZZJ(:mn4GRN_pN!-*dAF56suPiMeC@hM#3!
%@U9]4`"3PcC-$?(]B*ODE_B)EQh>nsT;JIW%oKf\VN!EQ%T0ik:'R9E'&tV52nAYW?`.c=fY'B+A(e.WA+GR[UNrgn`7f/E6$LDl
%8`WVuA^'N[oW8qH9oAnsLXUC9a>q2mE-*j+jJEc<H,&/W!&(/]]-I\*EVUoa(T4D_Nd`m.eho<$QB5H-b4\CY4epNTTDC<BCTo@_
%E]3sN;1p"R/2%b*ga'm:^K\9bQPcWKc'(F87Z2.,EXl6aG)A5C'nY6).J?h"l=Kqu`,3-!q?=Jt?/pGPVZDF>IkC3M+%hK-BM=F/
%D>$W[\I@7Q>ZuMEVrZDD_6WER7T&apae?[:cR>K'%iC%!ZKVO($:n^TB6)o8PZ`1TSl)4)r[#Zq^(q[Y)I9_Yb0HNP9\LpXUI8P^
%-qh\QNUR@XD`*[+&-l@-8uDuU+WpT?g6>1iQCW94Cf!]<;[<:UT?HRK3J+28677C\DM`A"QY'Y%/'Ym!/^OPJ5!C.;R2\k>$kZQo
%g6B_?CguLLI0R]TJ>Rgm&"=:^,]XB7]8eKJS_Ok<-83WZ`N!3]'CZ'5d2E`AI9k6[pL\e4n&9Ml"-0ZaUPdjlp]jdd$EG14Q:gu-
%K#iggV<]Q$E0KY9a6"I'fW8`3,$I+Y$P+&J%6c?O`K'\WZOel-%YL\g+iSBL#67888+@cc!%`..@I8%.p3%5tUMf4!pCFT8KJU#m
%E2sIDm[VjkiBc*dpPW:g3i.`a`l>4s7^4$a-=Kji5)4;]//7c=OLF#fTsRb2Eb3V,9or6T`]lkn$C,U/>KEZK!uH/VCWZ&gXM<dZ
%qWT+P>kge6_)!\)8FfeU)edN,8"#d=O0%HU4rXO811\XdL>2<ABO]8iac:4X(m?TciZ1=K/U\[Cn7;T@JEE#WnqVITrR'Gnk/UTf
%B1$\)K>R;%H98Oup2;C`,s+OpMip]%P'dl=."\t((HV8E=qCDpa^4[^Z%VbFo*LhcKtbP'LJiO*42FA2Trk@9SIFK^,*l8$%+<Cb
%pZk[d+*OIDRdfK!.U,Bk-_)(bqi.;A%7LH!VSu'1AnY=4jHPra]8qtN.IJV+:l!o%gge8\POV5p$\C9N-^p1D+7\2R$EG8C]W-7\
%=j,>OAG;h-4H?"2Th.>ja>pX%mQr:RR,i#7`5'9Q-<OC@IVjBVh)oBFZ]@<8*F+4TXbT<1442lU.hX<7e%\h+7\.DggE.@)SQqU^
%m*Z_K.U@lp@-b:OlD@PDBgf@4L2_,ce9Q)/T+,XSV3,a!O!+E#hi]M[?_.==*7Sf-isj.5q(5Mc0CFMAmU0/N3"tBFMG!ge/cS2?
%D5`,3"@CRG\"^GU6PpY-;2UEqZ,,@tE=YB1Z8!rf+,'R_r@7e-%Q7?BUZIkC"YP>!(U7rSR#5kjN)mRH?YG\Uh6q(DUiV0S=:CW+
%##d=,*Z4W?'X`rYNu3(W6CA:&OPu3GPe&Q.@t%]B3=dO8Si"jFg,$>/&XNMClrS4hls-.&]GKUo=,i+GfPk9^`DHd*Qp0gV[8Kdo
%!D0`&7]k(=a+a*iDEi#/phOc:abq]=4[-FA'Ze=>P^ON6&FaBO2,&AKHU,ae"R;[_<T&k_&8a"D5r\>W:f+k!]q]U]cnne%XEn,I
%s%+gmqj"7Xb^p5mN)%c"DA8d,;&XnM=me[qd`E<aC>"VbbTSU>^O[pjZ9oYsEZd]F8bIsh6(%hAi>K=bS6+N$]#6jZb&SJ'2B6;V
%:>m)H0/990G\Is/UJSY"$JoJBF#eS52r:S1d_;BUA@sBai99kdnkXt/l5aFW$9`Ld_2F1$c6\6?Y#6G-B1IlW;$@D#S(?meC'?g*
%SV:[P1`%>J'(RfGA_Y`8g6%!5gMK6V1Pm]3Gi4k>AqR@R3B,%&:baF'Q%(MG/%*@@H;Ugja4tb9YaDo&QK1*=5ao'4.rlpulQK[!
%2](OIGSb5nl@N!t6QMo'F3^5;:m/>VO9q)1Zh&qU'l@erc)Btp#cYVUY(_.W<jDc2eEDS"[4`j%&q=$(6n&i[V$L-(_d2:KHpJ>Z
%39mo[*pi3b\f"(a8Wp+)Ekm@[)tkF'>?fLe$iMc:E\C8tnMu.jOFKL@=V8b!Q24Y6dgfkRlG_(!,1V/&BU65`8K!p!*^Tf(?PfJ'
%58^!u@%#I'%`'P>Q[YW2*/)c\PZ.D`OFP$@(XHN`Na9no*n^nn2\Z-DMW-$_cpck)jPQI!cXB?mg`2Jf>9EJ/XF5fa[dN?l6UT8S
%jg.g/7Z#!SRoOE[hXB6mUGu3Hj4_Q"-rD*+IR_B5>)WN&p5JEkr10#b/2&3RA<98bek@qTZS@OTE]Q1;FCV31@88Qa0Q^u6;XDpS
%`<?:Z`JIj.E`gh/p;0rEms/qmS059"RTElo,D_e"FRlo>/KsQ1Idu?'Ik=t[$TWEcef1=((M78YOs\3lB[_[1`QgD;XrU\*S[gN>
%gBMe$p?.3o8P*JEFBlC+K@%T1P?VMOjo)bd9A$fK/i&NB84@eq&?nu1Fgl?FH[m:).S!R43k<f4hC_reB)@FDU8#2XYslq]DO8_l
%TT`ShguTh$TtcbM+:"!5pGn\Z)POJF#hlZEW-'SPRpF?F\W*CqH#`)dZt>FhNZcom65P8LDM`A"pW5lC&cdasCa0ZP.QaEXQm@M0
%n1Gi>\8ub7WfpXmn*RE?TP/"%)h6Lg`(k@OBuDbf)0BmlN4Z`=,Q:cQ&M1U%cXO'43b'VO$QNWY#b@OOjAskG=(ENbQ*I,MbPJI?
%`')68Vn&>E`LrE!@bg'f)u3]\E3']NJ*3(8-/*B?B3J[.(])h4U_Q<_4,%=s.:<Alg/EVpIWTLi:a/UJT$b6f<1Y"]kOcGR6A[Nr
%GXf.Hs0#M(q,c+AcZn;<fj$HSP+VaS?'f)Dkfj:KjEa6`.%R1jMJ,VR]b_B+L>Z.+aM+Ya$2gp$nW$ZXi\%95.840DgUCI(:;<JR
%"cd?,(\.gu>V6o#bZTL8KV?.844pNu>D?'cNU;V#H-JhQM&DSYCHjIcQhSh,S<E:gh-,H3J%]))4n)+rN;0G#!9J"9N.d;5oHp.'
%N)k4H^JK;#Yb03/Bde[Z==nU-Qi>Z(WuZd>d]n&eh$`(;HV"Wo5m,5lbAX[I\nT?.R_5>#]cMf4r)=La#M`GPKrT*AZTrmW9=N'r
%mF7Y[o($#/775L@Zg:iN,O[Z;2]-5Ema.aH]Hj+X&JVn!jj+20HUl76'+uos"L)4@7g4Xkm_2Cn6S3cgP>cquD#;p5:Zo.VeKTt3
%*.pB'bHSpCr9.4W;hNqs&\<C[Xdnee\olW!n;Kge*?Zd$,pqs3>Vs:IOOs&HD\ULf0GtYe<]l8q\/gmPr':iSJoKOS[R@U6Gdc.]
%FW5$bl,a&cla4s_)d7?$0FB\.i>olAdSQ\-N09/4B9+HbP"Y_3m^LFEM&?C[M*X@^XOGS>m5`<mK0<R'Bk#i#b?UI,;<E$Voa'"7
%GuZ<'I?/q#mXB=u:66@($^c63lCkpdNs439bOsS\:_jn5KYqdM"-1f'LhH`/b6@5J.DS0o_+Gg97(_R6fk/9PlB=D+O!OOk*cDsk
%kn-Mn;Qu"T7i#N-NsnofddJ(@Lp>rXEFGZ"LO=CnLo*[/kO_=+Pb1%l1d1!n7ulstqTG7D@_(dS;'+o2=u*!7Pf>^MEmE]+q?a!<
%:)'9s;B^&RLpD<;`6[XYoT)@Wd$92LBGe.Z$_SiW?Ssa=NNO[HXp,P+T?5j.>U9![EHY"k)hT9%!!imMinVtVc5fBEPdJR+<7,g.
%KMNnrMFZ'ET[pANd4m%6J*%FO!]+>Q/MUu;@Bp#b.u]4VT[1aN>=UQ'17HJahCW.mAOAS=Ak,]*(.r:THMbip&f=@e21iPBo3,(I
%5/_NM/t"an'e*osk;sBDeh?-/SeBtsB1')B=[PskLnb8CcX+ELo*T`!B1W5SX5YpFE"K;]\8+6&6E6=dQJX8*Y)Q_HBA/Qgco`/:
%:.;#=b4N=V=en7gfB%oe*h7IkYYEY(8qRd'CQ>qIGsZ4a&qst_"t+EaM"9JGM4`03+85hLd_<D4Ml-%b)k3_)qY=FDAn>TL\5`;u
%8[5&TO)g4A.7bNmY%K0X>d[n@>KT%>FG@Y>/X21=:ucn5::m$i^u/?JB;c%:%qhhe+TGc>gMksm0PF[DH5*LRl-*2M0U?rFJ5J7h
%@-k0[8p[Hr"8/$f;;VnC/J0`<?,8Y$N:$@a>J$K#n8691m(3CVV--1;/qJ_c?,Bl=ZqCC3c*f9@QbYAX>loXB#5IqO-Hcq/:m%Cd
%p<7!eG6s5^/qM+n5BjPaQV^a=g%FJ;R8A@[VIDnCS:o<q-j%g)!7Hg_o$lQ^E0]4%h0;/dLg:IF#5QEi,?$(@?<0%O4KoJXoFbMn
%0eUZ`]RG)rgAcFtJ6*OSrYEgnf2r>'2eR>LQPKU2E.-qZTNZ+L4)'us7=[8=3pWYX?,r##;i+50J?3KiosdeFH*$KegXf:n@c<-l
%.>&el!hnnD_:2Krhb6=Q?T&;4jtu_:Tu3mjY)f5U8lg]?MUG0qV.sQJY:,HGVsoY*0cd%cd5,Er-rYrL9&mUXbh684T78VYX6etE
%3MIMm-ikCq.:;6dY!=7ZeF/!F@14rD#*lO'Wn/U+7=mW9VM.r7Db6PsS*!^$&j27-GX1i"IHeRH;-_(4?#\Ot9@1K_\gVrBV;3',
%/R&[Lfl;iDG'"$MrfPaEEN.p"07)Wo)o#uMa;&Ffm'OB$gstJ_JJ)onO$u1YEJ)a'SI'\<MA2mOZrT>mca"u61IXkDD44f[MF8Xe
%77$U<Pf7:ihRm*F"b#^^7P"0-L[ZHGKhQLsD44\m@^)D(I*]bs"p`?T/h_NUP;D9XDAKhUpj(BWkPj[IUgtcVRe3Y(lK&<bSk5@6
%M+Sk[39O7-$Q`o;<+*`1$72_iML'aVW?%88G%9AUEq>!Ig7?UB`oBJ+U780NIL[/Oaee!V35jS`3n\[s9=VTOfQs)iHCug/`e#bK
%i-8oB3VE*&+l\C+X?FSaMUp27Fq*/J1f6=q<NXW]IZ@?bM*;k%Lq"UMZ;'DWE7D%On-@dZm4Hd[1T+GHI31j\M#s.mM-K1V8!0N#
%X@o'Ti>HbFIr9aL<g[cCE2%]3'!>an;0YR$_VQF+GP$>ucbR4SWAW<]FJ$DBF'ZH.rTc<706%*kTAp1Kd!3lIqEOs/OHLqTj9>pm
%cC<A2HQuMfi/7@nTF<%4'cc5TcV\q-,(CJm4-O:4U37n0#2*Y]i;+!.94FYkc67)WdD_cB>@QCLjT/.^2:;[]Iq2uV./m(<aIoAC
%$/2bk:j?a5L5j8GArmC%-Y]?UlQL\44=hi?,j3OONJ/thS_Ok<0(7D/&FV6,\=Ai6r"=K,=*m/X?/,sII%.&PZIFDIZm6>&%d(oR
%il2D-=NeZg=L)M37/1GWKN;2&V9W,hK0BEl;JT\Dop[i9.%4fgpt<H_<EKf*)es4^0&q?jr#V"kVkD[YegtW&eZDp.2NW1gTlQU#
%&PuNE>QY1YmFj<p<c`\6n/imf;!s7LM/a.1eA8ff@^fV\O#2dXL26(K20r!&Q8Zf@+?t"uhMHrT6j&Ih,16[8X&1'N^\(nk8<"OD
%duYLiJ(7pU5\@o,e-UP?L,%(i(oTu#5DNZ<L1WO\8/VgnN'7>/2(braKt,j0<]8TN.nC5VA4CN2PZ/%rOg7*dndaCci,;LG>hYEG
%)IjB/,0A_W4VHe+<A,?_?'\aE"-LOPOUY\b])bUTDRuTB"nSAL@QBsc%4JSt*.i-Mg;S2(/5cttZ<V=j5#OEWJt\8F6`,C;blT6g
%fhkF:(fk*W7Sn9LlaS],epG`d/>T#!l7l6m$b="fm[D;[$8?-PMi!<o?jBUIe\Tk[C]ntB1.k@.a9+;cV2LM&E&OT>r6*-n#\LD=
%]@hmj6VQitKTq@P[,GKqOZ$'T8#'TP%?p9.Sn0=gLhh,JTGaP(X@kUJh(0nabX,I#58UX;O#BsT6&'KfMlm_BMRJib_iWP7#L1:^
%<e.>>-7agaC*9lt^-s>LD3C'6LXN?$F""@?\P4TCIR5E(R=CC^fVE6]^1ujuK0KLlDo0Y.@^bB/lp:fJT,eAeU\i^n4JPY[DbqL5
%Y3d+:2cn4PG/>or,4ObI:#3SAFmQm01klRZ>`itb9/V[W+tKEK9'8!EK\o;[/Ru]@pjs\.YirLS0F4_Br.:[!Qo&g`f6MBlhS'Gs
%jk5)K2]e8!cfgV\@nr!qeS:JYGu71rfr[CB'8e^u_l0;m,u"=B4nY-+UJZrO^4L"L']])Z?dPNYbVuu%5uN<XqM^TAidR;sid))S
%mIue)ZGkV.&OAki`-H5C*o2p9h$F@UXk_V/D863ljVSB"'Zo/mU=l9JTp!VY"uW>8bRhs2K`LjcZdf'4dB5"j75VYqQCGZKjd=WW
%'QI.k)9CQog'l#lB[Q[VBrm]ufEQ#r&q;3q5%e40";bRY!Jt[jYZP9OTSC=h#aEj(ZtNO(XWZI/4%NTY$oD`XE\NRM>b6EfP.Z^)
%@a;f_ZbgDoffUQVgk(3K'-#l:I>H0eh&8QZ+!I!cK*KU]MW,ad#$`6^I"sn90GH?JqmXRr:)(6m7"N>4-8G.gi2/o.SiV9:,eont
%U@dDY7>4!%_FaiC.T3W8c5<imJPBggf.;Vm2"M>*C%?/6iT##&E"h!Z(<rY:D@OfHH)@%O\#TFhm$.KP2hsH$d)26L)1jrOrbu:D
%7Bi"`CfF]($p7YLpXAdo?OIuJ6^:/8$184jM[Z:4q)fjp;1)QDoPM!F_@aaQ3edYTn>3)-[g#@%LS`M2K`aS._U&dP8_I>_=CVVh
%?ON5\$JOak+C&Go;"ou/'Fp7_ieq[gT$Z$A"iZ[16d-'mhOAL7rbI<O$`F@h+?U-JnL[S(Yp3/T'AkZ?+GsRT,!$t1)YE^$Edp2A
%N2Sd0D#No!P6^Z1#'JoO2D!V4@^Sj0e'g^BR_TelLfLIq\En0sDd$+cC5="t\:mCG3_-T2%]IU3o1kO41t*Z0YoI7WMAXs2@17Dr
%]&ZhuDf#q#Ru0RJjRTdChAg1(m9;Rn80L=q[b5a-B-(kr[r8Ttla.&UJf7MZ_JW*10XH2]i%0Q[a7_(tIGV=b6+/oXa+u^p]SJP9
%E([\6@OXms(ku'[=pEWY1KoG1;Oo%P/.Mq?d6akV4rt,h@rMqA<GIjr/,@kXcOC5UL:2LljuP[$/X&N>ANdG'[Z?S.7Yt)G;2Zn0
%L4P!'18qc-DGLY!8/kWQa$r,9fF4Tqko\]##Q%Q5Z<TSY?H8>[p8M08l/1'M2<hU7@X7mR>:J$DMrns6qY=>;.EjFb/_Wo.$f)5K
%cuG"701qh%6gMKG]l&,ZpH;h78KLbY)N>TfC^D-uRNtIn/VJ?jP^7Arkb@QlV#-ij-qL=UPRaM,DDN)$ZW7P60T,)QF4+D0Sl)@=
%;kuCJ[@mNr7F[%Zm#R92-;"uD;5`o]/A2Z_GXtDPe3cmjWnrS]Fu0]k%4)A-W)NJ4qh$jGC?AbF4jgsZYo0MS,mqts;qN%RCt>jr
%)P$$J+GrofPUJYh:18&pgV<Fd-b;6m0X-BpKkHVuljX^iOWNc8i'd;DZ"os[Oa]]T_ESX#p((JbhHtn94olbHCmE+i.!DX:PjFGZ
%4JTMgqB+?>SMXOsTk&X@i>LIRdf7*`l(lu^#poHn$I@pRQ2V#s8ghkakpY;Y;g:bb<p>*AX)ud+Q,Em[+-D"?s.rclmn\,)2ZI-t
%(u%PQ)f,:IVpG)/Ztbc2lf*la+SdTHA/[P5foHCbpJ>U?6W%HjYq'OP,'M#No7Pc+$nX,(##>\['P_ImY^-lNb?*sEcEY]bJO/iT
%oWnp5kX@$u^!.6.%5Ul17,'\kVp9i1KTK"<Z]$J0b*[J4HJeFP`AFB74mV`Le3.db^]#8\D2@jf;*/gLA]PNO1MV3BM;6=`mEJO0
%mP[,X_a*S#54^6WC'7D?KMMN:glgYD/NM8U+"8R]K@R?ISrb-k3N%L>\3R,&7kKQUPI'&Je?#S/DR_L0!7^Z^:1A4@jq+T1dE*Jm
%Ro8%;rI1s\j>tmh&,4@]d(H\hl8(8,%4Pfght,A/o4uEl>PlAQSPYn$;L4-++uF'0R=H/&ol'rjUfFSh%cXeD`I=S>2!-=([2OVD
%J%a,g#'^ehfs<l3hfZjq-&H6Wnp:jeV9C\3HBF.5$)54K[;o51F[1V$q*N9[6'/]k1CF-sLdgB`Ta/kkqIk-6MM^LP0oS4^ka>F@
%[r+HmfQ$9_8!u][9K%<L+&FjAkNj)B$R2rt*];hf$>sQ(>:HJ03CbAP7:3bISF8#_m2>TD'W1AYP'DV2qa*N?/=oN)N4oFr1oZt^
%eJB?U*W=O32YiCYjn'mlP:JpUoaj0^CF?S<p!kThr_hAsDNfRn1O8#T7M%FMkiC(3\J/+ZH(_<)o&O/_gGl[a+6(eY9s+W(.NG#.
%23FAl\i39G570HJ[S?`4Vs[1a6*(D`-\"O%8TC$H-i\r!A0kP[6*uA=44c/U6@#6r1eVaMUK%5I>'i__VtPijiEI-0Gj>W$]p<se
%PW<%Q*l41o13Unu!/F$98,6<DQ;4e/-t=#J=X$5i:Q1`Z'=g+)W*L;k*H'CA.tS;P#rL6i1-'rb>s]ok:<phga\-,tr^qfS9O[W7
%\PSD:+,Pr=+kDCCB&65,"p)4!UST''@\<<\8<gt\NZco-UPhDc\&>eulbhg*B$h1n+\)P-A!GWj=<*=Dd"ea^L8#=7cP$h*7D1s_
%Ap$=X?_4@AJNe)HE1d9E-,#OrSfNRdGs"QnL2h%s)g&#mJ)RjM78B(V!L`>RoBl>c>neoi2:WtN8ULaj6Oic6@2;'up9NAs)'?Qq
%`.=f+P"?*7hXlO#A%_&L*i('&bX*6iB#3hP31[OR!#hsc#snp=SYJ[1&:,I'=2[aBe<Op,.h*(aK*juK7n8[TB*PdSM3f9U:t?kd
%B^-SW44qnPK>u:%`Gqj+Bi[7Gb-rD;d:j7+Q5[@0QVKt3=Q>`BV,(^Wd\DECPOUD^B@JC.$%DLD6`[8n5eEe3N';)G]$Q3.-0blh
%i51T8J<5@e`^NP$0RH10)9JC^<G\Z+C==;!L9cOADuD-!MO$SmD#G6RcY/T>k$VCc/kb:0.E-n$,/1:EISI*jbHMO#80u.XB;),d
%'s-I%.k7^SKRQF"<i;0i,-X_OGB*>`-8:#7]<cOO!T+pS6K4Fo\YUan6t4*"7jt?n%/_!Fc`$M8%s^5#cJIo,LQIL\G5BT5h\$pf
%f$Q4u[)+`n@"NGR`&2.d+kcLp286&N*NeuH/R%6P:k3be,lSNK#Afc:[8aq>)HQQJ`A7$UU+SIMaTK2cDcNj)d3.hU%>;\^NbK<Z
%NfmTBgjboiQH>mk:`rH4,RHD5e/=$]X[DJ\VfQTca[T,"!TYXZ$n5ce$=u(-$J1SP`44.?j@PMC%BF'(7.fK<,DdDo3B>]F"UWo.
%j#C'(PU)pBMNO"?-3VV"]>^h:8C'hA(]QMdKcO?oAi>6WOLZo[e8M:.Gm:7l[ThDtNZcd1h&Li5MJfb/P%YmGFUl/So;JG#V[&sc
%N"Uh/f0uD526Hp6l'i^lChOqtSAI'S'X!"8rHOR;4j)QOA0qZ0k`a6h;<Ij+F+9Fb5K\AOqg$snr`dQ/UJ-N!I<PDZC#T,WL67Cu
%M1%:`bS"CUoT""s0-FNMOB4ouCj?V":aY*O4bATi]gBkD/1's3$'HQH6FcSAp(cl#Immo^hQs'4'<kYHZR`%'duD.F9D,0+-X5rg
%M&<u`qr.B"_3.3.Gd_fh'8rS4;A'%7OWPNbXmEL1rB*tsdn4'*ab#UR*fu&P6W5Dfk9sXL-&(`:WWpBAdT``CR[+D8cO-s,8Du.J
%.)fc66pq@K/:F"q@P3+9"&'bFC]+:n`ZVe;":NrE&!&rpWh.Hb_unI3eC&-/c7IBW*Rf:NaIBi`_;S<q=m\sTI_-G%+1`:LlW0M9
%PsXk,[G\X<a8p$n`_2(IlM<c7L.NNn!&J,H0EXh=,AeOB5N8)p[NWgP6`brpU8&9-7HD+:Dl01?>4G7OK@:fliZ;El4nuO/OGt<q
%aqEM%JeEVK1`t6ek_"VWH3DjGc&Gq'bDQIJ'eXgHgA,cR#WmT-OFAk^cUmm#qk/O6'+te:b&]ul]#K@07:]p^]+(dq-.g^3VD8Km
%[)c`lr)t^WIA@E-1o0X%Ymi,2X.=R#iA:SDUP6sd1s)ihiN;W8>$UlIMtJrfQA@Y^>T5MY>\e*l\Sg$_+BE.m@AHGs'`.;UQY[a5
%"HiJ>Y$pDP]MEI:s1N.Ol*URR;=:lAG1:,Ep]Q?IHebC3Pq@)I^eMWIeEf!g%\[p@c&,=E4PnS)!GtHg?>('FOJU)L%&ZhOs3e#;
%1p!Dq.@B0tQ\r=_-qG$T?8S5&JqTPcLYfoA+mRqKW\tb]S,bp!m>;4p5m%]eOJ^iZkVF8I6(B.\V[c2@Z3D^Ji1P9J49:S0I(+ba
%COOWdE$Q-7_6=J$")j6<Mac"J=C93kQCCGC<['OlJ`E,>1pq%kK?fa7-WrVG_qBW0,6W;g,jN316nP"%b^MW'Z8*-$7aAL:VP3Rn
%H.H>=<+D\XbjBW7HZY.#9C"R'KB'jer-m/?4(bu=/G-hn75T;T(6ULDV`Z[sK)O'+c&Xo'2uW\"MC[Ub'X-LF5l#^mR0(qI\N5!?
%RB7e&1Wn.'F&BeQgZYJg\tQ)&qP3.Cc@fn?TcZ`SC0pT_>TX++;7q]QUO[fQf%Le['V)LBPW>3cp1!]Ns1t8ZdBn]dr,PHMW*&8=
%;:-$udA0^I'oUnqU31niHB+b@6<OX@?'gneg?,OEU"5B^I6oXL#e(@j^g/%Bj%sTU&o*Or*U'76CA3YJfsnRc8Z+SJ0k/QT.b\up
%$6]$]6U-Ne=\\bWpd5+XSj?WU*&fQeRVhDA,Z2s>K%_*AAO>:cH1"Om'<_qOQ&LEr3F\!%2H2tSDb9ndZIF%k\CFh\(<t?XG-l&`
%BF.qmPfe%eP'@WQnO=><VOB]er,s7HOL=ua+9.>J+t#:C2TIXieY$j:X;ZTfTh@,>h5&SHo.SG@X,K>*B1[h9B)"KS=<1q4iaTK$
%']bsm-&tUQS^^YjLIRGTg-X`OM2V<ch6S#G)Ci1F=B1Y'1d%N-(Qp@9O^g.1M>%6p^21iJ@a$eni&PCUQ=@UBT-K!@X90kB:1\[p
%Da.u%7KI_ILBU:2"e;+/]E/q/!e5R[iUaOZ?"%WM&q5FFF#j2%]o="cNS666h&8*aH"\#J-NtcQ%Cs]h_M.DjC!MMs2u$)-\\Vq@
%p'1P2D.jmlZBD1^Mn0=!4EU#sUUZF8Vg]J)G>=7LD(<,6-1o]'TL99N'P_<^h$MaP\4XDnIu)//$TWg;>t5]`:2Yo.Q^>UDr3,(T
%d>Y^6P>PT29GX@7\R^N+,1M2qM&ZSaY?Vqj&d:pKiu^mYW1=noX:7ZIK20_2\B4WeQ]hB_Mo[5,#&GmNM,tZ[/%'%N#9<[r)EMo/
%fQ6\Zn;K++]_8!F]t><(Yto%=F5+j>Fha(V$a/7q4JOuReO!,?ci]!,S,.LUb=]WS@J^gXN9?2g68osO%+".#bX@bY@%:N_d8ofE
%GW9HXn=<*-hinQj#N?pb<&`sFq%d>aY0[%_$5rnl!H3p&Y'7iL/koefeiX]W7D$JeA"dR9mlnef:/=OlAQ5I's(Ofh(8Q(nO@)oo
%HFjR%Do][sPCWF`FUY.B1Gq\$<<jmqMjDP*(RDbaS>F,T/Uu9t:SN=d#%?"g@/QoD0Gu(##`Ydk$jJ&`;^:tF9nVMn@tU"]fKSZ5
%P@S,4EN>*Pp70nNi[-09WStZkCAD[E7P3+Kb8;&,g"iClN*`Cj`-TuZPIs-FGh@B"e:fA>)XE2U7!LlsdNV5VR*tWCEJBG44/od^
%d8sk,*Jhb00pD0=/<2o3,`<NuOsYH5cg=*\6AH,h?cdSKfJXc;IiK>eQ&D.O\gr>%`+"fl>[j4h7uZPHaG?ZbE6VAL,^[=r.[3UU
%i>4"jg'@;,gB[F:H<ETWN]h8Ip]2:q`"EK@&dXK^QGqoc#N%)kgO':<,u51c+6RZ><-5IQIbO,;1V28CdsX]HXs#D>I5oe?@W,qJ
%(YTuSkoJVG'FcbBFSbqlC@Zfp[IAIQH\/"4b4*J.BL!WGj2gL6LTA]0rG3l_Vhp/mDt&?"a:"XWajf$#9!-e;e'I:-1%n5X@%--a
%1H<c<B>%%CM@h"JT1IoV-9CDZhqhP3gP^&R>`>,M5O&=dG4`]9M9G\Hnq@mja#*F-?Kg-jCOSL@0Cn;kO9;c]/R:DUU3l'sR+=[O
%ItTk:5Ljgt1(*]=W"&GHWhH$oSVQ=Q7c>42$EjcCEOg8%M=tTrNh2'6Ls:>BLRuI8E^T_A'CFT&-_"e12Lu7S]1k77rL>E.VIn*J
%5'RsP-806MO6E'-^lLOopNX&rjD*C;=Ao=14-"bJ'^piplDEgskRBt([n2-SHUb]VHZrp\4%BDCMS(]+qUn_\.A-V?h:hm9\jB3I
%/oEc0L44;&GV?LTKGM!/pM($_27R*0(])f^-Ct,:qUT&!CbRt0(`l8`TPk:Z`s1R6KCP)r$i8F^H>G8u2OGOW^S"e`=1`<h/Rs/)
%U"jHtTdQk#T:4(.QN6\3d*8k2Vks$GDA:eLh)iBc_"(:@M6U`VBP-#G?'msrbpbcM6t&fZUk&)-T<48QL@1cORLl"+1J/@i$*pW]
%</T:0kERo5:\;QgM8rt-Q^koKaqX3ps3P0=:CX3#e6n;4%Gp@+XnD^97S)#h'mGMl4^6JWW@'a8&X(M"]K(#QhR(%LjPka]X68$*
%`Bh/D,;ZEOis_-4G5\d^E"R_#[K?Hn)Z`:7Dc,`_7UUhnJ!$+mHkkqDPfs#_'IQ&r%84jrNi<DQ0ohPSIT)X%&"8a:+`a,]1hdO[
%+uc.,]ifY"7l3f%XGHLSZe?BoN?DuedD_`A>>j7PV>D"eah.bPGjFliWm_\P:_C`/.f</*m?Jhq`Bocb+=)!VAV>;K-P@ku,..^?
%]-0q,41,6/Wc3(NkN%pC2ei5B"ViZ0%+`sF\d%rHF#HW+8[^\MII-b=A>@-4=78>GLePeg'!sl_Km6efndESk/.!@`'2&Q4!a*[5
%N-rX,9KBP1D2lo<\ILf,,U+E+r%!).jWgOn.<JqDe?riI:>l@^^2LsB1[&RmE?E$Q_[S':Vlt$jjJ"l-_>6^7kFB%<?`%#K/KBC;
%5cMsW'985j1TDh8@J"?j3_M4ED?rDZDQVf@2kc<=3ZR=Za%OoK(cr+Y;LcNBVi+dI1Wo[X'OFW)0SC12(E[;p>rEMX&\RaFNI''m
%?IGd)=kf4EK<,4:WD$B;:I`Im]rbr>fo`m;Yf!iu[1jeT-Z=&c4FrRtL1YaeGTJ,PXrWGS>%#!C?A[AiS>3>2,DmRX]Soc6LmiI.
%n`Su!'R+8:.3bp./ODRdglqUd/qHl63X3c4:CqO-kZU->gfe3D.p@lC/nHZ?lU,o>f!piHd+5@pMnqj-`OO%UWt?fgAm7`km@o2?
%9'UP9jiTegjNto2>;RtNiTRk*A^,GuH^*(1WWV"Rk?<cM`7=C'#mESj8b"ps:am5^Gi9EW9_^KCl_j5Z8N-^qlEh30GI9OS)';Jc
%C$e'O(30(\SpsleB4UG!k_E$W?=Tp4GXe+<4EtFoHP&k;pSYD[[NH>JZ-^gO,'hGo`@3pE7,]%OFK#Jo_eM%]%2=ZV<(_/XB9]Er
%3f85GZ,L)&^hYiPGs0!iE@B2F1CO'-o7Q;7\b6<RUjo:--oEkZ@S#)4\02p%9PA6KO4P-;N$]'>B%1!NE@Q5B=R=NP%CDc][99gT
%P(lf]#>lV.R[PYpZatbbpN4gO]h\9(E'rK%JAZ0QZqhCteU["?IWSU`7l;A18UHGr,9^CaGEW/M"U.e:?k?Wf`Ei@6B*1N[m9=[2
%69idn?b<8!KYpO(6F+*m@;1udTBJd@0'1l<0&c4"bsjH$AXM!c2e&HgSXbVgXe/B$WKF$5],n`Tj3]A4+j=t@)n!T5NHLt,jj?Di
%#=8Cr.Mh7JX_.jiX5lVmElfX:C3N#>X^mp'Ps9rbr.UY.godE15ps.[\B@P57eBd3[[Po865%DP^/-DUVd,WS*'qf6UIZ2[9b3A%
%k=lm/_JaM%X?HPkaf?4)3JY+M7i-eQDM`A"f59TN*nQ8HpM,fq?Hkl*%6jTY:chu'EK3+H;8O[%E>OZW$*VfUrMF'*QIcCQbl>+=
%%%aPM90+<1BB'O\:0Z)7P`h@g3=A/7BG@TFdR-mhdEdQaTc:D3_4W'(&kGWI<=;bn'8O9'b:uRdO9(WR,nN&S_`l9oRd7b^Y>&<c
%H=R/Wi=Z')'QaX5cShT]<>Z[5>`G0"Xo;&!?l.obG,^'=Y'D@^<'a^7<.Xt5dF^gK7O51)pm4T-FDWs;Kd:H$[B$.gJ];Z%Ojhao
%Ms#m7e.d*N?^l0P>1CJO6KMR4FTcdH9JZFTFVJ(*L$7+8MqYfZ!?tHu)Uun@[Z8`dbL&]G>05Fd>]e25jnOQ"P:\>X(rWj:$dVHS
%<3am//pShO=i(;+W`;cqi4mRZp64>;r['gNb"T#\6(NQ@-eAsFXm.`VZGjC@VM)//&e+_D;$h1cF"=/[+N-I>3Z/j8\:.QR;2V*Q
%ThqcCLG>R0/b:[W@NL8Q'FjS+r+d1*350YO113P#i8m)t*3_?(_)*obn=0L+@_Y0G*f^FT;CCOcY#%J3%rHMoS"(eU7%k#YdiXET
%HQAD2qW>Uo6[N,oO*'rr`B:I%X9Y!6'(`=c1;X3]EMs5%>Z.mO+NtEdjTsjK@\GR'8qFE^C,-a;fk?@dg,:0H<mSa_G7e8$@<<*k
%/KnJf;HY^F1!Qk!O'3<7Tq<?bJ$_*ARQ6(7e1'_neuGA2%8M"`&B,0sSB7>=1[5\RN[HfpaB:IXF)q3+H_(WAfhjLFU@=+"5,8p=
%l+T"\LTl,XKG&!nn;M5orlo(%.1%W`#>OX$Va@-R0.cb%U$"3mCL1H\-#(A\1'eOr_)>MtqnR'E@R6SE=Q4I]j?tC"M#9D%;Z.e]
%7i/@`K"=;Kn1uE:i[4]1T?ntN-YTBmBUgH5M+W'EG$9]e>X9T_clnHY&4J^H^WeTW/V,-Q9ts5[n7.YnS=o)$[(F3<($=Kg?3&Mj
%/>Hmb7,Kr&26Y?/-r+tWIL4+BKc&7a:>lb&>SD/kTMM$j+L62,*q*?qn4\bBCdnN9q]5WOkkU04FWp$9UBRMiLD5Nn+]I348j'b>
%BdH4:UsgqNW@O*3,#n!d0>6bp\h>F(@$FFG7"Nac8gFL-XXa]RR7<,T/@lCLZ!3X@0M[s)9QO%'r;'=OF<kFRD!%nh3P-g`fk.#s
%?bQ*66leim(>Aj%E0H.Ep[i%hh\4O%"4%aH4X:-7iHG$ff&bXS5E&W_^@`dV.6OA!iD2U@Q:&N'RrW;bD^kT>d-Qpt_cgnkkl?Fe
%,o=T#C"(-C-bC$WZD9P=VQLoo2=n"q(AL+#B+eo'X=g/.l+f+S7ptpbG5/D]Grb#YLV2KIpWu"5OVg0U=S"VCreMlGk+&sufP0hj
%c$<]D\$B(+HKh%0>bie.JDeT'\W).Dc+*#jQS;REr8u:b_jgE,TW%)q%BG<#BQ21eZ0*&Gm>/I'-q3GjmiXB-cPO?1nKOM>2O$-m
%CmnK5GR@$;Mk9Q0%mH_L:t-J$9Dl+hPPe$]K=R&"a9G-b)8'@B`q"ma4[<jde'n`^;fI@NWaJDj3_AAt8HcfX)1QLdeRRiC`5@R;
%M\efD#_2FPg1p29Nb,M1AZ,VSUpll_0]$5JC0)Tt0Iq3apO]^,/t&>/(E+*@#P'<:Ck9)D+;KXp#VUCf_Lni;DH/4D?re`EnRB/V
%+-+54,+XHhM[%kLm8a>["l5Pb8RC=(i,)NZ..ru8rDIaaK19BY#Wg1'JOU+c<_khLC#0Ii#;e=H8$b.iNfDkL*W"4R/\bUG*d)I*
%a:s&/]CZ'AUYPlc<ij^qMdtX\gX49o>e1sDS>8`r3&B3_35MJG9g"2`f!H3M;,b[U<tFZH!'cSoq,F7HcR6$7W!,96!Ps(Ek;+oi
%)&R`YV?>Goml\l/A(qa]CV"qO(P\1fXd&t(E3bVY/b,f-jbGMbq+O++WG/H(XaFF7FE!FsQU:AhGriXH=Hk6t].H_,2-;kCh`jh=
%Cf+Do6BX#:L=P),$mQ2kR$-%`UGtl`p'ZW/YZatJK;0%l2/.JQGsKDq6($!\]P,s,F\"#5]pO5*&88JeW%e;TbF3'6?gcZ_)MQAt
%9!L14J(99Teq/7;''E4$QAAS3.%4lRAi`GU@,KNWRQd0(73%5MY`Z"HGkKdpTG_22k6lH#GI'ZRh)#%VZI$Y937moqrU"i'@u'o1
%r'm.GH"A.G-;fQ9kCM*DN8Z*idCF*r$L?N$@0qY4UK=!sD>%4,XY4Lj@-gN^rq(k>fnC\[gcE90;("p:h.<KsXGsbb2=6I2KTk?c
%#ckpQcZ8p+fVTRBCJlf$,.W(12WcpJS=5\"5!>ZbbTod4VAb4+UJ?sT]$'NJj$Dsm_f>4JgVYSK\K3D+Fs!CuG)n-I`ab+iET4@$
%&0W&[2pDL:T5EG8B2'7&-j392/@W[j*%<tBFD+ha9A7'6AXFmZTB__1T442oOrYBXU(Sls(pqk?=Y#BGZ"l@.=]'cW;obsW^'@^%
%Pu<92K3"EY5<lQkNb8'bF-;@u6f+Vjb*d@/Xk$7r`$:6./1js[Ak;Nl4]'%nqKjl`N?<DePgFomR\XGrhh,0s"SNHTO8ANigmVuW
%)V;N.`#$8+pXdA>=sIJTXeR3i5M%sHIK("4$,7`)N4_-m<[e9a?',7#G2DM*F_r:38R))!1FjBO[`ZC[H>cB,Q^a]rp20\2.FQD3
%,'/T`'8khg*S]-'E03b*K-JV"LUiBa0aBjYjOd5@EgLRlYNIO44f4:fep2^2'rN[.JDKB9T-:E>5Jr6Co97K38c?D[,jmd4;g7F#
%BhZe]SOB*Ad:^KkP-B@`o%A"<l6Jro]Bh1LpTBruoma#@,3CGfT!;!I%Zaab8oG<`p7Rk_X/=O-NGHP!]dTJurBg#5F&B"LMQ-P4
%EBcN0N8M,P!bn]]MdbFu1-AX_cVEO)-6drnjj6ut[_.>Fr40W2Cpak#Jb.`uo@)K#OG.FCa5IpCFs8SYgKb"Zg*Vr`f]^nuX:,au
%9]QB6AGnU!KBgVOYVT6+Y#A7o://,`TBZlO28?.9#@-&hdLRmCc"lk%OpY[U[ZJ[`:6q'LADJ99!0Rh7_g"3g(^ZAeVT('F7FNlB
%UiBO,UkE-INA!Im"h)UKl10dUR+DCRAn'Z(Iuh<nR<1[/'Up,2XRTh\_g*+!+hUH*"iIXVC<;T6J"G`3BiCP2j>mK4kLL=@:4&QK
%gT49F1[eJ,aRI!,jY(/``-4RjV)`fh"Pc(dgJsJK^(jb-I0_`$+>.j#L+PN1Wl#U]@3i1@9LG:X2D4SKF;;47M""QJn;/C#*(j&u
%*ZI_(\n]Br7egt,.b.>u.9MB2q$fFYaLM29`GWc)0$Un\#'LuoD48*frP=7c%KU(3P'%Q_7pk!koN;(Q8ldhhViCN$JnCJLX3>pS
%dkY.MQ57HE50oHXC_W&W7ih_e%Eh,tO)7&j8N)213kA^:VoDDJ6bW+K0;P6Kg!'aNeK3>NrBg@%4\#3CS][L4GC?\a(<"dp+SnX:
%+k\^84Dfg5a8>%f2I0*ni`^=CXjI>>RlTZ`fMeIu,h48BXCj$[kiuW1pCl0)L%*uiNW8sRQ2fB7PpJpu[VIkmM4&W7oEku&[8FgT
%qZ9E>ht/+NTrQDRaBh4^VU?-mSMB4E++Q\0a?:8#>#,Z5f_+I%E1rm5Pt2$.5ma:q*[3JhABmXP"[hP@G"j5BN>[UoHYA@6n?e@4
%K3C;n=o4o%pCI+pCXkJkOM,1^V#!q`c['[<L!cR6LBRb$(1:+D7.^[Tdck]KksV#dD+q'9>t/SZTWanP6U+@_X4`+pW9XK&lDr@b
%'A[A!(`H=\'^mi[&.1tofgrpbXF`N5iPB*R:Gdr5QV`l$P)Gq;`qNV?"7XXJ/pa!&Yl<>'U5s`$GpO7KAAEH#0*ajOrulNo@LDMS
%B#'(;VV:]dob@q)]aQ<\pM7iOe7@;_8C=Oi=koZQ,TN]<B#W*f.Rnrq/n;15l/c+J.)-hQ7.5h+KGH_9\$hIDk*Hnuh1_Vd5QhA2
%EPKnf,!fFE$c[e'6)`n3FTNboMd%591M.]<IPMI>pK8hilV96t)/Me]%Yo<Umc[5<(GQXTLLeNu0.?6Mla8f!*)=Y!p;81JS'M;^
%d-gg\\:/hPP+4SO:j(egZUM6ec.mYZFjdJ(2>[%<8ATKQ;@G&q/#Lu,1IZ`Xf_Ip(PC</^d7sURR5SDKGqeT>G--h=J"&QkrZf#E
%Y_76j9f/=]AI7iCqN,;to!sVqMSd]G]<%3cG_JVV`FmF)>SZKM:lB4uQ/-IU.gUMO<IR-uHBlrMT]k/JK].G</nJX)cju8q]V[^!
%C>#8jd`HDJ:&:5Mj<Pdh9I/-UK^`2Ycp(cE5YS/<l1.FMNbhm$\rd=>QKr&F:b$Ep/V?62#"a4bQl1NEOKgdQ)&9=s-7b:^O%PS!
%O<@T@6>$H3,3M+:1PK`tm@A>l/MkY&#:6X;0fA3K51.]:P4]:_<I7Yj7+nT2_@([)#f106lie[B"cdf9Z0<ZX7M7q\0(G68[DB&K
%OeL'*Re;Jiin?kLeb'(c&$,nRcOjpf1l:"nb1/%IDi<[e@,D\Lp?0p2U1PEOr&M;6`D'NB<1PBm="=A*_/j/*&17^POGbBo,`#I*
%:l5+hi,Ne\Ln,p&@>**T^(pN_Lm-7Vc(RiHN_]SDglgYDm5L:2Dp)(s$r:oe*UEk`c&kiVCndqQ$KW#!NA+4S6%+O:MnO8HJ7SL/
%__Xn?8-7+Ld3U>!.Wogk-iKQ4(Cl93qc^0E:_Jd:]V%p/0&EhC^Od`$bOCJY+sYED$TVH[L;S#CmV`CXdR<%3]ekOEH@7UB+"_*\
%XCdlo8E))oX*s)!L"U.O=C8U900*5_1LI[i-+7Dh\+*sR.e%H(]_GHV)R6uIqhOZASdB^Rh'Rr4*M^&\'=g,s;7e[V&VKDe.E#K!
%8QK$&8M@emPQ'^E9j4.KSQYJ3!9JjPGko6NB0ob/).F=3FKX=cDY<GR%!:e!\0MQ8LA]@-P)YIG4K]6%5djqtr<qo2l*1gB4l#?b
%8csE:OANbPPR"WqGX6aghfQ(T_u;r*L]&qoWlQ7'Y.E_<h"'5XI93!gT$]ATM-NKEi%75C>ak#>a\a&O,eL@G6U$Mb+&TA!Hs6q[
%NSH<$<h]1:(G16;;*lXS6uC%b(RFLYRAVO$gHW9bC6kq-@cNVG^7mW,#\$4^)OioV&2cTE?[/$d[q5t2MS./.[,Y'ER'/5Fo6ioo
%/f$Jc,]Zh@S$3D^kEjpoq2)bAFE>X6`:DlOS)?$<ZP=-BaQIr"Z&32bd%69ibL1F$Kd#D>ANcP7'_Md:ogN'^=LGBc0I>dAEGcQa
%X]^XkN8R#aWp!PMN0,?@g*JRf/\[7=(RdbBTbmn2M"u5<^i@Md]GU7CS'TWjKNAlUZ92$012)giAt_0lF;)?'AS?ZR*A%s=!NpMj
%:VWD)EI*p@'DM\f9ilj$;+_X*gL("brRdPhQ^%@6b`\O(oWZb3Q?>lmZPlE`MBW2.3ZXcs89S\Rh/nMBWc:E(qsUVq'J=?JYlJ43
%)l@O<H;PYni1)=O\K/`CrQ==dc1?$jB@sIWEhE&W7M%'$=M7'lX/'7n\2CDbA4K,$\7).d5ECOrpkO*5PnU3^>7e8:-l@n1\Tk%Z
%9u;H(7R+o,?<.H5-R\I3]b%mCL5jc0AYV\+6Lg<5/qgj%.HJu?4[Os)7jYGj'tM66NBX3h\[0-qX]6J$L.]&r"L/l-9P.VFocaoL
%-QUZG[-G8$+:?_ViWa!U$<kT0TM:i7RNqpJTII4WGJ-+4S]($Nop4u8Db`0<l9Ze,[[&s@9i$&eR)l/;"X\X;F'>e2)8"+]6"40B
%P"GM*8=YL`9]QJRAfY1D/TNJ]?.c>.6^#I9rf:B(f2NV&M%6#RV4n#7`7"e6T^GH@C]#\h=Yf2FDg_6Gb!3gffd**K*84BNk[`#]
%\I:E*rtG!l:M0Xl(I\Xu5:j:+jQZTqcuJJj]res93e+i9PJZLFY+:mk!%:99[g!jad\U&?Nu+$"][NG'^8G<'ljZ"uUrQ5;$7!9Y
%gu+a+243MLC2;0n-Cp%i9#%%Si17#.L_SoJH>.0A;'q8BT^"K/"EJR-Wn,rb3GOP?XZ8n>187i-*r6c9#4HZ960qe$e1M1S>ZOJq
%#`<JY9EaNeFN$`=(8l;&YRaBmVlHjD\)-FQ#oO^3cGMK92ski_'`TA]YAGh&VF4dP/C$c=@65d[4CD_`fQVIEL(=C'/$Tk)L^Ym]
%-!?>r8^u@i-*<,9O-]&KeLXRO]ieD5:`N'23[h87fpu]t'r'f\CDL<"kK]]_V'aN,<)FM4lgngqlTP;#;7m7]\V-^pOM2/[,e7g,
%mC.i0G^>f[JL!t.'I(.BGoYDR1%=nSA#F<\F344H5cUH;nZJFBZlD*i<l&rgLo]jI(NG8A@FQ(G17bWp4"62r!f7-jne00;rEV?\
%Bj"n91il'og(4nf,=<>qD\UihcB@@.Ud#G=3U*)5;pQ_KZ4Wk;jL%<O<hdpqE2eJ<+11&W58V<Motcd(J`WF`:atYpM7YdXZ:/<`
%][3pDcc'!li.,8I$kj.W*GC'D4s7PI=cfjNNZu%lRHS9RX,hP#YbS2I7]>\0JgU#eRab5[lt&LSlM:*$c^^:WZJm,RqQls8/5S_e
%?-o>7et`=lh/9);]e[V;<j7XFV?^i*i0'V9P4T0Llp;6ip;G`p*:e'/lc=/-;OIimUT[1-k%^"&RpqSF:m)+7P]b]+6)dfNFQ[t3
%B>-ZLOAI,a[Z=-((#Mi&n4qRWEf7NJiasY'jFm$3.(*`N9E=O?>,PC8Q]ZKrSepUt,3OpE8H;L2&ks/O6IlQ2c76pcZ]pe`0>PQ^
%!%!WH8'r_n55:K>CW[[;C*NA_6e/(]6CYN-+OEJS<?ZfqVK:h(5+?,QnsA"0@]&BK9B(kBfb/C_j&dssGM($Y8g6HhmBD*T$)`tJ
%P2[l8caWC*r3?chh?&XC@&05K>Fn(s0m:[-V,,oIc/D2[?"?]_^Ba1`^7H13[QN8(:2A[&H(g&S>bgnX$(da98`B83GM4f=EfPH[
%cqu,QNggYLqM'$CGIkMta]YYo;hL)cC&!$iG-,DA)naYuXCK:XSiQdU:6DJZV%2VMM7rbE@ZCoFs!P^V*CbXsW[$gtASCVdIYF0q
%meEOkWd9;=f6#6/S\Z,0Lu9s;@fuJpc3ttMO%[7qFQ(VU-;R$9?m:2';2Ipi[a.mTo/+QJb"3o7k[!C[C9t*N@-016W?M7uN_/"'
%U;nh9&h_B\T?>u0^;<6W@sEd""G,=:&N(@#?be2u65RsoK--=gl7:N,SGClQ#j8k.\Nj]R%u2lk0XZ*''jT7dbt)Nfj`f@@h/>\f
%@'X9Tmg7dVj?gVs(F*^]Pj;dhD5J3.koda-IJj5R<foC8G'C-ogIRN!K\NCah=R2uoFkeiG63eA?RC[lIt_#8odD4Ina8I7lqT<E
%AoRJd6AlkUmDj(*oOb(7/oX<K?o*.f;*FeR6>=YPi<G>P$0l0k7)Cnq80P,d*$qH#0%^9X+%f"R>+OL9Y3HMk#<t8O_Prot$rq):
%Uj2I^T4]@^4pAUt8mQ#UXJAud'C`%skI#Yg'J5;g.3)r^OThHNlVM42q,h,_\7u*$ldtb,neGb38=UK@8pRh:OL6"lDEn4qISJFF
%(#U'8DbQjdHg'^/.!T7#m:KC/qkDD#4-;LgJG@LNR$`nS*>qXhP6KpkEb0O$+F)BWl+C12DObLA(K5T'65Cj*5AfXcG.acDV`D%0
%ppko739XR5^h$_0UVRE:n:4e64Qjp1Z2[9\l9jXb2qgc]ij8$EB)!N-j1+#)J&@@]X6?_n`Tot/YDM8<7te#7Es6]:pER'D;cF4M
%H*4rGD&1dfRQ9F%/pm,=bU29Sp?Q>ic2drUB@i43=Y*+>BUkQM_<\Z%1bfSV/2_EaF6liTSSrQQP=q/M,D?]_29;::ij'HrM;7mE
%9HcR#og1k`njm.3YX>&\+M)fae!MhK//ZO/=iUZufF'gDlq^HoT)H7h#WO<V3HH9E"Oe\BN&/pBK@R_gI?O[URTSkrp.`Orj9>6o
%`l?pmbS,TOrf$9WO&.AFm_8Q(A\Q4RAB%q/[bIh,n>9>NPi&n`%'RnXpk\IMFj<fZ9'*X8)*5b/O=qk!jDTgq-'UiGLKP<>iR#EQ
%_07c)!c(o%3u]-52=#[E+IK:2@YW.lY@+Z9<VcS6-ECT"0/-ND1\_Bb>"JE)pgS+]pT1?"[i6_;IiR(RFD0(WZX;Zc\(P4_?X_f/
%FPN%WS'?+9Z.t=p@-3-\H%G_W7Mu$MP4NgcatRTOqpA<ELMDR#8(;UPHaX`XLdYKGa)p]uL,XtWI"0uc1LY2KPtQRA*jDmTk[#54
%C6\)lMu?6`%#H^hj=l7HM+,'f^@_Ud@;u`C&f)j?+M\RBLXc1;^3+J@>ukA5'JCP.Yt:*5C7X>*.$7a94ipIfnJcP8R9rpG;@Bd#
%?SIegB(AF@UPX-2=>^6)Yn7$6:/[7&?(%1LW!4's\sH`q@N(^+)G.qN2$?]EM<#<58bNDX%;'Ws^*PA1S;/oWi=j,=HB9+8^En/c
%<!$Hd<CCeV0+>.#/s77;%9HGGHpNi*?FI-_o+-tZi'NJZedoT\9;h"%4:2"!3l_Rg`;tD2qOM&rM2Sq8a!#_mas1s9[r,o0SE,Ml
%a=D<F'?uJQCM[_^[(<7b8]J297D3/h'$2HHPO/#H0KA;hE4-<Nag,u^jB,=pksB7Q363(6LCDs-qLn$!nG%;\Q<b/35#@i;2oXXY
%cN?[gW1gN,N]Bi[%N%R-l;#Li?*n4mJ<R^9gDu29SBKNjr7htQfr@#r$U9>=!@]DMd2;lLE&R=dlpP/f,4apV^.Q/3lM.l"<>aQF
%STj<O8`$<sN@(Ts9qG-EcX^mte34LG:^bW:BWXWj04S-kq),jH>$&bL98@\;;u\tD[RT6<0DQk>rBp"`l@m='H1168K+CB1f:jWu
%-h7<pO[&Ladgr!:8Q6\B1e_TG*\T*:m>,>m\abc61b7^F[^Cu?\BliKM?0+:#cHLS`"CACN\J'Zoa_1kGL`he+3:Uu_E[dRJaKm,
%GGu2.)A'aoeoLPl_q?@[4(h*TOXo3<Q^\E##"K"\`h.!D@lBDh2:"8rqq@rVG^[l^2i7\$e&?oAMAWbd.q<WEr-B,\F`uY@8XepF
%[BIk<:V[@XrS!*Xr0@b-P(JlPSpqW<@tu#P0.)O+7-&s_egL0npKcck_4Sk5Q$((laV_E\n7%VQ\j1Jm?PZ+adT?eV$r&=\lS)j"
%;dN*kZsg$SLJ_V2bGS)J2`it\%/\VL*p_q:O>P3)P9asC%De6*,3]0bAbUo+XoN1p[rBnUU$_>^L[c:,*o1J3^P%HbruVlk7$Ig:
%c?Zmbi)0IU3,=KWJg5<f+85&7WI9<Yo?_P4W^(@FWJJcR8!t/(8(W,#0fMbX.lVVh2l*)hATI#RNgZU\]/Xm[)0b=<,]9j\+rnqK
%!jY*q.0.+oZtlHDd@5?!gbN0e0pDU9$Ni=8po\OU_]^Th<<m6;Y.>476ESbZVKf_Mh>532FCUV)d:rXQ5`B=O75qdsjpGPHDKIgp
%X4QeEU+pNtc<`s6^W>c!I',[M(o_?W%7k]ElQ#"#;cF7o.MV;&Hb4Z_kiWR:M?I)::c-"1rZ;)X).$Y.;D_%t(%1?`*T]2jDV)BL
%!S[r2#TdilPo;@D[uDYCeiH2AGiR>^q>sGUkfaYcM-;lU#Sp(l\&%X20c6n"1S:#j$!GLsHmd`G5qnG'lWKcCD$NZY(aRk5fZs.P
%M%pEtS.H-6fPH1i<e-!9,H[BR6nh2'&!EpC2(-3.%34KX&nAdUjqg#S'`"J4Qn9Icq1]'46BRlRN/-6*'O't!"rf49k1Qu=d<kXK
%_h`>IqItJt(0`Kj1@>"[`]c4D%MIt(.@ag^SWa-KQ,)Oi)FejLa4lEnQF"f$UaF,PAZFGOjpk,<(+!7,Xh.Fg98L+4Y@P)"];[a$
%&_*+-r.[,2WjC3aG4L6[7&Xo[QSe-raZOED6*<SsgZCG40O0k2DXhm77kii_iPmD*>W*F2,!F6-e/QVANYm.pGH[P0GabF9EnHtR
%+Bfk!&9;ABio,Bt;M_dm6U$JCf[LRdait=VQDq&$T'Y4bp.qa(eJZI<>A\;W1!(--/5K_RZ3pU&*!N(%@K#`K<s"2$X@IS.b-YTQ
%(IF7ZD2\KBBIhce[]aT5#aX8$5>Caf5:LI]WJ+/YE[,874NZuI.h\S+6Co^_HuVbkYd+A#nYMMLi"`+tOB)^A='2&PFSD5!P]OT"
%^4F+?I_.f"U_<p@gNb%'0Ro)OrY07?&Bs.(a<,SPDL59HNk?(%SAN8jPSh5=]Zpuqe+6J#RV^q9:k)^OM;2kG/(br1R)UrIo>nr,
%1X%<l_-c.!`Q@9ka[339:5G@m@Y;^_7LiLH/Xl<1)O"qb>OQrj6Yml`$p(um5dc-Y=1DXClUEJj]6:^$l-s7V(Es0(Uc8<BHsPcS
%R?@n\Jjq?B9Db_`"aCb%lc>9uG\Y-e;CV4.^*/-rcUAn-Y@;Mg'+oiFTtpj7M_Jk9cqn&4+iGR=Fq@-*W`-h\HH+GJs*ei\8:Gj.
%6f-U,19)9e+SB!#V6Xl13*,[_D*#L7/dV"$^T9ITdKVMdEiQ=?k6<_N"*qn3^78D$I%BrUF)<YZO@H/F^+kVRQW@>J[[8MuCW,r2
%U">R:`S<0)@W&De0h%tBchMR>\RE4kggJlG-Fl-1gV+9DWrr1+R\Z?ZAc";d0V<8<'5fU1>)S\`0u<e8Np63k\!Zqo9Sp3F8a;t@
%gURP_SbD]rgCD.hSD.X$($%qmkB#<bDOBlH2ct9kCid&$Hn\;9QjHt3.H[t?$2)Z,h0jHcPimLSR?F``[i8#)It\BY^P$=pB-Ju_
%9`i8j,K`q;$2t"@XU-u5=kE55_!pQ@G3IHlY6db(D@_!)-:hn8E-9K<GjC#naWt5%T)N`8LhFB:9bRt@Lu>Y(_JLG7#Mfs>D-7]"
%C:RhX(0Crc=a3a[0+1,taaDN^=^Zeo=^[UYR><QP/5hInKkf.?G[4^9(']NVb.o:cb4$MTXUNIS1t`;dD"H@%]d=BKd`faDKAikS
%n!^t<JN";/adiX+Xj*8C,CSb$G)SS"4ho2,!)I9L<S:Pm:Q@##j9=C1>!A%/.rIk@+2HETOq#\A?BXFl>qTPA8s-NcY4Col2T(*U
%p=\d'&iQ@aYLYjq>f()EIhK2j<T]-5D>B!dA8qA:Y\NRg]S517FYqfK]7jgJF#DmaC#*/Tf;Bn>]S>5fpM8DU:OWbr)RWf%:%>Z,
%DLLRRCdsG'];tKu&P3i%eVN"tDAXgU:qMG;.'?mk)i.6;H"K^Cnc#l4A:dqs;rm80#/au>9]QASjY%kT[=mj3BnLj0"-Hi,d4$%$
%bMPeM"njtG8LNi;jfdt0@D=n*7FW<YOPeB;FW3-qVb`r!_jhWa;V&aG^^':!g,cR3<ffrARl#-k"ia;1/3hVoru6AK/fM#H(YquG
%@I.tDeH]sum5"6gm>p:t\$!anebg>IGXgTCjbbt<AI'b)*=*sXqcS@6O/!M?iC9mAjFCM(NP8:Do_FURqD0"BL:>\U9!;[J8)/fT
%OTp.uK?%t9;PS[mM-\/JF"Bh-#U]r$2U%?7b?YLl;=CB9@QO-Y&8;S/mTL17Dm,Kr,PJnENi@a*T%oB9(OqV4n!?41i[FlKfX:!#
%B9oQ-poQt+Tl+.&\E^Q[Ai7:$QO4FG%$qnVFk9*j'rg8WNgYMp.['I4lRsemcUoU"-<!u4m4s[13M`fV(dd4Z=9CW!Za37d/0rs.
%0j.W4A?Ee-M"r<q1h6UiG$5(!"@n>!fDb9,#e@Bh0\$4H;NFOYBjp>fj?$W[-+F"Ha<hD`$^.in'k6"56ma>T!t^>LeVphV='&mK
%>U+7M:hLjA#AUXNgMGWLlaKj[<!o!2K.aBq0MuIk_jWdBJ*X7]_.1t1S2?'J$7+mC#-I48L`0=X:14L7eTsfIo_,4B0[E0b:Jp(I
%T8nT7afN,E^R@:KWI>e2qAtRCGYOa!n>(h+2>6;VObR7;bS\$^c9STN2'*`52ULV?FcV]uE;"6-3aDsn]GpA0JO1i!SeI)gh4m__
%2^b?$a"jnt/,s)4)f'0q6OiQ^02LdLP8qi&K%YO-k_2B*r!B:NVWEdtHY<mIT&j^agDhXYR9t81OOY`GPbn8a1MP7*0FClA(.q'm
%g%PeJ<>TK)"2eX=7kr\V@`9'KqPB1\kq<qc/^GsA.7$#u=^>K@=&F-:!EdJq@?;c+@1b%>2Q!m=NR<l13+aEoet:PY6FZh79Vat@
%M5D^+0ZM)b<gO:f?"d/)@n]puAi]f0rdOqR/A_ml"3tR'gG2DY3SGJB'/.m*Zg:e1g9X9seBsELnh?Z4-8s(>hpu<>;Qh9D-+=U!
%,orb<?]`/5L5-_4UY*e\Q!W%aBBfUtKAHAH-_A=)@;1hQ<ZgAc4HmUEo0=X8?U_sYEl399+o'Q]NCm)+YMNWD,o&s'7>d*dpris8
%cGX*ajoEf)P%37e/`J#P*:0#s^U\9s,S3X)34,0NBR7.c!f)o#cFi-R52jG9NZKNiaSg5L;0N[oa!=k>Katf,_96YZFM&8]Ya-nS
%+Jf=l,>=Oa,9[oqWZ3W-7B8flW9FK=YeQhd_D5S8*5u$qrcu'4V*$e1gei1tPp3S%n3Ln5T7l_R/X%F'8fGGd*Bn+5T2"+2@!D+f
%Tph,_@He]*#2WMm`>H_;\VgY_D%3JoF#jWH=n/#^Wp5G]fVVZ(cQr%H:9aJ-)c#ZoK>*W<>bid"T]l/LP%KqI/oAtB,Z15Pj5^pD
%%.SUDgun+@cDnZ#W'1#,Hrc!h[TepR9t8i=A+%5_mSL,`,]'b9PFf[)fBU"Bo!"bnDI"snH.@m1Th1DV&]O@s0^^'8_'^!LU,\us
%;@%+Hps1qkJr(T*?-1#I@7Ys?\M]0WAiP8q`ekoV[CX;&La4`"\73Z2n+>r-H<>&\LN/l+&4p-<0t(f9@:9jk&WrT(50:O`N9@DE
%kPnb0Fa-hZ\c:'6,%'9S"cb+0eOJU'Fs;G$0(l3oYtoa^Q!l#sT3K"X[T6%JC_ZtU&$7T\jI+'s]X@Tcd:r,hH8cm[(B<A&Po5pG
%FjJWj.i4GM%e4`(dNf^p][<\S*mX!CZ.'#ihH)JV(GS>="eKWm!i&$:0nXCc9#euWY#MS2.Iu,A8R0<$[Tof$0YJ;"poY4@fgPDI
%Z?m]&?&_2o;Z9tj;]1l'b2`^b)e]1$\7hI<,>r#gIg+:9&efPAEJ:2$D%&VGghe>7$bY@!(S"CWH>brhb>Abn;>FrW"a0`h]>I0C
%:tHXTcK>r!1u@p$oGqNfa@CNf4Y4Y]GY9CR+H$O4Ds4p0P39II#4'/]TRQ[<BBio5j-\TV>7oLHI\!kN%"DF4RoM4;NYTe,<eCV8
%IGrf&$Hm8sa7rgX=FU.bEKSBPlU=*GK8[6>eAdmFKKN<d$&sD6]8u@<Gf,-iMr<b,gV^;;1fI1\IG3=-IlQ<CVG@!7OqoJ=bA&`'
%AnhRcf7r]pm.gDkRt\F:*1(WgCH[,+0&l=ujrJH@RWKWY-];B(&'&?tluE!_G_cm-1n23hhqB78M#3Ne?A6J<1!X;Kjq#KO/?Yq@
%c.U#)PBhWGn"F</@>[9VSk,=R$]_1M\6adj*ZJti?4\3h%9lU/)erH49Q:A4NO*@rj>N+_3^1MPY-bEqABZ!*FL"IP?(AOfoWZGe
%-<InoEW=_$PU%HAV(<02\U)(_0ncReh+$m`(O%IC[N%k]hGXB+-Q\k[bc8h;&.X\QZm?PC7otI]K>b0[D*\"^[GmH%CY-".]+NN"
%CIc)_,9nGn@F$)ig[g9_>X,/Db8Zn/C`b`;A;I+:d-)_eN57W;Hb/cJ7/>Pp2!GD@3"QXJ4WPAOM-R.]pa_R=7W.]!]UmPODR,BS
%6#>4]0<dLof2H@j[^u$2"LlY93@"mI)sZ_\>[`"%V(kDnXDJ4SJpDNIj\J[t[g\0N]gh$6YU,U=P\_U'$B9T1<8HOg.R'ti(->rf
%N*5H`!l<YnRai4Yc\&D2C+n-%l"0dF=,5XVL*%qiS:\8&qNMG@@4'DpUj[Ig03t1jHiXlmN!PI4,:tr(7b!/=ahRIf_G$PW]RXAa
%ZW,F/kEmKXhls,Am9mGIe,tP4M^fP]S$IWC(Uc^d(l0)C?5ocMn>AgT0mAP=A8F0LW-=FRcJ^mHSE2^.bjr@^/XsX>)+/3:._cjr
%M':BE/JE6"b\`RA*p68a3*,i<4:UtZa:M&RU#&?f(k[)TpQXPEAJ2Rm9R3ALUqiQ!3S-hC:s6;F]g+9X2B58JVn@Qh9/78?9qijr
%POs"8>M&D0'Sp2_$'"'goeGa/3Jgm:o0lkj@+Eg/Fn>WR*P=t;V\T*E^[[E;eh;q][[Giqb;E1kOLF"dZW+i#[Z7O;HMMDml_*O$
%m4*?JWr9V;h)nJ%ht%,t:D97NQ9ZXKVQS4CWTl73;;L1u<:pEaWqlddWfANcHp#E3kd`'N+u[EYYFu+:M](&4;/]"IhFHo9;q04d
%gquG-(%ip,q+]Bt73,?5T"BeFQaY9X%J<*?U<NO#p1`.AU:7,$0A+e((K`NeL#5R&^LPNLhc+'fP$JSi[EhcK272F>YlR32D>M2?
%Na5:n1Ucc;l#2H[_jcoW@$91U=)dJcM>f>RkOYUZI8Zr0'IUh9:GdAhoO9X9""0Qos"%.d;pfmDgatYH$Kq(FP(19@MkO]c-@D2=
%"&hT7mq^f#F1'F;-0%op#90dDSBs#CJU/]#>`@cVf^I->(opXJKNs:#c#p\'fN`"<7N?h1MV$*fWD%77Zq*kQqM9<R8/Q[Y4]#]:
%m0gpD,<2I,?0ZH-3gpu4PF2C$H$/I@[C(%R6V;a[HK5VDP([i@"A;82Es8SB\Sf?1jt+Kmhj;GX;OpQ=D:W=%V(Z9PH&1(5kaOG7
%j^5g-<;!h0M7eA$mN6Ql*p`+*J8':=s.JkX-"AG$kk8"p--)f]SL57<-*9+WG[g-g4cJ*rhL1ob51k3AD48*%6KB1_&kpr]*IJ$#
%1SGki^g89Q>ct*g#a.i3H2/Sp'2!+@"L:)W*-t43[]nG<2tID:ji/_Vm3-DHJSS\7_`lR8@DT);e#dpk`CZ5sAW'8B3f8f2\Sa-p
%%KjW-\]A:In&u9b6p3?JHnPA=*^!DULIFI70_(kfAbj(*e\BYI&c,U+.)=[70IY_O7,^3bmYF@nVDRUsl;s6^=sA#1Rhsj-*r<,k
%raVna`'[6U<fqY9Q/7RK\o'diFn0VdHdS2,.eWU:g;'i!C>N4#6qZDTTl(Gn=NR]4rqJ#C1lm"3egRJt=U#2<7br2?CJenDOHlC7
%WE!)akp5pc27$6+bqhO1.'Z?")r8p8<cN]?]sX1TITtc-Qn2g/_2etoeb8LB&:":P,2[\7&,3*r3+X,2]"c$\1[,")p0Qq\5[BK,
%@]Wiu9TPmugrDQp+"J+Af-f^XFrOZ:XL>M>K?@dB.Tr`\Zcscc9X1b>c^0g(2ORsL4cLu[OX+b?:T+hliYlAjBa[q!(S;N;*H#gF
%'$);fSk"0SV<c-^WfD2HA"0dm.G6O':DqTh*P?TWI<4i,=-VtkUW2RfSL!VO>FUeu?N2,fAg``%gp;3In=s"b_R3O(W@7B#VPaJF
%R#Osqeb@a`$YaOdpoR^:Ci@4n#m$Y-m2B2])fj]WIh?XFL5TBJ*r!%D<U%.BCc`N9N,9&Ihgum7m(@(<i8(IEY8F:hj`F8DF';Ve
%5#P`6A$:8_;6ZejM"2a@EAu-[a%KSHXhFD;V>U,gIY>2>p##_JhC28;gMKk>+:A%B1aAC3HHgEP+\tqSVi\=X$"X`?ps[CZ.kjX@
%(-g+#HN=clW<0KHF.r?I.S3N3RrpDM1!gl\H*CYk<B^&77-aZQTSGRY?V.n\BgQFpmQd?P)Y+9'#0f&.e/'WP5"8Y'"10hDj(UXg
%A&`cq*/5JRk.:::Ak8OX/UW+]bn,&l!?].b5IZG`"LC(JO6iauO(gkucOklc1`etQeY`]fRGV!YTV'>#`qK)cT#fCeV=`b2%?*Jj
%i_!4A8L1491bi6K0>i;`5M'7pQROuaIVmtk"dW*uHLc1m=Xd->eMm40>[^SHHD9?Unn#;i[P)&1aiuA"mVG7oNC!a+@atUb<+Pn6
%Y^_NuJ5Xs/S>U^O<P:/CL7=iZV:K:EYScnh4SA`'*[%k(d)OYS973PQrM4Er6(YXg)eI4OBoF]r\X+_s!]0k*f1hGukMAb_+r@g;
%`K[BEkKU+LSRE3ro26e])d6'NoU&i"S\Zf\L4EG9l6$DZs(kgg7>,hATHcg\P\3CY^0rYmLO'pmSN=UqZ+',546uK,I#<I1U:pt$
%&nN=#5jGTs6g^3''Pd2@Baj7,<Sp82E](AlUBk&g7CRCJs(8.bXnZ)jh6+(G\ed_,l:%EtTguVWN[u)-,`@D?H<\eNQG0jW'8cT]
%ZWt,^#4G_4Y&A_s)Gl-+8l::Fq!0o8WjCPrN"8dLn#!;WSf@9)@_(c`9XPor&q!\=WChlf/agG\dbd!mG)CW."Ql:4gFCEL?#+h\
%5&/M\@PGYj2Ksu4?1Y<%gQ4o8K!jfY#DUWaMGset_H9?[^#as"jNS&7U:+$o-E9EbGNui'96G(=ImMV#]9r@QbH>G@RLr\ci>`!Q
%1WTW8>Of_oJO>;LcCp+D__G7'1OuJDl$]l4%>hRJAOOL:fqsriB>^uu4d:?^*.I,F.@WeT"U1u4M$O5u"YncfG]@m3&S\6*V;p2g
%=pSdOnAJ!k`*Bt4o?obdBkr9t`IK=&kS-"R?TTfm.n=U<-s-EPgN8-5XN%*Q?4Mf`imA'=a5"79++!:"`nU8&Aj>C@TK"*4Ro&Q"
%d>QE-%%Ial9@(m`5o2pbfIS7YTJA,AlhD_/T*\\5L#A]7"sSl5Kko!S_nY^_F^.+a*RMgk":='Z$.SiCjC0MrK7<jfQEKgqM$H,E
%`N+=3nF.bA5i$LdO(=MrjbQ1o),=ZT:)Qgg0JH(`DL4%T!J>DT(`u'qbfL;ccd5]7m?;,W8nL5;.c:Ur*Q&2S;k,LT)Hq*OCH6I1
%J>??p<GlL2(=-mJVif"I]nN-Nk>=&5WPXCGr!!86goIIBfeRA:O/ci"P*o6+">u54I4uc>4t,770MRXn(tO7[?pbqg&at?B_@IY]
%aka)c15R7%P#Za4eIg*KE(mX+3HYhTZ9^IHNF>Mn48!hkI8h^fCRrUpXIG)sks+$9_)@kh:<&^A2`Ii1*\qPfqlQh[>F8@pEhe],
%^hBn]NB%q`SU;5idl:OsR_u'";U/e7)^:-+@!PJ>ecYeGT!CJ`o2F^91Rgps,`Go6@-]5'MuhaoS]'1/\J>\q,DG#S^_g;LBh2u<
%=to4]_aTcB1Wb27XD?u#qbS%+cn"2T1oE#D"\H^YC']i[:6KZ`cXZu<dVKFU(J?R&B:2rj]S^Ol*i83cNOTEtaVOU-6SFfgAY1:/
%@Rm,bSOS8'SqKRYh5[43Fu'9>s7+f]rZ';qWh/\EX2&!RUN:ET>pN$tkh,PLl&l:=-PJ6IKcVD0@3(7c6]]Z7*@)mPMULrlp-:n:
%]P6HA#u^Q<GaH#@4+t3KFfS`!b@[=UP3tGX,i(3L8RkpO"Y?3-ogDH_'ptIQT/_2L$?1APSP!+qnr/$P*Ctop2`EhchJ\g=FKu@l
%8&HGI>b:VI5k2.qQl8Ws4QRGj,gQa>iBnkX85\\(cS19TTWZJ9nFGC*?UtgLXY];aSL!BKDT9t:)0]u@1L.DHQ,.DVA(uAL9M?uS
%:CY,eI$g];.;k^;=\$\&g%5()aU15g+A!EXcEMMW8B-0t`r:>G=cHsH#`'33,h$_e"b*O,DK<j8E0J:)8gM."RoQlsETF4<oA`n0
%:>"U9K\%8gYso3<KAdAQF[0>_$R1CNd$Mp;g=@`/2NR$%M*061o%Y_M-][@RhU)6XmJm4VHkS$/OeT!@\B;r5*5N1X5/F-6Wq_u:
%<r<9DlX8u79SrpIWBr;m%d6:)1E(<g5<RKbFs0?e2b\2_0aQ30DMERd%i]KNoLULbhC&J[TT,NPXbt=>GE#u5q88>6;ESm>m5ca2
%qbU&?]./C%.I;mmP([i@"@kt7j;cM;^i)?*=T+GR8t+`]D:G<JW=HfU&;EIb/32$Z_A7trE,5;^:F,K.-/t(F/B=EV+frhll,9K=
%(:]H:N:jdh7n8DH%-VTq03$i_kL:Vjd^Q^%0Si6^L1ZobN2L:)E+'@gLe&`Ab]RY%'A`=$:tK?Cp_7;)0-gj.VM8LI.$9Ghh2VAf
%Hhag.BCJl!FGeuW:`H/=O1a#'AZKuA)#'0O@%O#.%)JhZnIG9ThSP\rb_`qQW_AO/?ChHn5D`p0kAK?6e-tI[PSlO3A/Dm')=p=#
%G_\!@gk9gD1K<Z_$&6OQc8d5G]M6^,s7GMr?(BuoQIZA&N_YaY5W<3Q%;No_?,ZNqr$@rC`S,\\31d%qh<%eo8r=!YCZMO[[)ZXF
%[Ltrt+^(qKFk5!LO.d4U12'7B/8<\D]gW*5bE=D/%?g5Gc2?bT2+>5DAi4(<TGM7dhV7$A07=ck;TZKX]pdeNKJrYHadct?(]=]d
%AB?@Ye87ZE-`+$(Ehl?7_<FV-ig)9$7M/Ltjs7,O+)<"?LFpo!'(sGWRjV5EO*XBr,loIKKo/Oa]+#siLJONu9u'a\75BgEHVqrK
%F`YP.eY-9l1Sho%@*0,X5t)k+\$\]nj:uL"Vrkl45B+l=]J?<DfACVQHIken(V+S!AZks;iYpWs@L0+%D4Sr"VBZ:@4o>o_\:0B!
%ZkoGMRalm)VU-)Ur+^LLL;2YGs(B<Q>*$>&*LS+7A`d\Hb;(55Ef39Dp@1/$a,%*j7[Ckn"_ba(50k[,Ks-2\:2u5%o#\RO%_R\B
%C:3CL7tI;jmVcm'?WOt*7`8M6K%UgXV6"u"]k<^t)pG_8QOqh_aT/jq/:F9=ZhgcWoAsJPfH^;lKFnJ>imah)Su?4g>q!uEU#q^7
%UV>0sa&BgXFUG]l]6cID0kF'$AflcJr*$P^FX;Y,H.dG'8277F,0CJ(Q"S>RAGfRrSfND7kNkf`1;bp2\-V<1:@+7F3j4[.ks^6Q
%(7p*[T6VJ49D,Fk'!Ek:>J/ieQ9pnF&KBK7KR1)2e>\]Q8%X/-ADq)8gCTrcN2DTni$op3)23C@E#!M^5+VkG>fF%b>Xajr9Z7Yb
%9\"D%(n:#p0i-cjgsY:o8QAs&Q)>J[aWWWgMQ'?_G\3K(W=dul'GW0"07R]0pr3K8KYsOMjse(6nX4E"Jf0=-4YQ>n)J5i;$D2$f
%f7(HL(KjN)n-WMIS&Lb?EfP(C:cB3GeP1Q=j]DT3+EKkUPnj3.$:T1*qJlI568#4F$&eN9og;:)P`*t'So6`u9mki]+(VBfJo9FG
%oasc&[p6)X<MVJ@hYT_r*NNqU\gE'2CGP=hV@9RIcJY^</g0DI$gtSQB'd/U/:q(qEV/h/o<9"^0MefsS8B`]fusd%(Hk06.%>H*
%SN54ffu3X^k^Hd9ZDg\ba&74NqW:4_=C,Eibb]nU``sVREiI4D!g9k"i21<C/Et=>*WMR-OJ`T3\@Sn&j2'Fsa=!9o/"S)6?L#j-
%n)23NAn\`'gns[Sn2?lNR\^X+hF<Bo@0*p_gMeCDkG-/S);u8+_T;:_PAI37mRFM@^>?*T-0XhC:jJNQibUr6Y;*3B3G4;Q$"L+b
%31*l3#$)0:I1N$t4H5$V>9B2m2t\%lGT)-W?<Ml))Z<HST0^TEdkGEZ;R56F]X`Y7YpmgO[jVnEH2:d6,GjGkZ2&5h4O##?1ulm1
%b_s<d2iRY(^WAgW\tP!<YTaa"RutY_H7\LP\1G%pP8/rkD*ZR1`:kcGHB1lk,6%^NW43.LC#)Klg8c.N+;r^-gpdnTU1?C/:!U,K
%S[sT[<1[<B4BijqUn%j^^:mboo<3>R4E"4)j,Xq1mT#;4ZOh4biCmn0:.=fE[<%5$B`Adt`W'TGA&XYA+B^cok7u9aAjX`=(hLrp
%D(419,J[1\bF*JuWuV37aI[7dTl+OeG;lKHKk0`4S<tlem/eW6ULh;qnO#Gn"gk'-l0SCh'^QWH6;QkO/b+0R!P.LG]2=TFL)gL0
%fFm.C@M"au=J81A]*Y9=SULZj/3%)WO+;l,"l;YG#'_>IAWXkUMF;>T$thpD2.3J#_XnLZDV78k1?q#m@!ALr9S5IPY2D't'0h2<
%<5qdDP]r1b)S<)sbp'p7jT`GTCB'Tl]#g*[7I6hs&R?J2%,>;5/'-ONE$#HQXhun!SKt?o24pO>m/Q81#^$kq0%58UEf(2/T6#7[
%QFa/cRbXprCmHrJn@J1Saq]\Ys0ck]H83Y*1\_L=OcDSl[@24R^:*/.*1RK-Bb)cQ16H_8?##'^NK?!kiDJ)3<g.f`A(0^(h_+J@
%m"7^c84:"W!k.@^T^KYYd,Xo]JnH%Y@jU^J-7Vqb_U.SMm#a"gKoZ+KV\<d]n;-^+R*$qLa?1OZ:`2uWpA]V"f($&u/)A#2,VP!h
%*\3d_37F;%:lm\e?RG6Bl-?H`09\G:gnf45LZlCfREj8Di!AUp?2jlSNZ+nUEhuF=e<h)n1CjDL4]IWsiCX_m1lC!N[hNQ&[o5JX
%JI3o?1MI^l[4m.!9E^8q2/osZ89Ib2&Lm9Gb`<?qC%G9JX)nN'HD.kM0^rB(_h==DEP?.p(_gtO[`hPu2V>CID)>sKN8bT*JM]6s
%4f0DBM]tRlB7T>g2_Cmr^<HX#H$42p7hV5UarobZb97E!?IZPb0:%L604?66_UP7B$<foW\qYInS7<O/CNdaQ9rn,@P8NM<(F>rH
%JScX@qD=1Nr(?jB3Br0`<OoW@%YMEYN5rNI9>\P\-\pV?dgFVVm"D)JVJFQ!mO_-q3Y4YaCG9k!L5'Ln,/F/u#-dI'k$$79g891G
%YrPm6o?`C6#p7\V;&WT4jB3l3O([RW8Ljr9U-N@P`5u3f?`f%`![DARZjNGTUtVl.a=8km=J$tk5[TiH22I<?f$!WRfYjiEF9l+f
%QLHHII'f-$*Qn^QP9#PE0T1T57AJjp[18a+GaF]L_pmJl!WZJ'W2W5:l[0D[g^@f;Y5mS-m$=WJn#l4f#EK8+])#GWlH)KQZ?I2K
%9@6=IfM6nse)$WL22KjD1M"_4a]+>G-V0UtKjaTUN&5.rkfa'"NW]CM*j8Mqr"Wb+QZJaEI0Do3LNY5le9[XcZ(-b)id'OI:RYf$
%>PO$c#\H9BBt`]Qa)KM`00B[gG<^ECs&%d4akV&VYNTJ\a6LjFCA'u:h3laL_2dAe.FR([3l2K<<KnP)rfXo0eXf.)C=/MUqk4T.
%B'CBN@L/Eg=dA)$KU6;S.A^hFV)O6]P*H!pMlbHtOBbJ>CDjmPI=R1mKPu27XCD1jSMVC;I0+okGNGIroYWmX56(ADTAJF"i7ibV
%r;Dt3r9<gfrnEd3rqM9;J,]A<?bZ@6_[f!2o(eV*s*jt>c1aGNq>$@!J,8`\ci<RrIf[BXiXapqqkq4/gHY\rIfS^=Uo=~>
%AI9_PrivateDataEnd
