%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: vector_418.eps
%%Creator: Adobe Illustrator(R) 16.0
%%For: Max
%%CreationDate: 10/24/2015
%%BoundingBox: 0 0 1002 1046
%%HiResBoundingBox: 0 0 1001.6729 1045.9673
%%CropBox: 0 0 1001.6729 1045.9673
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 16.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 16.0.0 x682 R agm 4.6676 ct 5.2591%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.3-c011 66.145661, 2012/02/06-14:56:27        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Basic RGB</rdf:li>
            </rdf:Alt>
         </dc:title>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:CreatorTool>Adobe Illustrator CS6 (Windows)</xmp:CreatorTool>
         <xmp:CreateDate>2015-10-24T13:04:32+03:00</xmp:CreateDate>
         <xmp:ModifyDate>2015-10-24T13:04:33+03:00</xmp:ModifyDate>
         <xmp:MetadataDate>2015-10-24T13:04:33+03:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>248</xmpGImg:width>
                  <xmpGImg:height>256</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgBAAD4AwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9DfmNoN5r/kbW9IslWS8&#xA;u7V1t4nICySL8axkkgAOV41PSuKvH/MJ8gDSbq28teSr3RPPcCFtNWzs1jnhvYxyVfVt2IdKjfqr&#xA;LiqZeR/zC82T6P8AorS5tHtH0sym/vNeuZUaWSe5nkCQxx/FxjjC1Zm70A2xV6b+XfmLUfMflCy1&#xA;jUUgS6uHuVb6rz9B0huZIY5IvUJbhJHGrgnxxVkmKuxVBa3rek6Hpdxqur3Udlp1qoae5lNFUEhR&#xA;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</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#">
         <xmpMM:OriginalDocumentID>uuid:9E3E5C9A8C81DB118734DB58FDDE4BA7</xmpMM:OriginalDocumentID>
         <xmpMM:DocumentID>xmp.did:7F2F2D356C79E5119DD394DBA42705DE</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:7F2F2D356C79E5119DD394DBA42705DE</xmpMM:InstanceID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:7E2F2D356C79E5119DD394DBA42705DE</stRef:instanceID>
            <stRef:documentID>xmp.did:7E2F2D356C79E5119DD394DBA42705DE</stRef:documentID>
            <stRef:originalDocumentID>uuid:9E3E5C9A8C81DB118734DB58FDDE4BA7</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:3F831BD7736BE5118671ECE021D48F9D</stEvt:instanceID>
                  <stEvt:when>2015-10-05T18:14:57+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:7F2F2D356C79E5119DD394DBA42705DE</stEvt:instanceID>
                  <stEvt:when>2015-10-24T13:04:33+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/">
         <illustrator:StartupProfile>Basic RGB</illustrator:StartupProfile>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>1175.000000</stDim:w>
            <stDim:h>1175.000000</stDim:h>
            <stDim:unit>Points</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>White</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Black</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Red</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Yellow</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Green</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Cyan</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Blue</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Magenta</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=193 G=39 B=45</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>193</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>45</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=28 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>28</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=241 G=90 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>241</xmpG:red>
                           <xmpG:green>90</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=247 G=147 B=30</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>247</xmpG:red>
                           <xmpG:green>147</xmpG:green>
                           <xmpG:blue>30</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=251 G=176 B=59</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>251</xmpG:red>
                           <xmpG:green>176</xmpG:green>
                           <xmpG:blue>59</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=252 G=238 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>252</xmpG:red>
                           <xmpG:green>238</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=217 G=224 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>217</xmpG:red>
                           <xmpG:green>224</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=198 B=63</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>198</xmpG:green>
                           <xmpG:blue>63</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=57 G=181 B=74</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>57</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>74</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=146 B=69</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>146</xmpG:green>
                           <xmpG:blue>69</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=104 B=55</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>104</xmpG:green>
                           <xmpG:blue>55</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=34 G=181 B=115</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>34</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>115</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=169 B=157</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>169</xmpG:green>
                           <xmpG:blue>157</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=41 G=171 B=226</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>41</xmpG:red>
                           <xmpG:green>171</xmpG:green>
                           <xmpG:blue>226</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=113 B=188</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>113</xmpG:green>
                           <xmpG:blue>188</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=46 G=49 B=146</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>46</xmpG:red>
                           <xmpG:green>49</xmpG:green>
                           <xmpG:blue>146</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=27 G=20 B=100</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>27</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>100</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=45 B=145</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>45</xmpG:green>
                           <xmpG:blue>145</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=147 G=39 B=143</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>147</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>143</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=158 G=0 B=93</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>158</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>93</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=212 G=20 B=90</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>212</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>90</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=30 B=121</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>30</xmpG:green>
                           <xmpG:blue>121</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=199 G=178 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>199</xmpG:red>
                           <xmpG:green>178</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=134 B=117</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>134</xmpG:green>
                           <xmpG:blue>117</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=115 G=99 B=87</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>115</xmpG:red>
                           <xmpG:green>99</xmpG:green>
                           <xmpG:blue>87</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=83 G=71 B=65</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>83</xmpG:red>
                           <xmpG:green>71</xmpG:green>
                           <xmpG:blue>65</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=198 G=156 B=109</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>198</xmpG:red>
                           <xmpG:green>156</xmpG:green>
                           <xmpG:blue>109</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=166 G=124 B=82</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>166</xmpG:red>
                           <xmpG:green>124</xmpG:green>
                           <xmpG:blue>82</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=98 B=57</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>98</xmpG:green>
                           <xmpG:blue>57</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=117 G=76 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>117</xmpG:red>
                           <xmpG:green>76</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=96 G=56 B=19</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>96</xmpG:red>
                           <xmpG:green>56</xmpG:green>
                           <xmpG:blue>19</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=66 G=33 B=11</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>66</xmpG:red>
                           <xmpG:green>33</xmpG:green>
                           <xmpG:blue>11</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Cold</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=56 M=0 Y=20 K=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>101</xmpG:red>
                           <xmpG:green>200</xmpG:green>
                           <xmpG:blue>208</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=51 M=43 Y=0 K=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>131</xmpG:red>
                           <xmpG:green>139</xmpG:green>
                           <xmpG:blue>197</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=26 M=41 Y=0 K=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>186</xmpG:red>
                           <xmpG:green>155</xmpG:green>
                           <xmpG:blue>201</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Grays</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=0 B=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=26 G=26 B=26</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>26</xmpG:red>
                           <xmpG:green>26</xmpG:green>
                           <xmpG:blue>26</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=51 G=51 B=51</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>51</xmpG:red>
                           <xmpG:green>51</xmpG:green>
                           <xmpG:blue>51</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=77 G=77 B=77</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>77</xmpG:red>
                           <xmpG:green>77</xmpG:green>
                           <xmpG:blue>77</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=102 B=102</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>102</xmpG:green>
                           <xmpG:blue>102</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=128 G=128 B=128</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>128</xmpG:red>
                           <xmpG:green>128</xmpG:green>
                           <xmpG:blue>128</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=153 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>153</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=179 G=179 B=179</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>179</xmpG:red>
                           <xmpG:green>179</xmpG:green>
                           <xmpG:blue>179</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=204 G=204 B=204</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>204</xmpG:red>
                           <xmpG:green>204</xmpG:green>
                           <xmpG:blue>204</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=230 G=230 B=230</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>230</xmpG:red>
                           <xmpG:green>230</xmpG:green>
                           <xmpG:blue>230</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=242 G=242 B=242</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>242</xmpG:red>
                           <xmpG:green>242</xmpG:green>
                           <xmpG:blue>242</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <pdf:Producer>Adobe PDF library 10.01</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -1045.97 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 1045.97 li
1001.67 1045.97 li
1001.67 0 li
cp
clp
37.4761 183.491 mo
34.1631 183.491 li
34.1631 180.753 li
37.4761 180.753 li
38.4663 180.753 39.0063 181.366 39.0063 182.122 cv
39.0063 182.986 38.4302 183.491 37.4761 183.491 cv
cp
34.1631 175.982 mo
37.3682 175.982 li
38.2324 175.982 38.7725 176.504 38.7725 177.243 cv
38.7725 178.017 38.2324 178.502 37.3682 178.502 cv
34.1631 178.502 li
34.1631 175.982 li
cp
39.3125 179.547 mo
40.4468 179.313 41.3833 178.287 41.3833 176.792 cv
41.3833 175.19 40.2129 173.731 37.9263 173.731 cv
31.6064 173.731 li
31.6064 185.741 li
38.124 185.741 li
40.4287 185.741 41.6172 184.3 41.6172 182.482 cv
41.6172 180.988 40.6089 179.746 39.3125 179.547 cv
cp
false sop
/0 
[/DeviceRGB] /CSA add_res
.0980392 .0941176 .0941176 rgb
f
43.5405 185.741 mo
46.0972 185.741 li
46.0972 173.731 li
43.5405 173.731 li
43.5405 185.741 li
cp
f
54.1797 183.688 mo
51.9473 183.688 50.5244 181.978 50.5244 179.746 cv
50.5244 177.495 51.9473 175.802 54.1797 175.802 cv
56.3945 175.802 57.8169 177.495 57.8169 179.746 cv
57.8169 181.978 56.3945 183.688 54.1797 183.688 cv
cp
54.1797 173.534 mo
50.5425 173.534 47.896 176.126 47.896 179.746 cv
47.896 183.364 50.5425 185.957 54.1797 185.957 cv
57.7988 185.957 60.4458 183.364 60.4458 179.746 cv
60.4458 176.126 57.7988 173.534 54.1797 173.534 cv
cp
f
64.709 173.731 mo
62.1338 173.731 li
62.1338 185.741 li
69.7861 185.741 li
69.7861 183.491 li
64.709 183.491 li
64.709 173.731 li
cp
f
76.7339 183.688 mo
74.5015 183.688 73.0791 181.978 73.0791 179.746 cv
73.0791 177.495 74.5015 175.802 76.7339 175.802 cv
78.9487 175.802 80.3711 177.495 80.3711 179.746 cv
80.3711 181.978 78.9487 183.688 76.7339 183.688 cv
cp
76.7339 173.534 mo
73.0967 173.534 70.4502 176.126 70.4502 179.746 cv
70.4502 183.364 73.0967 185.957 76.7339 185.957 cv
80.353 185.957 83 183.364 83 179.746 cv
83 176.126 80.353 173.534 76.7339 173.534 cv
cp
f
90 181.33 mo
93.1689 181.33 li
93.1689 182.77 li
92.6826 183.22 91.6924 183.688 90.6299 183.688 cv
88.4336 183.688 86.8486 182.014 86.8486 179.746 cv
86.8486 177.476 88.4336 175.802 90.6299 175.802 cv
91.8906 175.802 92.9165 176.522 93.4746 177.369 cv
95.5815 176.216 li
94.6812 174.793 93.1147 173.534 90.6299 173.534 cv
87.1011 173.534 84.2202 175.946 84.2202 179.746 cv
84.2202 183.526 87.1011 185.957 90.6299 185.957 cv
92.7905 185.957 94.501 185.075 95.7256 183.707 cv
95.7256 179.097 li
90 179.097 li
90 181.33 li
cp
f
104.995 173.731 mo
102.024 178.539 li
99.0527 173.731 li
96.1357 173.731 li
100.745 180.826 li
100.745 185.741 li
103.302 185.741 li
103.302 180.826 li
107.894 173.731 li
104.995 173.731 li
cp
f
41.1709 130.994 mo
57.8608 114.305 li
82.6328 114.305 li
99.3105 131.033 li
41.1709 130.994 li
cp
102.508 127.812 mo
84.501 109.805 li
55.9971 109.805 li
37.9888 127.812 li
36.6914 129.109 36.3062 131.044 37.0093 132.741 cv
37.7119 134.437 39.3516 135.533 41.1875 135.533 cv
99.3105 135.533 li
101.146 135.533 102.784 134.438 103.486 132.74 cv
104.19 131.043 103.807 129.109 102.508 127.812 cv
cp
.0952911 .0952911 .0952911 rgb
f
59.0083 60.9175 mo
57.1504 60.9175 55.6392 62.4287 55.6392 64.2866 cv
55.6392 66.1445 57.1504 67.6558 59.0083 67.6558 cv
81.4893 67.6558 li
83.3457 67.6558 84.8564 66.1445 84.8564 64.2866 cv
84.8564 62.4287 83.3457 60.9175 81.4893 60.9175 cv
59.0083 60.9175 li
cp
81.4893 72.1558 mo
59.0083 72.1558 li
54.6694 72.1558 51.1392 68.6255 51.1392 64.2866 cv
51.1392 59.9478 54.6694 56.4175 59.0083 56.4175 cv
81.4893 56.4175 li
85.8271 56.4175 89.3564 59.9478 89.3564 64.2866 cv
89.3564 68.6255 85.8271 72.1558 81.4893 72.1558 cv
cp
f
61.2573 72.1567 mo
61.2573 98.228 li
34.8301 124.654 li
32.251 127.233 31.4863 131.078 32.8823 134.45 cv
34.2783 137.821 37.5381 140 41.187 140 cv
99.3105 140 li
102.959 140 106.218 137.821 107.613 134.45 cv
109.01 131.078 108.246 127.232 105.667 124.654 cv
79.2393 98.2266 li
79.2393 72.1567 li
61.2573 72.1567 li
cp
99.3105 144.5 mo
41.187 144.5 li
35.7114 144.5 30.8193 141.23 28.7246 136.171 cv
26.6304 131.111 27.7778 125.342 31.6484 121.472 cv
56.7573 96.3638 li
56.7573 67.6567 li
83.7393 67.6567 li
83.7393 96.3623 li
108.85 121.472 li
112.72 125.342 113.866 131.112 111.771 136.171 cv
109.678 141.23 104.787 144.5 99.3105 144.5 cv
cp
f
43.9824 35.9497 mo
43.9824 40.8335 li
43.9824 42.1377 44.4902 43.3643 45.4126 44.2876 cv
46.3345 45.209 47.5615 45.7168 48.8672 45.7168 cv
61.1152 45.7168 li
61.1152 40.8335 li
61.1152 39.5288 60.6069 38.3022 59.6836 37.3794 cv
58.7612 36.4575 57.5347 35.9497 56.2314 35.9497 cv
43.9824 35.9497 li
cp
65.6152 50.2168 mo
48.8672 50.2168 li
46.3594 50.2168 44.0024 49.2407 42.2305 47.4688 cv
40.458 45.6953 39.4824 43.3394 39.4824 40.8335 cv
39.4824 31.4497 li
56.2314 31.4497 li
58.7358 31.4497 61.0918 32.4253 62.8647 34.1963 cv
64.6387 35.9697 65.6152 38.3267 65.6152 40.8335 cv
65.6152 50.2168 li
cp
f
79.3818 31.4497 mo
94.9238 31.4497 li
96.6641 31.4497 98.2983 30.7734 99.5264 29.5459 cv
100.755 28.3164 101.432 26.6821 101.432 24.9448 cv
101.432 18.4409 li
85.8887 18.4409 li
84.1523 18.4409 82.5181 19.1177 81.2866 20.3462 cv
80.0586 21.5737 79.3818 23.207 79.3818 24.9448 cv
79.3818 31.4497 li
cp
94.9238 35.9497 mo
74.8818 35.9497 li
74.8818 24.9448 li
74.8818 22.0049 76.0269 19.2412 78.1064 17.1621 cv
80.189 15.0845 82.9521 13.9409 85.8887 13.9409 cv
105.932 13.9409 li
105.932 24.9448 li
105.932 27.8833 104.787 30.647 102.709 32.7271 cv
100.63 34.8057 97.8657 35.9497 94.9238 35.9497 cv
cp
f
31.1992 4.5 mo
31.1992 13.5977 li
31.1992 16.0293 32.146 18.3154 33.8647 20.0347 cv
35.5796 21.75 37.8662 22.6948 40.3037 22.6948 cv
61.1152 22.6948 li
61.1152 13.5977 li
61.1152 11.1665 60.168 8.88037 58.4478 7.16016 cv
56.7271 5.4458 54.4399 4.5 52.0107 4.5 cv
31.1992 4.5 li
cp
65.6152 27.1948 mo
40.3037 27.1948 li
36.6641 27.1948 33.2471 25.7817 30.6821 23.2163 cv
28.1138 20.6475 26.6992 17.2314 26.6992 13.5977 cv
26.6992 0 li
52.0107 0 li
55.6392 0 59.0542 1.41211 61.627 3.97559 cv
64.1997 6.54834 65.6152 9.96484 65.6152 13.5977 cv
65.6152 27.1948 li
cp
f
72.4985 121.004 mo
67.9985 121.004 li
67.9985 2.25 li
72.4985 2.25 li
72.4985 121.004 li
cp
f
218.748 181.276 mo
213.185 173.731 li
210.556 173.731 li
210.556 185.741 li
213.112 185.741 li
213.112 177.909 li
218.838 185.741 li
221.305 185.741 li
221.305 173.731 li
218.748 173.731 li
218.748 181.276 li
cp
.0980392 .0941176 .0941176 rgb
f
231.906 180.862 mo
231.906 182.536 230.951 183.688 229.097 183.688 cv
227.242 183.688 226.271 182.536 226.271 180.862 cv
226.271 173.731 li
223.678 173.731 li
223.678 180.933 li
223.678 183.905 225.442 185.957 229.097 185.957 cv
232.752 185.957 234.517 183.905 234.517 180.933 cv
234.517 173.731 li
231.906 173.731 li
231.906 180.862 li
cp
f
242.723 175.802 mo
243.947 175.802 245.027 176.577 245.532 177.548 cv
247.729 176.468 li
246.882 174.956 245.352 173.534 242.723 173.534 cv
239.104 173.534 236.313 176.036 236.313 179.746 cv
236.313 183.436 239.104 185.957 242.723 185.957 cv
245.352 185.957 246.882 184.499 247.729 183.004 cv
245.532 181.942 li
245.027 182.915 243.947 183.688 242.723 183.688 cv
240.526 183.688 238.942 182.014 238.942 179.746 cv
238.942 177.476 240.526 175.802 242.723 175.802 cv
cp
f
251.722 173.731 mo
249.147 173.731 li
249.147 185.741 li
256.799 185.741 li
256.799 183.491 li
251.722 183.491 li
251.722 173.731 li
cp
f
258.525 185.741 mo
267.023 185.741 li
267.023 183.491 li
261.082 183.491 li
261.082 180.753 li
266.897 180.753 li
266.897 178.502 li
261.082 178.502 li
261.082 175.982 li
267.023 175.982 li
267.023 173.731 li
258.525 173.731 li
258.525 185.741 li
cp
f
272.115 181.456 mo
273.988 176.289 li
275.86 181.456 li
272.115 181.456 li
cp
272.386 173.731 mo
267.759 185.741 li
270.657 185.741 li
271.413 183.707 li
276.563 183.707 li
277.319 185.741 li
280.218 185.741 li
275.591 173.731 li
272.386 173.731 li
cp
f
286.588 179.223 mo
283.888 179.223 li
283.888 175.982 li
286.588 175.982 li
287.597 175.982 288.371 176.594 288.371 177.584 cv
288.371 178.611 287.597 179.223 286.588 179.223 cv
cp
291 177.602 mo
291 175.37 289.451 173.731 286.948 173.731 cv
281.331 173.731 li
281.331 185.741 li
283.888 185.741 li
283.888 181.474 li
285.76 181.474 li
288.119 185.741 li
291.071 185.741 li
288.353 181.167 li
289.649 180.862 291 179.709 291 177.602 cv
cp
f
302.788 179.205 mo
300.087 179.205 li
300.087 175.982 li
302.788 175.982 li
303.796 175.982 304.57 176.594 304.57 177.602 cv
304.57 178.593 303.796 179.205 302.788 179.205 cv
cp
303.148 173.731 mo
297.53 173.731 li
297.53 185.741 li
300.087 185.741 li
300.087 181.456 li
303.148 181.456 li
305.741 181.456 307.182 179.691 307.182 177.602 cv
307.182 175.496 305.759 173.731 303.148 173.731 cv
cp
f
314.488 183.688 mo
312.256 183.688 310.833 181.978 310.833 179.746 cv
310.833 177.495 312.256 175.802 314.488 175.802 cv
316.703 175.802 318.125 177.495 318.125 179.746 cv
318.125 181.978 316.703 183.688 314.488 183.688 cv
cp
314.488 173.534 mo
310.851 173.534 308.204 176.126 308.204 179.746 cv
308.204 183.364 310.851 185.957 314.488 185.957 cv
318.107 185.957 320.754 183.364 320.754 179.746 cv
320.754 176.126 318.107 173.534 314.488 173.534 cv
cp
f
332.544 182.41 mo
330.275 173.731 li
328.276 173.731 li
325.989 182.41 li
323.883 173.731 li
321.021 173.731 li
324.459 185.741 li
327.178 185.741 li
329.267 177.495 li
331.373 185.741 li
334.092 185.741 li
337.513 173.731 li
334.65 173.731 li
332.544 182.41 li
cp
f
338.715 185.741 mo
347.213 185.741 li
347.213 183.491 li
341.271 183.491 li
341.271 180.753 li
347.087 180.753 li
347.087 178.502 li
341.271 178.502 li
341.271 175.982 li
347.213 175.982 li
347.213 173.731 li
338.715 173.731 li
338.715 185.741 li
cp
f
354.466 179.223 mo
351.765 179.223 li
351.765 175.982 li
354.466 175.982 li
355.474 175.982 356.248 176.594 356.248 177.584 cv
356.248 178.611 355.474 179.223 354.466 179.223 cv
cp
356.23 181.167 mo
357.526 180.862 358.877 179.709 358.877 177.602 cv
358.877 175.37 357.328 173.731 354.826 173.731 cv
349.208 173.731 li
349.208 185.741 li
351.765 185.741 li
351.765 181.474 li
353.638 181.474 li
355.996 185.741 li
358.949 185.741 li
356.23 181.167 li
cp
f
294.341 128.188 mo
291.207 124.959 li
295.654 120.641 299.564 112.253 302.217 101.341 cv
303.752 95.064 304.83 88.1777 305.421 80.8711 cv
305.768 76.6538 305.944 72.2651 305.944 67.8232 cv
305.944 63.3809 305.768 58.9917 305.421 54.7773 cv
304.83 47.4683 303.752 40.582 302.218 34.3076 cv
298.204 17.8164 291.512 7.57324 284.754 7.57324 cv
277.999 7.57324 271.303 17.8169 267.28 34.3066 cv
265.742 40.6006 264.667 47.4854 264.087 54.7715 cv
263.74 58.9917 263.564 63.3809 263.564 67.8232 cv
263.564 72.2651 263.74 76.6538 264.086 80.8682 cv
264.667 88.1606 265.742 95.0459 267.28 101.339 cv
268.745 107.335 270.564 112.533 272.688 116.789 cv
268.661 118.797 li
266.388 114.243 264.453 108.729 262.909 102.407 cv
261.313 95.8818 260.201 88.7568 259.602 81.2314 cv
259.245 76.9009 259.064 72.3877 259.064 67.8232 cv
259.064 63.2583 259.245 58.7446 259.602 54.4082 cv
260.201 46.8892 261.313 39.7646 262.909 33.2393 cv
267.586 14.0688 275.548 3.07324 284.754 3.07324 cv
293.964 3.07324 301.923 14.0688 306.59 33.2412 cv
308.18 39.7446 309.296 46.8682 309.906 54.4111 cv
310.263 58.7446 310.444 63.2583 310.444 67.8232 cv
310.444 72.3877 310.263 76.9009 309.906 81.2373 cv
309.296 88.7778 308.18 95.9019 306.589 102.407 cv
303.698 114.3 299.462 123.215 294.341 128.188 cv
cp
.0952911 .0952911 .0952911 rgb
f
323.812 107.365 mo
318.168 107.365 311.414 106.262 303.773 104.033 cv
297.383 102.172 290.659 99.5752 283.79 96.3159 cv
279.836 94.4414 275.838 92.3403 271.909 90.0718 cv
267.99 87.8076 264.174 85.3965 260.565 82.9043 cv
254.31 78.5796 248.699 74.0527 243.888 69.4487 cv
235.014 60.9648 229.409 52.832 227.681 45.9292 cv
232.046 44.8364 li
233.546 50.8271 238.856 58.4131 246.999 66.1968 cv
251.639 70.6377 257.064 75.0127 263.124 79.2021 cv
266.632 81.625 270.346 83.9712 274.159 86.1748 cv
277.983 88.3828 281.873 90.4272 285.718 92.25 cv
292.373 95.4072 298.871 97.918 305.033 99.7129 cv
321.327 104.468 333.547 103.792 336.925 97.9473 cv
340.308 92.0947 334.784 81.1753 322.51 69.4502 cv
317.828 64.9702 312.404 60.5952 306.386 56.4448 cv
302.864 54.0137 299.151 51.6675 295.349 49.4717 cv
291.667 47.3447 287.915 45.3662 284.19 43.5864 cv
283.779 43.396 li
277.123 40.2383 270.625 37.7275 264.465 35.9336 cv
258.536 34.2041 253.123 33.1797 248.376 32.8882 cv
248.652 28.397 li
253.731 28.7085 259.476 29.791 265.724 31.6133 cv
271.97 33.4326 278.536 35.9551 285.249 39.1133 cv
285.25 39.1133 li
285.718 39.3301 li
289.684 41.2104 293.681 43.3115 297.6 45.5752 cv
301.505 47.8311 305.322 50.2422 308.942 52.7412 cv
315.155 57.0264 320.767 61.5537 325.62 66.1978 cv
339.89 79.8291 345.431 92.2227 340.822 100.199 cv
338.076 104.951 332.16 107.365 323.812 107.365 cv
cp
f
245.686 107.365 mo
237.336 107.365 231.422 104.952 228.676 100.199 cv
224.069 92.2266 229.614 79.833 243.89 66.1963 cv
248.702 61.5913 254.313 57.0645 260.565 52.7422 cv
264.186 50.2422 268.002 47.8311 271.908 45.5752 cv
275.857 43.2944 279.851 41.1934 283.78 39.3301 cv
284.25 39.1133 li
290.959 35.9556 297.526 33.4331 303.774 31.6133 cv
315.544 28.1797 325.383 27.3955 332.231 29.3491 cv
330.997 33.6763 li
325.054 31.9834 315.833 32.7837 305.034 35.9336 cv
298.871 37.7285 292.373 40.2393 285.719 43.396 cv
285.252 43.6133 li
281.58 45.3701 277.85 47.3398 274.159 49.4717 cv
270.357 51.6675 266.644 54.0137 263.123 56.4443 cv
257.066 60.6309 251.642 65.0068 247 69.4487 cv
234.72 81.1787 229.193 92.0986 232.573 97.9473 cv
235.949 103.791 248.168 104.469 264.464 99.7129 cv
270.644 97.9136 277.146 95.4028 283.79 92.2505 cv
287.637 90.4263 291.526 88.3823 295.349 86.1743 cv
299.162 83.9712 302.875 81.625 306.385 79.2012 cv
312.406 75.0488 317.831 70.6738 322.508 66.1978 cv
326.957 61.9536 330.549 57.7837 333.188 53.8003 cv
336.939 56.2856 li
334.115 60.5488 330.306 64.978 325.617 69.4512 cv
320.77 74.0903 315.158 78.6177 308.941 82.9048 cv
305.333 85.3965 301.518 87.8076 297.6 90.0713 cv
293.671 92.3394 289.674 94.4404 285.718 96.3164 cv
278.858 99.5708 272.131 102.167 265.724 104.033 cv
258.085 106.262 251.329 107.365 245.686 107.365 cv
cp
f
284.751 58.7188 mo
279.732 58.7188 275.648 62.8032 275.648 67.8232 cv
275.648 72.8428 279.732 76.9268 284.751 76.9268 cv
289.771 76.9268 293.855 72.8428 293.855 67.8232 cv
293.855 62.8032 289.771 58.7188 284.751 58.7188 cv
cp
284.751 81.4268 mo
277.25 81.4268 271.148 75.3242 271.148 67.8232 cv
271.148 60.3218 277.25 54.2188 284.751 54.2188 cv
292.252 54.2188 298.355 60.3218 298.355 67.8232 cv
298.355 75.3242 292.252 81.4268 284.751 81.4268 cv
cp
f
338.877 29.9678 mo
335.237 29.9678 332.276 32.9307 332.276 36.5723 cv
332.276 40.2134 335.237 43.1758 338.877 43.1758 cv
342.52 43.1758 345.484 40.2134 345.484 36.5723 cv
345.484 32.9307 342.52 29.9678 338.877 29.9678 cv
cp
338.877 47.6758 mo
332.756 47.6758 327.776 42.6948 327.776 36.5723 cv
327.776 30.4492 332.756 25.4678 338.877 25.4678 cv
345.001 25.4678 349.984 30.4492 349.984 36.5723 cv
349.984 42.6948 345.001 47.6758 338.877 47.6758 cv
cp
f
230.623 29.9688 mo
226.982 29.9688 224.021 32.9312 224.021 36.5723 cv
224.021 40.2139 226.982 43.1768 230.623 43.1768 cv
234.265 43.1768 237.229 40.2139 237.229 36.5723 cv
237.229 32.9312 234.265 29.9688 230.623 29.9688 cv
cp
230.623 47.6768 mo
224.501 47.6768 219.521 42.6953 219.521 36.5723 cv
219.521 30.4497 224.501 25.4688 230.623 25.4688 cv
236.747 25.4688 241.729 30.4497 241.729 36.5723 cv
241.729 42.6953 236.747 47.6768 230.623 47.6768 cv
cp
f
284.75 123.719 mo
281.11 123.719 278.149 126.682 278.149 130.323 cv
278.149 133.964 281.11 136.927 284.75 136.927 cv
288.393 136.927 291.357 133.964 291.357 130.323 cv
291.357 126.682 288.393 123.719 284.75 123.719 cv
cp
284.75 141.427 mo
278.629 141.427 273.649 136.446 273.649 130.323 cv
273.649 124.2 278.629 119.219 284.75 119.219 cv
290.875 119.219 295.857 124.2 295.857 130.323 cv
295.857 136.446 290.875 141.427 284.75 141.427 cv
cp
f
459.816 179.223 mo
457.116 179.223 li
457.116 175.982 li
459.816 175.982 li
460.825 175.982 461.6 176.594 461.6 177.584 cv
461.6 178.611 460.825 179.223 459.816 179.223 cv
cp
464.229 177.602 mo
464.229 175.37 462.68 173.731 460.177 173.731 cv
454.56 173.731 li
454.56 185.741 li
457.116 185.741 li
457.116 181.474 li
458.988 181.474 li
461.348 185.741 li
464.3 185.741 li
461.581 181.167 li
462.878 180.862 464.229 179.709 464.229 177.602 cv
cp
.0980392 .0941176 .0941176 rgb
f
466.133 185.741 mo
474.632 185.741 li
474.632 183.491 li
468.689 183.491 li
468.689 180.753 li
474.506 180.753 li
474.506 178.502 li
468.689 178.502 li
468.689 175.982 li
474.632 175.982 li
474.632 173.731 li
466.133 173.731 li
466.133 185.741 li
cp
f
478.823 177.008 mo
478.823 176.289 479.436 175.82 480.516 175.82 cv
481.74 175.82 483.036 176.234 484.009 177.134 cv
485.432 175.226 li
484.243 174.127 482.658 173.551 480.75 173.551 cv
477.923 173.551 476.194 175.208 476.194 177.207 cv
476.194 181.726 483.108 180.267 483.108 182.356 cv
483.108 183.058 482.442 183.688 481.02 183.688 cv
479.363 183.688 478.049 182.932 477.203 182.05 cv
475.799 184.048 li
476.933 185.183 478.589 185.957 480.912 185.957 cv
484.135 185.957 485.72 184.3 485.72 182.104 cv
485.72 177.621 478.823 178.899 478.823 177.008 cv
cp
f
487.427 185.741 mo
495.925 185.741 li
495.925 183.491 li
489.983 183.491 li
489.983 180.753 li
495.799 180.753 li
495.799 178.502 li
489.983 178.502 li
489.983 175.982 li
495.925 175.982 li
495.925 173.731 li
487.427 173.731 li
487.427 185.741 li
cp
f
501.017 181.456 mo
502.89 176.289 li
504.762 181.456 li
501.017 181.456 li
cp
501.287 173.731 mo
496.66 185.741 li
499.559 185.741 li
500.314 183.707 li
505.464 183.707 li
506.221 185.741 li
509.119 185.741 li
504.492 173.731 li
501.287 173.731 li
cp
f
515.49 179.223 mo
512.789 179.223 li
512.789 175.982 li
515.49 175.982 li
516.498 175.982 517.272 176.594 517.272 177.584 cv
517.272 178.611 516.498 179.223 515.49 179.223 cv
cp
519.901 177.602 mo
519.901 175.37 518.353 173.731 515.85 173.731 cv
510.232 173.731 li
510.232 185.741 li
512.789 185.741 li
512.789 181.474 li
514.662 181.474 li
517.021 185.741 li
519.973 185.741 li
517.254 181.167 li
518.551 180.862 519.901 179.709 519.901 177.602 cv
cp
f
527.64 175.802 mo
528.864 175.802 529.944 176.577 530.449 177.548 cv
532.646 176.468 li
531.799 174.956 530.269 173.534 527.64 173.534 cv
524.021 173.534 521.23 176.036 521.23 179.746 cv
521.23 183.436 524.021 185.957 527.64 185.957 cv
530.269 185.957 531.799 184.499 532.646 183.004 cv
530.449 181.942 li
529.944 182.915 528.864 183.688 527.64 183.688 cv
525.443 183.688 523.858 182.014 523.858 179.746 cv
523.858 177.476 525.443 175.802 527.64 175.802 cv
cp
f
542.4 173.731 mo
542.4 178.449 li
536.729 178.449 li
536.729 173.731 li
534.172 173.731 li
534.172 185.741 li
536.729 185.741 li
536.729 180.681 li
542.4 180.681 li
542.4 185.741 li
544.975 185.741 li
544.975 173.731 li
542.4 173.731 li
cp
f
523.073 70.4189 mo
496.705 70.4189 li
496.705 43.0532 li
501.205 43.0532 li
501.205 65.9189 li
518.573 65.9189 li
518.573 14.4351 li
501.205 14.4351 li
501.205 21.186 li
496.705 21.186 li
496.705 9.93506 li
523.073 9.93506 li
523.073 70.4189 li
cp
.0952911 .0952911 .0952911 rgb
f
516.687 102.644 mo
503.093 102.644 li
503.093 89.1108 li
507.593 89.1108 li
507.593 98.144 li
512.187 98.144 li
512.187 89.1108 li
516.687 89.1108 li
516.687 102.644 li
cp
f
507.593 9.93506 mo
512.187 9.93506 li
512.187 4.75 li
507.593 4.75 li
507.593 9.93506 li
cp
516.687 14.4351 mo
503.093 14.4351 li
503.093 .25 li
516.687 .25 li
516.687 14.4351 li
cp
f
490.509 70.4189 mo
491.628 80.1206 499.893 87.6787 509.89 87.6787 cv
519.887 87.6787 528.151 80.1206 529.271 70.4189 cv
490.509 70.4189 li
cp
509.89 92.1787 mo
496.65 92.1787 485.88 81.4082 485.88 68.1689 cv
485.88 65.9189 li
533.899 65.9189 li
533.899 68.1689 li
533.899 81.4082 523.129 92.1787 509.89 92.1787 cv
cp
f
460.934 131.847 mo
538.601 131.847 li
538.601 126.604 li
460.934 126.604 li
460.934 131.847 li
cp
543.101 136.347 mo
456.434 136.347 li
456.434 122.104 li
543.101 122.104 li
543.101 136.347 li
cp
f
530.999 112.206 mo
488.13 112.206 li
488.13 107.706 li
530.999 107.706 li
530.999 112.206 li
cp
f
498.955 23.436 mo
494.167 23.436 490.271 27.3315 490.271 32.1196 cv
490.271 36.9077 494.167 40.8032 498.955 40.8032 cv
503.744 40.8032 507.64 36.9077 507.64 32.1196 cv
507.64 27.3315 503.744 23.436 498.955 23.436 cv
cp
498.955 45.3032 mo
491.686 45.3032 485.771 39.3892 485.771 32.1196 cv
485.771 24.8501 491.686 18.936 498.955 18.936 cv
506.225 18.936 512.14 24.8501 512.14 32.1196 cv
512.14 39.3892 506.225 45.3032 498.955 45.3032 cv
cp
f
501.206 32.1196 mo
501.206 33.3618 500.197 34.3696 498.955 34.3696 cv
497.713 34.3696 496.705 33.3618 496.705 32.1196 cv
496.705 30.877 497.713 29.8696 498.955 29.8696 cv
500.197 29.8696 501.206 30.877 501.206 32.1196 cv
cp
f
470.785 124.354 mo
466.285 124.354 li
466.285 51.606 li
466.285 45.7998 468.546 40.3413 472.651 36.2363 cv
476.756 32.1309 482.215 29.8696 488.021 29.8696 cv
488.021 34.3696 li
483.417 34.3696 479.088 36.1626 475.833 39.418 cv
472.578 42.6733 470.785 47.002 470.785 51.606 cv
470.785 124.354 li
cp
f
480.528 122.104 mo
485.88 122.104 li
485.88 112.206 li
480.528 112.206 li
480.528 122.104 li
cp
490.38 126.604 mo
476.028 126.604 li
476.028 107.706 li
490.38 107.706 li
490.38 126.604 li
cp
f
470.785 142 mo
466.285 142 li
466.285 133.123 li
470.785 133.123 li
470.785 142 li
cp
f
533.249 142 mo
528.749 142 li
528.749 133.123 li
533.249 133.123 li
533.249 142 li
cp
f
660.464 185.75 mo
668.962 185.75 li
668.962 183.5 li
663.021 183.5 li
663.021 180.763 li
668.837 180.763 li
668.837 178.512 li
663.021 178.512 li
663.021 175.991 li
668.962 175.991 li
668.962 173.74 li
660.464 173.74 li
660.464 185.75 li
cp
.0980392 .0941176 .0941176 rgb
f
681.581 173.74 mo
678.501 173.74 li
675.782 177.846 li
673.028 173.74 li
669.985 173.74 li
674.073 179.592 li
669.716 185.75 li
672.759 185.75 li
675.782 181.356 li
678.79 185.75 li
681.851 185.75 li
677.493 179.574 li
681.581 173.74 li
cp
f
688.239 179.214 mo
685.538 179.214 li
685.538 175.991 li
688.239 175.991 li
689.247 175.991 690.022 176.604 690.022 177.611 cv
690.022 178.602 689.247 179.214 688.239 179.214 cv
cp
688.599 173.74 mo
682.981 173.74 li
682.981 185.75 li
685.538 185.75 li
685.538 181.465 li
688.599 181.465 li
691.192 181.465 692.632 179.7 692.632 177.611 cv
692.632 175.505 691.21 173.74 688.599 173.74 cv
cp
f
694.231 185.75 mo
702.729 185.75 li
702.729 183.5 li
696.788 183.5 li
696.788 180.763 li
702.604 180.763 li
702.604 178.512 li
696.788 178.512 li
696.788 175.991 li
702.729 175.991 li
702.729 173.74 li
694.231 173.74 li
694.231 185.75 li
cp
f
709.983 179.232 mo
707.282 179.232 li
707.282 175.991 li
709.983 175.991 li
710.991 175.991 711.765 176.604 711.765 177.594 cv
711.765 178.62 710.991 179.232 709.983 179.232 cv
cp
714.394 177.611 mo
714.394 175.379 712.845 173.74 710.343 173.74 cv
704.726 173.74 li
704.726 185.75 li
707.282 185.75 li
707.282 181.483 li
709.155 181.483 li
711.513 185.75 li
714.466 185.75 li
711.747 181.177 li
713.044 180.871 714.394 179.718 714.394 177.611 cv
cp
f
716.3 185.75 mo
718.856 185.75 li
718.856 173.74 li
716.3 173.74 li
716.3 185.75 li
cp
f
727.731 181.249 mo
724.813 173.74 li
721.231 173.74 li
721.231 185.75 li
723.788 185.75 li
723.788 177.089 li
727.173 185.75 li
728.288 185.75 li
731.673 177.089 li
731.673 185.75 li
734.249 185.75 li
734.249 173.74 li
730.647 173.74 li
727.731 181.249 li
cp
f
736.62 185.75 mo
745.12 185.75 li
745.12 183.5 li
739.177 183.5 li
739.177 180.763 li
744.993 180.763 li
744.993 178.512 li
739.177 178.512 li
739.177 175.991 li
745.12 175.991 li
745.12 173.74 li
736.62 173.74 li
736.62 185.75 li
cp
f
755.308 181.285 mo
749.743 173.74 li
747.114 173.74 li
747.114 185.75 li
749.671 185.75 li
749.671 177.917 li
755.397 185.75 li
757.864 185.75 li
757.864 173.74 li
755.308 173.74 li
755.308 181.285 li
cp
f
759.497 173.74 mo
759.497 175.991 li
763.009 175.991 li
763.009 185.75 li
765.583 185.75 li
765.583 175.991 li
769.077 175.991 li
769.077 173.74 li
759.497 173.74 li
cp
f
714.771 67.2383 mo
716.658 67.2383 718.437 67.9741 719.776 69.3105 cv
721.116 70.647 721.854 72.4258 721.854 74.3208 cv
721.854 80.1733 724.134 85.6777 728.273 89.8203 cv
732.412 93.9595 737.916 96.2393 743.771 96.2393 cv
749.622 96.2393 755.125 93.9595 759.267 89.8193 cv
763.406 85.6816 765.686 80.1777 765.686 74.3208 cv
765.686 48.2607 li
663.856 48.2607 li
663.856 74.3208 li
663.856 80.1777 666.135 85.6821 670.272 89.8198 cv
674.415 93.959 679.919 96.2393 685.77 96.2393 cv
691.624 96.2393 697.128 93.9595 701.269 89.8193 cv
705.407 85.6787 707.688 80.1743 707.688 74.3208 cv
707.688 72.4258 708.425 70.647 709.765 69.3105 cv
711.102 67.9751 712.88 67.2383 714.771 67.2383 cv
cp
743.771 100.739 mo
736.714 100.739 730.08 97.9912 725.091 93.0015 cv
720.102 88.0088 717.354 81.375 717.354 74.3208 cv
717.354 73.6304 717.085 72.9824 716.599 72.4966 cv
715.617 71.5181 713.92 71.5205 712.944 72.4951 cv
712.456 72.9824 712.188 73.6304 712.188 74.3208 cv
712.188 81.376 709.439 88.0103 704.451 93.0015 cv
699.46 97.9912 692.826 100.739 685.77 100.739 cv
678.718 100.739 672.084 97.9917 667.091 93.0024 cv
662.104 88.0142 659.356 81.3799 659.356 74.3208 cv
659.356 43.7607 li
770.186 43.7607 li
770.186 74.3208 li
770.186 81.3799 767.438 88.0146 762.448 93.002 cv
757.457 97.9912 750.824 100.739 743.771 100.739 cv
cp
.0952911 .0952911 .0952911 rgb
f
714.771 59.9893 mo
718.602 59.9893 722.2 61.4805 724.904 64.1885 cv
727.611 66.8931 729.103 70.4922 729.103 74.3208 cv
729.103 78.2363 730.629 81.9194 733.399 84.6924 cv
736.17 87.4619 739.854 88.9878 743.771 88.9878 cv
747.689 88.9878 751.371 87.4619 754.14 84.6919 cv
756.91 81.9233 758.436 78.2407 758.436 74.3208 cv
758.436 55.5122 li
671.105 55.5122 li
671.105 74.3208 li
671.105 78.2402 672.631 81.9233 675.4 84.6914 cv
678.17 87.4624 681.853 88.9878 685.77 88.9878 cv
689.686 88.9878 693.37 87.4614 696.145 84.6904 cv
698.913 81.9194 700.438 78.2363 700.438 74.3208 cv
700.438 70.4927 701.93 66.894 704.637 64.187 cv
707.341 61.4805 710.94 59.9893 714.771 59.9893 cv
cp
743.771 93.4878 mo
738.652 93.4878 733.839 91.4941 730.217 87.874 cv
726.596 84.2505 724.603 79.4375 724.603 74.3208 cv
724.603 71.6948 723.579 69.2261 721.722 67.3696 cv
719.866 65.5117 717.398 64.4893 714.771 64.4893 cv
712.144 64.4893 709.675 65.5117 707.819 67.3687 cv
705.961 69.2261 704.938 71.6948 704.938 74.3208 cv
704.938 79.438 702.945 84.2505 699.326 87.8726 cv
695.701 91.4941 690.888 93.4878 685.77 93.4878 cv
680.649 93.4878 675.837 91.4937 672.218 87.8735 cv
668.599 84.2559 666.605 79.4424 666.605 74.3208 cv
666.605 51.0122 li
762.936 51.0122 li
762.936 74.3208 li
762.936 79.4434 760.941 84.2563 757.322 87.874 cv
753.704 91.4937 748.892 93.4878 743.771 93.4878 cv
cp
f
770.186 72.0708 mo
785.021 72.0708 li
785.021 55.5122 li
770.186 55.5122 li
770.186 72.0708 li
cp
789.521 76.5708 mo
765.686 76.5708 li
765.686 51.0122 li
789.521 51.0122 li
789.521 76.5708 li
cp
f
644.521 72.0708 mo
659.356 72.0708 li
659.356 55.5122 li
644.521 55.5122 li
644.521 72.0708 li
cp
663.856 76.5708 mo
640.021 76.5708 li
640.021 51.0122 li
663.856 51.0122 li
663.856 76.5708 li
cp
f
654.186 68.9302 mo
649.686 68.9302 li
649.686 58.6533 li
654.186 58.6533 li
654.186 68.9302 li
cp
f
779.854 68.9302 mo
775.354 68.9302 li
775.354 58.6533 li
779.854 58.6533 li
779.854 68.9302 li
cp
f
688.544 92.2515 mo
667.264 70.9814 li
670.445 67.7988 li
691.726 89.0688 li
688.544 92.2515 li
cp
f
759.094 68.4312 mo
745.514 54.8511 li
748.695 51.6694 li
762.275 65.2495 li
759.094 68.4312 li
cp
f
758.324 80.9619 mo
732.204 54.8516 li
735.386 51.6689 li
761.506 77.7793 li
758.324 80.9619 li
cp
f
870.27 185.741 mo
878.768 185.741 li
878.768 183.491 li
872.826 183.491 li
872.826 180.753 li
878.643 180.753 li
878.643 178.502 li
872.826 178.502 li
872.826 175.982 li
878.768 175.982 li
878.768 173.731 li
870.27 173.731 li
870.27 185.741 li
cp
.0980392 .0941176 .0941176 rgb
f
891.387 173.731 mo
888.307 173.731 li
885.588 177.836 li
882.834 173.731 li
879.791 173.731 li
883.878 179.583 li
879.521 185.741 li
882.563 185.741 li
885.588 181.347 li
888.596 185.741 li
891.656 185.741 li
887.299 179.565 li
891.387 173.731 li
cp
f
898.045 179.205 mo
895.344 179.205 li
895.344 175.982 li
898.045 175.982 li
899.053 175.982 899.827 176.594 899.827 177.602 cv
899.827 178.593 899.053 179.205 898.045 179.205 cv
cp
898.404 173.731 mo
892.787 173.731 li
892.787 185.741 li
895.344 185.741 li
895.344 181.456 li
898.404 181.456 li
900.998 181.456 902.438 179.691 902.438 177.602 cv
902.438 175.496 901.016 173.731 898.404 173.731 cv
cp
f
906.504 173.731 mo
903.929 173.731 li
903.929 185.741 li
911.581 185.741 li
911.581 183.491 li
906.504 183.491 li
906.504 173.731 li
cp
f
918.529 183.688 mo
916.297 183.688 914.874 181.978 914.874 179.746 cv
914.874 177.495 916.297 175.802 918.529 175.802 cv
920.744 175.802 922.166 177.495 922.166 179.746 cv
922.166 181.978 920.744 183.688 918.529 183.688 cv
cp
918.529 173.534 mo
914.892 173.534 912.245 176.126 912.245 179.746 cv
912.245 183.364 914.892 185.957 918.529 185.957 cv
922.148 185.957 924.795 183.364 924.795 179.746 cv
924.795 176.126 922.148 173.534 918.529 173.534 cv
cp
f
931.849 179.223 mo
929.148 179.223 li
929.148 175.982 li
931.849 175.982 li
932.857 175.982 933.631 176.594 933.631 177.584 cv
933.631 178.611 932.857 179.223 931.849 179.223 cv
cp
936.26 177.602 mo
936.26 175.37 934.711 173.731 932.209 173.731 cv
926.592 173.731 li
926.592 185.741 li
929.148 185.741 li
929.148 181.474 li
931.021 181.474 li
933.379 185.741 li
936.332 185.741 li
933.613 181.167 li
934.91 180.862 936.26 179.709 936.26 177.602 cv
cp
f
941.262 181.456 mo
943.135 176.289 li
945.007 181.456 li
941.262 181.456 li
cp
941.531 173.731 mo
936.904 185.741 li
939.803 185.741 li
940.56 183.707 li
945.709 183.707 li
946.465 185.741 li
949.364 185.741 li
944.736 173.731 li
941.531 173.731 li
cp
f
948.587 175.982 mo
952.098 175.982 li
952.098 185.741 li
954.673 185.741 li
954.673 175.982 li
958.166 175.982 li
958.166 173.731 li
948.587 173.731 li
948.587 175.982 li
cp
f
959.801 185.741 mo
962.357 185.741 li
962.357 173.731 li
959.801 173.731 li
959.801 185.741 li
cp
f
970.439 183.688 mo
968.207 183.688 966.785 181.978 966.785 179.746 cv
966.785 177.495 968.207 175.802 970.439 175.802 cv
972.654 175.802 974.077 177.495 974.077 179.746 cv
974.077 181.978 972.654 183.688 970.439 183.688 cv
cp
970.439 173.534 mo
966.803 173.534 964.156 176.126 964.156 179.746 cv
964.156 183.364 966.803 185.957 970.439 185.957 cv
974.059 185.957 976.706 183.364 976.706 179.746 cv
976.706 176.126 974.059 173.534 970.439 173.534 cv
cp
f
986.695 173.731 mo
986.695 181.276 li
981.131 173.731 li
978.502 173.731 li
978.502 185.741 li
981.059 185.741 li
981.059 177.909 li
986.785 185.741 li
989.252 185.741 li
989.252 173.731 li
986.695 173.731 li
cp
f
940.753 55.6875 mo
939.571 51.3457 li
982.941 39.5396 li
984.123 43.8813 li
940.753 55.6875 li
cp
.0952911 .0952911 .0952911 rgb
f
982.941 109.885 mo
939.571 98.0737 li
940.753 93.7319 li
984.123 105.543 li
982.941 109.885 li
cp
f
898.776 38.5522 mo
882.167 42.3447 869.944 57.4443 869.944 74.7124 cv
869.944 91.9805 882.167 107.081 898.776 110.873 cv
898.776 38.5522 li
cp
903.276 116.211 mo
900.686 115.814 li
880.595 112.74 865.444 95.0698 865.444 74.7124 cv
865.444 54.3555 880.595 36.6855 900.686 33.6108 cv
903.276 33.2144 li
903.276 116.211 li
cp
f
915.276 38.5522 mo
915.276 110.873 li
931.887 107.081 944.11 91.9805 944.11 74.7124 cv
944.11 57.4443 931.887 42.3447 915.276 38.5522 cv
cp
910.776 116.211 mo
910.776 33.2144 li
913.367 33.6108 li
933.459 36.6855 948.61 54.3555 948.61 74.7124 cv
948.61 95.0698 933.459 112.74 913.367 115.814 cv
910.776 116.211 li
cp
f
878.794 74.7153 mo
874.294 74.7153 li
874.294 63.7993 879.721 53.6353 888.811 47.5273 cv
891.32 51.2627 li
883.477 56.5332 878.794 65.3003 878.794 74.7153 cv
cp
f
903.276 116.711 mo
910.776 116.711 li
910.776 32.7134 li
903.276 32.7134 li
903.276 116.711 li
cp
915.276 121.211 mo
898.776 121.211 li
898.776 28.2134 li
915.276 28.2134 li
915.276 121.211 li
cp
f
1001.67 76.9619 mo
935.052 76.9619 li
935.052 72.4619 li
1001.67 72.4619 li
1001.67 76.9619 li
cp
f
930.136 72.0464 mo
928.666 72.0464 927.47 73.2422 927.47 74.7119 cv
927.47 76.1821 928.666 77.3779 930.136 77.3779 cv
931.605 77.3779 932.802 76.1821 932.802 74.7119 cv
932.802 73.2422 931.605 72.0464 930.136 72.0464 cv
cp
930.136 81.8779 mo
926.185 81.8779 922.97 78.6631 922.97 74.7119 cv
922.97 70.7607 926.185 67.5464 930.136 67.5464 cv
934.087 67.5464 937.302 70.7607 937.302 74.7119 cv
937.302 78.6631 934.087 81.8779 930.136 81.8779 cv
cp
f
865.026 31.4526 mo
862.31 31.4526 860.099 33.6631 860.099 36.3799 cv
860.099 39.0967 862.31 41.3071 865.026 41.3071 cv
867.743 41.3071 869.954 39.0967 869.954 36.3799 cv
869.954 33.6631 867.743 31.4526 865.026 31.4526 cv
cp
865.026 45.8071 mo
859.828 45.8071 855.599 41.5781 855.599 36.3799 cv
855.599 31.1816 859.828 26.9526 865.026 26.9526 cv
870.225 26.9526 874.454 31.1816 874.454 36.3799 cv
874.454 41.5781 870.225 45.8071 865.026 45.8071 cv
cp
f
930.222 17.9609 mo
929.088 17.9609 928.165 18.8833 928.165 20.0176 cv
928.165 21.1514 929.088 22.0737 930.222 22.0737 cv
931.354 22.0737 932.276 21.1514 932.276 20.0176 cv
932.276 18.8833 931.354 17.9609 930.222 17.9609 cv
cp
930.222 26.5737 mo
926.606 26.5737 923.665 23.6328 923.665 20.0176 cv
923.665 16.4023 926.606 13.4609 930.222 13.4609 cv
933.836 13.4609 936.776 16.4023 936.776 20.0176 cv
936.776 23.6328 933.836 26.5737 930.222 26.5737 cv
cp
f
873.001 122.426 mo
871.867 122.426 870.944 123.349 870.944 124.482 cv
870.944 125.617 871.867 126.539 873.001 126.539 cv
874.135 126.539 875.058 125.617 875.058 124.482 cv
875.058 123.349 874.135 122.426 873.001 122.426 cv
cp
873.001 131.039 mo
869.386 131.039 866.444 128.098 866.444 124.482 cv
866.444 120.867 869.386 117.926 873.001 117.926 cv
876.616 117.926 879.558 120.867 879.558 124.482 cv
879.558 128.098 876.616 131.039 873.001 131.039 cv
cp
f
26.3076 390.818 mo
27.5322 390.818 28.6123 391.592 29.1172 392.564 cv
31.3135 391.484 li
30.4668 389.971 28.9365 388.549 26.3076 388.549 cv
22.6885 388.549 19.8984 391.051 19.8984 394.761 cv
19.8984 398.452 22.6885 400.972 26.3076 400.972 cv
28.9365 400.972 30.4668 399.514 31.3135 398.02 cv
29.1172 396.958 li
28.6123 397.93 27.5322 398.704 26.3076 398.704 cv
24.1113 398.704 22.5273 397.03 22.5273 394.761 cv
22.5273 392.492 24.1113 390.818 26.3076 390.818 cv
cp
.0980392 .0941176 .0941176 rgb
f
41.0684 393.464 mo
35.3965 393.464 li
35.3965 388.747 li
32.8398 388.747 li
32.8398 400.756 li
35.3965 400.756 li
35.3965 395.697 li
41.0684 395.697 li
41.0684 400.756 li
43.6436 400.756 li
43.6436 388.747 li
41.0684 388.747 li
41.0684 393.464 li
cp
f
45.998 400.756 mo
54.4961 400.756 li
54.4961 398.506 li
48.5547 398.506 li
48.5547 395.769 li
54.3701 395.769 li
54.3701 393.518 li
48.5547 393.518 li
48.5547 390.998 li
54.4961 390.998 li
54.4961 388.747 li
45.998 388.747 li
45.998 400.756 li
cp
f
62.9912 396.255 mo
60.0742 388.747 li
56.4912 388.747 li
56.4912 400.756 li
59.0479 400.756 li
59.0479 392.096 li
62.4336 400.756 li
63.5498 400.756 li
66.9346 392.096 li
66.9346 400.756 li
69.5088 400.756 li
69.5088 388.747 li
65.9082 388.747 li
62.9912 396.255 li
cp
f
71.8818 400.756 mo
74.4385 400.756 li
74.4385 388.747 li
71.8818 388.747 li
71.8818 400.756 li
cp
f
79.0098 392.024 mo
79.0098 391.304 79.6221 390.835 80.7021 390.835 cv
81.9268 390.835 83.2227 391.25 84.1953 392.15 cv
85.6182 390.242 li
84.4297 389.143 82.8447 388.567 80.9365 388.567 cv
78.1094 388.567 76.3809 390.223 76.3809 392.222 cv
76.3809 396.742 83.2949 395.283 83.2949 397.372 cv
83.2949 398.074 82.6289 398.704 81.2061 398.704 cv
79.5498 398.704 78.2354 397.948 77.3896 397.066 cv
75.9854 399.064 li
77.1191 400.199 78.7754 400.972 81.0986 400.972 cv
84.3213 400.972 85.9063 399.316 85.9063 397.12 cv
85.9063 392.636 79.0098 393.915 79.0098 392.024 cv
cp
f
86.6406 390.998 mo
90.1523 390.998 li
90.1523 400.756 li
92.7266 400.756 li
92.7266 390.998 li
96.2197 390.998 li
96.2197 388.747 li
86.6406 388.747 li
86.6406 390.998 li
cp
f
103.112 394.239 mo
100.411 394.239 li
100.411 390.998 li
103.112 390.998 li
104.12 390.998 104.895 391.61 104.895 392.6 cv
104.895 393.626 104.12 394.239 103.112 394.239 cv
cp
107.523 392.618 mo
107.523 390.385 105.975 388.747 103.473 388.747 cv
97.8545 388.747 li
97.8545 400.756 li
100.411 400.756 li
100.411 396.49 li
102.284 396.49 li
104.643 400.756 li
107.596 400.756 li
104.877 396.183 li
106.173 395.877 107.523 394.725 107.523 392.618 cv
cp
f
116.703 388.747 mo
113.732 393.554 li
110.761 388.747 li
107.845 388.747 li
112.454 395.841 li
112.454 400.756 li
115.011 400.756 li
115.011 395.841 li
119.602 388.747 li
116.703 388.747 li
cp
f
45.7085 278.364 mo
69.751 292.244 li
93.791 278.365 li
93.791 250.601 li
69.751 236.722 li
45.7085 250.602 li
45.7085 278.364 li
cp
69.751 297.44 mo
41.2085 280.963 li
41.2085 248.003 li
69.751 231.525 li
98.291 248.003 li
98.291 280.962 li
69.751 297.44 li
cp
.0952911 .0952911 .0952911 rgb
f
19.4155 323.905 mo
43.4585 337.785 li
67.501 323.905 li
67.501 296.142 li
43.4585 282.262 li
19.4155 296.142 li
19.4155 323.905 li
cp
43.4585 342.981 mo
14.9155 326.502 li
14.9155 293.543 li
43.4585 277.065 li
72.001 293.543 li
72.001 326.502 li
43.4585 342.981 li
cp
f
72.001 323.905 mo
96.041 337.785 li
120.086 323.904 li
120.086 296.142 li
96.041 282.262 li
72.001 296.141 li
72.001 323.905 li
cp
96.041 342.981 mo
67.501 326.502 li
67.501 293.543 li
96.041 277.065 li
124.586 293.543 li
124.586 326.503 li
96.041 342.981 li
cp
f
72.001 234.124 mo
67.501 234.124 li
67.501 219.753 li
72.001 219.753 li
72.001 234.124 li
cp
f
45.7085 354.752 mo
41.2085 354.752 li
41.2085 340.383 li
45.7085 340.383 li
45.7085 354.752 li
cp
f
98.291 354.752 mo
93.791 354.752 li
93.791 340.383 li
98.291 340.383 li
98.291 354.752 li
cp
f
123.461 296.791 mo
121.211 292.894 li
133.654 285.709 li
135.904 289.606 li
123.461 296.791 li
cp
f
16.0405 296.791 mo
3.5957 289.606 li
5.8457 285.709 li
18.2905 292.894 li
16.0405 296.791 li
cp
f
53.9585 273.889 mo
58.4585 271.291 li
69.751 277.811 li
81.041 271.292 li
85.541 273.89 li
69.751 283.007 li
53.9585 273.889 li
cp
f
53.9585 255.076 mo
69.751 245.959 li
85.541 255.076 li
81.041 257.674 li
69.751 251.155 li
58.4585 257.674 li
53.9585 255.076 li
cp
f
55.001 316.399 mo
55.001 303.358 li
43.7085 296.839 li
43.7085 291.644 li
59.501 300.76 li
59.501 318.997 li
55.001 316.399 li
cp
f
27.4155 319.286 mo
27.4155 301.049 li
31.9155 303.647 li
31.9155 316.688 li
43.2085 323.208 li
43.2085 328.403 li
27.4155 319.286 li
cp
f
80.001 300.76 mo
95.793 291.643 li
95.793 296.838 li
84.501 303.358 li
84.501 316.399 li
80.001 318.997 li
80.001 300.76 li
cp
f
96.293 323.207 mo
107.586 316.687 li
107.586 303.647 li
112.086 301.049 li
112.086 319.285 li
96.293 328.402 li
96.293 323.207 li
cp
f
248.277 396.345 mo
251.446 396.345 li
251.446 397.786 li
250.959 398.236 249.969 398.704 248.907 398.704 cv
246.71 398.704 245.126 397.03 245.126 394.761 cv
245.126 392.492 246.71 390.818 248.907 390.818 cv
250.167 390.818 251.193 391.538 251.752 392.384 cv
253.858 391.232 li
252.958 389.809 251.392 388.549 248.907 388.549 cv
245.378 388.549 242.497 390.961 242.497 394.761 cv
242.497 398.542 245.378 400.972 248.907 400.972 cv
251.067 400.972 252.778 400.09 254.002 398.722 cv
254.002 394.113 li
248.277 394.113 li
248.277 396.345 li
cp
.0980392 .0941176 .0941176 rgb
f
256.033 400.756 mo
264.532 400.756 li
264.532 398.506 li
258.59 398.506 li
258.59 395.769 li
264.406 395.769 li
264.406 393.518 li
258.59 393.518 li
258.59 390.998 li
264.532 390.998 li
264.532 388.747 li
256.033 388.747 li
256.033 400.756 li
cp
f
274.719 396.292 mo
269.155 388.747 li
266.527 388.747 li
266.527 400.756 li
269.083 400.756 li
269.083 392.924 li
274.809 400.756 li
277.276 400.756 li
277.276 388.747 li
274.719 388.747 li
274.719 396.292 li
cp
f
279.648 400.756 mo
288.147 400.756 li
288.147 398.506 li
282.205 398.506 li
282.205 395.769 li
288.021 395.769 li
288.021 393.518 li
282.205 393.518 li
282.205 390.998 li
288.147 390.998 li
288.147 388.747 li
279.648 388.747 li
279.648 400.756 li
cp
f
289.404 390.998 mo
292.915 390.998 li
292.915 400.756 li
295.49 400.756 li
295.49 390.998 li
298.982 390.998 li
298.982 388.747 li
289.404 388.747 li
289.404 390.998 li
cp
f
300.618 400.756 mo
303.174 400.756 li
303.174 388.747 li
300.618 388.747 li
300.618 400.756 li
cp
f
311.383 390.818 mo
312.607 390.818 313.688 391.592 314.192 392.564 cv
316.389 391.484 li
315.542 389.971 314.012 388.549 311.383 388.549 cv
307.764 388.549 304.973 391.051 304.973 394.761 cv
304.973 398.452 307.764 400.972 311.383 400.972 cv
314.012 400.972 315.542 399.514 316.389 398.02 cv
314.192 396.958 li
313.688 397.93 312.607 398.704 311.383 398.704 cv
309.187 398.704 307.602 397.03 307.602 394.761 cv
307.602 392.492 309.187 390.818 311.383 390.818 cv
cp
f
320.111 392.024 mo
320.111 391.304 320.724 390.835 321.804 390.835 cv
323.028 390.835 324.325 391.25 325.297 392.15 cv
326.72 390.242 li
325.531 389.143 323.947 388.567 322.038 388.567 cv
319.211 388.567 317.483 390.223 317.483 392.222 cv
317.483 396.742 324.397 395.283 324.397 397.372 cv
324.397 398.074 323.73 398.704 322.308 398.704 cv
320.652 398.704 319.337 397.948 318.491 397.066 cv
317.087 399.064 li
318.221 400.199 319.877 400.972 322.2 400.972 cv
325.423 400.972 327.008 399.316 327.008 397.12 cv
327.008 392.636 320.111 393.915 320.111 392.024 cv
cp
f
305.794 283.491 mo
303.41 279.675 li
305.67 278.263 307.78 276.583 309.681 274.683 cv
316.336 268.018 320.002 259.164 320.002 249.753 cv
320.002 227.253 li
324.502 227.253 li
324.502 249.753 li
324.502 260.365 320.369 270.348 312.864 277.863 cv
310.722 280.006 308.343 281.899 305.794 283.491 cv
cp
f
249.502 347.253 mo
245.002 347.253 li
245.002 324.753 li
245.002 314.142 249.136 304.159 256.64 296.644 cv
258.766 294.518 261.139 292.625 263.695 291.018 cv
266.09 294.828 li
263.819 296.256 261.71 297.937 259.824 299.824 cv
253.168 306.489 249.502 315.342 249.502 324.753 cv
249.502 347.253 li
cp
f
324.502 347.253 mo
320.002 347.253 li
320.002 324.753 li
320.002 315.34 316.336 306.488 309.679 299.828 cv
303.018 293.17 294.166 289.503 284.752 289.503 cv
274.136 289.503 264.153 285.369 256.643 277.862 cv
249.136 270.35 245.002 260.368 245.002 249.753 cv
245.002 227.253 li
249.502 227.253 li
249.502 249.753 li
249.502 259.166 253.168 268.019 259.825 274.68 cv
266.484 281.336 275.337 285.003 284.752 285.003 cv
295.367 285.003 305.35 289.138 312.861 296.646 cv
320.368 304.157 324.502 314.138 324.502 324.753 cv
324.502 347.253 li
cp
f
314.252 241.505 mo
287.752 241.505 li
287.752 237.005 li
314.252 237.005 li
314.252 241.505 li
cp
f
314.252 253.509 mo
287.752 253.509 li
287.752 249.009 li
314.252 249.009 li
314.252 253.509 li
cp
f
310.994 265.511 mo
287.752 265.511 li
287.752 261.011 li
310.994 261.011 li
310.994 265.511 li
cp
f
299.502 277.513 mo
287.752 277.513 li
287.752 273.013 li
299.502 273.013 li
299.502 277.513 li
cp
f
281.752 241.505 mo
255.252 241.505 li
255.252 237.005 li
281.752 237.005 li
281.752 241.505 li
cp
f
281.752 253.509 mo
255.252 253.509 li
255.252 249.009 li
281.752 249.009 li
281.752 253.509 li
cp
f
281.752 265.511 mo
258.51 265.511 li
258.51 261.011 li
281.752 261.011 li
281.752 265.511 li
cp
f
281.752 277.513 mo
269.914 277.513 li
269.914 273.013 li
281.752 273.013 li
281.752 277.513 li
cp
f
281.752 337.501 mo
255.252 337.501 li
255.252 333.001 li
281.752 333.001 li
281.752 337.501 li
cp
f
281.752 325.499 mo
255.252 325.499 li
255.252 320.999 li
281.752 320.999 li
281.752 325.499 li
cp
f
281.752 313.497 mo
258.511 313.497 li
258.511 308.997 li
281.752 308.997 li
281.752 313.497 li
cp
f
281.752 301.495 mo
270.002 301.495 li
270.002 296.995 li
281.752 296.995 li
281.752 301.495 li
cp
f
314.252 337.501 mo
287.752 337.501 li
287.752 333.001 li
314.252 333.001 li
314.252 337.501 li
cp
f
314.252 325.499 mo
287.752 325.499 li
287.752 320.999 li
314.252 320.999 li
314.252 325.499 li
cp
f
310.995 313.497 mo
287.752 313.497 li
287.752 308.997 li
310.995 308.997 li
310.995 313.497 li
cp
f
299.591 301.495 mo
287.752 301.495 li
287.752 296.995 li
299.591 296.995 li
299.591 301.495 li
cp
f
454.758 398.506 mo
451.445 398.506 li
451.445 395.769 li
454.758 395.769 li
455.749 395.769 456.289 396.381 456.289 397.137 cv
456.289 398.001 455.712 398.506 454.758 398.506 cv
cp
451.445 390.998 mo
454.65 390.998 li
455.515 390.998 456.055 391.52 456.055 392.258 cv
456.055 393.033 455.515 393.518 454.65 393.518 cv
451.445 393.518 li
451.445 390.998 li
cp
456.595 394.563 mo
457.729 394.329 458.666 393.302 458.666 391.808 cv
458.666 390.206 457.495 388.747 455.208 388.747 cv
448.889 388.747 li
448.889 400.756 li
455.406 400.756 li
457.711 400.756 458.899 399.316 458.899 397.498 cv
458.899 396.003 457.891 394.761 456.595 394.563 cv
cp
f
460.823 400.756 mo
463.379 400.756 li
463.379 388.747 li
460.823 388.747 li
460.823 400.756 li
cp
f
471.462 398.704 mo
469.229 398.704 467.807 396.994 467.807 394.761 cv
467.807 392.51 469.229 390.818 471.462 390.818 cv
473.677 390.818 475.099 392.51 475.099 394.761 cv
475.099 396.994 473.677 398.704 471.462 398.704 cv
cp
471.462 388.549 mo
467.825 388.549 465.178 391.142 465.178 394.761 cv
465.178 398.379 467.825 400.972 471.462 400.972 cv
475.081 400.972 477.728 398.379 477.728 394.761 cv
477.728 391.142 475.081 388.549 471.462 388.549 cv
cp
f
487.753 393.464 mo
482.081 393.464 li
482.081 388.747 li
479.524 388.747 li
479.524 400.756 li
482.081 400.756 li
482.081 395.697 li
487.753 395.697 li
487.753 400.756 li
490.328 400.756 li
490.328 388.747 li
487.753 388.747 li
487.753 393.464 li
cp
f
495.779 396.471 mo
497.651 391.304 li
499.524 396.471 li
495.779 396.471 li
cp
496.049 388.747 mo
491.422 400.756 li
494.32 400.756 li
495.077 398.722 li
500.226 398.722 li
500.982 400.756 li
503.882 400.756 li
499.254 388.747 li
496.049 388.747 li
cp
f
513.583 390.799 mo
513.583 388.747 li
504.562 388.747 li
504.562 390.998 li
510.233 390.998 li
504.562 398.686 li
504.562 400.756 li
513.708 400.756 li
513.708 398.506 li
507.911 398.506 li
513.583 390.799 li
cp
f
518.747 396.471 mo
520.619 391.304 li
522.491 396.471 li
518.747 396.471 li
cp
519.017 388.747 mo
514.39 400.756 li
517.288 400.756 li
518.044 398.722 li
523.194 398.722 li
523.95 400.756 li
526.849 400.756 li
522.222 388.747 li
519.017 388.747 li
cp
f
533.22 394.239 mo
530.519 394.239 li
530.519 390.998 li
533.22 390.998 li
534.228 390.998 535.002 391.61 535.002 392.6 cv
535.002 393.626 534.228 394.239 533.22 394.239 cv
cp
537.631 392.618 mo
537.631 390.385 536.082 388.747 533.579 388.747 cv
527.962 388.747 li
527.962 400.756 li
530.519 400.756 li
530.519 396.49 li
532.392 396.49 li
534.75 400.756 li
537.702 400.756 li
534.983 396.183 li
536.28 395.877 537.631 394.725 537.631 392.618 cv
cp
f
544.271 398.506 mo
542.093 398.506 li
542.093 390.998 li
544.289 390.998 li
546.737 390.998 548.034 392.636 548.034 394.743 cv
548.034 396.795 546.647 398.506 544.271 398.506 cv
cp
544.271 388.747 mo
539.536 388.747 li
539.536 400.756 li
544.289 400.756 li
548.034 400.756 550.646 398.379 550.646 394.743 cv
550.646 391.142 548.034 388.747 544.271 388.747 cv
cp
f
499.767 262.917 mo
483.086 262.917 469.516 276.487 469.516 293.166 cv
469.516 309.847 483.086 323.417 499.767 323.417 cv
516.446 323.417 530.016 309.847 530.016 293.166 cv
530.016 276.487 516.446 262.917 499.767 262.917 cv
cp
499.767 327.917 mo
480.605 327.917 465.016 312.328 465.016 293.166 cv
465.016 274.005 480.605 258.417 499.767 258.417 cv
518.928 258.417 534.516 274.005 534.516 293.166 cv
534.516 312.328 518.928 327.917 499.767 327.917 cv
cp
.0952911 .0952911 .0952911 rgb
f
499.768 323.507 mo
501.718 326.896 li
504.563 331.845 508.691 335.974 513.653 338.838 cv
518.173 341.448 523.251 342.935 528.424 343.174 cv
526.79 342.585 525.204 341.85 523.688 340.975 cv
509.631 332.856 504.796 314.814 512.912 300.755 cv
518.155 291.673 527.935 286.032 538.434 286.032 cv
543.573 286.032 548.654 287.397 553.128 289.98 cv
554.657 290.863 556.087 291.866 557.409 292.978 cv
554.645 288.667 550.856 285.008 546.261 282.355 cv
541.315 279.5 535.686 277.991 529.979 277.991 cv
526.077 277.991 li
528.003 274.614 li
530.865 269.668 532.378 264.029 532.378 258.307 cv
532.378 253.001 531.104 247.892 528.754 243.343 cv
529.055 245.042 529.208 246.781 529.208 248.545 cv
529.208 264.779 516.001 277.987 499.767 277.987 cv
483.534 277.987 470.327 264.779 470.327 248.545 cv
470.327 246.782 470.48 245.043 470.781 243.344 cv
468.431 247.893 467.157 253.002 467.157 258.307 cv
467.157 264.031 468.669 269.669 471.531 274.612 cv
473.487 277.992 li
469.582 277.99 li
463.851 277.99 458.218 279.5 453.272 282.355 cv
448.679 285.007 444.892 288.664 442.128 292.972 cv
443.448 291.863 444.876 290.861 446.403 289.979 cv
450.878 287.396 455.959 286.031 461.099 286.031 cv
471.598 286.031 481.377 291.673 486.621 300.755 cv
490.553 307.566 491.597 315.5 489.562 323.096 cv
487.526 330.692 482.655 337.041 475.845 340.973 cv
474.328 341.849 472.742 342.584 471.106 343.174 cv
476.282 342.935 481.361 341.448 485.882 338.838 cv
490.839 335.976 494.966 331.846 497.817 326.895 cv
499.768 323.507 li
cp
529.911 347.708 mo
523.438 347.708 517.038 345.989 511.403 342.735 cv
506.803 340.08 502.832 336.468 499.767 332.174 cv
496.698 336.47 492.729 340.082 488.132 342.735 cv
482.498 345.988 476.098 347.708 469.625 347.708 cv
463.769 347.708 457.911 346.299 452.686 343.634 cv
454.322 339.465 li
460.75 341.286 467.798 340.423 473.595 337.076 cv
479.364 333.745 483.491 328.367 485.215 321.931 cv
486.939 315.496 486.055 308.775 482.724 303.005 cv
478.281 295.311 469.995 290.531 461.099 290.531 cv
456.749 290.531 452.445 291.688 448.653 293.877 cv
442.772 297.272 438.615 302.775 436.949 309.372 cv
432.52 308.704 li
433.176 296.075 440.092 284.768 451.022 278.458 cv
455.615 275.806 460.729 274.174 465.985 273.663 cv
463.8 268.859 462.657 263.615 462.657 258.307 cv
462.657 245.686 468.991 234.042 479.601 227.16 cv
482.394 230.661 li
477.514 235.403 474.827 241.754 474.827 248.545 cv
474.827 262.298 486.015 273.487 499.767 273.487 cv
513.52 273.487 524.708 262.298 524.708 248.545 cv
524.708 241.755 522.021 235.403 517.142 230.661 cv
519.935 227.16 li
530.544 234.042 536.878 245.686 536.878 258.307 cv
536.878 263.614 535.734 268.859 533.548 273.665 cv
538.814 274.177 543.922 275.809 548.511 278.458 cv
559.44 284.767 566.357 296.075 567.014 308.706 cv
562.585 309.375 li
560.917 302.776 556.759 297.272 550.878 293.878 cv
547.087 291.689 542.784 290.532 538.434 290.532 cv
529.537 290.532 521.251 295.312 516.809 303.005 cv
509.934 314.915 514.029 330.2 525.938 337.078 cv
531.734 340.424 538.787 341.286 545.21 339.467 cv
546.846 343.636 li
541.623 346.3 535.767 347.708 529.911 347.708 cv
cp
f
499.767 287.231 mo
496.494 287.231 493.832 289.894 493.832 293.167 cv
493.832 296.439 496.494 299.102 499.767 299.102 cv
503.04 299.102 505.702 296.439 505.702 293.167 cv
505.702 289.894 503.04 287.231 499.767 287.231 cv
cp
499.767 303.602 mo
494.013 303.602 489.332 298.921 489.332 293.167 cv
489.332 287.412 494.013 282.731 499.767 282.731 cv
505.521 282.731 510.202 287.412 510.202 293.167 cv
510.202 298.921 505.521 303.602 499.767 303.602 cv
cp
f
664.219 398.506 mo
660.905 398.506 li
660.905 395.769 li
664.219 395.769 li
665.209 395.769 665.748 396.381 665.748 397.137 cv
665.748 398.001 665.172 398.506 664.219 398.506 cv
cp
660.905 390.998 mo
664.11 390.998 li
664.975 390.998 665.515 391.52 665.515 392.258 cv
665.515 393.032 664.975 393.518 664.11 393.518 cv
660.905 393.518 li
660.905 390.998 li
cp
666.055 394.563 mo
667.189 394.329 668.125 393.302 668.125 391.808 cv
668.125 390.205 666.955 388.747 664.668 388.747 cv
658.349 388.747 li
658.349 400.756 li
664.867 400.756 li
667.172 400.756 668.359 399.316 668.359 397.498 cv
668.359 396.003 667.352 394.761 666.055 394.563 cv
cp
.0980392 .0941176 .0941176 rgb
f
675.54 394.238 mo
672.84 394.238 li
672.84 390.998 li
675.54 390.998 li
676.549 390.998 677.322 391.609 677.322 392.6 cv
677.322 393.626 676.549 394.238 675.54 394.238 cv
cp
679.951 392.618 mo
679.951 390.385 678.402 388.747 675.9 388.747 cv
670.283 388.747 li
670.283 400.756 li
672.84 400.756 li
672.84 396.489 li
674.712 396.489 li
677.07 400.756 li
680.023 400.756 li
677.305 396.183 li
678.602 395.877 679.951 394.725 679.951 392.618 cv
cp
f
684.953 396.471 mo
686.826 391.304 li
688.698 396.471 li
684.953 396.471 li
cp
685.223 388.747 mo
680.596 400.756 li
683.494 400.756 li
684.251 398.722 li
689.4 398.722 li
690.156 400.756 li
693.056 400.756 li
688.428 388.747 li
685.223 388.747 li
cp
f
694.168 400.756 mo
696.725 400.756 li
696.725 388.747 li
694.168 388.747 li
694.168 400.756 li
cp
f
707.293 396.291 mo
701.729 388.747 li
699.1 388.747 li
699.1 400.756 li
701.656 400.756 li
701.656 392.924 li
707.383 400.756 li
709.85 400.756 li
709.85 388.747 li
707.293 388.747 li
707.293 396.291 li
cp
f
714.418 392.024 mo
714.418 391.304 715.03 390.835 716.111 390.835 cv
717.335 390.835 718.631 391.25 719.604 392.15 cv
721.026 390.241 li
719.838 389.143 718.254 388.567 716.345 388.567 cv
713.518 388.567 711.789 390.223 711.789 392.222 cv
711.789 396.741 718.703 395.283 718.703 397.371 cv
718.703 398.074 718.037 398.704 716.615 398.704 cv
714.959 398.704 713.645 397.947 712.798 397.065 cv
711.393 399.064 li
712.527 400.198 714.184 400.973 716.507 400.973 cv
719.73 400.973 721.314 399.316 721.314 397.119 cv
721.314 392.636 714.418 393.914 714.418 392.024 cv
cp
f
722.049 390.998 mo
725.561 390.998 li
725.561 400.756 li
728.135 400.756 li
728.135 390.998 li
731.628 390.998 li
731.628 388.747 li
722.049 388.747 li
722.049 390.998 li
cp
f
738.539 398.704 mo
736.307 398.704 734.885 396.993 734.885 394.761 cv
734.885 392.51 736.307 390.817 738.539 390.817 cv
740.754 390.817 742.176 392.51 742.176 394.761 cv
742.176 396.993 740.754 398.704 738.539 398.704 cv
cp
738.539 388.549 mo
734.902 388.549 732.256 391.142 732.256 394.761 cv
732.256 398.38 734.902 400.973 738.539 400.973 cv
742.158 400.973 744.805 398.38 744.805 394.761 cv
744.805 391.142 742.158 388.549 738.539 388.549 cv
cp
f
751.859 394.238 mo
749.158 394.238 li
749.158 390.998 li
751.859 390.998 li
752.867 390.998 753.642 391.609 753.642 392.6 cv
753.642 393.626 752.867 394.238 751.859 394.238 cv
cp
756.271 392.618 mo
756.271 390.385 754.722 388.747 752.219 388.747 cv
746.602 388.747 li
746.602 400.756 li
749.158 400.756 li
749.158 396.489 li
751.031 396.489 li
753.39 400.756 li
756.342 400.756 li
753.623 396.183 li
754.92 395.877 756.271 394.725 756.271 392.618 cv
cp
f
767.592 388.747 mo
764.676 396.255 li
761.758 388.747 li
758.176 388.747 li
758.176 400.756 li
760.732 400.756 li
760.732 392.096 li
764.117 400.756 li
765.233 400.756 li
768.618 392.096 li
768.618 400.756 li
771.193 400.756 li
771.193 388.747 li
767.592 388.747 li
cp
f
758.223 355.119 mo
751.879 316.649 li
762.55 281.607 li
764.179 276.851 764.992 271.951 764.992 266.969 cv
764.992 242.175 744.821 222.003 720.028 222.003 cv
695.231 222.003 675.058 242.175 675.058 266.969 cv
675.026 273.019 li
665.445 301.049 li
676.681 301.049 li
679.038 330.723 li
702.641 328.555 li
705.838 354.477 li
701.371 355.028 li
698.709 333.435 li
674.913 335.622 li
672.524 305.549 li
659.152 305.549 li
670.53 272.26 li
670.558 266.958 li
670.558 239.694 692.75 217.503 720.028 217.503 cv
747.303 217.503 769.492 239.694 769.492 266.969 cv
769.492 272.448 768.597 277.839 766.831 282.992 cv
756.49 316.954 li
762.662 354.386 li
758.223 355.119 li
cp
.0952911 .0952911 .0952911 rgb
f
703.362 241.118 mo
700.903 241.118 698.591 242.076 696.852 243.816 cv
693.947 246.719 693.323 251.249 695.333 254.834 cv
696.729 257.324 li
693.981 258.1 li
690.024 259.217 687.261 262.863 687.261 266.965 cv
687.261 272.055 691.401 276.196 696.491 276.196 cv
743.53 276.196 li
745.99 276.196 748.31 275.235 750.063 273.49 cv
751.802 271.751 752.761 269.433 752.761 266.965 cv
752.761 262.863 749.997 259.217 746.039 258.1 cv
743.292 257.324 li
744.688 254.833 li
746.7 251.245 746.077 246.715 743.172 243.818 cv
741.43 242.076 739.118 241.118 736.659 241.118 cv
735.08 241.118 733.52 241.523 732.147 242.29 cv
729.659 243.678 li
728.886 240.936 li
727.771 236.985 724.121 234.225 720.011 234.225 cv
715.9 234.225 712.251 236.985 711.136 240.936 cv
710.362 243.678 li
707.874 242.29 li
706.502 241.523 704.941 241.118 703.362 241.118 cv
cp
743.53 280.696 mo
696.491 280.696 li
688.92 280.696 682.761 274.536 682.761 266.965 cv
682.761 261.723 685.79 256.982 690.371 254.693 cv
688.748 249.836 689.959 244.342 693.67 240.634 cv
696.259 238.044 699.701 236.618 703.362 236.618 cv
704.85 236.618 706.326 236.86 707.729 237.329 cv
710.017 232.751 714.762 229.725 720.011 229.725 cv
725.26 229.725 730.005 232.751 732.293 237.329 cv
733.695 236.86 735.172 236.618 736.659 236.618 cv
740.319 236.618 743.762 238.044 746.352 240.634 cv
750.065 244.337 751.277 249.833 749.65 254.693 cv
754.231 256.982 757.261 261.723 757.261 266.965 cv
757.261 270.635 755.833 274.083 753.241 276.675 cv
750.636 279.27 747.188 280.696 743.53 280.696 cv
cp
f
722.158 307.316 mo
717.863 305.975 li
722.95 289.696 li
710.95 289.696 li
717.863 267.575 li
722.158 268.917 li
717.071 285.196 li
729.071 285.196 li
722.158 307.316 li
cp
f
909.986 400.766 mo
912.543 400.766 li
912.543 388.756 li
909.986 388.756 li
909.986 400.766 li
cp
.0980392 .0941176 .0941176 rgb
f
919.653 398.515 mo
917.475 398.515 li
917.475 391.007 li
919.671 391.007 li
922.12 391.007 923.417 392.645 923.417 394.752 cv
923.417 396.805 922.03 398.515 919.653 398.515 cv
cp
919.653 388.756 mo
914.918 388.756 li
914.918 400.766 li
919.671 400.766 li
923.417 400.766 926.027 398.389 926.027 394.752 cv
926.027 391.151 923.417 388.756 919.653 388.756 cv
cp
f
927.842 400.766 mo
936.341 400.766 li
936.341 398.515 li
930.398 398.515 li
930.398 395.778 li
936.214 395.778 li
936.214 393.527 li
930.398 393.527 li
930.398 391.007 li
936.341 391.007 li
936.341 388.756 li
927.842 388.756 li
927.842 400.766 li
cp
f
941.433 396.48 mo
943.305 391.313 li
945.177 396.48 li
941.433 396.48 li
cp
944.907 388.756 mo
941.702 388.756 li
937.075 400.766 li
939.974 400.766 li
940.729 398.731 li
945.88 398.731 li
946.636 400.766 li
949.534 400.766 li
944.907 388.756 li
cp
f
911.679 325.053 mo
947.84 325.053 li
948.425 316.008 952.521 307.462 959.28 301.331 cv
959.696 300.953 960.119 300.571 960.613 300.152 cv
970.028 291.544 975.464 279.243 975.464 266.456 cv
975.464 241.255 954.962 220.753 929.761 220.753 cv
904.56 220.753 884.058 241.255 884.058 266.456 cv
884.058 279.245 889.49 291.546 898.962 300.206 cv
899.023 300.261 li
899.286 300.477 899.607 300.758 899.934 301.044 cv
900.227 301.299 li
907.005 307.479 911.094 316.025 911.679 325.053 cv
cp
952.267 329.553 mo
907.252 329.553 li
907.252 327.303 li
907.252 318.718 903.601 310.464 897.234 304.659 cv
896.974 304.434 li
896.672 304.168 896.382 303.915 896.094 303.675 cv
895.95 303.549 li
885.523 294.017 879.558 280.505 879.558 266.456 cv
879.558 238.774 902.079 216.253 929.761 216.253 cv
957.442 216.253 979.964 238.774 979.964 266.456 cv
979.964 280.503 973.995 294.016 963.587 303.527 cv
963.074 303.965 962.688 304.314 962.306 304.662 cv
955.925 310.451 952.267 318.702 952.267 327.303 cv
952.267 329.553 li
cp
.0952911 .0952911 .0952911 rgb
f
904.531 241.224 mo
901.35 238.042 li
908.951 230.439 919.041 226.252 929.761 226.252 cv
929.761 230.752 li
920.243 230.752 911.283 234.471 904.531 241.224 cv
cp
f
926.261 288.54 mo
921.255 276.403 li
914.761 276.403 li
914.761 271.903 li
924.267 271.903 li
926.261 276.738 li
933.261 259.768 li
938.267 271.903 li
944.761 271.903 li
944.761 276.403 li
935.255 276.403 li
933.261 271.569 li
926.261 288.54 li
cp
f
936.926 327.915 mo
932.596 326.692 li
946.238 278.352 li
950.568 279.575 li
936.926 327.915 li
cp
f
922.596 327.915 mo
908.953 279.575 li
913.283 278.352 li
926.926 326.692 li
922.596 327.915 li
cp
f
909.761 271.403 mo
908.244 271.403 907.011 272.636 907.011 274.153 cv
907.011 275.669 908.244 276.903 909.761 276.903 cv
911.277 276.903 912.511 275.669 912.511 274.153 cv
912.511 272.636 911.277 271.403 909.761 271.403 cv
cp
909.761 281.403 mo
905.763 281.403 902.511 278.15 902.511 274.153 cv
902.511 270.155 905.763 266.903 909.761 266.903 cv
913.759 266.903 917.011 270.155 917.011 274.153 cv
917.011 278.15 913.759 281.403 909.761 281.403 cv
cp
f
949.761 271.403 mo
948.244 271.403 947.011 272.636 947.011 274.153 cv
947.011 275.669 948.244 276.903 949.761 276.903 cv
951.277 276.903 952.511 275.669 952.511 274.153 cv
952.511 272.636 951.277 271.403 949.761 271.403 cv
cp
949.761 281.403 mo
945.763 281.403 942.511 278.15 942.511 274.153 cv
942.511 270.155 945.763 266.903 949.761 266.903 cv
953.759 266.903 957.011 270.155 957.011 274.153 cv
957.011 278.15 953.759 281.403 949.761 281.403 cv
cp
f
949.771 346.436 mo
945.271 346.436 li
945.271 327.303 li
949.771 327.303 li
949.771 346.436 li
cp
f
914.256 346.436 mo
909.756 346.436 li
909.756 327.303 li
914.256 327.303 li
914.256 346.436 li
cp
f
953.678 329.553 mo
905.843 329.553 li
905.843 325.053 li
953.678 325.053 li
953.678 329.553 li
cp
f
953.678 339.12 mo
905.843 339.12 li
905.843 334.62 li
953.678 334.62 li
953.678 339.12 li
cp
f
953.678 348.686 mo
905.843 348.686 li
905.843 344.186 li
953.678 344.186 li
953.678 348.686 li
cp
f
940.395 358.252 mo
919.132 358.252 li
919.132 353.752 li
940.395 353.752 li
940.395 358.252 li
cp
f
232.804 611.486 mo
234.677 606.319 li
236.549 611.486 li
232.804 611.486 li
cp
233.074 603.761 mo
228.447 615.771 li
231.346 615.771 li
232.102 613.737 li
237.251 613.737 li
238.008 615.771 li
240.907 615.771 li
236.279 603.761 li
233.074 603.761 li
cp
.0980392 .0941176 .0941176 rgb
f
244.09 607.039 mo
244.09 606.319 244.702 605.85 245.783 605.85 cv
247.007 605.85 248.303 606.264 249.275 607.165 cv
250.698 605.256 li
249.51 604.158 247.925 603.582 246.017 603.582 cv
243.19 603.582 241.461 605.238 241.461 607.237 cv
241.461 611.756 248.375 610.297 248.375 612.385 cv
248.375 613.088 247.709 613.718 246.287 613.718 cv
244.63 613.718 243.316 612.961 242.47 612.081 cv
241.065 614.079 li
242.2 615.213 243.856 615.987 246.179 615.987 cv
249.402 615.987 250.986 614.331 250.986 612.133 cv
250.986 607.651 244.09 608.928 244.09 607.039 cv
cp
f
251.722 606.012 mo
255.232 606.012 li
255.232 615.771 li
257.808 615.771 li
257.808 606.012 li
261.3 606.012 li
261.3 603.761 li
251.722 603.761 li
251.722 606.012 li
cp
f
268.193 609.252 mo
265.492 609.252 li
265.492 606.012 li
268.193 606.012 li
269.201 606.012 269.976 606.624 269.976 607.615 cv
269.976 608.641 269.201 609.252 268.193 609.252 cv
cp
272.604 607.633 mo
272.604 605.4 271.056 603.761 268.553 603.761 cv
262.936 603.761 li
262.936 615.771 li
265.492 615.771 li
265.492 611.504 li
267.365 611.504 li
269.724 615.771 li
272.676 615.771 li
269.958 611.198 li
271.254 610.891 272.604 609.739 272.604 607.633 cv
cp
f
280.217 613.718 mo
277.984 613.718 276.562 612.008 276.562 609.776 cv
276.562 607.524 277.984 605.833 280.217 605.833 cv
282.432 605.833 283.854 607.524 283.854 609.776 cv
283.854 612.008 282.432 613.718 280.217 613.718 cv
cp
280.217 603.563 mo
276.58 603.563 273.933 606.157 273.933 609.776 cv
273.933 613.395 276.58 615.987 280.217 615.987 cv
283.836 615.987 286.483 613.395 286.483 609.776 cv
286.483 606.157 283.836 603.563 280.217 603.563 cv
cp
f
296.472 611.305 mo
290.908 603.761 li
288.279 603.761 li
288.279 615.771 li
290.836 615.771 li
290.836 607.938 li
296.562 615.771 li
299.028 615.771 li
299.028 603.761 li
296.472 603.761 li
296.472 611.305 li
cp
f
307.108 613.718 mo
304.876 613.718 303.453 612.008 303.453 609.776 cv
303.453 607.524 304.876 605.833 307.108 605.833 cv
309.323 605.833 310.746 607.524 310.746 609.776 cv
310.746 612.008 309.323 613.718 307.108 613.718 cv
cp
307.108 603.563 mo
303.471 603.563 300.825 606.157 300.825 609.776 cv
300.825 613.395 303.471 615.987 307.108 615.987 cv
310.728 615.987 313.375 613.395 313.375 609.776 cv
313.375 606.157 310.728 603.563 307.108 603.563 cv
cp
f
321.671 611.27 mo
318.754 603.761 li
315.171 603.761 li
315.171 615.771 li
317.728 615.771 li
317.728 607.11 li
321.112 615.771 li
322.229 615.771 li
325.614 607.11 li
325.614 615.771 li
328.188 615.771 li
328.188 603.761 li
324.587 603.761 li
321.671 611.27 li
cp
f
338.159 603.761 mo
335.188 608.569 li
332.217 603.761 li
329.301 603.761 li
333.91 610.856 li
333.91 615.771 li
336.467 615.771 li
336.467 610.856 li
341.058 603.761 li
338.159 603.761 li
cp
f
295.536 452.982 mo
271.136 452.982 251.286 472.833 251.286 497.232 cv
251.286 521.631 271.136 541.482 295.536 541.482 cv
319.936 541.482 339.786 521.631 339.786 497.232 cv
339.786 472.833 319.936 452.982 295.536 452.982 cv
cp
295.536 545.982 mo
268.655 545.982 246.786 524.113 246.786 497.232 cv
246.786 470.351 268.655 448.482 295.536 448.482 cv
322.417 448.482 344.286 470.351 344.286 497.232 cv
344.286 524.113 322.417 545.982 295.536 545.982 cv
cp
.0952911 .0952911 .0952911 rgb
f
283.008 466.372 mo
281.306 462.206 li
285.828 460.358 290.614 459.421 295.533 459.421 cv
295.533 463.921 li
291.201 463.921 286.987 464.746 283.008 466.372 cv
cp
f
262.224 497.23 mo
257.724 497.23 li
257.724 484.296 264.246 472.392 275.17 465.385 cv
277.6 469.173 li
267.972 475.348 262.224 485.837 262.224 497.23 cv
cp
f
250.349 553.749 mo
246.932 553.749 244.095 552.805 242.029 550.739 cv
245.21 547.557 li
251.825 554.173 279.862 540.873 309.521 511.217 cv
339.177 481.558 352.475 453.52 345.862 446.907 cv
349.043 443.725 li
360.192 454.874 338.641 488.458 312.703 514.399 cv
291.571 535.529 265.365 553.748 250.349 553.749 cv
cp
f
242.029 550.739 mo
241.335 550.046 240.755 549.237 240.304 548.335 cv
244.327 546.32 li
244.563 546.79 244.86 547.206 245.21 547.557 cv
242.029 550.739 li
cp
f
337.268 445.626 mo
336.438 441.203 li
337.986 440.913 339.448 440.766 340.781 440.766 cv
340.965 440.776 341.175 440.769 341.369 440.775 cv
341.224 445.273 li
341.079 445.268 340.923 445.261 340.782 445.266 cv
339.725 445.266 338.543 445.387 337.268 445.626 cv
cp
329.204 448.169 mo
327.47 444.016 li
328.982 443.385 330.453 442.839 331.839 442.393 cv
333.216 446.677 li
331.95 447.084 330.599 447.586 329.204 448.169 cv
cp
321.39 451.985 mo
319.216 448.045 li
320.597 447.283 321.963 446.57 323.275 445.926 cv
325.259 449.965 li
324.01 450.578 322.709 451.257 321.39 451.985 cv
cp
248.265 526.964 mo
244.225 524.982 li
244.872 523.664 245.585 522.297 246.344 520.922 cv
250.284 523.097 li
249.559 524.409 248.88 525.71 248.265 526.964 cv
cp
244.978 534.924 mo
240.693 533.545 li
241.141 532.154 241.687 530.684 242.315 529.178 cv
246.469 530.911 li
245.888 532.301 245.387 533.652 244.978 534.924 cv
cp
239.08 543.081 mo
239.073 542.884 239.07 542.685 239.07 542.483 cv
239.07 541.149 239.216 539.689 239.505 538.146 cv
243.928 538.974 li
243.69 540.245 243.57 541.425 243.57 542.483 cv
243.57 542.632 243.572 542.781 243.577 542.926 cv
239.08 543.081 li
cp
f
345.862 446.907 mo
345.506 446.552 345.101 446.262 344.623 446.022 cv
346.642 442 li
347.544 442.454 348.353 443.034 349.043 443.725 cv
345.862 446.907 li
cp
f
250.695 441.873 mo
248.034 441.873 245.87 444.037 245.87 446.697 cv
245.87 449.357 248.034 451.522 250.695 451.522 cv
253.355 451.522 255.521 449.357 255.521 446.697 cv
255.521 444.037 253.355 441.873 250.695 441.873 cv
cp
250.695 456.022 mo
245.553 456.022 241.37 451.839 241.37 446.697 cv
241.37 441.555 245.553 437.373 250.695 437.373 cv
255.837 437.373 260.021 441.555 260.021 446.697 cv
260.021 451.839 255.837 456.022 250.695 456.022 cv
cp
f
223.998 481.058 mo
222.897 481.058 222.002 481.954 222.002 483.054 cv
222.002 484.154 222.897 485.048 223.998 485.048 cv
225.097 485.048 225.991 484.154 225.991 483.054 cv
225.991 481.954 225.097 481.058 223.998 481.058 cv
cp
223.998 489.548 mo
220.416 489.548 217.502 486.635 217.502 483.054 cv
217.502 479.472 220.416 476.558 223.998 476.558 cv
227.578 476.558 230.491 479.472 230.491 483.054 cv
230.491 486.635 227.578 489.548 223.998 489.548 cv
cp
f
305.175 558.673 mo
304.076 558.673 303.181 559.569 303.181 560.669 cv
303.181 561.769 304.076 562.664 305.175 562.664 cv
306.276 562.664 307.171 561.769 307.171 560.669 cv
307.171 559.569 306.276 558.673 305.175 558.673 cv
cp
305.175 567.164 mo
301.594 567.164 298.681 564.25 298.681 560.669 cv
298.681 557.087 301.594 554.173 305.175 554.173 cv
308.757 554.173 311.671 557.087 311.671 560.669 cv
311.671 564.25 308.757 567.164 305.175 567.164 cv
cp
f
659.501 603.76 mo
656.926 603.76 li
656.926 615.77 li
664.578 615.77 li
664.578 613.52 li
659.501 613.52 li
659.501 603.76 li
cp
.0980392 .0941176 .0941176 rgb
f
669.401 611.485 mo
671.273 606.318 li
673.146 611.485 li
669.401 611.485 li
cp
669.671 603.76 mo
665.044 615.77 li
667.942 615.77 li
668.698 613.736 li
673.849 613.736 li
674.604 615.77 li
677.503 615.77 li
672.876 603.76 li
669.671 603.76 li
cp
f
684.485 613.52 mo
681.173 613.52 li
681.173 610.784 li
684.485 610.784 li
685.476 610.784 686.017 611.395 686.017 612.151 cv
686.017 613.016 685.44 613.52 684.485 613.52 cv
cp
681.173 606.012 mo
684.378 606.012 li
685.242 606.012 685.782 606.534 685.782 607.272 cv
685.782 608.046 685.242 608.532 684.378 608.532 cv
681.173 608.532 li
681.173 606.012 li
cp
686.322 609.577 mo
687.456 609.342 688.394 608.317 688.394 606.822 cv
688.394 605.219 687.223 603.76 684.937 603.76 cv
678.616 603.76 li
678.616 615.77 li
685.134 615.77 li
687.438 615.77 688.627 614.331 688.627 612.512 cv
688.627 611.017 687.618 609.775 686.322 609.577 cv
cp
f
696.258 613.717 mo
694.025 613.717 692.603 612.007 692.603 609.775 cv
692.603 607.524 694.025 605.832 696.258 605.832 cv
698.473 605.832 699.896 607.524 699.896 609.775 cv
699.896 612.007 698.473 613.717 696.258 613.717 cv
cp
696.258 603.563 mo
692.62 603.563 689.974 606.156 689.974 609.775 cv
689.974 613.393 692.62 615.987 696.258 615.987 cv
699.877 615.987 702.524 613.393 702.524 609.775 cv
702.524 606.156 699.877 603.563 696.258 603.563 cv
cp
f
709.577 609.252 mo
706.877 609.252 li
706.877 606.012 li
709.577 606.012 li
710.586 606.012 711.36 606.624 711.36 607.614 cv
711.36 608.641 710.586 609.252 709.577 609.252 cv
cp
713.989 607.631 mo
713.989 605.399 712.44 603.76 709.938 603.76 cv
704.32 603.76 li
704.32 615.77 li
706.877 615.77 li
706.877 611.503 li
708.749 611.503 li
711.108 615.77 li
714.062 615.77 li
711.343 611.198 li
712.639 610.891 713.989 609.739 713.989 607.631 cv
cp
f
718.991 611.485 mo
720.863 606.318 li
722.735 611.485 li
718.991 611.485 li
cp
719.261 603.76 mo
714.634 615.77 li
717.532 615.77 li
718.288 613.736 li
723.438 613.736 li
724.194 615.77 li
727.093 615.77 li
722.466 603.76 li
719.261 603.76 li
cp
f
726.315 606.012 mo
729.827 606.012 li
729.827 615.77 li
732.401 615.77 li
732.401 606.012 li
735.895 606.012 li
735.895 603.76 li
726.315 603.76 li
726.315 606.012 li
cp
f
742.806 613.717 mo
740.573 613.717 739.15 612.007 739.15 609.775 cv
739.15 607.524 740.573 605.832 742.806 605.832 cv
745.021 605.832 746.442 607.524 746.442 609.775 cv
746.442 612.007 745.021 613.717 742.806 613.717 cv
cp
742.806 603.563 mo
739.169 603.563 736.522 606.156 736.522 609.775 cv
736.522 613.393 739.169 615.987 742.806 615.987 cv
746.425 615.987 749.071 613.393 749.071 609.775 cv
749.071 606.156 746.425 603.563 742.806 603.563 cv
cp
f
756.126 609.252 mo
753.425 609.252 li
753.425 606.012 li
756.126 606.012 li
757.134 606.012 757.908 606.624 757.908 607.614 cv
757.908 608.641 757.134 609.252 756.126 609.252 cv
cp
760.537 607.631 mo
760.537 605.399 758.988 603.76 756.485 603.76 cv
750.868 603.76 li
750.868 615.77 li
753.425 615.77 li
753.425 611.503 li
755.298 611.503 li
757.656 615.77 li
760.608 615.77 li
757.89 611.198 li
759.187 610.891 760.537 609.739 760.537 607.631 cv
cp
f
769.716 603.76 mo
766.745 608.569 li
763.774 603.76 li
760.857 603.76 li
765.467 610.855 li
765.467 615.77 li
768.023 615.77 li
768.023 610.855 li
772.614 603.76 li
769.716 603.76 li
cp
f
681.626 469.456 mo
681.626 494.534 li
679.901 494.948 li
663.597 498.861 652.21 513.316 652.21 530.1 cv
652.21 550.043 668.434 566.268 688.376 566.268 cv
708.321 566.268 724.548 550.043 724.548 530.1 cv
724.548 513.317 713.16 498.862 696.854 494.948 cv
695.13 494.534 li
695.13 469.456 li
681.626 469.456 li
cp
688.376 570.768 mo
665.953 570.768 647.71 552.525 647.71 530.1 cv
647.71 511.825 659.718 496.005 677.126 491.026 cv
677.126 464.956 li
699.63 464.956 li
699.63 491.026 li
717.039 496.006 729.048 511.826 729.048 530.1 cv
729.048 552.525 710.803 570.768 688.376 570.768 cv
cp
.0952911 .0952911 .0952911 rgb
f
663.28 523.093 mo
658.944 521.892 li
661.254 513.557 667.013 506.583 674.744 502.761 cv
676.738 506.795 li
670.153 510.05 665.249 515.991 663.28 523.093 cv
cp
f
688.376 556.305 mo
675.461 556.305 664.698 546.914 662.56 534.6 cv
714.194 534.6 li
712.055 546.914 701.292 556.305 688.376 556.305 cv
cp
657.673 530.1 mo
657.673 547.032 671.448 560.805 688.376 560.805 cv
705.31 560.805 719.081 547.032 719.081 530.1 cv
657.673 530.1 li
cp
f
677.185 460.448 mo
675.938 460.448 674.923 461.457 674.923 462.698 cv
674.923 463.944 675.938 464.958 677.185 464.958 cv
699.579 464.958 li
700.821 464.958 701.831 463.944 701.831 462.698 cv
701.831 461.457 700.821 460.448 699.579 460.448 cv
677.185 460.448 li
cp
699.579 469.458 mo
677.185 469.458 li
673.456 469.458 670.423 466.425 670.423 462.698 cv
670.423 458.976 673.456 455.948 677.185 455.948 cv
699.579 455.948 li
703.302 455.948 706.331 458.976 706.331 462.698 cv
706.331 466.425 703.302 469.458 699.579 469.458 cv
cp
f
765.53 519.668 mo
749.089 519.668 li
749.089 515.168 li
765.53 515.168 li
765.53 519.668 li
cp
f
757.308 561.176 mo
754.513 561.176 751.882 560.087 749.9 558.111 cv
747.924 556.125 746.839 553.495 746.839 550.698 cv
746.839 500.1 li
751.339 500.1 li
751.339 550.698 li
751.339 552.296 751.959 553.8 753.084 554.931 cv
754.21 556.054 755.712 556.676 757.308 556.676 cv
758.903 556.676 760.406 556.054 761.54 554.924 cv
762.66 553.799 763.28 552.296 763.28 550.698 cv
763.28 500.1 li
767.78 500.1 li
767.78 550.698 li
767.78 553.496 766.694 556.126 764.722 558.106 cv
762.732 560.088 760.102 561.176 757.308 561.176 cv
cp
f
770.331 502.35 mo
744.286 502.35 li
744.286 497.85 li
770.331 497.85 li
770.331 502.35 li
cp
f
779.581 533.762 mo
735.034 533.762 li
735.034 529.262 li
779.581 529.262 li
779.581 533.762 li
cp
f
776.349 571.018 mo
771.849 571.018 li
771.849 526.028 li
776.349 526.028 li
776.349 571.018 li
cp
f
742.771 571.018 mo
738.271 571.018 li
738.271 526.028 li
742.771 526.028 li
742.771 571.018 li
cp
f
759.558 509.741 mo
755.058 509.741 li
755.058 440.411 li
755.058 439.172 754.575 438.005 753.698 437.125 cv
752.823 436.251 751.656 435.768 750.417 435.768 cv
749.176 435.768 748.011 436.25 747.138 437.126 cv
746.256 438.007 745.772 439.172 745.772 440.411 cv
745.772 444.613 li
745.772 447.053 744.821 449.349 743.095 451.077 cv
741.363 452.804 739.067 453.754 736.628 453.754 cv
734.187 453.754 731.892 452.804 730.164 451.079 cv
728.437 449.352 727.485 447.056 727.485 444.613 cv
727.485 440.411 li
727.485 439.169 727.003 438.004 726.127 437.129 cv
725.249 436.251 724.084 435.768 722.845 435.768 cv
721.604 435.768 720.438 436.251 719.561 437.128 cv
718.684 438.006 718.2 439.172 718.2 440.411 cv
718.2 444.613 li
718.2 447.055 717.248 449.351 715.52 451.079 cv
713.798 452.803 711.502 453.754 709.056 453.754 cv
706.616 453.754 704.32 452.804 702.592 451.08 cv
700.864 449.346 699.915 447.051 699.915 444.613 cv
699.915 440.411 li
699.915 439.171 699.432 438.005 698.555 437.129 cv
697.677 436.251 696.51 435.768 695.271 435.768 cv
694.031 435.768 692.866 436.251 691.988 437.128 cv
691.109 438.007 690.626 439.172 690.626 440.411 cv
690.626 509.741 li
686.126 509.741 li
686.126 440.411 li
686.126 437.97 687.078 435.674 688.807 433.946 cv
690.534 432.219 692.829 431.268 695.271 431.268 cv
697.71 431.268 700.006 432.219 701.735 433.945 cv
703.464 435.672 704.415 437.968 704.415 440.411 cv
704.415 444.613 li
704.415 445.852 704.897 447.019 705.774 447.899 cv
706.649 448.771 707.816 449.254 709.056 449.254 cv
710.298 449.254 711.463 448.772 712.336 447.897 cv
713.217 447.018 713.7 445.852 713.7 444.613 cv
713.7 440.411 li
713.7 437.971 714.651 435.675 716.378 433.947 cv
718.106 432.219 720.402 431.268 722.845 431.268 cv
725.286 431.268 727.581 432.219 729.309 433.947 cv
731.034 435.671 731.985 437.967 731.985 440.411 cv
731.985 444.613 li
731.985 445.853 732.469 447.019 733.346 447.895 cv
734.223 448.771 735.388 449.254 736.628 449.254 cv
737.867 449.254 739.034 448.771 739.914 447.894 cv
740.789 447.018 741.272 445.852 741.272 444.613 cv
741.272 440.411 li
741.272 437.97 742.225 435.674 743.953 433.946 cv
745.675 432.22 747.971 431.268 750.417 431.268 cv
752.856 431.268 755.152 432.219 756.882 433.945 cv
758.608 435.679 759.558 437.973 759.558 440.411 cv
759.558 509.741 li
cp
f
28.5938 609.253 mo
25.8926 609.253 li
25.8926 606.011 li
28.5938 606.011 li
29.6016 606.011 30.376 606.625 30.376 607.615 cv
30.376 608.64 29.6016 609.253 28.5938 609.253 cv
cp
33.0049 607.632 mo
33.0049 605.4 31.4561 603.761 28.9541 603.761 cv
23.3359 603.761 li
23.3359 615.771 li
25.8926 615.771 li
25.8926 611.503 li
27.7656 611.503 li
30.124 615.771 li
33.0771 615.771 li
30.3584 611.197 li
31.6543 610.892 33.0049 609.74 33.0049 607.632 cv
cp
.0980392 .0941176 .0941176 rgb
f
38.0068 611.486 mo
39.8789 606.318 li
41.752 611.486 li
38.0068 611.486 li
cp
38.2764 603.761 mo
33.6494 615.771 li
36.5479 615.771 li
37.3047 613.736 li
42.4541 613.736 li
43.21 615.771 li
46.1094 615.771 li
41.4814 603.761 li
38.2764 603.761 li
cp
f
51.957 613.521 mo
49.7783 613.521 li
49.7783 606.011 li
51.9756 606.011 li
54.4238 606.011 55.7207 607.65 55.7207 609.757 cv
55.7207 611.81 54.334 613.521 51.957 613.521 cv
cp
51.957 603.761 mo
47.2217 603.761 li
47.2217 615.771 li
51.9756 615.771 li
55.7207 615.771 58.3311 613.394 58.3311 609.757 cv
58.3311 606.156 55.7207 603.761 51.957 603.761 cv
cp
f
60.1455 615.771 mo
62.7021 615.771 li
62.7021 603.761 li
60.1455 603.761 li
60.1455 615.771 li
cp
f
68.1738 611.486 mo
70.0469 606.318 li
71.9189 611.486 li
68.1738 611.486 li
cp
68.4443 603.761 mo
63.8164 615.771 li
66.7158 615.771 li
67.4717 613.736 li
72.6211 613.736 li
73.3779 615.771 li
76.2764 615.771 li
71.6494 603.761 li
68.4443 603.761 li
cp
f
75.499 606.011 mo
79.0098 606.011 li
79.0098 615.771 li
81.585 615.771 li
81.585 606.011 li
85.0781 606.011 li
85.0781 603.761 li
75.499 603.761 li
75.499 606.011 li
cp
f
86.7129 615.771 mo
89.2695 615.771 li
89.2695 603.761 li
86.7129 603.761 li
86.7129 615.771 li
cp
f
97.3525 613.718 mo
95.1201 613.718 93.6973 612.007 93.6973 609.775 cv
93.6973 607.525 95.1201 605.832 97.3525 605.832 cv
99.5674 605.832 100.989 607.525 100.989 609.775 cv
100.989 612.007 99.5674 613.718 97.3525 613.718 cv
cp
97.3525 603.564 mo
93.7148 603.564 91.0684 606.156 91.0684 609.775 cv
91.0684 613.394 93.7148 615.986 97.3525 615.986 cv
100.972 615.986 103.618 613.394 103.618 609.775 cv
103.618 606.156 100.972 603.564 97.3525 603.564 cv
cp
f
113.607 603.761 mo
113.607 611.306 li
108.043 603.761 li
105.415 603.761 li
105.415 615.771 li
107.972 615.771 li
107.972 607.939 li
113.697 615.771 li
116.164 615.771 li
116.164 603.761 li
113.607 603.761 li
cp
f
69.75 444.518 mo
37.9067 444.518 12 470.425 12 502.268 cv
12 534.112 37.9067 560.018 69.75 560.018 cv
101.593 560.018 127.5 534.112 127.5 502.268 cv
127.5 470.425 101.593 444.518 69.75 444.518 cv
cp
69.75 564.518 mo
35.4253 564.518 7.5 536.593 7.5 502.268 cv
7.5 467.943 35.4253 440.018 69.75 440.018 cv
104.075 440.018 132 467.943 132 502.268 cv
132 536.593 104.075 564.518 69.75 564.518 cv
cp
.0952911 .0952911 .0952911 rgb
f
69.75 454.518 mo
43.4204 454.518 22 475.938 22 502.268 cv
22 528.597 43.4204 550.018 69.75 550.018 cv
96.0796 550.018 117.5 528.597 117.5 502.268 cv
117.5 475.938 96.0796 454.518 69.75 454.518 cv
cp
69.75 554.518 mo
40.9395 554.518 17.5 531.079 17.5 502.268 cv
17.5 473.458 40.9395 450.018 69.75 450.018 cv
98.5605 450.018 122 473.458 122 502.268 cv
122 531.079 98.5605 554.518 69.75 554.518 cv
cp
f
34.5723 500.019 mo
50.1304 500.019 li
50.7578 494.615 53.6187 489.668 57.9995 486.415 cv
50.2129 472.927 li
41.0903 479.014 35.2778 489.082 34.5723 500.019 cv
cp
52.25 504.519 mo
30 504.519 li
30 502.269 li
30 488.119 37.6152 474.927 49.874 467.841 cv
51.8232 466.715 li
64.0801 487.947 li
62.1348 489.073 li
57.4253 491.797 54.5 496.854 54.5 502.268 cv
54.5 504.518 li
52.25 504.519 li
cp
f
54.1094 533.863 mo
58.9531 536.26 64.3149 537.518 69.75 537.518 cv
75.1851 537.518 80.5474 536.26 85.3906 533.863 cv
77.6055 520.377 li
72.6519 522.533 66.8472 522.533 61.8945 520.377 cv
54.1094 533.863 li
cp
69.75 542.018 mo
62.7725 542.018 55.8994 540.178 49.8745 536.697 cv
47.9268 535.572 li
60.1855 514.337 li
62.1348 515.465 li
66.7754 518.151 72.7236 518.152 77.3652 515.465 cv
79.3149 514.337 li
91.5732 535.572 li
89.6255 536.697 li
83.6011 540.178 76.728 542.018 69.75 542.018 cv
cp
f
89.3696 500.018 mo
104.928 500.019 li
104.222 489.082 98.4097 479.014 89.2871 472.927 cv
81.5005 486.415 li
85.8813 489.668 88.7422 494.615 89.3696 500.018 cv
cp
109.5 504.519 mo
85 504.519 li
85 502.269 li
85 496.854 82.0747 491.797 77.3652 489.073 cv
75.4199 487.947 li
87.6768 466.715 li
89.626 467.841 li
101.885 474.927 109.5 488.119 109.5 502.269 cv
109.5 504.519 li
cp
f
69.75 496.518 mo
66.5796 496.518 64 499.098 64 502.268 cv
64 505.438 66.5796 508.018 69.75 508.018 cv
72.9204 508.018 75.5 505.438 75.5 502.268 cv
75.5 499.098 72.9204 496.518 69.75 496.518 cv
cp
69.75 512.518 mo
64.0981 512.518 59.5 507.92 59.5 502.268 cv
59.5 496.616 64.0981 492.018 69.75 492.018 cv
75.4019 492.018 80 496.616 80 502.268 cv
80 507.92 75.4019 512.518 69.75 512.518 cv
cp
f
448.432 611.359 mo
451.601 611.359 li
451.601 612.8 li
451.115 613.25 450.125 613.718 449.062 613.718 cv
446.865 613.718 445.281 612.044 445.281 609.775 cv
445.281 607.505 446.865 605.832 449.062 605.832 cv
450.322 605.832 451.349 606.552 451.907 607.398 cv
454.014 606.246 li
453.113 604.824 451.547 603.564 449.062 603.564 cv
445.533 603.564 442.652 605.976 442.652 609.775 cv
442.652 613.556 445.533 615.986 449.062 615.986 cv
451.223 615.986 452.933 615.105 454.158 613.736 cv
454.158 609.126 li
448.432 609.126 li
448.432 611.359 li
cp
.0980392 .0941176 .0941176 rgb
f
461.446 609.253 mo
458.745 609.253 li
458.745 606.011 li
461.446 606.011 li
462.454 606.011 463.229 606.625 463.229 607.615 cv
463.229 608.64 462.454 609.253 461.446 609.253 cv
cp
465.857 607.632 mo
465.857 605.4 464.309 603.761 461.806 603.761 cv
456.188 603.761 li
456.188 615.771 li
458.745 615.771 li
458.745 611.503 li
460.618 611.503 li
462.977 615.771 li
465.929 615.771 li
463.21 611.197 li
464.507 610.892 465.857 609.74 465.857 607.632 cv
cp
f
470.859 611.486 mo
472.731 606.318 li
474.604 611.486 li
470.859 611.486 li
cp
471.129 603.761 mo
466.502 615.771 li
469.4 615.771 li
470.157 613.736 li
475.306 613.736 li
476.063 615.771 li
478.961 615.771 li
474.334 603.761 li
471.129 603.761 li
cp
f
484.198 612.98 mo
480.867 603.761 li
477.968 603.761 li
482.595 615.771 li
485.8 615.771 li
490.428 603.761 li
487.529 603.761 li
484.198 612.98 li
cp
f
491.54 615.771 mo
494.097 615.771 li
494.097 603.761 li
491.54 603.761 li
491.54 615.771 li
cp
f
505.312 603.761 mo
495.733 603.761 li
495.733 606.011 li
499.244 606.011 li
499.244 615.771 li
501.819 615.771 li
501.819 606.011 li
505.312 606.011 li
505.312 603.761 li
cp
f
508.892 611.486 mo
510.765 606.318 li
512.638 611.486 li
508.892 611.486 li
cp
509.162 603.761 mo
504.535 615.771 li
507.434 615.771 li
508.19 613.736 li
513.339 613.736 li
514.096 615.771 li
516.995 615.771 li
512.367 603.761 li
509.162 603.761 li
cp
f
516.218 606.011 mo
519.729 606.011 li
519.729 615.771 li
522.304 615.771 li
522.304 606.011 li
525.796 606.011 li
525.796 603.761 li
516.218 603.761 li
516.218 606.011 li
cp
f
527.431 615.771 mo
529.987 615.771 li
529.987 603.761 li
527.431 603.761 li
527.431 615.771 li
cp
f
538.07 613.718 mo
535.838 613.718 534.415 612.007 534.415 609.775 cv
534.415 607.525 535.838 605.832 538.07 605.832 cv
540.285 605.832 541.708 607.525 541.708 609.775 cv
541.708 612.007 540.285 613.718 538.07 613.718 cv
cp
538.07 603.564 mo
534.433 603.564 531.786 606.156 531.786 609.775 cv
531.786 613.394 534.433 615.986 538.07 615.986 cv
541.689 615.986 544.337 613.394 544.337 609.775 cv
544.337 606.156 541.689 603.564 538.07 603.564 cv
cp
f
554.325 603.761 mo
554.325 611.306 li
548.762 603.761 li
546.133 603.761 li
546.133 615.771 li
548.689 615.771 li
548.689 607.939 li
554.415 615.771 li
556.882 615.771 li
556.882 603.761 li
554.325 603.761 li
cp
f
527.336 461.398 mo
522.836 461.398 li
522.836 453.189 li
527.336 453.189 li
527.336 461.398 li
cp
.0952911 .0952911 .0952911 rgb
f
493.952 457.488 mo
489.452 457.488 li
489.452 444.9 li
493.952 444.9 li
493.952 457.488 li
cp
f
506.929 452.83 mo
502.429 452.83 li
502.429 434.768 li
506.929 434.768 li
506.929 452.83 li
cp
f
443.26 495.955 mo
447.288 499.983 li
448.363 501.058 449.794 501.65 451.316 501.65 cv
451.323 501.65 li
452.84 501.65 454.269 501.058 455.345 499.983 cv
466.864 488.463 li
462.836 484.435 li
461.759 483.358 460.329 482.766 458.808 482.766 cv
457.287 482.766 455.856 483.358 454.779 484.435 cv
443.26 495.955 li
cp
451.323 506.15 mo
451.314 506.15 li
448.592 506.15 446.032 505.09 444.106 503.166 cv
436.896 495.955 li
451.598 481.253 li
453.524 479.326 456.085 478.266 458.808 478.266 cv
461.53 478.266 464.09 479.326 466.018 481.252 cv
473.228 488.463 li
458.526 503.165 li
456.6 505.09 454.042 506.15 451.323 506.15 cv
cp
f
482.249 498.054 mo
476.382 498.421 470.857 500.918 466.688 505.089 cv
462.108 509.668 459.585 515.756 459.584 522.23 cv
459.583 528.705 462.103 534.792 466.681 539.37 cv
487.731 560.42 li
492.308 564.997 498.393 567.517 504.866 567.517 cv
504.866 567.517 504.867 567.517 504.868 567.517 cv
511.344 567.517 517.432 564.995 522.013 560.415 cv
526.182 556.246 528.679 550.722 529.049 544.855 cv
529.051 544.691 529.06 544.533 529.076 544.366 cv
529.196 543.106 529.766 541.904 530.68 540.991 cv
531.593 540.076 532.798 539.505 534.07 539.386 cv
534.219 539.371 534.376 539.362 534.543 539.36 cv
540.41 538.99 545.935 536.493 550.104 532.325 cv
559.557 522.872 559.559 507.493 550.109 498.042 cv
529.06 476.993 li
524.482 472.416 518.397 469.895 511.924 469.895 cv
505.448 469.895 499.358 472.417 494.778 476.999 cv
490.607 481.168 488.11 486.693 487.742 492.562 cv
487.739 492.725 487.73 492.885 487.713 493.05 cv
487.594 494.307 487.024 495.51 486.109 496.422 cv
485.199 497.334 483.997 497.904 482.727 498.027 cv
482.551 498.042 482.401 498.051 482.249 498.054 cv
cp
504.868 572.017 mo
504.867 572.017 504.867 572.017 504.866 572.017 cv
497.191 572.017 489.976 569.029 484.55 563.602 cv
463.5 542.551 li
458.071 537.124 455.082 529.906 455.084 522.229 cv
455.085 514.553 458.076 507.336 463.505 501.907 cv
468.467 496.945 475.047 493.98 482.034 493.559 cv
482.169 493.555 li
482.221 493.555 482.27 493.549 482.322 493.545 cv
482.527 493.525 482.752 493.416 482.928 493.24 cv
483.105 493.063 483.213 492.84 483.235 492.609 cv
483.241 492.553 483.243 492.513 483.243 492.471 cv
483.247 492.345 li
483.669 485.356 486.635 478.776 491.596 473.817 cv
497.026 468.386 504.245 465.395 511.924 465.395 cv
519.6 465.395 526.814 468.384 532.241 473.812 cv
553.291 494.86 li
564.495 506.065 564.493 524.299 553.285 535.506 cv
548.324 540.467 541.744 543.432 534.757 543.855 cv
534.621 543.859 li
534.583 543.859 534.547 543.861 534.51 543.865 cv
534.26 543.888 534.037 543.997 533.863 544.171 cv
533.686 544.348 533.577 544.572 533.556 544.802 cv
533.55 544.854 533.548 544.892 533.548 544.933 cv
533.544 545.069 li
533.12 552.056 530.155 558.635 525.194 563.596 cv
519.765 569.027 512.545 572.017 504.868 572.017 cv
cp
f
483.803 540.229 mo
474.813 531.237 li
472.407 528.832 471.083 525.633 471.084 522.233 cv
471.084 518.831 472.411 515.629 474.819 513.22 cv
478.002 516.401 li
476.443 517.961 475.584 520.033 475.584 522.235 cv
475.583 524.433 476.439 526.5 477.995 528.055 cv
486.985 537.047 li
483.803 540.229 li
cp
f
482.929 496.421 mo
472.508 486.001 li
469.763 483.256 468.252 479.607 468.252 475.727 cv
468.251 471.845 469.763 468.196 472.507 465.45 cv
475.69 468.632 li
473.795 470.527 472.751 473.047 472.752 475.726 cv
472.752 478.405 473.795 480.924 475.69 482.819 cv
486.111 493.239 li
482.929 496.421 li
cp
f
870.784 615.771 mo
879.282 615.771 li
879.282 613.521 li
873.341 613.521 li
873.341 610.783 li
879.157 610.783 li
879.157 608.533 li
873.341 608.533 li
873.341 606.011 li
879.282 606.011 li
879.282 603.761 li
870.784 603.761 li
870.784 615.771 li
cp
.0980392 .0941176 .0941176 rgb
f
883.745 603.761 mo
881.169 603.761 li
881.169 615.771 li
888.821 615.771 li
888.821 613.521 li
883.745 613.521 li
883.745 603.761 li
cp
f
890.548 615.771 mo
899.046 615.771 li
899.046 613.521 li
893.104 613.521 li
893.104 610.783 li
898.921 610.783 li
898.921 608.533 li
893.104 608.533 li
893.104 606.011 li
899.046 606.011 li
899.046 603.761 li
890.548 603.761 li
890.548 615.771 li
cp
f
906.874 605.832 mo
908.099 605.832 909.179 606.607 909.685 607.578 cv
911.88 606.498 li
911.034 604.986 909.503 603.564 906.874 603.564 cv
903.255 603.564 900.466 606.066 900.466 609.775 cv
900.466 613.466 903.255 615.986 906.874 615.986 cv
909.503 615.986 911.034 614.529 911.88 613.035 cv
909.685 611.972 li
909.179 612.945 908.099 613.718 906.874 613.718 cv
904.679 613.718 903.095 612.044 903.095 609.775 cv
903.095 607.505 904.679 605.832 906.874 605.832 cv
cp
f
912.669 606.011 mo
916.181 606.011 li
916.181 615.771 li
918.755 615.771 li
918.755 606.011 li
922.247 606.011 li
922.247 603.761 li
912.669 603.761 li
912.669 606.011 li
cp
f
929.14 609.253 mo
926.438 609.253 li
926.438 606.011 li
929.14 606.011 li
930.147 606.011 930.923 606.625 930.923 607.615 cv
930.923 608.64 930.147 609.253 929.14 609.253 cv
cp
933.552 607.632 mo
933.552 605.4 932.003 603.761 929.501 603.761 cv
923.882 603.761 li
923.882 615.771 li
926.438 615.771 li
926.438 611.503 li
928.312 611.503 li
930.671 615.771 li
933.624 615.771 li
930.905 611.197 li
932.2 610.892 933.552 609.74 933.552 607.632 cv
cp
f
941.163 613.718 mo
938.931 613.718 937.509 612.007 937.509 609.775 cv
937.509 607.525 938.931 605.832 941.163 605.832 cv
943.378 605.832 944.802 607.525 944.802 609.775 cv
944.802 612.007 943.378 613.718 941.163 613.718 cv
cp
941.163 603.564 mo
937.526 603.564 934.88 606.156 934.88 609.775 cv
934.88 613.394 937.526 615.986 941.163 615.986 cv
944.782 615.986 947.431 613.394 947.431 609.775 cv
947.431 606.156 944.782 603.564 941.163 603.564 cv
cp
f
957.419 611.306 mo
951.854 603.761 li
949.226 603.761 li
949.226 615.771 li
951.782 615.771 li
951.782 607.939 li
957.509 615.771 li
959.976 615.771 li
959.976 603.761 li
957.419 603.761 li
957.419 611.306 li
cp
f
962.349 615.771 mo
964.905 615.771 li
964.905 603.761 li
962.349 603.761 li
962.349 615.771 li
cp
f
973.112 605.832 mo
974.337 605.832 975.417 606.607 975.923 607.578 cv
978.118 606.498 li
977.272 604.986 975.741 603.564 973.112 603.564 cv
969.493 603.564 966.704 606.066 966.704 609.775 cv
966.704 613.466 969.493 615.986 973.112 615.986 cv
975.741 615.986 977.272 614.529 978.118 613.035 cv
975.923 611.972 li
975.417 612.945 974.337 613.718 973.112 613.718 cv
970.917 613.718 969.333 612.044 969.333 609.775 cv
969.333 607.505 970.917 605.832 973.112 605.832 cv
cp
f
981.843 607.039 mo
981.843 606.318 982.454 605.849 983.534 605.849 cv
984.759 605.849 986.056 606.263 987.028 607.164 cv
988.45 605.255 li
987.261 604.158 985.677 603.582 983.769 603.582 cv
980.942 603.582 979.214 605.238 979.214 607.236 cv
979.214 611.755 986.128 610.296 986.128 612.386 cv
986.128 613.087 985.46 613.718 984.038 613.718 cv
982.382 613.718 981.067 612.962 980.222 612.08 cv
978.817 614.078 li
979.952 615.212 981.608 615.986 983.931 615.986 cv
987.153 615.986 988.737 614.33 988.737 612.134 cv
988.737 607.65 981.843 608.929 981.843 607.039 cv
cp
f
887.011 545.018 mo
972.511 545.018 li
972.511 459.518 li
887.011 459.518 li
887.011 545.018 li
cp
977.011 549.518 mo
882.511 549.518 li
882.511 455.018 li
977.011 455.018 li
977.011 549.518 li
cp
.0952911 .0952911 .0952911 rgb
f
898.011 534.018 mo
961.511 534.018 li
961.511 470.518 li
898.011 470.518 li
898.011 534.018 li
cp
966.011 538.518 mo
893.511 538.518 li
893.511 466.018 li
966.011 466.018 li
966.011 538.518 li
cp
f
898.011 452.268 mo
893.511 452.268 li
893.511 442.268 li
898.011 442.268 li
898.011 452.268 li
cp
f
907.725 452.268 mo
903.225 452.268 li
903.225 442.268 li
907.725 442.268 li
907.725 452.268 li
cp
f
917.439 452.268 mo
912.939 452.268 li
912.939 442.268 li
917.439 442.268 li
917.439 452.268 li
cp
f
927.153 452.268 mo
922.653 452.268 li
922.653 442.268 li
927.153 442.268 li
927.153 452.268 li
cp
f
936.868 452.268 mo
932.368 452.268 li
932.368 442.268 li
936.868 442.268 li
936.868 452.268 li
cp
f
946.582 452.268 mo
942.082 452.268 li
942.082 442.268 li
946.582 442.268 li
946.582 452.268 li
cp
f
956.296 452.268 mo
951.796 452.268 li
951.796 442.268 li
956.296 442.268 li
956.296 452.268 li
cp
f
966.011 452.268 mo
961.511 452.268 li
961.511 442.268 li
966.011 442.268 li
966.011 452.268 li
cp
f
898.011 562.268 mo
893.511 562.268 li
893.511 552.268 li
898.011 552.268 li
898.011 562.268 li
cp
f
907.725 562.268 mo
903.225 562.268 li
903.225 552.268 li
907.725 552.268 li
907.725 562.268 li
cp
f
917.439 562.268 mo
912.939 562.268 li
912.939 552.268 li
917.439 552.268 li
917.439 562.268 li
cp
f
927.153 562.268 mo
922.653 562.268 li
922.653 552.268 li
927.153 552.268 li
927.153 562.268 li
cp
f
936.868 562.268 mo
932.368 562.268 li
932.368 552.268 li
936.868 552.268 li
936.868 562.268 li
cp
f
946.582 562.268 mo
942.082 562.268 li
942.082 552.268 li
946.582 552.268 li
946.582 562.268 li
cp
f
956.296 562.268 mo
951.796 562.268 li
951.796 552.268 li
956.296 552.268 li
956.296 562.268 li
cp
f
966.011 562.268 mo
961.511 562.268 li
961.511 552.268 li
966.011 552.268 li
966.011 562.268 li
cp
f
989.761 470.518 mo
979.761 470.518 li
979.761 466.018 li
989.761 466.018 li
989.761 470.518 li
cp
f
989.761 480.233 mo
979.761 480.233 li
979.761 475.733 li
989.761 475.733 li
989.761 480.233 li
cp
f
989.761 489.948 mo
979.761 489.948 li
979.761 485.448 li
989.761 485.448 li
989.761 489.948 li
cp
f
989.761 499.661 mo
979.761 499.661 li
979.761 495.161 li
989.761 495.161 li
989.761 499.661 li
cp
f
989.761 509.375 mo
979.761 509.375 li
979.761 504.875 li
989.761 504.875 li
989.761 509.375 li
cp
f
989.761 519.09 mo
979.761 519.09 li
979.761 514.59 li
989.761 514.59 li
989.761 519.09 li
cp
f
989.761 528.803 mo
979.761 528.803 li
979.761 524.303 li
989.761 524.303 li
989.761 528.803 li
cp
f
989.761 538.518 mo
979.761 538.518 li
979.761 534.018 li
989.761 534.018 li
989.761 538.518 li
cp
f
879.761 470.518 mo
869.761 470.518 li
869.761 466.018 li
879.761 466.018 li
879.761 470.518 li
cp
f
879.761 480.233 mo
869.761 480.233 li
869.761 475.733 li
879.761 475.733 li
879.761 480.233 li
cp
f
879.761 489.948 mo
869.761 489.948 li
869.761 485.448 li
879.761 485.448 li
879.761 489.948 li
cp
f
879.761 499.661 mo
869.761 499.661 li
869.761 495.161 li
879.761 495.161 li
879.761 499.661 li
cp
f
879.761 509.375 mo
869.761 509.375 li
869.761 504.875 li
879.761 504.875 li
879.761 509.375 li
cp
f
879.761 519.09 mo
869.761 519.09 li
869.761 514.59 li
879.761 514.59 li
879.761 519.09 li
cp
f
879.761 528.803 mo
869.761 528.803 li
869.761 524.303 li
879.761 524.303 li
879.761 528.803 li
cp
f
879.761 538.518 mo
869.761 538.518 li
869.761 534.018 li
879.761 534.018 li
879.761 538.518 li
cp
f
918.512 491.02 mo
914.012 491.02 li
914.012 486.52 li
918.512 486.52 li
918.512 491.02 li
cp
.0980392 .0941176 .0941176 rgb
f
927.512 491.02 mo
923.012 491.02 li
923.012 486.52 li
927.512 486.52 li
927.512 491.02 li
cp
f
936.512 491.02 mo
932.012 491.02 li
932.012 486.52 li
936.512 486.52 li
936.512 491.02 li
cp
f
945.512 491.02 mo
941.012 491.02 li
941.012 486.52 li
945.512 486.52 li
945.512 491.02 li
cp
f
918.512 500.02 mo
914.012 500.02 li
914.012 495.52 li
918.512 495.52 li
918.512 500.02 li
cp
f
927.512 500.02 mo
923.012 500.02 li
923.012 495.52 li
927.512 495.52 li
927.512 500.02 li
cp
f
936.512 500.02 mo
932.012 500.02 li
932.012 495.52 li
936.512 495.52 li
936.512 500.02 li
cp
f
945.512 500.02 mo
941.012 500.02 li
941.012 495.52 li
945.512 495.52 li
945.512 500.02 li
cp
f
918.512 509.02 mo
914.012 509.02 li
914.012 504.52 li
918.512 504.52 li
918.512 509.02 li
cp
f
927.512 509.02 mo
923.012 509.02 li
923.012 504.52 li
927.512 504.52 li
927.512 509.02 li
cp
f
936.512 509.02 mo
932.012 509.02 li
932.012 504.52 li
936.512 504.52 li
936.512 509.02 li
cp
f
945.512 509.02 mo
941.012 509.02 li
941.012 504.52 li
945.512 504.52 li
945.512 509.02 li
cp
f
918.512 518.02 mo
914.012 518.02 li
914.012 513.52 li
918.512 513.52 li
918.512 518.02 li
cp
f
927.512 518.02 mo
923.012 518.02 li
923.012 513.52 li
927.512 513.52 li
927.512 518.02 li
cp
f
936.512 518.02 mo
932.012 518.02 li
932.012 513.52 li
936.512 513.52 li
936.512 518.02 li
cp
f
945.512 518.02 mo
941.012 518.02 li
941.012 513.52 li
945.512 513.52 li
945.512 518.02 li
cp
f
29.1431 818.753 mo
25.9917 818.753 li
21.7427 824.101 li
21.7427 818.753 li
19.186 818.753 li
19.186 830.763 li
21.7427 830.763 li
21.7427 827.073 li
22.6792 825.938 li
26.3159 830.763 li
29.4668 830.763 li
24.3716 824.389 li
29.1431 818.753 li
cp
f
38.8262 826.297 mo
33.2622 818.753 li
30.6338 818.753 li
30.6338 830.763 li
33.1904 830.763 li
33.1904 822.93 li
38.916 830.763 li
41.3828 830.763 li
41.3828 818.753 li
38.8262 818.753 li
38.8262 826.297 li
cp
f
49.4629 828.71 mo
47.2305 828.71 45.8081 827 45.8081 824.768 cv
45.8081 822.516 47.2305 820.825 49.4629 820.825 cv
51.6777 820.825 53.1001 822.516 53.1001 824.768 cv
53.1001 827 51.6777 828.71 49.4629 828.71 cv
cp
49.4629 818.555 mo
45.8257 818.555 43.1792 821.149 43.1792 824.768 cv
43.1792 828.386 45.8257 830.979 49.4629 830.979 cv
53.082 830.979 55.729 828.386 55.729 824.768 cv
55.729 821.149 53.082 818.555 49.4629 818.555 cv
cp
f
69.625 818.753 mo
67.5186 827.432 li
65.25 818.753 li
63.2515 818.753 li
60.9644 827.432 li
58.8579 818.753 li
55.9951 818.753 li
59.4341 830.763 li
62.1528 830.763 li
64.2417 822.516 li
66.3481 830.763 li
69.0669 830.763 li
72.4878 818.753 li
69.625 818.753 li
cp
f
72.3755 827.378 mo
76.6968 827.378 li
76.6968 825.434 li
72.3755 825.434 li
72.3755 827.378 li
cp
f
86.6523 823.471 mo
80.9805 823.471 li
80.9805 818.753 li
78.4238 818.753 li
78.4238 830.763 li
80.9805 830.763 li
80.9805 825.704 li
86.6523 825.704 li
86.6523 830.763 li
89.2271 830.763 li
89.2271 818.753 li
86.6523 818.753 li
86.6523 823.471 li
cp
f
97.2891 828.71 mo
95.0566 828.71 93.6343 827 93.6343 824.768 cv
93.6343 822.516 95.0566 820.825 97.2891 820.825 cv
99.5039 820.825 100.926 822.516 100.926 824.768 cv
100.926 827 99.5039 828.71 97.2891 828.71 cv
cp
97.2891 818.555 mo
93.6519 818.555 91.0054 821.149 91.0054 824.768 cv
91.0054 828.386 93.6519 830.979 97.2891 830.979 cv
100.908 830.979 103.555 828.386 103.555 824.768 cv
103.555 821.149 100.908 818.555 97.2891 818.555 cv
cp
f
117.451 818.753 mo
115.345 827.432 li
113.076 818.753 li
111.078 818.753 li
108.791 827.432 li
106.684 818.753 li
103.821 818.753 li
107.26 830.763 li
109.979 830.763 li
112.068 822.516 li
114.174 830.763 li
116.893 830.763 li
120.314 818.753 li
117.451 818.753 li
cp
f
69.752 664.649 mo
51.6934 664.649 37.002 679.34 37.002 697.399 cv
37.002 715.458 51.6934 730.149 69.752 730.149 cv
87.8105 730.149 102.502 715.458 102.502 697.399 cv
102.502 679.34 87.8105 664.649 69.752 664.649 cv
cp
69.752 734.649 mo
49.2124 734.649 32.502 717.939 32.502 697.399 cv
32.502 676.859 49.2124 660.149 69.752 660.149 cv
90.2915 660.149 107.002 676.859 107.002 697.399 cv
107.002 717.939 90.2915 734.649 69.752 734.649 cv
cp
.0952911 .0952911 .0952911 rgb
f
72.002 745.399 mo
67.502 745.399 li
67.502 732.399 li
72.002 732.399 li
72.002 745.399 li
cp
f
63.9521 786.149 mo
75.5518 786.149 li
75.5518 747.649 li
63.9521 747.649 li
63.9521 786.149 li
cp
80.0518 790.649 mo
59.4521 790.649 li
59.4521 743.149 li
80.0518 743.149 li
80.0518 790.649 li
cp
f
69.752 673.649 mo
56.6563 673.649 46.002 684.303 46.002 697.399 cv
46.002 710.495 56.6563 721.149 69.752 721.149 cv
82.8477 721.149 93.502 710.495 93.502 697.399 cv
93.502 684.303 82.8477 673.649 69.752 673.649 cv
cp
69.752 725.649 mo
54.1748 725.649 41.502 712.976 41.502 697.399 cv
41.502 681.822 54.1748 669.149 69.752 669.149 cv
85.3291 669.149 98.002 681.822 98.002 697.399 cv
98.002 712.976 85.3291 725.649 69.752 725.649 cv
cp
f
77.8018 755.649 mo
61.7021 755.649 li
61.7021 751.149 li
77.8018 751.149 li
77.8018 755.649 li
cp
f
77.8018 782.649 mo
61.7021 782.649 li
61.7021 778.149 li
77.8018 778.149 li
77.8018 782.649 li
cp
f
72.002 704.899 mo
67.502 704.899 li
67.502 679.899 li
72.002 679.899 li
72.002 704.899 li
cp
f
72.002 714.899 mo
67.502 714.899 li
67.502 709.899 li
72.002 709.899 li
72.002 714.899 li
cp
f
72.0928 650.703 mo
70.6406 650.629 69.2021 650.625 67.7715 650.683 cv
67.5889 646.187 li
69.1538 646.124 70.7324 646.128 72.3184 646.208 cv
72.0928 650.703 li
cp
59.229 651.831 mo
58.2173 647.446 li
59.7441 647.093 61.311 646.809 62.8745 646.599 cv
63.4731 651.058 li
62.0479 651.25 60.6201 651.51 59.229 651.831 cv
cp
80.6318 651.918 mo
79.2378 651.586 77.8115 651.317 76.3921 651.115 cv
77.0249 646.66 li
78.5811 646.88 80.1455 647.177 81.6738 647.542 cv
80.6318 651.918 li
cp
51.0444 654.539 mo
49.2407 650.416 li
50.6841 649.785 52.1709 649.214 53.6602 648.722 cv
55.0732 652.994 li
53.7158 653.443 52.3604 653.962 51.0444 654.539 cv
cp
88.7959 654.684 mo
87.4868 654.1 86.1353 653.572 84.7783 653.112 cv
86.2217 648.85 li
87.71 649.354 89.1929 649.934 90.6289 650.575 cv
88.7959 654.684 li
cp
43.4951 658.709 mo
40.9658 654.987 li
42.271 654.1 43.6274 653.267 44.9976 652.51 cv
47.1733 656.45 li
45.9233 657.14 44.686 657.9 43.4951 658.709 cv
cp
96.3115 658.912 mo
95.1309 658.096 93.8994 657.326 92.6509 656.624 cv
94.8589 652.702 li
96.2266 653.472 97.5762 654.316 98.8701 655.21 cv
96.3115 658.912 li
cp
36.8359 664.194 mo
33.6689 660.997 li
34.791 659.885 35.9722 658.819 37.1802 657.825 cv
40.0386 661.301 li
38.937 662.207 37.8594 663.18 36.8359 664.194 cv
cp
102.925 664.45 mo
101.917 663.434 100.847 662.451 99.7456 661.528 cv
102.635 658.079 li
103.842 659.089 105.014 660.167 106.119 661.28 cv
102.925 664.45 li
cp
31.291 670.8 mo
27.5928 668.238 li
28.4897 666.943 29.4565 665.677 30.4653 664.476 cv
33.9106 667.371 li
32.9912 668.465 32.1099 669.62 31.291 670.8 cv
cp
108.415 671.104 mo
107.611 669.923 106.739 668.761 105.823 667.651 cv
109.294 664.788 li
110.298 666.004 111.254 667.278 112.135 668.573 cv
108.415 671.104 li
cp
27.0562 678.313 mo
22.9487 676.475 li
23.5894 675.042 24.3066 673.621 25.0791 672.249 cv
29 674.458 li
28.2949 675.708 27.6411 677.006 27.0562 678.313 cv
cp
112.594 678.648 mo
112.02 677.337 111.375 676.037 110.679 674.781 cv
114.616 672.599 li
115.378 673.976 116.085 675.403 116.715 676.839 cv
112.594 678.648 li
cp
24.2827 686.473 mo
19.9058 685.428 li
20.272 683.896 20.7134 682.366 21.2188 680.879 cv
25.4795 682.329 li
25.019 683.683 24.6162 685.078 24.2827 686.473 cv
cp
115.31 686.83 mo
114.987 685.434 114.594 684.037 114.143 682.676 cv
118.413 681.258 li
118.909 682.75 119.34 684.284 119.694 685.816 cv
115.31 686.83 li
cp
23.063 694.919 mo
18.5635 694.794 li
18.5698 694.665 li
18.6509 693.139 18.8027 691.59 19.02 690.077 cv
23.4741 690.715 li
23.2759 692.097 23.1377 693.511 23.063 694.919 cv
cp
116.466 695.375 mo
116.406 693.939 116.278 692.493 116.086 691.075 cv
120.545 690.471 li
120.756 692.026 120.896 693.613 120.962 695.185 cv
116.466 695.375 li
cp
18.9448 704.226 mo
18.7378 702.671 18.6006 701.085 18.5376 699.512 cv
23.0337 699.333 li
23.0913 700.767 23.2163 702.213 23.4058 703.632 cv
18.9448 704.226 li
cp
120.47 704.822 mo
116.017 704.175 li
116.222 702.76 116.365 701.315 116.442 699.877 cv
116.452 699.685 li
120.946 699.923 li
120.936 700.117 li
120.852 701.69 120.695 703.273 120.47 704.822 cv
cp
21.0586 713.443 mo
20.5664 711.95 20.1382 710.416 19.7871 708.883 cv
24.1729 707.877 li
24.4932 709.274 24.8833 710.672 25.332 712.033 cv
21.0586 713.443 li
cp
118.253 714.013 mo
113.995 712.556 li
114.458 711.203 114.864 709.809 115.2 708.414 cv
119.575 709.468 li
119.206 710.999 118.761 712.528 118.253 714.013 cv
cp
24.8389 722.109 mo
24.0806 720.733 23.3774 719.305 22.7485 717.865 cv
26.8726 716.064 li
27.4463 717.378 28.0879 718.681 28.7803 719.937 cv
24.8389 722.109 li
cp
114.375 722.637 mo
110.46 720.418 li
111.167 719.171 111.823 717.876 112.411 716.569 cv
116.515 718.415 li
115.871 719.848 115.15 721.269 114.375 722.637 cv
cp
30.146 729.932 mo
29.1479 728.717 28.1948 727.443 27.313 726.144 cv
31.0366 723.617 li
31.8413 724.803 32.7114 725.966 33.6226 727.075 cv
30.146 729.932 li
cp
108.975 730.397 mo
105.534 727.497 li
106.457 726.402 107.34 725.25 108.161 724.072 cv
111.854 726.642 li
110.955 727.934 109.986 729.197 108.975 730.397 cv
cp
36.792 736.655 mo
35.5908 735.644 34.4204 734.565 33.314 733.446 cv
36.5142 730.282 li
37.5239 731.303 38.5918 732.289 39.6875 733.209 cv
36.792 736.655 li
cp
102.247 737.037 mo
99.3926 733.558 li
100.502 732.648 101.582 731.676 102.603 730.669 cv
105.763 733.873 li
104.645 734.976 103.462 736.041 102.247 737.037 cv
cp
44.5576 742.046 mo
43.1934 741.275 41.8447 740.428 40.5498 739.53 cv
43.1162 735.833 li
44.2974 736.653 45.5273 737.425 46.7715 738.128 cv
44.5576 742.046 li
cp
94.4175 742.335 mo
92.2505 738.392 li
93.5039 737.704 94.7422 736.946 95.9316 736.14 cv
98.4551 739.867 li
97.1504 740.75 95.792 741.581 94.4175 742.335 cv
cp
f
226.667 830.763 mo
235.165 830.763 li
235.165 828.513 li
229.223 828.513 li
229.223 825.775 li
235.039 825.775 li
235.039 823.525 li
229.223 823.525 li
229.223 821.003 li
235.165 821.003 li
235.165 818.753 li
226.667 818.753 li
226.667 830.763 li
cp
.0980392 .0941176 .0941176 rgb
f
245.353 826.298 mo
239.789 818.753 li
237.16 818.753 li
237.16 830.763 li
239.717 830.763 li
239.717 822.931 li
245.442 830.763 li
247.909 830.763 li
247.909 818.753 li
245.353 818.753 li
245.353 826.298 li
cp
f
255.485 826.351 mo
258.654 826.351 li
258.654 827.792 li
258.168 828.242 257.178 828.71 256.115 828.71 cv
253.919 828.71 252.334 827.037 252.334 824.767 cv
252.334 822.498 253.919 820.824 256.115 820.824 cv
257.376 820.824 258.402 821.544 258.96 822.39 cv
261.067 821.238 li
260.167 819.816 258.6 818.556 256.115 818.556 cv
252.586 818.556 249.706 820.968 249.706 824.767 cv
249.706 828.548 252.586 830.978 256.115 830.978 cv
258.276 830.978 259.986 830.097 261.211 828.728 cv
261.211 824.119 li
255.485 824.119 li
255.485 826.351 li
cp
f
263.242 830.763 mo
265.798 830.763 li
265.798 818.753 li
263.242 818.753 li
263.242 830.763 li
cp
f
276.366 826.298 mo
270.802 818.753 li
268.173 818.753 li
268.173 830.763 li
270.73 830.763 li
270.73 822.931 li
276.456 830.763 li
278.922 830.763 li
278.922 818.753 li
276.366 818.753 li
276.366 826.298 li
cp
f
281.295 830.763 mo
289.793 830.763 li
289.793 828.513 li
283.852 828.513 li
283.852 825.775 li
289.667 825.775 li
289.667 823.525 li
283.852 823.525 li
283.852 821.003 li
289.793 821.003 li
289.793 818.753 li
281.295 818.753 li
281.295 830.763 li
cp
f
291.789 830.763 mo
300.287 830.763 li
300.287 828.513 li
294.345 828.513 li
294.345 825.775 li
300.161 825.775 li
300.161 823.525 li
294.345 823.525 li
294.345 821.003 li
300.287 821.003 li
300.287 818.753 li
291.789 818.753 li
291.789 830.763 li
cp
f
307.54 824.246 mo
304.839 824.246 li
304.839 821.003 li
307.54 821.003 li
308.548 821.003 309.322 821.617 309.322 822.607 cv
309.322 823.632 308.548 824.246 307.54 824.246 cv
cp
311.951 822.625 mo
311.951 820.392 310.402 818.753 307.9 818.753 cv
302.282 818.753 li
302.282 830.763 li
304.839 830.763 li
304.839 826.496 li
306.711 826.496 li
309.07 830.763 li
312.023 830.763 li
309.304 826.189 li
310.601 825.884 311.951 824.732 311.951 822.625 cv
cp
f
313.856 830.763 mo
316.413 830.763 li
316.413 818.753 li
313.856 818.753 li
313.856 830.763 li
cp
f
326.98 826.298 mo
321.416 818.753 li
318.788 818.753 li
318.788 830.763 li
321.344 830.763 li
321.344 822.931 li
327.07 830.763 li
329.537 830.763 li
329.537 818.753 li
326.98 818.753 li
326.98 826.298 li
cp
f
337.113 824.119 mo
337.113 826.351 li
340.282 826.351 li
340.282 827.792 li
339.795 828.242 338.805 828.71 337.743 828.71 cv
335.546 828.71 333.962 827.037 333.962 824.767 cv
333.962 822.498 335.546 820.824 337.743 820.824 cv
339.003 820.824 340.029 821.544 340.588 822.39 cv
342.694 821.238 li
341.794 819.816 340.228 818.556 337.743 818.556 cv
334.214 818.556 331.333 820.968 331.333 824.767 cv
331.333 828.548 334.214 830.978 337.743 830.978 cv
339.903 830.978 341.614 830.097 342.838 828.728 cv
342.838 824.119 li
337.113 824.119 li
cp
f
218.312 722.214 mo
218.312 712.326 li
209.752 717.273 li
218.312 722.214 li
cp
.0952911 .0952911 .0952911 rgb
f
240.233 719.523 mo
236.752 719.521 li
236.755 715.021 li
240.236 715.023 li
240.233 719.523 li
cp
f
225.746 729.101 mo
205.252 717.274 li
225.745 705.436 li
227.996 709.333 li
214.252 717.272 li
227.995 725.203 li
225.746 729.101 li
cp
f
251.789 729.406 mo
226.87 729.402 li
225.96 729.402 225.14 728.853 224.792 728.012 cv
224.444 727.171 224.636 726.204 225.28 725.561 cv
233.572 717.271 li
225.279 708.975 li
224.636 708.332 224.444 707.364 224.792 706.523 cv
225.14 705.682 225.961 705.134 226.871 705.134 cv
226.871 705.134 li
251.791 705.136 li
251.791 709.636 li
232.302 709.634 li
238.345 715.68 li
239.224 716.559 239.224 717.984 238.345 718.862 cv
232.303 724.903 li
251.79 724.906 li
251.789 729.406 li
cp
f
287.709 764.4 mo
291.504 764.4 li
293.608 753.917 li
295.167 753.682 li
297.818 753.282 300.452 752.575 302.998 751.582 cv
304.464 751.01 li
311.53 759.032 li
314.819 757.136 li
311.402 747.003 li
312.63 746.019 li
314.743 744.326 316.671 742.398 318.363 740.289 cv
319.347 739.061 li
329.475 742.476 li
331.372 739.193 li
323.352 732.142 li
323.925 730.673 li
324.088 730.257 324.244 729.833 324.394 729.405 cv
308.739 729.404 li
304.595 735.927 297.384 739.927 289.608 739.927 cv
277.117 739.927 266.954 729.764 266.954 717.271 cv
266.954 704.778 277.117 694.615 289.608 694.615 cv
297.382 694.615 304.593 698.614 308.737 705.135 cv
324.394 705.136 li
324.245 704.708 324.089 704.285 323.927 703.87 cv
323.353 702.402 li
331.372 695.346 li
329.475 692.066 li
319.346 695.477 li
318.363 694.25 li
316.67 692.14 314.741 690.212 312.629 688.521 cv
311.401 687.538 li
314.818 677.402 li
311.52 675.506 li
304.461 683.528 li
302.995 682.957 li
300.446 681.963 297.813 681.257 295.168 680.858 cv
293.608 680.623 li
291.504 670.142 li
287.708 670.142 li
285.607 680.623 li
284.047 680.858 li
281.404 681.257 278.773 681.963 276.228 682.956 cv
274.761 683.528 li
267.696 675.498 li
264.4 677.399 li
267.819 687.539 li
266.591 688.523 li
264.48 690.215 262.552 692.142 260.861 694.25 cv
259.877 695.477 li
249.748 692.061 li
247.851 695.346 li
255.869 702.405 li
255.295 703.872 li
254.298 706.424 253.59 709.064 253.189 711.716 cv
252.954 713.277 li
242.483 715.372 li
242.486 719.171 li
252.954 721.268 li
253.189 722.829 li
253.591 725.482 254.3 728.121 255.297 730.67 cv
255.871 732.138 li
247.852 739.193 li
249.748 742.476 li
259.876 739.064 li
260.86 740.29 li
262.554 742.401 264.482 744.327 266.59 746.016 cv
267.818 747 li
264.401 757.135 li
267.695 759.033 li
274.757 751.009 li
276.224 751.583 li
278.768 752.576 281.401 753.283 284.051 753.683 cv
285.611 753.918 li
287.709 764.4 li
cp
295.191 768.9 mo
284.021 768.9 li
281.812 757.864 li
279.876 757.492 277.957 756.976 276.075 756.323 cv
268.641 764.769 li
258.958 759.194 li
262.559 748.513 li
261.065 747.219 259.662 745.817 258.365 744.322 cv
247.693 747.917 li
242.11 738.25 li
250.556 730.82 li
249.899 728.933 249.382 727.007 249.009 725.068 cv
237.989 722.859 li
237.98 711.682 li
249.008 709.477 li
249.38 707.538 249.898 705.611 250.555 703.722 cv
242.111 696.288 li
247.694 686.62 li
258.365 690.218 li
259.661 688.724 261.064 687.322 262.56 686.026 cv
258.959 675.342 li
268.64 669.757 li
276.081 678.215 li
277.961 677.563 279.878 677.048 281.809 676.677 cv
284.021 665.642 li
295.191 665.642 li
297.406 676.677 li
299.338 677.047 301.258 677.563 303.141 678.216 cv
310.573 669.772 li
320.262 675.339 li
316.661 686.023 li
318.157 687.319 319.563 688.723 320.859 690.219 cv
331.527 686.626 li
337.114 696.288 li
328.667 703.721 li
329.014 704.727 329.328 705.762 329.604 706.815 cv
330.345 709.636 li
306.134 709.635 li
305.491 708.477 li
302.285 702.703 296.199 699.115 289.608 699.115 cv
279.598 699.115 271.454 707.259 271.454 717.271 cv
271.454 727.283 279.598 735.427 289.608 735.427 cv
296.2 735.427 302.287 731.838 305.493 726.062 cv
306.135 724.904 li
330.344 724.905 li
329.604 727.726 li
329.329 728.776 329.014 729.812 328.665 730.822 cv
337.114 738.25 li
331.527 747.917 li
320.859 744.32 li
319.563 745.815 318.158 747.219 316.661 748.516 cv
320.261 759.193 li
310.587 764.77 li
303.146 756.322 li
301.263 756.976 299.342 757.492 297.406 757.863 cv
295.191 768.9 li
cp
f
339.988 719.523 mo
269.194 719.521 li
269.194 715.021 li
339.988 715.023 li
339.988 719.523 li
cp
f
339.987 729.406 mo
339.987 729.406 li
271.745 729.402 li
271.745 724.902 li
337.737 724.906 li
337.738 709.636 li
271.743 709.634 li
271.743 705.134 li
339.988 705.136 li
340.584 705.136 341.157 705.374 341.579 705.795 cv
342.001 706.217 342.238 706.79 342.238 707.386 cv
342.237 727.156 li
342.237 727.752 342 728.325 341.578 728.747 cv
341.156 729.168 340.583 729.406 339.987 729.406 cv
cp
f
342.238 709.636 mo
342.237 724.905 li
347.62 724.903 li
347.62 709.638 li
342.238 709.636 li
cp
339.987 729.406 mo
339.39 729.406 338.818 729.168 338.396 728.747 cv
337.974 728.325 337.737 727.752 337.737 727.156 cv
337.738 707.386 li
337.738 706.79 337.975 706.217 338.397 705.795 cv
338.819 705.374 339.391 705.136 339.988 705.136 cv
339.988 705.136 li
349.871 705.138 li
351.113 705.138 352.12 706.146 352.12 707.388 cv
352.12 727.152 li
352.12 728.394 351.113 729.401 349.871 729.402 cv
339.988 729.406 li
339.987 729.406 339.987 729.406 339.987 729.406 cv
cp
f
349.886 729.402 mo
349.879 729.402 349.873 729.402 349.867 729.402 cv
349.874 724.902 li
351.901 724.88 353.824 724.112 355.267 722.669 cv
356.709 721.226 357.503 719.309 357.502 717.274 cv
357.502 715.233 356.708 713.316 355.267 711.874 cv
353.823 710.432 351.909 709.638 349.878 709.638 cv
349.876 709.638 349.874 709.638 349.872 709.638 cv
349.868 705.138 li
349.872 705.138 349.875 705.138 349.878 705.138 cv
353.11 705.138 356.153 706.4 358.448 708.691 cv
360.741 710.984 362.002 714.032 362.002 717.273 cv
362.004 720.509 360.742 723.556 358.45 725.851 cv
356.158 728.142 353.118 729.402 349.886 729.402 cv
cp
f
460.734 824.226 mo
458.034 824.226 li
458.034 821.003 li
460.734 821.003 li
461.743 821.003 462.518 821.617 462.518 822.625 cv
462.518 823.615 461.743 824.226 460.734 824.226 cv
cp
461.095 818.753 mo
455.478 818.753 li
455.478 830.763 li
458.034 830.763 li
458.034 826.478 li
461.095 826.478 li
463.688 826.478 465.128 824.712 465.128 822.625 cv
465.128 820.517 463.706 818.753 461.095 818.753 cv
cp
.0980392 .0941176 .0941176 rgb
f
466.728 830.763 mo
475.226 830.763 li
475.226 828.513 li
469.284 828.513 li
469.284 825.775 li
475.1 825.775 li
475.1 823.525 li
469.284 823.525 li
469.284 821.003 li
475.226 821.003 li
475.226 818.753 li
466.728 818.753 li
466.728 830.763 li
cp
f
476.482 821.003 mo
479.994 821.003 li
479.994 830.763 li
482.568 830.763 li
482.568 821.003 li
486.062 821.003 li
486.062 818.753 li
476.482 818.753 li
476.482 821.003 li
cp
f
492.954 824.246 mo
490.253 824.246 li
490.253 821.003 li
492.954 821.003 li
493.962 821.003 494.736 821.617 494.736 822.607 cv
494.736 823.632 493.962 824.246 492.954 824.246 cv
cp
497.365 822.625 mo
497.365 820.392 495.816 818.753 493.314 818.753 cv
487.696 818.753 li
487.696 830.763 li
490.253 830.763 li
490.253 826.496 li
492.126 826.496 li
494.484 830.763 li
497.438 830.763 li
494.719 826.189 li
496.015 825.884 497.365 824.732 497.365 822.625 cv
cp
f
499.271 830.763 mo
501.827 830.763 li
501.827 818.753 li
499.271 818.753 li
499.271 830.763 li
cp
f
514.661 820.824 mo
515.886 820.824 516.966 821.599 517.471 822.57 cv
519.667 821.49 li
518.821 819.978 517.29 818.556 514.661 818.556 cv
511.042 818.556 508.252 821.058 508.252 824.767 cv
508.252 828.458 511.042 830.978 514.661 830.978 cv
517.29 830.978 518.821 829.521 519.667 828.027 cv
517.471 826.964 li
516.966 827.937 515.886 828.71 514.661 828.71 cv
512.465 828.71 510.881 827.037 510.881 824.767 cv
510.881 822.498 512.465 820.824 514.661 820.824 cv
cp
f
529.423 825.884 mo
529.423 827.558 528.468 828.71 526.613 828.71 cv
524.759 828.71 523.786 827.558 523.786 825.884 cv
523.786 818.753 li
521.194 818.753 li
521.194 825.955 li
521.194 828.927 522.958 830.978 526.613 830.978 cv
530.269 830.978 532.033 828.927 532.033 825.955 cv
532.033 818.753 li
529.423 818.753 li
529.423 825.884 li
cp
f
539.663 824.226 mo
536.962 824.226 li
536.962 821.003 li
539.663 821.003 li
540.671 821.003 541.446 821.617 541.446 822.625 cv
541.446 823.615 540.671 824.226 539.663 824.226 cv
cp
540.023 818.753 mo
534.405 818.753 li
534.405 830.763 li
536.962 830.763 li
536.962 826.478 li
540.023 826.478 li
542.616 826.478 544.057 824.712 544.057 822.625 cv
544.057 820.517 542.634 818.753 540.023 818.753 cv
cp
f
499.767 659.521 mo
467.924 659.521 442.017 685.427 442.017 717.271 cv
442.017 749.115 467.924 775.021 499.767 775.021 cv
531.61 775.021 557.517 749.115 557.517 717.271 cv
557.517 685.427 531.61 659.521 499.767 659.521 cv
cp
499.767 779.521 mo
465.442 779.521 437.517 751.596 437.517 717.271 cv
437.517 682.946 465.442 655.021 499.767 655.021 cv
534.092 655.021 562.017 682.946 562.017 717.271 cv
562.017 751.596 534.092 779.521 499.767 779.521 cv
cp
.0952911 .0952911 .0952911 rgb
f
499.767 670.521 mo
473.989 670.521 453.017 691.493 453.017 717.271 cv
453.017 743.049 473.989 764.021 499.767 764.021 cv
525.545 764.021 546.517 743.049 546.517 717.271 cv
546.517 691.493 525.545 670.521 499.767 670.521 cv
cp
499.767 768.521 mo
471.508 768.521 448.517 745.531 448.517 717.271 cv
448.517 689.011 471.508 666.021 499.767 666.021 cv
528.026 666.021 551.017 689.011 551.017 717.271 cv
551.017 745.531 528.026 768.521 499.767 768.521 cv
cp
f
486.352 715.859 mo
484.285 715.859 482.603 717.541 482.603 719.607 cv
482.603 721.675 484.285 723.359 486.352 723.359 cv
488.42 723.359 490.103 721.675 490.103 719.607 cv
490.103 717.541 488.42 715.859 486.352 715.859 cv
cp
486.352 727.859 mo
481.803 727.859 478.103 724.157 478.103 719.607 cv
478.103 715.059 481.803 711.359 486.352 711.359 cv
490.901 711.359 494.603 715.059 494.603 719.607 cv
494.603 724.157 490.901 727.859 486.352 727.859 cv
cp
f
524.479 721.777 mo
521.032 721.777 518.228 724.581 518.228 728.027 cv
518.228 731.475 521.032 734.281 524.479 734.281 cv
527.925 734.281 530.728 731.475 530.728 728.027 cv
530.728 724.581 527.925 721.777 524.479 721.777 cv
cp
524.479 738.781 mo
518.551 738.781 513.728 733.957 513.728 728.027 cv
513.728 722.099 518.551 717.277 524.479 717.277 cv
530.406 717.277 535.228 722.099 535.228 728.027 cv
535.228 733.957 530.406 738.781 524.479 738.781 cv
cp
f
496.249 746.941 mo
495.524 746.941 494.934 747.531 494.934 748.255 cv
494.934 748.979 495.524 749.568 496.249 749.568 cv
496.97 749.568 497.557 748.979 497.557 748.255 cv
497.557 747.531 496.97 746.941 496.249 746.941 cv
cp
496.249 754.068 mo
493.042 754.068 490.434 751.46 490.434 748.255 cv
490.434 745.049 493.042 742.441 496.249 742.441 cv
499.451 742.441 502.057 745.049 502.057 748.255 cv
502.057 751.46 499.451 754.068 496.249 754.068 cv
cp
f
521.735 698.421 mo
520.495 698.421 519.485 699.431 519.485 700.671 cv
519.485 701.912 520.495 702.921 521.735 702.921 cv
522.976 702.921 523.985 701.912 523.985 700.671 cv
523.985 699.431 522.976 698.421 521.735 698.421 cv
cp
521.735 707.421 mo
518.014 707.421 514.985 704.393 514.985 700.671 cv
514.985 696.95 518.014 693.921 521.735 693.921 cv
525.457 693.921 528.485 696.95 528.485 700.671 cv
528.485 704.393 525.457 707.421 521.735 707.421 cv
cp
f
492.214 692.306 mo
492.214 691.064 493.22 690.058 494.461 690.058 cv
495.709 690.058 496.714 691.064 496.714 692.306 cv
496.714 693.548 495.709 694.554 494.461 694.554 cv
493.22 694.554 492.214 693.548 492.214 692.306 cv
cp
.0980392 .0941176 .0941176 rgb
f
467.126 730.713 mo
467.126 729.468 468.13 728.465 469.377 728.465 cv
470.622 728.465 471.626 729.468 471.626 730.713 cv
471.626 731.958 470.622 732.965 469.377 732.965 cv
468.13 732.965 467.126 731.958 467.126 730.713 cv
cp
f
483.04 746.631 mo
483.04 745.388 484.046 744.386 485.289 744.386 cv
486.531 744.386 487.54 745.388 487.54 746.631 cv
487.54 747.877 486.531 748.884 485.289 748.884 cv
484.046 748.884 483.04 747.877 483.04 746.631 cv
cp
f
472.359 694.556 mo
471.202 694.556 470.26 695.498 470.26 696.656 cv
470.26 697.817 471.202 698.761 472.359 698.761 cv
473.521 698.761 474.466 697.817 474.466 696.656 cv
474.466 695.498 473.521 694.556 472.359 694.556 cv
cp
472.359 703.261 mo
468.72 703.261 465.76 700.298 465.76 696.656 cv
465.76 693.017 468.72 690.056 472.359 690.056 cv
476.002 690.056 478.966 693.017 478.966 696.656 cv
478.966 700.298 476.002 703.261 472.359 703.261 cv
cp
.0952911 .0952911 .0952911 rgb
f
504.685 720.902 mo
504.685 719.659 505.691 718.656 506.938 718.656 cv
508.174 718.656 509.185 719.659 509.185 720.902 cv
509.185 722.146 508.174 723.156 506.938 723.156 cv
505.691 723.156 504.685 722.146 504.685 720.902 cv
cp
.0980392 .0941176 .0941176 rgb
f
509.755 744.114 mo
509.755 742.87 510.755 741.864 512.005 741.864 cv
513.249 741.864 514.255 742.87 514.255 744.114 cv
514.255 745.359 513.249 746.364 512.005 746.364 cv
510.755 746.364 509.755 745.359 509.755 744.114 cv
cp
f
499.935 683.911 mo
499.935 682.667 500.941 681.665 502.188 681.665 cv
503.424 681.665 504.435 682.667 504.435 683.911 cv
504.435 685.154 503.424 686.161 502.188 686.161 cv
500.941 686.161 499.935 685.154 499.935 683.911 cv
cp
f
669.825 826.262 mo
666.908 818.753 li
663.325 818.753 li
663.325 830.763 li
665.882 830.763 li
665.882 822.102 li
669.267 830.763 li
670.383 830.763 li
673.768 822.102 li
673.768 830.763 li
676.343 830.763 li
676.343 818.753 li
672.742 818.753 li
669.825 826.262 li
cp
f
681.813 826.478 mo
683.685 821.311 li
685.557 826.478 li
681.813 826.478 li
cp
682.082 818.753 mo
677.455 830.763 li
680.354 830.763 li
681.109 828.729 li
686.26 828.729 li
687.016 830.763 li
689.914 830.763 li
685.287 818.753 li
682.082 818.753 li
cp
f
695.619 826.352 mo
698.788 826.352 li
698.788 827.792 li
698.302 828.243 697.312 828.71 696.249 828.71 cv
694.053 828.71 692.468 827.036 692.468 824.768 cv
692.468 822.499 694.053 820.825 696.249 820.825 cv
697.51 820.825 698.535 821.544 699.094 822.391 cv
701.201 821.239 li
700.301 819.816 698.734 818.555 696.249 818.555 cv
692.721 818.555 689.84 820.968 689.84 824.768 cv
689.84 828.548 692.721 830.979 696.249 830.979 cv
698.41 830.979 700.12 830.097 701.345 828.729 cv
701.345 824.12 li
695.619 824.12 li
695.619 826.352 li
cp
f
711.568 826.297 mo
706.004 818.753 li
703.375 818.753 li
703.375 830.763 li
705.932 830.763 li
705.932 822.93 li
711.658 830.763 li
714.125 830.763 li
714.125 818.753 li
711.568 818.753 li
711.568 826.297 li
cp
f
716.497 830.763 mo
724.996 830.763 li
724.996 828.512 li
719.054 828.512 li
719.054 825.776 li
724.869 825.776 li
724.869 823.525 li
719.054 823.525 li
719.054 821.004 li
724.996 821.004 li
724.996 818.753 li
716.497 818.753 li
716.497 830.763 li
cp
f
726.252 821.004 mo
729.764 821.004 li
729.764 830.763 li
732.338 830.763 li
732.338 821.004 li
735.831 821.004 li
735.831 818.753 li
726.252 818.753 li
726.252 821.004 li
cp
f
737.467 830.763 mo
740.023 830.763 li
740.023 818.753 li
737.467 818.753 li
737.467 830.763 li
cp
f
744.595 822.031 mo
744.595 821.311 745.207 820.842 746.287 820.842 cv
747.512 820.842 748.808 821.256 749.78 822.157 cv
751.203 820.249 li
750.014 819.15 748.43 818.574 746.521 818.574 cv
743.694 818.574 741.966 820.23 741.966 822.229 cv
741.966 826.749 748.88 825.29 748.88 827.378 cv
748.88 828.081 748.213 828.71 746.791 828.71 cv
745.135 828.71 743.82 827.955 742.975 827.073 cv
741.569 829.071 li
742.704 830.206 744.36 830.979 746.684 830.979 cv
749.906 830.979 751.49 829.323 751.49 827.125 cv
751.49 822.643 744.595 823.921 744.595 822.031 cv
cp
f
762.614 818.753 mo
759.697 826.262 li
756.781 818.753 li
753.197 818.753 li
753.197 830.763 li
755.754 830.763 li
755.754 822.102 li
759.14 830.763 li
760.256 830.763 li
763.641 822.102 li
763.641 830.763 li
766.215 830.763 li
766.215 818.753 li
762.614 818.753 li
cp
f
668.677 700.365 mo
668.675 733.929 li
668.677 746.241 673.472 757.815 682.178 766.52 cv
690.35 774.692 701.052 779.418 712.521 779.967 cv
712.521 759.356 li
706.549 758.838 701.006 756.264 696.722 751.979 cv
691.9 747.158 689.244 740.747 689.244 733.927 cv
689.243 700.367 li
668.677 700.365 li
cp
717.021 784.521 mo
714.771 784.521 li
701.254 784.519 688.549 779.256 678.996 769.702 cv
669.44 760.147 664.177 747.443 664.175 733.929 cv
664.177 695.865 li
693.743 695.867 li
693.744 733.927 li
693.744 739.544 695.932 744.826 699.904 748.797 cv
703.872 752.767 709.151 754.953 714.771 754.953 cv
717.021 754.953 li
717.021 784.521 li
cp
.0952911 .0952911 .0952911 rgb
f
717.021 759.356 mo
717.021 779.967 li
728.49 779.418 739.193 774.692 747.364 766.52 cv
756.069 757.815 760.864 746.241 760.866 733.929 cv
760.864 700.365 li
740.3 700.367 li
740.298 733.927 li
740.298 740.748 737.642 747.159 732.819 751.98 cv
728.535 756.264 722.992 758.838 717.021 759.356 cv
cp
712.521 784.521 mo
712.521 754.953 li
714.771 754.953 li
720.389 754.953 725.669 752.767 729.638 748.797 cv
733.61 744.827 735.798 739.545 735.798 733.927 cv
735.8 695.867 li
765.364 695.865 li
765.366 733.929 li
765.364 747.443 760.101 760.147 750.546 769.702 cv
740.994 779.256 728.289 784.519 714.771 784.521 cv
712.521 784.521 li
cp
f
668.677 695.865 mo
689.243 695.867 li
689.244 675.298 li
668.677 675.3 li
668.677 695.865 li
cp
693.743 700.367 mo
664.177 700.365 li
664.177 670.8 li
693.744 670.798 li
693.743 700.367 li
cp
f
740.298 675.3 mo
740.303 695.869 li
760.862 695.865 li
760.862 675.298 li
740.298 675.3 li
cp
735.803 700.369 mo
735.798 670.8 li
765.362 670.798 li
765.362 700.365 li
735.803 700.369 li
cp
f
710.388 693.707 mo
704.373 675.296 li
699.343 675.296 li
699.343 670.796 li
707.637 670.796 li
710.388 679.218 li
719.158 652.383 li
725.169 670.796 li
730.198 670.796 li
730.198 675.296 li
721.903 675.296 li
719.156 666.877 li
710.388 693.707 li
cp
f
681.21 666.988 mo
676.71 666.988 li
676.71 652.271 li
681.21 652.271 li
681.21 666.988 li
cp
f
686.318 661.88 mo
671.602 661.88 li
671.602 657.38 li
686.318 657.38 li
686.318 661.88 li
cp
f
757.938 661.88 mo
743.222 661.88 li
743.222 657.38 li
757.938 657.38 li
757.938 661.88 li
cp
f
880.767 826.351 mo
883.935 826.351 li
883.935 827.792 li
883.448 828.242 882.458 828.71 881.396 828.71 cv
879.199 828.71 877.615 827.036 877.615 824.767 cv
877.615 822.498 879.199 820.824 881.396 820.824 cv
882.656 820.824 883.683 821.544 884.241 822.39 cv
886.348 821.238 li
885.447 819.816 883.881 818.555 881.396 818.555 cv
877.867 818.555 874.986 820.968 874.986 824.767 cv
874.986 828.548 877.867 830.979 881.396 830.979 cv
883.557 830.979 885.267 830.097 886.491 828.728 cv
886.491 824.119 li
880.767 824.119 li
880.767 826.351 li
cp
.0980392 .0941176 .0941176 rgb
f
888.522 830.763 mo
897.021 830.763 li
897.021 828.512 li
891.079 828.512 li
891.079 825.775 li
896.896 825.775 li
896.896 823.525 li
891.079 823.525 li
891.079 821.003 li
897.021 821.003 li
897.021 818.753 li
888.522 818.753 li
888.522 830.763 li
cp
f
904.724 828.71 mo
902.491 828.71 901.068 827 901.068 824.767 cv
901.068 822.516 902.491 820.824 904.724 820.824 cv
906.938 820.824 908.36 822.516 908.36 824.767 cv
908.36 827 906.938 828.71 904.724 828.71 cv
cp
904.724 818.555 mo
901.087 818.555 898.44 821.148 898.44 824.767 cv
898.44 828.386 901.087 830.979 904.724 830.979 cv
908.343 830.979 910.989 828.386 910.989 824.767 cv
910.989 821.148 908.343 818.555 904.724 818.555 cv
cp
f
917.989 826.351 mo
921.159 826.351 li
921.159 827.792 li
920.673 828.242 919.683 828.71 918.62 828.71 cv
916.423 828.71 914.839 827.036 914.839 824.767 cv
914.839 822.498 916.423 820.824 918.62 820.824 cv
919.88 820.824 920.906 821.544 921.465 822.39 cv
923.571 821.238 li
922.671 819.816 921.104 818.555 918.62 818.555 cv
915.091 818.555 912.21 820.968 912.21 824.767 cv
912.21 828.548 915.091 830.979 918.62 830.979 cv
920.78 830.979 922.491 830.097 923.716 828.728 cv
923.716 824.119 li
917.989 824.119 li
917.989 826.351 li
cp
f
931.003 824.245 mo
928.303 824.245 li
928.303 821.003 li
931.003 821.003 li
932.012 821.003 932.786 821.616 932.786 822.607 cv
932.786 823.632 932.012 824.245 931.003 824.245 cv
cp
935.415 822.625 mo
935.415 820.392 933.866 818.753 931.364 818.753 cv
925.746 818.753 li
925.746 830.763 li
928.303 830.763 li
928.303 826.496 li
930.175 826.496 li
932.534 830.763 li
935.487 830.763 li
932.769 826.189 li
934.064 825.883 935.415 824.731 935.415 822.625 cv
cp
f
940.417 826.478 mo
942.289 821.31 li
944.161 826.478 li
940.417 826.478 li
cp
940.687 818.753 mo
936.06 830.763 li
938.958 830.763 li
939.714 828.728 li
944.864 828.728 li
945.62 830.763 li
948.519 830.763 li
943.892 818.753 li
940.687 818.753 li
cp
f
954.89 824.226 mo
952.188 824.226 li
952.188 821.003 li
954.89 821.003 li
955.897 821.003 956.672 821.616 956.672 822.625 cv
956.672 823.615 955.897 824.226 954.89 824.226 cv
cp
955.249 818.753 mo
949.632 818.753 li
949.632 830.763 li
952.188 830.763 li
952.188 826.478 li
955.249 826.478 li
957.843 826.478 959.282 824.712 959.282 822.625 cv
959.282 820.517 957.86 818.753 955.249 818.753 cv
cp
f
969.11 823.47 mo
963.438 823.47 li
963.438 818.753 li
960.882 818.753 li
960.882 830.763 li
963.438 830.763 li
963.438 825.703 li
969.11 825.703 li
969.11 830.763 li
971.685 830.763 li
971.685 818.753 li
969.11 818.753 li
969.11 823.47 li
cp
f
981.638 818.753 mo
978.667 823.56 li
975.696 818.753 li
972.779 818.753 li
977.389 825.847 li
977.389 830.763 li
979.945 830.763 li
979.945 825.847 li
984.536 818.753 li
981.638 818.753 li
cp
f
934.11 752.48 mo
919.875 752.48 905.641 747.062 894.804 736.225 cv
873.131 714.55 873.131 679.283 894.804 657.608 cv
897.985 660.79 li
878.067 680.71 878.067 713.123 897.985 733.043 cv
917.906 752.962 950.317 752.96 970.238 733.042 cv
973.42 736.223 li
962.583 747.061 948.346 752.48 934.11 752.48 cv
cp
.0952911 .0952911 .0952911 rgb
f
901.733 667.717 mo
887.878 653.862 li
891.06 650.68 li
904.915 664.536 li
901.733 667.717 li
cp
f
977.159 743.141 mo
963.306 729.288 li
966.487 726.106 li
980.341 739.959 li
977.159 743.141 li
cp
f
934.111 655.623 mo
923.083 655.623 912.714 659.917 904.915 667.717 cv
897.12 675.512 892.827 685.881 892.826 696.915 cv
892.826 707.948 897.119 718.318 904.915 726.114 cv
912.713 733.912 923.082 738.206 934.112 738.206 cv
945.146 738.206 955.515 733.912 963.313 726.114 cv
971.114 718.312 975.41 707.943 975.409 696.915 cv
975.409 685.887 971.112 675.518 963.313 667.717 cv
955.513 659.917 945.143 655.623 934.111 655.623 cv
cp
934.112 742.706 mo
921.88 742.706 910.38 737.943 901.733 729.295 cv
893.087 720.65 888.326 709.15 888.326 696.914 cv
888.327 684.679 893.088 673.18 901.733 664.536 cv
910.382 655.886 921.881 651.123 934.111 651.123 cv
946.345 651.123 957.845 655.886 966.494 664.536 cv
975.145 673.186 979.909 684.685 979.909 696.914 cv
979.91 709.144 975.146 720.644 966.494 729.295 cv
957.848 737.943 946.347 742.706 934.112 742.706 cv
cp
.0980392 .0941176 .0941176 rgb
f
954.759 733.605 mo
944.006 733.605 929.718 726.495 917.126 713.903 cv
908.662 705.439 902.34 695.793 899.323 686.744 cv
896.132 677.167 896.987 669.281 901.733 664.536 cv
904.915 667.717 li
901.488 671.144 901.006 677.561 903.592 685.321 cv
906.392 693.721 912.328 702.742 920.308 710.721 cv
936.135 726.547 955.825 733.595 963.313 726.114 cv
966.494 729.295 li
963.574 732.215 959.512 733.605 954.759 733.605 cv
cp
f
966.494 729.295 mo
963.313 726.114 li
970.794 718.632 963.743 698.94 947.917 683.113 cv
939.936 675.132 930.916 669.195 922.52 666.394 cv
914.646 663.768 908.395 664.237 904.915 667.717 cv
901.733 664.536 li
906.48 659.789 914.37 658.931 923.943 662.125 cv
932.989 665.142 942.633 671.465 951.099 679.931 cv
969.255 698.088 976.018 719.772 966.494 729.295 cv
cp
f
963.313 729.295 mo
901.733 667.717 li
904.915 664.536 li
966.494 726.114 li
963.313 729.295 li
cp
f
904.915 729.295 mo
901.733 726.114 li
963.313 664.536 li
966.494 667.717 li
904.915 729.295 li
cp
f
891.872 703.725 mo
889.843 699.709 li
899.925 694.612 909.105 687.958 917.131 679.934 cv
925.166 671.899 931.821 662.716 936.913 652.64 cv
940.929 654.669 li
935.622 665.172 928.686 674.743 920.313 683.116 cv
911.95 691.479 902.381 698.413 891.872 703.725 cv
cp
f
931.323 741.19 mo
927.308 739.161 li
932.622 728.646 939.556 719.077 947.915 710.717 cv
956.287 702.345 965.858 695.41 976.364 690.104 cv
978.394 694.122 li
968.314 699.211 959.131 705.866 951.097 713.899 cv
943.075 721.92 936.423 731.102 931.323 741.19 cv
cp
f
936.202 765.498 mo
931.702 765.498 li
931.702 750.257 li
936.202 750.257 li
936.202 765.498 li
cp
.0952911 .0952911 .0952911 rgb
f
913.702 771.632 mo
954.202 771.632 li
954.202 767.748 li
913.702 767.748 li
913.702 771.632 li
cp
958.702 776.132 mo
909.202 776.132 li
909.202 763.248 li
958.702 763.248 li
958.702 776.132 li
cp
f
901.202 780.021 mo
966.702 780.021 li
966.702 776.132 li
901.202 776.132 li
901.202 780.021 li
cp
971.202 784.521 mo
896.702 784.521 li
896.702 771.632 li
971.202 771.632 li
971.202 784.521 li
cp
f
30.1152 1041.25 mo
27.1982 1033.74 li
23.6152 1033.74 li
23.6152 1045.75 li
26.1719 1045.75 li
26.1719 1037.09 li
29.5566 1045.75 li
30.6729 1045.75 li
34.0576 1037.09 li
34.0576 1045.75 li
36.6328 1045.75 li
36.6328 1033.74 li
33.0313 1033.74 li
30.1152 1041.25 li
cp
.0980392 .0941176 .0941176 rgb
f
44.7129 1043.7 mo
42.4805 1043.7 41.0576 1041.99 41.0576 1039.76 cv
41.0576 1037.51 42.4805 1035.81 44.7129 1035.81 cv
46.9277 1035.81 48.3496 1037.51 48.3496 1039.76 cv
48.3496 1041.99 46.9277 1043.7 44.7129 1043.7 cv
cp
44.7129 1033.54 mo
41.0752 1033.54 38.4287 1036.14 38.4287 1039.76 cv
38.4287 1043.37 41.0752 1045.97 44.7129 1045.97 cv
48.332 1045.97 50.9785 1043.37 50.9785 1039.76 cv
50.9785 1036.14 48.332 1033.54 44.7129 1033.54 cv
cp
f
55.2422 1033.74 mo
52.667 1033.74 li
52.667 1045.75 li
60.3193 1045.75 li
60.3193 1043.5 li
55.2422 1043.5 li
55.2422 1033.74 li
cp
f
62.0449 1045.75 mo
70.5439 1045.75 li
70.5439 1043.5 li
64.6016 1043.5 li
64.6016 1040.76 li
70.418 1040.76 li
70.418 1038.51 li
64.6016 1038.51 li
64.6016 1035.99 li
70.5439 1035.99 li
70.5439 1033.74 li
62.0449 1033.74 li
62.0449 1045.75 li
cp
f
78.3721 1035.81 mo
79.5967 1035.81 80.6768 1036.59 81.1816 1037.56 cv
83.3779 1036.48 li
82.5313 1034.97 81.001 1033.54 78.3721 1033.54 cv
74.7529 1033.54 71.9629 1036.05 71.9629 1039.76 cv
71.9629 1043.45 74.7529 1045.97 78.3721 1045.97 cv
81.001 1045.97 82.5313 1044.51 83.3779 1043.02 cv
81.1816 1041.95 li
80.6768 1042.93 79.5967 1043.7 78.3721 1043.7 cv
76.1758 1043.7 74.5918 1042.02 74.5918 1039.76 cv
74.5918 1037.49 76.1758 1035.81 78.3721 1035.81 cv
cp
f
93.1328 1040.87 mo
93.1328 1042.55 92.1787 1043.7 90.3242 1043.7 cv
88.4697 1043.7 87.4971 1042.55 87.4971 1040.87 cv
87.4971 1033.74 li
84.9043 1033.74 li
84.9043 1040.94 li
84.9043 1043.92 86.6689 1045.97 90.3242 1045.97 cv
93.9795 1045.97 95.7441 1043.92 95.7441 1040.94 cv
95.7441 1033.74 li
93.1328 1033.74 li
93.1328 1040.87 li
cp
f
100.583 1033.74 mo
98.0088 1033.74 li
98.0088 1045.75 li
105.66 1045.75 li
105.66 1043.5 li
100.583 1043.5 li
100.583 1033.74 li
cp
f
115.885 1035.99 mo
115.885 1033.74 li
107.387 1033.74 li
107.387 1045.75 li
115.885 1045.75 li
115.885 1043.5 li
109.943 1043.5 li
109.943 1040.76 li
115.759 1040.76 li
115.759 1038.51 li
109.943 1038.51 li
109.943 1035.99 li
115.885 1035.99 li
cp
f
69.75 910.697 mo
64.1167 910.697 59.5337 915.279 59.5337 920.912 cv
59.5337 926.545 64.1167 931.128 69.75 931.128 cv
75.3838 931.128 79.9668 926.545 79.9668 920.912 cv
79.9668 915.279 75.3838 910.697 69.75 910.697 cv
cp
69.75 935.628 mo
61.6353 935.628 55.0337 929.027 55.0337 920.912 cv
55.0337 912.797 61.6353 906.197 69.75 906.197 cv
77.8647 906.197 84.4668 912.797 84.4668 920.912 cv
84.4668 929.027 77.8647 935.628 69.75 935.628 cv
cp
.0952911 .0952911 .0952911 rgb
f
16.5767 892.462 mo
15.3359 892.462 14.3262 891.453 14.3262 890.212 cv
14.3262 888.972 15.3359 887.962 16.5767 887.962 cv
17.8169 887.962 18.8262 888.972 18.8262 890.212 cv
18.8262 891.453 17.8169 892.462 16.5767 892.462 cv
cp
f
122.923 892.462 mo
121.683 892.462 120.673 891.454 120.673 890.213 cv
120.673 888.973 121.683 887.964 122.923 887.964 cv
124.164 887.964 125.173 888.973 125.173 890.213 cv
125.173 891.454 124.164 892.462 122.923 892.462 cv
cp
f
69.75 984.56 mo
68.5093 984.56 67.5 983.551 67.5 982.311 cv
67.5 981.071 68.5093 980.062 69.75 980.062 cv
70.9902 980.062 72 981.071 72 982.311 cv
72 983.551 70.9902 984.56 69.75 984.56 cv
cp
f
69.75 902.697 mo
59.7056 902.697 51.5337 910.868 51.5337 920.912 cv
51.5337 930.957 59.7056 939.128 69.75 939.128 cv
79.7949 939.128 87.9668 930.957 87.9668 920.912 cv
87.9668 910.868 79.7949 902.697 69.75 902.697 cv
cp
69.75 943.628 mo
57.2241 943.628 47.0337 933.438 47.0337 920.912 cv
47.0337 908.386 57.2241 898.197 69.75 898.197 cv
82.2759 898.197 92.4668 908.386 92.4668 920.912 cv
92.4668 933.438 82.2759 943.628 69.75 943.628 cv
cp
f
16.5767 878.136 mo
9.91748 878.136 4.5 883.553 4.5 890.212 cv
4.5 896.872 9.91748 902.289 16.5767 902.289 cv
23.2354 902.289 28.6528 896.872 28.6528 890.212 cv
28.6528 883.553 23.2354 878.136 16.5767 878.136 cv
cp
16.5767 906.789 mo
7.43604 906.789 0 899.352 0 890.212 cv
0 881.073 7.43604 873.636 16.5767 873.636 cv
25.7168 873.636 33.1528 881.073 33.1528 890.212 cv
33.1528 899.352 25.7168 906.789 16.5767 906.789 cv
cp
f
122.924 878.138 mo
116.265 878.138 110.847 883.554 110.847 890.212 cv
110.847 896.872 116.265 902.289 122.924 902.289 cv
129.583 902.289 135 896.872 135 890.212 cv
135 883.554 129.583 878.138 122.924 878.138 cv
cp
122.924 906.789 mo
113.783 906.789 106.347 899.352 106.347 890.212 cv
106.347 881.074 113.783 873.638 122.924 873.638 cv
132.064 873.638 139.5 881.074 139.5 890.212 cv
139.5 899.352 132.064 906.789 122.924 906.789 cv
cp
f
69.75 970.236 mo
63.0908 970.236 57.6733 975.652 57.6733 982.31 cv
57.6733 988.969 63.0908 994.386 69.75 994.386 cv
76.4087 994.386 81.8262 988.969 81.8262 982.31 cv
81.8262 975.652 76.4087 970.236 69.75 970.236 cv
cp
69.75 998.886 mo
60.6094 998.886 53.1733 991.45 53.1733 982.31 cv
53.1733 973.171 60.6094 965.736 69.75 965.736 cv
78.8901 965.736 86.3262 973.171 86.3262 982.31 cv
86.3262 991.45 78.8901 998.886 69.75 998.886 cv
cp
f
69.75 870.136 mo
66.5796 870.136 64 872.715 64 875.886 cv
64 879.057 66.5796 881.636 69.75 881.636 cv
72.9204 881.636 75.5 879.057 75.5 875.886 cv
75.5 872.715 72.9204 870.136 69.75 870.136 cv
cp
69.75 886.136 mo
64.0981 886.136 59.5 881.539 59.5 875.886 cv
59.5 870.234 64.0981 865.636 69.75 865.636 cv
75.4019 865.636 80 870.234 80 875.886 cv
80 881.539 75.4019 886.136 69.75 886.136 cv
cp
f
30.7466 937.673 mo
29.7456 937.673 28.7549 937.94 27.8813 938.444 cv
26.5522 939.211 25.6011 940.452 25.2036 941.936 cv
24.8062 943.42 25.0098 944.969 25.7773 946.298 cv
26.8018 948.073 28.7134 949.175 30.7656 949.175 cv
31.7666 949.175 32.7573 948.909 33.6313 948.405 cv
34.9614 947.636 35.9126 946.397 36.3101 944.913 cv
36.7075 943.429 36.5034 941.879 35.7358 940.55 cv
34.7114 938.776 32.7998 937.673 30.7466 937.673 cv
cp
30.7656 953.675 mo
27.1108 953.675 23.7061 951.711 21.8799 948.548 cv
20.5122 946.179 20.1484 943.417 20.8569 940.773 cv
21.5649 938.126 23.2607 935.916 25.6313 934.547 cv
27.188 933.648 28.9565 933.173 30.7466 933.173 cv
34.4028 933.173 37.8076 935.138 39.6328 938.3 cv
41.0015 940.67 41.3652 943.432 40.6567 946.077 cv
39.9482 948.722 38.2524 950.933 35.8813 952.301 cv
34.3247 953.201 32.5557 953.675 30.7656 953.675 cv
cp
f
108.752 937.673 mo
106.7 937.673 104.788 938.775 103.764 940.55 cv
102.996 941.879 102.792 943.428 103.19 944.913 cv
103.587 946.397 104.539 947.637 105.868 948.405 cv
106.742 948.909 107.732 949.175 108.733 949.175 cv
110.786 949.175 112.697 948.074 113.721 946.3 cv
115.307 943.554 114.363 940.03 111.618 938.444 cv
110.744 937.94 109.753 937.673 108.752 937.673 cv
cp
108.733 953.675 mo
106.943 953.675 105.174 953.201 103.618 952.301 cv
101.248 950.933 99.5518 948.722 98.8433 946.076 cv
98.1348 943.431 98.4985 940.669 99.8672 938.3 cv
101.692 935.138 105.097 933.173 108.752 933.173 cv
110.542 933.173 112.311 933.648 113.868 934.547 cv
118.762 937.374 120.445 943.655 117.619 948.55 cv
115.793 951.711 112.389 953.675 108.733 953.675 cv
cp
f
72 967.986 mo
67.5 967.986 li
67.5 941.378 li
72 941.378 li
72 967.986 li
cp
f
88.5996 912.627 mo
86.3496 908.731 li
109.394 895.426 li
111.644 899.323 li
88.5996 912.627 li
cp
f
50.9009 912.627 mo
27.8564 899.323 li
30.1064 895.426 li
53.1509 908.731 li
50.9009 912.627 li
cp
f
259.967 1043.5 mo
256.654 1043.5 li
256.654 1040.76 li
259.967 1040.76 li
260.957 1040.76 261.497 1041.38 261.497 1042.13 cv
261.497 1043 260.921 1043.5 259.967 1043.5 cv
cp
256.654 1035.99 mo
259.859 1035.99 li
260.724 1035.99 261.264 1036.52 261.264 1037.25 cv
261.264 1038.03 260.724 1038.51 259.859 1038.51 cv
256.654 1038.51 li
256.654 1035.99 li
cp
261.804 1039.56 mo
262.938 1039.32 263.874 1038.3 263.874 1036.8 cv
263.874 1035.2 262.704 1033.74 260.417 1033.74 cv
254.098 1033.74 li
254.098 1045.75 li
260.615 1045.75 li
262.92 1045.75 264.108 1044.31 264.108 1042.49 cv
264.108 1041 263.1 1039.76 261.804 1039.56 cv
cp
.0980392 .0941176 .0941176 rgb
f
269.128 1041.47 mo
271.001 1036.3 li
272.873 1041.47 li
269.128 1041.47 li
cp
269.398 1033.74 mo
264.771 1045.75 li
267.67 1045.75 li
268.426 1043.72 li
273.575 1043.72 li
274.332 1045.75 li
277.23 1045.75 li
272.604 1033.74 li
269.398 1033.74 li
cp
f
280.414 1037.02 mo
280.414 1036.3 281.026 1035.83 282.106 1035.83 cv
283.331 1035.83 284.627 1036.24 285.6 1037.14 cv
287.022 1035.24 li
285.834 1034.14 284.249 1033.56 282.341 1033.56 cv
279.514 1033.56 277.785 1035.22 277.785 1037.22 cv
277.785 1041.74 284.699 1040.28 284.699 1042.37 cv
284.699 1043.07 284.033 1043.7 282.61 1043.7 cv
280.954 1043.7 279.64 1042.94 278.794 1042.06 cv
277.39 1044.06 li
278.523 1045.19 280.18 1045.97 282.503 1045.97 cv
285.726 1045.97 287.311 1044.31 287.311 1042.11 cv
287.311 1037.63 280.414 1038.91 280.414 1037.02 cv
cp
f
289.018 1045.75 mo
291.574 1045.75 li
291.574 1033.74 li
289.018 1033.74 li
289.018 1045.75 li
cp
f
299.782 1035.81 mo
301.007 1035.81 302.087 1036.59 302.592 1037.56 cv
304.788 1036.48 li
303.941 1034.97 302.411 1033.54 299.782 1033.54 cv
296.163 1033.54 293.373 1036.05 293.373 1039.76 cv
293.373 1043.45 296.163 1045.97 299.782 1045.97 cv
302.411 1045.97 303.941 1044.51 304.788 1043.02 cv
302.592 1041.95 li
302.087 1042.93 301.007 1043.7 299.782 1043.7 cv
297.586 1043.7 296.002 1042.02 296.002 1039.76 cv
296.002 1037.49 297.586 1035.81 299.782 1035.81 cv
cp
f
308.512 1037.02 mo
308.512 1036.3 309.123 1035.83 310.204 1035.83 cv
311.428 1035.83 312.725 1036.24 313.697 1037.14 cv
315.119 1035.24 li
313.931 1034.14 312.347 1033.56 310.438 1033.56 cv
307.611 1033.56 305.883 1035.22 305.883 1037.22 cv
305.883 1041.74 312.797 1040.28 312.797 1042.37 cv
312.797 1043.07 312.13 1043.7 310.708 1043.7 cv
309.052 1043.7 307.737 1042.94 306.891 1042.06 cv
305.486 1044.06 li
306.621 1045.19 308.277 1045.97 310.6 1045.97 cv
313.823 1045.97 315.407 1044.31 315.407 1042.11 cv
315.407 1037.63 308.512 1038.91 308.512 1037.02 cv
cp
f
224.502 952.511 mo
345.002 952.511 li
345.002 877.011 li
224.502 877.011 li
224.502 952.511 li
cp
349.502 957.011 mo
220.002 957.011 li
220.002 872.511 li
349.502 872.511 li
349.502 957.011 li
cp
.0952911 .0952911 .0952911 rgb
f
232.502 944.511 mo
337.002 944.511 li
337.002 885.011 li
232.502 885.011 li
232.502 944.511 li
cp
341.502 949.011 mo
228.002 949.011 li
228.002 880.511 li
341.502 880.511 li
341.502 949.011 li
cp
f
253.771 925.568 mo
240.252 925.568 li
239.01 925.568 238.002 924.56 238.002 923.318 cv
238.002 906.416 li
238.002 905.173 239.01 904.166 240.252 904.166 cv
253.771 904.166 li
253.771 908.666 li
242.502 908.666 li
242.502 921.068 li
253.771 921.068 li
253.771 925.568 li
cp
f
248.136 917.119 mo
238.002 917.119 li
238.002 912.619 li
248.136 912.619 li
248.136 917.119 li
cp
f
308.846 925.568 mo
306.031 925.568 li
304.305 925.568 302.679 924.896 301.453 923.676 cv
300.227 922.443 299.556 920.817 299.556 919.091 cv
299.556 910.642 li
299.556 908.919 300.226 907.294 301.443 906.068 cv
302.679 904.837 304.305 904.166 306.031 904.166 cv
308.846 904.166 li
310.579 904.166 312.206 904.839 313.427 906.062 cv
314.649 907.287 315.322 908.913 315.322 910.642 cv
315.322 912.892 li
310.822 912.892 li
310.822 910.642 li
310.822 910.113 310.616 909.616 310.243 909.241 cv
309.872 908.871 309.376 908.666 308.846 908.666 cv
306.031 908.666 li
305.502 908.666 305.004 908.872 304.628 909.247 cv
304.263 909.615 304.056 910.114 304.056 910.642 cv
304.056 919.091 li
304.056 919.621 304.262 920.119 304.636 920.496 cv
305.004 920.862 305.502 921.068 306.031 921.068 cv
308.846 921.068 li
309.376 921.068 309.872 920.863 310.244 920.492 cv
310.617 920.119 310.822 919.622 310.822 919.091 cv
310.822 916.841 li
315.322 916.841 li
315.322 919.091 li
315.322 920.824 314.648 922.451 313.426 923.672 cv
312.206 924.894 310.579 925.568 308.846 925.568 cv
cp
f
288.701 925.568 mo
284.201 925.568 li
284.201 910.359 li
284.201 909.425 283.441 908.666 282.507 908.666 cv
281.574 908.666 280.814 909.425 280.814 910.359 cv
280.814 925.568 li
276.314 925.568 li
276.314 910.359 li
276.314 906.944 279.093 904.166 282.507 904.166 cv
285.922 904.166 288.701 906.944 288.701 910.359 cv
288.701 925.568 li
cp
f
296.586 925.568 mo
292.086 925.568 li
292.086 910.359 li
292.086 909.425 291.328 908.666 290.395 908.666 cv
289.461 908.666 288.701 909.425 288.701 910.359 cv
288.701 925.568 li
284.201 925.568 li
284.201 910.359 li
284.201 906.944 286.979 904.166 290.395 904.166 cv
293.809 904.166 296.586 906.944 296.586 910.359 cv
296.586 925.568 li
cp
f
331.752 908.666 mo
320.451 908.666 li
319.208 908.666 318.201 907.658 318.201 906.416 cv
318.201 903.115 li
318.201 901.625 318.779 900.23 319.829 899.184 cv
320.875 898.138 322.27 897.56 323.751 897.56 cv
325.951 897.56 li
326.114 897.56 326.427 897.52 326.695 897.253 cv
326.962 896.985 327.002 896.671 327.002 896.509 cv
327.002 896.346 326.962 896.032 326.691 895.76 cv
326.427 895.497 326.114 895.457 325.951 895.457 cv
323.751 895.457 li
323.47 895.457 323.205 895.566 323.005 895.765 cv
322.754 896.016 322.701 896.308 322.701 896.509 cv
318.201 896.509 li
318.201 895.022 318.778 893.626 319.827 892.58 cv
320.877 891.533 322.27 890.957 323.751 890.957 cv
325.951 890.957 li
327.433 890.957 328.827 891.533 329.875 892.58 cv
330.926 893.633 331.502 895.028 331.502 896.509 cv
331.502 897.99 330.926 899.383 329.878 900.434 cv
328.827 901.484 327.433 902.06 325.951 902.06 cv
323.751 902.06 li
323.472 902.06 323.207 902.17 323.007 902.37 cv
322.74 902.636 322.701 902.951 322.701 903.115 cv
322.701 904.166 li
331.752 904.166 li
331.752 908.666 li
cp
f
272.926 913.398 mo
257.159 913.398 li
257.159 908.898 li
272.926 908.898 li
272.926 913.398 li
cp
f
272.926 921.287 mo
257.159 921.287 li
257.159 916.787 li
272.926 916.787 li
272.926 921.287 li
cp
f
217.002 962.511 mo
352.502 962.511 li
352.502 957.011 li
217.002 957.011 li
217.002 962.511 li
cp
357.002 967.011 mo
212.502 967.011 li
212.502 952.511 li
357.002 952.511 li
357.002 967.011 li
cp
f
316.994 987.511 mo
322.494 987.511 li
322.494 967.011 li
316.994 967.011 li
316.994 987.511 li
cp
326.994 992.011 mo
312.494 992.011 li
312.494 962.511 li
326.994 962.511 li
326.994 992.011 li
cp
f
247.011 987.511 mo
252.511 987.511 li
252.511 967.011 li
247.011 967.011 li
247.011 987.511 li
cp
257.011 992.011 mo
242.511 992.011 li
242.511 962.511 li
257.011 962.511 li
257.011 992.011 li
cp
f
314.744 979.511 mo
254.761 979.511 li
254.761 975.011 li
314.744 975.011 li
314.744 979.511 li
cp
f
468.601 1039.21 mo
465.9 1039.21 li
465.9 1035.99 li
468.601 1035.99 li
469.609 1035.99 470.384 1036.6 470.384 1037.61 cv
470.384 1038.6 469.609 1039.21 468.601 1039.21 cv
cp
468.961 1033.74 mo
463.344 1033.74 li
463.344 1045.75 li
465.9 1045.75 li
465.9 1041.47 li
468.961 1041.47 li
471.554 1041.47 472.994 1039.7 472.994 1037.61 cv
472.994 1035.51 471.572 1033.74 468.961 1033.74 cv
cp
.0980392 .0941176 .0941176 rgb
f
482.822 1038.46 mo
477.15 1038.46 li
477.15 1033.74 li
474.594 1033.74 li
474.594 1045.75 li
477.15 1045.75 li
477.15 1040.69 li
482.822 1040.69 li
482.822 1045.75 li
485.396 1045.75 li
485.396 1033.74 li
482.822 1033.74 li
482.822 1038.46 li
cp
f
495.35 1033.74 mo
492.379 1038.55 li
489.407 1033.74 li
486.491 1033.74 li
491.101 1040.84 li
491.101 1045.75 li
493.657 1045.75 li
493.657 1040.84 li
498.248 1033.74 li
495.35 1033.74 li
cp
f
501.198 1037.02 mo
501.198 1036.3 501.81 1035.83 502.891 1035.83 cv
504.114 1035.83 505.411 1036.24 506.384 1037.14 cv
507.806 1035.24 li
506.617 1034.14 505.033 1033.56 503.124 1033.56 cv
500.298 1033.56 498.569 1035.22 498.569 1037.22 cv
498.569 1041.74 505.483 1040.28 505.483 1042.37 cv
505.483 1043.07 504.816 1043.7 503.395 1043.7 cv
501.738 1043.7 500.424 1042.94 499.577 1042.06 cv
498.173 1044.06 li
499.308 1045.19 500.964 1045.97 503.286 1045.97 cv
506.51 1045.97 508.094 1044.31 508.094 1042.11 cv
508.094 1037.63 501.198 1038.91 501.198 1037.02 cv
cp
f
509.801 1045.75 mo
512.357 1045.75 li
512.357 1033.74 li
509.801 1033.74 li
509.801 1045.75 li
cp
f
520.566 1035.81 mo
521.791 1035.81 522.871 1036.59 523.375 1037.56 cv
525.572 1036.48 li
524.726 1034.97 523.195 1033.54 520.566 1033.54 cv
516.947 1033.54 514.156 1036.05 514.156 1039.76 cv
514.156 1043.45 516.947 1045.97 520.566 1045.97 cv
523.195 1045.97 524.726 1044.51 525.572 1043.02 cv
523.375 1041.95 li
522.871 1042.93 521.791 1043.7 520.566 1043.7 cv
518.37 1043.7 516.785 1042.02 516.785 1039.76 cv
516.785 1037.49 518.37 1035.81 520.566 1035.81 cv
cp
f
529.295 1037.02 mo
529.295 1036.3 529.907 1035.83 530.988 1035.83 cv
532.212 1035.83 533.508 1036.24 534.48 1037.14 cv
535.903 1035.24 li
534.715 1034.14 533.131 1033.56 531.222 1033.56 cv
528.395 1033.56 526.666 1035.22 526.666 1037.22 cv
526.666 1041.74 533.58 1040.28 533.58 1042.37 cv
533.58 1043.07 532.914 1043.7 531.492 1043.7 cv
529.836 1043.7 528.521 1042.94 527.675 1042.06 cv
526.271 1044.06 li
527.404 1045.19 529.061 1045.97 531.384 1045.97 cv
534.607 1045.97 536.191 1044.31 536.191 1042.11 cv
536.191 1037.63 529.295 1038.91 529.295 1037.02 cv
cp
f
465.125 955.277 mo
456.793 955.277 450.015 962.055 450.015 970.386 cv
450.015 978.716 456.793 985.494 465.125 985.494 cv
473.457 985.494 480.235 978.716 480.235 970.386 cv
480.235 962.055 473.457 955.277 465.125 955.277 cv
cp
465.125 989.994 mo
454.313 989.994 445.515 981.198 445.515 970.386 cv
445.515 959.574 454.313 950.777 465.125 950.777 cv
475.938 950.777 484.735 959.574 484.735 970.386 cv
484.735 981.198 475.938 989.994 465.125 989.994 cv
cp
.0952911 .0952911 .0952911 rgb
f
465.125 963.699 mo
461.438 963.699 458.439 966.699 458.439 970.386 cv
458.439 974.07 461.438 977.066 465.125 977.066 cv
468.813 977.066 471.812 974.07 471.812 970.386 cv
471.812 966.699 468.813 963.699 465.125 963.699 cv
cp
465.125 981.566 mo
458.957 981.566 453.939 976.55 453.939 970.386 cv
453.939 964.217 458.957 959.199 465.125 959.199 cv
471.294 959.199 476.312 964.217 476.312 970.386 cv
476.312 976.55 471.294 981.566 465.125 981.566 cv
cp
f
525.731 903.197 mo
512.618 903.197 501.949 913.869 501.949 926.986 cv
501.949 940.104 512.618 950.777 525.731 950.777 cv
538.85 950.777 549.522 940.104 549.522 926.986 cv
549.522 913.869 538.85 903.197 525.731 903.197 cv
cp
525.731 955.277 mo
510.137 955.277 497.45 942.585 497.45 926.986 cv
497.45 911.387 510.137 898.697 525.731 898.697 cv
541.331 898.697 554.022 911.387 554.022 926.986 cv
554.022 942.585 541.331 955.277 525.731 955.277 cv
cp
f
554.022 928.271 mo
549.522 928.271 li
549.522 886.609 li
554.022 886.609 li
554.022 928.271 li
cp
f
450.015 970.386 mo
445.515 970.386 li
445.515 886.609 li
450.015 886.609 li
450.015 970.386 li
cp
f
438.844 876.869 mo
560.69 876.869 li
560.69 872.011 li
438.844 872.011 li
438.844 876.869 li
cp
565.19 881.369 mo
434.344 881.369 li
434.344 867.511 li
565.19 867.511 li
565.19 881.369 li
cp
f
525.731 915.199 mo
519.232 915.199 513.944 920.487 513.944 926.986 cv
513.944 933.487 519.232 938.775 525.731 938.775 cv
532.233 938.775 537.522 933.487 537.522 926.986 cv
537.522 920.487 532.233 915.199 525.731 915.199 cv
cp
525.731 943.275 mo
516.751 943.275 509.444 935.967 509.444 926.986 cv
509.444 918.005 516.751 910.699 525.731 910.699 cv
534.714 910.699 542.022 918.005 542.022 926.986 cv
542.022 935.967 534.714 943.275 525.731 943.275 cv
cp
f
483.621 976.906 mo
479.361 975.457 li
499.104 917.437 li
503.363 918.886 li
483.621 976.906 li
cp
f
527.983 980.724 mo
523.483 980.724 li
523.483 926.986 li
527.983 926.986 li
527.983 980.724 li
cp
f
513.944 992.511 mo
537.522 992.511 li
537.522 982.974 li
513.944 982.974 li
513.944 992.511 li
cp
542.022 997.011 mo
509.444 997.011 li
509.444 978.474 li
542.022 978.474 li
542.022 997.011 li
cp
f
909.692 1041.29 mo
904.129 1033.74 li
901.5 1033.74 li
901.5 1045.75 li
904.057 1045.75 li
904.057 1037.92 li
909.782 1045.75 li
912.249 1045.75 li
912.249 1033.74 li
909.692 1033.74 li
909.692 1041.29 li
cp
.0980392 .0941176 .0941176 rgb
f
920.329 1043.7 mo
918.097 1043.7 916.674 1041.99 916.674 1039.76 cv
916.674 1037.5 918.097 1035.81 920.329 1035.81 cv
922.544 1035.81 923.967 1037.5 923.967 1039.76 cv
923.967 1041.99 922.544 1043.7 920.329 1043.7 cv
cp
920.329 1033.54 mo
916.691 1033.54 914.045 1036.14 914.045 1039.76 cv
914.045 1043.37 916.691 1045.97 920.329 1045.97 cv
923.948 1045.97 926.596 1043.37 926.596 1039.76 cv
926.596 1036.14 923.948 1033.54 920.329 1033.54 cv
cp
f
927.222 1035.99 mo
930.732 1035.99 li
930.732 1045.75 li
933.308 1045.75 li
933.308 1035.99 li
936.801 1035.99 li
936.801 1033.74 li
927.222 1033.74 li
927.222 1035.99 li
cp
f
938.436 1045.75 mo
946.934 1045.75 li
946.934 1043.5 li
940.992 1043.5 li
940.992 1040.76 li
946.809 1040.76 li
946.809 1038.51 li
940.992 1038.51 li
940.992 1035.99 li
946.934 1035.99 li
946.934 1033.74 li
938.436 1033.74 li
938.436 1045.75 li
cp
f
951.126 1037.02 mo
951.126 1036.3 951.738 1035.83 952.818 1035.83 cv
954.043 1035.83 955.339 1036.24 956.312 1037.14 cv
957.734 1035.24 li
956.545 1034.14 954.961 1033.56 953.053 1033.56 cv
950.226 1033.56 948.497 1035.22 948.497 1037.22 cv
948.497 1041.74 955.411 1040.28 955.411 1042.37 cv
955.411 1043.07 954.744 1043.7 953.322 1043.7 cv
951.666 1043.7 950.352 1042.94 949.506 1042.06 cv
948.101 1044.06 li
949.235 1045.19 950.892 1045.97 953.215 1045.97 cv
956.438 1045.97 958.021 1044.31 958.021 1042.11 cv
958.021 1037.63 951.126 1038.91 951.126 1037.02 cv
cp
f
978.398 997.011 mo
881.123 997.011 li
881.123 875.32 li
921.949 875.32 li
921.949 879.82 li
885.623 879.82 li
885.623 992.511 li
973.898 992.511 li
973.898 879.82 li
937.574 879.82 li
937.574 875.32 li
978.398 875.32 li
978.398 997.011 li
cp
f
969.609 988.222 mo
889.912 988.222 li
889.912 877.57 li
894.412 877.57 li
894.412 983.722 li
965.109 983.722 li
965.109 877.57 li
969.609 877.57 li
969.609 988.222 li
cp
f
914.922 890.949 mo
944.602 890.949 li
944.602 879.824 li
935.324 879.824 li
935.324 877.574 li
935.324 874.506 932.829 872.011 929.762 872.011 cv
926.694 872.011 924.199 874.506 924.199 877.574 cv
924.199 879.824 li
914.922 879.824 li
914.922 890.949 li
cp
949.102 895.449 mo
910.422 895.449 li
910.422 875.324 li
919.953 875.324 li
920.978 870.855 924.986 867.511 929.762 867.511 cv
934.537 867.511 938.546 870.855 939.57 875.324 cv
949.102 875.324 li
949.102 895.449 li
cp
f
932.012 877.57 mo
932.012 878.812 931.005 879.82 929.762 879.82 cv
928.52 879.82 927.512 878.812 927.512 877.57 cv
927.512 876.327 928.52 875.32 929.762 875.32 cv
931.005 875.32 932.012 876.327 932.012 877.57 cv
cp
f
957.85 959.835 mo
929.762 959.835 li
929.762 955.335 li
957.85 955.335 li
957.85 959.835 li
cp
f
943.806 969.835 mo
929.762 969.835 li
929.762 965.335 li
943.806 965.335 li
943.806 969.835 li
cp
f
957.85 913.835 mo
929.762 913.835 li
929.762 909.335 li
957.85 909.335 li
957.85 913.835 li
cp
f
943.806 923.835 mo
929.762 923.835 li
929.762 919.335 li
943.806 919.335 li
943.806 923.835 li
cp
f
957.85 936.835 mo
929.762 936.835 li
929.762 932.335 li
957.85 932.335 li
957.85 936.835 li
cp
f
943.806 946.835 mo
929.762 946.835 li
929.762 942.335 li
943.806 942.335 li
943.806 946.835 li
cp
f
910.672 922.528 mo
904.081 915.936 li
907.263 912.754 li
910.672 916.163 li
919.081 907.752 li
922.263 910.934 li
910.672 922.528 li
cp
f
910.672 945.528 mo
904.081 938.936 li
907.263 935.754 li
910.672 939.163 li
919.081 930.752 li
922.263 933.934 li
910.672 945.528 li
cp
f
910.672 968.528 mo
904.081 961.936 li
907.263 958.754 li
910.672 962.163 li
919.081 953.752 li
922.263 956.934 li
910.672 968.528 li
cp
f
670.401 1033.74 mo
667.251 1033.74 li
663.001 1039.09 li
663.001 1033.74 li
660.444 1033.74 li
660.444 1045.75 li
663.001 1045.75 li
663.001 1042.06 li
663.938 1040.93 li
667.575 1045.75 li
670.726 1045.75 li
665.63 1039.38 li
670.401 1033.74 li
cp
f
680.085 1041.29 mo
674.521 1033.74 li
671.894 1033.74 li
671.894 1045.75 li
674.45 1045.75 li
674.45 1037.92 li
680.175 1045.75 li
682.642 1045.75 li
682.642 1033.74 li
680.085 1033.74 li
680.085 1041.29 li
cp
f
690.722 1043.7 mo
688.489 1043.7 687.067 1041.99 687.067 1039.76 cv
687.067 1037.51 688.489 1035.81 690.722 1035.81 cv
692.937 1035.81 694.358 1037.51 694.358 1039.76 cv
694.358 1041.99 692.937 1043.7 690.722 1043.7 cv
cp
690.722 1033.54 mo
687.085 1033.54 684.438 1036.14 684.438 1039.76 cv
684.438 1043.37 687.085 1045.97 690.722 1045.97 cv
694.341 1045.97 696.987 1043.37 696.987 1039.76 cv
696.987 1036.14 694.341 1033.54 690.722 1033.54 cv
cp
f
708.778 1042.42 mo
706.509 1033.74 li
704.511 1033.74 li
702.224 1042.42 li
700.116 1033.74 li
697.255 1033.74 li
700.692 1045.75 li
703.411 1045.75 li
705.501 1037.51 li
707.606 1045.75 li
710.325 1045.75 li
713.747 1033.74 li
710.884 1033.74 li
708.778 1042.42 li
cp
f
717.415 1033.74 mo
714.841 1033.74 li
714.841 1045.75 li
722.493 1045.75 li
722.493 1043.5 li
717.415 1043.5 li
717.415 1033.74 li
cp
f
724.218 1045.75 mo
732.718 1045.75 li
732.718 1043.5 li
726.774 1043.5 li
726.774 1040.76 li
732.591 1040.76 li
732.591 1038.51 li
726.774 1038.51 li
726.774 1035.99 li
732.718 1035.99 li
732.718 1033.74 li
724.218 1033.74 li
724.218 1045.75 li
cp
f
739.448 1043.5 mo
737.269 1043.5 li
737.269 1035.99 li
739.466 1035.99 li
741.915 1035.99 743.21 1037.63 743.21 1039.74 cv
743.21 1041.79 741.823 1043.5 739.448 1043.5 cv
cp
739.448 1033.74 mo
734.712 1033.74 li
734.712 1045.75 li
739.466 1045.75 li
743.21 1045.75 745.821 1043.37 745.821 1039.74 cv
745.821 1036.14 743.21 1033.74 739.448 1033.74 cv
cp
f
752.839 1041.34 mo
756.009 1041.34 li
756.009 1042.78 li
755.522 1043.23 754.532 1043.7 753.47 1043.7 cv
751.272 1043.7 749.688 1042.02 749.688 1039.76 cv
749.688 1037.49 751.272 1035.81 753.47 1035.81 cv
754.729 1035.81 755.757 1036.53 756.313 1037.38 cv
758.421 1036.23 li
757.521 1034.8 755.954 1033.54 753.47 1033.54 cv
749.94 1033.54 747.06 1035.96 747.06 1039.76 cv
747.06 1043.54 749.94 1045.97 753.47 1045.97 cv
755.63 1045.97 757.341 1045.09 758.565 1043.72 cv
758.565 1039.11 li
752.839 1039.11 li
752.839 1041.34 li
cp
f
769.095 1035.99 mo
769.095 1033.74 li
760.597 1033.74 li
760.597 1045.75 li
769.095 1045.75 li
769.095 1043.5 li
763.153 1043.5 li
763.153 1040.76 li
768.968 1040.76 li
768.968 1038.51 li
763.153 1038.51 li
763.153 1035.99 li
769.095 1035.99 li
cp
f
736.2 897.351 mo
682.39 897.351 li
682.39 892.851 li
736.2 892.851 li
736.2 897.351 li
cp
.0952911 .0952911 .0952911 rgb
f
743.144 949.83 mo
682.39 949.83 li
682.39 945.33 li
743.144 945.33 li
743.144 949.83 li
cp
f
736.2 923.591 mo
693.339 923.591 li
693.339 919.091 li
736.2 919.091 li
736.2 923.591 li
cp
f
726.188 913.662 mo
703.353 913.662 li
703.353 909.162 li
726.188 909.162 li
726.188 913.662 li
cp
f
736.2 933.519 mo
693.339 933.519 li
693.339 929.019 li
736.2 929.019 li
736.2 933.519 li
cp
f
736.2 969.25 mo
736.2 964.75 li
738.525 964.75 740.71 963.844 742.354 962.202 cv
743.996 960.558 744.901 958.374 744.901 956.048 cv
744.901 953.725 743.996 951.541 742.354 949.897 cv
740.71 948.252 738.525 947.347 736.2 947.347 cv
733.95 947.347 li
733.95 862.511 li
736.2 862.511 li
739.726 862.511 743.041 863.885 745.535 866.379 cv
748.028 868.87 749.401 872.185 749.401 875.712 cv
744.901 875.712 li
744.901 873.387 743.997 871.203 742.354 869.562 cv
741.254 868.462 739.913 867.693 738.45 867.303 cv
738.45 943.037 li
741.122 943.493 743.582 944.76 745.536 946.716 cv
748.028 949.208 749.401 952.523 749.401 956.048 cv
749.401 959.575 748.028 962.89 745.535 965.383 cv
743.042 967.876 739.727 969.25 736.2 969.25 cv
cp
f
749.401 956.048 mo
744.901 956.048 li
744.901 875.712 li
749.401 875.712 li
749.401 956.048 li
cp
f
673.688 977.919 mo
669.188 977.919 li
669.188 886.664 li
669.188 883.137 670.562 879.822 673.055 877.329 cv
675.548 874.835 678.863 873.462 682.39 873.462 cv
736.2 873.462 li
736.2 877.962 li
682.39 877.962 li
680.064 877.962 677.88 878.868 676.236 880.51 cv
674.594 882.154 673.688 884.338 673.688 886.664 cv
673.688 977.919 li
cp
f
684.64 966.968 mo
680.14 966.968 li
680.14 875.712 li
684.64 875.712 li
684.64 966.968 li
cp
f
682.385 991.121 mo
678.863 991.121 675.55 989.747 673.054 987.252 cv
670.559 984.755 669.185 981.442 669.185 977.92 cv
669.185 976.214 669.509 974.542 670.147 972.952 cv
670.829 971.295 671.804 969.831 673.053 968.581 cv
675.556 966.089 678.868 964.72 682.385 964.72 cv
758.104 964.72 li
758.104 969.22 li
682.385 969.22 li
680.066 969.22 677.881 970.125 676.231 971.765 cv
675.409 972.588 674.764 973.559 674.316 974.646 cv
673.905 975.669 673.685 976.807 673.685 977.92 cv
673.685 980.24 674.591 982.424 676.236 984.07 cv
677.881 985.714 680.065 986.621 682.385 986.621 cv
682.385 991.121 li
cp
f
760.354 991.121 mo
695.085 991.121 li
695.085 986.621 li
755.854 986.621 li
755.854 883.44 li
747.155 883.44 li
747.155 878.94 li
760.354 878.94 li
760.354 991.121 li
cp
f
688.724 995.01 mo
692.839 996.531 li
692.839 980.169 li
684.64 980.169 li
684.64 996.526 li
688.724 995.01 li
cp
680.14 1003 mo
680.14 975.669 li
697.339 975.669 li
697.339 1002.99 li
688.728 999.809 li
680.14 1003 li
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 16.0.0
%%For: (Max) ()
%%Title: (vector_418.eps)
%%CreationDate: 10/24/2015 1:04 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb"-6l],;nE@(HgJDR"!(m&?!jdilOR5tQT<#)Gr*r$pMp=KViTL#n5RH&1j_.MFlkNPdD[3BY[?)6P!?"RoGq13();>ZfKaLJ<R
%q'UZ4s6cAcT>,[KX8@,@mn[k"gMVJ';U79N[;8(ip;8!Mae/L?2a;fjp%&9(F)?b(VqX-'M,Vji9S98!mV2)KpVjaGhgG7rm>%=I
%J+r7$f3^bTqr6H/YCClinEZEZDuT=hYO"2$DuQB\?[VD3?Z5AIGkpWsm@:dQDkB2+q;V(r]D#[Hr,B""DA8D_Gk0a@D.hN*n2'2)
%ZTnK<7)+!FiIa:b>oSS!aj:"Rrd7A&o(/W+q"a5_^%qNBqj/D]]R0N?IuHb`rd<=oJ+<B9QhlDAb[/^]5I+YQ]QjCuQf!2\62/#P
%Nj9`kr:gJ_ps1mKr=pSbo;pbcPk`r0UMn^AgU#4%d"J=755kjQkF6KjFe><)lilg>Fhk`Ie7QJ@IR<np#*Ab=%uD)"S(D"rou5)b
%YM"aoH5ln&%rm]=4V&sKg='n]^R8rRq+5JSO#T2notS.brNAH!q/<HDIfB2WpYF[&&&3A\s&gGsfP(3'J+<,K^3KVUDr8;)@*Oob
%Rqh`5I/!I&0C8Jo!`*19A65AZMZ<MbJ+N70Y?l^_;>KX<Dp[o:]bt&Pm]XA#nh4>KqDC`FnsfRM=0LN\c+F"l8,\:(luk0_^Y*M,
%l*b"F\(2Oie&P2:k,HhhZFC+A&D-@6O.Y+@qs3upIeDjj:GWo/H6`.0rp9TQc]95`1MZ+q^;]J!rLNK1+4acs_hZi^j69MAm,9Tn
%K6t6/b?s2YO)I74GkWM1iG3hS[pf6d7f4(kIc\=-^@6>iM/U-!GG3s$^NsN?]QoDCs6p8CV;I9YIeL`>p<,[Is6cA[rqu.:hu3$L
%5J$aih*8Wfq&ceII<bMCqXsHL^]):RARBn6o-7#CS%j7Kns*Lu^9;$a?bZ@$a8a-_m60@A^<pld>^j*\Iu43?c1s7J9gKa8OS&)1
%^V'R*h,gK^0?MDHTATS&bP,@lRu@=5MjJ?h^;&V[f!YP;c+hnL?<WO5=$L6QlEW<i^9U5f8Nc.g/UkkDVdFkQ>J9t(:Sq#s^]")r
%F`i+\p@&]DRnNb?f3eO;].`#grT1WK=gEMUQ;@86p%u4JrDo!TrgU+kl/lp@^&-f&#T_j<3]d*8#G(JTjsKEP:Yig8q="(;%kk]m
%im"[`^\mAhhRr^7ofr!DFedi5m^F*'YLr-4]&WHblXh62naG^+0o-l8Iq-Xi2b`PpHH\&Ap#Us1s((EV+5ah\s5s!h0c/6N^O5Y(
%f%Z[$I.QL<l_D5OIJFV:[$tG#e'"p;`fX&p,EM0!cYS.l0*"64a_tN)k0<kZo+?KGroN<]D!h&_c&_;-pr6M0T7:]Z5(9q?0&PH6
%rkfiU_[h6)lg15:@dDd'0.HA#(&sH?b\>*nUMjuXr&"#Ham=Y+o-^0d^V=$*Ml/2C+*IESS:)%ugWaRq:>:Lr@(H4%GJD#nf>$YM
%J)@m(hY/[`/rO?A%:/L:n%SSpk/B8dIm@?\?gL*:3og8>i=GKkT4FS<^H!*ZWdW)JZA71Uk@`F[o'aeHp:9pIn+20[?J+EQ+1pN2
%IOZ<9?9X3q'/-P=$ifKfomcXKr9OC^n-Al:k?f/Ks&IDDaQqdlOS:NQ?+DU!jfpquA<1[&C2LB1;.mSC&,(:M:Mjmh/ll1lHg>OW
%]6<'Qg1,L+i=GY,?FK4thY4S<mJ$L9rGd>P>;m@sfA?A\8"]a_5P,cjEGQk&PE]MDcKJbu]5^%V`oD<4Rl+'2p=s_]I?&S3n)k'B
%GN,B9ht9eA%A0__>nR*DgUm%*pt=9>hIa)Ah^1R3p:9AL_*0O=o;I^UnS*@0:$bY4q4k@HUUB*V[5%P>nRErZGd>YjIIu^=554c]
%Zd6#)i5]$gKsg0'AtOt,%tF)CfEYn6fnU+-n78.]qqr[pF)R[4qb6lh$U8`^G5GCfTjJlK5;ijupk+?4++'FQVu*B:DB=Mh-d!Ou
%d2q`En*f]-rOD=jqgH)[pVfUB]&2qImN1c#+7ARcmdB5n\EeA9?+[.]`C>3cgZHtlf!1QfYYLb?\_T<Wc"\8jB:@S"Z6A_S*qS4m
%`#Q[L`bn/>g-Eb<@(-'a+0?\-qRm?6B`kBiYd0s3"0C-/97>RfgtSOnlkRr>PFoJ[\R1taom*f+NureAnBm&KL=q?Ap1@eun#8HQ
%mloB?Qu1L2W&@;mM5a;%htK$]7bqo>R;5c#H*[F!YdlZ/c='`hb\bT%hgL1Xej!o1>AMLnl\8\p50bMp]ZL#G=Pkt$UMbK;Xj?F;
%mp9*<52!0ceuR>IGILm"f%YE"lOVSDO7uF.7Zrae@O%X:F$,pXq)<bOdsV)gWD?gp42/AiH!.J!c!\/XB!CE8bZF$!P"a&q4nUYk
%h<m6?0o`8g0X`^IVmRG_GP1Ks283pLhrC%Ch2S2a`jUkC9]LJ[C/`#.Wf)l#A0^r)NTS?F>\smfVD_eKqRkS'+)OQAH,&04HMo5i
%H1VX?eJ!)MdlfoRn"1pkp7>(R:/AKMCf3CK'R6o,s+Fqm;oi/=dAEjJ#(N<=*Zf/d4kc9M['k<$O#FltXUQ?'^p9r!:ZX'XF_'t9
%1OM?rZfZV]Wa_SJXt3a\Cte^]19B/=NNon0f9sl_!nNfTSYWZ*Ej^1s/pppAqR?M#9nW8*9?h1]H2`)tgg>e#NOGADEQtF:?"6J3
%Z&dXV+*iL4e*GeprGN(XR67hmc/b;A"='NIVr.Fk1>J&G>!!5&(9W#&?`7(GKq;M>ETYnlD%_iWh1(ctFl.&)`PI>a]$4YH3&F)h
%?NFS5^5=MSI;c\nC\H?DoG#(?[J3ET`YPaTquW@U;uEo/D%=8!]PV7DS5%W(FOkXm=TA*^gQu9]rqtn[/i&%uVX(.uB9**]r6b1E
%U@tX]rO?6EJUHP,QY>5VR^IR3Z=^n$1f_ughs4(YpU'pZ.?\0%hIJ922;G`?fP*J`g.`ORV$G^FPIAk6X/OA\g1UT%=N]s2P,+<P
%[<*fD=&&TTSs7\kB]7-N1o#6fSUFUQY6qGh@drGPcN@Z;IEH^/Y%RS>0KYur&W%"D`d[.7j3RJq[V,NPUTAobOO]E3=S07,A(fDg
%D<X.9cnBk6(jquZVK$:Ecs.EI6Q^r&TUtAs'KSEuC*oL?(NaFNF)9pglu[(3bVXZ#6X#M0.HZ[rRhtJ>bl1#NVOGNkB(F'SH!'Ko
%*1Z"@:A70`99M0t>*/;n>EH'/EC%H^'FRei8[0[P=aHb.N-4]J(7]2#=E0$q8>@cGdk2NFkU*FC4'F61ZsR.d^;K+?<h=Ft>SpY]
%T:![(1s(4#=.e<N5(hH#^5dO-H/IH4oJq6d;gRMM%qb:JUDNC%rFiMls-CBPPBul_nD8i!q?"qlqt0)P\?':XZ"MUrhRgsZ4aOSE
%N/irnNoE3<I;EN8dECh<USg?,f7!>dAB/tf_Za#3>OP(cJ%*/'pV(rY1[I6E0!idulBl5ISiZ-5:\9nJkn?3[&UaGbVkTfhpX?OJ
%cqd/-WLoo_riNnlhMTu'o.g+-kn>D<R@9Y2R$Zj]@ulrt9<6[)IbVQnY.aO\1KFDID,&.@r9&Rq'gH9TStdTKNOat%YUb1(+eJ"C
%)f`"s0\2m11sRetNZaUo\[?7!FBsn]2&Mp2@H0qQWSP/WN[*`o@7"_ra`,anNK7Q/U0EC90Ed+!;]k-0,4oD/bcoQ:Gol52gs`YK
%Zl^3g#1s;&Xb;2I6@!S'-pRXGVl^Y&B^Q_,l&<`3lWB'jV;EKNij"f]D\HumG5,,.Q?0EehWb4A<O6JCXUu2F$B"3DN!tZX?teV]
%_3&Uue3$!Z4@JbWHLTef&V6,5Tot"88_k49H,5$Q*C;+(qjh/Z>0?SfomL1qhcG<'^:Lg9]3PH__d3?1\D8r-A,q%:ZI>j6rdM`G
%q-D9h-i4#fH1'X=lBf8h1XePPbd8J`%aUZ5oPZ]F^YPl<EH\A,RJDM?^!*QR)Hsn>;/nSXcX$29Hb8:rRcj?^p4'9nX<JnIlF?ip
%VYH(UF)P"T4&>?=jRO4q4<g)8.q8<:5Yur/J:Nd*Vc35N+Tb+e'uPtYju=QQT*c_=:*\L?8@AiKW787gp[#N4Nc+$Gk+4aWFngtE
%rk@u;s5Z;rT?eb#^MR".RiTI[8[;Pb+cBnf#W'TpUs1F6Y0)lm_FR\aicq'bW8*`1"euaom6%TC]]*FFHZjR=GC9%hn%[u;*hTGj
%BQrcO1EEUPmqioSYX.ei_o-/h%A*j&"O7)hD&[^QCtu+ngAeFa07&&9\a9_+pX2#dHJUcX5%[Mgf[#%DAGC<n>Bhc_e_g75^Hq0m
%`q$$WrVMW-n];A)SqjR5n=h1;KO,@?3PmEV^`4Mb]+opC=<SN09M[)KUCW+;b0WB#q+8g%BBJl2IZOu3#AQp+I:3U&).dE]#s>0]
%K>eo-qeh<V5'PTLb2^D8IY<$ZC2I>gCqY+&lOL-*^aaGV/*qkAk_@>]i1mDY&%6f?fdc^cb^Ea&ct8DG\,/;Y\JoJ,M=s=^l]HqQ
%$ZDA&XXUe=pecocBA5=?[1uKHW>AsHD+[">h0s@:"eOC$p'`W:8kPp%O\mAk`r9\[q<cLjIbqDRJl3R?NT*I+0lk*1G&#`,7;KZu
%M8/LmT:[+jo61\uI`mi?G76-RbM_B(%"s&P0\CmRcK<?[oN/c%+7t'ZWn4V52/1*]9P@=af9FK:Oc$>jC\&3(Hn#Npqd&E8Mg+Z7
%s7GHkli3\W$I"j[p[?QMs5DBFp*&A^SdVGVr0?c;7Yo5_QqJgVAJ"8BT=adT+1pNbIpVojc2W-7/\Y#Ur5VC(HqQ!X4P&pq,L/Mc
%JNQ'l]XWF):Y5Nb8_5N\Z`WcfnH`j,EH7#'dtk7`EK$CQfXZo;o6jg+5>#,#`ltf0nn=)VD$94VTD(7IT1ggQ;i0=bd61N^L[?7S
%MmYck;`T'183B#I0].8)Oj$N%A@K89VSK(.KR5M^?C8S%oXL=b<TMSX+"%#K'.,(>s1<U%+%<gJ(;G+>^WCEnIS>,R-GCQ8hiEWO
%3[QKIH>d"_#Nc^bCfrI0/a\Q]r02R-*DcU.\DuJOWfG'jWn^X+TR$&,rQW*iL?Hk^De_f(=@5gZm9U?!CX(^KX#E&`>8p+%O*[`(
%rr-9ps#9ceA,q,ZCOQ6Op@J;>l+bs&DZ94h+9(GHoD&oBf$A>$gaXq(o-L1Sh='JZ0&lP3IrW3BVkr!<TUtYZ5J;FDiPh9fW8W7%
%rms(njgB%+o`![Y0>P9Zc17:f-9o+lq<FTSn]4Prg!<fRra0Was+PsRS,]C)FHmYgmD%5]mFL&#1U`CNXdDJ3oa`"[.a#qON/V+E
%L%t]I,u6&YG-gFTe*HD.M</RUWOW?ph>Xl4FT[1haUA1s*X-pi$?E\&`UiB)9qsX<oB9S>f_k=#[\c&Z?nKn!"I@h*OdcTI[\m=K
%aSf_H>AI?QHJNL4g?^lLY.b^a?,,d;m5LfqDKQB&SOn%pGX+;%qDCRVF.4:"4,ebgn\(08Skn)h28:U)l2\8^TTq.G."+]ao'plT
%F^;[]408*ZP)0/UDbn%_lN1j[RB;U,^K]H2B.F;*aVJR`Z?=sHI[^^!kP.g1s-@RtEQ,P\`H=s;Z.(3oA$;8qme`*a[.&'M_j*s=
%k(01D.I4KE]-L,&2ME+5j]h&XK_g;RE6uo)R,\rJ5kLo;:&NS2\GA44[5P:m1Q>m]!1&k_o<>S:]1%@f]"/S<jaPt/V2-pO)cEQ[
%dPbu;EFZ6&gGHO5R^UsMXGnnfp5sMj>-]2u(#q`d!AQZP:YnVhJY1m6>U,r$iHS[bLW"87Ka4((@:uBX]-6pk]3:guP&4P&WVNul
%O%s];hVTRY_=rsK[HYQJ^kldFM'.o5Z6$/d2F)'ih6sst2Mj"DK9F=mf[B/c.7TBC#^\K&E#HPG4du<j]sHCN`R>=(2h%uSA9[@:
%&<A;\cXl9j9j]n<LJJs`p@YX:mUbtl)\9:*]^#%sXTF@(I7d\2.8CklH,FGba6O6/Q@18')h$I+6"2&Io?ddB53a1BBkLINaD>C0
%cDt)dD>EN0%#jto+V]p@B+qH9rhtp!QCDuc^%8J`D#d:G9IMt00Et6Zp-h09=7"NcmFD9MHEi;cTp#\qD`7C`]uKqDdr`Q.Q:]>U
%Z1a^=Xj`leT%4[+]UcaVYRC"<d=p8bR&u%R6%t_8EEb-AX=)3H9TXFsK)OJrPbJf0U`:QiCq-PQCi\Gr>GB>qVdN:Hc>./O8?FK5
%^"[+D*K5@Qd*0#U;AqPqld_Pp\nhP03D@uW;c`3GFK;gTXWR_,%<^S^B;uMQa&Je$4f"Rp;0J@U9F+IrA3Y/mEf.IpC97ajk8XU.
%4_3l24]A0WC(fFueKuV:Gt^hgT=,mLEL\p\GM2#rKjR7jE#n2i3VHA7ik8Kef`I@!FLQC%2sV4\l>V6dV#0hf&S_F'<0XAdNYQ=s
%/(mP&>G%B;i7)*-j5`"q.>FS7Yb7D7lR8A2(P:Rmg=@c-[ddpt(1eIb7]-7Z\%HTa0:,C+Q&8Wa-)%5Q!b-Q3gMS;9Z"L-4D?j>u
%KiYLiR.97n=q$=AN<_"dB)(^5.`m.U]:*k`;J)$E[;:P/KB#&^%`&@?CjMY,P6p/'*88,N)rm$?RC"Hrh/F8ZK2r9t[O.B?\lh(\
%X/>i6B!5LRD_`&DI$l!Rq/RA<*I?+6C2"CSZ^KeiQ=^gWRN2J7J9>erd(jh:N:++XYa_*Q[CZ7nYse^EQS""=!S^ndVJ;lJg3SGG
%a,G/Q^naDI>IMYK:t3O'lqionfW_+0#cP">:<_[,!_SFR/4m?t"&BR5#rC,U(MgG=G2"iBA?1]X6A:aJjqhG=oM(B0nI']'h5ibh
%3GV_+'9f.pbsAZ,2(TX]6J-OMZ=XI3=I<GI;\1V0Ta(d_iYpES?[QBMo!DcH1juWFKM;"4(+u'1QmT3i2'Hg:X+/,gZ*3qphmYc=
%X?,r]Dnn#YPkot5F+5<o4Ttka=H^Dlo1\BXX@:$.b8k@,?HE,l=a#<7T+\dD2aH\H*+k2Rk0$KQ3&S#Sc!\15pAQM,1eo6r,uY>,
%TgeQ$@jOa$eeEVTGbGhRD,QBZPD4(_5t@Q]gPFa4<a&-Llt<DH3=I;L'MQN*V]N.)Ep^MW/M6+j)0fD;$=9FJpS*LY6_j1Nj82X`
%/sFlaMKVp,LM#24p1ruhRpp;OPF%S420U*Y@`*#MD+2L7FDERo9X*Q%#R[K/c.C2Y($Cu34O0Fc9cHWMf6R"19L,`&o?^.,C9@-[
%ZcBA:)(K2b%m_mDfA5*ZY&ptV#UVN)\O5V#@_u*]["eW0.MIbtRC^:6*aDY,^>';knan^MrH5C]5mSB'BPXkUFMr@TlWn#EFHY.6
%]iMBmDF:cuVf@=+-FDsm0if@4b\(]MpR]0'\A@$R4%^f#TjpfD<guG<s2B8lp7ZKj:DBdrApt.&9$*GFA[l?&);Cq`M@9gt45S8s
%B/&O8cnH,,OLV6,Ed?5MRl(S?VcMN2"OP,"'df<\3"IN7ht25tk)uSC(Q'4QFtuISGp`\XTaa4E'5$;V9?l-dBX;F_KmL&Rr$fYj
%+46rNCGmY/TY&nTjsmkN1IImG)5C@RZD0E\g=_c[*2)".\ZmdHN.IS9b$UXANsTTW%:4DZZ4%UAHT"l+]rN<LeHQ&0AqKH[7PmDb
%OgiW*Qrk\8(IPEr(1lf>'uu%)PQ4aoTBCBdofXBUV9J,!k('nbn1sAld+-KAC.pEDG>mpCF&o%,\N<i=pR'2dP5gScr6UlZjm=2P
%"O0:a(^'qV<(9-G5?mLu7$lZY'5jkG1'K[J&E#UXi_V=0CRS.t]#-dfCPk=4iBZ*.Vo<]_Cio#Z"^]X9DPUR0',@Z&oOuq5Ct!SM
%cu*0lKA=_.BYYe42F0uLZ&g0<5rZM'?+e$;`0(fZZQduP6TZPL8mq"RPj:8u97T@%IV3[+H=/0hUS(P5A.En>-8"2ld9hG)joU>5
%kgUDb^3*cHC14U]r/U7j3X)rG"a-/;GUTh]A-eYb:c<K^R1hI4)W9He6UmH"Lrl<_ruq6/PJ4h?f*KR^7:G<-"L8ob#QmFSlZSY>
%fou_N3Da],0]W?;buaZIF49OGg?ZB\)Apn]hLf4F&S6PLX!2oW`mT"Gom2%R0l<INc&_$=*JR,V(edDTb+@&dj5C<;fB!&*Yj%=&
%8(JRnOc9\ee(,<3T+C'f$qgn5\qDPgp9_4`H\;d%Y[Za^R5=/SCmq\!;ep>g(A3Q5mhO**dpQ!b=Fo3h:8;AiisT?*pI1k=#a\rG
%@r,_r1."FQ9ZTZ6,LrZ(YpPhU$["mOU!XA&%]pAl%$)#E$ER0>\`@&:2T!qsbE`mj0I[6k8aB,543=!fh3BAkk__"UCn7Hb&^qDZ
%=%sUJ-IAcOjUp9Z&0)pr_Oa-176Xk[iD*sHi'OqR^XMbtnfcWMW`a&^dbA.D%3AhE9TFj?7^QiW?g\MRZ/Zt:'Xeq9,5FFSGLP8F
%OFE?#S&,YS`<I.Nl!s+kiI.*Ufp5.JPu?#6qbg>As1eb/4+g2:_$JY+Y?5m&[0]e`)pA138EC8q/;O+pX+t)U"pRfNk&H&::@U]-
%GH;n9")'>Yb]o5F(E8<p!-om4(9\6gL4ab3292`Hp7YDF'Y'=-Bu53N`+_rR_bnVpb(q3L@H<T<D5R'qTmj-SHI[V:nNchM.ZhH5
%CUkj6Q;)GMK].go_mOSbBGaikH4:f;OQ9AH6<:a>>59"foM^1+U_rWG8iXfZWYbo(^e`CQ\Y!b3^BJBuZp'M6fuN8M\<ag"JOP8!
%39GPDFL"VW7Bf?oSVr=,*K:^fPTL<,F3/7>X`+X_!oGMDBP(K&W7CDTN18nrX+KU3,K?0\:/!.19n@cb&5Ap.esh?DE%W!'RHl4@
%7"<q8K=2=YTgGJu/RAQ,+XMB7P2u;>1MJ"!gu)<+>',l7)?bs1mYMbd,rW!fEN?_L,qH*K$rD/c"bH?*BnF;6XZ^&sY@sEf'c%b.
%+;#qf<&$6>*e`*XRAF1<QWFc<PE(<@hg&>!M8Sgjl]Ua?&Keq2>\DWm8^*87&'P<.0d<!-c^eja8N8A(>Y<ggg1$d+$'3j9Pqt*A
%?]6ZfGQA>IFe9Rq\>_2u:f%rO8:\MMi)lGi'`_EF>M0%q:od5tN^07.3?j/^W+T#\P=trBo/P2.Fq`=MSo/4]X[g<r'&FWurESY+
%E\[n%1,"4qApglPb+.s&Lr*1.Ao1MmT`NOB:n6*g$nJPL3C+n$N&Vg[]%.(EWu]SL1Y=/$L_M1Nh?b8Zq=e<mEt3p@?:A+>Fp,l\
%Dbs6i.L\("D*U=Q+<_7N?"*N4gD#U;9kHhK4^XK6_;rFcVM!%jJ`392b?7IY?A:0^N,*a`'Ch1omBUF4Qs"=`\m\)W%+<(Z#l,@-
%cI8=B$4r@X6,PaqcJ&ro5Um5G,VK:9bQML\K`Xa".7g@^2-T!b);uXL+@jWIN$*3USP=J#=X%1)BaZ;0DB@ucS#55uUu]oUG1Z/g
%cY%`kCM-Nn,^]iKPM_K^K7LKN#V\-fBlZ(hR_h0+`@!]%Af,#;_L,&`:;LjI2T&3>A4c%J6\j[[L.>OBYdrQ5,(JJHc3>J1LB&bC
%_b;r>'gaKHlW)EI<f.#(g]LGVo/Z/R4QGL(-MR$,>Y\qZ!.hNEQ%q)gBnCIX"O4O2K6aT=#TH&50M[U)#g8*XX3`68nB[cTAs$)p
%dgutflIl92&-Ajd'/45p5sp*5.jH'IdCG]Gkso%aeq49B`pmpP:IQ&Acblr'^tQ<?0FRB3%,`j]:h]AQ[t'Ul,?AE:Rl-9:la\N-
%QJiO`PD3:6bsi/K=B!ma^E(2ENG>.EUgo3N(eg)I8VI7+YbqQfa(^p$8E"S(_:;%R%ZUo/,WeAV9QM6CQTVTm@c3OI6@d6U'lCH,
%*)9G>b()qS%^mHHls'#QV\S#,b*@ec;[^#6GPQ9<XQc$tNaN!]%?hIq0eI",igZ0#W]/NedNE/1fu/gOo3tC'5f^-`E*!6.+Z\tJ
%&-sA=/fc9cFb@Of\qWV++6QJ9dOi5r$16"9*LmCY8GA6\DfuY._YbKK?R)n[BTPq1">V[P-<%a[.X@P.pVCNoc<(>qDM(tl<lumJ
%C<AAYQ7YF5*nD,QI>rr2,='DA*$r]KK5%ZQgjkTD!/4as;mu3I%fqCcL5CoUD<o=k('MjM)g:r7>d/F*48,MsPH6_Ho;))DAdS#p
%]:[+IC\L]8cJ)a$5am(g!VD_FQ\2kpNbgrU3&lso#3%dJNK=t;J>uU](c-]`]"jop=0C*V][[`l<YX1CXm?KljUfLF(`=UNjZ'>C
%29<MZV*gi6J\QpbpkjqqC(:QG*.(4Efq;c(%V#o=)/)R$f)7Rb.n88U88&'Zj8:=foUn'\eH<>.Oc1uH"&t,9-P,+iVCA5I9E>.h
%n_K1u+p0/%Ra=Ta)UE7b^;D+!N=iHA(f6[88=RpkCBiDl`cD!h2dqirEZC>Z+h#*n@VZ9",0TRkGmUb<6bCudCkJ:6libc,S>LEM
%.96`%hN0V@fi&h6B@kfP6Z$)k3K+%hSG;>GUZ##lXAg$;&9*.eE5\u9/K+`-SZ0G[Q63(TIS+]X7k=f%!7-KML]Fs7[%=;Vj\^QK
%*&96Ha5`TT!?_nR/amC/K/Q7*SL,"(*,Q%=Oo3`-4X!qi(8OY&Ap7na<)/L4<RPAP`*@98[X%qQ`2td,Zmu^:f_"Yj)<Dm.&iDAH
%0Y&974B@CJ1W=OnDH#0o?5+2+A--Sl@B1pZ#).n#0!m_MBe'kXSM.H$q?=\tS]5dmO`a,GJ4'AS!(Snp79g+b4lm&qQlZnA35qhX
%*?StCW`0Y$Q9>]oG:!6=m(lT>KG9&4mUX-8U>(:__:)F@iPu:CnY'cP+hLp$-+[e7fjPA(R`[KrZnGER.985\6KIc)!6_cj@+Oq'
%)V7-eT-k24?\E?Vf3s\R44M(^pmb'-EP'b#9T=m1?^SkB`0CJ.$*$,,FdVu*o\Tia3CpBi:4bu9W5@hnFVqtEZ2j^VQ3V1n"fA.E
%1:RIjPkYBq%rGS4928"N'a-b**5a&AH;NfV//<q2G3`sdN!Qu>AiW4?cr^VUdQ2feCa#;YC8C_p$f"*=[T$qNEZOGGbGNcIb^4FD
%I)Knd,S'F1FVSp&YtEZEbGenS9G'42-*W!k9-eeF]+V43PVpFs/3$j92(?>2?-<3OKhIYijK["R$;_r]UX2C0+YdW-6=e"n=gJiR
%bZd0cDKMa`Q.O#DWB,oB#MbNe_'5h;HSnB?F@`Z!66K(KI4aHTi*#&q]^/Y:1uZ2\N?932'o>0`@9)".OiX)g1]=s\Anp"p\T?iA
%be2sIq8i&N=>nQVqHNrGJ_pO8fu]eiD)N2^a2Q.+OQ=a$2KHIuaM81-MaQb5^<Bt-9LIkW@6].MUs+/QNi-?>0_$hcT+UgMFW5qo
%/5j4b_hh20]9S`7<+2t>GZ6;a&[?o#<Fi2X[p%'lbNa0$`f,Z'9.\Yi>i7*K%<0XOB5?f?:KGG/lQnSp(&Td0@lCt\O9?+Kh%1HP
%$H=O18-g0;:A@pXZ3`#n,/>nWOkYJY=JcX[%l#GFS&)>E6ZGX(]>9a8UI,'bH$^s_ZP;^4^E^`/FGD'8Rt`cY*]Y7=&[[cchua#9
%)[Kif;ZKOD+=Gt2<tUB&/0jsj&YDE9ZP:B9cqX/NCeCRY><o^CIV)[rSgFH33%0!io!bLK*0;[@`"eXq)UcS6H?a:''*neXJo(!C
%Lp3kV:f=4IXq3L(%0Kt?'R0V1K:>cia(Y[p3O1GdfG6&0Xb46*)K(G0qbp6VOjTnN"ZTah?7CDqNqAdc=\f=QC#e,*mh817CiV+J
%F2nj..mEQ(IqlN`Gi-flAF9jc<XdZo$V1T)DA'KZ:4YMu:&e)%&\nP1jBe5rR`l<Q9G.gOL%NrAXlQPna?0eU/Gr7c$NXA)F&>l>
%dl)9OfXm*M".)#h7K:O7*AA'U@5HEj&*l?f2'p<6ctQFFjETnVO[I@;Xe!gjI]]/kr9dubb]>C^h(;"Xs09cr8C87SM/@9SQp`R0
%FWb)!Sq<4;l^`2E1<,9(%g32UEA1ZGn?]Y6fZ4('!@ODo%3R=*&@`S%oX8Hc5gCBaIjF'A6jLX?H:#)n'K-8:G0G1RB8:.:;4U_M
%@HQSMfR3!AU(\ZG\_CNiFhp80Ob3XG2dr?%ODS8GXB(!j,Ld0'%\a2eC;>UH\-+1l^YVd&#S%?XM809QXO,X?8T=KV?pB4bZ3#f.
%EdT_I;Z]7*!1&0WKOCl)7R1H)O><Dn#YYBTp2hAK(9`+92Ku,#o/A[lj<jps&cnW][59ho@h7Nnn:%LNI0FF9U6%o=1=Ncmq<,OO
%\)eAmg'NC4!+km^$NOgC;_[?ZST.DNj"[5iG=;N$SIWM'HU?'_b?jlEc$+cI6/R^PC`ftJ(rrE#1DF;3;m?hA2*I),HOLSQR3<B>
%FHK?G[MVlg.X6e#YpLInmDAMOeoZBi+UfCt(]]>!`L&Sl6Z%-9aACFLJULdYnTq>B\f4>iV.Q-i"?qh@J]K>aJ/(g:d8rm3j7Q\h
%mPIWgTINCp#j+q@59^HS<<`Q,bu:bb-DH5j7+jMEW=/0b]cmVcJG&_<A0^:Qmg^@h3NrND"+a.c_W2QJ0DH]DoI_<K$=s9n,r'?M
%DPs/m_CMLgY-k;O#C!?WJF(X=<@L.%LA+E)>n=R9CRiJ)Aj1K\=Ch43?&dXbYQNU'aF$7qb82dJbp*62R>FGPmSfro5Pb]%`Q>^j
%a#AMEM\#:6]`$C*O7)K*?G63tbFcQH^g2D]f9eR7Qf\EJ(s0rN^'q8#$4tD3lLIUt+TuCu*#6At$X1Ik*"a/%6dJT7q`Tb0V.B1\
%+6M18'I<2O8@1+]catrf$I<a=#a+O^8DN:YKnVOIRiM:GEU@eY4:ATulK]TgPKSfW.=*C]]U5k2WQXc<K:OJ)"?7Y[LFkLj$;J%P
%?5&>$K&dPQ_k3L1Bj$.W3$1apmaIp>,cNg.''cOZm\tGHB\_SBC"+7I8d(6*#@JVLAQcrVK9/KqIut`7K7$qq^1<`82*9!(L6O=Z
%m(sc0^fWT"ah*im*LmA`I%A;_r9R&M;8AndHU#:r.Hp]T[Fj@HcCd&Qn.](RT[?_-O4Z?i(UPf\Z3+F=GsNbg]I\NbgsX1TLq-:^
%/qE5i'oo!$M2-jcA)%Fs!9p?E^*sSF"4kUbT,0"IF!uB:NY*QL]K:4*;AP6Bh8=8ad<(2N0^"q3MF.RJcPWo\bM!MtRp=op*hBFl
%)%F/G%#m&eR=X%C`n@hB8A-u`HJ_t1(/Ms/0Qnbk+,-X`Re4d)UFsU(a*Ln*YoCpi"R1.O/GHb0j*o_E%Gola#m=H;N"H7FXDbHY
%Jr[(Pr8i[mY?[WroUmDf;ZZo'I4g5h;_;:srcK%n>c`uu9IQ/7UBMkG'b&:<am=M`0bDZ$0!Wm&5gkn?DC^TbZ)hiV>k<Qp&X*kT
%*@G"aZoHiX3'*gM+Kk<L+<hfNoaq6b^nYZkj*@`7g>tGuj<ZCnOgO312W`ukblN4B"Luh8))kJu,3;=&[_:F%PbMY++3jj15T.C6
%'L0B>.*FcW`G\f]I>1!E?rb@(!Z9uP,7aWIorKkf*hnpEfVF%Ga=C3V<.u^t]LH1>)To^\`Z@Tc*7d?<7fM5F7p>S7OpaElLf^;M
%gQRTV9H^m=h+&1hE*P6SemYC(mFE9lHjHU^G!F<LUM5*fjs9<a`"$/r`4/5+A(Hp5"k">LO5q^o?)?140Gdm8#%n$!LCW:k7*,BC
%R<P+M8H6Nf0`e%mbi-C8U>n4/kKsgXeT_L8"*u5.;?0FCDEG3Aju]Y[jEG*g.7h*?/-%R93cHitrXcb;.gnk`]58BaYgu[ob/o:H
%eWb&\m/[BLf1'qTDdaP&,8f<P%^UI2o2\A8H);scA3KO_ps+#\b*JfQW.6?6A%`dD%oed&r#m`7"Gte36Dso^c_:m$e*Vrf3JIlV
%5&ifkj(P5l.i%.!T]*C',7k?+_Y)Mk,&[s`iP:s4.ukeoZu5EF>@b^n@3d!S`QBN`2):rn,\cR#8I-V1SpWPE]HSkE@>G5I3&F_c
%iHl?DeY2%,ohtp;)]msi017Y(Q['1lL\Kt`^T]"1^eg%4+XX(2fsU[]GS)e6P7*rlZ,TgBZA&GC&X%qIGUC6t#`G#OA`>F:K$?"=
%ci]IYA+a4B+FV1YV/n4-!K7F/d%'%2>,aWG,#@bLEhFYiY[]8m!pq4Aa4CClNYk&))0Z8"<4)(F,J5@B^E9mELa!Em=O.U>&p'Sc
%3aKCFi@]jm;O1ZWnKSG?&+9q2C4O9%Sg[V/?:k:D^a(6R!\e=XS_Pj8lVZ]8#PrHTU]-4V%J4*&&.`b2/C3!\*bZ"=n5DeqHQmsG
%$-n-1*(G0]:-jI4hb=4cjZ&=KZ/[rjX5`[_0N3(\NP$9I(o2b>qII`gqA9D,K?8kLR%3"CW-S<L.u020#9p,L'7dSk8#I(t0Bm("
%*1V8LNR8tO<$D`M387GBa_Z*n=1&B->,9#u*!2@20FO23IE-PddBN2#oBd),Dd5IojT4-,Gfh2R"_R6F.KXN^b5bo_6Mmh)&#+.W
%Ps'gG5u:BBCFBHN]gr4/&^9<*-'VOf^jog)csrX/+\V<*1_se;+lP<rd^X-gR_`O*3(iqFj$$;,+R]ctIM1q4\I(#MTU?QZkR/NQ
%b/WL]p,cdtVXK,<<Y'4Z)o$\ur?3)7T[HUoUdpOpJVoKXKG$o6=0=g\?&Rs!C/UjS)7a7RVPCJm>T\KcKcs6nfgeRb6>NMs,fnM1
%4::SBa;OVl3`"eN*U.D:"=`sV@q,LLmi(dfBT9^ZK?PPj?Bi*%$ZDb>9HdW$<*#"VSD=m0RteBWL/B\u9cP]ET-JVk'2BBBk3@Ma
%-l=".DBf_s5RHUH,m:$Bi5f%9<"q0DF<%ED$dmX(-H0J?<Q6m?rG)874Ju7i2Qp)"?2Y>*V\%^(a;Jh47c##D@`f^_9Z\ZKR43Td
%0p!#Y9dDu4(8n3"`RT4T$:GjG7j._%<a"OaJM.W/m7r^>MB"SD];/hRg#YXDQ-)OVVts4:880R=mAcX1,m\/qNeON?'FlFC$?UM1
%EWk"Mf^pHso67Y]Mn=*o!XT=O4o=TDo<=mRl1N]@(TTedTEU4@&T'.l(-@-3Yc#Wc$smugUj0nAFn1nEVV`5Op!3.s-Ik?o'b4k_
%o:g`M*g(/Q?FT4+I$albL.?:L0$Hp,6?PYG/5c!_fQEXqd1O>f4..%VEcV)8jg$nWL7d!rXO8'lbuuB%56;9sS\LmYFc(BK<k2dA
%bmf`NZGl#Ze7nGdDsQRG5E\'HC%+sKFN%Yo&?rAH![Mt4=Fi>#X,`?g>20=#rO<l5=mJC;^5>pR^1JBX`hH'n")O'[Kcit"<,lLW
%SHbS.lghQ7V;ub/AHa>"QVfjJ[EdfA)tegt?thloNo6gh;*'(hh6)Z(Tg[h$EF5Eh'R'[rS)\c"?Kr;$;4J_I!YhlS@asCCU9\tj
%Q5j;1'pYJTLPRrG\h'Pq6GQHj4];Oca*3\<Zd*'R!Hj7LlU(A'0^5XP',FEW!mhCHV""_o7+Q$mQr8)_VQAd_8AQnLNJoYE6Q2uU
%V#"[T;0@Q\7XY2\q#Si2O;#r*6,6T$nl:HsY4BGNOf)ZFX'B.LJ0XAR7qZnM;tba_HFol0Y9'&()t!U>f<A5f8n2>o]D]0RR%o%s
%,UI-260H22<g]r3SgYN@I5!gr3'?SqMQ^'Og$+-1Bq?n+KM[GqE`7d<33UpJY_N:WKJa4jBgakP.Z5W1";Ndm_5$\YAH*m!"]3W=
%DE)+IcD5)?%>/C0IurSPlRfW_2M]X;0ff"AYj"jn+sd"(+\#ScHhF\Rh((W[YglN+@%9NE3]RC3agcX)!Af&hj<!:FoFd;]B(-k#
%+\56Kej^;hq+B^a:k,^R0hccY@[lCN,<_Hg:%tT]66I'5b7Jp\Dd,57*B(MgMeZsg)ItN'KcMc)XbdVg5u'Np3&h7t)R2Nf_u]eV
%PT*2FV0*PTh;O'TbW@T0kD)n79nVa_J-@]QE*^'PRV=fj[!RZj%?Frl$PuMZ[!^G%3$2iaU'WQO6SRfe1m\8Y_%Da+CR+!LSb8ER
%Gu)%;#i*]ERWn)%\L@_G"(8kHgBhE!Ugs.q$@u7e^_$`g_jO"a5,X5,C[q`kD[-G2]T+Op'+-LhEE>61Ls0NlkULRE1`iO"8)1<2
%6f@-M@:^PbP)iU]YQTK#+R'&[N//*FHYQf;mYMog_8nDQL'UsNqIZhNRZ(bu:`N(^):;O8<`?/,pOS%eoFOa$+1$*9WBg2/)A&<]
%7snqMan-3*>j!6/Ee=O@-3aiDj[RQ$nM[P.e#+jO0ah'=OX[L814rmV`uGWp1=lq&-[,aM)0kg9->C6RlTWXI>!fG7Y6=qY`o.*_
%lT@'_Ufb]@8r(I'Kij_1<@JRaH7R@[$<YZNWOfCXI`)Rec3^q_JfYDOn/$1u2MgH7c#CrN5o<?sJLlB/:O$e@)S1sfOJ.=j6!BLl
%l!ibK#>"!>L\(&)R,X#rRAe7k?)B,Vm<p&_>bEHgN@[A')*uK%RL"JZ@e+c$b1o!!dA3]sQ+;NmQS<YOiejJB'=&*9eqSL0Z,bhM
%F=1HUMMhaKB:KX**q[Bt/?>hm\<!Ddq?.WW7qo@n&88W!kso8:FYB-C0aAo$/$,oATQ_t#`U$%TnNEG$-:4"9]cgcg<eJ-tn^j]?
%A!mp@X;Vf[1p0384#j#PEh3ds;[#)aihq3pi(%,O?N'WfV8SX%Q.70,&Tn.bXL0(HZMt\8)4W(S7<4h8*^Z+sE(<![;29<;;QSU;
%IB")[pr_-U+>4JRSr3c8TE7plnG_MDW>$)W%.U</Q#A5S%*=XM$Sk[P%LK7jc2B[Y2&,4>+\9l(7*&e0VtNXBNgKgXcfF5h$hO2;
%('iQ)<usb%54WU?O[d[AVM@CG@4$Zu+6mUUnRA+u0`L[I5Pt9BY?o!AnG;b&ljUYYV[r^KQZ(`0p@.LN?[qe;Q_ZhEZhNq&q<Ie3
%kKT':I.R)^LEAaX4oQJtNh;M),LAOHEhu"?lqIc=3FEns1C)Md@THl?!'So$qmaH$)>g-lDTT*Kbf?r%JQk,J+2]`RALu\J\@-SD
%7=,FbN&eO,lS1ZG,Wp1s@sl>G#3R_Te'p?u*qLYF":UdYaup#j]C=,;);d0QPpdRZ\mr[!6/a6#is(/SVXKB.)!LEfbMkQP_<<5-
%#VdbZ+EbEXKBi4_-&HPoh#^jp7)u\p_=!$?\-<C`n/PLHkd_Zia0hkEm`KTU*H:=$a,&V24JZYNS$018RUb8A74R@La%XG'FKc`0
%$m^gO-94O@,aWmt*2>]a.>#VV&Kd+T1PTDT!E'jA_/U,_kb:#up\bu?0njZigr?i4=Z:rd(jBbBIE$*YODpuk(U5]6Rg&dq&0&Nl
%'C!H'f/Q$tMq3,sp@#t8]FP6NSN2\g.hp$(EI$qWW7bQ8`]EMK_hWZZja<[*ST18LqIiR4W,0*:)+TsXdi"oGDE,6_fo183RpF*o
%@1k'qlWhGX\Bbsj`k?[iqO,I8Hgi89N6R2fW$ZbJV\eZ)BT,eh3eW]+36Alj^(hp5pn#Kj_AMI?pfe0HdgH>L^_kW<m.Ca9n^s*>
%%JjPXC,iE5?ArNPVf<k5#+,gZ7W90M:)F<^\;RmgOs]Y7"hhGm)r/D;-_5pXgr0ZpG2Y&#lA\Jj??<\lX^AUMHmeW.>e%Rm\[Xq2
%N93W$2Q2PYk?uI0bZm7NkRthQRb;)%FlHl5iWu&[Ll3RMFn#i,5iZ9[HtAcsnh//**&e.C3,p[4S:+Yf@W_4Y><G'1)RRKA\fc%8
%;7%`FB`6(V4B2G(N5aa="_$rn(tF>D(d^p!TIWK^!\s@U/&lWeB=M71FIBYa<K)2'O#<TB_"SG(HX\Irn>9Do7)^-62N"''(s=@e
%j9n[:=CU6K"\Wj)@e:+qioUXt(R!e?OMr=k#/pZkBlFc=i;rg5>UYK!a45d8(j407;_SpGq^+5KK<c'!OTC!<o+Md&?cJffL0XgQ
%s3+53R]\I_3Us6\APa$b`fBS1TdFBBnXbB$)"8uH#?pr9k2X<O>eOl$G_n^0f2\t=A-Q`PpMjaj7`qB]iKu)%g^&8-Mj#"8]D/Oi
%GYSec"sYjD/&;(>OLS?]&7>3gM_!)G,=^V'Q9ElV@<4;)0GcKR\lH'>(NK.[.B&&p)fnO)dilt<`^emh7)UMQ!!#SI`1Ydki\2r`
%^ORnK(?-Ie#SLUD#t87Bk/U%r^HY>JRfcoJJJ`STj1dAX2q7D.BfbhrZQ`p$/B+],-8D!i-BUKI"*,_17R_djF)__cZsBe&*$c/)
%)%ahEnSiRDgNePD/-cP;bg\+#iIc4h,h%Ql#3R\Smj)=?/-4X2Y'O\"7f"3+YsC@n=c:-5&IGVDB=_Lc$t@$[[UJd@8Ga-4_[V_p
%'qQIO_oTF,8dMG*&/jqG$s#MY'0!^\BGbn'bg#&`L5o^-`+atrHZ[8]A[mTZ+ZP4=Z@hB_'Z1A[<4Q9PL*?23NHtrhU&9OM(g<bB
%ab=/uOe:17K`NR>r!7%Gd*mM,ke\m0$n*1LM1ku6S1-*tiTg;<>\JhJ[+OYQ'aEs>Bgeql^]Fr+IGkkEM'^;MK2S)>".n']Ku!f4
%aaGKM#&^Tn]Ej55pt=B\'?9c'bEYg^:GLr7RrDDi0t;mV:2*cViDMM@SOaT3Cf;d@8%98@b(W;%ft/eQFq3M;_ubi;GW5NTDKk%N
%7eS'n,m/+>mU7dTD]B'p5%>/4d7_Uo&I;kq<*-V9?n69"ce*kI4jj*l*XpY/lN_Y'VL7Zo3Z+B1]cYJ7gu&%f%Gn&_0!)lk]+FZC
%dU:ulZ&gNbi(A4P65^3k?`Y3)0mHXeiZ\f&,&=d\"XAr7ogK[U3hX'oK!Q[.0+0G=Wp%s*$KaW#+&'LLE7-76E0lSg4Mdu]KC]j8
%_=@K@&feb2$(d"a3;kN*=5gKX.=tE)3m4607Wbm`^J6oCqL7Q3%Um]dUW<bn?0o?jj=]N/PF:dK\:Hq)!.uVsJN#X>R_8t"EabYn
%)AkFJ<f72?n4&dL)-:Q\bZAde4#cY)E*KU!3]Z]L,2uS)jM7^M-.!sJJRO>!^8QT#RVqN8$k,a"cnd[:Y`0Ue`l/<ZO1[TM"h**A
%)%g[rTH@U&,?TMj2&KN-YQCRkBt-Qj_+&Tc@01,:D@CqU,6\ig=ZSNn2s9N88mm<jb.'2.,>*ro<=f36e[)XrI)+)uRuNO<*AA6K
%^mfob(eb>hQAQk0"JSN!EWKh1_oo$0=nPL8"5s7L*L?#F#WR1^/U2f.mM7mJ6Vs8h7V<KE(iH:s%2N>.[1M.$UB<!&nBQ^i3.sQu
%$lmG-Bi+l:<QJKe_SQBjKjbVt^q_Eb3<oL:ISVH!1]MC`(gGAe(9_cip0SpBLnQjEiK:,Zq%2`g"c:#?qhX=+'W/QfB)[L4!Y#j^
%^X.45N"/V?L/7qH4qmtEfIr#ARI:gZDg];2s"9uYs#)DKFY;P.k@X-j#9tG[jC`,^?Ysm?(@?%??;.ePIfYq(!m@*YIoGmuo&BVe
%EQf4%mk;+Idmb>ohHu-H0G!_\8<fAGhVZ6QaZVlKr<5fGST111qtpiU?V:)Q(Y[bGJqQ4!J&U1-b\>5H&F';?eV3^`9^i*$M=q`u
%.ROiU^LXY;6"PGZn/rJKXOI1.LZ/%Tg+rSW=fr.uYK20.3EUe,K#B>HlS!aQS1XOZ$Hp?1#_Vf:=g5$QKCtQO6q)E1rC*_Y3AG1F
%79_3l'!/hd!_gG$=auj6,G`j]In;K?+H_leEq]P<8M?mS\:_$<62HL0;Q;??IsFlqHS;J8.0m1eYl5947BY?PrM>0Wr^-M*;[$BH
%g0[GX5n)IS86EQFV>V]IY)`UhrZWu;ZEM7EbP38;L1f4IB'M4VSG/B/,:2AtB$TPSg'd@&Qn!ug^u/@JKp%PF@/\(4AD/L$9_phT
%'\kb40+[C9T_uc_=A*W\r'``(*?9IA%""t6`$p3+.SAH$."CFP7M!MrR2j<[KYL&N,j3iFpjNg7eE1aW-9iJrZfli]+>s+Om<<(G
%is"*h"JTFKY2@<k>cE0L`npPXoZR#7nP'Z[ORGH[/($$-RipTrqILHQO6L@#\YA<NL$3`d2UbfX&IDrTbuoMc*EMd"j;5*GDI,fB
%DumsfS`6!CVd$bgr2.^VgOeCN_0M'AaB2qp'TM4Big4tNCtV,EbEcejg*qL(=SU-pig4*O?5CF3^VaRjL0k:X)>IV7<=5\t`UKoJ
%c-2+)QWY<42I%)Jn^OpoK&N&M7Td`ai>6DVlI7W-0DDA0>TtSFU%(-aSDon&_RdQ>a"O8kigo+r7HB8K#KJJ#b[+O6IN]/8i*@##
%CU"5,?OF:hh3m;ikY2,/SE#t5]/7L2Kms)\!S3,9afk3(G/#0qj^B\KFctVre3k+E?V$U:#bKq(I>[/GOToN)=ahM>8hsLt.DX(I
%/ADm<bF^T806Fc"Mk0!3)_oQ"BRZ(DV[g>cr'F#R+_Z<J+=Tt1r)1=&pG:4#Ut-5GoZIWI!n3!T+^i:4L$4km=Ptc_kZ=#maE1J7
%qS(Y!L$2UMWU47/rF-uq0'Yap$WM=iDVg$0QWS1rI1,(4SU&n6IefPPqonY)W=hq"g*L4@.$#KdUB^8gL#uGJnZ7*CYpA,U$$JS\
%r%@X9L$"^+T]W6Fr1]lIP2JI;W"dSh(S4uiL%u(I?V#S?Eh6W1(a$9Wr2-n%K[]ki>,7SqRU>"PkO]t.KB<t'.VgSKI^rW4?gN_r
%0S,T?]^Yh3SHWh&d/;lk<V?U@0,d2O&/UdB_"=23fP,dh_ut#fRbuVB)pp1\0?]#8/I>U?OJO'Z:@h-=SWkpCRU8[$lNPP:,lSW9
%qE?\3:G)[tlm=^i_=K0tM;/lm0D$m%eB[Zd@5.F+cS)+Kgk+]*=!p6pG^^goZ?>.%AI<pC]0IW&Rkr=pc`[Jb??q!>5A%EXkEiMC
%A=bWiY]`"bgB"fOWXfgn_=Gc3BhjT'(CFpDj\#.QjlVCp$:-GScQ4pX4*8eLXt7=!DGJ56F:9rfiqN]D(fodeig77i.ZDSJhX90+
%ILNs9T!&"*HX@'_niCr,k]Plkln$p%Z<s"acF2gi5TO:q"h/Dt5BH]SR</68?_)hV(IY^5;E@bRG-@`K#Dm=ZG^]PVRFO5acKT*T
%:Y^VEqMpR8SJcj2Qe_nAn(9a$ic'G,$oAbahr3,4_<6aB,(18L^15VG^9IEVhq]^%I(Nm=K?G&N%&>@8;u)U.[?eembO;D_,$tJb
%TcbsM^(=c##E:CNA&JM.0-]DOq)sr:p<>Cg:?%0K33lu/iQIU5:0.e[h5uNAnAY;-@<"!rp=T0!9]-:^Y'lVThhrM7ONIt-hE;6M
%E+\R89K^?hA`FbHO;Zie?rLgofPVie_)k]k[[;E(>YVmmEA';lH>Zg@?:#]1cKhjN8/H'&6]mro[nupd[$M`hZ2dsr]r3"iTE]V_
%?9C`t7_!*N?9ScWc()"^GFpVbH:bpW%+L]JQc3i=:X7P7OuSCV-gNoJEoQ@i>F.BNDepf8Xf:\U]qG+-r5Z9f81.Hp&UU1@=aGWf
%;phNc2!&f_8$>jK>o7lZr;d*e.;XBcq&0CL5p14,k8d;%*;mGLpTp+-l$5QS$nZp:kFIJV061C/Y2$P)Ml5V4R@8?AS=(1@3@(@_
%&Fg1MT4rSKPO/K'0Dmin+)l*I6G'WifYP]<WBeo>L_5?h%TZms.SdI"g<12#;_7);)[(Dj/9YB_Zf;<XC<ruo=Ql]PK9[7mBG$4K
%M^jMFk:`@<n@4Q2$r1+me#&mfT<G=7U^JP'm0gRGE:V/Y&>-30_0h1"$RbDK/qT9'!iEbbPEu?:H_3<DBqk.VSWfBs'\kXm3I*hE
%;BD/&o#KhPAY]fNj2/o2.F\:AafG2Bl&1.[;)o9^T/h07F+MFHS@iCWi8qr"4.Rk[6HP-eVr&S\]Z[dC8lgVskSmhVH*o)uX;m9F
%H3%G[Z,9k%6bS-_SbXKYGp@PMN4^]g`7&!/Go=?5p^BVu7Mk!k"X>[q,L!$W)0qQOl&<7pOI0OoaEq`MEG"8p9,523fKq:_Os?ap
%.j6Php/RMlEHdKY3VPt`HglQU$$ci(`/5Uh]HUj$@hJ:+-g<Em#^K:?!l$Q/Gu8'?+upD<:2QMAU#Q<Var/$pr*[i_-#n<EADa*E
%9ZG7`$B%ZLNE8q[D6C!-$OGHB10t8Y'eF_VY9R)TW7/u))s<WK=4':!_Kbb'(;$u2NgF1US?@7P#kYoZ#s-r%qCU?E=ZMZ.Q&O>J
%\=ADbO5L5*Id/Cd]C>;V<`H@r>[I0Ag0in,4tSB4]E$TH@7lZ<mKBCQ_:rI8[5.o'pO.C?J@B_Uf_*(4&.U/Pch+j%M?E]5fQVNV
%Qs3b\]4;/;qiuOF"Ae),EUmBh5h4F$pF[>WqNZ>MO$,?g]Xotk'<JgX-Q+S5]*+mbM3lnDlqijFp9.2lRb2d9Pe5_^)YlF,ggu%_
%)N/RD3m-d*[nA9fm#,`t]12p#&o>1Q&T.=]gFaICUt:37(EUCVk2P+6GG*J><4`.GE9@:8g?&$!Be5ua&B!'Lb:]e^O\6.Hh1jq;
%`NT^e%T)U1JmAY/gD@UWi&e(67?\+(&"K'r]5D+8BeFG^VX6iKkLbEJ/$gknk_W/\p((?qn.)!j(F:rWCS,<`_:ZTK?(=p(q7aX1
%Wf(m?&4p4gFWj.$/N@l]=!p;HK,Hoj3A]q%m1+*='C$dNfpuId-4:(oMY>@VfPg8nF4NdX$i^Lm2V<+K;N#Y:KhQ^%IhZ/!ds#C2
%.UBiT8[!?8dKL7!nbQYA"hklbI1YWEIuQ/>R7B2dg-MJq4a%kt](d=*=tI6Y#iGl=75lFb6)$F\`.-am7I_T#=Qe&%cDDEm]$gc&
%(C"/U,DZrd,Db`@mK(42e6*Rl>tQjAK0_GYg,.-pTZ\I(ec7ZXFLb%*_MgdSMe/Lm^S&qJZ0T>r6MJ"B*n>Y@'8&Z='ak;Y?9!&K
%_8)FrF6GA>b<=LK6W^hX>-ApW1sib97mC_g\Yca_Y,N5TmYHYsJQ[)mLE3NC\heMfG7%UYH],p)Bol`Y:JRm9!-"eK`@_)E3Fdt#
%VpE>-bi2m[F'5qS'bDX9me#5hTYsi0cAg#"3`e`^/Y<Nk^0OG##'oX!?okXWdXl[17$W@CQae&J%Hb?3YIQ@F111r$s6c#b;8e:&
%6A&`1qrgH8YnY]uWXG9[Ao[!369:bIG:q4W,RNmD^,O8-kK[Aj0AO*s,EqT3\T:cn4QbYKAM1*Bbk=F-[(06Vgpmsr7^]aIBe,)T
%pJcMH,7B68;!0%tc^d?(=H!?>R!K;.>Wu,dM`E`8[Lg9FbCTnrfF)aQV4?hO5;lS#cC@NbLY6fYcD>A+T%ks)h[S*Yc@pdEG@Adn
%B8U>Gl<L&:i(=2r/lfp4=6<aKWbAnMcG]eHneoZ^b''(rA^2Sf#J*-eF-V1"BlW;[28D\pE9EB1KiJT-SI5I(^u3L<8tkWRmTa3Q
%&;CP[>RH@uEjt>%Lj!@T78?VfhBEn'j`(HF/rjUOMLR>C!gUT`@PHt#onS;28mK/Tb)&^AP8?TSo5tbK%.[FYE@u8b*%2W_>Y(:.
%PGo&C-/.7mS;T39,>T-<>k5VFB+=!.#T1_nk$/7$Y?[H9ab3V.Z52;Je4;8-S2lr!Z.eBbS=>>XY%9?NU)^\S_4b-:\-kEnR4%-%
%A^RrlQui)Y9ico?:+FPqG%&[M<4?r2gf0`o+?=Kq"n;"6bdifJBG\n'4H-E#bdkB,E^&-."pgk`#-ON4$scQ^CN/Gh_1b#GO?._@
%0$i0>d,HCHVb=S+k9?89T\2@W]D!!*\VK+eT"Cf7Sst<U/_G,SCgP2(;r&7./uu)4"U/fs1MYXci.)/43+^?K66i$*G:%!ER1h*.
%?lkRR*;!5Ocr@f?fU^LRo!^;,0>+ik'Z9PNhHZo_[HVG9mFeP_:;"-5BAC!hO>dtC9*gO8c/mIG`:eKRO@nQLM0&3P'S8W@$NY+=
%$ZRepKZ44;/d8t=XWURS0[Y>]c=M(7!-I@.Apko<.8-?#^<cM,3>Yu'GZ?H\Op.Ops&ai?Z54usQue*qaC;I,'[P&-]Vom+r4)RS
%Pr]`@(9<3%J]1Q9M`R1;-HIji\\'*m.>'[JLd*6-K/se]_:T7[>[!rIaZ=JqD,rF0"EQ28EF])01$:1J@a=(-218,%FX5\!oPYQ.
%>_k8KS2hAeVGn@Q/e8OGl^9c"@eNbTkDFS&31$cR/[EmaPrb6[5j!WM3YtU-O^po)/4G]LPrk=0@5`OQkH[47cm^?]jUC(ZT=K%-
%nYAN3K6/<i(mj/IS9metbD;XOp^Xm00Rdo'rt2>^Q=Z2kj$]B;MYsh`F(+.Y9+00QKSpH1^2W6&MIA'Ygg'pN`L&_ds*l?=2.7:a
%Y/Uf6*_aa:?1*Mc.aMqAn-8XY3Ltk)6'^d2eLOWPW[(FViG]0@Td#@1haK"Fhg$Bf"fr[X"\t;?YSsO"K7OdP^t^709Toi-nERiQ
%M\tA1(.TuL#Z*'oTu[B?]l<^:1$%?kjL1.ZaMi@fQ<ac:8Mt=*,PZ6ZZ3T)m4WUcEoJ96QDG7qZE3)bFGH[\63]Bk<:(hW?aDlbJ
%!`PAkD*`[S`HKOc>BXnkI\t)<WKH.P3%HVjinMU"`<F.eh8V6Ggen8W=Hp<\]S#]]Q%;2NpsbQ@(K0<<K+JjN!M4]Oig-;jBWlfn
%"WJ"`Z/HlaM__LR0h?nc-$n[iXdfQ9;;j:K2ToRHL%A)@K/4)liZ7]b_*t&W(20NJ5ki!TW9(ra#U*kCJccf:9sV'LaC<W,V\]PB
%<,Jr(S,em\$1M`#rt`BY%'_Ve/Kcg:>6V!.*iKMN_Lh\$`[&$T5BDQ&gr^>#;r=;ZG1#/iYC4'fhBFm3)1@\9//UZuMfVGVEMgAP
%/gpPQG-'-1-CoJo_HXgsZ5@!\^0A5oa`X0B(/;SIj=sJa.$HP64IfZpou(1Y$is;jFY'OsVY3Nl1>P8&b9i$_UR4)eDOL%8So\P5
%>Ae"Ll=.;0'sUMS>J,pl6?3Ip@2Ag<i"+JAWR[ZO7C3j\pVLlB:6%.I_(GEN!!($0077\J>j6)K7)a2NgOc.%"ZAYaM`W44]3SGt
%U=MR9"LTgTXusj9[RCL)IE$%q9Eai!:2:7&'?hY5[7)SG(O@74Kb2@\i3WY:-A(nVBaZ-ShU@b<2E5H'd2(WUn`#M9p^4+@L!UT0
%!a@PWCs28!#j5nf/HqF6REZL9:Fq#p+UO1N/MA_\'NJQc?Dq[CmXR!>O3M#7cjq=)A4lTFV6NHQ'Dak*D"/N6/AYeRn#3D"OP&]q
%@dV-C>C?L._R<>?4CbTa?H$^$S:EcMh@BNg$s]MLcLeLkUa$^fDHJoe06Qhh7%@Z5?-$e/lg3*:?!CHiH;N3[R>p`q\[I>jBG&iC
%?W!B'(5&?Y.rF\3%d[o7edd`&K<uD0-=?Sm=UVMAo%cB=/V90P:s8g2G>GW<k\::o=_tM%!BNtVS%Ts08lf_[%(mU=X4D9pMlN)]
%#1&]P\bB]!Lha?#/=Kc>9";fnVA><^H"*bl\E/_^:/X`D:O0rW>@cas7;_b+3uD^8r7pS&TGHIH]e=\8p`<-k*fHR)F\l:gc;&/'
%;!T='D;>+H"ZJ$a6rlib\7pYiJ@k""Zj9M)[bZPECodf+q0A(N,'koJmh'sGBp2oc"@sUP`d`6f)`e]IqEdpbZiYtYE75"k<D_-g
%Kf3,J1=O+FLOg2YZmZNA0cRd4bmP(9['WY+;ZKZB:RK?CHG'a$GQ%C-4^&US;c(md:C.kO0[c,OAZo0%g?'-@&X3JI'f9Chb^r@(
%ZXa:[m7?5E#pEPl=:NPE$hbZtM]Gd(&7X#m.ba,K-o_klGWVTY01<1'SAU0h*a7%o0lE<.2Fn6k?<Cm]:_?d5cjoe-K3l!5[dh4#
%MZDU5h$/QpPS+IL$JP9(@A"'<&C>Tu8e#7_m`[@$qH9I\)-Cn;82=M'I!0p&F3fRpW+W_tXb(i,3toSeGS[gB.Q1H6Gan&aTUkH[
%ot@TTG2LP(88#P%Ee7a96bV]Z,K^GG<phX+N3gFDfn45Z:qbdf?'M[OhA'lL`=N9hMc350+]Y5C/pt"CR='U(G5-eb5rUlQ$h4VZ
%lu5bRa_"&Y31XhCo!2o.fcWinVV*\O0;'GV*KL'-o#qS>O9Wtr/1U8uQ<CHGB#UYYP$&-5=WFb1C#h];M]s08OUK(n4LUD_!0[8n
%I1Ld0f"'jbV3_?1'>dGZ/j$aoDir5K21:+HK3NLY=(X/0+q(-6:FDIIZZ&.l$a4@X#VT@a4;2KVK2i\p2looiYf\-m8`K9ap/5$_
%E696R3)dt[881,[lqj,uk[S,B?g)$OiY5\#k[[3E6\6Sl=/UY^ONE)MKfju27C$PI9X4dlp\Bb=(<duWSdlfE;N8&'d)^B#N*KIq
%4!=Q0P:W"]GYrl/*3pn&(Z0p5G"74rVh7;O?7S#EK0segc6T]N:b8oaoA;)3e"-XZG34l4_M3iV07i\_4ZS9[$&5>@?EP9R!8"\C
%p=FmB5Fmk^$"W#3A.M6Q.86P);Xo\8l6GL(SZ2eoeja$!A&4uJCsO;d7<XZ4iQ`IuK>@9!*K,RtpL&(-=Sc$'8"ka)oTVd$EsqPi
%!ib025YPD,6=2>(=ElD)aIRTd.tW[.+"[sgam&q&;$bmYnE85#fGThAZQP5R-c[cr1\S@:oC*!oQbMXArGJ.1gn0M85:Bf9`srJ0
%::QG-41Hf]-NlFT;ounXd&NkU4M;KJR97cjacX'B`K9Bi\n'?[:BrSbPN+JoT[`C(gX$5icZKc`%/sd\)L,]m:FSY#C'.7/!]Vp*
%",`9#9^qO0:M2`;]0atXZ256/n5ps8m05\_\DEIXO1YWUN)Gbs,S#&M<^:e=hg?F!8E$0:AeLN5Y\4Y)57_WaY+jP1i>h3HI"4:S
%iiKpmC0l/m$/#HK%d%(gOHaiJ[;ih;lj=8G3nh(H/h^8NVHkhe!$>tqL?9GAF5LAMeTh!Q[4QFP)!a[PW\tL8$Rc!-,s&$H:6C-Y
%eQpnufV=`$CUk&LIM?mD1OIbgfZUj&KC2LYL@).c&^)2_ke2R1C&))h\I%nGfa3.";[mJ&820-"*A*g@Q:A%K6ja$GPGJf"dLQ%+
%E54%`J`;]KOR,g\Vd75uDCO]UF?5kQ!lVV5;s!F[Xuou(^MpCO>.!BZ'=#f";[%<W.#['E,MYJ7dL1Cq&;J<0Jm4")-KlX]he)<.
%J.3>$M+9A-_`c,hID9g0Y4aO7#gX\%bkW0s)C9)\/W<-d_\r7d8/,(@%@H^<,S0QQ=qhC4^@]n%nU?O)'mCK6oF=-TcfGfZ6(ZFT
%_o$0AgDZ8,.\+&Qp#L;P^1A-.%r#_lecHJ@T]XLu(+JKR#D+XgJjq0aXrPl0B&W3&fb?I1&1Bi70lOd)W[+WIIX4R:`5;>4KU-7M
%0=/\\EW8qrM5!fA$q,G\?JN>e3jkL]Zujm=k<a=aEs#@biYJ300lAt$QoTg=cJ9L,VEn70*4&(uK6s^60AdN6idoh$!VbNdFsP_=
%])86u\3i6^_BVC3ZnmmA#bcM0N$2REL_l^6r)JZ`HfTo#W*7$*3cI&++1mkd"2Q-aYpP>Y98]V/,tA0Gc@BQk45kM\RT:)=;q3pc
%[)mcg.Z37KV^GSJIML[*N!<o33dU2nJS,/33O,"o.@`,X?LYEtIS9IZ,gQPN`_=)_+G4\#CCCl$m<']\+m.X9*JEFA7]=m)@,8'!
%$Qk<Dld.mo7a,.A!C!6FW>bhQM<06j@=Cb%G([l3,)]C+o9')H7ck;-:ZRB;h_=ZrA3?M1.>@&u%")'&O7([g<[&#'^OkYk[(eB7
%W$FF2+N2K7Obt/doaFr583aFB\=&Mc<c4.GK#1f&%.%8adC^+PO^)4i(+cUE94O164jhc6#nso^E`4#aF*NcRj-GXpdRGX^+P.6r
%@nnA6+ReUlbg[_b_&NhcF9'&7G9:)Na62:i3>0B8ScLd6@RXeD#]Mj-DMpQIO^eZM(kr1H.W,d<ngR+54kX;uomn+oT)oYn*._;o
%X%ith-SPPl5rmlR"pmuC9NfqS2?F>5o/C(9>[m1Rh@p\1)FV\M9rd71fd',2d$Q*$FEif?X(?F2X/u.5`Pkp(7#4r].!m[NO.`Pk
%P\GA]QY,[/]Z34NH_`_H#,bSWKDu:p5VsklZ?CfA5?flLPq<]6oDoS*a+4MLp)53`O,Nf+im]B$V'DS=6^P<+bZ3gqTA1#pF8@I\
%h!SpkA]m+G0jA';WmcjE2OL:UBRSR#@$KM:@7FhENDdhXc[FcXmpF($b#61QlOUZ(5Qt8MS[A\McrlO1%!_&@k/jIQF[b_?b"^%n
%&Lh0+i%\('GQg.4YJMCt#<T@aB\b*^3!>]AXe$e*/:G^-((1Bp'N^nBgOd<FYM=o>p_HpR1)UJd[`A(uf_0`6QaPhB``1hIMoH`@
%&>u\!`Mt/mg[KL;e=#sK+CW5"cXd&q#N3"D)P.F+909-bS2pf7i/Y<F>hPg:h(ud#imN2qb&('D5J.LA\T%RLD-o3^frS-F)WZS/
%F:VB!ErVc*X^AIl(aSM<)gZ<@["moRZIU)//O2>CN8$MYoaia2R!q$IWcjjD)%cMmTt]U-XmY^qYdjY]9lNN287XO;Ddg3<<jr'-
%1$=n2?L;Ug*fDiB@g?=lglRG*Rd<;$"sFc/f(/mt`I9kc"7_ON^MaJ=n5M`m&4/VD9hf%Zm-YQfVsI21N._.4Za\\\WR>'\(>lHW
%$T=oJUE6*qR2#ftbVoWIM<DdVEjE`:fKbRWAWQAkX\EWX2X\GiV)EaN+\Y=oK=Fe,2%]p6.\&B>Oo5>VSRaTKC6Mq!'=59Y:(\Hj
%`QaOZ)ic9k6On[*SoNePdbZ,l*8i;R_+tMuOUrF$_"!CM+@0>)luf$>+7qMB]EFrD73/o6!T-/PBcqYU_NokAdZujL0S5t1.E'Ik
%nUqL/N</0]E>A31-:V<G9(1Ib:WI$<`]ce7=@<5Pcn7P*GF_=hJfoYs+VU6hVc]*+[S/o,M7nA"EF)+#YSBO*>-H_?FGUP+Yk*kW
%h*[s.e]'RAKST(R6e\&mRq.5c"_Kt^k;@QO"TtgCqm6`%UMZI-[7fD4/;po/R*_+3[<=50GhjI2DYFF?)g[\Z-d2[%Hm,Ho2igSA
%Ge*)9ASH@+FB&"j<91Za7h70Wc8?O*7-tMM8,*:/e%&Zp''$V.KlC>0roL(P""m>ID>7^$KrtY26o]2%7XRU?0LlGjAKWjeN(SA?
%9)MX()=l:g[eti#6X=$1C.g#/1#,SZ8jFInA[mVN0#ppa,'t&-(^&ZJa:-a=S*+%`br=9oQJ4b$[!9R`0JAW"iDIbEW"u_G>9_^!
%<qRPDeO5L/.jQ\T#`N8NO\M*tPTn0lBeIF,i%JOrVc\T'[l<DN*(dT^g>%b2o6%&_-=?n<5dU5VU@$%3@I\Rb,j7DCpS.K8%a\4;
%G=!N6,BctB#8J_JM5?<"QimtRa:cVW1T*[B7Dc%-cjfc-38u(;ZM<3C+\)5SoFN9CD*SVQSLFf!jlTC&,co`HdIPVX&V:hFgHKVi
%'Cjj@=+iVJPsrJ!EVDh*&\uC;*^B!_-R-r4>W8$IgA.]T</>Znl\,_4B,<Z$q-bK<;ZRTWD\iD=3;7!6L9u8IN4Y8fjf('V5B72C
%mih.oCWZVp@U/d/Bq+<TEcu(N4-*UcU-\]co`@5q_?F34Is#YB>TC28X)EWT=UB^_M[^TY#e>m=EXM%`WY&nl"<df8,9:uj!eZ$R
%Ntg)W!f._N]:;I*4n"L)4VOXOY^pp@#rj]fPdiXV3!]V,G"3;9_,MnYYZtQ-T&:jZ4:ic*I&g!7ELD&%gpQnepO%i:W)&4<@_oMr
%gIbObNtMSK+;$+fGAC<M^_LM/k7oBDpNkIc"-&Z"<=R2SD1QE[:&0O?BsGI)IeVdMW<.h5Po5SP1VMQS?-c5R12;>iPJRi_CuQkO
%'1]qSmC,h:UGs>FBlN3>SW3d(a#\;s"W>GO[W[L`gh\==)Y(?()hDQuO7TA\AV4C?!$"8(Lc*,'D6nMl)S>@o9d%4TW(:M]:8@mt
%1#n8+'O4F)e-<E/b,$Bj!*LZ((=T&T^0ZcO2]lu!>OO$j7r'n;^S6Q>XgjXW!e:QjP5Up`Y<pf4#^TVM&@-`sdK.6)&sd8%3;+^F
%Hre`Vk'EOhp_KZa'_44+M'*DdrT;HB9%G="H!<r^79`VC3Pr>$SRdm:<UAih\3pJ/pIJi!DO+L/1Nj,b.Ni63_(94`frEZ4&kREV
%6&6L1[o4W]'-pi/!F?s;'WgT*=Khg5!b`k.:1l93/Mp!\fB%6A8G6PK0[dP^WAF^`+f$<:;G0buL?E.p8e16i2amg*S]M<ffq$f#
%MWPO1k1toH^C68F;+M02DLMh=_B"8oDq]cYf=o7)1#$lqCkt/O"%*g,]U!$lK51S\E-:Bg]Z(M,p;$IURZ%cc9_B)9PRbaToMeiF
%!gJkSPKGW%KfBs=JHZFkf#GskdcLo<3,7SRIb=*C0sp8R_3mA/@U=!D%k0cK*1JD]>o1JTkdV)Y/$ChA%V/BtF5Oou?'8!iN+?pE
%.oFq-O](4)AkFeT73&ZlD$/]Z3dmX]l-X<Xcrc>gVCR*P;H<LVL5`0dk)L^]WnD$l$FkjY690>%aZ:#aCYo@.RE<;<MN+-SF!BIn
%(hXgU^'<s!Gm+$GOs^^SN;[huf&:N<*Ys>[hR2<7dA@T6Vc3A#"Fk,;AC@K%Nt:uf"g.$L8(sn$h5t/IB`$GoK9AQ=19\BaAAO'F
%QDH?ihoUPGHW.(/18+fSh7hHW^sSWi?-Y](L+tT6YA\_+\N)Ss'j_?/!\rXb'U(QaF=Knk'sYJLU*KA3#9[HAE[8#UQNEic,VT4D
%bEeu%kNS:4Y[QV0(a-WC1("=ZQ1<cO"QK6&N*B4J41m@n_(q(;A%S8ip/MJ=,Bu*s*X"2hZmk-`#[^Sq@sU0Ha(Q5^AJ:)&[;XA*
%),OZ:V/9/T7?HkFOI@Y`p/;tX$F0%HjtJ4K0e+>a(HWjG(eIM*N\'c%<h/Il67k$dTNmR>aa:6r@92N#;`SL:Tih3hAmYtO%!2H4
%h('3_3L:[q7>R@k`h;J50FsOEf/>%;9qp^YCNJbA,V6>M<OYJ-GFTYBP>Ucm9'`p\Ze]$"TGp=`L,thD*7;8C"Vkp#&9m="3)qB-
%JoD'OgdEG6,YYi5h46VUkn:rtO:hRf]9^VIK>)#2*p40Pi3NNXeu:uWTMC=gDKfhfXol)tVACoFjBu@9W66QtOY%)rKjL7c;;>(]
%'&h740Fa0CBAfNQWfV=>SpX&\^AEMESERT^5!>!H_;c]Pcf<5$42?AX-<r6hDqu.!TL=(CrT#Ng<8V\qBK8GP0'6r#/Vm\b5@(rT
%a3>^`'M]g!ApG=oL'3+F$5%_O,dK`:!_31g33_"J+RGb#PVVif;?.&)5SmmWK306_0\m@I8:$k%'%%9kW3hKiLdcO&Ha/8;E2=T\
%15j0;msS,qqPh^oIK7tU_F8'D&+M0a2Hj)DNH64[3h>GRi,%D3!?e3OL#`:h!i<kc\"lciMe.r1Nj\XF$_<t6P7,$GSR(W)>kXP/
%NDe(K@8q\1/f`k#oI7><)]t(#?<AiqPAT?EUK3g@90+(++U0"3il%@tdnV)NI>T]fhhE"GleRU8$4AsgAE=km6'YsakQc?Q)0_P'
%T8?-aL0IIk\Ih+]PR9coRgC6,16?D$-:JO#Tu<Ri`Fso>0I$]KdA"s=Zk3(E]iV4!$Au+k:4tJSXj*G?I(2.=\LFnG;q`&3.*R(%
%8$1up<<IqjeO<>hD+GP-6:QnQ1bad@'WklpH>K/n+R*FLAeX/C0s.N]DPBj6G([?SmK7tk2"I(dRn%uo?G8--]f?9;CY(HZW)o>r
%P&`b:[kL),D"'Cb/oWE(_`--/6#t8Qm]pX@?W/),]65tqk2jNqm?rt$?h0pcn"'o<fFN)UNtN.>o>(RKXs,c/cRXn]@cm+j1T(;*
%KJi5q4ICTO3cg?&%ZkCueq0\#.fotEq-*%4^:ml%2bD>$UHobVg*,^^;*q!YAVP!PXuo8\B$[`FCmE?_Vo2mSf.#!fHlP+ui[/eJ
%"qe[=ljNX!g7cN6$\Y5W-7'q-_#J)$)&\uIqU_.Sl#sIg_^r'L;"c_*.M9/jnX-/oYW2km#^/mc1H))^XQ_89BCFQJrZn(q:ur0C
%dmMF)A:_(@TF4fi7U[>R3mi$lUt;*;5k=*7&jW"pa<#L.6C04"D3[4u#_=d%pu]>Qd&,bVo`WsrIbd#c.nIb-b`1lnmL,CM#&db:
%\2KrD&S!76Y@CP'CFnFZg_'^OU"D.0mn"d:Xc?P;,K\MKBUNh[j?$tHbt;dY:\"&g4P/RdB%Q")`,J?^k"gR*AO=;),W/3AfV2c"
%e@cG*QQ>BaE'eF-VH[m'Z,NkqOTn2R'[GT+f%@mGeGbgtb`$M(["^Zq#+Yt;aqjFUJ7ILnm>`SE*o^`05:"G$(#fV:fo>LK*;9Hc
%\LAl&0`sn9**[F3$nQ9SEHOB+DQqnd0N=Nq[S*R0G`<C.P`sT5Omm6=!aD4jY$E9V<=pjXU:>b"mQnnu.[@u*)uM@Nm+WtL.OZJK
%\W_t`&H\^+^K()^64UkFSB&6r<?8\*CW&8[L)MdZhe,'V&jD:b34X9Il(WjQ%3TKNXC\T"'BZ1aj&C$B'G#3r@a(BCa:g_tECp27
%*e,_.HNklFBgNDf.I+&eq@&,;=@S6glU$IOc:AkNc$e[ras5c6=cBICh_@1P#W;cJW;K_?B*@'KFUJK[2?fT65mdH'SVi\H;t1O1
%;W7i.(3H]NGR,$(ajJ-XqPL(Ik()=LEGK0e8+Tq_j[7I_j%0N\m_Bqq_f`%bL'63F/WlS)l%g!jEpk.$mZZ,abg@=1.a8_JkkT*c
%>"qk)8HQL:>7?KsF_Shh<EA(2n$R4i2&"Zk]#6\XAn5)IhUYB$Z>L3o8$7^I30VK[I8X%0_*AKK6+&j<I)8m]*K2o,4VdBq\iZ!p
%ZAsBTbS*7B$oJ(E'W<LO8E['$LVEp^glsc46G@dp'si[_Y2qV,C/oW8_&QI7,5-!<>1u,1ajhXiHOaMfV7$/HiYEN0[>*?JfjdR5
%,\7d'$'UVWK+,fa,I]-F!3/<]'RZ)8;_JK.*]'S$.6S#_:n2^Rfb4&^c!^<nD4)jbZTu2#rl.WN1>^Wr>RM0]j'"hf]Zq3.KV6L>
%5XNq#Y1]#*7'VK1GlZ(IX/J:t#bjl:,#'S.pqteK2,GdJZK&,LHok$3BCp^tY;9c&"0lp_M37P4VmH!%#H'%Bnd*-gA@b0*.6J0L
%.I%iB)M5T->Z0@G+EcDGmsM,n;s*0PTWW@&-^Fa-h9<\tfjR/%CID+f8+I3TOR<H\-7]u8/7s"4X);:l'h0F(O^H=A&GPV^G8MWQ
%/;]%p(I>%u>2tPgfY,RiYWYB;\<mq9Z9Z.9.U@;lAZsJ4&?[+4Y36KR/:jE?$j%]*RJ7^%K&,^_&K1/t/p+e"+.u2"N%TufOKeXo
%IR6RZl1Bt&R/Gl0OEPG=!l2-A<M_qG<,L*<>ojijgH7R7".Af>qP#e1(GCKEEY!EK9XI3B-8F5q0`FnZ2K<F-K#s/O9S9gZ`*r%W
%#s;*tE[Pl0q`&O#YZ-%KmZj[%`,T_rij75rZ!1C=Q;r*gjZ[.?jPn[Zk[N5JKa!i+A3ij3<HT;">l5/3,W?la_2YG9PMoS-,!![I
%S!`R\KLG>l8,q3Vb8'X34p<V2`'mX\5YV'H.=7)L+YZXQ7`<u">t6ION(lWbJXP[aMAFLn6QR?(X[cpn&'Qh(l\54^K2Dd!TJ&Yp
%<7!J>dd-J1.G:b'TP17mH,=ta6<W,^e(3K>0PZYFG4X].g=r\CCI^+@'@3WC=oZkaG!SHOj@0Q`11_C;2f*YS=+2-edXRRpaYf#6
%,Be[.b>R.:F2@uB;Rf]rkg5[73l6^B`o8!)l<0I3QSd><-;'oVf$e_4QHcA1-_?m?Gu?L[hMRJn:qTjE,qjQGESln=Cf)>-L#(gn
%[;!XXq!=0J=>E.U3)bbc8BK9D8WL5gU3:jDG#_1X7C-$UdR.Z\=NsIgMHC:Mk']q'!hMIHFIYrM15]$%/?d2Q_7d"@(,$B^b3god
%SAc)[TjBS.%S(%4T])iGTj&;,LUb#C.8ed@4RF2OT#ra$DbUN.IQCCIQ3_%\cVS>Z8kA/1CqdY2H.U4(Q7A2!^nn%(P.9cocdtO'
%46``+06?[pb@N%RIVp@C_h"gF!qQFbAs<g]-3nZP.PoYTg7\aU?85lS\QNn2IKo"*i9@2'&.^l9&gboq&6#hLhf4nop+V\$7<(m7
%+Y@n9e[ARB0fL6=*_Kt)P1QG]%`X-2aHnJ>Tt3IRUM^p)C4n0qj'f!^#^Hei=27d']ZGjM8RZod@B)(/f:[C"M<D$flsCM5,)sN`
%egqCZoO/>O(m0=/+G%bNLH&0XLlLD'ZrU#%`)XH1,tHrA&F3=n.7,\:`af;.S>Kh@TE=h),*3c@8`YRCBYH&)`*-gt+V+mfRtN`:
%;cW%jbElA2@[Wb-7\GmtFOpoT'Z.FJ#$@BBI93^ImFteYfjQt1VBi)uEsC#^-aR1Q_AQGrIDnQMJYAQ6<BL@lYD8%!A4W_%P9)f0
%;p=b3L&uH\O.-b9hnY.CAQ8n<r62$4\=qcpJUkJl]p>4W\bM1ogTo%V-&q1kGYO[ZM9u@I/1bb!s&#Em30ijJFWf>D<ErX+]QTI2
%/phlg90A\A/"+"M'(IYUb.`T_1O5h!I!?Cf&`=m#p?e@<Q8+0H<?a"cNJ/-Oi)SoFMqaEC"Pi;jX'BbqM<&O4pJlX\a[)O?f7U,p
%=_lK..;g%k8Q%L<1a&en#SDVr(c.=pF='Ttb^_j@*@&QAoai@!XMRT7-G_mfK?'7D1C]PQ3=96'&H!^j.0-ERr/reEWYh8mn_Hd0
%*RH^*(JPs8AVC*fe)T##8l$]u2QAP'lTLO+-]T1U@d55>Qre7El4c[G.5,=h(e@gha>X[O#./.1?8bEUcf1eH(`bG;>Q[aYL9%pe
%!2Z5_$:RCG(o0dC@hZbt)CrPd*5kQ]f+Z'=/JJ4kRGSQn+nt"r!M*Wg$!KAHMJ2Nk8%LICaCEdBoX'=kD:^"gkPN0Uj]Pk[QmTXc
%Zmq@s>2nUn+(C[2ouCR?''7:ZFZG^:jPmsITjtVKGt+BF>A@VJ)\ujK%tY+Ffk%r1%Ur^&%W_o/8jd9OfY2_cUa.M!L5Vbe]&(SZ
%8]l;kYcta!9i$);hdVd7!0-GYQ5fcj7%_#^(SP`c!Oe44Tu1`=`'j)+hSM."Y9sX"Z)K7RH\cl!3<pNP#tCUsq2nJBLNbsb7O$-U
%Tn0A`;/SeO</DjV$4mbh;\V3I9PsoQ:6gKBdW/N4ok4e?:'>::o/\'9k7pCsRiKQ%%QX7DDY?6"<TQkY53jr/:d@\Sd=Y+/3YZ+U
%\1-HXC?uuUpQ3>"C+JAhRkc@VSB)NY\\5"lWN.Gb1GDC?7_L2?0jYY?:^%DOHgL7C5[8<iTm$??[<gA=Z2"T,75WfG9`$"LV:JVI
%(V>J"W@\a=g%41!H1#Wk^,56Tc+!$I&W<,66'/T")@dG(qKg`OkSVP3mF]!YF&NYFT/9O-a+-sGZIQNJ+p?-i7m.](5"(4qoWaKo
%.VeGnHFY%$K:Ur6lDO1\Aa!#+CnO[<pKXr4CMF1tHY6OP;Zis#0uM.),f'0VIqXZO+-(SreC(=^;3ibRR>g+a%aKe^3hYbb\M;cb
%A;nA(6]Nrfm2-U/.@5(Z51$f&I-YP8_eN,-aQHN7@6\7aj@3ok!fF+jQragLoiDaX<)>bKS.HV>`Z@#@Gu;E`#!bD<e#=OILHcFh
%!i5ski^Nc#S1tb_e[1ttH],&p6"cBEoo$CCk1lFZJ=O6==WWF%5!+Yn\1l"I5Tqmkat#mKU13&::84\P;]=Ymj&Bj>I2E-'@Gq4j
%7s,6Y9V7O,euNC1,At>#b\M>I&aHfJdp]ql=-ItGpM"CY0*uMneE!Y/+Z`V'?'nK`L%$[uWlLH_G[M6!k*(:u-nWoS=h,R30g,9N
%,dF!egrL]jHu]?g\XN]Sc)U3*nu"p,et"UOP1)ro*rZ@BF*>W]=4h/rIk"PAlDafU]m"=RX>ndb^D"G5kV%rMDg7":pJm\YN-ks#
%,6Iu?fgM>i5mWHX[&qLkN<[W+ol&rUQWgFo4gP>0GIM6q@jtD`?.Z0j5"X$-SnXG#+(,]e-DK3@E6Ak<Js3imILR]j3R0=:;!gcg
%-aHcVM5#!a$0%!X"`"9p@.I?##CpjA2fJqn._%a.JrdQU:jSZK8]W'\F&AZK!2C1GH](\X>#DS&[MfWVWtuANJRP>KU1OS<TMS_"
%pbO3'G/f\62l4_LjM&Vb&OsjlU:lHD:SU]d_^.2h0HtQ>>@s7h/07Ls\FN$r>E!s8#[e'0#("PP";aXeHPI:CKlXUmIulhD@O+P9
%[EpUcT-R%+2K!mp;kF<j<2!_4)%gmT@mF_;#gU:U8*jVla+\pu8iof3%pIG:C00q,,$>4c>.MD&!d;^W,D2>/.$6HQ_i;aI"s+Tb
%UkM$*AhD:1/J@p@,[Ub6#Lj*Y+YloRC\CW.5bj1:*'TXT,)P$)Mr.AWn)R-"J;6t62]Z1+\Hg62*(2J!o[G,>=CeES*Y6cV64hlo
%!^[<aJ=\b5J\9uS@mUnFGRTB:?jJO+o'LDU?uuIaKI:^%'?s_'b;$L^3ZH%*)@/]c1X02@MC$Z3,_5)9b.0"qeg-9e@=U-eWJg&V
%2!L,GRulZ23HZ>b\HnFnZVKsIgoXDelrg*-)KqjJr]7^IP+E,X02qWhEG:k_b]WfUc]%eao.;*P"6a$CL91WflI\4%^n[nRn2CN9
%99;q^\-nGPm\gF.N(K0Lh@H%DJ4KhOVe@U#&5>\+K4D[2_+:=.%'RP)>7*=lRK@&I5aEEYAV:?DKfLn2O&FmU;>(S$3JqQ^R0Jn,
%;tY2B;7$$1U]CsqV@KPI7S#+)RB$th6!ZdPWRqT9jK$-(N717IF;Tme%?`qPE;0WsZ]9uN,1"BX_lFYgJ?UsTm@tA!?sakfRmcM&
%)[,I.To$jJ&]4d:W3[t0HK#<l'+Ku9K7c>.1573S-s=hpA%Wr0eHmE?Q-6Pm-$YEUTK\CQ+[*=i<E:C8MdSXYIObP@R1AN-QY(nA
%bUXqfhQVVUCpX\RQC,"DD;Kn-?doQuT'Vr&^Sh27%8)sYW(O%Q(jF!(-c[g.1Sl6C?r,:c"hA"Y&0)n*0hn"jQ_Qf(\PXkMN\_4o
%i,cq13tr5r*`J?&#c#m/qde8g]g33l#ja[1X-`/$cuFXZ;^io'NpNA$%H0`Hm*eOGqYMrQ'JqQlN2M^<ee()8Z(d<\7n)I;Id2/"
%'s384P][!6T%Q^i>U*mC+]3u;?n+qW&Kf)gSu!StG#YHgJo<5i6BR=DGr-_/E_S!N&2hNqm0,4$iI&Im_8iuVIL9o;^pGkUC-je3
%)G):p>R["np;k._9Qt$KLb%VOcheR_MNhUfLsU&u^eGCR:t]66'nnT5.$_\i3SoTV3Iui^af(5YS4&QLKL;Zi>ZIr<8#6M"+X1hj
%6;gG?H(7G&6R%i6)0'Bm(?_K@WtSpQMHGFj,4:6#hK*$TY#`A*YYT</!')o/jYS_&,!c6GadPV0(4&c%iop'>%oN^>:'Zdf#=N/Q
%i2eW$Ct7H;"_U="=@,W$&ac]X(5^90"H0#71ds0\=b6X7NdQs;f2F[P![&\#(GH8Y]LB#h\EoCj"c/+VDbuOd7J4)?_cHXQD0]De
%Dg36)X/Ln#&BW^h'pYU47:tgm+@=L;g<m%!j[Hm0A1BqGLM'++_GZ76f31OfIGddAfej$>,rA=A:APGQ=P8"Slq)S&.X*"R;PI_*
%%A:pc$c\25_!2K97/4f"&4cjZ3(Z;mdh&Xu*X1De_Ke0rLARRa;qPM<ahgoLj02`u'u23aA3pRB:I4U,db*TF!5J]'35DZ%(K=G$
%S<B\2_AMY),TKKs)koU9OClN5[unk<0[*CR@Rn_HJ(,jf:tMmYP[,r@9k`O;EtB1_barWo&NHa/"`,Jm'TfPQf,as;*4a`99UnAo
%!pW`/dJ2p+cJ<+QAC$[(4lQaIB%H<`aS^],L4"5C0EF+!au,WP_,0b.XqfZ7+:SZf;<1b*$/J%+K^h7)LRIPcr!oZ$&illrlWY%=
%:4@=/mg*V+DLgl<3\eZ2-gM^_9cBN^):#pHQ_WUc)c1-Sk+T(Ng9Ad-]UsNe.!$#_JY"kh18j3_0sDcj5iu6_b](cth.)f6e8A'm
%=:@5?.-:N^.HAQ9b_a-0aV;Z5T6$N\"+q\<?OX/djH=afIlFldKud<mE\]Sin>c!><*"5Pr/PmkE\04\i8mh++9l-n-&-Q&?/DQD
%\.*9q!Teo<:>h0ue<p?('-J!Cr#9U#$sLbFlo.ldc8fdiJ]jgA9cIt1R1U(O.CeJ2TB%G=3Q:IhrBQA,Lgc,+r.COV#nN09S.)D?
%W>AN"b:.QR/q(\i7s'G,f-&76MD'r0Z(/u%q4Muopash>b!E)9K9]@WJ<Ed2Er%7R5g>tEPFscO;E:/Q6?XBKS<V&<cjh(j(OkW4
%3_jr9N.6I/c_JFd9gQq$Lf'6^2E\\V%?,>*$;jREpqTPRjY/gj=b%qt@^:/:GT['&_W2]0>Vl<eT,^,BJoUoh,U-4`^(-`/M0/*C
%(3":^q0GeD5d5![MOuSV-8/hR0kBjP&&IRD^uWiX'#TNL>]S7K7R;,closYY$pMP,jRg(B4*PY#Wb=F#8PYi:&1SlLPlfHV5k6Xf
%K37Zb#tT\jA:l,)H(^tf%#qo[>R9*"aH:9T,Zb&%A5ieBXN;@6q]H&g%#c/p65WR)^rVAL/sR:k\V&u11a87XPX2>K-l+fK*"4pS
%T^oC%du$RhH8m%p'oSS]-Fc<R:ukVKh&?te'ia.8MF<JF-Eug\ON<gugePZn-OM4T'S5or,iNeK78@A9pa?b8._Xn_qD#G!c@F!:
%T^<[.\JBru(ii5:8YXrY#WY$ooN_eiY"G**OOm@)m%sdD7"l:Tn]/a>;BuPi)E80R.4hl<G#M[c[K?j23#0.3N2q\:f-9(3)>#m;
%b]"sZo(\RhQ,\?p.>8YEIl#mM/;:SBG!&cibQN+E;TrdPj%4hp"a-@)945/*cuHoUiOU"-bjhK`5D:(Q!mbYDj$Z_VapnYKSfgcW
%(;Opl#-3"/#gl$um1aFX/eKH[Y[jcYikAEoEAI4II*Jn8aV0B@"bdkmO>XX*;HT2iXYZX?W(Ck61`jUEAN8_7&t1)m[)7id:F%u\
%VJg:2^d#>RKn,*qTd\!q)4Ahj;I0K8*7!clpC+=Ma9.#/A-+G[WZh(.n\rVBa]VIB02BA)!6Ss<i]d*9.1U?[a3Lp.2e9sHZ^&UR
%Oq!L[5!p*`4J7fW[J28GbHP>RE5bB_!"YX:MCXjKTo-aCl6V,o'lMP.3PuOYSI'h\$7Sa-#F//;_GSKr88Eb8jF>#9;(=?..XNoO
%-a*,sk@il9nNlsi"VZqJ/K'd43<Tr91.)[M@KnO=E#R7@=Ic2J.,a#(76Cm.RXp8.Jb3Kj&17Os'MK[g.@q^i:,bKoBY#nC.tDjl
%9_$"X):[T^P?L'`4Zk##6(3F]-`p"<f\ls/Sco*6`lKFU&80)CaCtZ[VuVU::<?6U_$pYGEog$ZYi.F=j?%$7!HA)b5r$8U'X-0u
%17Y<>INk_\#Yq$F?t:S?`(tVJ$O;WK(CY:W,mr_J@YGJW'-g.DTu+o[N1hb"GZ7@E"U^;cdH@DeiDJWX'IK?_EK'?:.,dJLiYb9H
%Ka%N1=>@[f`2ahFGYmo))+&Spn/"M!V[Bh3Sf[rcUL^Jp7!*fq:Y@Xd5KCi(>cZ8f_<GJ#\G"uD3q'QaM@<6,V2W>J!=#Hc>p\[f
%E5;iW^h`HEhud)5WIfP2Y2VSL"jc1U;rRdOeaj/%qDFfXWDt[("G`#(3[/h"*(IpM+2i(WLBEkOh2V\'Lel71^^"jHc`t7j`_Ger
%hueYi%KoO9Qs51DVe;/k\HE'uU3&'/olK,*A8h#I"+5dLRfi'r!dp)G=[N1mim=(qJ6-_\.fM@@TFUrq^EWYdp=akMCcC^!1_]X$
%FtlsV#[Tmt(5&7\IqR'-n$q7ER)+4j<DgN3(crGT)qIP]3e<'S`6rGG7%cHVmnT5MIN)/S^:bi-.bqKSb8K#X79Df[.G-R.>DS)6
%XR?15:BC.V!OU>]LPmn<2rcndhm'm#K[YZq%I8?@.ON#2"RQ!lq>CGC>0stic%-tq);7$+.9V0%3+u$J2@Sp+.tIC'lC2m=3(XhK
%]0aO!5Uj930J.t.)U:;'*"<8?m/S=RKrc$ORr[d3'P@XA9bJ/@4UUdD!1[E6/HVqO(CgV9TmR*<NcH6aZPcq"-de4^?O;D6cQU$9
%+>t(RGOV,o@0#3'bW,T9MXO8J/VlShGjjS06*BG."K0Q(Sl9THYD!5sgY5AtBS6"*!efkWZF:Y5U]PmApd!DD#=KCVZ'!:=]h+ON
%#Z(Pu6/MO\o0j]G+F!FeRY,o*<AD09@KS(1MWp+C&ui!G70"QeX3@jc.nCkM!I@ZPW#.<Un":Fc`Ufrd$07-tS2X/-JnTJ!-c#RK
%f>5*e($;2lhA2D9L%;*#3\W6Vnttab5f>0@2ZY^C\hbUMkU0e*c&0!'=Kt>_+aJ:3+F0k7Q?i`*h@RW;W(r:Ccj6O7hHXu5lo<i-
%nO)$)!dQ$)&U>'H+E+j'\7>g)9aqt$;h;Sqhmm@R'Z_4m,T%pL2kP8D3D1Y"jPsje#38M!NA4H"K:2&:#`^im*sF3AQsekh%^%Z/
%Di3ZKMIjlK@g#U3cB7KRhLN[4k)//C,;'[j,K90W5Z/2)njrg6OVuSME4iGQicsLr0JBC!Eu8g`ec=<(@([(M1Y/hKGb^*/m.1NI
%+(Z!+>ub=G&TnKJ>Cl=AQluZjSABFpBV2Pt"if9tBc1V!!olu[PX1+<0]!)dp8+O/'*2JQL>pH[;mEL!GWR;7ZOFgBihb:aW@6VZ
%I"nJE#3/Eg`qiXODoBd!ITg-l6,8n\iHXCH8?5T-Dc"M?@6!+3J[']bj%U0hf!`G?;uAZ("V&Nl&QE_G:3!pDIT`ih>78M'`]cuq
%ng5jl!,&2phIMq)\QEjaCZ;!mKCPhmMHoaoK&U("Ap+Q<2d2Kr0taKXlIHNZX.k_,J2b\t0Jb562pDKAC3'f%8qOpV:^HOT"PQfe
%]RbM_aQEcc9m0U@JLLTU'U6L,hLaXE.%S081cp(D<Hq"DZ_DXWJH8XP]UM)$"lHq%GEYlXZ#9dQ'<I3"^/3m.</5+NegYVuVX;?l
%_G7@%.Y&CY2e<$QjB$E`mM\&,:7rZMVT63V!o&]DnX3U'e8CubJ_GiaK=YL?1LkU'LqJ98(hC*Ci.U,I25qmt.("lbc*'fM7nq%j
%B!ArkKkXE=%^6Y!MSs`j">0_H5Juh71?X?!A2acnX[aPH5u=fS%bV:H19qV")rH22":EgV'J>8(KBsr62C'T$lpggU5RnL6S#.GB
%a&C&sjGY38>;<`=$\O#X'XJa:`#5IOcu+r'6rL:`_\EL)<R>V/E'WWSJT`8t`pg]F9IQ&iV4cY;E)k.3BK(NX3M]84]29^Yn:->L
%:!XU\P0?b73R!f'<DgBU0F>=h'VZCFdN#b9_@K_Y']<kea&Uo4,"+`Sm]bM8jhOlIm03S?2[\:K$C;Hric`5Xa6;SM_,`Gb:3!mS
%\,sF7iH@Sj63rM/FqZ1-.nXcm6"'bJ.<7A2&S*0.h<9e2H5X8_#[DmiL>7dR2MeM4jDJ!<"Nt#BVb5"?n&X<ir\7'r;9iPV+q#f>
%2tS*/g$Zr;#X9->"5n&bW:L`9i,2Bd/kgi.5o/Wg@^BJ$&7*3@`cj3%_\BSLKDn"]du*+H*/[WMJC>;kRX^@P%Jc-;qusU"QApM?
%'tBaX,*ER#$#q0L#j3..7>$Wkr$cSDRnBuZSJZ=TZ[+H[gWbJ=&3=\fN&+JM:AU<cWNn@Y\D7]3g"3A600R$?iLL!nP6/SR\Q\ug
%1ac%S"`?9Wm[Q8+4)Qu.b?UN(E4bAM_'3X(h(ECNjXG(+d`)h9Uq#5/#g%'\K%ga^+%6WN\D88p<)hXjV@9HaG&M+)'9.S\o:S)Q
%#2DqU8Brhei,/e0&/82FBom9MJYtF/mKPZp1F_(b_'/IYgeAIm]:T+J'02*TW55u?K9W#_i,5F-kr&_5VD%&2@g_!c5#O:f#];T3
%'GVgs_fipDMA.Xrm3[o"n52X8-N9ol\;o?=#"NhJ$^Hg\3.XbB]5uIYV($4>;$X@RiU%ciK,+c,GE+hN^$>f(r&k8;SWu'HZRf3[
%F272pQ-p,FRiq#$Z*(u&7V16$'Yg,KX<a'.Pr]]+'0!.5,L!s74&s)-7sXn>K:Cf(3/)4,eQn>KIonK2Rl@!XrI"n!D+"Tm/m0B4
%'r7=\3.+oS+h@\V/i]?iT9>$MqP5<W'7oH`:'%rjF6m!DJ8XWm3?X4*4UuN)BCO\FX/@C-2kf/KX[iKU-Hm81"J'"C"-#=Hr=8N=
%&7@p@AFAF[^N'\*9gi5Z`T8F5PUltt$HSmAaP@l%]*pjl%mElXR"<R[6+Mi&0Z+bTG8?Uc+M#V6$8cdWj=Yb:-]$O\=U2HV"m!s4
%5[!We$)A:R%l61_:^+iYT`XjHe,r`*mRCTjg'im$X(EJNggp0@_JOma@9DSH+Duk0U;ih`E0Cs,XT/F?9rj1uN\_Ae<!]\8K5bHt
%KiSV")A"ZaAe<`7(,8NPi23=T2c'Kl,!`B)ibp>4TYYOkX"p!$^-1k]K5Xs#B>r^[lGQSnD;u*^jDBLKj?.&UhC_\W_VhdkXcthu
%h&`nUgfq,-R\G@N;`J59F3&46MeW;-GY6IBEC&A$2:Q1A\32=][fUGG=pI0CMRQ<iicm@nE8,LHK;5/XPMQam\q"YPmk_'4:)0^E
%_T1%Ze4<sd`HX2Vfrg2sV(gZ"PFBS0.3XN)QhlCVAt-lC"0#-.YsN.+ZOI@:iNmljB*uZ\g6]Zm';]r)m,kkhe>ANcKA!,GQ<t/V
%fre2&)\ckQ'I+TW)9?uj,Tp8!A/bWg+tL_m+:q"r`9t/l,]I5\$F1*LKMh6]\Yu=QEpYZED<r`m6Ngp=`rl<-"ka*6Z%AkrgF*c9
%ZXDfSabX3lP!QN8-)VE?Wno,E2U%4I':XPhK8`&("kdLoA1/Hr)s0Vmq_89-L-5s-9a\1#gFV5*+PVR(M$#QOfVUOabY,q-mL$7/
%D"CZ1;GX#kJ\=Gd)oacaQpEM!BNF)9DB9O/)oL;T$H'dh`&@1%_,k4[gGDihYZ$?p3ee'$V%DB,&TUFt$t?il^D9g8k7sH#6>SHZ
%a2gHM%^A/?$cFq14N#RE&DKT=K\HoD)fQ\AbnX[A!WH>##8eD2,)*jVAdI.5JiOB7&[i9Xa=4uXYYElrRG0NND9CB2Ga^s8;plT%
%ge0hWjW[H@Hu4b%e)C@()+Xo)inon\jB9fsTkhPp"E(C3g9;YB842@D5tUD+g.Y6=8VEq704^:t]JdKflOcqO[Flfdn5)+EDA_$W
%B_^;(<#kN:^c#a;_,.!'g1+P#g>KB$?/ukm];'.?Tc`uni[(<A:jB#T>.[<Pj:#.[Lu=_ZX'IR*>@FpthP)I!2Q9/N$=:q.7DX]n
%;k"=+n]]9$[>WNO1IUV.1kf07[0_p(2P:AJ2H9ku,rHZ[AqYUA@Rd%s,EsuBBM?g\#nd\l'oJlZK3Bo29H,*hm&BDLg=^6;#a.+=
%1P*s!lD'oDBEJW2YdG':JT+%DYX#cJ9d:,V0@;M].>S&F7>9)8Ij'b'MP(tIAo@mH%?.j?@>ODq')D[>ZGL7p_D+o/phU<1ik/Yb
%c_eL,,_%=hG19?E)0Rol-NTK$TsIVP9u[LUO)UZM)Jh=n-Sro!TOoPU%8t8`;QGmj4%%4=.VF9'!^=S+_)/'_f+a(\cnA>-lm2BS
%L6eC+r:8oYJD6S]AQuts7EUA%!R4\rZ75DL:<j_P2GJe(:^Kg=d`Uj4P"c6p>jH,3P+<;X6:%nK#B4"eZJ0EHLq'3/6oM_8Y_snr
%2SDjS+L;ZLRNr8Z%ZjC/570A#4uNi\-X>W8.3r[3"Ngif];h<ti7Ko$q*i->Y#tgWVqBW9,`O3YKuPH%9GfN!)&n[*5m_%^IWgN'
%;I&Q<%L@^+-A$\PLW,"#"Y^i%Mlf/S6cGq<1mf=sT\*c%C)@#0>nuO%0sRc_hPZIfjPo-GnSDM3KkesoD5^2qW_@P+Cli)s:e5C-
%Cgr5:'M1(f*m>$+S&c<m$&XQKr%6ic-mlC/g,:`\lq*6>MG4f)`DTNKk9L(I%Z1^g&aZ'?@`/3d"k\Y^bQ@nj`\gS/Ll2g('GMK]
%B0:AFMnLQRG.Z_:%#[h(`uoMU4">EUJ>b.qC]YM?rFL]$-4.Qr7WsiQ,)6a-<XOXW">>$j^r*%q_+Q\=_a`pq=DNJB>m8Y[0s92I
%):KK>2?5H5dS7+m6#ZnX=jaH$*kWpA2RJ?$Fu4$6F;.uQ@+[02C79!0["_GCiP>[+)hSO'@pq_aO&B,%r^h95.MaojN#Z"XX2R`K
%bnLR*.4e_<=MV-qo7G,]!etQV)&P8[P&XqF%%FCKatjkO2T]<gPBEa1fL4lEcO,D$'FJte)&P8"G(I/p,QX)o#LlAb_Bt'H0!3>o
%fP#hqRpf`8Cg_bpL$bt[N'^qtr<4`t$AAq(P[YO>E(1O\,D!]94%'G$$jms5W8_-i(?.<eh2njt_GLau-uA+pW.q-NfFBomJO>]J
%'Z<g;^BTB$`S/AfTs.*+k/8'i_Ib__$Bn2XY[N=ghMFR-6aPdX*s.0+0Y/[YmDR(AYmd-J,@K.(UDk_YT^`M=79l=5@3an<[Pn6)
%"sF9EFlq\.M%R:r:tXhmPt_f<Cl2?R10k6@9l5.&Al.-q[Y4HETs3Kg`Fp"FRUl7K`Pr[3cmW$cerH=\`b#f.Csk?>'[;`D@EiBm
%?pVXVR?SEeKu,/e"P_O?:tU^G<IKY>7dM=+8:eV^"ds$[-u=nK/YPO?1RK$+NjBMP8TK,i:tW"o.l)E>C69/]8YNA^Keh6V'FL<M
%Psab3fU)[a=9oU!fu4(\A."#bAGK,X_M8#J#:E@#TYSQ(K>Jrj6S/WZ2VR\Y#S]0XGCo&6Ts14-1";1lNDc#"-oFTTm4uNe%=:DW
%3,JEu2V9G#2,$gd>VLlL-;B[5K\"MN?D_\o'?V"!]9<s>)_*"d&dTJc*oAsr[M)=J%ZM^?!(8Xl&2sHR;?E[bI"GNjFCZ^`IS?\C
%N.VR@,\Ma(ENhG3?ZniA23[h2'F,RoTJFiDYW9^ll3JmO2VUj"F9UD>aR1oXQ1,9:%1(JbDJ0'fL@Y_%)%)%V];X*]do&Vs72&,,
%-:3Gs=-9^q.0DiW$jdkr-@e!&'K.B;_D)`_#TO"&Ku1h^^lPWpfPnZJ\SHc5-?B7O[a(PM!?i3^%@RrZa>mM$J.??D?BT-f:tURe
%nQGqqCr%X?[pid`r.5RN1G!>d"396%YX-*;.2Ffi#d9b,@A?=\&1JAQN%cZCY#s>\dgTds$6'V^Q^T%+C_J?EK>NApK#'(::tV>?
%:tU$lC9AQa)s]D:]EX'aA3P&AKhW6km8>?KZpDda$jmqaCmdUu1V2Q/3YjV_+Ls&H2!kgYSV(<s#C`j4ZP`k_L.B=CB\gM/@2^MZ
%B40B5D+=;r@U,,8!G((J(cKkr2ka93(f>Z[,Ku7R4&s)1;"[AZQ/b\YBE@Qfhn[AFBf3rI%TmAQ1)Oi]DH)]Q'^RA>k2mf==j/LQ
%JXsb(D%P?pi*=J<YX^E/)N(pJp36H#;30WDrd'6_Du)3./2lk\;=\G`f[l?HLPROu^;bFi?D4PO^]i<Y)=k0:&KC9u"eC4t.@@K/
%eDM542%^^?;dcfNo/)CHoGTop)V-UG^#TP=j>@OL'ZXd<&/*F1nD<-eJ0dte%g--:OV;8ZgDI!Vcr7Sm9$mWNYJOQq!0tB+#;$KN
%6bB4G0/>O9ehnYC8I/1lCVluQ_mp7KV+uTP%U-\O;6Jm2)TFXrC\!Fj@n\SZ.IR:K[2%^_#j05;igP\moI@_#cqm/"\0c,2l?U\U
%Xss=Iq@7F<?4GHmj=!lg%I0;+^o_)]3-E3KL=*5[%W.ao'Qo.H9cg&h_6p-g)*mI9X>O",^aNioelag2"1>#P!MN[OXf5g_rFV/B
%'P^JK*1i9f./D0?%VSQ;KK+K<4DQEeLbl5ReeD_KpJTD?aVPHWF9Z=d-#MQ[*7CJf6!c"#2>r+N6o,Zq;At5p&8N\VF@d4bRQcHe
%2_tkX1>l8l#Ejn<`$-[_28ofH.4![LXD,BWRP"<b#bjn,[tjbei?=KVTt<cH)06!gNBi6>DC,'a&Sa%@M[j#e<+L/%EjYoO-ua<0
%9YqZb2+lm3eif[ip.T?iXU^4f0LMt>Qr?,($<g.@b.pePbj$I868Q\t@+LG%,)Fc@@DES]RL!FZRc@B]'cHcR=%tq<YkfeP21:rM
%phJ])%pOu,X-uF;5gq2^2;IE]5h4pNJ\=j!WX1!XQVLthK7jNT;6#6`D\S:Jb!]Z3;o,C:Fr[6tVARj<ntZiI7,V]T>_5@/36M`(
%3bV(b"fNb55O\`nV`&qr)*BdQe8aKE,U$#@4BN"emB^'S))enSYX*u?-F[rWAmEP71FhYuQ^W<@GVTu"RKt<m^p)<pCSf<QWLFmC
%5Qh9`*VFdd-?TCi>)/nKi0"aAC3hktJQ>$N3oBF/cL@bGjn]Fkk>r9PAV[Xc;3SBpL@lE&FbMX&XUL.L8f`/oU+VrK]*:^[?ILs@
%NksQX-a0r[;+o."*/Ain%OP/$dPuP,XUKo0"SD7G#W6%rTN6eV:lh=U.K["]jO`n!-"b?YVi)=\&G0\?l#q.?l-.g+*IM%B.Lg_C
%/r'o"BfK9Q5Ed_/4B[D#:$9Dcl<_N%VJJ5";(1cf*H'84psO[;Z8U2uVh57VME1'(8l3TCAF^,Z[NSCE`a@l`;ohn5%je2*0/pN1
%Q^#"O_G*\5\tVnHfG\!"Ri[YU&H*O"1^CIRd(uU$4NfIe$9!loe3PN!T7qesD2:jlU2\XN7@W-JfRJ=GJ64VfWD:g;U\ONkCg++&
%$u7nLJP2V$9p7_liA_!TR_V8"b-V.C-d@:7iCjnq#ilhVR3jHrG.n=+1_GVPkiu%9@K[L+Bla+qU.ZZ,a^(nMML+J]dTg:edo5H\
%32usK;o*3k0,hLqkQK%!Ld:H(^4T'[`s.A\[PUjD-_f8A<D0YHZo#Vc,'RXR/7"fGQ;h7+8k3CGTJWE.^aD*oPo`FEUoglLUL]6!
%=u8Nl!*`k9.U<2R_PgW.:CU7V#W#"cV&H'b3U]g<<,nW]0H$>O$r<;nMV1<AeBnS;/>Gf2?`.;[8i8/65[i9L6V/(_B:0o7;hT9m
%Htdo*8s4ug`K;L!<a_FgZ<Ahd;5B*S;(6$t8`EL9@7V'K(DgLl#jG3e3%0A8h'3"m2@Sh)8Qq9D8:qIo8!&J1gnck.ku$EF"@%3s
%U2Yu3NV`6,XhdL@-71h!"[/;@9B#IVn7[\&`ELQkUCEhhTqd0f$$Vm^7ur7&4U7"ECb77p>:bnu9AM(61iXHfk5()V%B9pZ1`Du*
%]jXAD(cUC+ArtD_=tc(!*:UK>MCa;*83lf]%54.]d9o=?\7gaOhujc\MoP%nYQbk+$KS<U7?^H9PEZ5"RKf!sQifc-7(D2De"DfV
%X"_pYE"MR[-CX?FOp;^J\nW^VJj`Brl57pDqM,e0H=Zc;_*KSqR,^P4n1I()$U-D@[F&G%l>qd`hDdlXVW\.jK.</!l#d%:NNi7W
%f8u]JK`sG;!J[K/!N%<Uct1R=Jl>cbnr/Qk9$b;;K)gEN-o<s;J=ej>K[,Eqq@"%+oPEHG.O_Y9AuO(I.^79&YbMVjR+,VYa\rNR
%:%\t*Gd=8*Ph;7ll_r18EZ"*^'UnO%Ot7sXEMPPhg_$5OU%2Z9mCluVb".II5\O'POq]Ca]d!R]`YfaQJ`6`A<mdQH`JI4k#T.Y\
%@.FU@FI!Ik_h*W/='Wdt#-;VHCJ`@hj.,F+d&Is&&i=^n>h4Fu8^@TGNNRPk'JY5k-3B:_B.2,[dtNCVM?45XQ5VdioX\RTnuKr?
%3sC1aB5Hb^s.A$FJ,7ddc(AmF92?ZU,(0"8mEHGaT_E<):S%jjfu<^Q>:+jqn:T%nibp(AmFg=]="gYYhuDa!k3Vs(q'pmdiNW1N
%_[hLPf0=`Z_/&sm%LG;"rj2Rqhi7?i.^&cZqEP"(=?UREqYJAG5Bmer_5FErs/q3AEoF*(+eGhM#Hk.L3rA])7/?V;N9^$.0?P%Q
%'lBVB/C-PBQ:*IpKjn9n_5HhhVAmkmmH/%X?s04;G90DMmQEZoIF'830q"Q!9SE,mL_L<L\G:M!&31lu1;/MY<>ro$gSK\Z?4V,s
%g+cfKI"2%cGME5pVCMQXfL9n!F>=?c'9rppn<+FN'\tOOLTGU/V4U]b$BhmA)"gZlPclJ\F:F8p#^TsSVrn^]7'Q0INl:HRoHRie
%0YNQROU%)=:i:nZD)=BM`qm?r8XEJ(c(f_tnQ@m`oR&e]Am6tk804dI74.W\[F.2EF1`6_9SX8'PO/ms=b2BJ"n"Z_@A,'?VIL"K
%&k=6CHD$K0-Ml(NE:"Jk\ThiCjNFRAXMhM<9]nA'qc\2`,dBm(TsO&`%`HrU34:iXT8uMH%-0&Q3Gh'eGG$>3-;Kh4UL'$YjBF)%
%\k6I)5F.>apmBXh3EtYn:FEh4aPLQ=(j54RSTo*e-^.CT1.h!^)hO'<*1KO`#XUU1HB*"LSZb(haLY%bjKrjt4PcK!*"1f+'V4aE
%0?&&G:(Xf4V@1Kt828gl99B&=*/hMY\1+B)K=A7/KEEfIYp6Y7[ct#SIH*T?K=8[CLgKo7;"SFa^<>Edp-a_H-p2,,TqA?)OHDq?
%;f^k(bD&MBVS%4o$mu\m`<KO#,#XP^5ueOL)P'2U`n8s8M5.LT;u2lo0XP"o0I.q7D?`Ai4ns_Z/9u8?,KYGe9(u*F9uuFmaug@"
%/l^RmLtTm9UN7\2Q2!)m[cG7d<BB,4q1t47.ANOVjNC.m/Ir>.3pQNbg7Xq"UX'F(N1F/D>2A7m$ScB<Nr4$(-I_EjdS1Q,cc"+.
%Q(`QMk-h=PbFfi'#bAWZ:$50'K<Bm>"ksC4l(b?V5e?!Td`^QZL"eRbVm#dB^B3=Rne's[>V"W3]h>NM)Cm/saK%n+QTb`gLc8V.
%3RJn*#R9pG$>0B-Oc0DjLPSJU:sMW_@m*dUl50f:6Fq<m.8.oX>an1>V)nDc%aqc5"%b"`S4f-0^sg7#7!\g@%1hYU\uMUj>S'oP
%4cnJ!i##39><KDmcWokTUV+rQN%aeu0?aRo#%]#'N/"Ns!4Xi@[=;o:DK88JkV)Ri[HCeb&sHN_34A(U>9BVtF)c4U[s_s-oGMW/
%Lgab7`pkME7>Qr:$8HW$J2XQ1)[iR@#fi[Xd;-4,A".KFI3C_nEZ1E4137rYAGUocTU>_e2:9FKl9hk_:3@PuptFF-qVVu*g$kmp
%oYDg`K4(*%NlmZXbad+g=`C8YZU%_#;I>FT2@VsD"^dEMXsu(8eG-j7S57^RFG'RLfQ:c26&,[[gK:NuH4$S_;3ss]<H^;uoVAi6
%Z4LO(g\]nfSk_5MM.#nN\P=3Fc&YEm=Cj1S[dA005?#j0C6@m*aNA4eYmT%YTPO]b<_P=g6jKUNg6m[fK]H>CaqTUsc;(<<3Fs7S
%`1`J'>Kob.6.6aZEO+ob,^Ui?9ji9qCUI)77RN["@,'_q_2s*M+4b?O$sZYJ*\2>!G?tG&Vmj#dZM/AP2MPV7"2'0kAX!gQD=g-_
%NZVC:"N5dk2*5gM1(QL4-ea1p2k(R'LTgV"JXDsb%K4akj-h$TS<T:-'"i$H@s'9cP,"1sTrLq@f1LiW3<Br%oo))7TTZWuGLAni
%228R[(_efhD]?*(1#<\H&_A?aI7:2.?BF"0's5A%03]0V"dmpt\j9o.b/ms`/:R/GQDt!3mA"clK08\NN#s%Ua^jr#,3$<a$KF)X
%c%dQ\%nWF71ko+kQt'"Q</,Cqkk(#E4O0@6?VLT))oIit3E%`,22g6)9%(=Le!nZQHf"CGOo'[Vl29&*o;:92N1Pc;.hn6TOEU9Y
%q,)<dj(jpIIFrZ_7A$F9!C8>=9WTL4\hXrR9;;rS;dN$DqnYka:ulASjB;-..R(N4^)M+nAEu92Q`N?WiTh`SL=giDU=TTJ1oU[S
%jF]nR(Y/["Kg718::LLU@tAd.;&^`A(;q2e&rT;$'PEs`6`<:4E;]]rPi3<E1NXh?Nacf,EQmHR#kOTH2)7H'K<4f`Upn2W-3B4g
%_(G)e&"%fOHMWqCV+:!-RD:XuC@,fBpFAa::t/F*,KH.6G$8^GNaK*+WH.@irjehoRe3k+U9ecHitOLlgsaS=2P8+UK`.0tbT[TF
%8d%6l/8jOIPOVr_+-Y<V$%m>1ie7?.3/VAbe7M3Z[9b]/+[tc!T+b)@pcE$fR@mEh`o./fj3/!73EB0-(u/X1@ki%cn<%HEQ'b3A
%<G7:eK:JReUJH_e`^Q%hTkNaB@)F!SYH+>MXCma#/5<O<[8,kGX7\T[PYC<IhG^-t*e[%h8MhJTo^%Q-g32Uh]USO5h6s%%9f=$o
%]"ZB`$o%<j1Gq[8CgWI.T.Z1JC][S,g_ioVgu^nFPN?KkR-mfCp2tZ1lg`O<#Vk%8]2mqhKXbS&HfMs92k(X@gR8B@pC6K-gDg8Z
%Q\6&SPf;RN5Bqlp[Ngo#,YH[Q$%;as!+_=[Q):iYAqMBo<9>)BZFhWKnR7,2.cZPa][%NAQjtaiOs1*N1:SHF&/e5CO]#+Cm#i0!
%MCAj/U*ZBrePe7=o#tns?Cun-cFRS5K1ds54+N0Ojn[ZNX<"5^(4]-.f-crnP,?ef8!/)=A1FZ.:XiAdX%p1Z6!YLYml?:/8a_X:
%8!-8@R7HA=)p:=0g[s`cP\kGF*in!nLLdtA7Feq2H0@?'(27,RpEGP)DTCcLcWM,5H@6ujQ3To8e!3DQ-\l68Mi"UtfWB"/IV2pJ
%Y1i6]Sj"WaQFhblgD?NiX*d3QB'CHV,\D>0/+(gMQ@AHV1'JY1B(Q`8E38a`?U96&UWe;Q.4(Yu'cRIRpacb\'ZS[U4eLAn-8R?>
%WD0",d)F"]AD3thRS;uHC>ZN6U=U!7YOI+7m7Rb5/t,?\3P!@%0BR7+,=IuZ_XFMpp]4VA`,)<hU`LhVO/'0#<#q"SZTY$MeXf\t
%%5#D2s1m9'fEB_@Msuuu?uOXd(LopFdk;A5<N\?.fTe]Q.cRqbM>n930fVQrQtKkB_(W*)_Sf841EJpP+Vl_@9<;!`>Ht/#+gVDd
%0qFuKG7atS-]et%`/d:5mQ&Ij,(Q/:)[_La3l34f<$hsaJ"UHO;T]\'H?c0pdPC+CnIo#,hEP"$!Z?\%L/#T3G/qI<mt3bB^So6>
%<)KCE<[n`(U;"7`G::g[;"Nu1;\UFWb]9GP8i]lQ4Lo*M3p>nR\tX6/jqsu);B9(mid@JYg_KJ&nlA5_UQ`^bJ^6rq0giQ7Z(B4Y
%Roojp0rT381?ns/k_nUNc;Gbo?Rn9M;i\hf>6-1H2j,7;$G*?lM*+31BSsLr.Y2BZ!QF#d)$Eb.Rod@^P_r]I*J+s@'+@?eCQl!Q
%8"=T7FpTkKCSSqt(bVCY&1J`fM.7oj#RlXpH&t<.?<5S,!FjX",!nII"reW>[A`dX2*p25(3NXo#9+*aSNV$B#f+B0@X4A$f[1hQ
%W@D?g5S%H5cg2(q(kERFWU-^q=3jp-kUrjL$[u,j/<h\TaGl7QD!ACCbCmd+$>$j>.Mi_'CkKYrf[E1*U(2\t7Nk_]%I+%e(ek9N
%>m"o#I9mt;MY:YSdH1^N3N+o'cGIE&daprA/kkJ$<8lG(Bm6Tcn\f_Zeq5B)+BE>a=ROub_oZGu\q5IVYeF>=hGS_Le%@KVW$\<N
%;%;OB\,Gl0:E*F!77MoEJ%a==!DLPr/2!fC0+`P"p/SnfKfBcX&ZYh,<4*&HN?_6m[797*UU[e\=QPAoYX<#D%+F/]$O3WY!m)jP
%]JHT"lrY'`BW3H1\#`l.aE)&(!=Qimc,6ua>Am0>`nn]H/QN+]]FW:SO)?9I>&ep;*lbV9K1(SBc9`5>@tcGtX?lKR&tPso7#k^W
%&oCF#@`G/Z%aXPF6g+S^@f1&LcfV`GqN-rer/QSR""8sEem/hceK.%X%ZSKI.G["$/E(?.>KC;$U;X;J##_Re*p-rg#p6reXB&5j
%\K5L[443?8McdB:<D5u]:\cSL>":ckPiknD6JME-*Xq!3dj%YU5GLD*,TpDD>ub/rQoS/mjqLHfbN+Y[&msYR.I%p=cQ]8b*9YG0
%Y9P6#[O#=g8W#tWME\G#HLlub76W5<lT\Bq)>(K3-#4mIHYFI_dXXU!Zl",(?31spdhnou'Sg5e,Kj\P,5k0,$eDR\enlL/1fI$M
%AHsJ,DJEZ*ES2X'h-a0lqY=^;@n)S6('HG"1[-"m8i28&9hZ6lK$tQXms(=^2u(eg5itp6$h5LT3Dh=Vh9=%[KqhV]0q.?9Z>p(K
%;mZcg"RTXIQB9\"#?<3/]4=[%%ZhjE'g]kU]l"OUE;d?n4dR'bml?2BS.\)f:*`BG7cj\O+qi8]+:$Xk'f(V0(-R??H^lQk4VT,6
%9hb1NcTKK0&Wp$B[j-jN`^Zoe/@COD`.`Od;0<gZ@,p6aSaL2g"!Q'_o1fgNMt2"8.[aCmUupIVFjOq-l;qnFQBn3o"f4PRW6R+Q
%1PEjQTJZo%_dmK:A.AS[&Yc?n@;?u!;bf+!Z!,2n_BK!s(o49[bU?^cfTG4O;+48E4BNk=@Dk#%E0Q_me<"5#^f_8cbT#,cRVaH&
%S1c%:!Y%m7F;;6DU6*C'"mCX'A(*r<>ddP_fK^9nd;H&Nb14Fj6M6XMn"G][@JjM:ph3udbQ=^S-1!1`J-]U`e\!u`L`VI4cGF%h
%Z.BY@]?!BgP;E*!XTt@iIX_tP&up3=FP.t_/Q6ERW-?dQaju4sZ-*%*]`??;ZA'pnSqr"3X#^KBm#&)(**4K`U2PF:JNFu"^d5o%
%Ofm?YgM@j$,1%G9AEcMB`0/fL*]0rP]pK5#`:cS'OfH,dAZ''"&b-#nW?sb23G9,"TCk36?._G:VmSKA[@dR03YA".S'4>f'L[h/
%:-(:m;Mu0XK3jI>\P]lV3Z*JF=p\o0Br^PhFs9SWU9RNiBUP7%UA7bo[o#Ta9oE]bjGh/8I93@[f@SWt%ctir+;'UV6d2nY7V>%>
%a)>q+K61>jr6p;=JrsU-=V"YohW_!\^W<*Y,3]:PQWhYu?/kuF6I.[VD)2Q-&oO/1p/;aGZp8*.8V!s6SdQ@uB;DOeMQ@/YLPa*3
%1c(hPo=ej4]jRQNXc$]l3E+402W1;KT5nP%,<\kl#,dr_j:+Ct7?q;s;u>as24cWU5,7VARMqsR+UHjp3$lg$HX0<`:*Ba(93Zha
%1)oMH(pbh)U36;DU3;LZg/Fa_2.IC3EPjo%%P:[h?;sZsM;usT!QUHRp](aY3V)H8=UCu:ahS<c(mVQ\4'6"pa]tUJFl"XHF8G\X
%R5:7jRf2hHh$+KeS-dtB@Z3a"B;1,;VTDb1d"'+JlbMru_)r0!*!rcJLf*=mG['#jnsl,Gatcl'A(!HrP]8?E,V]X-%^Ga^\>YHe
%egPQRYA=Q&^>):<@ps!#_aKLT,4$ZjQAHZhX@2X='VNK<ou\[dmuT,5.l2!ol!go.[5'$;[O6C,pmrmO!id"T<C-65^J-^g;cRFn
%<(:&@dW6au2IQnn?(F)O#1h*Gk>r8?)lH]N!D;#0r^>kS6Y$9A&%0RTM07s;QHqB@$B@B]=pGrQgP'HY*)1L>LQG=^P;9\OV%)M2
%e[ERgCE$5.N$W/@#kaEDBlCs%3-U*iQ:F"qj?L`VKdm+#j(rPM48h4b_ndBr^KrHo=Y8h?YY^<^A0JoX(&]+H!94tVZ80c3b\^>b
%]@X$$^Q(V0q&Rs"PJYjDU_@/H0e_BtEn1qAgsfce8[2o)S<6mf9e]k5$6MoS!MRUF=W4m`73]hd+\UIFi^O2Y5t6fueXiGL<a#-M
%'!Qr>=!9>kC?loD0Sn5u.,)fP3DP6`SP,kicT+:%fPO'9,SOZg.2`<pl..<`Y<Cs8J86GUZ=rkQ\htEm<5(;q-^om67]_BrS^>!Q
%%XK^JM4YP-$1#d)"=-C_-L"2P'1cC!7XY[,?70d`?Jdk'&_:]Ok+pB:'kO(=&??T-ajB\V7^IZ3Y]u(sM5mAIP'V-(o-20nDE<[F
%)&9e`W%L]cj65+@)0IXc*U!P2[F]1n\9\VueZ2)V&EgtCW-#7:(paZ'>>QQ`5)?I+S+X/\p$27>_@MUuOG^>iNRt8I)3Y.b(62Ou
%g$Gek9?pWMRap&S>ALOC2r[n6BHa?23VE_P6<>eND$*:3&S+AYb:RlJFD@jAY>js5GuYrWqU#p'DXoh$L6E2G>@,OX9Z?2-b,>TA
%eK.\mML'I1!R_oHfjY$(8g7/Ga\s?BAdJJ_0$A8-<B(pj#bsiS&7CFhJCdbVK*gG,-Uoa[QX).."dmY>jsIo<'jO=p,>C;!4a/W$
%Ar1e>S41S6\e>Y\<W+0jpHch-d4%a@8I'sGOTaI//Fsbe]:6l[C!+FL=pJqcWI<h]3-'h4d%V[aKNFC4ateC0IA\QeK/JLH4-04H
%O&b#eHC,?G]WD91O%>T:7\3ZfXeV4?>-C\H)!j346]t!3UrEsf.tVWDr91D@8gY>;`5tm$S.aLa0B8=F@abH7h4hIg9M^'S8s!>F
%Hr+k*3tpF>M5dVIS\S=9=tno+p`>k4YK:$Z[G4H=9-eDb15$?_$C<=IQgEg/)eX.!N=<323/F%c-tZHLCgr_@8@Ph9qb\>?AYOX3
%Z:77,\;smT^kSLg:5Xnjb;0e/Mt3N,Ooi[d"#QE*f%bU#QCJ>ln>T,W'RKm[iWfLg=\]c=U.E>PbdW^O]!fClcu7G+i=Q)cdR2GN
%Q"5=M6KkftU6DNa2'O$XnMUe:"C^'SV<J0Op(;C/W%\8QW`,apJ3XO>W^CYX:\)I"Vb0qH3.C1=O>)u.&X39WZLE4d/KUZILB<+:
%RNE1m'd'G!=V+fE,_saM;)C-27W%N1q=W1aEXW9E^M49&aV"jMYZMSfQ)tgK<T$1M1,K&L=4%N2)lH;h=gN@QQQ(R_W#A?8"qA=K
%:Q]8q=m=TqkXL)p2G&;.T<&qhM2>6h7R?LI*n12Mc1atKCgeQ"A:B1LCW938W!0QD;*D9OKpO[_$3$*O3_%<J!05"MHRMY:$t.DF
%h6=EdJ[;',jMN#jSBVLhL@mfV9.D8te3lHm*DDKce%fa;[p[:CD(@9WK2-`0X<GWg50Qg1BA9g*H[8C'Vdh-@BV)gh^DNb48N)F,
%*Q1'G#0YNe+mDa\7ACYc[-\a+L-rr0cVp:n\m&'(]C]5>&Y&!`0)2]LXiJ-aR7$.'f0h)<O&e*HVE4>#O&]*o&`%:e.&&t7PL$5U
%UW,9)p)JYDHVJM0,R%psGs=Y4I)g%5(=,g9`gScQhf4Yd'4]'A.JE8p*MAT7-4a2)Lk_YW.jHE4a;'fcK:#pP]X69,O/JRmhdLAX
%Si+=>=b>oeocE3+N[C?B]qEo4gpTAS/6O=1QWK<fY!Ht2WCn`Rd"3PpLT\VuOAFK&5BMPr-tg`.O.E,^0IY(r-8uR3T#?p-pSnmp
%;M2Oc[R<>gJ_sAhF5V+EP6k3KV/6mjF%AI4`73&U5gW4!8Q?J&2f-R4%b2`eI[!$16?:U5GpHR\<i3uO,Nh`6TO68h`[F\KFgTe4
%c[r,FH`GkIp")R=[/HeVGc$0\O*4;'X-HOcGTFB(X0IY;*U6VC0:"U:I?,'`-54to>,n)-'UL5)L/5Sqeq#Uf2:80'.n8Z#+9i:b
%K:"O*c1mki^hkr7>!RH0g[m'**%;,ejc_qhn&CpHPCC3"7]UN!lM*Qr'%JOmZfQ1B!4;%,?9rj%$oW\uqn/bf!bIOOamOP@(i^8d
%YT-&(b(!@.p/q"KW:sid$$`%I^I#;p>pRda;,(n,N[$'AfRk/rKOkZ,JL-i>q;0"s]VH8;I#j$slj4m4X>ri=@@hj1HHkXiF93Yd
%C)aZL2VSaBp[OH[324$ZOgu_.4W$-FKbHuX,!&B;J4OT:dgg@BH-\1U>2H*erMZQK;5EB6^@r1r->pU0.E::S1uO(dG%WZ:UL<<(
%Ea0'&#-JB@Ldr+qF%W!.]M8XlC7*Y^8Fad,`F,O<cZcC/@`2>^/80o&U9"e$^heh[6G();cNs019t@;_[VRSMah3Oc\rhrDPc2GO
%J5ir:*q&*]lM7-\[$5]eg#_?)<lHjSPIYTG3?uV5,hV`sfK>Z^#bp.U*a_H[26G?d):T1OBG4]B%HM`q'1,$fNPM%S/jD'f\(It1
%kQuWq4Wka5^kqk.A'a;(!=-p7RgO3Z<rK1p],8YEAq26AV2'q#.PFM0`T5F'LG7AmjL@CF%'(eRNqbA7#JkHImcf2hW/3rQG?af4
%r7kTHWf@==#dPN4(u[8H`!9P*^0b:_U+Ru#1/Gb%L7h[JU-94;#DK[.&e?d<DNf<Ja%6e=mg+eQ52hT[W2F,<F.o;hW6&^_5T%"k
%2fU[d,CbW&XCMdY:k:Z$gc7XJf,XLW^<g=B9i+c(7f<>#Fhr_lU?=gF'?#E"V0D6e7M`P^*d>3\;$1!2d]^j5ih0P3;PL*BMiDe#
%P/T>XDgCD3\r]"(,.6cOm"h8od2n0NFp&(QcNlWC*'Q,k4ArJL5tMPT/<hI$Bpp;+eq]>@Qut,eEt+t(Wi.*7b1KP3=[Tm6ro\o>
%2_ULkDNVlA3D6dD%lBOS/)#%5-2/IdE,Uok7dIl32dqEs>=c'_kc3K*eos&bYAnCjaF_?YlQd0g_t>QR$B.oYV<`sk@?T[q\L!%Y
%lqf1gNk:>f=7&#%P)2?\*\imQ9TigZLEoW@W;TR"dPu620JAjhpjA[S"68T](3uWLNPd$n7u9[[jOOI,4HW2\'n[]9S'7Q-4e_F%
%0c9$TWj,2-`V^duZ/N]FK"9ecFcV=_G?)6KSuP,EZ"13mB$`+Q0:+_nO/#=HP/j#jre3(2R%B_E;+BMY&"TI.)s3;r(B^+p68)YE
%U*TmR(cC+n'0p\C_oa*2Y[f:jFoZDq12jX5&fiiZptH#'GEJZ_oQ<u3/;eWt'B(r\N%0^R5VR@&89@dLM?JD?dBjk'=ofq)Vsh'9
%d'J"Lk2>EQ,!9n(]S+I]dDARRIDCS&Obrq!`,(RZ.+k;^+'H*T(caLB:J,.FIMfV!<T#PdM^P@@@U4g=15!T3KB1F^"C$Rp:p,B>
%3dM$&h\\USS18q,qPsluS/eMsZd'dOmOO*GnnWbJER.U#Ah\<6<hgW"T."''X[*h)DjAqK=KM-+-`FQi"iE]sA5`WN<\o'Gp4X-I
%6FE<lBM)2:W1K#JEN[=`+<s5aXIsqRZ)A3ViRC8qHAS:bbNH3ck'#R97b%s?_l0>.+#T``\__mp*2Hc8ainM)>f34+e/@AT'EtGn
%d`$%&<o>f`-C1=VHa$^M22Y(sf4R*A<3^1r!_%g/`i,!fd!HVZ`i2gJ&T28LP"JK*Y'4[FL`%M:<!7pVjAb@^\e[9'eEGF_PI3A@
%T'F7)[=?bBhcS.PN2sdhD/1,^g*JT3-1t)kTJ.]\*91G1T>e:;DH7#E-:'JJ:^J,86:?tLPc9?X9:MT0X6Kdo!R]h`@OYhqJV2,"
%PYj^aH3dsM(,+mDZ=,_j?n[J+d?o`)0tb/)o1n;Ti$6I3m%!'7bnk@CT`g/UVo1b%Z5BW;(W0pGlX16MMF&khSPf3)Z60Cf1n\,d
%QQi&Np/>V(lnp3c#6(KAJFXO[*uF(&NEAk4*Z,e5/W4pj]E'W^#&+=[$`:_:cDtNqKP2!IP_e-p)%VA'O7la)[OdD?:N`Cj#W*T+
%)L@J5H^gSb6[2%Z(?&KNZio,-[)8QlS?\3H9^4"):jSdR8tD;\JELdKY%](VLqa1SUMA@T/e/Jah1_Gm_U1FLlY,_oZ?91G#pQAl
%0?S<V,sn"LqO%8YBGTC5,k]<*l^+>eo(8eu;fBBHaa4.fJd839%ijPCd0(FZ_i`'0YG!Ec48UnFVAh).WU;UkcEY.qT6f%tAI_0p
%"G#r44bKAK@-J/Rn6UdSk]d9@M8L`2M(/P[ORteE@h%Pi)P[g?94RN4S+6;?djugHC1`P;%;6Z4=]J"UQ.$sD1T*i@_#cj7S16Hh
%QUm(K`X(]Bg=L1t"Rt_7r'5=!8<*0YaI/53293-[hRI*)POs!#,IL%hhbp!JG9@`oM<ZD/%'/8=D:J[Q&uVmfAsP`N(nAT?_Q7-.
%GY>XshI9Y%K(UtQLoak$AO`Qu;it@!7*Lt7,Ank?ATibL6=XBf4%5:g/</0c=;W=[ad,nOAUmA9M#C8$X".NpnI^/V=C._CA+)^)
%Q8<TY;e=8NQM!(5.O/(J-&OK%n@7*h#<Tq)g-'.*&E5KAp"<7+FCOX(M.7&`c%A3X<FF0oLEH[ZC8Mfi3LqY57heV/!YKe+CK7(D
%Rft53)e2#],];aW7\kWN@CD=85d.rO9UaA)0e+DO["BK9"r4nXnZ#cbS0bWlp3]FBK?7#ZL"0+uB9=CZF"9BaAogR?jT.j4@p.Uo
%a!K]CBQ0q;-cC2E7ZGKhWG8?IlW,.p9r,F:#2irN2cT38N0G5WR8LFl'.-A=2Fs2C)Xq!"6U`.B4_C/X7qIFna[P5Fp.gV/Z(tbE
%YC`N)KZ(Z&1'Z][df<4'Tka36b^<+6BN9%<P6>/C-kr8Z/hAB05YY^B##S0P^==J[#L.%PkU4<32.HYJ+qp15MB[%6FESKoB2^Oi
%qh8*f0Q!aJ-0je8P6!o\>IGn/AqPWVCdRM=9%HFp&7$\kUFr`$0'+*V,[RpgPB=U9JX2^D$_XD#%K_eQT57)GBDQ$+^lDp<d-[K7
%Hce$5YI$i(MhY\`;dWnJ35?4Z80+lq07noiAM.V'6Q!Lk715J+-;fa98Z[#-lk8EGUqr\t8Q\FqS%U&0Lb77_8=J2!\[[Vn5qS^"
%,IH8MCV1uACIgRQT!HiO4-.4^_=Q/d'Z1'A"fZ^D8l&##\1H;g0j(t/WamSoTsk9-9OK0GZ&1;7(7Z>EDhWH^2tU*q1a4?E"4&De
%]Z4=e%A']PkZ,Kea<].s-cB-RrMME\`h&?l/^YNE85TA7C5Mef+t8nu/p?a7+t,WC;_)0OUa%(`=1h5o?W78+N(h1n!pZIhk=@d,
%*%&eMa?[-S<:h]3&I_p+L=]+jYW/$45qKoL`o&CI\V]H\VF"QXNVXD5[76[*jMH,)C/+GIedac2(+IFO)>g`ZWeFejf$TKFHscc2
%D:P>X.0cBYF/5a7I84QY9:T$2.f>Ku]3Ne]V-.\HL9kQ0#umSgM5(Dkc9bBa*_[-2E,HKp24I-acr?46?`n)1k"s917u.CtZDfZj
%:kU's>q/Anm=jZBd8u`d?D@LG'pBt+`Y&kPi1=NCe''(RWc7VA-4Y3JK@m9)@\XbN$:C8O5u_-s-n:otV_M+=_\B?_cJU)T40*p#
%,a4-;Cm=.``C]WR2"'TXU:lXc2VEeRfT@uQm.'pk^ci>f'T]C*$alZalTB/,&p_u[PsN_5KsN7]&2[.@b:AXCIU;sXL$K_M.U=8b
%q?7C8[ju8HAYN@jBaZN)/OY6g*A&F!F?aQe+Xa%1<^plP0LRc]+GbIb\dQ*:c'++V*Dp7P3/)mm4QU5bTEO#a;ncQ`2)5_8J^[V<
%[Q)R,^C)FPRKGoS/uU2!*$3.WaZQsR*Ks2mP@BHlp#I!qb^I`mV-].>">Q*oJIOSdr:@kgi[bo'Mq]<r/]u@H`FYdXV)\&2or41A
%Ca-#J^P#i#)kng%%HZ[SQnrXQ8+jg"QR=R=i3h!#5MAE=m3FGI9J`pZ&]8<d&S,tSnKkejEA.BQfJ.pk5@n=5-O,/>/7:%!j*n-&
%;6hS6B!H(-:")d.e@]^*lGV>O(:6n,=[H`""t5G`PQX^(hAF+d!DaF?h[41;[u)9#X0F9J"fb-@!-p=OQ,(8i6C:/_`aC45;%j7&
%:g9RdWs?D27lKkn,!(3QY9O@0f1*1S(!6AaU3aA%e28FZZ<0-=dEXOpiOO_?2&NcHXYuqg04QnHk..^Voe:]gVbm'PME-2%QuQUK
%oCEpE,]("-W.A9>2(3h2eVk%fAY*XbJI82WUOM7JT)"kTJ>oV(_E!?])ZH*c#cSa6F,ue5U1QptD;`MT;%PQ.P+F+<>R/.mL`K`/
%5),7MR\sTV">,5@A<d-+5:FIG#V9^%hp0tN;UkJmd,T8++cSYkqYALR$pp%2fUOE1\R2=.0:g8LH=2P2/L+.gns`PFU?,oXbld6>
%</[`-12i2Hhg!Qk[!6'J`L=e#aULLeK-aZbdG4=E-\LW@`Wp;1_`S4)kM;4a8Lo4K;V,msPCd:BrFU+aIFNo&80dFp]cMdS@$L#A
%,*`DVVTD9p0icNMjN-*a+VNV3Wu+m-?FM$mK//R*K#&"PUSWEWNbuA[hQ!J?Fg/hcbI&a[P.BT%o9+F^9$-?HlbPTS>G,DhE[aC5
%:MUS8Nt,ImGgHdYP2hAB)%62%A@7C'oXT7*jU^_R0aMPhSdK4b6NW:$bD4BJ^#`2?/aMXL@*'>*TX^HOcVb:#<#EK30q:o['h8WX
%p8J-D.Op*QLg^jqVCIhgN$tQLa*Q0jp7NNXNbrsViiNDQo%(]p"Og;CYe-%$N1C<B'\OPt4E^li!.F-d#rh`ASRQTm'gT-siL"A%
%OJDt_Q<0A[JB3Sk6?JO".VY.J/_,2)boSAn7)>GP6"i$HRq208#'Mc@?Cge+,Amon6&_OIXEr(SpL2RI/)P-OUn1g(blAM:N$#`&
%]uWrO`9,Q1ca<6Gi.e[K)CRj0hk9\`3,q^2+FUhtT>"aa^]D"8^pT>*.j^^rIO)Kb3D(V]V7'QZY[oRj%SgN.GtmgO<=9.%9a7=Q
%,atV;n&n'#l`2e0ROD8[f1L5k.AZ&HM'upa&spt,'H`068JAa$d(9I0QHcc0NRRRL4Egg>Z3:YK5h0>nA$:3D'j2%\%;L-@]OFOa
%d:F"GHL0;/W<9eNN8\:k'\'/9_0#h8RlDAuoW]5-Xmi_*^DonKS\EZN7g#U'@7;:Ed4e5pMkh,qSs[sBf[Ok*8K"LscO:329oPmE
%(goOXA:uoj0f`6nP*LjCaLksNM'i9_r9!Vam*CYOS4mP(f!e@,R`!54jJ'b`L>X6jTpaQNkFIHLR@bTF)CfLm>GihCfk$=[M1jSu
%V,sRKQKlD^heTbr4DLA!fZ*&s)k764;+nHPDRKI+"\G2%hr6@"gFZ2OhDKSL?,Uj2/>?j_5_?DIZ`+R\@kauWX8317A>^19R%,)N
%r2ZS<'R=Vs@3Z+*M&33Hd.GGGYF?<:(e6GXB@@8T+0q<_ea2_1J^G0,FueC,NI=/2%%)1u<2=<+X06Y6"rYn>DF&Un(>lq:4X2>6
%S@kg'bsUn?JB\\q7PsM7Y($DulKeK(q"]-+rcS/$:H-Ulh7\:1iet/?qhr'*Tg$*`rpjYrs8>0"DU,C<T!(Cc$%3Q;7ir5A:J"(S
%qSs+2G`D_5/%6GdcdtD/Du\L>qX6oNE>;Q)>Q(2o405$_%t4CfRpns/=Q*W=rAS,+'n-E]!]jdpp[.VHU!m.OmC+&2im6AoOSmU'
%4rL&KeF]Me.R1Cpf#C4Gpu#WY@J#-ES1J'%!;XAnlQ&k+0;4&(pTG%dKRUL-*sa"3:WN)=WIL@q)"$d%qkoFH4a<bjd_I(r4&?@L
%d%7`^[0ah$%.M"M.9p7=;JICe;E%'Eo#=5BQrQMB%dO/DjO<#b.LV.&OO=RW_iYr")4a+VEg[C.!E/qSL)Cnb`\<6:7?:lcQTScJ
%ff'+-X'OH>Q1767Y.ZnPcHS"L+"UjUq(b]8n,R/dc3L8SGtWXXRopfBRD8U[`,?/kc;&k=Qa;0s?8(!,O]1VtY8u">6);n"VX$1M
%E(&P%k`5>posnq9p[A&<mWS&$D^S?1-[lGWmW@BXDN!E(j8fmJ)uRV&G^r!:&\j\V9R<NcOn>Ane.kUiqWSn=RoO*BDQU@rkA.F_
%Rtp5+H[e%?l.pq_`$j*1>_#f6KRUL%T:\\K^S^6ZG1(c7*h:?)6]i5n>B'@-`f9)$k_'Z3&16.!TgINp7;Q;4[hj5#6'm&'=En#]
%Au"'Fq0WgP#bOKTG[50sQ4M?icdfd#"KK3tUE(i98"Apd-fLs_H_DN()5Ea]kEg0nVdlQ7Dg+Il-:K9'=WTO/[aS%(kd71='Yfo1
%O)LiCQ6rI&n(gI*I.&`N]='Sddul4H#ceJ0\'sTg.gG<]>$L6e?^K#KfLDJdgU:[BE*Ic/hmT;a3QCADc?7mqCgB]V()u.!?a+.W
%OF,_Jf_j1`2\+8Q\IV(U(EIRB(Xg=]\'aB&I;feL(nOr[qJrlK>NE??41;D^#<:/%btPlo^m?gkfm$J.b?7?pf,i<^H#g)N^\j=4
%iNbWj]feMBc;0a7h@K5VhgP+dVg%lb]KEsD]Y->;qe>^F7/K,5#im=ZNutJfrp'LNo&fi"n"2c?o_eX[op</^B@Q^OeK:aS-hK((
%6?KC\f5\K)[\N;)iNTSf=_$1'_+cQ@Uk`<$KPu+o(;4mJW8DuGHh0]'ZMX?D:S%h4YMf%+++E_49Dm$Dr5Z#?pL!oIH.BM&n:Qeh
%B:?o^?iTNcZeOXZpj#'D2uMp(eaNN\I<F$<pnSAgmdf,apD:"egU:(*BBsE[?X-o#^UrFsn>hWMH?8!D8H6:$l/`*Jpj4q.^RHe<
%[*]Cs=0JINMi5dI?efR68$>.G[1R)i5OA&bI_:&Ws'if\Utr1#F8P?S?_$"<]7#,!]FFJcmD%LAZgVk[rc*")s(]CJB!$87b9\+9
%D<B<hr+j'FnC)t<r3X'bI/;H55.u:<ip7WYp8M:\?SE:2oS7!&hD_$Ns8)0<f2ibIk8/&D$i\X[=2R)VfnA3GQ+MrUYHO6GH#:'l
%l.k'CFan[d^5[b@VXt5_rdK-8Z%O.C>463Hrp@&'H%#Yeq>JtWM^C;u]JKQ^F@^>Bf!f:q0)g6Bnc)q)S%"&TY-hWXCpqU(]kI[h
%Is3RFr\gW.)>]is@4,:Oea;\7o8CB=S\9DjH+r2C\68A*h!FIMD&qPF'"9MIm`t6=mhSTn2r/BnIX/8ZJ'9jkn,0nigg7b.I<BhM
%m(0j-;*b,/qZ&hZj2H5C:QDI1*_tmsarOKmUFLKbTILb=Wn_fBB2/07qX!qHePV`]E&'ppmQF<__$rLlAT!'UkbuZFFh+8"GLY`7
%]%kV2IcBD9jVCSR5]jOarXn?Sb9jLoRa/6t+"j_1H?&ZVp;`ro8tUR2IuiOH?Q_PI\ps_"M]XPtr*t:Y0Q"P)H$t&4HJ;*c$WX]B
%8caE%Hi<6[jk7nbmBbPc\Tu#2HbP085MmVk?S[B_>lFI.g%r#?Z1m&>p:Kd"?/33R2B;3lru?)AaBO*^U+f%-S_mc0hYkKU0=L0u
%ZZkQ0X!P2?Bt#laHbiB^?C\dE3kIJa]m4aMG-g8VD16#.o,Eukn5'(1H$aW&:(ut9g!p3A`(@UfIJ;RNq8HFuB?O'2XSJ!Vs.X5S
%62CHO[NkH`@-IL-9q*3Wrq#jVpn%^_nNT*7LXVu#m(60aQ>OW^[=4Gt`YZ+N2ts5n/6m[LJ&D%RhM+sk)\,d0=j4AKSc_2<B>?Tt
%Cu3,YYhqt<cubk'o5a1:#?[W:r,^!5qWA?Leri%H-$'@(S&9j@q4HE#33tW`rLUp8]pd3^m@*E+*[gd:h<"Tnl\kWdP<#T9nJt#a
%]mh!)0(6P7]A..a3'N@XW<BtoV>"74aY#OED\mWT?dMCdUpRK+U-6g#Gd!l%7en%!Hlef<HUL^p^Q"23-Y^DWmCUnid4O)P:o9H2
%gT+t2(Dm+X^`E7'j-\WN"aSI=B?r5<0=biOE4<F@@u8?SIX-(E`+=Bo>3:Er3LH&"-&:hgjra%dhRpOKq;V,5pA5$[HOnYga2Q&Y
%b\L"Bf42r.>`oqFA7#9W\b\&!P!/r=p$DgqfAYNR*FrlsY7#fp;6Z*80n.NlgAALr6sr-A]DeaMq\MZc*aimcK&cUKF8P_*Af]%3
%F5R$%?S8QCT=d.q\[f6HlJh*gI$l%aq2nr'[8.U+UYgKKRig>6r3jRH9c<fUm"?CW-2^eSL'%^Aq0'TZ3Z-7Wa^bnC[JAkEX-Zn#
%k82_d2tqe`H[1]KcLk?+DLi>m+>b)j+#0it)aCpeO)LXEIU"(hC;[a!;1$Wh(YI4ILWAc^@.8U7\._I=rnEp0`.%<e7=2<.[pr#'
%nj28`/?fj/cE1G-RE$A?o%h/:SaS27Y*Ocn?0uMsY:a`Gc5&f#2bi];Dmr@@:a\t]26!p_+4#Di-J$DEh>Q$__L'<TG;Z3#p[8$(
%M<oQ#f,Xe%]A)WtG6Z<8235?WBLHd2c.V^OQhQh2/@dUNl-<&VJd_0t$+LYXg=8#tDJtj-$rr=7rJ#!Ig"oC@mqQ#67%``9oZKJ:
%1u:F6H2F/3[L8,R[o?dSM;s0Am8UDO]=GR\FN"1J^..StJD$NQ$i&.)''9)<iVYE!U+D_VTpRKnOXU*;T3ZQEpAV3:,>epr&nM@t
%h>rA*r-N/_md8gkPc*[]Mt4Zt*+MkF?1V9n)B;:!b&9aa3.P+qo>_Q'Z=G_Go%G'n;>*]8GtS.[j,?E0FJJQ$<Bm?_PU2MR'HVJ^
%YpbP(@c)+E@uWo;In[*q9."^.\,P"OdMu^ic(_n!#Hk>T]f^-#]L<E=a.51P`/V[fM"`rf?&mi?i>6t>f5LWo4I'i.?t%]s`E6S(
%3Y\B^`s.S&^/9B'b#mO1A`h(chM&/p,@=ZZ"@p1LjD.9"FqB&g:Nqe='\AB)g-2jN$Tb(RY'/l@n&En<_V.jh4*%_R=*lK'D<_`0
%AdA>&I9Vj<9CPS[Z3TIk4C4e,^II=0N>=(]nJWFOdHo)Q@?hT2nF<<h>SP(7BtGmPm'fjPWNj5l0)p'6ou5J7:Z(L]kAfD)o%h:X
%m8cK,6N_8;]Qntrh;uoT_OIm9Y*Tr;pO?ENi%SlWX/WdY8]W`,T@OU@B",9,NtVo?/O?*jJt_OG>&TT]N^tQ/,GFJd0!3nVITX/1
%r]R@:s#t-]\,ZK(rF,AJdR&,TJ\2BMbJ&g&O/l+9^Hp9'9mlB'6K8:a`4p+L^Vqo+IGU!4^\h:@pa`jX%`9<qs%1eNf.V&L2:_Bk
%fA$)M0B?cXA-=8@]7]/G$g^:]>]RXZ\\n$HA.IA2J7`j.44F<Ib[HuJCc7'YhfIGY=0jos6fD$ls#Qb-?/E?+^:7P@OrWC1\QFJE
%W&O91JM03E8+I33&b!6=a%X6XVVff$Hh@?PlRZ]Jh]2\-mb:l.qL9$ns*Lh?EqKD"d!0O%s)-Y_U]:)Ps*\PEOZ^F.pgg'DH1^q#
%WPrDo%9l>pn'U<Fo_H5-Yd<t8IC0VYHe*LEL[:psX/jtsh`eHKbO8fn[g#XR$$^O-m++D*1Dt=dKR3IMGHY@ZSD;sX/`C:JCY8F#
%cD60uXShbIG>7a4H7J+&pRM!Fqb&I&j:OOIMe@.=OI6`)[#c:[A4I$\Dpq$r//PqE(:$A,mEnV97qOO-=$HHZmc*6gP9qS^I+$lS
%bO9@6q;Lo<lJhf,]8PjEgtnUXD"VQcm:X%=KB!#Sk1Tc>?GF53<do"2XgI2m:17H_SVsQBgHtejV!X2e1k3/k7XIadEMp&jIq2".
%<&jMY*r?,]jOMG3oC`OJ]n>udo-:j\DjF2g:]GaoKSXi@@/n=9Usa*pm%^eE*R.*$D*HBpYg_BgI:K9I_opHsE\tEK%515hbL,g"
%1q``J?Rdh;Yi/$P0X/;3%57U[JK>7RmpLCn*@lM"EB\_Z5l+*;Vh;E#]orZ1p\O5$`LD*7RC%<LE-P^uiNU-FQ2h'S44qK73?5j^
%p*(i(n%g=l>NLc5M`.h&@W;A)a/dD\0?u2ZqQQ!@iuU"`I=E5t85/pN3'INlVWE3jpb!V@Y'!!Jit6k,E?R$L_nI2>Q]C9&]/lh(
%)4[G)?CX0nrUF!ck-8LZ00l'hB'&K@89"(_ljF.h52X@IB@/I6g>1.[15?%`<mbTqYK,L@YM8N[HZa=(\)Hc7q*LBpBQsGsbji0@
%"8n\FI@SHq^?s-kFFtRYVAqJ#6dX1b(k25Q'Dg]t=lbZ%gsq>Gif`R(Gkl_aA=^*^g%503d%6l>Zs_(C8A.)!HC%?8M:fF-WOLV:
%NaU%kb`7gHG)QOOBb'![0g5Y#`f`>%m212NkoSQL5M@iPG)Uk(RA1e_BZE(D42u2+=!eCDrbPHaeRR4W^:QHg^H]@,m.PHk(c-[0
%Xm9EOmpo&R^N)0WDC2X(G&T.N\i7**h-]$2DmL2(ZtF.JpWKU+.Fb]T]:.Lf+KV'af:TNfp;<V-9cNP9;T$ren4DN/]t4"1h8TD@
%I;s>B7"ni\^X$!IZ*XBRd*NuFGm#%3+-V#(5XWH<"bgUWDjSO?[sQEn^Uq+k?G[?%Cf`E<SA7ojgo%9$ZNn!99>mN2(%u?c`h.I+
%%=2B9T>/.TqtB\_>O00`$8.K.pK^ETJt=OH+2?jjqQ<Cr7mlMRXoEAEHnCf41#U7)h;'$TQYb<GLO1V@_YsdeF[>)XD&<Jl+j8=4
%gVgBbF!o=fNje`#Yf/7$2EF*%r:"X0`U?\g4`F\E)2gIhF8tY7*OWGQ2L![5NnW8cS(j8Y*0`@j5jWg`g>!n]%m0&tLSN0I!5UW[
%I;Zm&Np>CsSNEim7s/_@Z5hE*"o;#@>jC+=koA6a4]:I7\4<4=/Xs]XX*"AaHi*a<]<`gPiFCL&*a<34"etW$OC@lUlG<]#""==r
%n@0*$I*<h<_u\jilu7!+LO&hZ!#`C'7UJ#=NiOZ0a1#,_kPtHj`MD7TBBPWU5Q/VHe(Ul"T<=J^WMSFRcJ?@sd0F`R(=))>Y0im+
%i#Ul1>.P=CrouU,oB+@$nCd]m3KI?)GQjb\PK1Ys*dt^a4uH]<T.LZYB!$9"d!gAI.)#RO$A(Kf':5=dDZ'[LRbr^&P@C"/[l:8&
%^-oG7s2;'P[igjpea'j9cH\)/*m/d"UB:=NVQmXilbU5,b6uc_EeCh/$gum)s'/mF?K=5TQFkl']Dug4ii;scd+gcu];mC>$/,D,
%che?Ircj:Ok&d#8q%)q8+CG8Ko#*anBhjSG^4Tgtq2q5i4U^\aNqQ9KH?jjYnP0ba+#s\28($``.,)@5-0"Y&G.i)nodCLpKMZcT
%M15,KHmS^KTS9+a/?ceN/Gda3o&!rIo)9`?6Rs!nfZ*=_&)TU<S?IG1n9?OQ__tnffc7kXcXC$o_JB^%LT9Qi3G`IeRtKHQl[:nc
%X_2jEpFi[&(6p@/W&Jb-JU7@Ra/dD\0?u2Zg1?;*iuU"`I=E6'bi/=Vm`-=@rGc)fViL6*60MLm\+)2cNJD154r,*m=/"gU0_rW>
%O7t\mK00a,&B![N<>C!6>fn3ZTKR$pU.8AXm>*R1n!s=PXECuP0]O:#\6BF5cU0o7jmBCnO%V*n2EV++^\<f??eVDb]cj-7TJa?^
%gUk56l)sD4Rs82dd:7n*GlJY$]=^K9O-/tn0n<ds=Wl,Z4\E`kZSLoY3hQGAnmQ`fq[XNSiZ7*K]g$7m0!ap.gmnOdP)q2F-M@--
%##5%E*$kio2g`j`gl`;r#:WGE2ekW:iM#)%K,:I.e&+djmHa3nmf%TZ[mU&5^?tFgfsaUtpE6Q$I^Qu0NsYjTV<5g$lQ(&15JOom
%s7.;caC@8A:WmKT4n`CZQfBgToeCNKT:%jsBlF>W*6PVfqq]rMX7)?R;V8lCs)(`Zh@"%YcMI(VaXma+pu#<B<g#Y84s&DuKY2_Z
%F`l2QIdVJEL020^&Bjf)Jp/btoXdp!l@s6VFS":F+b>r8oZ_$X2d`pu!)`>Ukg(lq^V$!6jhhTmH`?u%O'hj-rU&te3PAbVhr!:<
%o\m%NoYV2oe^m$7pqc8,5PY7bdiABYPgAT$)DC^T:\<Ck[\*Q2d=,?2@J.+[s7sFIl?V^RlS%L`mCSsSjMKAJCKd!fr6r$a<h`Gd
%6-48?;V]a\PXN:0B83<qW"VK;g]*i68!joummJT'WNUb.kqrlFe)4:*Ru&9DaQPlL?(8cskZXn0LlF1>rbZOFLt9%30^-t7V9c4:
%X&EA0_q*:\[(q1P@1<)rY%JIKFGt+%0#neu,.dG"6((O(X`)C9dMC3+ie>HH=FC.c0MX'Fi^0&,>UXIK/u>e@opoW\H7UtoR+qe5
%1F:b6[4>ApHsI3qb2`Osf<Y)@lruOK^]2=`?,c!-n*ePn?T+$n21C3?n>+K\E0E8eB6<9kVZZmqXc.0g/rqM+i&c_BchZ2Eo@@V[
%lU(XGm/1/cI^ZV%S6bD!8*\d6G3/boi<QbJ*Rj)PDm&^)p?btW9K-r1ATR/Z3$*Ns^S]%fG,V9.nUUd(4k:ub%f5=!G`X\o79=7p
%0?fL6oKl:_g?e#tm`,D7G4SPVpZ-`!RABoCAV[_%aa&>7`kGaELGisa?/bsAp<A#h+53iF@ps#*[[l+/IFH-#qmg,.]5LZ]C+iog
%U5:lHG;fY%GBa(2IAMGf9magNh;2J_)r6Uhi@hAfT8QD8]5Q,0='rB`o[Wm\*)Vn0j!qOg*ENg\r:-*iB3-)/7t7%O:qsTQAE:/l
%3</+.o(i<spdmN?p\l,CMSK1)p%<f/++JRA+*tnq]_LkGe[Sh1a'[!t:)CMnIDafkLUI"#f'[DG&,\W%+X+P\p[C#`02(g+X2;XG
%Mh9h6f*&ia/kPM/01d8WanGU/hr/nV\EX3+Tj'/T%H*r2jh\"&[GQt%Z)up.M_Q%$Cc2.ENr$.(?2o=i#N,1Nk5):MOR:t:7jgEH
%irj1iOYuR?I]AQ8qqXL/qlk5nhse7->,mI>(kA*tH2R!hN4QDQl=L[#Ff,:Ihh*kXd!(U5g3Z%I)ns$Pk'3il2MkpZ^CSC)&%15X
%2Z>GiE5U/kr=J0tVs%SAoL!S-HO,A(55SOI:E^6[I-??hc`l%6mqCni]^"su)%i?FmChrT:GK$NH:lm<QeabM?X92XS\J9V8DNLZ
%Qh$HPjk=)YB3]jgEuF/@MCVK_f_1kr8UMH!86b6)e!Sl-TIk3>9IT(OM8uOIi>PEoMYoEt:attKk>O+_qkp]A^7+`G7^2U"9&\+i
%&PcNP6m`qWbu[:hbqaS<io*P%5I/3ApGA3&q:DP$`Pt"(H_6$IV,_[n4`t3*\GbeueN.=)%uh%+4-ul27Up-.03qJfGRpG:R:0n(
%nRo?*?XB8[hE>dejR^&r:bELl.R#GhESlasHLg<-ruuO^qffMnf:)'Aa0V>skI9>TI.QT0lSiZW?VquJDu*#eVjQ&tlfXb\l//e:
%CE/O>+mYDDJAas)mD2J5p!VcD*?,q*EcuM.JE5.3cGUFN:4S_n_/$t%`k]Nt1bL+I#G'U?&"@L,3CMDX&q:PTco-3h6t'YdR)W$h
%(tnunE@`9T&LG$736\or]6m#GgVG6a7dm)`6hSk_]+ALdNN'OCTnRYE_H?/9D2Z4KchMTu?*BVt#(CX6Vq&nCC.AHf<SG!,i'Jl.
%D+WJ%Uk:E<-0E\m"iN=G.RRtV^\U4="2VbVjm08j4u1ptLS\q-*)[B",4VrNZ)LGkC^OX5Yn9,hIG2a&V/[GOB&_`s&n7t3Ul;Pb
%/15aCI)r(!oFPliC0M(DVnuq*)D."P[)qjk4DQ=fpdY*non4SAqTcNeYls%jD6pn04SirCl:U!lTBIrP",l2\g($Ja0D:?7O=d\"
%[aF-_*IKrj<B*8cg*uT'1l1NE<4\c9]%qN:,45*3P!b1>6C4I0j_0?/-uJHo0RO^:^l%q:/Io48(o#lW8>j/RDC=;A7Z='kA&X^6
%URZk'IIC6s"c\^9?_t#Gs']@RJeql%6-Xg77QU[N"C0'"(3]%7+;_cAD='gTc\YCgbsL2F"%k[QIa_mIkDb<)[3I';`+-t9&eu::
%GJ86L1Xm]:,/tsg)T)j`-Ks[uN66+n7XO8+6c`#Y6cqafYoime$QO(UgS[0Fc7XuI_F?lc62!._!j$>>r1LEWs"(VAfq7Ta3>uIM
%C[\:nY3Mgf+5(\]Lp8uQrJ"`#qjNameTjWLA-Q2#9PZ%4NC2XSDEm,!e+sNmbE@f-M)\=Pj8IDG43[kf(gZ73OJf[J,Hl57j4q_1
%@D<^to,&lqEkp[H@ol07m'9p[3Xdcq(h2nA1hS2[.lOB)1XNs.\J,.;L\@=kieq'K0KNWkD)m=&%^dp#A(\NZ+_^UOQa5#fR%s"<
%FC$W/F(K4Oep$rNiQZ"$SICe`@+Im>J3E#P;\PeBQg_f"R]IH0J,<'u(JUkJ.^g[j[K(qDrcID\3)8[5T\VF?KuUZoH[^-d43tVJ
%EM1?A%"9JDH1^$ef#[1ERd`49.*mG`5CkLm*+"o=*S;P'JJ\f6HH;*#Z(+(WfQhb[Je7f1Pc/nLgYSIP)OIA^R&+fJ9WRPoV^ubh
%$c[rn#_5UrL=#]A-IIR>LQV;"Qm=QO6P'Xn=_c_=NB2nuoHe@tck\-fgkpG??ep^DTXV24LrnNn=(jpdWdi13K_tu,?6(N>&l#_]
%<KFNrRjLsjCIWUXLWUN_+u,RDG[iH/?^&VI9am2EC3"j<.]koGH)"*8Z#H8/9.\*0X^IQp?(@e7b'V_S?bNa^Fj%kuFr8q.Z.5Li
%`r"ZCF^f(VXVRWN(6Z+rRl>4)bE%_u,I+)\#M.@H`Fp3/*3=e4[@'*EP0lC0E?c6[>MT#>5bB60'>GaBVJZ"a)Q,Pl`MmiM/9%j-
%n(V1>mL1W`ni_#h>%#PO0^(Q8dac"YfYSb8S4OCQ)d:[+f/F2\ai!<(FKrnUp'k2dp-T7>:'&IAYrsaK;s7s0c0ZrjThBi[JdXF?
%k)Q\U5-cd%>LI06)l*,]G0W[cr_Ta2EEIV&N5h2n,tU.=Du0/b@bY+l;$@Rlq!,l;N$9sbm`[Rj3C'0rRQOhlR52e8*ktV?4_ni!
%=`4fJ_Ags2)rMYTC9^@6D&F=!3mqCTRigC+7</WIdgn!@VPEq)PJr?\P9\XNPBDG@J5IB<MG)Q5P]OH/AGa5KgKX4oO?D*;m_Ot8
%p?W7Hc*[kXTq)Lq=oHRJICAod)kUg$-+6L[[`a%<6anBOX)j-uH@>C4p$0NLbDXn.@P"DQZX5NCXM(4?d^S0%<PF+YBEorL-gt7-
%13b5UR`a%3.hqLN2538=PPZdsdFRO7*nD6"GmTm-7$72tq9SD)O6s;4Q?fWG<*h5h2FGU7\38#qR<VD.on>Fl)Jn<b<)2'&L*iZ%
%B2?(<c<8%M"-00s$q5tHGJo,")fFY?K^<!35*#!9,iT*C!&+>E3[]S<&=YdYFWK2g!q[gcM?Xr;Bfm6,.]Lf]\toeRL?J8953P&7
%rd;Q4:@_$H]."86H^KF(]),e>nQa&,>k+I^)`qXi+?!)a?Pg":_6?2;RU/FfWjNYG5kcN;MX2\':]0cAXWgekSOs0M+.&k[g?4rQ
%5P!j_`,Lj>4fRrk7FIL'WUW;k;[i6BP87gB>cA:qM=0%ri15]VNTg0%p8"WV=iW?[?%p97Jof@"<`[42p6L75;h:Cch3=_Z`/41Y
%AqLMcTZoGAee6*\;gdMGZr_S6?G42N)dsa("1aMM_<0<Y)\VC,mHADkf?0T\"F<%E>JQ/g^pVm,MX56>1HK,Wh%fk<dnA?]Ek;h!
%8<Ws>+)S;M;d.rP[8hZ:egg%ZB7B6SV-iQPOR`Q!RCk-CN4k*&>&\Os".a`L8.Nehl'n8E308qAil%nT6i\knq(P'/=5pcJ-ZjTG
%D;-p=:!t7qkgEF7%?LCSj]'=3C1:-nPn/BUb[ou^L^)9[9P,`cX[A(Fc4@G(M;A_&gL,pjCm#shj!qI?C]105kA#MAFVWe;Aa+dc
%B/\k5Qp#]#q.03A<>O)r^+pD]_NE@6Gn6[PjMk&Alh,!r#*#7XQY-cMOnSC.rJ`eo8FA=g6fRN98346I\0`sHn4jC.8LhXtS)?RK
%bRs"bZSDj46eLt_Fq7&5+\fjkT5=fB2sb1+n$C!j9=HLM^cOL9358n*+0r%:Q=:"Q$uYEdSTg5`gO8VEXnH:aX]:]SkInW!#]0p'
%:LrL^?#7i3HR;8`oI4Wn@Ul*_]T,bp2'\Ze1%bSY0C^]^oOtL2M+f,SQc:)T4qjoS0I)^Dqgjfk**HYkDK?:^[_Q)Gb\qp<oNOmT
%(nHPWEDlr;\^KLNkNVJO4&9-l1b4a:<b1i\m1cs<4LjJOmEX4r?i96he%:OED=1BUW#C")&Fe2ZL*+r:e]r#K6J^!Fm7PAS2Gu[X
%MG(O9$Vdo(E>:E;Y`\?JCi:]((dpslmF6SXlK1CUq/=^P(&%Q>Sp\!lF)#L]j+l,@:fDX!gN<5";u8/+UNRR,J!62%p<<b:Q4;j5
%.J"(8GZ244T)W^F8*R39043V?T;CMu4\K\i+eiA>IYd3saWX8bHAL^uEQ\RsOWK=U9D,&I^J0`K4p'M[rYr?%];%`Rd3`D6Pk^%-
%(A[]Q@"(j/^rV$&ip([`pZLH5pVlrV4)&ZVYFaR`Ie@1C\$MR1mk=*0TAMfH\GPK,IpDMN:X6,G0#-TA0kpLY[_<ie_Wp7]e('dq
%625]2D0q(C+7i:<iJer4kaqZbTD8>>ZRbu>3u4IGZrMQ0COPd5m-afFltZ3(p#h8,a,<#nc[Dm*>9<S#=-luQ[+6>$T#rOkQ(P8=
%ceORgHOmTee42b>mL+s1BrUW0rndi)p!*++RGZ=\JTcmb4g]]dPL/&gS`miZmI0SW-W?orT2'c91@\^uZQ;0(1q_(Sb(K\<V6Xq:
%GbtGeZ@0APgl#CJK>7+J[Tsjk2IE$J$#gjZga]2'J#W8\^7uWs0>%W+Js`&(5^$]o]I(:>To_O#e\TDL4b%Bc<;CGNg!j?-O8mhV
%m>j4$NF&O?s6&JS(Z5/PX,g:'J(Ec#.<t7UqVf;[I!d+R=3g][VqQ^3]NK6<5>*ID*Z&P^LPJ+fec"1s5Mu%:B4nD#cY&l\]D^p3
%Rm6!(bLPd"deF>gH'0-*A05k[RH&%o)"Kq8)=&<5(q9A2K@TE<I9G-+qf5;u>CHFgg"lUZo/aFqH2d[2IbU+Dr*c&]>Lr>(o/D*\
%+0R<roY\YmkKg\V17#2Kb3*e1rdX@mFM3]>2]Fopo/sPgGoj@u",g/j>IJ-Jp@9VW*];YdCU/]Ol23NmIddCY^fn,kop;5>r?Y$Z
%eF-jt+:*QA#a.-09K)_(:V>Xcdom7]c6g[8H`%(;-;E/9q]fmk9T5dTSKZe$/)7qeh[o2TS92iU/Mh2[AV82bLi=RTVTu;[nlJtP
%*BIBT,!1GV+P2sG^W97JDjSW2,+@?@gtVV-aQO+4pcfT\WYLZ7WQh)S(B.fbr<1?cO7#hZf9Uh/I._%5pkuRmbM0W6440M-b`%pY
%RChnF[7adKp'HB-;Kq[R=i#A%D3eDdgN`#+AYd;Umlu9&-><LMBJSnr5bDoX?`rg5dUXTIGe&!H^9<%7MhNfC=9@sk'9Z"<q"K8b
%\_\^1lgK;^JA;!W][BtpI3ZoWkmlFUChX1s*<\"fqU+ZJlckDc6"W.%KKl\@NpU^sKgP;?Rl`_/rs2t6CaZWAC/X]OiTB9/-s>YS
%>Om=j7,H(p%;cOrbl+pfb;W.PPS@l?D0)cHnIO_oEP1"l05TBTSDci0aND;Y.fYHn/pkX>iKN'*=ND]af!I:;g(ngnF7KmQ&;FtU
%.D\f*KnVA_TGH.Nl4e9t*_hpe`9`_fU*)8gg.IIHnF7NnO6f"n-df4#CLpqG+aL02:aRQ*<Ei80+DF!-.N5$d>1JlqPqKVrD,Wgq
%+IS-+(hWlm^hcW+YX_W/QB9&J,mP!]N$GJnVl>a[,^Rf[NKnsWAg9#4ImoOY18fU8btQS#6'eB&@Z0Ol=e/6m0dZj5>=9p%?XDk@
%Fb$AmJPGVs4&r\N-964Fj/U=m`].E:\UBFqIosBdY^omW0pXB21A6.F[/QS3alcGjo1N+'jAj8`;M3@oME,khF_a=Kb,?P16HZem
%kkkkbe/=m!&`p+-'FW#Mo3,Z[[($:'2Nk/$FWjGS:1aDA=:7`TGBRc*5(uPVOfZ'"OBF8;RlIEafcYQo[(&GERJAG6jfPaYr\CNR
%6/4>WVo?jtFGGk35n2hi;jIVl>nCDgg/HYJ<moG$a*%/NO%dZa?3^4*EQfQ(<!aM>f%;-X>N'od1fJMO;(>:RAY(DUNA4fiCU8b@
%1DOqm7".QVbZRh[*ohF.3<\<=nu@_)Y,uuNOug3RQ"3)6W?a"2K$CSDmKa]X@dmD4EO[mYUYq>3Kf)jaC]e0$#i_jQZ]g_`VeMmp
%>8g4F"=bY\NhpGme6,9$(sU2B,X(.JQGd.Nme-K\,&Oi``j<_:*[e1lSB%J*$7;4:Ke-(c-;#HH`rlnZ(`$:O/,cRWAq^XcmRCD2
%>$Q$FEaYV-73n(6N?8fO"tm3WLqhTMVQD?1KLC>r)^7a\bG=5V!o(XoGro-IK4@%!C2^J#'8IO[.c(Cslfo[(h8lim@Tc9+RrM?X
%J@_r0K"`Anq9]nFhCA,[2b*A+LgbKkY,Me0P1#bR-q`GRR$Y\5ZH`"U?Ln1ZlBKNfJJ.,W1!3&#KMEgl8BK[cjDh1NE3KV#g_=T"
%Bf7k)mFPZW/7oc+9?3I'AUSH@A14F>3B'&SM6%]],FckEa@FS/pfg&;Zl!ISm"u/AB3lJt_6pSGV0""TMqn@G^'m<5HS$370\Q7>
%TM-[ojCchMLJD_$h7@&3LZi0M(F_._fe>FTauR;A$oZK*:Ee<Dd;?ZQO(qlJOkO!?@D`rlTPMM<bAu5_Abn!gj;JE^=g7lNM9>B3
%MKZGPX0sK\On(smIS',QlVuWG)0_5WKb4E?2WWL]oV='nHHn<I;aed:-tRMM-=b2XU"'k3nA<$H`egbgF1.Q^P)5+[/S-JI@:m(E
%XNBRo$Am?p2=#S-dVrB?=j&6thW[2%0"V,+<M;#qq/[`5@]!""n3A;a@&Eulf2&Yh`6pnL@W!=r&TX,@WG=5[2,.[`7VSFb\4-*$
%gT\P9SGPU=M8aXk=iMa,C-U3[3Or)$ptHJAP:J"Fh.Dt4f<fK`k0a1R`l.esdIEV]@`a9'r8ids?[nXBI4-M9O,ll2mlC(a-,Wh0
%>q2Afhib"^N*`rs`GB=[8i:A_SO;9s,BN\^-Lg8!S4oqFX4^W4A_,FM98QJ#eSJR)3N1IR8(;RR7U>n".]#UUY@6N8XY[As!6&lB
%_)aQrV&&+NW"n6ML.mrfhcQ;gN"2&Q4teCj#hE0;n[/(+F#Fr4ICW%eDEk?%LH"nQ53/A3.9FEq7Vj*UbP6Qt'\I;&['nt+`dbYQ
%#bM97"SAlgVCHAQYprq(n?bpg`Ec"m:=os/NSQf=h3phi((%CS`FR?KGH#U"(&X3E2:F'h;Wl`]KRXWD!<7eA/<kJ-Y\.$uPcCkX
%+3<4Q#K&@LrPR):fECf7MuFaA6X`Wr$=k.qZ*,u;<AL\c%Js0ar0,EB<S<orBl1tL>0tF=MO.<f>FlQ`Ctj.4n3h&[K\:LIUB..#
%b;+i5SA0A:ma?+@m3_bkPpJ6Q@UMBmJ&`:)A#`R]CRi\'5:RWla[D>HU[B5?fuSE3"k>6t;NSOI=f)t"GQ[pUODrZAqZ"IeP!'t@
%Y,6\1MD&UPcmFEXra&iY\:&Ih`33-JIPaS@V>i!RYCY4'P9c"'le(ip0$2t"4J:Tf"a8s%@EgZWIXh<,GB<4tIe@qc%Y$R5k:ARp
%l3>1uT?#h:a?/t\7`#*R1B4.R`a/KY'+0&hrk%agqUN9SDh"o2*o/pLej_-J+3qM&3H0&(roa=SU>"AZ48Wng.^ub!rbHT8>[m7m
%DuWHeE,Br?K,?fLD,DcU3jZJEr1$u4NeZiYs%K9aY7'IA].pL:4.dq0OaV;RO`?tarr679rk;7>qrde"!m:LX-p64o:.pTFh1#Is
%pYW!FGE5e0[=pW*`o6_Nom^H+/>)kdhZ#Dss1=$VdFLP]"n_]l!_[uqPfE_\I@k.3j(E*!bB]VU[/9%Kp5bj/)MFgJ^OuX6ZRhG1
%n7T/u+57aT5L7kF=7T^nI8qW7NQu:qR1J]m'E99$R`t@aQfIsU2=/OWGaXQ+r^@_@1:,$0B5O7Vbe(d;XlC4QgHWut#G7D%rTIV.
%Z!`J==9$SjJaZs`Z_.Wn?\4?pc/[=`Ek2/Ubd@C]AhIr1\B2:':6fE>o0[YDB6/+r](f;>s7C,KA,Be\iq;H]rm$?n)%+p</EQ[q
%#htGjF`K1@\:Z?b^!4HOQ\V&#S&Z1WECb9!=#[J8:-@8nqDn(lp#pYlE;Mj[m7>df4t3i!P8>Ue#:IQ)IAAJ'(u]DC](b5qouH45
%bPd'W"$`lu-De)`eq;M4NC[*o_!^L8YHDS!3nQ[bQ<W1up&het->):GHf-U<T_88S_q7=49+s*/a8;QiIHT)M$/^^U^\7BQJ*iFn
%IN7d2p5CH49laE#hOI\8dN/#=B^'^"@.f'HmV$tAA7no!1`g%=-][`^e%mL_nbQTlmIg`!%r>:#.2l32p$d3CJ+[bjJm,^73)NN6
%-_$Zh3*Pa_`-uYhf/X3\L6)h((0BOSk*jCJbA&*D/0&rV/T,.l7D5#4XmZ.uHF+[RR3u:^A*WR0bmD<t-PeVKO&srAGIES4l5e/#
%qZhF(Va%nM_l&!er6LFIp=E>h?>gmTll8G'0WJ8nOM_@:3a"oM'>r'Z2g9Rmc6fuO73FJDg"tJR39"c=UN(pi1W_4emQ=f=-37!:
%RtjZ.8,RH.KG_iApX`Jj@!\!a]#4s,KW*VZ]%d_"JUTWIf?D\&aj,q8R^\cA&-r0f1Wle6k3Cgnp&mruor+crT0/.51Im0f?@5s(
%Rkb5fH+"f432r@nNA$-^K2'Y@a$HhGYhfcfEBMOVca(0Fo_<Z7X;qVPELhF6<HA,cc,0X:qLd$k8(I5JLMYWjs.npn9TZ9Vm]H5_
%]DcDjBD[5JIG*<O%iRi#W$C:gohKg-m$ZJH3jsd]a,Ct19CmRQ<*i7[3VI[;;TE[b8aFl?9"l4<B8Ja#`PZiZX0f$W@c?G>hlf^;
%4%F.;HWE7Up?.1%2WL]&"B-8Z`XKjVS:>XQ1W;@rp71I8f1BV9P^VN1cuNSoZ>miai_\+ha^o#&^%5:sEji$88_FncANu6VKT8+.
%Zr$TME='m2b"E)6/[2V;(l:hXF,J1=m)gm2NlU"*Zlg%:HZI5l4=9g37eN=^BY*fUrn;l/Y3tZOWRt8nqe"ms*%.Q`d;?rab%DDM
%qR(aU7Y:Hd)2I$gLGXW)*c:?:1"Og3OuED3m`_!l2XArL$a'U8rFCCpBl@d:6;<,G$$mRiCYQnAX-a>cb`:=*?2id&m]XGFAu5I.
%Xar$V]aH^+r9ik/YG76NI:?!oT,_^2\`5\(N`L9tUec;un0X&ZY?uUU3]c+8C^;WDLX:8DFA^hY;[]p1arYBWHF'0Uo5eoUE@+]=
%*/Q!=](Fq=d$6[ecrA*:lar5E@p]I=5okQpm3uP&-)&D/m@dG4]/3+b465t&YN56Q_:]f#d6gq6.==bH6l3%j<ftY^Qrs6$@fC?D
%cfBAbme;'bi?,13]dpGZV9TjE&>RWl[!?i*TA=N4rQ`B,*I*=8g=SOArit(aP3fTRCG+7].SVP+^U:b]H(KVg7q.k21mVj*N&GtE
%E1h(e**6[!Iuh2>(u^"og4>u,\m(@LbjgAt2[9/7n-W6Dr4-^e/b0*pmN;F@>h8Q`j2ps&1G'@A(n@a[Y)qQ?c*O[oNbD:u)5s*/
%nBWmoHF/.*Zi8Q*k",o^mi@t!b>d\MHRFZ*N+jS\fZrcu3Q0k`T%3n5UGhpsO&O:WMB.BQP2d7DMi"uF"65WOV")L[a)M@oMJDLr
%9,8SO@)j%R1@(N3B`2oMi2e^'_R@QD3NLr/3js9F]i[t3XWAOSeq'glE97RmPWm[c3ifKVB?oK/-r/&b>0V8((Y5,KNMEVhj2&a\
%):hRj*?8tan""4i;"!OX/W@fWYIBOj\Of&cYK5G+HD%+DduO][Rm0r73EQ-c;HRaskB_6)%\Y">4aUg<gW;a"2)MPpc;DEQT<%&>
%Dk8:-PhJ5h+CpQ.Mt6).f-sbpg&D"2(o/;kB!8DjiJ9/5!K4[d5Pj17^4L6Km"ou[(R.bT)+A8V42"Z_jAs`0oU(g=#OA9j*%l5Q
%>5*)pNK`s&"Zd`siIT?:mcYWH"rH#Tfip[8=eq.;73%l4-K_V7H[B1Rj-4"cXr,`6[23uac!YfNnSWDb@W%eRZl9[NY:mY;nac:2
%M*Ho</$iOPla6E<k>5&"XKf5.:=Ctq,f.[sh7l^-^gbE6^A=^F.6Z_7lc$5kX&Lh=p2^$p2KrJF*c>hdHeEiGe'cOe$.!_jLD0]h
%jX]=n0BX.d/K_1aD6+d.]c,E=Zk[/i<oN:b%EeO$pF3uP/?Bho*ZU\MOr<2FphZJ?a"Y;?6dY';AYihiVabEKfu;L:A(',@gRJ64
%]"ITt<+KJ2E-$VQAATpV-cgTYq>G!d+$V^Y-B;.,6t`Xi9qXF`n9;TBU!j[U8,1J;@5P_92X^h`DiU2=rVK."9*kR*Ikl"/Apn-<
%Dh:XmIUP-fkRZJ!Zb7aD9diHA4[Bef!diGrM;s!q>2Pk&juD/]`6PB1pD:7UWK252f4F"8k[aW>(gbpck@IsF-8iF38<6N%li!s,
%d.Yl*ake[Uh(]bA_-SXJo(q>=_-&:RU^LP%iQahSP$*:sn?hk>0E$4ga"o\Kk@S4)LBc$V^2g5Lm#/S'[s7.Z\(DL&3S`KA*;@#H
%IrB7;4Bp)n.b.]6/Y$$.O?LbRbqm?ipUBMYA#jP:pncVgR';qSUikPElh=LD/'mq`p=Fd8mdG&=PC?)Tm)Wd0Y>ZEW#)>DYM$.P4
%5P>V;SR8)30[3$ndVY$@M5hEA!W;>[_puLG_b17fc)g:;a46]\`N&@(gNslhUZ5s"9t%KV4C%i#1YC6m-`!]UV`0ioF@o2%[g-F8
%j-6s)*pmLIP5Xt#,a3D-(?_[^[nKF6OpeB*?GfB]O];%5W`H&Eb=T:cfJ,]K!P9=%SZ'O&a\'SIMFuY`NrWQ"a=CKjH*Y&j\%98J
%o]"AtoP<D&#1)!`5=KWRN"-5^hP*&3DJj].@0,3tS+?;q?$SZ4X/ij3l*'8_"oHht7oj^(Dn']MMkif))+V2f/r9Xi#m5=JP]o1H
%CjK0:g,PWYg<VURrBme-1S:6lX6aaUb;r"HI[>IeeN'N:L[L,JD8SB9cY2UZfi.\q.2.2(23p/Ae8B2AT=QOuG%Sq^(6IY-0nH7%
%7c,J@DV94*lEg\PY'-?h!V*7*AZUgZpT2a.=o4lTb.g!^[^[2uBlBQt\upUXjY)m]i@l&`S:3I[]Btrj1Wsi492.9>bLm?=ORJ'P
%pu:S:>PI#L?+[TBrq;QHlANd;l,-$'5O\U(]C9A$_X6[@k-e=r8!iV4`s_Uhh<?kZ*]u4hmg_QhHT$:sZ<f1:'[N3u\M9GVltHBZ
%q&d)PbL?4"%W5&!^O:&XIIsnV6e+lf)dYMrV4J[Qrcn?U3.9\#0$eB14]n<u%'KOGWGB$6JL[ba(U)Vr5<_-"s5V;(q)EYHAp8`L
%1paQ:r:AJAHg,'\hHYLgqo?u>>_>2SPs&:9V09Ce\*CH+5(0#*R2`dZ?`Pf'pWN4-?]/9gmiDp]Dp@1REjBrgdDcr%_t%"/:;_.%
%lcZndG%Z-arS=U/T>u";l]6<8OmcB7fCRtil2)!p]b<`No[2IG+(+d,YH,G$QSt-^bYC'G>b5)i]X0%[]O0JSTk`:GY2<Di=Kc%:
%TDN?:h7GmmV7_+ipA++E\#/>k]igl[4Lt:Gm?:1-n#`dsrk`$s[hcE,5GdX-]<bZ_DI<BlGPg]iNS0jQ&$J\KhYMUT1L.Zj)\';3
%IIG;(P,be]hL:lafiu5"HY_p"]fYoTkGdj[^2pY]c5`u?jgT]pblc)\q'S[N8TOL3c2(_6D;<s=]<b,#S3NLS5'_KrG,Kf".rG&8
%]J;XZFT9e$L"gHuRhY%P51rR>lFHks\*h#epiNuI]C^gA51mJ69mU2c?:),KZL@.\4c&C>m&q@OdOFD7NFA-&\b'_;cKbA/M\g8Z
%4@D%B5C@#l>_K-!eh/Qmrf:7o(@SlMm_;tN.coi2074RN`J7oZ2#)KBlbS4-gVs*.+&e3H];b]%2Z@t#Q$Y<+9_;Z8<k]J%2>\Z'
%n0PB%?_;Y(;O`EGlGDoc2\n>4#7lgmB`D2,=df<Mf)4*iVnX$K=0Go$[;0\eh1%QemD7#hch6=dQ^?<rc)_U*<+)U&o&140[./.p
%rV)'p5t[laM7.m3'ra&PK>YaDdm!-ED_3VYYXjW=lA]!Y0&:k%]`cJWc,-sff%X@!rlO0liSi*Ak3fR"&%S$qCAZ@U&)OsICNdJk
%g6H:(F=hel.d:3"U2',PRQA!n35:['Al#G=oWLd<[LdamfCl-2XW1]<=a>%81+LODD^s03hLC$"!S@`qg@)lO9NP1@YM7=@lW4U7
%bl+oP5;'$KpM\>q*Zj1`2IB58$_3#@JiJLGB"gFM=m,3KIUC$TI6*a&qP.A><^:u==oQ,3FQUQofk64a>>L\=J%E(n34H0iJLtS3
%5<PCjYuC*8EI0g<qDe@sjjI+`$*&aTfR,FRkgu(oWpA2`(n3;8])-ApPi$AhFo(FtnY:_pCMeFaSpB1Tah=OGrN3WtUM\2OF7Rf'
%il7gka0AqE2Xau.V(qrF#*eK-Xf3ZiTD2T>HmY=`d]Z`,2]j&igXr'"rr-I-cM#c\73SmXmBN3bH+*`_qX)GRlJb/%l9/-gs&QSt
%3Cr4=iV*9B@e$J3qjokJUg7+&p%tbmJHs?CWgN%OT<8XF<_cqiH+e9<;jVj=qNst82,h9hH#k\2oY^5@<MM+V0CWh)V7ue8DYSQ)
%:Ss5C=6I&)Y'j$AK\)-?hel]oaUKBq]XLI"X'4iel;[ffIO-e2qYV[7X,lrjDQg-;OW\#EUETX9nuW-q[cCe.Q>]Rfc#%C6g-F[N
%TZG:Re#/6S([j"V2u$Hlc&\?@;L[`\oTe+#-eSLuodLC#\p:f6dnIM^]2QIlr9SR?p@Z[(H1f&9L#U,6YB0N7\`#CEH9dpj:M$#2
%G9>tVYKo??fE8-#rCDf$LB!ctKq.0Vq*49;Y]tk/Vtfj[_]5m`+Z4=jEj;bok?f%_4ru8JaF.0(PQrrclC(/@kE1j*K*kNqdt.H&
%iJW%f"RNd3SsThkL'Z$01MEbp)/MT(/&:R-[9*mekXl.TpXRFdl%K>)bGdc&UO2d$)tG[T;[S.=&`hf0H`r#4Q<C#WResZRYm2A@
%g:uh=N)!/F24`$SO!(VsS/]>>8gQ73m>CqcUdEUm+qmpMg7]&R'^sOh&Z5B-cn;:Trhn5P?M-:5DP6JQZn(E7=*%Y_`l`'hg<(Y]
%94TN\)MMPjagEp8WL=sLWD6*==RN%C*iA;J`GbS(:9D6KiW)r(PB?2EW4Z@P_O0R*1A:j.07t,S<HYEHA6C\Do86a,EN7Hke=cr*
%AK^uFcPgia_AN5ub/f"jKQ]T0^g+U^9n)++s!:q^g037?K.SkAJ!=gpChNHR?>ode8e1%5K?jBLZh!hShVrXKs.X6L?$Z(%`)9mM
%b%!GWFliV^\)WaCe+^/7(N(h;IK.sGD3L<OO.e[imP7D$K0j)(+ANBjb.#m[/T5>ho5rPi,G4JFVm4FIqVK9Oi_916ne5=UUeSG>
%b6P&Efmf18$^8'/bl#qF^Q#C.p=n`Rlb2C=1X!g3]*l*&GHRjYmOV,B<t>.sj7SDA4Hg\L5-=aSGqh8TP!'cIFmUN]Tk,^dZa?jW
%"0(ak^Nht@It$s7rlO-DmsP=NWlJJ4AtH_`"WuIgp?'N$7n53j&"QKU['MTSIia9>`SgBb`Tc[qFufKK!n?N3c'Q\Qo38DYQLAY)
%r'W11_XBL)`lmB$Vpe^?A!]eeNF"2*77H6I+oZrQ`T$e;n%R%`s'bBOgY0@3K3[<'3Jlk6pUYgeYn-7LUYFilguY([OVAM`;>]7Y
%n?=i=i8DHLO3&=OV1r(5KC@m:]soupo@A]-451:Cm^iBi7?oE(IZa=7(?9-I2GNq`bK&BA<,6ac;21e.^=,ruaga4KeH_i:E?)W=
%]Rto.>TT\V"3#$PC\-d12/2+%iqI@%gA+5\l7H2I0,.RZa?8e:I<FMgkKY!cC"e0Bq"q,fXZ*^1Ok!d.05bSWaACsZ/>e)$N7cbZ
%=+?2K?hNF10/kO90'o-V0<V[oNE:].[kHY7eC<g%-aU!_:/bpllooWEJ<LLFAmRW-I_.RhA&J<XFaj@*<rY3`H^P>8XrYHGF>l0V
%I/J]4RJZgU_VJE,*e!qJp$9eO\oI4]p=HWTjS6LFMM(XUU,$(gIhbluiX[2?OPSaFh8q@K4GU^:`jc9iKfujDZ`A6Ze8md/%gK4T
%4aam<gXiZ-:Z$Nqi?Bj.IpP[&^R//Q[.+Coc.$/VrT6GirP4sXFoA,gK]6k=&$TaYIib/":UdOK`)8I"=,Fr>dDEAFHu8`:Rqi*@
%<%Fu>MtaYT?N)[cnn.OseSo^[>PpTh&j).%K<=Qr3Y5*A=kqmQV`/lL]&JLMVKU6n>UDbXdmnFZfU8f3CM%Y`b[IS4_(bihKjMF^
%Ep)<=I.abSp#*`SS"h7T&IhQYLM@[P%_qsQOeQb8fI&'<K@_'+ds%GanLMgd/,%u^hOKKNOpXr*r8->&^[qH]Zkqu7br\-K^OCr/
%NuWA)k,4_0I5b/7jtC=j?Tc-2QFJ0cc0U@Pnfs"gp!LXYRs%G!@8Zop;"jIVhp(fLGJCWUD*;5&0n&fpU*_2[>F,'O)WK,2`UD^`
%?lq1E24qLTfl^KD+0STbI_7VSH15:a5)-a-1m`_-o1rGZ?&\I.Dg-pd2"NlC]^RN-q_Gpo162G*_X7;7-Ss<Fbbp0fQTI,e?Bg@[
%rj_NWXD<0f5.^@`mEE^l)WS)n*+f0Lp$'B9p13=IlT8JADLZN3W7Tq_7,KDr8*6_K4/=gQS)h#*I^Ah:hTn:>>)NX#GH%Ki>aYNh
%E.'PAJGqTtC"<cC%._GWD``oh)1L;^jkl8[fD"#=S_s"GiDL8%KII^25G+J%g!-rrBmtK;&+71,0R`D_bsr`9b&Q<8dCOV2IrfET
%/ol/GA*s#(OcP^t=o7aCinUF027#'QRa:CYQ^Y"crHinfmYb..ghGKpN9CoCDG71Is$VKPrn5N]Q0I2$$?GBEDL:[%dIc86/$&B;
%IK+!Kq:s_[_/6Q.^8^R>YCE!J>(?Kkf"<Mn7sb4$V$f,JA?QcP5C#5)++ITZFq1hDa8r9p;g[utjdE7H+.'^/qX21-Ngup4RurrF
%K:oZ\\I[NnFT9AB/)R#\pD;EKHossUEoF-'\U&OHn_9n@bLFC5T,56@EP0S*b>FBc3aPpX]m60K\bk_oq.XGPjm%OfAKEH-\jI:`
%Ek3t>PO/>@o,'')HtdS<jpV!Fdn>K,0$`?\WButLphbN*/?I(FmHYjrq*)D`c(*%u(;[YfMRCrnah?FZ_/5rig</0*^S^Ha35@H"
%m*8p\[>2cam&t3F:M.k,Mf0Y4I5]^&eQ1l5,uh#X5'&TrQCcRrA78gU5WcZ?q=+amUt">&]L49+O):\42fC<2?bGpfjmgRD&,Cs[
%FmA5_NVSRip3*b%6+gJNU]9?*O(aNl,k$6_=fEP`p--FmhKlp9a8B!8A7pAYk4Y'`q#0^]ilo^)7?4'bPQiUf%Df[&kO*_hJ,8g:
%*V&*G=3Hec$i/BH`Odq00D]"'GF^(4Prj/(ETY*=]lHro0<OYI))4QA05lqo^:]2/*R$`R\qiUQB-c<JIIcsHicKAANB2N,D=PKf
%gGuBWhr(9<TFk.PVt'Pd;0:!Nf5J_3ZsK`HqX(KN/"J7S-\m&,f9^Yng7P"0?WrtLq.t?Hb(1]to5=0?F?06G`'NY#,Piqe?+^b/
%;_MLHS"Y<Q:Z%cagutpGV63!KOSL\t=sulGgSJ75k5+G6L$M6E?XQh'Y.V'8gE3s>BEV+[(gkPYE439][F.\m^\21?$gX]Hq`eHC
%e4ZjkL+I+i=;7>f!(,K?'CR':^P_j;j[Ypb?$Z(=+f5!WU'_tQ(Vc%=9ODE3KXX"qLUP[Xjp*PghH.ks^u!pT]QrPG-1Ao[Tp<Xi
%%e!QWgMGL!\pZ^<jGe&XN`A1m(@U(n(t\SYR\m"RK8m"PlVAV1\u/\B?[]YA+*M7^f+,6"6!;iu5A#*m2Ld+[CARJ:mk?laI)FLI
%/+9[mpKkOX3O=,(VAPk3Wl+Y/h<cGUa(BOP`>uScrRmHZ]N=U^mX55Lk+6Du0D5(MG;Pb3s3CJXgA^-S1Wlh)IJ7;]p&!1Vg"fk6
%eXRX::&-%FT>.;lhH"n%*GT<hNjKN7bgn`<aN$5hP<6MN4A=1>9`I)bp3uPsahd,@3LQ_?&1tuRd[c<_?>moT%Mj5"s7kX9o_d.W
%X5j"'f<6i:5BTP@Sn<.HGM-J0352tG_,pR<gT*JdmBFpIFWTu0V%%+qm?q$7^X8R^^7/our8cou>Pe!UIV2dXer\Xl^2iuDf<pg]
%mpCuYBNc;Ik!*U7RbF93ZN3P.8E*88lP%MXn#t&U>s5].O.RIh/UlFlge"R"rd+GHouPP*qX2s>bLf\'ea8js`a253Jm"X!f<4MM
%q7EPKAsu4[a2gUj7rN,7rUeKspD<"b55FbrIe3QjMm:`A7I]-[[(UTIQK7WXH["krean6MDd-Cn4at'=mJ+lciq0Y'Q#oOBnp#/o
%`ig=fdVM'0q6Qb%Da/R?Z!$n8YdQ=YDZ3.KFh;/*Je@VJ.nn`-Z<XjiE-EH%!F(t55<n!(]f>V(qV^eJUQbX5RV;*W]R;rX5.CB(
%roWpFp%j-JYds7CCM=rF1qC[_NW%s-bZ1]"c/de,U*brRJr.i\I]QVb5JFH`IknprS$0mB\McI_\2X#<B%3(bZbPqaT6+sDLZAt$
%G0;6`)_i3u/>FHdlJcW&@hEuE$QF<QIjie1$ERKQP'5i31\5pBpt\./IH-Z#=@:<=fBs.cDL\(f5i3?h0r3"`U=o>52MCe^pWY)W
%C[X2he$+2gpsFk8#N+3BL1)o.qOrOHA9!LNq;gN]Hhcmr6ZRu(P/2VDH^8pa+k>T&oj_[cIJ`0g`Z5u'Df.47afj1YqUOodo1puT
%A\&=Kp`R%aIrEU$%'b%g=PrKW%u$]kMcW.BfULdPs)O#"9tc*rBDH0Z7$UgpSI?"Bc92&MUPUINP_*ZYlR*L`2D6,<.rBS/ah>Z3
%\)6'0[O)Ph=kN1:jXHnlF$G++?Gdh1P;"!_*8!b;qnJ3[+D'WQr0Qd]Q]eK>BF=/k=ag/uMBH&<^EVS1g#BD0<u)nHL3403T\`rq
%bWiX\WR=f8*+*#S?b="fBaO6cLCW1SGSRpl%?B6B,Y%d0T"arAnml?DY5Um@dg]K:hjI`?fq6r&N8+`)o(pSDl$Hdobgq,6/,B+0
%+(#An"dXA0ms&SX3aQ^N5hs(LD,.anKuL*RL'KH`BlN$GqpsIKgHY&IjG/f8_M-+b4$WHt<\LpHhAm68O)YibCd,=ViR9ZCRp.i'
%J'Vbo-hhl.Y:e&Tb\>2'H]]'GDq5sQgj18"s5+(]*mU2h\?KQ("WrL[R[E8".")`#S29J;jL)W:Y!/fM<o!eAP#?"\fAkg7amHuK
%nU2k<^&CTekXeiF`an80WIra7E3/g6jJJ@4]jEika+O'`PAm>@+2_=:q_`rf8&h(6>@.8Lo@_72nb0fEk"OqnTHLsURt!$5h1qK0
%qebKR?uu!;SUn?'_kqau\+?Q?'g.D+B)fJhPD,'"aKpWt[B$m0^ahVQ5>t\c*NoA<^Kp$N'D[WEi?!o93:FJ@qT[GNM,6foUXC?M
%ll-[h'CIa\UYkR8(-c.'rZD1>D^YI42c%67]RLfE:`&]fUTLlHb$/b[]^A6-,]AfVre\!UhQm]Ar6:#!o;9Kr>]sS^b\5O?l\SmK
%>J(W7[fF[G/IOY&\,!i!AL<#O6(?O_JVo$#MgPT074L,51g,`Tq/*TtaeEVWAX*kU1kWHdNIp<.90U.dO:!"C[*8,-BepuI6[uRj
%#6j.1fdIR41q"gK:HN7[@\JMp]U<=oiuYUQm)q*C9k?^NV6,W3;/m3*>EJA;GVTAb2$JFS+b21ug!g+nQ_d"hs/)qLKn=K6$ghDR
%QhaO4R9Q"1o4Wt>"mZIhc-W?l?@\*e3bU-Wd@nHa`eW>#&?53p,RZ9GqlIDDEJJ^nfE%SM*2WiQfF7%-2\AHA$G8aG8.1i$LhP]Q
%2V3,52T.$R<`$,F<@Vm4fTpEdq$-e&%dKq>qSXjZS/C\m7%ZT1BOmd_O(o#+C317;E`3f6&98]<W4C"=Ug%[NR^W_jI45&F(Om+>
%kp#G06lV:nBdP#aYX,9m9Z25Z[#TGO]N3\MJiUT\ghLj:MY1`60c8#dB(WHS4cU;s'm1.3Z5%'fGam84PZq[&V[6@-f*S7_;J8YX
%DSSRaQW&$;dr`85ibrPTQ`Wsh;N#@R:^`)^21U7i81V&UUp95O,E&(NCh7X`:QRtNd+E$c<6HJc[B(eGVHR;d7FaAW[Ip<+[R>HM
%)OYa&;;S%c'<A^&;6+Q7;X9'hPi*8@[4RJu3pE\>FLT1]JPE;jQ)3:#YG`m@<NAsB?Qc7Md;?!dh8#6*gqnSFdd(QVhPsMcTcbqE
%LjE?*jLdh!C6dco/RJ;&lAXlX4Om[?Bi.8Tn/'3#<chQH<7bYHQkh@J'eB\jP!<>23_WD>]UMq9g(]1JTUHa8b*H9dPEXH=Z^L!m
%n0?U8%n-fJhpf5B=d('Um*kl6dU*p@9oisZIoY!?7F"O]<i[K@*9UmuQ6SEEgeZ`Q[g^f4>78q=9o1ldA2S$-lb75YWYHDui%&Um
%5*O+3S3NoY'6EH,d40urPQkD1bEZURX<2s-SrqNaQ9dq'>=4Tg,Sp\dOF\I'`*QJFaXgq\N$a/OR8Ip.iA"Zr5m<No1@Q]?Jk*V3
%W@%;5;3OQHaA!`j-,c;*bc2Kof(lF.h?7I0j>2Io*"8g?WP-EbBSAsp1ZtqY;jAA&S(FY[<2MQ`d=_Qqe7DR&CE$u@[#RUV4)t5=
%`;=bR9*?YY6&tCEBl8osQR>Y2.<?ATV=057X>&rG#K.'cDNUZ4T#`$D$I1XX=lY?U64G!OSH)PfQqE6n-9#_Y_5*^^_cMgSIpF$X
%%&V.`&uV!0\$g$'6TJI[DqG(L=B.b&:AUri.UA-I7'`Z^L-i^k<j\^,Us9jXbM4n+JHIJMmS-haSnj98K!L7]/8eWY3^5)_mF6bi
%?B]mBoq?UZ=>p42BhdP4>`t.SZ^tkf[L*.BX%'&uK2"d9b6kCk/%D=tnHq.]NXX'\r-T__^_\U\3Y]''c&G_:6"U+8FTXBSS.nBI
%_ok&`AKk<?jf$FW,1dNR[h[eTH9F*OnE<`8M&g,L;<lJ!35!1+Ppf1C'@FU=,Sq@X.N@V8kAj(!8V9l)99-)Y$bZgZ6$BMQ9nstJ
%PR4-s'N")4g)Bb<JK1cm$5%RM)[E2po&rmiP,cbFrAb>7gbmnh&tq]_&bTs1EhRKQD]CUc/"<[Sc6rHmBB2anZDa$#S1Bik#$LYW
%m=n-9HI&YnA1]C11GTq-q.I-Yj1K99M@E'm1!R558n4:4AVH(9ZG/:V9W]J]7$,7_S]dg$o$9'Nq6Z_.f5ITb&ZZAXDAtAI'ahKF
%b>jJ!8f_X[K4J[W\%J^Q[V5NH1u%*J3jKbm.I*6^D'UO<79M*S?k+;,?-B]IjBAB7iOX1uiN3rLJARXh$oq:i6Sbra_J<#8DP^YJ
%9Zt)2l"d;n@_mBf8Hu0U2*(Ih"XZ"5ZF4nl#;`<9P#4!#->R2#h3=kV<b0EX4/(0A6QH9t:cDgGQ*CZ"&&or]'NIkt2B?ZX:O^t[
%Z46\Lg:R]N'+kmePn`B!EAjuG+YbLm69p0FLV5I(6_uSAa,uRLV80GtRFh(4BjIA4M_6nr*d*#<.U"9#N#ic*H#83GX^h[6Xr*l^
%ON`dh!Uq9m%@B^Ls+L^'H-WN"3,R_Hd?%$6&oL^\E)8ek^+<:I.Mt;<h*J<IaqY2]PU5*:Eja!`:rPju8s?Xk[=a55-/eo?5QbYg
%7`:s7>/V/-E2\\!lKn_3/G;VS(^C-NaYaI?DHi!W,O-Zd;j9>JJrULDQ^)Q2U=BK7UkBK6,IrN!X^.U=ih_!f4Lr?u"!&bKbZIIp
%b5qPTqpn&SU-,8fJO>2!Wd*#A=a&4]Nkhk;MkhUR!Ai.XO(=3>ZU8,TBn=+%k"-$)g,;PaWc($Wf.4ktW;n);`#c:iMkYfo83`(V
%NOT>h568lr>,'#0bCV!5#cfr\Fp6Y[T$V/=<B"G*h*TYV=?>RKb&26kk&Ln*adi9^b%;B8#C4F+jroPQ/45GjGsmDoW]=$lM%SW+
%q[C5"V]X#s>BUi0<W]t4jc]+8ASqRma[-k#CLkL*"BZ<4O31;RG-X;4`9,(lDBa6e*,5B"Ao46^,?7g-^FQCO/MA>_JCceKTMi=7
%.$k]Y.YWLl?(24*7H[AH3T82=-gjgrXiq/.$9^Za0u+.X;7OZS/R<#@#lDIlWHdjSq+8i2nXWC4Ei19A9q-tf(MY.tT9Z2dLEkgE
%e)G%;0L8O[I`nKA9qtP"&9:*\.&KF:L,)/\>fL)AL(Hi5fIOr)_0ma_mPY0dWSu64%ElJ\_;(8&&8>cCG+HZ`6jkkNB!f.OWj[fi
%LX`*cfsND![<NKA/5=AiUqh<#a)PgEA.4NY!_T>L0Y*K+iDp7!=mQ`q[`d`-(tU>#2(I*Q)CDC+%5SH*/(2?okOB$6Xg$S;IV(==
%d)NU@Lo2)f.l8'Q]d7jAcl4;*=mTB(V0:OeW<H<bC6Uin#!p/^Kk^l;T88-;[Y;=#=gH_'ETOW@FXc8U=0eX-%1b`X)qD9+o_<`c
%)"fnQrBe3F<tnW;.G8(90X0ORdL&2>LDkht1tHA=pq@hM"?J8p2rh>9h2^[U0.9\Ys8#c0M0Zcd>sP=(.W#tM%H=*$GbGVE)*McT
%TfUC"$>%`sr[9Uuq4hUq6"sqK3l1V):UQY"9/`Fl$bd5OBP<k,9M)"7N0=c<dFdM</!NLo7IsGL$:\3!WW6d:[lsks,->E^':h09
%801XR&\pY,6*B')I-]15q&6t@d>gR[TrO!]Mj!HWa?)&s(URmU;K8i@Q"Y<pep=6e,YM%i][l-XjQZp3!DReIEpQ:`gKeI!=>&/c
%5**u3LT@a7<KcB6P=XeEaQOC)FY.&UffXm;niOt^EO"Z-WHkTQP^P&MO=MmXn?In`q8dO97>HuJ#(gX_#%Yj7^;b"R=OEB>`=T=E
%8]e6IMr^VNUC;7r"9qjlhhiBXY7\^^[UJJX-XV21e27'cQ&$OiO;stBi+pft:"9-8'HCne3nG;ZBLhKBs)'>Q6Ws[+F^#0@>j1#V
%4cjLpEZsWOX+ref#lWQph,+h^D);YF*FU>)#?CYKZ*o+g'8SOlah#ctM.EsJj>AqS9p^iqC=4M-eG4>Gj9:&63C\0C(c)s"p\edL
%A'fVrTt8@N^&@0)XaNR#Ub.ed"I9]QMmJP+.EGf=\u>n0&N%j^;?cNS0M7WoX)/ZT`TKrE@$+uXOkM:)8^eH7niMdbDu;*A%TK&&
%88(_+YZKb!<gtst_]3q=Z0\]]6L'GdeB$P=]/q;j5]b47dO7\e+[=O#'[.4j@$`tg=W8V87&G'l,].B`;gFMfPXRADc.j'XUR$5S
%Zs=@b+/[eV##Q4Q\o\nE@:eQ')i;"t@81Me2/VR>PEE[^:QM$qDDZTRI%jDh2gBPqAiR0H3&MBo!=b2"kSsVYU'Z:\R/BtTNt[>e
%Ganl5;<SFJ*)4`K1WoGsO,D:6[?QKN*a$F9qU9<lBHh\)+I6TJmfTMR2Un"dZnuW9WDGt*9@A1%V4=</$Ar,b;0''brmj-"&64"_
%NG8P&^LiL-K>iiZ`n17rVQE`:WP6t4/^'-^PX(\M1:hZEU`1%Gl<RRh:+0k;Ri\a0HIj>Ri!6M_.PWiJBf)Og;-iPf`hX%Q`Q;5W
%/e'(h$[tRH=$%\I@`;YeVpa'4a4D$5Lo=K%kd_).@N.cUX%./?8L9X`4We'u+G/C;RT!R@cA%&f:C;5I+GuV/6$06V.kqgu#G2Oj
%$;u69/>X+*?#;t3J!!uL`COcS;@+'a"517R&`2c+-lR,BMik!L-F6n:,H)op@uR.t-sVID,(Q@5=(/`,'9oUfV7#!l3iEm`@VOq$
%jg'2OZ2mRU/"8J'_aA2HM4(7i#GaH\(Wu<SY(Ma*a8'HZp=23q)S+1aHCND"5ja]AV"2(`H>a.M/fB(EqK:sLVYi1AF[)l7;Ild4
%9EcR+m)-j=B,-38rR-pChd)mtE7<Y0>G:Rp1sWfRMH3QKc:\2KW_SlE<JCsm]^0kloJ];<dl%>.\"^_`0C-Ua'WV(nMYLtUY4#8.
%k!ra".3R$=lauf18bn&TBBE`Al=t!=U8t!8fV+ac7VP#P2nCOridr+e2UYFo2)OTG%8G,&eAM*PhSB#86)g6&@uM;Po%-G##^P^G
%pL)*KX(B22`jKk`a:iJPTp#Sq)4==M8rENl'!DjS0i\6%Sp)L&C>)>i11Knr`SdQ6VSmQcc/R"4]H#F<D&C.h`$B9l[$dDcakt0B
%.3V5uIKIYP0T@Zc`\\UMIV[@-0*Ob\H,`U>VhJfc7?H'Maf,sl6N6PPk=tY!lZOJ\!8CdJ7`(:bErH)XMp"kb0n'0okguK(,Yd-t
%S'60(#Q=r'Yr(?=$Gr\EU7/_J'+,M2V_r%Y7ZF'p+&0tQ>"PMD3I?%2j,[_>"c_7p7P!-5bDd?!Bko?HDU,cpXVOM=?%@clU5P*K
%YsNk?"ELc^\6>KafM'hTI-]Hq"_aQ(Tb4@Qf^4gP1-+PsePu*VitC(M.mm5D3@mT7<3_QJ.kK[`8^fGKjS$p1Dg@re)1P%]<msTb
%k/7J*BIpkErbU>.*<m+LSD-M^&+bRUb;pg-/r#&?$h@*/Fb\C+'L^\kF;ro6`c*mFdE]l@T26aA+_e3.@+_.aR:>uO6)>\Mr.ref
%_3nMi*;YhbG#E8G3^#"+n3)DL%A0XdH[R]SFj"JuZ+\d<Cp4ea/s1pdjNS,bCE)OO/CNjMGO>gIMkF&)6gJ3"MC_%JN,mZPRTtQ3
%<TU7"[]9(\3<buLj0m>8OF9f;"RD>XR1!MFCJ4CNTes;;=tCG4W7A0]LmE#`I:!+\Z,a@P%RtEh3jnJ$YmOkl0t)TI"^[h.PgbPt
%7`!`E_IqlU1rkojc8^/Op?3iL9Xd\%E;_b;;$I9Fii`'aZJ?0jGhBIaUs:`nd@3)#&B[G.>KQSCQ\DCRa0QnLUBTZ^5p/k9]IViJ
%jAV+P,q&"$$)s0&>"!M=-?l=O_pX,@ElQp.XpDZ]N)M[:a8jjN2h$]%SD+&@?sm:q,RpP(M>\u#:P'cL3IB9^RZb<oBGb:Fn?>4^
%[7)LOnQV1;Vq@H8.#tJ$TL[EuAgJIoCoTcun`D'J_q77CBV'G7-F##B1F%&W,iq&L/WWA1gZ7*)/T4_B3&>/fM63*gZq9VB)X7Wc
%`4ET?8?JgN;XF+aE0:S0(iDndde1\a=)8=\2stZn`0Q)ceC&A5nnL%+K,c=SS,nn+[]sWp-+OM4XS`mO@RbZ!8#DV-@4jli.B>,b
%Tc%[Oju(K;e:YbMOCR%7Q\;p(EFX,?BHH,aU^4'O:u=Cu-#ld+=&0e9Z:7TABNc$kJM]ASZ=(Y&>JT7YV'qLrEmc882b:e<pPEut
%H6(b9f_]&olJ1<%lI_hFA8"m$Lm8nCZ97#aYIBKup1<Ufnn'EJ3P=),h-<t`&qfrsQ;=;q3[d=^DRbjJ`X+E&9I"4h.Hr`9H+9R;
%SgmLf7ii5>riM*V7J!_u'@p?kbgTWtM[m.*Fa7Lh*\_V\$4NXh$&3!pVg;d(%U2mb[S!PrLm`'/=>ij4]VIt#:2/KS&n_D<^D+ut
%;<!>:4coP/*Z_4`l%tPiWj*k2EF]I>Qlrhj]V@b^M0W\8@U7WSba?Sk+qn'd#0i76Q.;&D@??,cPJ6^H+Cq"40*JHr\c#n_Ws[js
%!.QPIE"2gUqFAge-gtG/:>`?bJFWoP7u)\RXo]nDW-nZpV]rqkBBUd\fC@XP*D5Bk_Z2Sa*5Ys^*VVW8];uVMbE+8WWEC5fgWQlo
%jm<ef*MoCPW,G@q\SPc6O]fSrnO>Sj2jB+iQs^M@j0_!&Go!)r!kFe".rr@=EAtZ]/4,9NHJ?U+C9X./QXsc3nF4J\Tc1fjacoq.
%l?Qf[!h"+VJX+;$R9</A[h9);;/FH[p3!m6*.+^qEkb<+7r0d-`/+k^EOQD2<,CUB]W/3]:@l]UEfg251$Iuo,*O+,,;K)'9D0]Z
%*p/75Ma%`d-R[';DW6n4g?QtJH)^0&3c>j+5$NZpEiK8>WjROZ,'_Hi2I!"oDT&!0PL6dI,!+#C)U[kCoW@9G.EZ#0M7K`LUP.-q
%DV37m!!1(ePX`qO"!Xe-9,H2<QZ:Y]RB$nV.1@RW+Ub]CUHJ>,V;>$3]Z.;!=`<)GV_MI<e(sk_kj:mEnR?)agquf.`i'2B7]WUk
%(p[V5>%sS_pMee?C^SpcN<#9Jc<s[iV'`FbZ=3t\h%WO:k/0ZCU:8T6EAE/Ud)?QZ$-dOX?=-[uP[bW?[7h+>+GX:cCH8>d]a%)q
%LD*HC:!";jb/Vb"5T4/QM*D`Q0C2-Nd5@?T13$L1e!<SB/6hPDmED$'nD#de?;"DDg7LIc8[t_+K8.d.).D?<PVdc^KW"LCPne)*
%LUl;:?Dd3UK(H:H_[R5PPr!ujYi&];bCM[[i0.R8Rs5$+RNYf>E+7c*b7r1s"'5`N$(7jU(kT&Dkg58G[rE!1"BV"n8^;6a-,gs;
%Br/9J%aNBlUlpZIRg<g3<b7)%nnBuR33Pe2>[,=LL<RVffiAgD?`[O+fPl`i[$Xh3[MOo[\1$[kblQBWWQrK">epLmHF&u9Cf+u?
%2bZBo*4p_.k,@']*u]RI.g:sYYb-o3/:(sqOGe17"-OOKhs@l%*5n>;I"30mI:N5GgbbR5!003OL/dIBSC";s\LQ82d7Ifm-X<2q
%9Jq-H8/@E?W>2t8&f`6AC$O.qi[(*Sb%fI9fL72kfL6L04q'>%"$%c';dutbH3<7+>;B5N6%dYa=[F`-]&%s,"p;EgN7%@!/6g(.
%8)kO9%8m1o1d&p-kH9r,"TB.#80ajg`:"m1?KZLBEY,].o-Zsn6%`F_/0Uo6/WG8b"p;EgN7%@ENTS3W\V-j=n@"h3Bm(.-O\Lr&
%4D=MONgn8G'i>7bR,!^"!"hQ9aG?X*bdqphW7"'"Y0gKgX@=`*H/=2\`$1r@<1mkUdL,o5[Spt!@L:_l[?CY0W.n*#GSDc^jQOL\
%Y;#>K7#N4?(%6Q$;AKXnPTp^D(m$mdjglS?TVR!r=9MTg!=YJe;N^p?G4oT?8LD-5ae!&i<WkUb*&e<T&ftcC'"+H.TZEWi\LXpK
%MWD:^)eA,cH9L>dqmOa,>1+\Jeg;OV+^M9<4bJl%BZ=_4Q#:9<+LB'ZU\6&a4GjmhY*"^fM$h[9.?o1dRS`(TgJb7;jSYm4k,"jr
%fjiW):JO3UhM;@?,Iu0[dJ!:tLtEW;;llR)&0s(>1cTQqWtZOS6!A@uODkd?Ws>n.Os?t<8E%W\1iHWqLKnA?;l3P\j&[:a>(h""
%&ImMaE]0=rP,=751;[$1-Q/BJbDNcN4c0H/dV_6t;//Kl,(M8>C(lJh9dU_9851eZ`[NnZ*ss4>hDO%b;hu2W6p5UR>%k`c;u[@d
%fDanbgs(=@HFUp\etn_Q$oEsT]j7,fRL4P2%<'p'liA4f,2(_YE7-Pk8K*VfhJKZ&.,"$r/IGLi\/&^<>fMF`Z0BVYF4e9XAPCiI
%Yo9u<]!lI[8)\C"i[o-*HFF(7,:8\e!^U?TYL78rh2JiqXO4NYX=7fs)(_1.bACX*5&:UB-uKE.e85S/EfQh7cD0OU*8(e/Q6Mbd
%X6$5HG%:SQmY&PK=_[5I1h9D?qqBqJ0oEs*$2o!2Wl,^Al2_Rc$n^j:4'<<*)O9tVG62]!m&$^S%g?L5bhnXO/"6iLif9l=6>r."
%h"miT;J.mo;4=KfA8kqiQ$R6DK`P7UmT:B73+j_$9;8M%)OG\Gdisu>V]hRq%a#@d!&lK"3WfM&aOK?9)-Y/t<k+;ROCG;b6H0ai
%)H#:c6Hl)G-.qD>`'FqD+hbRp,(td3-CVMXQ>Ls:%7F2uY>mc-MC"fN3hHb].,*,2Y#W"'_IA5]'!^_Q[BcS5cS8;Pb/GkZRb+r?
%`G[M8;hJJAjNN1A]W1XA1$^%[Z>SEm@-,\XLJ.D!K\P3Q-\I67R\icCaQjS2P/^8h.%lqP>>hfm]K9XYS_LSg%O8!/-SCqJI@G4i
%*2"Y$XVXq=<.3YbWY)9+l9gaY)VWr,N_>-Omse1(TiR^aC\^M8eX_^[8#>QU4=%@7iJo^\Qu:#iW3`o?i\Z-D$-eXn0q(1@.sEg,
%D9s]C.Oth?(@LZebZ;3/Um:qJ2kR2^#0BeW<7t\5Kq<+'MourrXZF1J6G9R1IB%M`'bCLc'<_B\%gRf(J#-(WD*ScV=<uCb@P"Om
%!lW;CYaD/m96<iU&HC7EDXU]GEnZPS+=kc=q[0@rhH(O/PP,_&EA)b2E:=TA1R,)9:c/k""cZ]U;Uf:*L+:uM.DCCcPcp`Vmjff,
%hH(QU>kn`79AbRDZ`G+JgXlo_9nu9>d\j_X=inU?Vn=QIg`1doVn@P+lf*qMiThsHFg?+"7OK*Y?=!Ci='%'dfm`@VQ\JsIY=@>&
%Y=L9Lq'ZA/*<ZRV_:T0Gc:bW*SFb0lM<DOY#i.Ko/SIBIW?+q.,bH#lOpMk+_3ppSq4*e+Zk+GHc?X,E^4Sp5_9G\+2Cao,hHc+-
%X*@P&-JEG(XUe.M73br;rEqCZ,Lq5Wdhkik%TC)f;,%("27`"T(JP_cQ,9coatoT!RDuOL9l<kS)g!YLeZt$Q=2gS3*ZZT+KhE`H
%@PIQ=1_^8=ScY0j>]%/&_QB*&3u#]-36^L^e&YZVMUV<k6>UX+W`m%]VQ_ZJE\Y(Sj:1n[YUjA3bb;oW`P,G'[l7Do[W<?jPdnk%
%.+glSN>mXf$B_ZD<,q'UQ2"jNC!rAJdK)d!hOS"T'`(Zq@4V+C^8XEX]=Lj25:A@P.gUkYKmkjV3'@lbGJN;j@/gm%U/'V%f`7(:
%gr.$C5+(u)W#-)VS%''.,D&O]EP$fWVkB&8K#W\@Mm^sVN,l%PA+4kkrRMk(3TiYKk!I>,Ig%;ACs!?@m1=Hf](<e]>b`)1$8$2d
%"`eueK6O8A[<'%*oQ5t-93KU2KjK./Q@g1.h&.-X@=fE,[M^D+qGB[)#`9%*/sL=>bh%`B9DQT&_\=DHa4"*(qU%i"?S,\H]n,c.
%Z,'/R\7V7UA;A]f_Z[n8[LQ9opS3k$+7$G81Loa+F9V$e33?l;XB$`KR$4=*ZCN09<^G6.\s3*.1lB2U1`Ila`lN:5Wa64<qdiEi
%'VqF/o%Y;..7hu.dD0-8(Rd)4hIMR5Y+3hWdP,^lIRKmEQ"qXC3q=JG'NYl8+Ln)<VT@^3WX`)O=r5r9M]5[#nt&T%(Em(f69Ts`
%>\qDNH_Z(]:Wse(ehMCO4M0a0Wc9sdq:7==VSnk=Vu?3J/_9,/Q4af3R\X2UPlilIB`U^<-SS*@MAg[73jh"^?.RJr4^V#C_G_Cj
%XZ2ZF7a<e;]OY&/;G3FC'!l6NNs":L#Vn]$)WaqkU)H==8Lm7MZ>SKQ';&R8"l+Fi/f&5-TF7)!A\$"'iXA'T\r>1!0,qH<.me;d
%BftZAL[@ktTFmOV/h=.<;7_)>VC4E3kOPi2-;,F?6h%7#^0ndLHH@9sMGlAij9.0g.me*rOQKLkX32Ya.jmAU>9$LW.0G--:jjDo
%#"#@Wa3QENC:[1fSH(!K4FH%I.K[^c&`mD9\UZ/0-''BFK6nMPgdaJ#..j9l!ZYIZJr:ug>p1sK;fnD"RWP@PO/<ZklX"MZjI$Cc
%n]FKMdH%Mc[/u+%jLAfk$X!6or"p-7A/D'i&>/\6"d*;`Qeh--;4NT1'r>B?#F%)TgC!/5g'd2C;NE]3hs1WG+W+`TbK\\."q3lX
%DqX(Wd2=P7W(b?G&g6J4`\#.@0.?D(orVUHR.`mE-?k&d2"H1Y\/]m0&Ei2/_k\j:b'9L@;S[t4\1?EW(\?sT6RNT'PjfU7VB[PV
%^(f.Ag)88%T??!i3X3PQTon*[@VlF/o9,rbC5:3V'RoW\2_;=q7Yltc,BjL<nR<!B_[K]40(*H4>RX0_=1Rgc_g7\+G#RfLg1cc!
%<^f<LXh,r7TFKoZ2?Y;Q"q@P47F4R.<E!u:oIq?bV$;BSSb*V""o#&Uh>W>22?LDZfU_6o8!Oh)%=k>C)@V<L1S?/gUIp8uZT^4n
%c-YI!Zst5Qr`b#&#,PD5.>T"]L;]'ZFOOtVC2fE>WS:CW)WZ_+,M"B<WT\,;SB%<[*:g0Bjf;R/j<6g+mVWM*.+iLo3C.BDj-7VW
%NY%u<BPlSf1S9-Gc*&Cg1+FUce;#1+p(fmD[@9(lTq03&5./L5=?pT.=B]"=Z11r,+%$Ab&a/>Y(QB>YAO2N$%/"SB"qdtZF;fiP
%7+NGC94dG:Ut5^&I^D1PiD<eHDd-moE!R1&/&,i1UcB\bU@/+WR)=K>El::7'\hl?,>\of-$lh,,>%DSM?NF]8O!_f;U@D<WZOqR
%J1NL!mo^U>l3PC$XMKB51F+6s\u:$\@77LlCKd(D1CdD#%3]RIa7c:NU+$HJW7#b+=Wa(>aLAZ$mAO!R<UNO&3u0g<_#eB58XbkL
%mdQ=56bR._9^Le`odkVr)'0Il#M'T[U+O-QdA7aYbs?/558m_fS(rloT6N1)eM;%$Pe**B?;r_9)fLW]+,_H[YlA!nj3Y.V,Q&&K
%[R>"V[RHY9*>RY1rI!/bY%Rn*d0:.LMAD;-7-MUIehHDp.d,iJicin?gh+es<'CH8?u*-7P8D<$2-*"&YL/f_R9PXd'c3(O%`i)A
%,XU-HEQ%Y.\m4q6)]MS,d(EE12,?,X3.hg,jZNF_StCCFC2`.uN5HgDNl!q2'DTp>ACmU)/m=QKI^OR/79Y`Y^,#]A3@uRA9$T&$
%O=-VeP&"BUe2d/7FRQ<S$DccFqI2a\*\#f.Ni4d[STKq*XP)Or2n>h"$t?!;anuf$dL6abKL1%EPXL`_Wj7a=]!fD^l<-7cob8#q
%<7MVNA;UIV1]gn@dE8S=\NAuc%Lo>DM568[M7$J=$/.u_U\_(/Thprs`U4*oQb+bHWT8.)[)&>?,6B:Ta=n;ij%H+cd="[ZQ)K&t
%;A&`;'Z*I:NMVnR0jZ]89EH[A#q0^E:cgA#]'&q23Y])bKr7X*[R<U%P]BQLK;4^%1e%!9*Yffo`KetScM6RCbYJTk%p)9:^s^"J
%'FHWEpMC(S0IUr`Q)g8K!*piT`aHKAapZ\K\h:,G$CM06m87PV)hpa*Rb[Zoq#./>Sqr-$)GVr%gV=Bn'2I/#,)0U?Otf>!ct5RO
%,gZbi@9\p$9T:tW0Pi2k2CXH?_KhIsL`bkMP!TcBe_jo+W[N:FdUW[9e_Q!)S_bhEd11kV26%Qd\5UP)LJ6>f9sg(R<&)7a^8;\+
%-TcK;a%$?OfFpD3;Q_i+LT`1?=eL'M?dp/o3+e[QLn2-tDc:'K0p^;4E3'NS`d&!.SGTo0pc'N'!P^e8'&o7g,*\+[Lt6T+Vh#KN
%)i,%1De*:0b-eTiV@V$4r$Y>.?=76g$BpH,Hr^iW]<`h!Ob91[0BEIT-s4$=6q%U3R93D`H=`/B_>=`\+3t3$i_bD!lLiCuOOa\u
%3l,4<.HU>t&g&19O_H(bY7.WF=7SV6l4BITi-RRrY=8Ea&AB_PGJ@fBaOc1]JQg/OOB`dk\lYoV6eI(fX"#0r9pPNTd/4oHA@@>.
%bniPHY:=J/MY*Wh[L&n^"Cm_W#\`>QYnJ_P"P"jLaqg<jnGQ4hIE6U^`NSeu(`a%`F%oRVYL^rUNOs`iTU5rYM*JOm+QFVqG?aht
%M[#$%NH;5kI$$:\;&/N/DYUs:g)\ei&^f-j*\/9`E5*>s'eGOG]d2[:@Kn"A/pm.L3H=Ul10d,_f1+kX?-lqQ$O<t[#oL*$#m[Sj
%dk;U#!H$MP[=oepg?Z1-V:N<MZT[1N0C6M*5Y@C/bu.l-LeokS7't'I6_?`8\RZ&,6hNh\:_?_Y%T_VNLOu'$mpns!P-F=:1F4SM
%D%<npFY-p#C5aTEiT.4:US4?3Ro;aY@;K.no@-d/"^dGMWDm/+\JsC7G6]BN.1ruYljt@NH#4J'AS'+=XIN$%FgT^q:fYF%9a&/K
%l\^\7M<D9nF;UNnDNlJ:*%kdi$aFW^g49On0Qen15mS2$;,+k;=REEF392[!QBg3E#j<s.Pr:&urMZI;Q%4$q@[l[AoD+]0j,!!O
%Bih;Fm;$d&\#[s.m3[k-i`MnSFc&LM3ne1[0-7HC;DI`I"h1rMY+n@>#tf)(iH"<"Kmluu^l#kuAkQ4X(:[<e6&,cH81P&GBNjB:
%^N3@]Y$%%5*c_Pqj#Xl4?]s@ag[a.g$F-8bE&N[k^T6;p_6=;A'6ZW%FCWsTeo\#JPMm4Q$Y@j'<sU/^j>bN7L`LH$F%FXbM_DUa
%(X<K%]u+0f^;<>\T]-\l"bXN>b7f+",$1-J&mqZoIIU3Dj'j+@*)V<a.WMlXYa=_G^M+MWIsejccZk-VG>Mhs&WEbmMG=AWL=K]F
%Jpk"6/0)s!&5$8!j6qur6fW`\KZ"]eVT^FSotiaY=#GC7gc91;c-""i,mhnC<k?aN*BIcnDhB^\c#88eo/7[>N6;Op-uAfa7^DPe
%R>:Lc,Ng,HDuo]L'FoNCOH.@Tb??8FN$4eSAqU@M)X`c-^+O!L09BVR)+@!8!AZA0l=Iu]D0HN+.(I/0T?hDq_s3JEW\T9J-H7<4
%j:bS(J5<]L5/H5uNs'Vbh[<#FBuT@QYhGW/T*p-aYIjWpBh5o75(U+&#8.@,hZOHDZ'W#AKu81u"A;o7@<Vm(6IKj2b.c#3bOAJI
%g`#`H:&\=&QQr7M^hK.hE27[dS/<)M@m<"\.<4dR2P"(K$*O33b/8lImK1pX'7PPPdhE,TmabGb_c[RO]094]9=D]%ee!aKVp$Ch
%"/9Q@?sk]#dnL]oot&_uaHjE@T4%$Ql)X6K;0f3\`)!U*-4tD[a_Qe%4@rFp4C^^[E!Oa3;63T6jeJ]OYXC#S%X]ahYrs<`?QVE_
%QY3i,dlj*3O38iRUJ7,l]?tn5(uU0K-;P'Q0n`a8D;-'Q!DWk$QHj@A`/BB#q)GB0%iItG>k3HA%Loe?Y4E78FRKq0PB-k.DG;+2
%c6\WmBBT,EQ7*a`::6q4fmL9XSp5W8J[OlD6k["oX9*5Od@0,!SVH,13fU]aF9t+N<$2-]IB%oicYGTt$Y$5Qg6%sl:r@D$WAEnD
%>Yp2Q$*N(DXW?%(7QV8Bh.Aeb)T`'Kkhml@6eurG=HOXfj[LEn^\5]rrAdkiZ`*N_47&k"<&4k6&P\9NU&sV46#!oKrb,ECNFi@-
%JNna`,ar*pHJsm/*-_@[-3<Qia41Tql5\n4\A1R@eR^GM$2$i"$p<s.1ssMEDP3Tmo"9.W(+4tZQXbgb(a]rV.2/aj5=J#(E?^=K
%-Z`US4Mr^18kGD8P^6&%@CgUc#=\eeeY(<uCEoXBdk`)JO`9,iY$bsJRJ?rT4Jc^B&P[rW7&<KO#u0$Sk.[?!c'+p2d^Gl@8Lc8'
%9nWVDMI^DIB\VS&QfDpb=dCFY/&M.Vc5[A3b-ceWDK:bPh&SWj:A#Yb7LnTs=M7'oE0,'C\oj?pNe(,(7N4AS932sY/;$Z;b8Xas
%pli`RYR)Q+F`[&QFnrL,^Z!P\d/cq4D;ek9mUpG525=S5AT($>Pl`?$1:_F,e]Bo$fWe2m?rs#&]Klp*inh]1\ohQpl!?Z7?H5T#
%GNiHd_?OQhSH$fg8NA$HpdHm]A0nR9P?,cDaYR16aU&RM,"Poa==+Q0n^JOTgpYiZ?DAq.kRNT*@R=)?pXtl'HFdRN*u"-q)Jt!3
%:%DK/D7CgUUX#F[EQZ1i2QGlIDN5gKbRWD6BG2e.7mrJ`J=*_gaKLN^</mms:Qq8KhK&!nW@*qR9;ekhB*+So_'7*1PY,KCPH$Eg
%bF4VIjuL/X9D(WeP'0;Op2$D#1a#a=P\%#4!D1Va=K6[n-GVo\hGn[<.\hAqj6n"Hr=H60,p&%O)[Io&(hG-WKmG;\*o`u?Iso)T
%f-]"gp.7N)$&[OLKBlh=H[]_$H_S;Mp7t4H`0ia\@_Bk1,\noCQl;=Za"aR)aPEE-r)/D]$DCPX:@;P4/iXa5VMQ)'YtF>V.XQE-
%W\Rn`-llMhN4l/:&_01,ir]$[?$-\IE+BZI^5BiqN1ubohF>S+D^0UoI.=1o5P%dPBPjg.@01LFKnfbiIT2O#r`t8+\43&/WTE9p
%?+5K/Dh<>'YYlMpOK42,U/%sehW9mMZ\PeA^q!F%,k_DGaf6ibO=[%%_a:UJ6AW'Ea9=,s=i#Y\:JeH1[+TM(',4q659hI@_%lA8
%<fKHQijU)$aSG7JKlpo=@Br=i'_N0f2sgld%U4/CEM%+[MjEpUL*in(6nTN]N!>HM4X1F)[lu1]1m-f&GBo>sQR=t">Zb+L.i9>Q
%1YhgQ=cX=of%(imQXi/>35Tpl#!#kUA6$_"*kHNUq&.U$0oe\b4Opl/68E"Am0X>^7Zt#BUMWd@8MO:>PZ1%LaFsj2k-gPX]rfoA
%LaC7o(hXd=Ii_-)%C"$Ga5ljG,s86&E%"t<"%e1mU'\&51ltZG)JOQEN]F/1Oh<%-fYdUY(5S"o7$u4kS,6.379+F`Cs1?tYWs6^
%E+Aj"VMH+madg)Wb!"l]OM!BFMq6bA#Drl:FXoGU)(ESfN4-B7K\Xn.VN8_m7l?q$<@F=KPD:sk)+WU"QH1AhQLEqe"DdQ,PH#Yc
%D33LI<^dB\i<=f?9#MA$^nmbB=u4n#?G41C6oi#<7fi,OPRO\F5N_?AU^d+,!+*)V[jK'L\_pN.7XtqWP;8'u8MGg"M6>ZE1,a+D
%J<SP`d8oZDe0H9)e?7`FBI"H71tqXkEti\T"F%d9/0m)"_Pl-@,Rgu`RkhfXjs'0;%V_)&i=Y2ljt3T+EE,FX=qXAQ,KY`f[0Keg
%)G$k4NO6BK$N"br=Q_f>s8).E=XuM[5pf57KVB"97+=c[%4IgBBdtCD<I$1ZD;i[)I#=T>)bIGj$fC_<q,!/+mt,nBa"HinTp<:&
%J^8C4)R#6EK.#tA2\&0Pi7/Nj'gi_SKm*UWhNodE$Kk^a[h1L'+g8tLc<'L<<P9I5DZbWc?u-$RU;2$SeR!ndn:K5]I-Y<A'XDER
%.7>?=bnDA;-rG%JN4]YFNJ!T;XR*#[$IT!\7KaKln<U53ZkNS!T#t1CJR%R$&RCJ`)j5<d]]@CCc;TIX+?d\7pB`fQ5m2.3U`WoO
%;iLm!nt<F^chg#t+\*pq:LhaBTIntm1]<tY9!u#J%8CEE=LVZ+$'SVu+K5,#?WER"OY>Zqi:k?^Z!]20e*_QSDB+9QUDCmp;@6o1
%M[,9"%UW^B/VVR*IP`sLAA`UXn\J"?gk]6u1sEC%8arcJ;R@OrEbtQgOFE/G.]R_<Y/'0fh<B!+[F_c+&@_)9Fnbc`lCtDm[Ak=u
%glj_Z*Ng+D$H3;Zo35(iHA&+\;l4%jJXUEM]GF9=V/QGPDD!=+n"qL\Fg>e5jP1,I".\i#K2/NTdfLXI&-u3S"A'EJV%0n32U72t
%K=$A#fIUXhEbGYSgr>5=.e,a=3gI+C;i:kMj$KCe8&9H\5R<_Z_f>YU"E&0kIq:*8YeY$Lf%#?M2hg1d+u/g(`9At[Jk@O<VR30;
%?NF7J9?)1o>YlC1BPMC^_5UZ_U^]?fm'Y4W6pc!Z<Gm7NU-7?lZ@)BbgN[6:cO$dq-V!2TK"J[=p\S"j_)bPY'j7Bq0Q88[3^).^
%k*;4r,o!`S@9QXIO/$Hg#aZ\`'JIm7j:#aVC?<=Z*mKo5"eR_J<@]9sPr+mk6(==?LoO<\E'$?lNrtU7E@%":RR)Y-&Z#3e7jA2N
%ObrD[aRui6*695W9i4!nY]TuM>-@0"'f^tRF+Wh7O3-^SKTh4lAg9aXlC(EN(38,q;66#9&_+<Ia+Q_FEq'dHP'fd)Asie+d3q3'
%%ZpFj<6O6ai.Z\&&ZP.m#bc@SAh0i$]1F50RPmlaW1oq^j%ae'PhT$Cc4l@t<XI8Hs/`iP3j]XR?^#O>ol(t="U2acHkh%m75W3I
%`R3C"(S#FK<Y>&MWpZs?6W1`-"r-OSEMS7VDWP%%NQ*TWQ&O%/T`3e4rghUtdY;a'Okm@mQmbO18R:i&%);ME/&%:J0V]L\?'[!!
%,"ekde$rhd'ac5H5qWu,?kcS1QRYGI'Qd='cN=810$d*=_?_d:.pMOG_DhBrYj3<>>V<+B2'ta`Y^"L.mP'Wk.3hbrXA-k"7>_9j
%qDQQ:0keS'E:,WJ1jRr_[0X,0lf:5?3MOkQ>6O-@;93u[ah>_;CKb"ETpkBt%pG87NuDu>3*qB\"*`44nDKuHSsEUm(!<CeJbK>]
%Hm7JG!i3mmeu$WNo$AUS=T5&RHB]s\mAeD<AbjE=[%a4)M8PYWi-Z`lL^IGBU!P#W-%@46rJctOc*@%?<qJnU8j8^4-qdPZQZY>O
%b!TfO.@)B_<j$F<j;?63Nhr_&HG(NL$``[)P(A4eKY$C$&s"BJKV*tCj;a&Od#TX`>DYXC'e2;<MCVYg<YYDX:5(Q)>rn^A=/Sn=
%UApLW+:btEJKbbhZXsW/8I@I,;W(\S,A;cm`11:scugP?d"fc@(%T'c:]-Xe5P<S7)CraCN`F18'QZEZ_i/U'J/@[[n\?g4<_`be
%;S-r2J0nmHiB+@KN2XQ1Dg'lUVs[G`nk9D)>te)AD4</37UF@\p@9n"q]\l0(#Q*"Q0GYRo&K77QQ'9ijh*&(NS/DWW=]].9Gf&f
%?$;HfF)bN?6!k&+]Q)niJDsmp\ur\SG2idt>dYR`^6Ni`b#bbP!I#JKMAcUTX:'!+Y]()l&Q84dhoP+5]*X@KSo%_;ZLIH1Q7(8;
%%Z68</;B+R+e_cV0+t*0hRbD1+W9D#4<g[,G*0qeg%qddE\GHWfPcPNa;_m7Y"*e.Th:9D1+i&o(='h-_&];p%#`-9[X@aoSpN3G
%\<_*_;%u%G<Bj'omSPBjd?MB0Xu6l;#P9R;KCSsF#NYC4G#^NjT-&*jUPDD-`P]k2*Mt6t#5=:&`fI[B#WCj3)8,!u)]cjF3A38A
%iJMbWNr7HX:C:S1cLZl0Q.Acj8h8C]V%l!4Jl_QEW&,?U/@9pGI`>'ubdG*G"fUO)9%:XXJBm+Xs/62nVd.B<iS=8bQS9!\T:/!R
%V:F<4R[^fSJX3g*OAN*!(JLN_$<seC8q[aQ,<+%=C-E9*AKO8t@'@c^*SWk)fE?0s#S2:"oUFS%J!='&3sdk\dEAh'IkE3K0<"MV
%$RB\DEhhV&coQjGC7?h/2&O3cQroi`)Mc9K2nl_c=6(E%`OI.DIP=4m'Mi5c\@>Njm73B8W^3T-b/h[Nl\5T'09T"BjI!K9EM+(U
%.pgdD&FPhrB-5H/B7+ko(G0BI"1]5sPt19>;;W_XfG8CEgJeK@0%kD`;des2Ult<)m:/E3iGo<O4r2[3*\!%6<L64i`h6KDTsai4
%WX'oQ5>@nQ%)O_i2B1U!U.Sr#O'd$Q.hn@uhmt1na.\At`E,9m6o@PH\14XQ]=9?PpA'BL#\q6HqgL@:Ra'r2_.5X]=Br@8<8,tL
%C0(0B5&Wq1MlR9OM.AO`CG!9//_Q+AGZUuGSZV)2BRF)beo*7XL21CqXZ)'PnT=u>@"fPu)]s^NDR>"[Z.Gr/NE5+l&WcU"CEFFQ
%"[b*DDR=/^g5V,e;4Gs*KRP^\$/3_fR[H/&)dJ>+k#N;Z&@&@f['(W)KRio5?]g6e4JE,p+Z>-g\;fgaJYc5QJH`![N=5FN^6HGK
%Ei/5?@%#_U40Ap"2l+tC=Ji7^9W6g_144C72@eaG'oL/5['5#`K)G=dgm/!t7H=,@rVi(e/QVXms,(>U:84ooqc=,]qc=C%qcB`G
%R_lU@]S!&S\;-nX[u1E`n11K<LMPuMQ(;bCLq.6c6tKO.jMkIV"Le5?DVW2dHs`_Fk;TYBPdFP2@\F,=Q7:>p[m26L"E232-Lln2
%G=GRlrT-a)%E2$mL&+LpX]00OX%3'<qr6K;&J@i,2feE"nTL+gr$)oTeIkB)<G6I7m)+83S9MCK"h#-X<%Ke>42sfq=T13GNflrj
%])+Z<W>S6YX-lCrmdQr5\L7c;>=e'HX?o<pD0YI1h\qEl;c$757@OX(E06R5q>ERsd]a#d6R+P6E^6LAn!r.V>r2dhfE*'\Xl`.A
%3@)_u3;1Ej2H3:o@MfL>g9J1=Nd-\\_Z[*I^q<#0U8(uE30KVe=hTQ:#=#D+\B>GBZqflU,\)iT?%Xt6j;r=eX?j`9r@/5XVb@R.
%Mo7>0Fkeuuio$+"W$T/87RE[84`O_Zj0!e$)[OkqaNAZ0r;hLp3u]LUDP"Zkm^fK)W%)Zjp@0%WTql0@k.K6+(W'F\(u7k*\lR!5
%Wf/R5:aKJ&JqpA.-ChO,Sl8_q<pMLtWKnl2V9#*Z=lTuF_p9[O:.?Pl^m%;de0D=QhQ#n[:_9d"bDMQtP!LYtMN'/ab1t'Q$jr($
%m;6Dp>::Mq9+@lZUsMa"?J@9+'WQnO6@%WihoEHrn_FnR"T5,XYL8Q^ZgO+gfY6De00\&"JVkJf-akN[#H`n_.E@ld_5`ZV0IM-C
%<)K]-(gB39jBWoHmUbWQN&;8@F"jb9;8.XHme*O2csHsq*Xac-+u(.b9^pK)G3fHUR%eggaJ"JX58kte,sNO>YE1n[7G=MNKpXh_
%W[RM7Ob.Xs8agZ7S+"/:\eTNJXg!@"EG2/pO"(K@Z5diC`mNR>%LGPO!DP)_/^GII'`([$Tk?tKo5<`2TW7;A&<3^8;\])UZqKEi
%\k=8^h5(HYSYmn.UM6(7+*<hn-=?9f`k"efW]Mk3kXR^?)Lb5g'N5VWT@5D%B[V0`F<>hc/nO'>aIZ7nAO$n8A"'kJN>24d73QMe
%Ke&0/)deePBNh+GP1GBs!el)&;+N2giIBK@Ft*;t*Z_+k%&dqKrFi!g<`mjllalC[2j\i4R%absXtJrnBVa#(V86Ia>oKhuma?pV
%cAND5d8$%.ii5WdC"9$leX[L*oV7s0AHRc(9@BZ![-ghGWm4NWqU)ZCa[";6`cSdKP1Ep=:t9iK69dN>9E2Wt/OHlb*aY+Qm1l6/
%(IukbGWj!Ta;eh$=ko:Y%KmPL/O/$mTR&l*OB4[^MME8Bi]:t`2jk/@=q'jLM8kZR;=V?;ALH9/ckpX%!UFbD'j/(`OZ[<^mbhl0
%_ZE_'\E#tO*bdIo!'V;f^71/XpIK'P-GEX9T@%@g/5,$[*S.JUY[:I'68s]:ruZ<#dqd^@A-qpknirXV(#iPs^[5X`mOeeP"F[XM
%(X^lc:aNjuNtGejGcnU6bF<eK61:>Kk6d"3YT44oL\c6SnQ%`FhO7CZF_I,+l^jUb9msV\I@WKhFnL<,O[[X1Y*@2Nqf@.%L0kI[
%M:_e,7)ojsQD3SA8^#2/&GZuR7H+qCR\[_%WKlUP,Mosh2a5a]]kVV3=dEAfU6$A3A=sT*p\SUqY__!oK0RZChkJaSZDJ.NN3%E?
%8o!CTf@o@1B8?(l6JUZU7r=YiXArnFW<eZE2'1X`]r0eE3Q*dikiU0hm682UeTlp2QIOj2JJc/bQG'hd]d[B8:?.Ms+[6MWKg@J7
%,W<2EI<7T>4gLfgnT^R7GHr%m(H$i*TeLTYBB44hhKitZD^l8*?*YB7K;u(i1j?$Y#G&pj8a!UAVkHkKNPI>`+ZRKk1MB!CC#g$o
%Jt=@UkTf;DEbrS-_/10C)-Yb*eokgcCXS%AKNJG<cJct295=a@mE32kY[1KQ!T]<#pQgoukJ$TG)1=MbLS%(1C9=;`eW3['Q6O)u
%hQ>l3V,]a.4VE"-#h>`IPUO=5[hXZZ52d@h-]X7d4.Rk@WSc#Qqj'7H[+qcND58YPLVcR.cAef7#'FfBn@`1QnYgCj$10&\XLX[9
%6A\$%kn`;Y;7i2eV%6.28W'J%:g!b@q,gmk-9OE,W):[W(r,\--)>^d0mH4pm.(bti["_iJD1XM7HC"kM27-nDj#(dLG_%fUDiF1
%\Ye#ln=[q-e/@ef)X7IGlddKeh4PnUZDPs@75%V>qFU>hL"WN^KP>J0d7bT4>+Es[1n[Jf(0*[<e6r5]0b*Thit!`k3S&s0$YaR.
%E$5Z3F_f#pn0j027fP'POCe>IUqoD6dbmt3C%12JTa/lX*b5Apgf_,E=A=537l7+b;f&BOGS!D)^P/YFr#V>gpM1ROS$$LPL.<kQ
%\Xe.ikghPKfTs^)Y.Z`2Is%dWLf0f8fPM&hF(8K:d(('AoU<)K9V7o(c`L7iN@^V$C/VZ`X0-AGs6\Sk/jeUBR"hC($J6&#NFutA
%+/qukOTNg).$Ba'R^Z?L.0n7L0.Ho0Kr#_WeVtIuhA<0YAiK?64()aGlb#H8NVoT\OeYoD2g_$_FlL*D0%YYeWk5N,P5<0p.$!!u
%l:9c$a$IaJCbulPn2,0qg#!!D6QD%63!2*@qljFS%Mh'WNmZMCAoNs?DS5`<+Z[Q1;%&WM*6-`Q_VtA:#GOVfDA:-j4FGK"#;o8l
%6@eq>H;kKk.EZd9=ZYO*:rhA!C-cb67OS%X:a+%\=N/r!`r]9Iq\#`<jHS8Oo,O\;#S`@"+uKcZr-V\[24Nflf+r]B$@G:`jR*r1
%!eCNNWe3:3W9f_:rt%YMK%su]2kZ",UfL*84iG0C,U3]"gJV5^r2i$9'b=?D!QhPH3YM%u_M:S`&nJO2Lf#<Okc;d:&Q^;b]Wj1D
%'GAt0Gq"P&U<l220$;VlE_rdq>BFZCd%;^baj6YVb@UaL=$hHgN7?5;aNbOAB&PFGom)bS%4gh1=-RpU!5C[%G9mN;6[C\XCV>/;
%TGi)CD;pFYOBP7`o:SiO6E`/ABS<8^clFu@$OX"-h[gM2Q4*7$;sBICYX"[IR9DtY-"u2uiD$?b:;/-[_(\U-1U%:@dPQAC9V#2s
%A?][X(OUO.&<KpbRV$He3TcjR[c.N?W&:Y1?9l_SoVFl"[>G3L@sf(io74FpOria!8iu:#6W%P0$8r#e.kmaPk.FLhJn3*INUeFL
%E1hT8ghXH7`2.WW%8l0"0H3#.d7(V)?B(q@iP:"%BLn=BU3aRS&=OAn":ua1R-;o>]uN%""au=&hJ04m_j4<qhp`'SN>a4X9m0`G
%.E81hK0)ope[d44!&kS2r9n&sg6gCTk4f,-rM8S0%!$HGT*tfV"dj5@+Lb5!bk=BrMC5u+J>>JaL3/]c7AUJ8lS'cg4E]$i)T+JH
%i&-`>@SJ;6d.rk04bJT[<K>O]i9\nD@ZH/ec?h.k'o'+U,St2_'f_#/Y+eM"+VQcHWHG>f5;narO=0*4G'E4%lJNn&[mN6.KCVQK
%Ka0#n>uNUsL_C(@0h20dJtFlKo9'Os'03P?G4%U1o14J;-7%g;E1US=Hou4hUnFZgC3`(t1dtcT.&P6,d`iL_1pl7tm_Dcn7M.j>
%h5[Mli1mEQ-uS?>[.t<0HFE8A6Z,G@AF22CrU>255E`#I0Im!Vd6['O,++HAhnDeY.`YtPf.J\s,?=Fd89Is>O(A^<1J(GZ(0n$E
%q/7rV@`[":EWgU&rs]dO$BlI'IGWs=Rn=BZd0-ilX_IuZ)86e--`M=R#r8fb,XmRuo"?HhkH#FuM[2(h)*\,=FQqD]']YNdeI7Dq
%Uip%\n=HV'nPY1+RDcSYIE5neioTe\BrJ;d.',kcY&]5-nYN!kd[dA29[Jso4RYgG+gik>TJ@F((AMTV5rs6j`*TLG)jUdDh[9kh
%5X>HSfM1qfIZ#22HI9Q]'e?;#-gB'7hMUSB<:=;!%cZhS9sq[^Fk+cZ^q-a7l/a]lSJ$7a7*H&-e8$/$PH[FPG.58aKptA$W[B#J
%]>.b\D%:17YH5mJljZrH'&6(@WV?itf$-?eP/dU6rI0AYRSaS'lE!H/TsNo2Z_;;7hco+f\3EAm,rr:i3J77_Amgkqnpjmp@<DWQ
%Z&&"Km,%#*_37MBI>pk;);RPgm'3T43mMq:LI=CXglPuAS?NUDB&#e)0XHqu(Kr#X3`HC71^-$#[QRf/0S'Qd8olEQfNbCQ?Wo1\
%,13s">Y\+hSuG3r-$kSR)6:c9aSjnu$a.]jY7HI_JIX'(XCWPLB)0n(l_@'mP_(Z0E`o(0p5nrU#7spSQ1lAWCQ^Q(;`b`RC^0F1
%FW[J'N_m0l+R]Od"NM":&Z*Gs$8[n+EA3SY>,jC0BgTPIVP.]UW.(>"q2<k<WJ'at9?_iLoLM=D?tJG%;=1VuWZ;("QC4CF[apI#
%!3520SWXq2'(JU@KY:;#&Hg[klI]<ePKr_K,Q%IJB1$M0o3lfupC]V[TNu/S[.>ciis(8`dZRS0)a'HB/J.A@f^&K&l..:M"1<Re
%bjuEaA;4P]9;=a\.&KCYLtCH4;W1Fdm_Wn%gsm^=^>C"HijgnLM$Qn!+'/'eFQ=G&g,3t.B]O=qhY[1`FN@;&['TjO[e*]\'Ks%7
%P=5PV4lj+.'R&>b2/M>#U[??l66(u<3:;$==O_q;j:(VH3cm)ijE<K=qg4^5rn[Jhrp;G-W4o>DlLM$k.p(jYYDDHHJI9_$3ds.V
%G_f*+]+jm(i<4_#jOf<l_[-D+8k2G21gkKkK,f(_#`"k&[DPEkXC/pT:-O%d,qq,.Zebr(6fnL0;;FK?^2pe,&1Ktr)_G]GmC7)!
%]+Y<n.Z*Q+0bs&Y$qcBY>)j#5K"+1]BanL+_?kfm@H>qI_7+2T&=uC5Jp?3Y2E;>j2/T+.Og:VQq*Ik$cJcT<n7^4$>oNr(7TrSJ
%f2Z_8nq6G1qE^3JBTA\i`ZL0>W-CMP\RiOI3XiX`:jj6K_<78JLbt>c&%QrK9<,V0KZYa[L,rb&ms-0!(8^"Q6'ql1*CLA4gX@f8
%O7a9+M(]_lFhA-V7k;M,Lb6dB>FpT/YD3.!DaUI_:%PI#YV[eW^AG.MULS`b\DMY?b3dD)NOZ!tlc[Y+fY`e@nM#WBfT)E+o>('p
%Cm:ItclRoq+E.(o3j"UTm#E*3"%Tb3eg0J+EoI=]gZ!AIkX&SEFM0O8*B`2Mg`Lc`c`HnW)#a0Pg/6b*"aaiUMnYRNrIaA;"]L"6
%iu@oK2lOWQ?#OF**U&p#h`mlk>7mou1L#HaoSRP6@8^e5#Zh^6k6pH#e?N%TERnc!!gR>hRiGOpj8-.R=DaZqhnJdA).!3h%c_!4
%-9YpAfUt`Wp/$<'[c4%_VqUT\j_EFULK?aU_XV'Da)FKWG%OTUfoT:f?uJ>Pek=YgMT<@g?>Ikse0*slG7hgrG"0guGqd?4OrsH0
%VhF<pUIG]=Lgbp-I_/Is%:5UMC6H%@2s;F'%:6>;3)jg6SSf#iT)fsu^pD\1]akdsq9%[k0WB=c!XGVM#3a2F2b6Z:j0^9m4fDE>
%+?Hf++2c*R/IIi2\?`p@p&nu2M%1[^@g>)umuWm6N9XCa#Jl=mb;j=94Po4-?E/`>)a9(MS,aS\l#W>K>di=<l^hY8Tl,"[Y1^ph
%62u:2i`PGL+$d;o**:JMF6^s*U%C!.O+:'N+/rclp9@C---sb<4,gj/A>tFC;AicV,c)Y(XZ]\8W1VN>_b<]%_Z@+'kan;s>dK0&
%p5GO7iN9Hc<-MT8T43R'8_IE]P^;sM%e\/:D=n#%K<\;D/=_l8jM_)f?qM"(k7XiMrX->qf0RQP@jDIgb\^h?K=A"4^M<lQNjn:i
%@9TBq<D+;cYb"$TEt;H#W7M[@r:$#Hd\1PEN8^Sk!Ap'\i'C/5[gt=/4,/mnI`lqe0?)l<'u^3K=Y3BEF?NuWikl<fM&LcGcX%pq
%3BH+67>KSpob9NWefA_'lpIu$1e!ImVW^n-'Kn>8kCIX%'F2pXF<k.C=Q!X-=5'"tj=u%8.%0[e#p6BFW\?Z3DJo4RHZR\YTO\$u
%K'&W?hgJ[o>GDH#:1EU?^JX`>gc:656-oT.\@eC7G.[nfqb.//f`^IEQ"5^pf-F_uUYKX,-meaICq'#1?<=&2fP[tRg,2;"G@F`j
%e!LIQ!`(rnV>gA$N/aRQ7"F3=m\<H*SP[F^a6KM3()DKr-=^"`);CeN1)rd,T[i7mgjMSSP5)H!blSMMTZP-l\e0ommtUucb8UUs
%==rUh&Zj/,c^AA&-1P)-1cdHM%.?&!_?]@C%5\J<]3^enCE;M(GVt9N"Z,`5<@nnK"sR5!#=YE!>\=ha<5qc%Pc:er'[I1^U'Y8O
%&:6ReDM+]%4rcVK/QORhE.Xc2A4"S0gPcETD',*M(<BKp0IN+/Y0q@;+U3[EYpON@aMT4=R0sS]R]792.rp/fa`cA`1-S2_E3#d0
%I8e1Q8WdA@U2IQ`l,_G<27?(3KdsQ[]ip7?lpgYWa_c?V\<UCPH;("[O$V36dD6:Y%<=:\2H>/>9m@Vp.j(pm+tQ:(aR!2>H<m<u
%#3"K6n;.ZE4\egK&]'Ntm%C<;Kr[bP,]ogN.6aFbA^1!!N/dK)QmsgdOcI?n#e)_u^VquZ037L.PZSImgC0`,YE]Djg&I3cR5cH>
%e/q'k2sBk"eB'=3DMAiWH73Un>I7M7\%Y)FX(Ch>T_IspGI36o0Ic:fb]PdF)?7BBR_Z8);e;Bk\)KUlH*P!%%I^I,<9aIA4<rTM
%TT9R0!i]=q+d>NP3F*63*?$FSo;_AOf=o9#TAL)'[d[2C4_3"%_('0jYr]&=2-4KZWk-$r"X:i\c1C)-9*,6ADhdrm9/N9I[TpSN
%$MX8P"U=9\9mVVkjNH:IZ-W(gDk&6,L#nGdClTL?XDW0b7"g,$#Z%<H9e$_<;Fq?edjiS.o-c$88^uoQP/W7n%hZZ"`NZ)F%3Ac%
%,&Lc,AH[nG9]7GCpdj%Net@54<cjF1_?Mot5g^/rP%@"JH3ac$D&`n2SXYS4Wf+l=TRH%))u#PV;ABm#qJ:u"e&X;(;/7V4)_MNB
%pY'kRk&##'*cf\=H]`IgD8a*BC8k<s3NDInr3R\jpcQTCA5*i9o+G*u#.*g?"Qi+H>1K+k>UX9s80JGR+G3_i0WF;U;G>3UQ<VQ?
%kqskXm]-!>p(p('J;e,raaBgm1n\i&k>2Fd.Dk75Q">X=Zgo"_Q6K`d\3jVsXDA!c?[G^GN4r]u^;hZjK>Op/gP=FeFrklO=+b*7
%g$S(]\sArJ&Q(/h"P4_q8@1e\mPkOgYXGo/chh00rVOEp\$pM37@KOI9P%LMb>94Qmg]ROBk.TXp@]pr48+=[$HQck7deHu+H7]D
%b?$R`1^P4u'>\!MW2fN@hV$_Bo)DKa[YCj204W[,];@!j@)D1l3;@X5\-b&EB((P'J/o5?V4!qaFoU11>SX5*:%.IcpuH1mV-U-;
%U[\#\d=9B'R'Ed#EnAi[(fJ3R/W"0qo3bndQRB>rHKp'.6M,cI]2d!W.i+J.Y`b7`I[tGV45[O5i.5?AZQ^TD%h=_a1=lUi4(p<A
%/"'lZQcXNXp!a(JZ`L?URGhSt&'R>QN;K,)fQWh:PuSdl&Iu=%N(kS$+s@IFhEc4p;ttn>nMKAl_-RnZiud3?1(QmLZBFjKbg2Jd
%e[4lMTq0.Qh+)K.0Cm9:Geh4kO3=QZ4lAb-*`,_[DD[+C*8f^6[U3@fH'#K5Wi8EeY*%:F-/LLWXIE>CpgX3uoh=H>09$hV!Th$Q
%rh;q_%65h2!p'i>h;GhFa*2bXFnDnN2=mdW18La%^c,LsZcqF"M^M^'mX='G\`p0q^5<[I\=b^B0n_Ans!5O,&jVE#+uH])c1sgL
%qFc=>7p$c.p5K3L>.>ue>\e2jaso5^-6R=Ge?Z+i/P^)#71_o)7Ss^d9f4J[.@s1$of%T=3RUi+6I@di0OP_cJQUtAndTM:=N"!F
%hE`%C#r_)Eg$`AWM6_$pdg8Xo4q8M/^F$C(BEI5/LbX?H-DuX<ok^k\W=@;^qiR3_9K/]I%lmP0pj*^ZQ`i]5P0maC66W9ZIB6+L
%*;WR?$7e,mY:]"><u+HQ76j584^f]VjjJ.YE30TW9<%@[++"4F!XhQ$:5iVEb\0KW5Q3bt3t".X""p)W6QjggW)]6$L!Jr;.,NBK
%X"tlL,_Ots^NZ@`L_<4-n9fThQ[]`:V<4F<>W42BnutGY2n@A@+-9kU)Q"HoAA4A,.qkjt"lXpp,bT_t0$#"fh@k`;hHBBNCoFRB
%[MM01FZB_-$,BVe">/Ya%>;L:,RuGL.+bc-H&(F[I$^.g,0]S?goVP9gfJ#J$^qT%bQV0RAe):2Fs)m"*cO6P[9cA>16(7[RtZ:T
%Ogs=a"`*6ER?t@R*)+r&pEf>i*!LF+Gl:ePoVb?\(HGg"b0\#UGcha-!J>Z`K""EYO"`0#)b+^MY/hPu?L&1ld$B9Fp>*>O`0A(9
%OiVcbE]c-;.DGJog)GiVlYkR\dEl_5-[h(FaM?+A<L&HBn.#*S&B[2LF&2'hc2*#FmL?[dUue+2nl!-WBWkI+OnYtUSg5h_V__mZ
%-N@cPC.@(OpeKQm6b"1B41]t&-8"9N9tXpMk/jtSN*tK2#]3C4!cALX822#QOG4&b\D,jWIpTI9'DYGY\lThBL\]L[]\2'C?"`$k
%rH0)*Q]jNj/?kb*jC$eZjAQN>5-SO)N3seRq2Q^'pHC8Mqps4j%#t6bS!6XQ5#7)h2kuk<ld1"9:JWUr)Bn0;Ou".)B=pg]G\1qX
%8BuIH*,GG5S8c/7%b.;djESnVDX_,a#[1j^qX#TLZZZc#KB.sraViEf1EIfS]M"8tmMM=8ae>_U,AGeI@,<3M86UciqYp0Pk&AHT
%%;X2.%^XcJDXunB?RP2Y%$&C6fFdpH2]9_AE&:27&,.t@H<a?+KkL$od.`!pQ/ibU9+ij8c,6_(m*o*4j9'dEaR1^F8\.sZ>$^X"
%<EbIup-_*[7c`-8dj./e<Yp.%Fbk7jSbt;1M#<rJE0`T\/L/rmWX&lAN1OJtI2s^EMAnDc+(.V!+.[$60;oQ7f0+#/LtJ8\0c^:-
%I$SIaFr`;8U`Q<_`XP?;;nU&oq%f#^U.lV2DJ7XDq?I2bY@SlPPAZY[P/c2@O^Dbs^gEq&6US#.9?]D@gQ2PQ%J`b_BRc[N*s2?5
%oglp#*jA)nnRDJLc@PC\ZHI/_M$"@U&YKQ1>eJ\5.oUZ=2h&p7!loNSL$e`cWU3?HVnup!BU'W=?iS&B=5lm.i&0=A<B,nN2s/q.
%<cZ-m?93u6@Qs[hca4W80??uo*ru$YZHUjnD4lKcLCfGD2*ngIN=IN3]0JF/M%nZJ4OV3FlWX]f);6]b\#G8g"UFjE^i2kUGX:4B
%mS&K+5K)#Z&7S[H/*&=Q28mUa$,?%WMkAQDrZV%pB7?=_G>mKh##np*?nrK3]SJ5bL;%6W/+.s-jC(Z-4.7!71#sLR:XFt(%Rn@!
%9B8Sh.Z;3`]AS*Q]rdr&E=eJ*6Jn2ll+47Lf7CM5##>Uj)1Fn8KeV,.0)6aW<i"dB)0HY+7@'nTnu+Sh7F";^L3]#YC&e[fo\eU9
%0Xtq@^GfPs"N4\SmDb!V^>FbGTps101bk?,J.3[+is$"<I<,6,cI"B-4*jI-O%H"]1Kc-Q&TA"XVCMGcpO1n`@7,>X,j,bq@:1oB
%`+PWd^(5L]=!%#j\d<V#bgfShVsFFY4:o\l6G+@3a@X81iR'35L-.KXkFM'sa:VMdEt,_"Xi/)\qCii5:rFT5eoc&!)?^O"P-a.P
%.RPa$ofH!E_oV6<D!efVO,OoW5;if"1RY8kW#=Su2/mPJ[!!PJ46u(_rjk!Q%Rl`VDMGGYQ^l#5?K!%l'SaopJS,ir/r3SeDc\**
%B^SQ2/T(Ftn_td<EXqYm@H_1IO^$Xdn#n_c,KY-;ni[uh[,<6^X\66>$Rk*0Y$!a6Y>RhKY8MdS'<88n7JH9lh[VO6IR$%,er+0_
%p$KJ/Q?hg4*Y<d#'KC']j<^f/:$-53k9)]0%UF*kjL29s]7*bQLeirLnpu3GN9\MFaL1?\`Lr@"DS5Yo0+@`Y?PnJW"2&*Zb"G*f
%rfT>Jq9^m<8[9SMjP@60(.K2,cX\,l7q:qL6I%lG1^r1K)S+[`\,Nsm_>H(SPX-8uCZfEKNC1o>r9!8lcjMLs:"l)b?ml^hC`4s@
%5='ES^P-k91Vo\s_'@(3;qU=(D3lM%T2=F%#3Vjcmc](0A6!2c8'r?u?\pPN$AENCgOu(Y64i.)):+d]i</k+G1`0TOp7?&k!XV^
%E&e7!/!31^"_b4Y*pCo#hKn^@62fuef3=Q)A1GmI>^&KW\9?+aYu-s6&p,hi(e,DU#=1p1io"2m13\[H"^mHC/PEAgCNi/'+tCh9
%i]a/6cq/+B^0QLH#*%F+`^>6H.F3(cD)<)5I@sDS(KXlYqM#K_%)j/C.LU-/aB`p-N"'b\/lc-C_f>'8:hk_)@r^lr=R9m>eqs.X
%hB'T*;E6+q+N4D3UlpPHo-0SDb;6e!bIJm<2j9b+SInr(_Kqk\dQ+SOf"*#33p6o[/VS?4MU&^sjR-P*S)9Tc%h:Q0lq%GD4sEoa
%Y=j<+?)agC^<tP`?K1C*#GTG5(o,,6>qA^i$@QT%hIu0EM5hLXdh?C%?Q8P;`ThA(_CI8,/:_C2KHSec+';M!kE"h3pD[!LV7J2g
%Gj/o`j[Cn2'P0\DjN]:Fe24[QX5"f2Ub5e^*BBqQ$IH04n#3-J1TcX)V2HYQIR==9N-*E+JK!k?1A_NN7Nl)Z9#QVjeM71G7geV%
%Of9en98Rt3E.5@]P(U?.;0&IDB";D6Ct8=>aiqErBRNc<Qbj=UH^_l[0GP0^K(JO9rs`+T=N18D,c/s9&33/CSBPML9OT6"`BrL$
%UUjf)+%GWf$jVt8NZ*dI<Z4An:Z45X)5KP$8YSi>/0_E'Oml?H0u?)(S'4ED[aBn^oTd0Ga7lF,jan&&ZB--ilKaR"dgD3C.e*^q
%FD/%.r$[F6=J?38&1B&ni"L&ri=bIk8#pmH!1F6T8%FGZ18%[h4en'2?%!58EA,LuDWE)Z-\g"=kO]ui9Y`!71eDoU+ihiYarg_a
%MD,&N+XZMfGB"aT4V#_0Manu7GN9hu.@n^4^Vm/H)`#iq>*d,_Fh%>n*GpEM%qs*6<X#)XYLL)Q,WQh7mkH%$#6T`@k7(i7o1PcZ
%;2ch.70^<-id2mHAOnr4",gO/46D_7([73NZt?Qmre;[Zgrj'Q:"CKIRE-Ku5a(+=7u1:5(f?<m748J*8up@E6qT@9<n4RYNr@rm
%6EVC-SK@*Z*J_DK'n3hPW&kqngr(K5Xbd-:p!Y3iKq=F,#@<id$[]q(U(i!7P58Ye.s0EtO?SZddaHW!od)Yp"N2#P9@N)k04\nm
%7,b(sHA3Ooa]%-1cH<,)*%ofN_I+AZCpRRM@PLQ9p>]K!+0%f/[3-g=Z\!1*K1?ma(/F_Q-7+omTIWRqf?@Lc1)Pi1W+0P5oTgiX
%G`m4Y&0l'i]_Fh$a*/Siq;*C?*/BA*RQmNS8m^W]hiT<qDqK6`G8MCcaEi^!^(-a?<W*Q(L0dRD]:j.?:?g@;N!B=qQ!X?gh?_ZI
%'L_ji#+-JV4lg/CP&08Rf8Vm,J9$*.O>(I(?jJ#.FPe@>XE;DP?dYR81!9-^DV2u[TXTJ,"mFq?_PlE^\V)8_D2o='`+6HP10`tl
%:j[%O\7X-i1AsCVL)7cj7.IS,o42d&o)OAmR(#2F0sV+==.Wb0a6(tuO'D/SlX-E+f^LJE'l?UqSnZ_\ab%"L`0k5_Nk%b1nfE\J
%`ifm[MF,R)<+@gH*;NQ%XPF%W]<:eYF5M[EF8]uk%W]g?<;A=bWtQ#WosY+F;\OTD8%*&)dD&LqptA.^D61iHa&j1I&X"]7WKMn?
%c]+t/E@_[]ERj*e,3Q7oo8jn"6PkB8h!2mHIil<kO<cV;HTJJ26P&<(j!C+W2or40Q7bSJC<!_C#Vi#I,)&.:BZ7Np*&U,B6iV81
%/dT4/\=_]jC`bE7'Gh-%k9/BZTpn=m[sISq=XP;_V^h\r*/Z"]3eehT.V]chKY;]Qn`8&j\qlJ9ZHX=aK(,*qMUAr[WhorDZjcMb
%)S3K6e>s1!SUD%Z=OQ8$5fJ]5,prm*O?F&6,#>'M4%K#+N]_P-WoC]Yp#"-;6<T?&]%C,cMQ!Xp.YRf-8g@2QU`AB_FQh`/M!Z7r
%GLc.&p=Gn(?BjIM?YEd.'ne:sC[[-_U-.L]EbNq.ektb-r:sA.ic"A`*ff]Ns%dsNW>Xcd20AH!WNAA>]6\]-rPdsLT+0oYCKrA$
%Wo'1aQkhY,hEf*8[G3PsqDqI*qpZI>7!l5KHpEm%X'\A4c_tXH8Bql*T'9W<B[YgC_t*r\pC"8oQRBY3XGB+Rdkt$Q8+kih;a<3k
%h!\WSp2rSpDqmDB&,];AElE5imLo*q3#0$-0+&q<-AG*`Al\a%ogn'7rW\2bI`[8pR(KJtQ1L".6YIU.f_j7,GQR70bdQp_\/Ruu
%EKA!0TF]$d9.GSM<G%-S8+44l8WjP6ODY/3W#o!O/[TsC1V>=3jC\W)nHme%(Hd?XVGd*7UK'Wf5Yc?iaAW:P>2Mj:bNI4[P%!3/
%0d+FW'<V%"B]e=?a*T\m.7A`]4SG<WMgg&sX=Z9VG2oQ5W@$P,<TNK(:VkWrdip66d*hJ:iB$ls^35F`^acUhYOhK0/MO"YLS@#u
%`e/)[GZ$UH`^spc(CDlINBNVS&=]9s^)rs(-*]kN4hi4k88%ST7N$0kkUUr!@u.c`.Mpt\RBPh940Km<h@Eo(m\-m1)C.fPr/MIC
%Ou:5"3QSVod)DZ?ZYmGKf0(t%^[g?cb3"Nh"RRZKAWLl<GJ"%JK41]B%!lYB'-lh1CK@-IaXtuYFtr$4kYT"kHbP:5?l6KM1MXN8
%DnZ*uO:W,V89t"eQ*<"n/hi*H(6S&8JpVu7M2n1qqcd3G304$_:qr3ZjojZE9i?B#-)'o]Ao`D-&)-L*qtCAkZZlA-_A:r!0lHgU
%TNcNm1C"uYH$/%j+!`L>8.H3_-F=b;Hmd-ha.mOAF;,]uEO5lK/TW7F730S8_;h47"X(OUZO9bD*`#NKHJn^8&"2$@M7P]HNf%2V
%*DO'-[<=dS@*VJ\]:>mAZ&=L1B\(n,#DLa92W'A.>OY?GHfs!2*Hb@[3g>X?1onHdFMPE=YFBk.5f&\FNY&%uQN',g&L,f_-J2/P
%.:ehYS`UeQ-remr5G<O.N3d0hK81O(Ip?PFmd25%D[@R/HS8^;CYQ!7,p/6']c=WWHm?*r#&Dg4+Xe;GkYLs3asUWY*9>grk[Mo[
%m;BT2f.V=EX$8qjV1iT!pVjJX.)g&N%e50[kh>VK[<477B&+&Nk67<%gkSnIM]Fg1r*UAAr&JMm'CWV_3'r^Q:T?Of,K,4\KT']f
%#%\DqaheO]r0$-#+f(Tblqk/FR*os^_ujbP"gU(mRa6OB9l#.SSC,+GEs:7>Qsel46-u[&Q<stp&Dq[p6/KZ'#o,p\WI^'C`:q)C
%&<GOsob9OBf(EIFm"9Q8XV8W?G(Os<:Cp;s)1(5r:67d1g?Wp$%-0/\Qeo??A'SK,`GsY'#1D^BnI7(*>>;7ZoU*b'n]N"N:P%@=
%,Mu^Plc$Wg0o+@KhMG)=MIEj(XB,iAh.WPs4e2=Nq[-cW%RS8L:"AK)gc+3j%[2HC&?Dn`:m_c"-3^4PR:6%eDXE%mpS,%#'7b-?
%GQdd0ok9[[;prtH=BP)B/RFP<Bd8XN"'=BQSOcK%4TZ-]jXb8YH$/5^87_UY7o?^/$EN#DTc;INKh;GI1G9n#Jlk+p<&"/JIZPLI
%LQ\La4Q>$QPWf4!8D+D@[BhL@SUZ@-7;4>ISS91S/>WE-g.%)g>9K>Lbb:S)3-9:NBSn^<o=LofB9^&IjYeLpguJ-T**#pJe3]?U
%M1Ri47l?,4H+W201BYEQ_WhGgC-A7brJ7:F=JH*YOWni%Z$ZY++&QI2q2$PhW2>N+!?^HceY:"A>ssV;H)tl!9)tt/eUTL>mjrqD
%'UVNc:"oCAGS'jc1aTB-,+1\W*4Y"<8R2lT[:nteq[i4AOo>NRS3a4/Y:!YhC?h5qgF&F))Qr@&(6"pn&'[tXmO5MbAb@m9X1>g+
%l&Fu!7k2"#c]K)rq;SK<GAb^4T=]d+K;\K83G!"_3AM&m6IgH2`jUk9H6kd4P#Z$.(0O2sn9Yb$cTo"7'GS@8Zk2."1R2`t6!jkL
%$ftq-=`s$!5A.](^AdOi*9<JAF>IdpG0f"M`p[K!f.$qBIq/j^f//_+Aug7AZ/Cg5quCRFT#Sk%B=,1JF0KL^'KQJ4TcB_uq0q_o
%-#0;YCW&MfJ.,^W)nFc\2_bYf4V#]Z5;G?)rJqr';urHS"Yba*nS5*&ab-c!]YpZ)FoM@X2$/9_oBe9c-Y'A1,8H,M44i9.AIi%E
%A9)SYgsW-&?(,DfF_$])!>,XZ&tN-S/Yb')giC$@G(m_"N>niP#oL_m7b_I@mdr<FIXZm.`d9Bj=_q6>0apW!StP3CL0BkCi&"B/
%b#+"nG.]t)k@VCK4NBnT^5\=ChkEP4;H!B'O.:plC7Ep>A#*9;S'@DWQ+;To1m5V6hsOEOFi#:[<"AT=K%f"0$h^:V:eXJIZL'+O
%K0"'pmq*ngDI]3r=R'Lg+atUBSUF7,Hgeo79s/"c)(].:'.,W:,suCmR[If`Y7jXiAG/&54JPC)?/ZepK;Bq84P#juUStB67UIO3
%`P:PX;KtZj!]sYpp).s?edhKfXo1<.f7>-P\*!:*'V8/li=EWg1Co%TYVYUiJ\DWDO`hG1dBgYn0`(c-<ek3*K.<*^L?1qnZfskb
%*eeslV>c>nV407K1iu<LLDZUb\>Zgl&TWnB\YLti/H]*I<IGH@K[p36o$\q4QtA`kOBPmGIK)Y28k#H70%nfRVq3r`Q#_LNjNOVI
%A.NTu#g*XYbbKUUM"^L7I]4ad\u*!Dpb"BqiW[MA:Z!(8Eari^@a;ZtaQN1tVH[r;Kl5U91YkZ05irpqA!b\Q;1R5gXMt;<.V]\u
%8*U^g@Vo&\KorpSp(^*6F@!-_MR>j`:soAY?baNaWi2*^O(Khr%Z&YfAWS9d9lj>!>RY%PWSLb]Qpd8GJB_n'>35Af!Vk,TEK/]p
%?JB78O^%W)Zrn8h6p4-#*t\N&V3Jr%;^K4&:'(js'&ZRp+3mYC6*Yk[#9!!-[:gK<@lBF-.&Sq<&=sdsC[[iuCfaN1bXk(!qQOb-
%Xeu_o!#-oE1(e>D8=N0"I>ohMQu5%a<:Pf5(Tr-N:'(js'&ZTF+6j2.>tb;Yf/CFB,Ur*D6i`7eP&t`j)8[A]]te5<Y;@nf#k1Ee
%k2ShY(ZD;0\Z"(F0*3i]'_/D5])X$QjOUnQ^`cGW2X5KV4KbQrJKCTJcm8&0GUmE@*:b+IN>KP</ud^F:qr1F1T;]&/PSA2AtQ7r
%Xg_7e#2"/PBT4n"./U5R1`@u]R;0.B9h;TO9o/UMqea:('U5\^),Ki&jWQQfLAE4Vclae7R$sJhC(rsY6*R'fNH^)qYU-6#P!:pM
%fIR6h\=f3W:oN:&N$.$Knl9^N?X^(=O4(hm<K3.r6CVdpbq3YNZ1->?*8/\-^O"f\[pfd=1>pN4Cat:&Jb(QECQNNBXB"$eA1keo
%NpS/.DW"_%g9jOcm[:Igdu+4=hPm]h&"BRfNneHQd(<K8eMARhk>h"!Kc$P%r"+IK&','.TjA!EMBV%b7b"(:'7uf4gPj?IY583`
%C5c@&3oVEZRrW^nRLJi&.M2!N`qH-4U]sLt,H`q+TrbJUiJA76l[Vor*<&S<*9<p2:bMt^>rr(mO%B5h]b;N)7Oge%SH'goJKD:j
%\'[VL$H:?%e"<-IYRJtqlLA<1Jhh['^^WRli8%-.qn5+##_,#91+cC7R:RlW1,4#M2n+84n)KT1(M-)D4Y_MdVV,AJW"!GbP(5W^
%pjK80gOPb4%c&?A8UsA!":m",f:ahF2]s/qaf%Crp>QcgOl3g%W&IVpSLTdM`Vi'7;$7-#ZC[a8?i]#Ol?6L[:fG65lZe)OJ%?/O
%H\)<#gf*hg8!8fkrWTrW$BIep=R>c'*EpF!UZ>bAnF6L4%(ZqS,U=F"f[!e]St,<AcLukm6bq5'"s6UCJg&1`3Oi)UmO,NE#('."
%0R&$s;KJL&D'0&e4DL+i`fPt4[8.8=HY:qJM1_Vb>0[AA!$1rE]Ql.5`m_BS5(,Tmrq/HaOVXQ+DBjo41N,:**9t+)$Ls^k-c-d$
%MuP]0TK0+`np3OP^P<.p]RAh<#3t6^UUKrC@,*ap]"d6a,"oW)Lhq]`3Q)PYSYuk%ldgW!WC1?sisdaQa#+C<DAfD8:JdO)"jc94
%j!Nq$2C!4$?%\#@_7#TsWKA1cVU/1b7ND[4Z4c[;f#MW976K[0aZE_0lP]@\gJ4#CCFJ0c[ao[nPPTTO!jSoIEhHjCmA!$em(.n)
%^X@:MXK74W80a]V$iDaRpT]Mq#h[R_0I5d#S;<:'OJnCBS.,(=_J:0E5!P^3!X)2&c6#nJ.`U-tl6uQ2,06Y<Do+E1M&P92[uG^V
%S%p9D8_!7XaDa31b)p^&&]N8"_]jON<_=1],ogI`0-4ERc6AS)GL!V,+T/MJ9atJPU<%n3:bQ8fEihBEZ"N.!'5r;A-aiiPbE`h3
%^ahUY$Y=g.eGOIYnF;;V$:C">d!KNm=QGr/&#>#JS?VW9q%+S#^61h.6%1Kr?2PSJh2/Vtg+-]%WTb&aqi@FBCILS,8sd#V;sm9*
%qs=X<Mf\-#iZD!oQBK+TZ0j@>h]a?K%=K<pcbk+erhL&'i/eT1bJM,Y'cM]CZi_pk9qn-l%1&0Dr"+q.GZAr!;J,,%`R)J4N`.7Y
%eE.32DI:u]L,f2NWBn/r&3%jdRN]CFLG&:Zg?umHDr!LVA#f@0kaL7JUS/T)'p$)^6-!(EMNf'9^c$5@^CA2;F><8?k<<^/^_]!9
%q9`k6#Ki^%gYI,<n#7g%4K*R4h&%;e]454*BW/qO)GM5oN03WkjDE\n+kHZG0[5RhWYC>QG^n@^DNpYWk8;n-."b!,GN5C3cOt;X
%"u@;7LB_N&DlEo*/0;?BkS.BA,=\iMO%)9%UTV6Hqa3:M8hN<QJjU?,7]sCb7d5Cu@b*%h1t=.i_@I$/Tc^hgBg3F13`,D@L'G;F
%pGjQk;,k(l+eo4R/YJ\.,sCT/\Vd+'R1G'^5>\gCX(%C&efZBh4K#25^%n%cL<1%+b."bpL;o++:rh/n+phE[#Gd"K-+AEe3[q7Y
%%g2BCH08&E0f4;mXu]hO*/d3&8kMD8B#CrjSt$W$l4]*^<n@K0PNJuNA$W;&PrI3>e6Gmm!;!cE-5M03\A4oi\To!gk/O($McPKi
%(*B?faXH^(kh:h9l'pEs,:X!c.:<o/AdHboXKn>E6Q>/(AjYY2a[1Xn`YFnPL^CJP(32S$P*mB7\m&F`/5gPPkUJ"KRO<th!7Y&@
%+oUYlB],^B_2</b=c.O>EKh;)m("JNImZD/mqtVG5P7D90PZ'O\[!+_Dud*B."u/2(TDdCRD"?*/%\_q\F3r9qA-2^NaD?"VG"4$
%3HB)J9AC@c],["`l@o2,g>NmVm].7)emt:mEUGe'p;+[=#"8tlfK]=\m,%%oY]0<tqh>.fh_u7)\dcWR>ej:U:2q]jCR(A+XPMf-
%`iIOQe8H=@5DAo-L11_lL.(D?^-37T]lR>3f)Fg)`V7toceZltp*AaS/5'8fX*DFjEtfPOP?ZQsr8o0Mh:h%7%EW'qPPC:KB$80^
%-[K,-;+>/74E+8r'jnGJr9JpS5GN6QCisS?aHMpQ6fVaqK*"'.HH71O%`Le)l+\4Kn@fSQU^Mp6_X4sW3GB+@l$Cc;%,LhuC:b/J
%]mWj>d$B[1b'(EpoOi0*&I4[5a>%6Sm,:)%N?$qomp%.t(('fDMZ8c=Js2]j^0QLH#*#-qj/p'C0E9oT"ZWn//<&;YFojSn:)ade
%.,!oFqE!"V??;"$,2jJspmrB4G(rstY$G@RU!1eL/tBE-K)C2TUYLVn;?k5`)E'#Tfk&p5M7L>_28-TuB'kW)SP+UO'rBK[f`In<
%dS.qaU.1:7d/Ut$@CffS`=*CA+=)f$q$l<S)(nFPf[_(1-4e.UZ[rll"'R_Fog9cdC4dr(2Y<(Q"%2%A5*rDs[u<>M?"`g2Ii@1Y
%;"R'fOlN]r.aYrWh0_Y0cI>-^BGUWFf-sA=W6(43KHV[0@q+eibCfZ:KrnZ&LUR;84*V(gqFgPI6OmFX3a2c.b%U:i1MT]haALE%
%lo/mh*5h/HJD@W(mV($*MZ00)-WnddiA6hh]0:>MO-)5k+amuDfD3qX]<Ip=4D72\s*Kg\CQP:W5a)1LIHpBb4`u$LT=R-FiTHd!
%LSlbXk+q.g)lmq6Vp[T<6XkC;1r:&G-Z)r64-&bRJodSUSCm6R_K$ppNUD8Fn3ZigXu"/ZO1IQD4WXjGB_@Z3Ue75ARmI%EJE`DC
%Na^41pYdkQm/p+g&44-Qfu:sQU59'MmQui5'tN*.IrHd5a5N!ZF&BZFDk%-g\=\TKZT#R!e6\EA'M!cpoq[Sa1O9ts.g'(;k=IR6
%A7)n[fr/6lH"a=d&#a+YT`aue7-[TE_)Qd2:N<]%JW%OuiiP_lp=\>8Z8<$]3`..Rhc4LD8t]6V^4XYsH_21/dH.hX'\O5bm;`X#
%41fri+MVWjmFSm6&6j@\M?/'T0[7GjN7S,VVr1S]bgJBFD3!\>PVLuahGE)Y6l4s3FVT[X$EZ(MoEW_RMXg@uT'o\Ks0(hh?j6-C
%?%,Q"%/$EU_DD&Iaf7*KAgP;r:KGQ/-"XYHMMR$<"og(5+]Dc2Wp`WAgt#-"?*D$thei)U>89F)<_*DD$urBf\@==ueq^`[qBOVk
%lJATRcZ&R<5k_'-7067O*q9>@W4juH@S9:8NB1nl0hpmn5"'Te$D*]=r(%[)loAgm%rZm((TYQbrTdLb^nL28WktKYh;'Y"*o#CS
%r!i>i4M%$R#LpFh[4=JSH*ua;p'`tl*dY9PX6s%FpEG<&Ujeg>(^gt^<Tt3CTW\HOgWqao>);9YToQu3E\`@mnT&TO;c.(2YlfCp
%BL=-.Fg?bJR/?OuEe]7e<4Qu@c4Zk(1Td84lTjb>0BouAU%#Nf8)\m#`Q$o^/%iDm$*(sZ?ME&L7bF*b6TS4'`UL5K)tS3i@Yf@X
%b]a\Jh*lm^$7SGK1(utN.S\,UEYjb)CN=TmY%s]+FM\K$^cm`B-cp06dl)7G,.",q2VZTf.,h67lTPa1RBqTP5Urn$cuPs1@'Gh3
%@c=?8@p-s'CV)ZdEKoN"is:"V$Z1ZZU#Y]%T[&#(8'EIo2]+c"N@u_5X-e.!o%p91H^]6op[0O@[A:akPl:XJQqkJ>=Kc&:qcsup
%=AKl=[:oUe%oVs57P5!,3!L^Kg!SA03@[p`RWh?a`Fb]=jMf,G94KbZQ\<e9meY3`bnQtT&*Q3Y>.JQM6Y9DcGLBOFhhMelYSj'&
%)lSIR2l)H\.IV^$)Emp/$6DM=Er-lF<SVeD<D:;E=V8^\4h_B2$HH^_HG<uERlo$H/h&&Gp?%btj:.e+.gPo8KnOAi7:Hr7U-N6'
%Xlr&?ZXCo%\:0;)QfK@$:.UF0n'GlP')b>MA/?'TM@+aTR=T]bJY!<rTYhH2LV/$hGeZi/M]ijs0=h'Q`Z@FBa>m,/ZY^CQ$"\Mj
%2`X3iHO1j8'aMn8`IdXt#5^b#$r9GekQm2^WD.o#1q;rE\$.9#hk61b>hjjs&t2X_?Y2c$!/OO+:I&>*o+A<Xf+sT[\j7.FgqWKj
%,H,a0bYpc]+T4JjemuLYH*C3.AVE2Z/A\i;oh>C7KZG=cUrjG<#-\lbF^`Q'l^6$I&&Z[tHk6kr%,T@?W8Os[fn]/-]F%$081oa*
%R=!cW9!sq0CsN8643P;9;u:74ZgaQ<IBE3'JV6qab7;sH:);oWXC$Q,1!,[`"f#$$Hbubpc\\O],^CK3L<IBYiKC+;+XpO-7'REO
%5=*ha$8hJ7:dDB('#CX^.8jUVOIB2]d!mXSTHH6NfJ40PTQrpn6B_<U:m8Q%Lt!I9e;3Ebj\M'e9WRZV^^D8.#-\):72>d'/q0IQ
%)KK#<5;"fu*D"Qu*?\:k<ee_u&P22K[I5-$;1gqV07"*u!)<3</I)jli2'_*,F#lUar5Jln[?aaH_`aD\>gkB#(/+uGl3Bn8'Y/r
%Nm3rC\C1'.DZti+.q>9@g):2EhH.JRn6h(W`#%q9#U`'m>qF(W2^,Zd%1t4eg_,tn)0-4%=i=g1akX(r=\5Gp2<2cE(gP"(`7okp
%f,Rk:2+g88)D\Y21-n^!$aMu%'`'l:OQ47>U&RV8jeXc!It*7Z?cLnn]@\Rk%C1$Y0S8Cj0#9P?kd[).O[s,hW%B7A@HXVQA7l:?
%DQ-$^U+E"]dQ*I="<n844Wug<+R!+j<Z"K%V-6QZOEHALKJ%fP'"O]@OrK'iSM-oUJ%-RliL6`P%%Qf<e=6ZXqZEWpmR]ZGIpU`B
%Y3ZB?%QbacH]j2<F3-k;[13>52TiVb<L.5!>+s$q?5+=8Vm1#HXr<m9Ei/n3EQFP/8RogL1UG<YkH6F6dYBRSXZT`r+]PEei.glu
%)+UiJaP\9h6r8Fa@GXfe6:0l)*-:#](&A]^P$Bj;+lY<roc`ChMrp`dlI'QOjlB=[5q#_BV5Edk8?3H^E#H(-V')tLbS%%EA"o]>
%FfA1\CI[01]54<sp;o@,-El<!-jIu^!JpsoX"%m.@Qm]G",I(0g1io'X!HU;Q:g7Q/oAj,0I9GX#"Co%fOm?&TeqRYbDZRQaS9&o
%X=j>5D>uBGq84..>1`[OW-"9#;@GCWX2rRbV0!E2_asP927%kd'4B@VisIEA-uLBYhTJk/(6EkaIL94*2==ZdeP$2?0en2f(7>i.
%<u?2X:ck3Ef-RET\03Ng(7)YNO*b,l(M$I<c&#U^L^M>P[NelT23&oO(uT2K<g+4G_Dp\lG#\hZU_U5EA];@miA+[[\iI1/2>+3H
%WK!P3[TR=(94)$Q/m<LmhGUGKf.k&E3cKbXm%GO:>u](6iqA)B.[+eE`jeDPU4TBkc">M!:fcsV7V3q90Z5[bp4EHQ>d;%OPsB;r
%"Y9tMZ%S($,-01d)&F::YTBEAYY8e@NM<U[2G2Oq?&ERXg?(DGmtQ@B\%MV<p3=8"\T8=BVgol+;cenOi"Zd78=^&SgroI30KcEo
%dLJ\?T?hJBF7E#d"73n\4G1ta&"I[2rrA[Wj`'0n0s9:&`Irle`G0K'4pDV=?7*A\"<W809n%UgCYr(kY$1lH=[_M[\*ujS&))+!
%8pU5"4MlR(12`2'"80"_8:5sdX;Q5CkV:Z#f?`Z/,%84oM`)(TN`*]e].1?)T%K,E&b:a:BL-*[RBgM1*qC'd0'EpFP=*Y(7MI37
%$3u?m"V(JW+;Gl^Z/2hJ%/:L-Jpr/mXdmRT0.\J_f(&na0M.72S)/IDnEmg=$HJigBcVbu"#^qPAbrat5e->MpkWGl3ejqu[Gr*E
%[FQG+@i"tKB@XTlV^l&sp:iVl@l+T0&"J9Hc1d]@I&kVe5$#1KOA-SdK@94/C@JLhl?G^WT;&^SM"*9K#e@55!BqUd/1gPTrE#Gs
%G\rMEOR7tr*r[Gg7Wr,fA]8ImW&]6TRrIT=o2^8[N<e)>BMVoB5<1e>f:RE#D0DVf7rr#Xea5"!dGBH/ka\HFZ,gcH#V1/sICS&?
%)oj2rXA258JD9h;,.Kd^9X'ZK0OiL.cd-"`8mRo!K=Dr_K")i4K"*s,NT,D"rkZ'TmNcj>Ydg0P:n@6I\8qIPWgDUe=;p'J4lf\@
%U&"uYl.Op'9cpt]&kHk&AUV-3L5i"HI,b^nC`5n2c$RKlWOG+(f@AObF`R*N(&CtZYSYLc3X3T3I2"gmmet9cDYqt;=0Sk)''5kR
%8^Ute^_j`:1kN=qn,9\]edsIiOR5p<LN(b=\`XG'F(i2B2@bB<8g][ErRA[OAX/eL:``u!lQJ[Q_k%OnSI_rO3rXbRiptLhRTMh7
%45#;4<]>Df2^0@%Rq<=1Vl:Z]U22\J*s*%05i6mEBjZ`l5j$M&LMXXN+B<Ad3Qnm@'C_(qUl<)eCd<*h^29pkZ/dd3H-!!CgO0F8
%@GXb,<,Oh\7+B+I\T&nhG2QQu4,7=qIC_MI'cc+TVr>.:EXIgKd\Ym3O^IFoc]Q[p!fSrnL>u2p!k#a)*iRt@lkg:d<PS&<D;*kM
%7.m%2:eb!u[(m$s<HK4^%SamcfodZ6@<C%Y>8nek$-'q@c;1JfSYB1@r1YNm[hm0\@&<iLgr4_6+mYS""!:a(&JdK;6P:0_kQ/fN
%_?ppA%k]Tq.BLC&p*oF%EhS0bY2oaP@eqZ:)f<@UBYaF2I>+>RGbf9,lA8tK,L>a,kEP#"mO@"h"%+-aq.7neL_R>D%UU_(#il.f
%oVFZWFWIf2W#gPo\]QAjBTk9Tnq+"P>h6?aPq=0OTD?>%V[,VG.b\."#GrI1\'F>l2+,D-CK\="T#C3sUT]CCCcP4I>hkM:'!F,R
%Gk?TlSabrq&ULuCKK:;!?r(=R(gb>`I-jb(q($7W+D+=i**LaOYU=I@OQUM\T@N:SO!qXSIN:*nEQ6ZYncAGPXS6ud*/2#"oc=Sg
%-i?#5ReD]8S[J)-p-c:^ce\r!<7:i8F!rqo)iAsWQ::HaG!qY8@7[u8UXbN.(:0c9K+INBj9'dJ'ouT<g?i*5nDO\g:A>rM6pAE\
%<nl=Fc;kn$57[I2_?Y?2nc?J6$I:*6r10saE75-.:A>rM6pAE\<`+o?8et=^.O#O%piXFYGpDk\^9nkmW4k2_of(d_1pe=fU@=,u
%)mlGkZtQN5B[Ygk\e4`<T<8)UF1<dfTF74sr4i0YIoG0kE;fVTSdpI0]`9p9+819qT6ije[tmc>"5IfMZe+Nrl<a*qWs52#`$Y$U
%^:1]*le1Q0oOk3/T3K5\nc?J6]%?9$l<a*qWs52#`$Y$U^:1]*le1Q0oOk3/T3K5\nc?J6]%?9$l<a*qWs52#`$Y$U^9tQ(m*Y$'
%ogbL+Sialbn;Q3C[.F91d15fD8V>>@U-:/t#MT3V]ccB/<-;+oIT/hO_64gEFeS_WiHhFnp(tB8dVn&[Fi1C%N&]AlkJ%BDO^"l[
%89!gqeHOi6%:L%W3J`'5NQA5%3&r2BkLSpMDlq#Pie).05J]hMegfrY%k3S&aY3G?.]uYgc@6Wg,.CT/!j;!/$@$?KV1%fcT>C3l
%>?c&tLf,PA'411A4Zq1E3<).o&\5=7Y8!#0^J];g`m_g""J8bQIt1/\^>@s?r,E\FYZpSJoBu*5HQ=-qlhtYmfEOJ)f),-Q4$:l=
%Dq/b.NkF6R4RCYrot3@Kd!fo`DZc$4hZc40f),-Q4$:l=Dq/b.NkF6R4RCYrot3@Kd!fo`[K/nR[K-p,'n8C6%<")\g[a*L,ODl?
%hk"'@fCSG"5l87F_m0j2i*372]jK*t_ZT;@C)[GnrmUnT2hSk'8]=Z!qG_b(0oGge>1.l:G_%s7f+!bPf)7nq")LC)pcIM%<V_KJ
%Q6'1LY]&8.q#LF4QB:A,JL*E95Hs3VhmOd#!WFl++WJB&9-ZR)jC$lR,Otm71G%4,1PO/e/1pWD9/-</#gFa,r2XAm@*+)a@*-7D
%;.r/0Itf8=mt2o"RY)mkLI\'6"TK@*Cq^FG9P=p%*#p#RjqIZ*=L.`tq,*FnI$5kR^Np]b:N6;7ajS"g$-g;LK<Ie=q#p^8Q>F8G
%Q:ts%Q5k98$I'snc`gsOIB[6KF0O``lVV=Z_1.1cS*ujgASJu)=W5UQo*d])In#_6Q:ts%QCKLcB;'U*rtJ*ahZle$1^?ZKQH$8X
%4MuZ+-(F@U,nl`",pu@G=_ODc5JbcTmiMG*;jBWb%.o+f9Dq-H(9>4_'7.#NoWo^.Xq;XPH+_iO[83hmq0`69Q-+I:mm!IiF-e/3
%aBLb+R=HK)]ZKqEAf74g&f;NrHD2:^<XgJ5qY.J^&?(cLOkVg.F,8)gqAn\7j0A&Va!3a!:nBu!_Yh)XEqt7J/k&!2_E^A&an[OV
%f!4&q)X:JX4a7+;>HaNOj;:eg$9nkll9V20aE=5Y3?lq'RVXBgn"=^g8o,QnEj]oJ:u$<b\#\290T0C<F7D_&];"EFW-QIQFm.i2
%OgABLHg@6XN2J3E!`hT"`[5Peh'jeQ]Z(oOLLR#L;i5[pNne0/&P8!17D:&[05m_BZ9,UAC(<:Z_GK@?OgABLHY\XY8<V'"R=:c9
%*K?MtSs%%D^47!D4m\sS3I)nfjoFR.H]<(C4]9O2VpHW;YN.>t5SOeM[iL0*H,k>]+9c?EZDHe^]d0Rg)(FCVAWb4V#R?%ta/oI<
%;3A8>O67om)/iJ3r/m]soCb9TI%;C#=f/VG>JGYW2ZYLj+W1Kh1G_f(7oH;*-uu0JlU7ioZ"kYRB@%0ArVcm;UtWlTi9LL1.DY%"
%h?Vk5a-c2\,A=c=X6%1oCjo_Y)%'sghB;A@8*2A,D8RL2W#WB,U.oLn<n=;.ekfk_/@grT$R<7]-Ku]*XJ)+J,A4]7l`Jpn4BJtr
%Z2Os&;)cW-2<<o(NPe&20K-MO+sXQU/B=%1fq;.%@q.l]=u`GuF:<ntS%hD:3q:d*\$=m(G>u'-YaEI'<,ueK2/1"7(H`BJNU]tu
%O@5L^,L50_pr\Vd1h3s3!HiqboZO_o:uS1=_];0bD7XS#oBJ&SPrAaR)4g5SN-PECD81N=Q>M8el&j<B5&eN9TOt8<`eq)K(TbrB
%##oYS1b!1(dVmf)&a<P3[5\k7m?*4@a>MI$k9ARGDMYTP<*9X&fH6EV;667WK3Z"u>mqX^h2R3h\g.K?X'qd>_`';giRjo6>bUMe
%#EH&CSq<9"fYgT3oemR)6@[pZ=cd(J4tJSsMd1Or",@517Vm;-Ts(qUB:NAPI1&AgW=^NS3`+=E?)UVF7NI1ISl/E?5rRb+#1GE2
%#uLq)6XLm'<RnP):#Qu_'MJq@qOA%?#-:jfT3?^XN7(0mV02C8.6OAs_K2+J)78>uS0^J.Te$X$j2`dE<):E\Ou2fGP-DdDc"#[K
%8M9421?00O,dn5)hnm.L)<Ac`d)DZ?gYI,<mtW2Lgh9Zh0#(73l\d9A'lqYU)B2,"qEWSYOmDn/2Qdhf/L;>g'Ld-d_W0oNcCeZ(
%2S'_^Ek<8$rI)mWY`#JS`D=?Y=OVJRc]g)^iO@4dJ[XhhGZ/iV*JH`U+&G/p]to]B:,G+qre,IPi'/;F7_5C?oXPVeo\>:b_!HKq
%Gt&g.5E7th`s2-FKB\fr,FXYts*D9hp61l+YVG\Ke9^*'**I06-t3_*W$(*AI56ZUO'bQZ%p%,]/<kop.CbbMgiehX#?^/KH(+S/
%`L&aP-#.36Kh=aub-h")duofbLn?f6W2kDc2c=$#J#KcX6:tBUc`38J;.<O_@fp1($'[K9bY$e@jIsP%O<5nsiI0Rdjf'/d962Z4
%ab\_]JI13;6:.,'GjW7tBG0QR9ks4DTaFRu6*MKR<#n2t2tPSp2q0VoX_HIJbFP,$O-BH,O-LeF8^.?p4j.d,k(V;\?_X5dIL8n^
%MlNNF5#gd/9pZUPRrk/,4<I\T;+Ds,SKSD3cE$fr']U>N,)ceYkuEYALigP1[>h18pphM#(a[md&T\%;L:ceFg0pl":,Nu[F[t^0
%JYjP4Ae2m78IU<h@7HE`7i'^d,GEZ7;;u\3\J'hq6/h]kj@uZ12c`T=Kum1[XXq\QfZPSG\L?7"YJTZJb!hD4-^EYAqV-:lB^9CF
%AJ$&6*EE/H!>:G.9F?As+*_#mIn@=o%TC1ij@?>C,6ad&0K^arS<G?&8KqaJ&t,Ju##A(LGW8H^ToNYC@")FmeY%`[;RMio7QsHC
%,6")].p2SVMSR'(X!)'C4R1!4QP-HBZ`,Rsp`I$I8`W_2\sN>p(oJ?5no,&S.+_I]$^uD`<M1dG*;DLi91pm;S56Xgj/5S"ob'(a
%.a%>mb5r*^&aIr2Wt`a&?r70CQ/=6/I#;I!EZMAIV^OC&\1+,MGE!;+m#)-,VhobrVMl`K&k8k:q3GNGQm2_C^'(84Yt'G3Wr&;`
%m0lA,0\][)"D1A,rq44f)K]Mk_%7br.RbBLXJRqT>`=Ke$YI!^bRGSHg$(1YP/e7!;iVilU-[o^0kj4rgEMdb7LhJrjEf;'P=#EC
%8?iBKb,``TS@%NCmsFLSXtcR#E2LnF8Ya!Zk]>D\"BBZac657lT[Ytm8=GSB=b&,j+9InkMHYfVqCGiCP2/W8&1#g>TD!j*9a![L
%NohUClTL?XjIgCRs6/d26QPiSKGD%Ub!>(_7q@]#_:877S38?i;H'P>7$Dc"<X,o;<CsGhW:QoU=BA@d[),(r3K0;Se.b9Y%%p&[
%BbKd!&nnl%JR3u,8=\l4KhL?7IE9\gg$&dGJ*;m;:dr$tI#Fe_7G^rmj5H4(p1#6C/,R67%]K'!r.GdFYf&\\)+&\?b@dB[%1+\f
%%S)sl%bFjd>UV!1P`i,\E[`Y=OpF9+\<]S&@hO8Uq`?'1'ZX-c+9n+^JQa?ah1WB#D?E;1WX74hm;\6-V<GA4@Xu"]T^3>LA8i_J
%\&U0J8N`Yjd?$,Ol'GH)HY62oT,<TH)gR,$@Y?W(rB`D'TM3u/;D_4l5qT2kRitWMr^be$W]CtFag)(>@j!Il3nZ&n2U_D8!Tl"V
%18V:RVaTnsCN,J)((!5J!u!i11]=.+JPE5-,gobQ\?'iE:aA8?/][S'XC]$^;&]O(Zf-SK-p_4GjY=>eU.CVcHVl2I1rm'3(4JNm
%50'_TgrbF,pE<`%leU/;LMJ(hZ8$Lt"0ZCL5m8!t+G9M'["NS*/"or1;+')VOt@7bMBjbVlZnGs[Bh9CI$_IhiC%>YUC^,G0YpO$
%h)/GHj`k0Q%=?m*R73tM&N!O&$HG;!4m2u:^VUo^9AaR_V3s]cjReg3*cJ$VEmjVS.7gmDjJ",MAmLh861Ki;&/m+C8b:c,`]"CZ
%Y[a_C2m4L,hiC<:(c&kiBl6R%3st;9=,+)'84m"9BcMaB9-sY0&.4(_@U^=a;W8,"V'1g4nX:uP1H/ZKfLLqL0J4db%-jLP^/F!P
%\[\Ec*\U'V#BT$hm@$LU-;T:PKt.hp`E1%h%r@A0=bZfV&!#4$(AL^qEa]D&4s4L`@2:AReubZt\Lk]o(g<<sS\=]4*]0uPr]lCg
%O3E7;joeJ=1tV83.;N]f1s[>Q!m)$+C/>P4PggSX1oiBhA6Or<*`:@;kt=&P;_j9LYL#_7FNVBW!>XO`__pL'%OXEQOGco;=\(q/
%q#p2/cKte=Ei_/ZcQ>8[-U'Uc-GVR(d5N(f<'VVmP;*gQ?8hi/C]m9Xasej^;j5^)h4_'i6shr3*>d1u_u@[8bH=u!4TI)rMTi-5
%K'#Gc<V"AJjRRH8!2/m4Z>8Gp'a'*JOUF$di#6Vr-/kE`1;'@@BOGk3NdI)Sk('L!QSE6bCITa>IBeOPr)]YBqTbiGr)AM1bn2]Y
%j#LV_7kl_%EY'Ct0Wt+I`jOc[!R27S#9H[#fpYmXbXH;$29e_lP"%3*GrB?T87)CM6Ka7:TE-d`4ALkJEX`6`loe^:%-k'XU^=*l
%#:A4'&bB\#*+Xkm^K0H#j<Womdlh8!3_Zb3!BKPs<Zn9-3=dIT17hk<F:c%WI*F_]O7Nc[Pf=B(&-cLF0kuE!XPS6P@>?$V_JtEM
%b'2m#ZJWQ>M9"-l;V[!PTSCusZG8B$@D0]*)kJ<aJG*6'QL.X-%+-5p:uMi$mu#t<Oc+c`U<PkR4m@qle]9@J6tOqhJ83LB4:3gD
%3bV?tV\/sW=#[LO0,eJc7D9*nF2t31`)Od?+A?X2erf!aQ$:VG`_)D#_YKte6TlL_QjJ?U\9VJ$%6;#Aai1$N'HTR!hb5=5kWD+-
%ck=YT'Y"@L^(sc?SJUfE:eQ'Ma;&-?P,D%aT3R":$VQ1/>n6n\[fsFs1RIrkP'@jm4`RsNS&s*2r.-k<Bei25HfhV!N>,K-o[-'i
%Y-Ti^0S@brXrc[pDMB<Kojolg%05dj?9hmJS#/%fe>#Ad;mn1D(6MVr\4CTs`Ys,1nS9(MPFOa+>E,+%L\sL;N[?.eU;BTqBiu2s
%URA8C3r\c7>j8K<G*2\V[:l[5%%iY*iu+YY!h'scDj5o9$UIRb8.fIJrH`#$hJiJ15(nDcMU_j'%DfZ5bX%l!b$9/BmJY_5Lj)]1
%M83n&T@"caJ<U,=/"b1iPoWU,+4//h?RK@0i-lMeh0fE3Ds+b[W,AB<jaedhKB%>@Cb-2YK"3NtK?#C7>/8tSd@kM1/99,@"1@#l
%E"Yd8Q[G]HW+3Yin-Ed<Uq;iB\Q`A)"uK^GrW1_AWA4$fU.L;iMWU"PTY.[C]G$n)CDg-"GVS]**co4hXcIFK(pth=SORQmn^&R_
%"9*J=n?"q_0Lq/K.WZ\Nm4O40D43]GIFtA-o=SuIOaJ;a;pbeO/n&W'Ett\S),-$i.d+Sk!u/!af1ca@])QKI,0u06g5euR`(&3@
%L&%c@,6]tb#IuSYBP-rk7ubeeF2n1*/+bFB`k/s5(RFlC^kPU!\3-hl/rnf>eds6u27qQ-OJHO=8J2.:5)8.hk;K"BMb?f(iHM4l
%Zm5&GT$'/b)WLUuX>A9Sb8[6)d8cT]#!H<U6q[61\n.FH0>#s:>Bgb;(V<$T$eBr#n6FNmH^o"aM[8IpDd/f'D(Er:#`m\'UUHG#
%Ut%f&QVXR7arQ0HkhaK'A'^eW_WpIiFHZc:`_WSi#,YX/jo-)6LUnXrD3T%:c_qca]XZ<TrW2[Z?kbet2?q1R1MEOkh0fFP_:d,$
%)&\[h]r[-tolHj-Srn*-Y\-!WblplD%`!6BpMicIm^Y%@(it-&p]*dor=Q.-LioFZ$]#c*BFF/#AI=Vo*]cA>\FSBI%GVA%J.gs)
%NidM3&q<''OE9?M5F6,)S4fm!5JA'E4Sn3<dXLW"/pY>N7eTu:*=!@^.N[l<54`"UWMl35*A-C6JRe:<aU!"&N^sD4""`g+^7Q;.
%k1U)'K"!Up>?6t_eTU3nUlrbi!fif@hUi#q?O\ZZGF(sXqOJNo^Q?M7gNfafH1_:)=Kii/K',ll'uj2u2FNVNT*+`n(eT^lHHIVb
%WF\n/o2WG,7LRo']0tE=D9)3,[1$ZMEG/p^-RFQ";T]Df3nX_H9"%<.7E_.l)B#PRAIkL;I-l+rfspfDF=LfT0XARGTom/c,Y>mH
%,D0R8/TDA^bjj[L1)S]e35,chaE/qC%QXg0:fYRpZ)qZL0mEKHd/:'7_h#amioIigZ@TlNWSA1C6bVdX/m5@gDSi$0<2PP,+Wa<t
%Zi2sM=H?kS_\JpTXj#C2p61B*mfZsH,Q@*q+:E9>,Q>_js8Dui?iTTprVuZMIf5'%r1F#<p\-oPr/^m@J,NaEm=5',hn>jd=Pe%S
%;r$J#4_/h682,`I?Y(%7^d[Y%pr\@aljEuJ*YoS%4K.OFZ'@nJO5_Q(*p)fH71ISSHPj]p0&Of=I1Y:@U,Y;f5&RQ*dKKSh7j1k/
%<ZFjeH.7=,nus`i;6R'?hOp>=R%puSfk;f"1-BJ9eY/Wdl.84fb6F%hih4d3*dVf06.fMAHV3?k#LGQi9^(/o,(Ea)<bGGs?@QAf
%:h>D'5j[X@#HG#L-f=goou@Y5R1XZf=Mq'="i53f+t7W"dY#s]EH;Buo-""6l3GE&Y<"A^6!nuK4Si5KbMaXKhU!Ga_^K+FD9blh
%9o=,ElejQ32-L:Z!+mGk0,PClpJ@#^?i7#c^nF.q(ZV[*_e3=iJl*L)Pc)#f0`jOp`nhR3jj&UKq^T/bQTCM>ImfK][<RqiGZ9$(
%a('g@!Z<`M0dt1BH5UT)ihhG/i%YNsS0\(^*T!X`^kMZQ=9th[+@&m8'Y(EsI1#'ZK=ksFonB;gFLO8qSbI@m?6[9/Wg%'Y*n,lG
%YI?4OdOK4`m/R[>l7e>i>>G-A0i.A3Qq#SgC2b)e6Q(0\Zkt&N^fZIk;0a\.nm\jiguXquR4_SK:gc8.1^SSekeok'<U$k1-IF6Y
%f0m\e@NLmNeEM`I/4F>"T?,/\BK-#Si\2(BEYfk4$dmpB=l#p8FA8-dU!JrY*(+&0q1tq\+n^3h7:$dQL5's*TenQ3))r4ppb5)R
%@[SrrV[qd'n[2sflRORsB<Nln8Y-JN+--[:`<2s0<=UE^oR"338TJ\Z,(cfXM_>QBMCKWtXsbrn?V@K^;)2r(^qBeEYV"1b7=ZeX
%*iu%af=YG:[q9]6E\R@hSAYI"95c(A*bXHo-Ds.a(BQ,'F"h\D_X"goDV3!2L0#/6=E/j7[nr7N/mR!bbU!9q=C),A^:H/X_t&f+
%gnM=$eh"?*3\e](5tN;g8BeJ!A9g;VAskEcNd$kVoIN[!F@%PAafRWP.K,_4[C/Z9V;gd,>2NP!*pY0'')TDE$1"&%@^L7!_P*Ad
%_,S`+^=9r!+Xb2p^;U@&"j65EfiuQQ%k\_am\"]YI>_N*;$;M\n/]'><[V[++o!M>4&G00:_-tK0pg1C.kl>\V<B00L+e+`gZpbU
%60'=^;":1.!S>4OWBZZn9Ts=M/sU>RT\(OFIQ>fMM:Co]k(LTiIjREuX&NNV?$5Ok'ZqKJp7$'JL?R&-E,X0hEOm022]$rG>n1T9
%r-J9@VN<IsP`Xr:>\<!HaqI3+P\!!u8GCNL74U))l[Z:kc'(gsUUR#fAJ$M^&$4QpE$\]nA]Ce"-k>>sO]3MY&SnU9>s)e'<A^Yr
%BjQ@$(qR4[_ZZb9;0\SM.kS?TBD2]iW@C.n&\eMSJ5j2-ENCikeC!4>?$'$q923R%CeY/+7(LF8/GfQtI-C?[RsNNSR)N2gVE@"S
%cT$?(RrH@D?'@j_=&\jAH@gX'1pDi@UD@UZ[X^:+VoI&<MX?p(8KEA#pZt9*`cA/!CO_)g1g))h0:*$'Dsij0]WhOZI7sNDI>$6-
%eXGQQ(UfR-I#`pGRY1Wa^2srcs.eYnY.ZBqoreY1NeXclm_9-.$e=&9\h"B:%Jak]:d-ATq/GEQ2L+!DY$I;afPB/iLJB,kcHZl<
%l5]VdoTmdMe9nSB&fd=im$<gCb*8)-,^,8Xjr"i+#=(U9*C9WbZW:Y'W=pAk^98u'RUK[/V;FZBSs_"Ro%N)ejG;O1JVi)Q%^:u<
%5_TJmO)WS[alW*QBc)>VJBRbUjVI["Q3,#cW%PJZ9i=\qZ]>hJNgQ.I7XqPJ=Oin&Sk6L^8QAd#30mV*ZLOqjq1[H)Ce&G4i&HRG
%j=f1;Os7GndV/Lb;`.,,Li#FS/GAquG*V>5eMNgE"fOk"TkoZ9`hX-c'P`&L*ZX2Ph[>q;TGSYie>gjX?j,+!7&(+$f$E-[75L/_
%f$Gm[K<ej(3kBcD&SdK\eEP&LFF@DCZ-^agG.,4E&9Pg?EZ4-t\`AI2%qpsXOI^4X/T/KYLR4afVPqshRCs0L+?E&[]n@dLr2%R]
%j&Sqi&PEfbkbb<VRT6>`Wl'Vp+EKHj,*S>X#gIC/b=_C?0'f+G\,mR/L,MCU\M0#pnU&8UW,aJ,d6'.EBD#`Y94aAMrWPH9S7`::
%Tp([^0s8c&R,%3OfVVO4grA`iV99_I4S.<WfGDYuG6EXoSQs3SXGjYAKC`9A;8ZJR9dd$Bgi?$'\4MONF"!)*<AGt-*-WBM5mN6u
%a=VpTUoL16[!<[iH:h)N@pVZD+7$?jpT&^7Wr\QFL@W:C*/>nC<aB?%Zq@JdMKTrn#t@t]6C4b"K-Kl4X%Yj\.l4/L'3^.f:"nO%
%"2$oUT_[K7"mpl@>,h:PY`DSb;E^[+;6!,.qZ,2QeY,fXf29rH60/Ot7,u!AkWqWEIGZg.)sU*]ee*D]_(Ha`2[Et1U0AukAX;K6
%-o!')M(3!.eS>mc#/gPbb2rO;"P6"4[RdfRBC05o>(NjjSVh<CiKlAf_3kl#gC#f7m<bg)<G^W_>:n-sW?7&C4ne1'iaI/Ip']l8
%)=7\8.`kW*CBRGch,K.;7L1rE@+p]5L!@9"h:4q!ku`>('<^A='8&0X[%Ao@X@r`,M;asW17eBFZ=c$9F8mR4?Ya%I5"2Bbo&;3Z
%ZMP@`bAP4kjbe+MMK7?WA+NN[d*OHDG,$#`=V)Y)!bB^bofLI@g^8b)lHR4RLX>q[-trV7K(6UcMi\T]?%"r8\@UuT^%]cjW>`ID
%U`b<_5hG]eDJJN=\q]P%O.n?FLJ%SnI"S@_]-5Q4Dn?J`3QP%tFT+1V2_[TSl%`I[Nm;T%][7q1pDZ>uCMUpUMq`JBKubgC1u]&C
%JrZ0$rmoFhPVaO2k.E=<e']jc#kJnSOBhcCY>@p2gEDl7I@s6d*b-'9O*n.Y$fV(*lP/6Lk%ALk?J9bl&panW?OG6&(#C)5;_jQ&
%l.*MK>)@rJ'2H.@PN39@aY<^78XHD>N%Tj[.OOjU>8N&/JW.)H4(pcpn[J%4H.P<S4H=KVeo](1GUUgK2:f!RW(sml2P;$UfjlaN
%m!%\U-26`_.=o:,F@4m@,6)h9<$^^p1>"5&'++iKG^J4iTR2?q#T4;2L(>]LLdZN2D&oQEpDAc#!N@ZKO1AL(E%W4B7.l4jhs($f
%k52i=?fik:+YR]re*RLTFM)7EG4b!A%.OH?\<N<`,4TlXYrR"?&,@7a3lDTfW@9b:Cn&<JZAFWcbS'c*E7]8WJFf^&c;Xp``fWH[
%k"c-fPKWY3FoG@#_?\SFckq*69dm-UO5T9Z;W.itS!u'i%It1/3sPud!JBJogcZo'l3Y6Z^=J@<EU0!<"S^6UT3-fl-sYF3d*IQK
%T30&sC2i5aF*8#5`>;Wl@ZEU]0[TPQ?P7)P!Ap.IWPVA-+l#rMq8Rgs_0V18NZtB%)Q0>IqS_CTjs]A<^)Y*5L<)B4@2-Xdk8hOC
%)pV=)JMre]k769"34e[Keg5Q20b9\IQq,+mbgB<`*]S?/5&3:I\aH_t[WiTu6etudJOf4<P$k&sQ9ujEL<ppg6h&%LBLVK[+Ae8@
%(-i:3'2PGgGcoUiT@KSe7nB!9&p,E#<%!"i]VNHUgN-l-6krik]&g<<LIa0URedXON5e0/QcPq#9nQN0,Ia1r>eA:Na>%?MmVW`P
%`4Q#cUB?tNQi'n)"qOL8#@WZ:e"'J9HB7]='D'G845%9frP#k:T8ENq]ZD/Q#%3),Rqu$/WI9s2=^SQG^?=58r&MP<.=!E&j2)D-
%:_C`IqCPSG<HP'L[/1D;1F-&n->/DuMZG]bM)F2#7em2HpJ$8;4dtJ(TH_(dPn$*!HojX0lX*cN^@EFV1#!&l&TSB0G/:Y]T#ERA
%:Y=t*rM3OE#7h9)L9^'Qh&GR%$RAc#;]Q9gR[gd-TMab69ts%\[cULg"j[a`%lna2GU)'#MSJo3X*=pA\bb#9Q\r8_pDTWS[\:=*
%)`ScV_4Bp-&`Vj+jW3FZA*DA0N7_%shH@:(r_F9>Y/o_MqsLt9fD-#d=_!s;>*pH_/gDe<*s]>H/r/HN!.g,!NY/t[g31(IqA/=)
%<[C+;Lb"b6,3L*#Y!X"X7W*G1TtarH!qBOkdHGNa*=a[*fL[HCH3$"HO+s?&]bHF\\DB\b6QD(.2<53`QTfd63=#B-0Q]$_jE<I'
%qJ1,Y1LSp<GX()\&s70o\+PGMF_f/+Ot+dp_El5@C_YHG*)]7daV8XJ/VlJODHWYmZs@*7r?CEt@oP@t(c69F)\;mqQ4X7]n'T4^
%=:MB6g+q)%ToF[E<t;@$2VcArfIq/J/P+2Ng*-3'815Wegr'WlXW"e(;e"=3pV)+P-OCHK`5>6-_";sMO^$.sHZEeRRuaAjK?:5i
%IE+^oZsAI(FOB9SBB0\CD]i][/r5s:=E_FW@EpB7h^7NZEbO/)`h8IKh0ACl(D6O[%W4+b+\!G=_]lE##srW%7M$(jXrN<EKR(kC
%,M1gB@mU#EjIl;:o!QM];0.g@$put'Rp(%UMZl7\,1s(E[gq2kOirKg!JJ$T-::4;9mSTcg-WNUHV!g;Wh15!-8rCmCiY]lUAT'!
%/kFMFg'uknLeYUG1W[&kd)DZ?gYI,CYEog@(".,'OV"=dC1<]4'KoWZ?'<R]6[gj#D3C1)Ob<!"NN36IQ7@/Wm)+;>+^a:Mj@@,7
%`Lr@Jh0ADWK8c>:!k?'Z8`p?W(&Gh/>cQs%X#dV.7BcI=X$cW*:nm!69(N*;h&;7kSt#%GI^s&,oI[OW8a1+7:/t:N:F#$FCY"'+
%]hQa4n^^nt0CH#7K5g'W'[>@B5TjM0>7S.Fg-]:VQ5U*jf_jKp-&'(P#W&lhFF;`&H1dtFODEC!b+2DaI<b)Dj*h')kG;M5QeJkt
%E_5tB?tFYj94&b8?LOOhR5L&Ka1s+F%NR8@+@46*<+MQ8iY0'klP`]=ZlEUn)Rt&K@]KTLrB.NNrPtlkX?f+#4:+DQ&9``WH9m?i
%59Mlj"u]'&j,*I++=P+0,eVG]s&n1\\nU8]JTp&3bn8.n5u>KF@[1O'9:e1^Q_VbEC$Kq$VD-)k1UN$$$au1&q1OF%%S[D#Nap$o
%]'f26d6>KYi/O6mg?uH:!=Kp,?$"NT2:lp7^=`[<bGM9:fn\.:7I@4dhg[-jlo0n-9E2S*Yc2rcnB7T*d_#,6"?!e?Y"P`/%E1S1
%1;!iknaBA/qBE6!eE/ra2i<'ZjWJ:/>:qZ=Cm'.p'C3kIkh?g4>:tYg[IosX^M(=Ro<01bRW*rMd2g>Z,cA-WK=Dt%\fq;<XlsLs
%OU5=QN#)%;at)"Kruo7?Dq#2Y<km`J@"Fd?ePjY+L3LlloI\e%ZF@TT5&>!.^AbNMq;:VgIbnO3;*%<i`$1N/)TsN_eX5Do]I@,;
%4G0aE^<n!QXfdJkA`tC;j]->"j1YNR`GTfAPh!@:\a;JSYRUmqK7(!8<VDC*m_`79rGc=s]YmpTG(?)uG:8bQd;H!TW/!K.L*hc@
%o&MVRUMEmBrY2R,FNh&Zo$6:,W>Xcd20AG&jE<3E^&>tk3X+ps6_-8r3l?3LLt/sYIs\3\J\o.O\`nd=We8ki"k/aI&'+/7:<ju!
%QbPDbM-H/kf>X#u\#U'iCCKVAXW*bb>CZ\4%C0<TkW7GGH@i^rNMekM9R:OgpP9Uo.5dcK?8V8pk@\k"3f*#"[?YZUr[P41b,*jk
%:n.!7/O1@WN\@Pf`-&NY=,p10OGcd/OI3,A'CG@t<>cuc246(<K].ZL;lU>eoI$blk<@,"JXtj1dWWAog_C9>))VhVO[HOJ\Xn2\
%$fZ(`KD+9lL66iKmpA/Ls78IV%.1#q@CK]D<I#)CP+[Fc^0Thq+*6@n?eY/bFH8H/9uGdm_Eb!8QV[hAK#0Y_#Io(5]Lm&?SV!QU
%\!l"/'C*.?UH3Z@i7kcs?GYQUAd(s&'b%Pf.Ah,BMu#9jSu[_,OsTS`&)rEG)^NnNhU&e[lM\s9`^ut-\C3%uab/H\IG()*IHjYh
%f,iGg(W>IVU$l&-8I,HtGC=23-b0Hhk-^%5UXrL>GVgl<$\KnO'H$[-;+lDe=fQZl7Ho%@_hfLM@eUORV^^QF5PL/p6<.j^pb;,[
%@[=#b#@o\&*Qgn<*e-1jX+[3_f9KP#O]CuJ@@&"SP+\J_.<TLd$Be)6Y(_-aKQhjPV]2Y51=7X$@\d;ucE'1n\Zp1>XBSOp5<c`)
%o<BhpL)a^-6-4];8?Ic<IcRX'-CEiO\dq*:MC4$'6'8H!@jS8!;DZLiFLIIU4srqJW0=#+HjJ>.hGq1h1h0PVD%"-n&T>X"*U$R+
%=[eQ=TWY:Og1UE]o35bGDf9_,FY$W"*l4VO1b'o]HmCmCGEIqMhb3<^1eX5A;P#rLkl!:U,`GhSY[6$2e@FX#$6RX;K]jdnc_)53
%h;(TjF>#t6Nq:_V<:/h-77racN>^pb$t7*Q5*HrX5=`9O)F&hnX(1B+gcl&DGUG_VXJ5mC5Jj\uk.gCH#X!^Ji>O94ct0,L$cgSM
%lA<kXO_S.,b9;j4+4Xr0,D=<L?otIgp^e=EU)l"mX5i;FC?Y/?LF$?r"lfq&R)XQ8AH6%%0/^866`nX.E:+N@&'SgQ)cLbBI(*>j
%P(^nMg0(<HLN0qk(!0e?Tf+(MeI7/2*o*D5LhYn`ak/G*8A-/FE+;J("Rqn=:Y1:tP'$67&]S&mj#Fo;Ek`C7hF\k3F@rQ3nPmus
%!?Ik"@;-U%>U#8#Z^$=6_]A/rTI?59D7:Qd@MOo?*<RBUa:?/t[8bZ!MJ6?YKR0M)I;p[J=Q#V6Kh<oU&&K^:p-9se17XEQ%nI1E
%n^,eJ<I.9cXk#-T(2!C7&ThdgrZ5R.:S?0$dD"[B3^+"W<J3H$1saE4^sM+GXHF*]j8Nmd?;F_?rjH#AlhN9]&(k2`$4+#O_L]F#
%2;oAP6j,ZI;Aq@29]=tdAu-S@KE]Idf)KYcobl-T>A&BB\L?EeOX%btR[-;c'\;SZac`d]I0ba,Qae5%1M]r3d@(IaBi0t^/Ik5>
%/CD.S4iDM8RL\O//3-8=@Lf+5i@pM#(XtEp59hTJ?1Koo(BptF2I%3tnjC%:fAhCrb]!d0gsF=^WAsIDkW(?#j'1S)LBS%I/8A4K
%eH3"hN/W\SI1teFNOgr.VW=Jl:dX\)(3(A<#DuO=:oCK'YD>7)P!d8d7)Y+rZS+1,7%lD6SnN<\Q48<f,Wif?O';4-dr\"]>8<.;
%D0Uh*[#Sa8?jXu$Hobq8/U/Eg@Se>ss7J@/YP3f<f=OEBX`o6FhI`-&p:RFQ7Xo>R5T7*S`g\8.aNu--Q^hG,B:8ra;#i!(e.hJ>
%dc(8a@tJurJj3Z(Q)\e@OUqsFST<c)>q6EfOJEfI>+^F]UV^jg,<q>Z19C//g,kHoI;]J]S&a.@BR@:6CIMh"k?'6-r]'1k*@+ic
%qp=o.-I23BeQt;I*sa4ROgl4K@!MLgDAa$I`soV9IH[I6)OJI`HO1ZqnE8GZ2FsO5]*acVQ6T8SmuRUp#s%&bdIl5Ep!FNg*^<Rr
%DSa!sij0<LbmrgC;XM<H\a?ubDKH]f3Asu*qgF7.JU,u5<+(4$jm7/5>P^mQ(%/[U6070um*j,GFd5uPCQb]?0/qcG=Y)-H>r1se
%Rs1mH_gCqj]0?[>S)(6*)1pGr(@t#O.(iEbmf&,=KXr+/;X'=i]Er^TIcUF-&k@;*Dm:3q`0Bs$b!>3bcpTHI5\g[qLaJA(Pu,=G
%;$Q/L68cIUAZ;cl#kUb6"J.p*</[3'eUq[0C66JAF7Q%)Y>rT2ET9r#B1//5)Z8kM\?jQ6JYF!J-Gsp>Sl%uYG;*,#V1ctG+c<Wb
%f0,;".J,ZpZjhifZSt.!oOgKc;:&NRCQ&]:EgGEHRgfV%>&?KN"9'$Or57j#KF=bbeMM-^1a\ac.DViu5%$0O:)LC[P2=Y)[4nkA
%K!,*9a2[>*HX-KcL"%h;VrL]Tf$k$<C:u_`$b>fs$G,aQ=-/D[h$)Ys;'mML5)!"HkoGM)2#GRHqDY%hH,@'47_SB]6?H9YE]Z-7
%VMnhd[rbm6&"_"*3SE#)TDm;A<iq9kb4O=H+pNrcdo0NGfjd)0k0)%'j0sG?p'ZVD1tcs$ErF61G4r/`iTpa8"+1m=R"'ZSI(P*p
%Ke%(9a^#eqfW9B4%U*--,A[Cj,SG2aSmc9bo0bdY48?edpAs(d>Mo$boKs4DE5=/(QaMWY_]_B[;ETWss/k]nG&5ikm,ecL5FdQW
%#0oXaa^gRPG+f?^fRQ,ha2UR@]s7[*e<&BBr:f?2#Iu%&k)fdLBR<c^Prfh1"j)!UCG!k3YTmZr$]Bl"U<YD[ENP>QG$%Gt"lq![
%q\13)ilOt1$00#A]_G_W=+B(Rrjb]eJN8oJ3\ZClYR2FnbnSKi0e$MSgk$\oOE-1L/nmYrZ/D#k!rQbRr=kBa=DWE%MpY+Z3qV"t
%cfMO=_5#K!S`N)qpU4XME;<9`bPtMEBe95qVl:;NEIu?JAf"nGNrf`t`@n3>L'dk`L%R0Y;,#A%afSEG%>P6TZ.sGS0-phBA("'?
%UY=FuUs]5h'6q'FIFMI37?urs\b%<DM'3Z3-jlT-\?]nURhLYWKuLl1Y`&HKOga/9#2Z?K@nU-a`'-?9#+8s#oQl3gln:?>pU.^V
%i$e:jR#UjN(51dGr;^''rkOE)@U3@OBX^JdKf9Jg4nX2aX:#J-MA4gY>1WkhU@Um-S#Q$40ODBCN!Rji1LKg["4!A!kW?iP9E-j+
%FS?Kn4:W"7^X[7H6PcKU(_\E%dFFQX(&R%\V42j?/J8K/B;ZBB*O5BJ`-.lf1h/%h5JS2T*s`cX2p=c&G[!"\$dDp9:Y/:j!qk0m
%mM(d'i-t1l(:50\'7#5^Am.#:RdXFb#f"u9gpm@?R""S,FfQP]Sc'<.S6R'<?"<0_Cr$K=/K][.,-RKp)i"Tbe`ZGpY#RS/dggC'
%pW_NT*b"&cRYu,`hrFqOXO#m!)Z._iXnDa!oWqBLm8u4Hn_Ve,)Kbn$cZ?X"!&XG&6D+Fn[KY,fZt_M8[93M&IHJ)V?6L_=D5%dN
%*QT*gGKc8?k)MsHL=!dH"muWD[6:RgrISAmGYS/I%F$2I%"VjP(P*rYT1)A?\L3c$+Q9"Tml\C:^")RuFEJPkNu_Br>)Fc##44>?
%D0116CQlec*Z2Q!1fNZC4\_9'5)MP_$?KjAn%W59$NuiRA0`M7jDDEkb3R?%FtoWRZ"'5LUb;&b%ZHh7b[Kii05c>'UWDk`bl!8k
%[IituR>piYR^EL33-HGlNhELfP#2!0b"ek1Z![&=dEi_0$SReh<F3.[pT2*36'rKq:@OUCT/S2XTD\uJm+*OVr[,Kne,&S=J`>n#
%]"6V![DoJqZA*j$2s16<>*7E+AA^R,9+@.%7db\dc+SLgRunEFmTG29^[)sh%scZZQ<Gd0eL="Y<#`::/2AjkUFPB]pZ!sdrD)'J
%I6-bM%nGK_g3WhS<Jlc-.#F9d(iZlu$qt&A;?N=<cD)DO38@F'hU2<1ojcIlqq(/IACs>k>Z#&uo,,T'=4`D+@r]:Y;kU3bJqd&j
%6f#)h'P)V+_t]SVWZcG+S6?$9gc$';-sY?1L'DG8MbRK3N2#P#^#D3$S5#rbi(Y`,S>bSH05B`D[HcV[r2%keZqO/B$ssci6X-2J
%)(aF9W3`VG%r*&h05GFq_.MH_#_I;!FZg.N=I>%e`t^f#(hJ(%P#>[ma&9.p3Y/gkfsO;gS0%=Co'jt.I%P>7io#r]HY2j10IB%C
%nV$"h-.bNFLQI)m@@,YjdKOW:!`NV1L[n$6FL,]<`Hf=n[3/)1bK8\4[2bo<PTb_).A$i(/pf;Lj&XfKAs^^3-C<R[YpkpLGT.I:
%54)Nh'/2Yi[6cXn'1nGs,.b=)SA88I2O$uW#FNtToB\90=LiUG?l:4P4-cT[KeSm7.@dMqEE>WU(8_?XdSf^Q-Jp2!h36DQ:ie%Y
%cO&Ra?ZsUnK>40kE)@K7=Z0W,%ifY0=s>mBp*:rcCMlOn>%'9gT-]>[;aVD-iK))M'hg@Hm-qj6[ae$9RR'i;kA8R,\Mkk?o+VX7
%^Cq;'QNLYfIed/Z:CKt/$+K0L+Otr%!/#_jZH$?W9<rO(:t6sE[4%`-NiYIGR"L#nPsQmE,//"Mf>r0.r]E9S&"R%ZX*LSc#k-,n
%goRoEGm:NYnGD<T7aP'hcca3kSb(F6h9<'ZKm0ig*"4t)NDiJ/MW_A5Q@0X)M^Apuo7**.(h,Yhi;Bt&R>e?%mS;T(@uX.O:s>lJ
%[])#OEiHs2->EV<kX>mINE+bVNN6qNGJb]0qVBAF>cn.eL/@P*QT\<0=@l\r;MjjY7BZeIdgk6(g"kEc:*0)"qdn6H.e7$hgkjkZ
%'Q<:lr4?"Z)Eg<Lihp))ALkQM;"f?<2`_8iP'U"bo.qb3:!oE>q]!l1rJ6=%1r#/r>6W.,]/Cb04LFq"iO)B>'</m8e?19u(D'Ac
%\'=)HGH^Dd497mVRcsq?W]9jX!A855O]?frI#Wu&>*n:Fe$4hLC<;Y1SZSlSEF>]1YRo9ljI2;jep!+XQ5iqg6/%T3%F--.833%R
%WWZki$<_LC+uPT4o7ui<:.bpcD"cFcMUkaLcYZggr,9L6pM4#M<5-pEmOe$UF1RI579rbqaed3j*lM_:RNa8H=,LUnYW]^'qAhV\
%gg:oG1VKeR)fPI&S'^&Sc;g1A3V2T.*1X(C0q)27)11Bp]ALAmjWm9Ma(_i[R*uq+c+U)7@FoOEH4K>Fn\mQ<3e`AG&J^l$cGdgU
%WG_BGPWo*+9DdgR$#R;ao5k?trNb\O&Um1De3Z[/8E1a;'!>6S<Db3%K<F,,&^;3?=$Tu*3q'7;iW1AElY_QT4N>qIPJ8ro_OS7g
%qRW>&4f;U&&eFK-EHM;F_o[3qhLBR,kRi7I3:Je>gnT(bDBf+.BFhL-J!ltq&Un"nSr!>gHJU'RT)YkS)?7Gc"$NdiA#c6^)+.?1
%4<;F[a<u-1flm^@goN1V0M'mK%knDh\;^i#`BWr+Q)pgO*^T;\'RtZ.EAOBI"YEp,j[+UXn9),h_'@0P_50I2-X>U(EOm'PE%O8B
%rD:^a(s0L]r*/ZN&fPdi%:Zs#]Ef@+'_E<ikh,p^,r7t=e;dn>[N35gTaF+=%"]-jnNl.J`IQ4A"6s,(`S$aTI^;=RrO7gG*-7pN
%P3h>?@-O$(lDabe!F)>9BGOlG+Ll2M7W-p&q=1sYS>jO^S,$t96%Z%H677g^E;&Cqf?55,?knbWfsSc4!%67lL6]e5/`25c#]X[/
%KPT13'X-0M"&)Gg$9BT`b/D-T\CI.[=C'W+R#1:Nr99g3V/->Jd?X\2?7G=FOU$,4BC.4%pFm-Qm.r;)*QL.uc6P?`[@1X%?k_52
%g.NiR,L3Y?[?,&NiV&LNo6#8WSNF[</S4h+9i_SGDC1dOkrqBub9X47a"5Vm*:HXZT*eqW%;-;klAR8[5bR5]-=ToX:pVF"R)A_K
%ogJHM%G9r%Y+_]V8C.@-1K#>(AQ+BS0]]\*_X+@PQr$m9D*<>O9^A?5)kL(2UZ!=PX3!"ko_H4()Cbk&<3CE:<(&18-8<6Fi"$aI
%%@(u#'S9&TH;<f@$kUcon>Aec,XIrY,"'qi%.o-sg#p8IGTPgI<R5iB]-^]Wa93tFa#*hG"(!HRCIk`trq%mOGTt7s[>ljNbe2B&
%5/9>l[\]&0N%.[e_lP(oa"MNMbVBbj=LKIS!+qWi9g6?/nVeIZW)-,"m46&tirQ4<hL5G\O$r%0Afg8M\s[2u`-JJ^$@@M!S2694
%R)JgFR,",QIiQ<a`6&X.:e@ZsT_^U-DBUT1+V]]E3ak/cpGY[faV[.>Z3L.ZS=<c5R34&YE:`(d*W+>B#-JNrdp+H\GYo`BgEq0N
%8JJisn(f>F7GnS/5IK^R'W[t?hujLf&&DA_W&5;D*gQtf;Kd"K'VQSXE+Y1?b$fFFf7ta_j#o8?"GJQRfQe`oZS+8n^2!-,)G&")
%l<lMuH,Co\p75$]?o?%8kZ%FQ^pK[c/t%Y6[5%o;=j>"BZ9n+lUe+;>]5BMJ-:\n19^$#,dIWC2oiT6[+h;9OI7ZegOAe`@1aeaA
%Q1LC1j9l0PFJ9U(l2r+6AgtY1>#n1C>h")G+%""mV+2B19^(Q"#^TS/qJ:ehQHm3Kas5Ro%Co.>_eD'+p34obmAN;lYZ');i/6Kn
%60LuTM@0,IE9iP+VV0MoLHicFmRiWsC7SdGPXqqe^%_KCUOQ6U`"@&Vo^jSP8&JO/FeX+p9o7U^9b([?_\pb^s326VIM]PTIHk*B
%E\Yq-P/5-`Y#?U)`='N--W.8-giWEZieiqV8R03t+5=mk*pP@ILQmr,*FhCp/f5).aJ?WtTo?^k<i3r,[bS`ljgG;p;^3hag]^Ip
%-b\2sRneIgBH'ME8Yo;u]"$(n4YaSo3Hd-778qno7`(3_f`u4Rj!Vh&]9^fKD,1F%L3IR$oH3\BQ;MD2#C;&#bCiV3-UI%@9t/fj
%JH!5ne^ql>"JZCl'arkq>1WT)<I;P!O30dfdc0"T&U&mZDiT7GB!=f-@J]Uac#)dLP9c)*-ZlXc'PDW-H@E2:9NLo2Z:SO`O4BO6
%:5=1?X=7Ron]7Y&EurML;Uj69[Vr56$/ro6.E\?8=<FucVT.j47P,97H(5#:0/q^!5st[<_)n,N-'#)dL/UNDGO'$GCE$d%)kfI9
%9[VGn2bqOC5oZ?>Yej:"ekUCOK^li/FL"IPB6S6>I^a.W1kV'AdsVBo><>g5k&<Wk'YQ?i\2<-'b8AN&pl((UT!8!0O#\GB0P63[
%*_SoA5#oA)9AO:X'L@=oHZP&P$>gG=fj#4mGA_a+E(%N0*DFPiA.&WF0TP#XK<T.MQ[nVA//VHq#3F2U$3/*6NOb<D)4Hq=W5`@s
%MO]"L?RJEI(`J!sd7&(ukbdf5?9?oU:RNc;S<>\GnegptCDQ>gR>7<IRfr0-G.)UY;!^_&EJ+@]OM@818n!18rSUo017a-K0#Pu/
%e"`MiFS^16TY33.OQ"@7iH34Q9T9")7(sL-!n3#WN7/GHe!2Z.A4RgJN[&p4\oh=N1.JBAGd9=9;IA9AI<Vr1]4N\n0!8MY+i^U'
%=_o#j`A+=QFN'RhMcJX49%@@IWh7H`KqDqU+i[3'4pRCc=E\ZTgr+II6"ufo:f/E?.ld]LqkikEOjN0`D<^tB;&+m^DAN\+Q,_p3
%TKXAM,NcYn76!kP-+^=;!>$;?#[7ol?OtM]Re(:Adsli!/C0`k+qf6@h<fGrW^_5tfn`P*ebXof"3O[3G(K$aeU'ecbbj!nF'%f;
%q=1>mb]G8PXT<:*Xs_:neU%BV`'%h<:C%QWOU]TsW[Agi0JM)FE:"2q%[t>*l/i?o%EmrQ>W9CH;VM#fkWX?s/mtU[@pIt>JrBl*
%C3UaP0u(N),6t*JkjoiV3(Q5@V)3#hDCW]k=55NBfnZcPLIq&WWr!4C.N7!'/](e0\$cdB(>=!&&(S9G]PrnnbOp6%&Ar$@PJqJ3
%V\s2#I#8D=[t+8u6u>L`7EEd[T:<[MDs(Wm%TO^CTKZB`YgM4drQ435glR+3c/!u%!FT)b?H*7b][08h^44'1b*G@Yk$1H#7q')q
%c855ZeT[q5+bc^EdNM1EDEsn-/pf7a!0`)\lBt"T2+\Q=h,:tg';?ne9p[I3,`sUZbaie,;n&0!V/<4AT-=snT>'u+@Y6.7;Zh\Y
%MUm+aq\d&I+48m;dVh_=aRT@H?u\o;&)e%Fk]1ilK?O&(CVQ3H8mlg@Ym;`>DCVT)*V@(AZf!<o]FT>^Mbl:FZ!"BX[YnKLY-BiH
%&T9JF-R&.uD/d-9H4`N)UDOZhj_Ln&`[M40n+j9I0[6%@DQZYu><^X?4r#SNcSA\iZ:M9<?eZ?0k\N:OZ@-[+,"nsG.d]'$]i?.+
%fp#U1?!RZsk2g#SgKYd/H-bGB9MVj0T)Eqg.,aA\g0@9IOWMUZ7eSl/.Rm^O'c3-AjMg*tJ]&e!PF7K/,Y]]1e`0?9:"_rY9M.)8
%^.Itp=4#_sp_DaBM\]4.2""3bnZ-D+,kgK7=9HRN8+#u42T4OJDO=o-l/q/a"+RD-UT==r((#UFpZ1Y3[^E\<ID/@LEr'U!]oWg2
%R_rNJFG'"V?9*D2r,0XP>Bs7DLRu9;]5$\"$SW4rZInod!5mDOWNuqdBIrGS6VNo/6C.EG!$t>Rp5*,i]W#j?6^i^N=np/-iOB77
%CUIu?kilgjA=0HI+EHMr,sA3Cq#kMF4<Du`-kE>.2%?1e*_a)DOW5'V$2ui,U\D#UMomqqpt`$rb6A<6&_Y4/F[S#b/@\7/LLEcl
%=YCWaPeo/K<eN,&2!\[cgouhIX36TMf)o=ATO[98BiY,Cr*UCH"2(_8JI'0RAumri#m2EUJDTT5YuBF%D'[3!5[<u5mBn]NG9)Ju
%)VJR'R7rP8R$"Mam"_/qf2[$PF8?W*O50<ga=:="'_g`:(Z<.oEK^[F#1)>3`KW2bnR]&^Yl1;]M#\93[ZVa9\Yk_"4CROC.HeLD
%Ur0*k?ah;Ho4c=.7(V.7da;$q0WY_JCcW!r6%Oh?-t&^2G[d%B"ADC!D>k5`.?h(hVe/6J!oKqJ_g&E(V67[<>q-k@3/p3BYDVRS
%,r[q_eYm_87=l6]9PH?H_SB-fDd!O@VXXr92R/``]F.h..#s0WL/1g5U%L$@]0rYi%FTctRU&dFK]&`H+b=@tpZ5uhju*$LnArH(
%O1S!Q5!k$./+1b5^+6uUYX_u[bZn0o<dQn"8C>#8p?AZi,fe03iPgkG0<#)(/223989d0P'2&&J??n*4)*>7cor$++KQ.h+()EH?
%`m*E/eu*gXQ/!t4-9)d,Z<JGOgjK=smNWndE-0MY.&WSO2_?Dj,-bds5H>n=H$73dU'H@b^$H:[lUK/`H3H<KRN@FUUK8_S:^nJ]
%bRs[7($#YS>&`::ld'T@:+s9\9u"&cR\(W7SC:2Lo?&16f;GZ2m\gqJ^-))*3%[oh*`-q-j'h[f_%T3U#g))t^5#KWeI1@1jeinK
%)@o0Z:G5P7F8im7Cpi8*GuVNd9KC;#a]Vc%/IKh8koU^%Mb,2oA,R*q5e?ipWgo?aMc?j"(*0Jf8jAZK\5o-K$X;^D?Gh2P_@nZZ
%G4fB+Mtk8$HG/XBLK#/V6-_5TEgC.#ZP?XR?_])_#pLfkW!h9E)mdWWNp#)XpZiI.1V_N_<tgDEaLR7`OsEhK2J"Ep:.Z)9-t<dt
%q!2'BALoURWFfr5%ucF;KtN]3=kQFF']I'RQadB*`^n0+X?r4SS."#>`VK>m\@\"9l[c&<)LeW=(%\t=;8NLO(l!3\2g!HW7fs'!
%G@Wi$mGFi?$JVO%Zf.+)/U1cS(6JihLtl(CG#uH,p[t:J,LI8oKpl*t'&lSK(QeriLs3+hatE_g[`5&4X6FI5,8dUFkD4pV^dM^E
%Y.d\:N>J67)OJgKh$SYp^.l;M_pV)Jb$TpF>9i3?hAAV:V6!6h(l$-aCX?(32ppl06b!T"$n:f/fLP:Z_lj@+p1A:3CR?/N,Yt`F
%16Dg/7d!k"6,IruB#,Q;CKg'Y*bct%$QVb:(k[[d"&)*8HQTP5lhV>j."kecO+(LTB>'O6+rI5%=8-c0k^ecRpo[n_3[>5,h2d(@
%-)YM89%,otV+=Ea[P<ugTE-P]]7m4/3$Su=.s_>Cn:t5R[PZff`49-?1(U<h-c`AHc9?-ea8(^Akt?[7KNAfr+0R$=\WddV85_ic
%#n;#;lc(Yd-;/O/8g(h$pa%;,c#O44[J&:qPTj`"@Aj-YRqBill();\'/0kF_j2KCH<"gT&,#.M$VWY<LJH>aT/lrjm&]H/qj-=B
%;j4ejqHi1OF6k,(5MC:$&mof,YZ1HR>M>97TLLI]:K9&JR+BMa4Z"YhYe8458SELeBNPT77JXO1?tIg\%l52i6arZVeE/fY]SrK:
%-"e=C+)-tLRk@0T6l`h?5F+8ce<9r.M6rLpp8/)Qe@k*7\%k3[LggP)!_3'OiN_UIN>/M<-^_o=@EXP.)^G5?+aH(i&'=347?(TG
%f4G\iPg=9\.@9OM(OsmA[:D[(+$nV/l&3;]i)bTn!T!0OZ0=Q6U9F0rN:@NF9GA=Ul@HB>(KL>H\QVZK4t-\0)ZS0V43Xe#0^"L*
%mK(3sPM8GFOn0I/+a:c-:Y"llS*LYN>pDF&1<*UET*0MG,N!>R]iCGkK%FOd?P2GG79Bf$m!,#>5qa1o]D&f1)*Q\gP\IBI2Eu[_
%kPg>R2@&jG0W?qne-2G9Z0A^WE`UT7:6LQ5(N*jDk*gk^#sCmubS@4Yr<OW"HbYWtS)^HAS?qr&iR__&QsC7lr[\nDYcQA;!dq#5
%$nZ<FlT2I@FC8iFD*WikfeiFoJb)Oggtu=CcfZ,b1I=AtMp#pff1iFL"&ii$QB9,U9At8cF5s&mkHt:l(8an0Ye*9(RiK^P'Mo-;
%(_m1Z_ZR>4>_XFJ)B/X\_n-[%AV/r/JlIEWZ?dl@p!qa_f>JqT>`;$.FCs,CN1o-`a`,TT)>mCb!YgIm9#c!dC.AX+,"?0WWN#>H
%AtsQg^#C=k:mnFY84^O433K=%i9RDZ"qh)rX;^@#hGn!fX(Fi6Le`/s)KhI21=,"&Y,fQihomC<a2>1*Wc@g1;ccc.?S;b71#OW@
%SG=YGR40D(;JV*X5@4<GJGH$/qME[`0j6OFB?_(,,h&I+A>F?jk86_1G5+7)I#`%lH"XWOaYYYZiK,sP(QQ=QiRAVlA?2"F(fXG>
%Ci%LjC<H:)dgcmE&Ef[i8t&f:^0i-e54%GBdj'BRh?-G,c`S63"*>C#d5!%H[Es_%g$Fi1nEU.:/#U9Yj8iRTIZ=@nes/tq;)*?O
%0<O4Tk:dQpJ/=>l48o'rMO7mXZDj&eWNLGh-cHS3UtB*"%rf;25h5Pr[PUh$[b>Cg/D[;3!g*`_9`rB-_F+rJ2/;OA*!"c0cO9XX
%0[h<l%kn[e!@X64SX8'pUo#p[>><R[&s3EdM-O&"79jYE^@Ya]/f49ti6]_;j8m!\II?`GlMX1H;stMB(??\1!8mGJ5@<`/iORG1
%Ff(S6SJB4IV;h"1!cKpT7-"A4R$I[^>\5GqXfVf2PqTpU*DE6QO(#?i<?s^Xa44+=@BunSP7/g[QR95>C_[o>dKKT%J7Zufq2(^W
%]Sg8X.(9'_fbElN927,"V67qj<V)9icsN-".!k:;E[M/=)"'2/`Sl^/J]9s5r=cAnJ8t;h7c&lAIL@EdXW.8+)bA4%c?Qp)b_G2/
%khS54`DMrZ=+ki*832e*PsI)W!@%(7_^B'_)hFEnH^KY_**:gs4sUOmK1+c$VTt57X6#_ZLNmHr,h:04qd"9Mf5V+9'2ft@A[<S>
%]\YhD<Qi!Z@."Q2m;D0'XCjL(J_PRd-5O/XN-/(IY%>(h]$WCNC36R+gi*s7fO@DmdUq2.QI3*,PBT\r/,St+#&cH3<[=)=)o.H9
%j8#LRc-b`Y`Cr6]=e:VGlM_rE8Hi&'p>GEa9NebpqJqO\eehaPf75HBCOj[lMT3tQR5)qL)R*dq%Bu7+JIPHjm&o8PZb-LS/#K)N
%>iMZ#3,CB$%nls<$N)_TS:8qR<AARf\ChT=CKAYjG""ca=N=.8@-LKP@CEaV2GQ+DdAMfABl4t-X)#M:eMY/5!Y%fJXKHcJ;m!41
%DX,bEgB-[V?Z#%%i"4,eJquP)dC#gn3%Y@gF)@mqhTe"R3E1YnmZj>I!*.QrY]EH+</@)DjP2Mdde"Q#kE[S.pmD^j4B@gsEc.jd
%YkOaKVmTXsd-9<uT]sZ4:igM_Joef.D-e1"k5'1Ba.6F$c^/]G(oQKN&k:B`>JeJY`o'F_4llU+r$cM%b@=9%>678=6E%H("H%9S
%hcGW9fFu5gYB"f;-=u_qGAdU#SOd=`EtG6WWMQ4ZPeFIjSMn/e<62MREqPQV77^0fT&4>k=[^X3iMe$0=X=TAS'C5^>U8[hVXU%H
%6KbcFdsYCf/7Tr7)0QVH/6+ik=N3nM1@-3.@/COa!l=f&hn5R8n6=X#/#d5GE>Gg8k1TXU>im4Gd6.;"YrH;Ge1m8aCWb9akBT.@
%)[i&(PE7`OR#Q8W0,RAfaYe<l#E4<e_^]3KH?0\q[OhG0\!F;ea/[df^J_!nlh+pAQIpK!#=:,FDB65^A&At7dLI<nb]#X#.$-tD
%A1Gb8=KP@mDTNX$')1lE]LlBN3"]nNJs/VI2S4"]CPjfT[b@UZ<<`W4UBS/f(M**.@MoX&`u).k@,qq9f4lKY24EBh1X'/pV`CEr
%:LQ/"JY46-:`PuV/n1k32nf38f0h<>#\S%1%8NPpnIB'Oa8T!gBs8=\EGu\PcrBd.&kUT*BX3nk8]*abeTn)LnG6+cFCujj(q76;
%`TSMV3crjFVff>o[Z3kP("?E+h&tEf(t&l56UPf_X;r.G,f+GJA'V;SIBd[uQ05%ODh'X,A;l:u?tXSD>TLE?qq^O'L6f0[D68\)
%RAp=\l`lDfg+B&&NKl2h7Z>1TG-a@FS51P]`Y'Y^j&IU4EO^/3nFOB+'E<a3Xgi$C,fpn2cL>A/8Bq_$oUT%o1Y4I3P$Nc)nBPIT
%iV$U-+TnR<=q2A[%DgTCehbDs?`A/``=;58jU@cu@F=u<,RNM^$(d(gak<AW^9?'3.jkaSf(/K@Ym#ni&OmDeUm>F9nc0>c?\?^s
%]Ab=^E"9W,9]VV_"&)*648-3hRG.,h+XmRfcn_?VRg(<'r*m21V+4fJma4;:fAY,Qg7Ga7FO%Vi/!RoX?Q&cN\G)g]?8V)t5iTiP
%VS"`^*Z&^%Z7RWcMVrfJ/GlS!()eG^@:<@k(_HbX;\;Gi>M.rHFNj/orTN4`+WPn:3C/86SlkLCEY4h4\`rj@Zp6B95AT1*E2mi5
%_fu@QD0f/)IQ(ZY)oLJr>pMRl3\Y365@r+U5=P)[*sF%6(q!-.A<]X1%c-dU+t]OQ0%>NUl;`7"7_(kk.ucu*#Ni>%6_BN!H;+`p
%*E=Bm<&td/>qE,(l^kI6)4GGc]o5Q<SM,EjSeq/:i&N'd5i_rX+so?aL$`U-$>Ia\p_@64j`Y-iLciK;h,[&S#Sg1k6:3OjiE([k
%jG:9'Lr]\2^Y&to?S<:J`SWg@UM;u&X`B$)T5Tu.V!OFZNI8UR0#OPmQe+dhJ0R<D2oBEeB3O31:U$10qLh@f<k"Z>n*XAQ<eUZ:
%'\'<WF^*N+M:_!"1N=!T;^8"Clj-e&"pjkL%nuFKM&R@W:k"IY'q3*r59@#MZF*5h6"5B'aXU.n?+T;#-eF]^s)T%`S-SkQZs>c(
%:Bdj9=U6.2&](F$:qfAm?K!&H5h.!Qi7Y+>i#e:#^$J]9j"Va&1<W'u[r04DF-TEg*YDI^;)l0mYkr]PXa1!YbIcl47";usSTF(^
%TCB'*LsIG2#.'5E?Ad3\&$#/>=%)//p<G/H&j3lg%^dN]Z+.\=-1k,APCA1gE;W8i$0NI@4s08J6o5BLGZ=-I<NU=W-='7`EE1Kq
%2Jk4HIiVqJ'IQaX.jnb?D81IG8=F'eenS'eUL(@9RPjR#do9oD>5<VZgXcj>+A4V1;8W`NWR!5'ALj>\jd^t!+%npfcT5H+gB]F6
%D8].cX8.e3g1P`d#bL</VE>E-RTgXa.Rg#")SJ,c>e;o%cG^ii[p&72>BpipDg*WUMda1$InM/d9m3LSj`AUp3q]u1RM;H.8IsCN
%Qibfoo)MV`FBl]JbhsT^g^'KNGEm0qiPsF3aggc)m]@g;lDC7WL1O>WMk7l4G[N+/dMUk"]\E9k;J7Kc*cX:\*Ci!iVfRpj%8HD$
%m`+Dl*pF(^C*Dri3:TT#n:Y.%X#kT4THG[Y4tk?o+'O04nQ3Xf.D"dqTtK<EE@LeJFJ*Qtf'WV]kRa@^3:j\dL!,q2>1Q2+L[2T9
%^u-3j=+i;]`CaT3/7`*\B&UA5YDa9H*MQ%3m2fHGEiC#=^_Pta_F3+nRak;nT5+@*V?k0.Y(!>+qT#FNJZG8(e*BEo<P/5L?G^bS
%qQ,3(n^drb3h4HfG]@$To+oYuiHrI$WVnD-$[&JA.ZuJfLA?g,ehhl6XSSb]P)NQ8+*QD-34$4dirQ$nn/KugJ,&2P594\6UqtQ%
%D15d\ijV9W57cVueD1:CJ")_Pjc@a:,I`LXK>ta*?)o<4.[<p3PKB8XLccNQ$Zr\d5,E-kU,QSTo(n-&beMtL("6[#f2]kK,/J4K
%nnYN)f(%?,8'1hL".^fedJ;>dN-Y@Ea7!lorLrIN9a!LQG\Hqo5R&R/I(nXZnLGt@,MmS:&atd5:`c&X%o&C2hq:N4s1*b)+b2MA
%3.Brl)'SE/qh,WRlQD].9qMqjfCQ__:\^?,1^H(q/5Kpsf8jqn9D+It8:q1,V!(\3`OXu;RqQG@(Fm%g?4-Eu-,[bImITm*WDp"P
%HmN:Hr(4%'1NUSoY)RX1fDU`q>4/pbl93`h^ZF1;q3,(XEmJkin%!>tNbdhan$n,L`?!P^h/_o,]Q=%T?BqrjGYno2ZnZ/@Sm?ZU
%Wn^D_HtGbc1TGY&7`3:$<:2rcoQFgj%rbed7L^d]bm9:Y"`WOK.GJ]>>+J(0`]:CAD5=sjY@XuR]^A9X-a)RuVjo]l_rm.B.'e9P
%j6A8P&>YTKF:&E](5o'RI>11EW`<lO8_MuN^,;]DC\<ZF_9<4.k5h_/7VHO4><sIPjh,/iF2oMt#n#J-WTDt<Y)s.F<6PNqoUJV&
%SX6j+noI."FjERe5!@HpSOkTF)J@RQ,`8oi2a&Or.K>mEVCc#")SsiZ:&[?,O9),-+]N75#(i]S%;dbHBe*=d1>u.Wg!,'l6Sp?I
%3g37a4*/m>V($9%N6mgKA6DQ+9/ZP>qMYm:MiTeSAil*NTJ\&?n>;g_^..A`2[\:r$h3S7EG_OL>O\?.o@FfcMR6T+&H`L![HG0W
%5t8*X<hlumFNI_e`8*,8i5+'t/^V<6NeuKDqa_=CbaauCjr($)V;1,6HkDB`kgd-L`2t1[g05_,L7(0PcL:`,&\QW1+O[@4a:l4N
%_L]c1]Mub!_0_Q)S3$ZM7lBfLV6+Nnm*!n9;>s:!0/SW!f0gVq\7`LA'&;F2;/6l%N'S%tb2*T3910ugCu'5a_P-b^PS^gf*k(6I
%WTaESW376tgu0oq-&.gVeTD(Lqa^.cm-K?7#^RCKkN]2PbM_9OXD].teC?p!*1=.MXJ)g*g3tO+<YR`p*?)X-8:&Xl+Tg!R?]:;R
%eUg$Uo3Gj`=W2M:5I9[,`?dZT9>32s0'Rq]*>kL?FgchHI[80TE$oZ@^\FLH0h=,[80Bqh#CbHWEi&E2+_NPMkIaJ3*tFH"iV/q0
%eIPsJL^rDSI8i9<L0Gb_k;K)q`&0/T1`V1/?fP*nMLMbe`p!h^WGLbZbB)K3[W,_>^cK-P[M`>3[BrVXiGYp6+2#JYdCI-6RdA*^
%SGUh`aY:i#Na1Q)XirK:,Z'lL"&)q0,<^:4Hg(kjR11?S:KLC7i$G]3OU$,fM7YLQI6To^(iJhp03Z&)gu%3FnYI%;9DCU-=+p=F
%[]rmZnc0>c?WBL*bO7)1?@'2klL:WM'Oc-OM*/S3aKMJ_@h0nu&4rF9[IiAuGdP?O/#"PD<$:]20,el#5hJAGkKVNC=@=975>R#@
%(Dr#65CSI1"2'Hf)YnsV0\\2PajJa><,$N?8NaeH`qp\8%q,L;G#r:#e(@&345L"9elHn&\]43PQnV.W>n4<<>PJ2iaI6;6oeK1$
%+I36ZbOI>X,mPUHZIW.b(kTJjrd(87L`ifL;]HT(3M!_NZ.'8ZM3jhf50p<5bIKjYj+3N+l]-DW?"i[=IPKV,c+p%cd;E]MM.0\b
%L0K-Ls#e<$Pg5m1GC($3l^Ddjp%D<FZ^@6%*=kVOS>E5EJ>K&Y1)^XZefJOj5N90jqI1/(,t/WLK;jU*W^3%6QACSg<AHML\%YMk
%(h!WjUG92TlqL/Ynp&+"W[;/EUd'i/8_6g]<1Ipg*V<6]\Xp,_bF\?<e^E[cBI*84Nm7!UONjH57Ruf06^[=N/<Kn,U`(pn=+hW0
%"D3ODAZ8;4-:[nr,g20Qm#k?d_As/%*M)GoN0@Oi\'mN7m_5t!'rT='fCNOe:&O=Cm^im@.F0NtAf;agaE8;&'7L*egq0&`7.=ek
%LS<=7>Fh(^ZB(J!;BArRS.0ab[$kVpJ\5\PPZr/q[7RoKaR[7fS*,bU+(:o^GS,CoQ8lXL=,_$qLKY!)bK$[E_>&b$>:j!$`p]A5
%2qb?=.0NH`nAKpPn_BpXEXRs>g;j05]Ag#=%0-O**:;5h&A2?-=+k;YM8h\N,_!/[8ZLe);7gYn_gftLJp"X]NZ+dBUtF1b[G3B+
%V5oR%VE*/?9;-:ZHY'<)9kB?H0_i-\/H;M@2?DSZ1B\h%iG;D%GaEP"`<a5:98o)eQ'V04aK8OC$3F5+Q&AL\g?*cu/jkFZ4=+f4
%H8.VEBniS+86A;2S:.p+d@a4XY1C/IU2p$OJ['50%R_-T^XTLC$1$$@eq(0c[=P/g%cV_.=?89\TPElpN(Vfm9\[!YpUg9o@0I_g
%cn?O\8+hSL*uYTJ,,ap0Pi_2ZJRV!S7;U6gK;]U?b;\6+qC[=6Xl,AH2AP"7WgT&P*teATT->9^IApWSa;X.$C=pT*.e]4OAg^_d
%hrU4D?i!'=NP)s(2^`VRA'[frc'LW_jOsJ6\7g'1=((Lu^@^XHr/\="_ib/^%YVpp-o^:)]$@UHB2hF3Orj;Ke2MJ#UQXu4H.1\e
%q4Pg49SY+N@/@OXRn/*Mi_[SsThnTG4%isE_4XZT\+$Q:fAFqlrq117n.5Qupb2[B]75/*r4daW_tWU%ps"<dq7"-:Va(+Whu<L+
%J,&oUqs>JTrh$rQqtYHNqu+;-r%Gh_oD$qHhu;T$5Q8jps7"4@5Q99ls">MidJUh!Ie/X#iSXV4hu+Wd8NS*~>
%AI9_PrivateDataEnd
