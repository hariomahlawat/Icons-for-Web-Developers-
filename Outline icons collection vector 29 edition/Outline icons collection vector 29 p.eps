%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: vector_416.eps
%%Creator: Adobe Illustrator(R) 16.0
%%For: Max
%%CreationDate: 10/23/2015
%%BoundingBox: 0 0 1028 1041
%%HiResBoundingBox: 0 0 1027.2862 1040.3755
%%CropBox: 0 0 1027.2862 1040.3755
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 16.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 16.0.0 x682 R agm 4.6676 ct 5.2591%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.3-c011 66.145661, 2012/02/06-14:56:27        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Basic RGB</rdf:li>
            </rdf:Alt>
         </dc:title>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:CreatorTool>Adobe Illustrator CS6 (Windows)</xmp:CreatorTool>
         <xmp:CreateDate>2015-10-23T12:59:54+03:00</xmp:CreateDate>
         <xmp:ModifyDate>2015-10-23T12:59:54+03:00</xmp:ModifyDate>
         <xmp:MetadataDate>2015-10-23T12:59:54+03:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>256</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgBAAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4qwL8xvNnmC0i0K38q&#xA;XlhHLrV+2nDULgG4jjnEMkkUYSNh/eSRem7b8K1pXFWP6vp35teZpJdYW0u/Ll3pdrbfo3So9TCw&#xA;3d7HdLLcmVbdzG0TwoYk9UdDWmKo6386/mN/jvQ7PU9OttJ0vXZLi3g0a4ZZbxI7KD1Zrs3ELtF8&#xA;UjBFQVqtDtvir0q2u7W6i9W1mSeKrL6kTB15KeLCqkioIocVVcVdiryjz35t1zWvMh8peX7iW1tI&#xA;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&#xA;t72yuGBSK5iRihD/AASJ8LUoDiqRR/mN+bVvH9RktJZLkAqs0/l7UjdnoORS2kaydhy+0sypirF9&#xA;Ws/N2gaxo/mfXbD67JqOoiRNM1K5ih1G9u4YZGtrmcxCS2tbaz+0sAeifaZiaUVeyflp+Zen+c9O&#xA;Kugs9bt0D3dkeQWSMkql1as4VpbaUj4Hp7H3VZpirsVdirwLyz5kPlaXTdWMmlsl1p91afV7/Vbb&#xA;TZQU1e7k5qs4Yuu9KgdcVS7ULXR5rW11DXf0FqOm6x+nS9pJrlpborX2qxXsbQXXSRofS4sU6Hr4&#xA;YqqaNeJoGo6T5pguPL4tDqOvSQ2K61ZQwLHeJZBIop/7tzCIviVV+EFelRiqbeXbttQ8+eXdXMtl&#xA;INU8y6rcqmn3kWoRxgeXkh4NND8PP91y4+BGKvdMVdirC/zShvLbTNM8zWUTzz+Vr9NSmgjrzks/&#xA;Te3vFUdyLednH+riry+CzSxksdHtTbXjwQ3dvoNtcyCGy8w+XNSImNpHcH4Eubc0ABp0B+y1QqiN&#xA;Z8l6dHb+V9f1a31m1tdOvm0e8Op3Cx39pa3gVLaSK8s3qYra648GZiSrty2xVnGop+YPkuzlvo9c&#xA;s/MGg245SQ686WF3Gg6BdQjUQv8A89Yh/rYqnX5e/mHp/nbS2v7OwvbFUPFhdwlY3PcwzoWhmX3V&#xA;sVZViqleRyS2k8UZpJJGyoa0oxUgb4q8NtbqO2/KvyVqlzeiTS9Ln0a4vNKKIrW0emP9VvpvhHqy&#xA;CO5ZZJK148cVRv5y/lv5882eY7LUfLtwkti1pFDZXAvHtvqFwJ/Ve7VUqJQ8dB8PxbCmKt+YtK81&#xA;f8rE8uaefOzNqNhbXdzc372Vkgs4rlUtogykBWNzOyqqN147Yqw/VPy2/MbzHr3mK503Wf0zaW2q&#xA;G1uUlWCzSW9i06CJrr0grQP6bViKkdqg15Yq9g/Jfynq/lXyJbaRrEKxalHLI9yVdZQ7MRR/UXdq&#xA;ig+LcdOgGKs5xV5V548gxaJceXdW8leU7eV9J1CS9vItP9G0upOcLxxp6h48onldfVFfsr0IxVIP&#xA;M3mfWND1A6d5z0ry9qvmrUbW1k8uzrZtxku57pbZ7ZzIXdxDzDhlK1UYqm1x5a8+6z518vWXmvR7&#xA;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</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#">
         <xmpMM:OriginalDocumentID>uuid:9E3E5C9A8C81DB118734DB58FDDE4BA7</xmpMM:OriginalDocumentID>
         <xmpMM:DocumentID>xmp.did:7B2F2D356C79E5119DD394DBA42705DE</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:7B2F2D356C79E5119DD394DBA42705DE</xmpMM:InstanceID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:7A2F2D356C79E5119DD394DBA42705DE</stRef:instanceID>
            <stRef:documentID>xmp.did:7A2F2D356C79E5119DD394DBA42705DE</stRef:documentID>
            <stRef:originalDocumentID>uuid:9E3E5C9A8C81DB118734DB58FDDE4BA7</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:3F831BD7736BE5118671ECE021D48F9D</stEvt:instanceID>
                  <stEvt:when>2015-10-05T18:14:57+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:7A2F2D356C79E5119DD394DBA42705DE</stEvt:instanceID>
                  <stEvt:when>2015-10-23T12:55:36+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:7B2F2D356C79E5119DD394DBA42705DE</stEvt:instanceID>
                  <stEvt:when>2015-10-23T12:59:54+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/">
         <illustrator:StartupProfile>Basic RGB</illustrator:StartupProfile>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>1175.000000</stDim:w>
            <stDim:h>1175.000000</stDim:h>
            <stDim:unit>Points</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>White</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Black</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Red</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Yellow</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Green</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Cyan</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Blue</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Magenta</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=193 G=39 B=45</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>193</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>45</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=28 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>28</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=241 G=90 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>241</xmpG:red>
                           <xmpG:green>90</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=247 G=147 B=30</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>247</xmpG:red>
                           <xmpG:green>147</xmpG:green>
                           <xmpG:blue>30</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=251 G=176 B=59</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>251</xmpG:red>
                           <xmpG:green>176</xmpG:green>
                           <xmpG:blue>59</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=252 G=238 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>252</xmpG:red>
                           <xmpG:green>238</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=217 G=224 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>217</xmpG:red>
                           <xmpG:green>224</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=198 B=63</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>198</xmpG:green>
                           <xmpG:blue>63</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=57 G=181 B=74</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>57</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>74</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=146 B=69</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>146</xmpG:green>
                           <xmpG:blue>69</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=104 B=55</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>104</xmpG:green>
                           <xmpG:blue>55</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=34 G=181 B=115</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>34</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>115</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=169 B=157</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>169</xmpG:green>
                           <xmpG:blue>157</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=41 G=171 B=226</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>41</xmpG:red>
                           <xmpG:green>171</xmpG:green>
                           <xmpG:blue>226</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=113 B=188</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>113</xmpG:green>
                           <xmpG:blue>188</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=46 G=49 B=146</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>46</xmpG:red>
                           <xmpG:green>49</xmpG:green>
                           <xmpG:blue>146</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=27 G=20 B=100</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>27</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>100</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=45 B=145</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>45</xmpG:green>
                           <xmpG:blue>145</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=147 G=39 B=143</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>147</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>143</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=158 G=0 B=93</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>158</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>93</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=212 G=20 B=90</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>212</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>90</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=30 B=121</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>30</xmpG:green>
                           <xmpG:blue>121</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=199 G=178 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>199</xmpG:red>
                           <xmpG:green>178</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=134 B=117</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>134</xmpG:green>
                           <xmpG:blue>117</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=115 G=99 B=87</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>115</xmpG:red>
                           <xmpG:green>99</xmpG:green>
                           <xmpG:blue>87</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=83 G=71 B=65</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>83</xmpG:red>
                           <xmpG:green>71</xmpG:green>
                           <xmpG:blue>65</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=198 G=156 B=109</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>198</xmpG:red>
                           <xmpG:green>156</xmpG:green>
                           <xmpG:blue>109</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=166 G=124 B=82</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>166</xmpG:red>
                           <xmpG:green>124</xmpG:green>
                           <xmpG:blue>82</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=98 B=57</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>98</xmpG:green>
                           <xmpG:blue>57</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=117 G=76 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>117</xmpG:red>
                           <xmpG:green>76</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=96 G=56 B=19</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>96</xmpG:red>
                           <xmpG:green>56</xmpG:green>
                           <xmpG:blue>19</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=66 G=33 B=11</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>66</xmpG:red>
                           <xmpG:green>33</xmpG:green>
                           <xmpG:blue>11</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=56 M=0 Y=20 K=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>101</xmpG:red>
                           <xmpG:green>200</xmpG:green>
                           <xmpG:blue>208</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=51 M=43 Y=0 K=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>131</xmpG:red>
                           <xmpG:green>139</xmpG:green>
                           <xmpG:blue>197</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=26 M=41 Y=0 K=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>186</xmpG:red>
                           <xmpG:green>155</xmpG:green>
                           <xmpG:blue>201</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=0 B=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=26 G=26 B=26</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>26</xmpG:red>
                           <xmpG:green>26</xmpG:green>
                           <xmpG:blue>26</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=51 G=51 B=51</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>51</xmpG:red>
                           <xmpG:green>51</xmpG:green>
                           <xmpG:blue>51</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=77 G=77 B=77</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>77</xmpG:red>
                           <xmpG:green>77</xmpG:green>
                           <xmpG:blue>77</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=102 B=102</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>102</xmpG:green>
                           <xmpG:blue>102</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=128 G=128 B=128</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>128</xmpG:red>
                           <xmpG:green>128</xmpG:green>
                           <xmpG:blue>128</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=153 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>153</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=179 G=179 B=179</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>179</xmpG:red>
                           <xmpG:green>179</xmpG:green>
                           <xmpG:blue>179</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=204 G=204 B=204</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>204</xmpG:red>
                           <xmpG:green>204</xmpG:green>
                           <xmpG:blue>204</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=230 G=230 B=230</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>230</xmpG:red>
                           <xmpG:green>230</xmpG:green>
                           <xmpG:blue>230</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=242 G=242 B=242</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>242</xmpG:red>
                           <xmpG:green>242</xmpG:green>
                           <xmpG:blue>242</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <pdf:Producer>Adobe PDF library 10.01</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -1040.38 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 1040.38 li
1027.29 1040.38 li
1027.29 0 li
cp
clp
472.112 175.684 mo
466.548 168.139 li
463.919 168.139 li
463.919 180.149 li
466.476 180.149 li
466.476 172.317 li
472.202 180.149 li
474.668 180.149 li
474.668 168.139 li
472.112 168.139 li
472.112 175.684 li
cp
false sop
/0 
[/DeviceRGB] /CSA add_res
.0980392 .0941176 .0941176 rgb
f
480.138 175.864 mo
482.01 170.697 li
483.883 175.864 li
480.138 175.864 li
cp
480.408 168.139 mo
475.78 180.149 li
478.679 180.149 li
479.436 178.115 li
484.585 178.115 li
485.341 180.149 li
488.24 180.149 li
483.613 168.139 li
480.408 168.139 li
cp
f
493.476 177.358 mo
490.145 168.139 li
487.246 168.139 li
491.874 180.149 li
495.079 180.149 li
499.706 168.139 li
496.807 168.139 li
493.476 177.358 li
cp
f
500.819 180.149 mo
503.376 180.149 li
503.376 168.139 li
500.819 168.139 li
500.819 180.149 li
cp
f
510.955 175.738 mo
514.124 175.738 li
514.124 177.178 li
513.637 177.628 512.647 178.096 511.584 178.096 cv
509.388 178.096 507.804 176.422 507.804 174.154 cv
507.804 171.884 509.388 170.21 511.584 170.21 cv
512.845 170.21 513.871 170.93 514.43 171.777 cv
516.536 170.625 li
515.636 169.202 514.069 167.942 511.584 167.942 cv
508.056 167.942 505.175 170.354 505.175 174.154 cv
505.175 177.934 508.056 180.365 511.584 180.365 cv
513.745 180.365 515.456 179.483 516.68 178.115 cv
516.68 173.505 li
510.955 173.505 li
510.955 175.738 li
cp
f
521.682 175.864 mo
523.555 170.697 li
525.426 175.864 li
521.682 175.864 li
cp
521.951 168.139 mo
517.324 180.149 li
520.223 180.149 li
520.979 178.115 li
526.129 178.115 li
526.885 180.149 li
529.783 180.149 li
525.156 168.139 li
521.951 168.139 li
cp
f
529.006 170.39 mo
532.518 170.39 li
532.518 180.149 li
535.092 180.149 li
535.092 170.39 li
538.586 170.39 li
538.586 168.139 li
529.006 168.139 li
529.006 170.39 li
cp
f
540.221 180.149 mo
542.777 180.149 li
542.777 168.139 li
540.221 168.139 li
540.221 180.149 li
cp
f
550.859 178.096 mo
548.627 178.096 547.205 176.386 547.205 174.154 cv
547.205 171.903 548.627 170.21 550.859 170.21 cv
553.074 170.21 554.496 171.903 554.496 174.154 cv
554.496 176.386 553.074 178.096 550.859 178.096 cv
cp
550.859 167.942 mo
547.223 167.942 544.576 170.535 544.576 174.154 cv
544.576 177.772 547.223 180.365 550.859 180.365 cv
554.479 180.365 557.125 177.772 557.125 174.154 cv
557.125 170.535 554.479 167.942 550.859 167.942 cv
cp
f
567.115 168.139 mo
567.115 175.684 li
561.551 168.139 li
558.922 168.139 li
558.922 180.149 li
561.479 180.149 li
561.479 172.317 li
567.205 180.149 li
569.672 180.149 li
569.672 168.139 li
567.115 168.139 li
cp
f
576.097 121.008 mo
457.496 121.008 li
457.496 49.7178 li
457.496 48.104 458.127 46.584 459.274 45.4375 cv
460.415 44.2964 461.936 43.668 463.555 43.668 cv
498.905 43.668 li
498.905 48.168 li
463.555 48.168 li
463.137 48.168 462.747 48.3281 462.456 48.6191 cv
462.076 48.9995 461.996 49.4268 461.996 49.7178 cv
461.996 116.508 li
571.597 116.508 li
571.597 49.7178 li
571.597 49.3047 571.433 48.9102 571.134 48.6069 cv
570.771 48.248 570.334 48.168 570.036 48.168 cv
534.677 48.168 li
534.677 43.668 li
570.036 43.668 li
571.648 43.668 573.169 44.2925 574.317 45.4268 cv
575.473 46.6001 576.097 48.1157 576.097 49.7178 cv
576.097 121.008 li
cp
.095291 .095291 .095291 rgb
f
450.4 121.012 mo
450.4 123.837 li
450.4 124.595 450.694 125.305 451.226 125.836 cv
451.762 126.368 452.474 126.663 453.227 126.663 cv
580.366 126.663 li
581.12 126.663 581.832 126.369 582.369 125.834 cv
582.897 125.305 583.19 124.594 583.19 123.837 cv
583.19 121.012 li
450.4 121.012 li
cp
580.366 131.163 mo
453.227 131.163 li
451.279 131.163 449.441 130.404 448.052 129.026 cv
446.663 127.64 445.9 125.798 445.9 123.837 cv
445.9 116.512 li
587.69 116.512 li
587.69 123.837 li
587.69 125.795 586.93 127.636 585.548 129.019 cv
584.156 130.403 582.318 131.163 580.366 131.163 cv
cp
f
491.809 82.4063 mo
473.402 82.4063 li
473.402 59.5664 li
491.809 59.5664 li
491.809 82.4063 li
cp
468.902 55.0664 mo
468.902 86.9063 li
496.309 86.9063 li
496.309 55.0664 li
468.902 55.0664 li
cp
f
491.809 105.11 mo
473.402 105.11 li
473.402 98.1904 li
491.809 98.1904 li
491.809 105.11 li
cp
468.902 93.6904 mo
468.902 109.61 li
496.309 109.61 li
496.309 93.6904 li
468.902 93.6904 li
cp
f
530.497 86.9082 mo
503.096 86.9082 li
503.096 55.0923 li
507.596 55.0923 li
507.596 82.4082 li
525.997 82.4082 li
525.997 55.0664 li
530.497 55.0664 li
530.497 86.9082 li
cp
f
526.001 105.11 mo
507.593 105.11 li
507.593 98.1904 li
526.001 98.1904 li
526.001 105.11 li
cp
503.093 93.6904 mo
503.093 109.61 li
530.501 109.61 li
530.501 93.6904 li
503.093 93.6904 li
cp
f
560.19 82.4063 mo
541.784 82.4063 li
541.784 59.5664 li
560.19 59.5664 li
560.19 82.4063 li
cp
537.284 55.0664 mo
537.284 86.9063 li
564.69 86.9063 li
564.69 55.0664 li
537.284 55.0664 li
cp
f
560.19 105.11 mo
541.784 105.11 li
541.784 98.1904 li
560.19 98.1904 li
560.19 105.11 li
cp
537.284 93.6904 mo
537.284 109.61 li
564.69 109.61 li
564.69 93.6904 li
537.284 93.6904 li
cp
f
516.793 19.3281 mo
511.418 19.3281 507.045 23.6973 507.045 29.0674 cv
507.045 34.4443 511.418 38.8184 516.793 38.8184 cv
522.171 38.8184 526.546 34.4443 526.546 29.0674 cv
526.546 23.6973 522.171 19.3281 516.793 19.3281 cv
cp
516.793 43.3184 mo
508.937 43.3184 502.545 36.9253 502.545 29.0674 cv
502.545 21.2158 508.937 14.8281 516.793 14.8281 cv
524.652 14.8281 531.046 21.2158 531.046 29.0674 cv
531.046 36.9253 524.652 43.3184 516.793 43.3184 cv
cp
f
516.793 6.95801 mo
504.602 6.95801 494.684 16.8765 494.684 29.0684 cv
494.684 33.7485 496.24 38.3047 499.311 42.6094 cv
516.793 67.1123 li
534.276 42.6055 li
537.351 38.3057 538.909 33.752 538.909 29.0684 cv
538.909 16.8765 528.988 6.95801 516.793 6.95801 cv
cp
516.793 74.8604 mo
495.647 45.2227 li
492.021 40.1392 490.184 34.7046 490.184 29.0684 cv
490.184 14.3955 502.121 2.45801 516.793 2.45801 cv
531.469 2.45801 543.409 14.3955 543.409 29.0684 cv
543.409 34.6299 541.518 40.2153 537.938 45.2207 cv
516.793 74.8604 li
cp
f
202.143 171.417 mo
202.143 170.696 202.755 170.228 203.836 170.228 cv
205.06 170.228 206.356 170.642 207.329 171.542 cv
208.751 169.634 li
207.563 168.536 205.979 167.959 204.07 167.959 cv
201.243 167.959 199.515 169.616 199.515 171.614 cv
199.515 176.134 206.429 174.675 206.429 176.764 cv
206.429 177.466 205.762 178.096 204.34 178.096 cv
202.684 178.096 201.369 177.34 200.523 176.458 cv
199.119 178.457 li
200.253 179.591 201.909 180.365 204.232 180.365 cv
207.455 180.365 209.04 178.708 209.04 176.512 cv
209.04 172.028 202.143 173.307 202.143 171.417 cv
cp
.0980392 .0941176 .0941176 rgb
f
210.747 180.149 mo
219.245 180.149 li
219.245 177.898 li
213.303 177.898 li
213.303 175.162 li
219.119 175.162 li
219.119 172.911 li
213.303 172.911 li
213.303 170.39 li
219.245 170.39 li
219.245 168.139 li
210.747 168.139 li
210.747 180.149 li
cp
f
224.337 175.864 mo
226.209 170.696 li
228.082 175.864 li
224.337 175.864 li
cp
224.607 168.139 mo
219.98 180.149 li
222.878 180.149 li
223.635 178.114 li
228.784 178.114 li
229.541 180.149 li
232.439 180.149 li
227.812 168.139 li
224.607 168.139 li
cp
f
238.81 173.631 mo
236.109 173.631 li
236.109 170.39 li
238.81 170.39 li
239.818 170.39 240.592 171.002 240.592 171.993 cv
240.592 173.019 239.818 173.631 238.81 173.631 cv
cp
243.221 172.011 mo
243.221 169.778 241.672 168.139 239.17 168.139 cv
233.552 168.139 li
233.552 180.149 li
236.109 180.149 li
236.109 175.882 li
237.981 175.882 li
240.34 180.149 li
243.293 180.149 li
240.574 175.576 li
241.871 175.27 243.221 174.117 243.221 172.011 cv
cp
f
250.959 170.21 mo
252.184 170.21 253.264 170.984 253.769 171.957 cv
255.965 170.876 li
255.119 169.364 253.588 167.941 250.959 167.941 cv
247.34 167.941 244.55 170.444 244.55 174.153 cv
244.55 177.844 247.34 180.365 250.959 180.365 cv
253.588 180.365 255.119 178.907 255.965 177.412 cv
253.769 176.35 li
253.264 177.322 252.184 178.096 250.959 178.096 cv
248.763 178.096 247.178 176.422 247.178 174.153 cv
247.178 171.884 248.763 170.21 250.959 170.21 cv
cp
f
265.72 172.857 mo
260.048 172.857 li
260.048 168.139 li
257.492 168.139 li
257.492 180.149 li
260.048 180.149 li
260.048 175.089 li
265.72 175.089 li
265.72 180.149 li
268.295 180.149 li
268.295 168.139 li
265.72 168.139 li
265.72 172.857 li
cp
f
280.983 178.096 mo
278.75 178.096 277.328 176.386 277.328 174.153 cv
277.328 171.902 278.75 170.21 280.983 170.21 cv
283.198 170.21 284.62 171.902 284.62 174.153 cv
284.62 176.386 283.198 178.096 280.983 178.096 cv
cp
280.983 167.941 mo
277.346 167.941 274.699 170.534 274.699 174.153 cv
274.699 177.772 277.346 180.365 280.983 180.365 cv
284.602 180.365 287.249 177.772 287.249 174.153 cv
287.249 170.534 284.602 167.941 280.983 167.941 cv
cp
f
294.303 173.613 mo
291.602 173.613 li
291.602 170.39 li
294.303 170.39 li
295.311 170.39 296.085 171.002 296.085 172.011 cv
296.085 173.001 295.311 173.613 294.303 173.613 cv
cp
294.663 168.139 mo
289.045 168.139 li
289.045 180.149 li
291.602 180.149 li
291.602 175.864 li
294.663 175.864 li
297.256 175.864 298.696 174.099 298.696 172.011 cv
298.696 169.904 297.274 168.139 294.663 168.139 cv
cp
f
299.557 170.39 mo
303.068 170.39 li
303.068 180.149 li
305.643 180.149 li
305.643 170.39 li
309.136 170.39 li
309.136 168.139 li
299.557 168.139 li
299.557 170.39 li
cp
f
310.771 180.149 mo
313.328 180.149 li
313.328 168.139 li
310.771 168.139 li
310.771 180.149 li
cp
f
322.203 175.647 mo
319.286 168.139 li
315.703 168.139 li
315.703 180.149 li
318.259 180.149 li
318.259 171.488 li
321.644 180.149 li
322.761 180.149 li
326.146 171.488 li
326.146 180.149 li
328.72 180.149 li
328.72 168.139 li
325.119 168.139 li
322.203 175.647 li
cp
f
331.093 180.149 mo
333.649 180.149 li
333.649 168.139 li
331.093 168.139 li
331.093 180.149 li
cp
f
344.613 170.192 mo
344.613 168.139 li
335.592 168.139 li
335.592 170.39 li
341.264 170.39 li
335.592 178.078 li
335.592 180.149 li
344.739 180.149 li
344.739 177.898 li
338.941 177.898 li
344.613 170.192 li
cp
f
349.777 175.864 mo
351.649 170.696 li
353.522 175.864 li
349.777 175.864 li
cp
350.047 168.139 mo
345.419 180.149 li
348.318 180.149 li
349.075 178.114 li
354.224 178.114 li
354.98 180.149 li
357.879 180.149 li
353.252 168.139 li
350.047 168.139 li
cp
f
357.102 170.39 mo
360.613 170.39 li
360.613 180.149 li
363.188 180.149 li
363.188 170.39 li
366.681 170.39 li
366.681 168.139 li
357.102 168.139 li
357.102 170.39 li
cp
f
368.316 180.149 mo
370.873 180.149 li
370.873 168.139 li
368.316 168.139 li
368.316 180.149 li
cp
f
378.955 178.096 mo
376.723 178.096 375.3 176.386 375.3 174.153 cv
375.3 171.902 376.723 170.21 378.955 170.21 cv
381.17 170.21 382.592 171.902 382.592 174.153 cv
382.592 176.386 381.17 178.096 378.955 178.096 cv
cp
378.955 167.941 mo
375.318 167.941 372.671 170.534 372.671 174.153 cv
372.671 177.772 375.318 180.365 378.955 180.365 cv
382.574 180.365 385.221 177.772 385.221 174.153 cv
385.221 170.534 382.574 167.941 378.955 167.941 cv
cp
f
395.21 168.139 mo
395.21 175.684 li
389.646 168.139 li
387.018 168.139 li
387.018 180.149 li
389.574 180.149 li
389.574 172.316 li
395.3 180.149 li
397.767 180.149 li
397.767 168.139 li
395.21 168.139 li
cp
f
278.397 43.2451 mo
276.455 43.2451 274.875 44.8252 274.875 46.7671 cv
274.875 48.708 276.455 50.2876 278.396 50.2876 cv
280.338 50.2876 281.918 48.7085 281.918 46.7671 cv
281.918 44.8252 280.339 43.2451 278.397 43.2451 cv
cp
278.397 54.7876 mo
278.396 54.7876 li
273.974 54.7876 270.375 51.1899 270.375 46.7676 cv
270.375 42.3438 273.974 38.7451 278.397 38.7451 cv
282.82 38.7451 286.418 42.3438 286.418 46.7671 cv
286.418 51.1895 282.82 54.7876 278.397 54.7876 cv
cp
.095291 .095291 .095291 rgb
f
284.518 45.8286 mo
282.269 41.9312 li
293.269 35.585 li
295.518 39.4824 li
284.518 45.8286 li
cp
f
246.133 46.7686 mo
241.633 46.7686 li
241.633 45.9707 241.659 45.1655 241.709 44.3755 cv
246.201 44.6636 li
246.156 45.3579 246.133 46.0664 246.133 46.7686 cv
cp
f
276.268 14.5669 mo
275.977 10.0767 li
277.561 9.97412 279.19 9.97363 280.782 10.0742 cv
280.496 14.5654 li
279.095 14.4761 277.661 14.4775 276.268 14.5669 cv
cp
288.763 16.1909 mo
287.435 15.7422 286.063 15.3774 284.685 15.1069 cv
285.552 10.6909 li
287.124 11 288.688 11.416 290.203 11.9272 cv
288.763 16.1909 li
cp
268.006 16.1997 mo
266.561 11.938 li
268.073 11.4253 269.637 11.0073 271.209 10.6968 cv
272.081 15.1118 li
270.703 15.3838 269.332 15.75 268.006 16.1997 cv
cp
296.311 19.9155 mo
295.143 19.1328 293.914 18.4219 292.659 17.8027 cv
294.65 13.7676 li
296.082 14.4741 297.483 15.2847 298.815 16.1772 cv
296.311 19.9155 li
cp
260.461 19.9321 mo
257.952 16.1968 li
259.281 15.3037 260.682 14.4912 262.114 13.7817 cv
264.111 17.8149 li
262.855 18.4365 261.627 19.1489 260.461 19.9321 cv
cp
302.646 25.4775 mo
302.187 24.9556 301.705 24.4414 301.212 23.9492 cv
300.709 23.4463 300.185 22.9551 299.655 22.4893 cv
302.625 19.1094 li
303.227 19.6382 303.822 20.1958 304.394 20.7666 cv
304.953 21.3262 305.501 21.9102 306.023 22.5029 cv
302.646 25.4775 li
cp
254.127 25.5034 mo
250.747 22.5327 li
251.276 21.9307 251.833 21.3364 252.402 20.7676 cv
252.965 20.2041 253.552 19.6543 254.144 19.1333 cv
257.116 22.5122 li
256.595 22.9702 256.08 23.4536 255.584 23.9492 cv
255.083 24.4507 254.593 24.9731 254.127 25.5034 cv
cp
249.439 32.4995 mo
245.404 30.5073 li
246.113 29.0728 246.924 27.6714 247.816 26.3418 cv
251.553 28.8486 li
250.771 30.0142 250.06 31.2422 249.439 32.4995 cv
cp
246.743 40.4736 mo
242.327 39.6064 li
242.636 38.0332 243.052 36.4683 243.564 34.9546 cv
247.827 36.396 li
247.378 37.7227 247.014 39.0942 246.743 40.4736 cv
cp
f
306.355 30.6343 mo
306.007 30.0317 305.633 29.4321 305.245 28.8506 cv
308.984 26.3477 li
309.428 27.0112 309.854 27.6958 310.251 28.3833 cv
306.355 30.6343 li
cp
f
278.403 83.5288 mo
258.128 83.5288 241.633 67.0381 241.633 46.7686 cv
246.133 46.7686 li
246.133 64.5571 260.609 79.0288 278.403 79.0288 cv
287.017 79.0288 295.118 75.6724 301.212 69.5776 cv
307.307 63.4829 310.663 55.3828 310.663 46.7686 cv
310.663 41.0732 309.174 35.4956 306.357 30.6377 cv
310.25 28.3799 li
313.464 33.9229 315.163 40.2817 315.163 46.7686 cv
315.163 56.5845 311.339 65.8149 304.394 72.7593 cv
297.45 79.7041 288.219 83.5288 278.403 83.5288 cv
cp
f
278.398 4.5 mo
267.108 4.5 256.495 8.89648 248.512 16.8799 cv
240.528 24.8633 236.132 35.4771 236.132 46.7661 cv
236.131 70.0713 255.092 89.0317 278.399 89.0327 cv
278.399 91.2827 li
278.401 89.0327 li
289.689 89.0327 300.302 84.6362 308.285 76.6523 cv
316.268 68.6689 320.664 58.0552 320.664 46.7661 cv
320.665 35.4761 316.269 24.8618 308.285 16.8789 cv
300.302 8.896 289.688 4.5 278.398 4.5 cv
cp
278.401 93.5327 mo
278.399 93.5327 li
252.611 93.5317 231.631 72.5522 231.632 46.7661 cv
231.631 34.2754 236.496 22.5317 245.33 13.6982 cv
254.163 4.86475 265.906 0 278.397 0 cv
290.89 0 302.634 4.86426 311.467 13.6968 cv
320.3 22.5298 325.165 34.2744 325.164 46.7661 cv
325.165 59.2568 320.3 71.001 311.467 79.8345 cv
302.635 88.668 290.892 93.5327 278.401 93.5327 cv
cp
f
318.174 89.7271 mo
308.285 79.8345 li
311.467 76.6528 li
321.357 86.5454 li
318.174 89.7271 li
cp
f
316.586 94.5 mo
350.277 128.19 li
359.823 118.646 li
326.132 84.9536 li
316.586 94.5 li
cp
350.277 134.554 mo
310.223 94.5 li
326.132 78.5894 li
366.187 118.646 li
350.277 134.554 li
cp
f
322.191 103.284 mo
319.009 100.103 li
331.736 87.377 li
334.917 90.5586 li
322.191 103.284 li
cp
f
344.674 125.769 mo
341.492 122.586 li
354.22 109.86 li
357.401 113.043 li
344.674 125.769 li
cp
f
4.73535 177.898 mo
2.55664 177.898 li
2.55664 170.39 li
4.75342 170.39 li
7.20215 170.39 8.49854 172.028 8.49854 174.135 cv
8.49854 176.188 7.11182 177.898 4.73535 177.898 cv
cp
4.73535 168.139 mo
0 168.139 li
0 180.149 li
4.75342 180.149 li
8.49854 180.149 11.1094 177.772 11.1094 174.135 cv
11.1094 170.534 8.49854 168.139 4.73535 168.139 cv
cp
.0980392 .0941176 .0941176 rgb
f
15.4087 175.864 mo
17.2813 170.696 li
19.1538 175.864 li
15.4087 175.864 li
cp
15.6787 168.139 mo
11.0518 180.149 li
13.9502 180.149 li
14.7065 178.114 li
19.856 178.114 li
20.6123 180.149 li
23.5112 180.149 li
18.8838 168.139 li
15.6787 168.139 li
cp
f
32.3125 168.139 mo
22.7339 168.139 li
22.7339 170.39 li
26.2451 170.39 li
26.2451 180.149 li
28.8198 180.149 li
28.8198 170.39 li
32.3125 170.39 li
32.3125 168.139 li
cp
f
35.8926 175.864 mo
37.7651 170.696 li
39.6377 175.864 li
35.8926 175.864 li
cp
36.1626 168.139 mo
31.5352 180.149 li
34.4341 180.149 li
35.1904 178.114 li
40.3398 178.114 li
41.0962 180.149 li
43.9951 180.149 li
39.3677 168.139 li
36.1626 168.139 li
cp
f
56.2334 175.647 mo
53.3164 168.139 li
49.7334 168.139 li
49.7334 180.149 li
52.29 180.149 li
52.29 171.488 li
55.6748 180.149 li
56.7915 180.149 li
60.1763 171.488 li
60.1763 180.149 li
62.751 180.149 li
62.751 168.139 li
59.1499 168.139 li
56.2334 175.647 li
cp
f
68.2207 175.864 mo
70.0933 170.696 li
71.9658 175.864 li
68.2207 175.864 li
cp
68.4907 168.139 mo
63.8633 180.149 li
66.7622 180.149 li
67.5186 178.114 li
72.668 178.114 li
73.4243 180.149 li
76.3232 180.149 li
71.6958 168.139 li
68.4907 168.139 li
cp
f
85.6279 175.684 mo
80.0645 168.139 li
77.4355 168.139 li
77.4355 180.149 li
79.9922 180.149 li
79.9922 172.316 li
85.7178 180.149 li
88.1846 180.149 li
88.1846 168.139 li
85.6279 168.139 li
85.6279 175.684 li
cp
f
93.6543 175.864 mo
95.5269 170.696 li
97.3994 175.864 li
93.6543 175.864 li
cp
93.9243 168.139 mo
89.2969 180.149 li
92.1958 180.149 li
92.9521 178.114 li
98.1016 178.114 li
98.8579 180.149 li
101.757 180.149 li
97.1294 168.139 li
93.9243 168.139 li
cp
f
107.461 175.738 mo
110.63 175.738 li
110.63 177.178 li
110.144 177.628 109.153 178.096 108.091 178.096 cv
105.895 178.096 104.31 176.422 104.31 174.153 cv
104.31 171.884 105.895 170.21 108.091 170.21 cv
109.352 170.21 110.377 170.93 110.936 171.776 cv
113.042 170.624 li
112.142 169.202 110.576 167.941 108.091 167.941 cv
104.562 167.941 101.681 170.354 101.681 174.153 cv
101.681 177.934 104.562 180.365 108.091 180.365 cv
110.251 180.365 111.962 179.483 113.187 178.114 cv
113.187 173.505 li
107.461 173.505 li
107.461 175.738 li
cp
f
115.217 180.149 mo
123.716 180.149 li
123.716 177.898 li
117.774 177.898 li
117.774 175.162 li
123.59 175.162 li
123.59 172.911 li
117.774 172.911 li
117.774 170.39 li
123.716 170.39 li
123.716 168.139 li
115.217 168.139 li
115.217 180.149 li
cp
f
132.211 175.647 mo
129.294 168.139 li
125.711 168.139 li
125.711 180.149 li
128.268 180.149 li
128.268 171.488 li
131.652 180.149 li
132.769 180.149 li
136.154 171.488 li
136.154 180.149 li
138.729 180.149 li
138.729 168.139 li
135.127 168.139 li
132.211 175.647 li
cp
f
141.101 180.149 mo
149.6 180.149 li
149.6 177.898 li
143.658 177.898 li
143.658 175.162 li
149.474 175.162 li
149.474 172.911 li
143.658 172.911 li
143.658 170.39 li
149.6 170.39 li
149.6 168.139 li
141.101 168.139 li
141.101 180.149 li
cp
f
159.787 175.684 mo
154.224 168.139 li
151.595 168.139 li
151.595 180.149 li
154.151 180.149 li
154.151 172.316 li
159.877 180.149 li
162.344 180.149 li
162.344 168.139 li
159.787 168.139 li
159.787 175.684 li
cp
f
163.978 168.139 mo
163.978 170.39 li
167.489 170.39 li
167.489 180.149 li
170.064 180.149 li
170.064 170.39 li
173.557 170.39 li
173.557 168.139 li
163.978 168.139 li
cp
f
79.9746 63.9287 mo
62.0293 81.8745 li
59.2651 77.3472 57.7783 72.1235 57.7783 66.7646 cv
57.7783 53.2231 67.2026 41.6436 79.9746 38.5435 cv
79.9746 63.9287 li
cp
53.2783 66.7646 mo
53.2783 75.1792 56.3877 82.8662 61.5107 88.7573 cv
84.4746 65.7925 li
84.4746 33.3101 li
67.0498 34.5171 53.2783 49.0313 53.2783 66.7646 cv
cp
.095291 .095291 .095291 rgb
f
86.8223 95.811 mo
81.4609 95.811 76.2373 94.3252 71.7114 91.563 cv
89.6602 73.6133 li
115.045 73.6133 li
111.946 86.3857 100.366 95.811 86.8223 95.811 cv
cp
87.7959 69.1133 mo
64.8291 92.0815 li
70.7197 97.2051 78.4092 100.311 86.8223 100.311 cv
104.558 100.311 119.072 86.5469 120.278 69.1133 cv
87.7959 69.1133 li
cp
f
89.1719 44.48 mo
89.1719 50.8438 li
102.757 37.2588 li
101.353 36.4985 99.8906 35.834 98.3745 35.2773 cv
89.1719 44.48 li
cp
.0980392 .0941176 .0941176 rgb
f
114.51 47.8462 mo
113.654 46.5962 112.718 45.4067 111.705 44.2866 cv
91.5752 64.4165 li
97.939 64.4165 li
114.51 47.8462 li
cp
f
109.302 41.8833 mo
108.182 40.8711 106.992 39.9346 105.742 39.0791 cv
89.1719 55.6494 li
89.1719 62.0132 li
109.302 41.8833 li
cp
f
113.914 64.4165 mo
120.278 64.4165 li
120.148 62.5313 119.854 60.6924 119.425 58.9058 cv
113.914 64.4165 li
cp
f
94.6821 34.1641 mo
92.896 33.7349 91.0566 33.4409 89.1719 33.3101 cv
89.1719 39.6743 li
94.6821 34.1641 li
cp
f
118.311 55.2134 mo
117.755 53.6973 117.09 52.2349 116.33 50.8306 cv
102.744 64.4165 li
109.108 64.4165 li
118.311 55.2134 li
cp
f
84.0874 124.575 mo
89.4907 124.575 li
92.0728 111.746 li
93.6299 111.509 li
96.8765 111.016 100.108 110.147 103.234 108.927 cv
104.702 108.354 li
113.33 118.167 li
117.984 115.481 li
113.804 103.1 li
115.034 102.116 li
117.644 100.03 120.024 97.6538 122.111 95.0537 cv
123.096 93.8271 li
135.462 98.0005 li
138.142 93.3511 li
128.369 84.7271 li
128.943 83.2607 li
130.17 80.1279 131.043 76.8892 131.537 73.6343 cv
131.774 72.0752 li
144.528 69.5259 li
144.528 64.0928 li
131.774 61.5264 li
131.537 59.9692 li
131.042 56.7139 130.171 53.479 128.948 50.354 cv
128.375 48.8901 li
138.141 40.2505 li
135.463 35.6162 li
123.095 39.7729 li
122.112 38.5488 li
120.022 35.9468 117.642 33.5708 115.037 31.4878 cv
113.807 30.5039 li
117.984 18.1191 li
113.317 15.4336 li
104.696 25.2451 li
103.228 24.6724 li
100.101 23.4521 96.8711 22.584 93.6279 22.0918 cv
92.0713 21.8555 li
89.4912 9.04639 li
84.0869 9.04639 li
81.5078 21.8516 li
79.9497 22.0874 li
76.7002 22.5791 73.4673 23.4478 70.3413 24.6689 cv
68.873 25.2427 li
60.2505 15.4331 li
55.5796 18.1196 li
59.7598 30.5117 li
58.5322 31.4956 li
55.9331 33.5791 53.5591 35.9531 51.4766 38.5522 cv
50.4937 39.7788 li
38.1138 35.6157 li
35.4307 40.252 li
45.2158 48.9106 li
44.6445 50.3735 li
43.4268 53.4907 42.5596 56.7153 42.0674 59.957 cv
41.8306 61.5142 li
29.0317 64.0918 li
29.0425 69.5259 li
41.8301 72.0879 li
42.0674 73.646 li
42.5605 76.8901 43.4287 80.1187 44.6484 83.2417 cv
45.2207 84.7061 li
35.4302 93.3496 li
38.1147 98.0005 li
50.4927 93.8213 li
51.4766 95.0498 li
53.5571 97.647 55.9316 100.021 58.5352 102.108 cv
59.7632 103.092 li
55.5796 115.479 li
60.25 118.168 li
68.8657 108.355 li
70.335 108.93 li
73.46 110.152 76.6943 111.021 79.9482 111.514 cv
81.5063 111.75 li
84.0874 124.575 li
cp
93.1753 129.075 mo
80.4028 129.075 li
77.7109 115.7 li
75.1699 115.229 72.6489 114.551 70.1831 113.675 cv
61.1992 123.908 li
50.1353 117.537 li
54.501 104.61 li
52.5176 102.914 50.667 101.063 48.9746 99.0835 cv
36.061 103.444 li
29.6929 92.4121 li
39.9048 83.3965 li
39.0308 80.9346 38.3535 78.4194 37.8828 75.8862 cv
24.5493 73.2153 li
24.5249 60.4092 li
37.8823 57.7188 li
38.3525 55.1875 39.0288 52.6753 39.9014 50.2163 cv
29.6924 41.1826 li
36.062 30.1782 li
48.9731 34.52 li
50.667 32.5386 52.5176 30.688 54.4985 28.9941 cv
50.1353 16.0591 li
61.1987 9.69678 li
70.1895 19.9238 li
72.6553 19.0488 75.1748 18.3716 77.7134 17.9014 cv
80.4033 4.54639 li
93.1748 4.54639 li
95.8662 17.9063 li
98.3979 18.377 100.914 19.0537 103.378 19.9272 cv
112.368 9.69629 li
123.428 16.0596 li
119.069 28.9824 li
121.057 30.6777 122.913 32.5308 124.612 34.5156 cv
137.518 30.1777 li
143.878 41.1841 li
133.691 50.1948 li
134.569 52.6626 135.25 55.1865 135.722 57.731 cv
149.028 60.4082 li
149.028 73.2153 li
135.722 75.875 li
135.249 78.4194 134.568 80.9458 133.688 83.4189 cv
143.877 92.4106 li
137.519 103.444 li
124.611 99.0879 li
122.913 101.071 121.056 102.925 119.067 104.622 cv
123.428 117.535 li
112.385 123.909 li
103.386 113.672 li
100.921 114.546 98.4033 115.224 95.8682 115.694 cv
93.1753 129.075 li
cp
.095291 .095291 .095291 rgb
f
888.232 173.613 mo
885.531 173.613 li
885.531 170.39 li
888.232 170.39 li
889.24 170.39 890.016 171.002 890.016 172.011 cv
890.016 173.001 889.24 173.613 888.232 173.613 cv
cp
888.594 168.139 mo
882.975 168.139 li
882.975 180.149 li
885.531 180.149 li
885.531 175.864 li
888.594 175.864 li
891.186 175.864 892.627 174.099 892.627 172.011 cv
892.627 169.904 891.203 168.139 888.594 168.139 cv
cp
.0980392 .0941176 .0941176 rgb
f
894.225 180.149 mo
902.725 180.149 li
902.725 177.898 li
896.781 177.898 li
896.781 175.162 li
902.598 175.162 li
902.598 172.911 li
896.781 172.911 li
896.781 170.39 li
902.725 170.39 li
902.725 168.139 li
894.225 168.139 li
894.225 180.149 li
cp
f
909.977 173.631 mo
907.275 173.631 li
907.275 170.39 li
909.977 170.39 li
910.984 170.39 911.76 171.002 911.76 171.993 cv
911.76 173.019 910.984 173.631 909.977 173.631 cv
cp
914.389 172.011 mo
914.389 169.778 912.84 168.139 910.336 168.139 cv
904.719 168.139 li
904.719 180.149 li
907.275 180.149 li
907.275 175.882 li
909.148 175.882 li
911.508 180.149 li
914.459 180.149 li
911.74 175.576 li
913.037 175.27 914.389 174.117 914.389 172.011 cv
cp
f
916.293 180.149 mo
918.85 180.149 li
918.85 175.162 li
924.666 175.162 li
924.666 172.911 li
918.85 172.911 li
918.85 170.39 li
924.791 170.39 li
924.791 168.139 li
916.293 168.139 li
916.293 180.149 li
cp
f
932.277 178.096 mo
930.045 178.096 928.623 176.386 928.623 174.153 cv
928.623 171.902 930.045 170.21 932.277 170.21 cv
934.492 170.21 935.916 171.902 935.916 174.153 cv
935.916 176.386 934.492 178.096 932.277 178.096 cv
cp
932.277 167.941 mo
928.641 167.941 925.994 170.534 925.994 174.153 cv
925.994 177.772 928.641 180.365 932.277 180.365 cv
935.896 180.365 938.545 177.772 938.545 174.153 cv
938.545 170.534 935.896 167.941 932.277 167.941 cv
cp
f
945.598 173.631 mo
942.896 173.631 li
942.896 170.39 li
945.598 170.39 li
946.605 170.39 947.381 171.002 947.381 171.993 cv
947.381 173.019 946.605 173.631 945.598 173.631 cv
cp
950.01 172.011 mo
950.01 169.778 948.461 168.139 945.959 168.139 cv
940.34 168.139 li
940.34 180.149 li
942.896 180.149 li
942.896 175.882 li
944.77 175.882 li
947.129 180.149 li
950.082 180.149 li
947.363 175.576 li
948.658 175.27 950.01 174.117 950.01 172.011 cv
cp
f
958.414 175.647 mo
955.498 168.139 li
951.914 168.139 li
951.914 180.149 li
954.471 180.149 li
954.471 171.488 li
957.855 180.149 li
958.973 180.149 li
962.357 171.488 li
962.357 180.149 li
964.932 180.149 li
964.932 168.139 li
961.33 168.139 li
958.414 175.647 li
cp
f
970.4 175.864 mo
972.273 170.696 li
974.146 175.864 li
970.4 175.864 li
cp
970.672 168.139 mo
966.043 180.149 li
968.943 180.149 li
969.699 178.114 li
974.848 178.114 li
975.605 180.149 li
978.504 180.149 li
973.877 168.139 li
970.672 168.139 li
cp
f
987.809 175.684 mo
982.244 168.139 li
979.617 168.139 li
979.617 180.149 li
982.174 180.149 li
982.174 172.316 li
987.898 180.149 li
990.365 180.149 li
990.365 168.139 li
987.809 168.139 li
987.809 175.684 li
cp
f
998.572 170.21 mo
999.797 170.21 1000.88 170.984 1001.38 171.957 cv
1003.58 170.876 li
1002.73 169.364 1001.2 167.941 998.572 167.941 cv
994.953 167.941 992.162 170.444 992.162 174.153 cv
992.162 177.844 994.953 180.365 998.572 180.365 cv
1001.2 180.365 1002.73 178.907 1003.58 177.412 cv
1001.38 176.35 li
1000.88 177.322 999.797 178.096 998.572 178.096 cv
996.375 178.096 994.791 176.422 994.791 174.153 cv
994.791 171.884 996.375 170.21 998.572 170.21 cv
cp
f
1013.6 170.39 mo
1013.6 168.139 li
1005.1 168.139 li
1005.1 180.149 li
1013.6 180.149 li
1013.6 177.898 li
1007.66 177.898 li
1007.66 175.162 li
1013.48 175.162 li
1013.48 172.911 li
1007.66 172.911 li
1007.66 170.39 li
1013.6 170.39 li
cp
f
932.963 48.0078 mo
917.047 48.0078 904.098 60.9575 904.098 76.8745 cv
904.098 92.7915 917.047 105.741 932.963 105.741 cv
948.88 105.741 961.83 92.7915 961.83 76.8745 cv
961.83 60.9575 948.88 48.0078 932.963 48.0078 cv
cp
932.963 110.241 mo
914.565 110.241 899.598 95.2729 899.598 76.8745 cv
899.598 58.4761 914.565 43.5078 932.963 43.5078 cv
951.361 43.5078 966.33 58.4761 966.33 76.8745 cv
966.33 95.2729 951.361 110.241 932.963 110.241 cv
cp
.095291 .095291 .095291 rgb
f
932.963 70.626 mo
929.518 70.626 926.715 73.4292 926.715 76.8745 cv
926.715 80.3198 929.518 83.123 932.963 83.123 cv
936.408 83.123 939.212 80.3198 939.212 76.8745 cv
939.212 73.4292 936.408 70.626 932.963 70.626 cv
cp
932.963 87.623 mo
927.036 87.623 922.215 82.8013 922.215 76.8745 cv
922.215 70.9478 927.036 66.126 932.963 66.126 cv
938.89 66.126 943.712 70.9478 943.712 76.8745 cv
943.712 82.8013 938.89 87.623 932.963 87.623 cv
cp
f
932.963 25.4502 mo
904.607 25.4502 881.539 48.519 881.539 76.8745 cv
881.539 105.23 904.607 128.299 932.963 128.299 cv
961.318 128.299 984.388 105.23 984.388 76.8745 cv
984.388 48.519 961.318 25.4502 932.963 25.4502 cv
cp
932.963 132.799 mo
902.126 132.799 877.039 107.711 877.039 76.8745 cv
877.039 46.0376 902.126 20.9502 932.963 20.9502 cv
963.8 20.9502 988.888 46.0376 988.888 76.8745 cv
988.888 107.711 963.8 132.799 932.963 132.799 cv
cp
f
935.213 23.2002 mo
930.713 23.2002 li
930.713 9.78174 li
935.213 9.78174 li
935.213 23.2002 li
cp
f
926.254 5.32178 mo
925.063 5.32178 923.943 5.78564 923.101 6.62842 cv
922.259 7.47021 921.795 8.59033 921.795 9.78174 cv
921.795 10.9722 922.259 12.0923 923.101 12.9346 cv
923.943 13.7769 925.063 14.2407 926.254 14.2407 cv
939.673 14.2407 li
940.863 14.2407 941.983 13.7769 942.826 12.9341 cv
943.669 12.0913 944.133 10.9717 944.133 9.78174 cv
944.133 8.59131 943.669 7.47119 942.826 6.62793 cv
941.983 5.78564 940.863 5.32178 939.673 5.32178 cv
926.254 5.32178 li
cp
939.673 18.7407 mo
926.254 18.7407 li
923.861 18.7407 921.612 17.8086 919.919 16.1167 cv
918.227 14.4238 917.295 12.1738 917.295 9.78174 cv
917.295 7.38867 918.227 5.13867 919.919 3.44629 cv
921.612 1.75391 923.861 .821777 926.254 .821777 cv
939.673 .821777 li
942.065 .821777 944.314 1.75391 946.008 3.4458 cv
947.701 5.13965 948.633 7.38965 948.633 9.78174 cv
948.633 12.1733 947.701 14.4229 946.008 16.1162 cv
944.314 17.8086 942.065 18.7407 939.673 18.7407 cv
cp
f
980.415 40.1958 mo
977.233 37.0142 li
980.396 33.8511 li
980.647 33.5996 980.785 33.2661 980.785 32.9111 cv
980.785 32.5571 980.646 32.2231 980.395 31.9712 cv
977.866 29.4419 li
977.366 28.9424 976.49 28.9395 975.989 29.4409 cv
972.824 32.6045 li
969.643 29.4219 li
972.807 26.2598 li
973.904 25.1602 975.368 24.5537 976.926 24.5527 cv
978.482 24.5537 979.945 25.1592 981.047 26.2588 cv
983.577 28.79 li
984.679 29.8921 985.285 31.3555 985.285 32.9111 cv
985.285 34.4692 984.678 35.9336 983.576 37.0342 cv
980.415 40.1958 li
cp
f
885.512 40.1953 mo
882.35 37.0322 li
881.251 35.9346 880.644 34.4727 880.641 32.916 cv
880.644 31.3516 881.25 29.8896 882.349 28.7905 cv
884.879 26.2603 li
885.981 25.1587 887.444 24.5527 888.999 24.5527 cv
890.558 24.5537 892.021 25.1597 893.121 26.2598 cv
896.285 29.4219 li
893.104 32.6045 li
889.939 29.4419 li
889.44 28.9429 888.566 28.9365 888.06 29.4434 cv
885.531 31.9717 li
885.28 32.2231 885.142 32.5586 885.141 32.916 cv
885.142 33.2642 885.28 33.5991 885.531 33.8496 cv
888.693 37.0137 li
885.512 40.1953 li
cp
f
935.213 37.2593 mo
930.713 37.2593 li
930.713 31.6987 li
935.213 31.6987 li
935.213 37.2593 li
cp
f
911.208 43.6919 mo
908.427 38.876 li
912.323 36.626 li
915.104 41.4419 li
911.208 43.6919 li
cp
f
897.531 59.0161 mo
892.715 56.2349 li
894.965 52.3384 li
899.781 55.1196 li
897.531 59.0161 li
cp
f
893.35 79.125 mo
887.787 79.1245 li
887.787 74.6245 li
893.35 74.625 li
893.35 79.125 li
cp
f
894.965 101.411 mo
892.715 97.5137 li
897.531 94.7334 li
899.781 98.6309 li
894.965 101.411 li
cp
f
912.323 117.123 mo
908.427 114.873 li
911.208 110.057 li
915.104 112.307 li
912.323 117.123 li
cp
f
935.213 122.051 mo
930.713 122.049 li
930.715 116.488 li
935.215 116.49 li
935.213 122.051 li
cp
f
953.604 117.123 mo
950.823 112.306 li
954.72 110.056 li
957.5 114.873 li
953.604 117.123 li
cp
f
970.96 101.411 mo
966.146 98.6294 li
968.397 94.7329 li
973.212 97.5142 li
970.96 101.411 li
cp
f
978.14 79.1245 mo
972.579 79.1235 li
972.579 74.6235 li
978.14 74.6245 li
978.14 79.1245 li
cp
f
968.396 59.0146 mo
966.146 55.1172 li
970.961 52.3379 li
973.211 56.2354 li
968.396 59.0146 li
cp
f
954.72 43.6904 mo
950.823 41.4404 li
953.604 36.626 li
957.5 38.876 li
954.72 43.6904 li
cp
f
999.209 82.6499 mo
1009.08 82.6499 li
1003.65 76.8735 li
1009.08 71.0972 li
999.209 71.0972 li
993.772 76.8735 li
999.209 82.6499 li
cp
1019.5 87.1499 mo
997.264 87.1499 li
987.593 76.8735 li
997.264 66.5972 li
1019.5 66.5972 li
1009.83 76.8735 li
1019.5 87.1499 li
cp
f
1017.29 79.1245 mo
932.963 79.1235 li
932.963 74.6235 li
1017.29 74.6245 li
1017.29 79.1245 li
cp
f
674.85 173.613 mo
672.148 173.613 li
672.148 170.39 li
674.85 170.39 li
675.857 170.39 676.633 171.002 676.633 172.01 cv
676.633 173.001 675.857 173.613 674.85 173.613 cv
cp
675.21 168.139 mo
669.592 168.139 li
669.592 180.149 li
672.148 180.149 li
672.148 175.864 li
675.21 175.864 li
677.803 175.864 679.243 174.099 679.243 172.01 cv
679.243 169.904 677.82 168.139 675.21 168.139 cv
cp
.0980392 .0941176 .0941176 rgb
f
682.607 175.864 mo
684.479 170.697 li
686.352 175.864 li
682.607 175.864 li
cp
682.877 168.139 mo
678.25 180.149 li
681.148 180.149 li
681.904 178.115 li
687.055 178.115 li
687.811 180.149 li
690.709 180.149 li
686.082 168.139 li
682.877 168.139 li
cp
f
695.244 172.947 mo
692.273 168.139 li
689.355 168.139 li
693.965 175.234 li
693.965 180.149 li
696.522 180.149 li
696.522 175.234 li
701.113 168.139 li
698.215 168.139 li
695.244 172.947 li
cp
f
712.109 173.613 mo
709.409 173.613 li
709.409 170.39 li
712.109 170.39 li
713.118 170.39 713.893 171.002 713.893 172.01 cv
713.893 173.001 713.118 173.613 712.109 173.613 cv
cp
712.471 168.139 mo
706.853 168.139 li
706.853 180.149 li
709.409 180.149 li
709.409 175.864 li
712.471 175.864 li
715.063 175.864 716.504 174.099 716.504 172.01 cv
716.504 169.904 715.081 168.139 712.471 168.139 cv
cp
f
718.103 180.149 mo
726.602 180.149 li
726.602 177.899 li
720.659 177.899 li
720.659 175.162 li
726.475 175.162 li
726.475 172.911 li
720.659 172.911 li
720.659 170.39 li
726.602 170.39 li
726.602 168.139 li
718.103 168.139 li
718.103 180.149 li
cp
f
733.854 173.631 mo
731.152 173.631 li
731.152 170.39 li
733.854 170.39 li
734.861 170.39 735.637 171.002 735.637 171.993 cv
735.637 173.019 734.861 173.631 733.854 173.631 cv
cp
738.266 172.01 mo
738.266 169.778 736.717 168.139 734.214 168.139 cv
728.596 168.139 li
728.596 180.149 li
731.152 180.149 li
731.152 175.882 li
733.025 175.882 li
735.385 180.149 li
738.337 180.149 li
735.618 175.576 li
736.914 175.27 738.266 174.118 738.266 172.01 cv
cp
f
750.629 170.21 mo
751.854 170.21 752.934 170.985 753.438 171.957 cv
755.635 170.876 li
754.789 169.364 753.258 167.942 750.629 167.942 cv
747.01 167.942 744.22 170.444 744.22 174.154 cv
744.22 177.844 747.01 180.365 750.629 180.365 cv
753.258 180.365 754.789 178.907 755.635 177.413 cv
753.438 176.35 li
752.934 177.323 751.854 178.096 750.629 178.096 cv
748.434 178.096 746.848 176.422 746.848 174.154 cv
746.848 171.884 748.434 170.21 750.629 170.21 cv
cp
f
759.629 168.139 mo
757.053 168.139 li
757.053 180.149 li
764.705 180.149 li
764.705 177.899 li
759.629 177.899 li
759.629 168.139 li
cp
f
766.432 180.149 mo
768.988 180.149 li
768.988 168.139 li
766.432 168.139 li
766.432 180.149 li
cp
f
777.197 170.21 mo
778.422 170.21 779.502 170.985 780.006 171.957 cv
782.203 170.876 li
781.355 169.364 779.826 167.942 777.197 167.942 cv
773.578 167.942 770.787 170.444 770.787 174.154 cv
770.787 177.844 773.578 180.365 777.197 180.365 cv
779.826 180.365 781.355 178.907 782.203 177.413 cv
780.006 176.35 li
779.502 177.323 778.422 178.096 777.197 178.096 cv
775 178.096 773.416 176.422 773.416 174.154 cv
773.416 171.884 775 170.21 777.197 170.21 cv
cp
f
788.914 173.775 mo
793.686 168.139 li
790.535 168.139 li
786.285 173.487 li
786.285 168.139 li
783.729 168.139 li
783.729 180.149 li
786.285 180.149 li
786.285 176.458 li
787.223 175.324 li
790.859 180.149 li
794.01 180.149 li
788.914 173.775 li
cp
f
726.416 77.3521 mo
717.637 77.3521 710.494 70.2065 710.494 61.4238 cv
710.494 52.646 717.637 45.5044 726.416 45.5044 cv
735.195 45.5044 742.338 52.646 742.338 61.4238 cv
737.838 61.4238 li
737.838 55.127 732.714 50.0044 726.416 50.0044 cv
720.118 50.0044 714.994 55.127 714.994 61.4238 cv
714.994 67.7256 720.118 72.8521 726.416 72.8521 cv
726.416 77.3521 li
cp
.095291 .095291 .095291 rgb
f
726.416 91.0273 mo
710.097 91.0273 696.82 77.7451 696.82 61.4189 cv
696.82 45.103 710.097 31.8286 726.416 31.8286 cv
742.734 31.8286 756.011 45.103 756.011 61.4189 cv
751.511 61.4189 li
751.511 47.584 740.253 36.3286 726.416 36.3286 cv
712.578 36.3286 701.32 47.584 701.32 61.4189 cv
701.32 75.2637 712.578 86.5273 726.416 86.5273 cv
726.416 91.0273 li
cp
f
726.416 104.703 mo
702.558 104.703 683.147 85.2837 683.147 61.4146 cv
683.147 37.5605 702.558 18.1538 726.416 18.1538 cv
750.273 18.1538 769.684 37.5605 769.684 61.4146 cv
765.184 61.4146 li
765.184 40.042 747.793 22.6538 726.416 22.6538 cv
705.039 22.6538 687.647 40.042 687.647 61.4146 cv
687.647 82.8022 705.039 100.203 726.416 100.203 cv
726.416 104.703 li
cp
f
726.416 118.378 mo
695.019 118.378 669.475 92.8223 669.475 61.4106 cv
669.475 30.0181 695.019 4.47852 726.416 4.47852 cv
757.813 4.47852 783.357 30.0181 783.357 61.4106 cv
778.857 61.4106 li
778.857 32.4995 755.332 8.97852 726.416 8.97852 cv
697.5 8.97852 673.975 32.4995 673.975 61.4106 cv
673.975 90.3413 697.5 113.878 726.416 113.878 cv
726.416 118.378 li
cp
f
735.003 70.0161 mo
755.604 121.085 li
764.874 99.8828 li
786.068 90.626 li
735.003 70.0161 li
cp
755.438 132.7 mo
726.868 61.8804 li
797.686 90.4619 li
768.29 103.301 li
755.438 132.7 li
cp
f
782.767 120.957 mo
764.991 103.182 li
768.173 100 li
785.948 117.775 li
782.767 120.957 li
cp
f
37.4863 390.664 mo
34.5693 383.155 li
30.9863 383.155 li
30.9863 395.165 li
33.543 395.165 li
33.543 386.504 li
36.9277 395.165 li
38.0449 395.165 li
41.4297 386.504 li
41.4297 395.165 li
44.0039 395.165 li
44.0039 383.155 li
40.4033 383.155 li
37.4863 390.664 li
cp
.0980392 .0941176 .0941176 rgb
f
52.084 393.112 mo
49.8516 393.112 48.4287 391.402 48.4287 389.169 cv
48.4287 386.918 49.8516 385.226 52.084 385.226 cv
54.2988 385.226 55.7217 386.918 55.7217 389.169 cv
55.7217 391.402 54.2988 393.112 52.084 393.112 cv
cp
52.084 382.958 mo
48.4473 382.958 45.8008 385.55 45.8008 389.169 cv
45.8008 392.788 48.4473 395.38 52.084 395.38 cv
55.7031 395.38 58.3506 392.788 58.3506 389.169 cv
58.3506 385.55 55.7031 382.958 52.084 382.958 cv
cp
f
68.3389 390.7 mo
62.7754 383.155 li
60.1465 383.155 li
60.1465 395.165 li
62.7031 395.165 li
62.7031 387.333 li
68.4287 395.165 li
70.8955 395.165 li
70.8955 383.155 li
68.3389 383.155 li
68.3389 390.7 li
cp
f
73.2686 395.165 mo
75.8252 395.165 li
75.8252 383.155 li
73.2686 383.155 li
73.2686 395.165 li
cp
f
77.4619 385.406 mo
80.9727 385.406 li
80.9727 395.165 li
83.5479 395.165 li
83.5479 385.406 li
87.04 385.406 li
87.04 383.155 li
77.4619 383.155 li
77.4619 385.406 li
cp
f
93.9512 393.112 mo
91.7188 393.112 90.2959 391.402 90.2959 389.169 cv
90.2959 386.918 91.7188 385.226 93.9512 385.226 cv
96.166 385.226 97.5889 386.918 97.5889 389.169 cv
97.5889 391.402 96.166 393.112 93.9512 393.112 cv
cp
93.9512 382.958 mo
90.3145 382.958 87.668 385.55 87.668 389.169 cv
87.668 392.788 90.3145 395.38 93.9512 395.38 cv
97.5703 395.38 100.218 392.788 100.218 389.169 cv
100.218 385.55 97.5703 382.958 93.9512 382.958 cv
cp
f
107.271 388.647 mo
104.57 388.647 li
104.57 385.406 li
107.271 385.406 li
108.279 385.406 109.054 386.018 109.054 387.008 cv
109.054 388.035 108.279 388.647 107.271 388.647 cv
cp
111.683 387.026 mo
111.683 384.793 110.134 383.155 107.632 383.155 cv
102.014 383.155 li
102.014 395.165 li
104.57 395.165 li
104.57 390.898 li
106.443 390.898 li
108.802 395.165 li
111.755 395.165 li
109.036 390.591 li
110.332 390.286 111.683 389.133 111.683 387.026 cv
cp
f
113.588 395.165 mo
116.145 395.165 li
116.145 383.155 li
113.588 383.155 li
113.588 395.165 li
cp
f
126.712 390.7 mo
121.147 383.155 li
118.52 383.155 li
118.52 395.165 li
121.076 395.165 li
121.076 387.333 li
126.802 395.165 li
129.269 395.165 li
129.269 383.155 li
126.712 383.155 li
126.712 390.7 li
cp
f
136.845 388.521 mo
136.845 390.753 li
140.014 390.753 li
140.014 392.194 li
139.527 392.644 138.537 393.112 137.475 393.112 cv
135.277 393.112 133.693 391.438 133.693 389.169 cv
133.693 386.9 135.277 385.226 137.475 385.226 cv
138.734 385.226 139.761 385.946 140.319 386.792 cv
142.426 385.64 li
141.525 384.217 139.959 382.958 137.475 382.958 cv
133.945 382.958 131.064 385.37 131.064 389.169 cv
131.064 392.95 133.945 395.38 137.475 395.38 cv
139.635 395.38 141.346 394.499 142.57 393.13 cv
142.57 388.521 li
136.845 388.521 li
cp
f
29.0288 231.087 mo
144.529 231.087 li
144.529 220.587 li
29.0288 220.587 li
29.0288 231.087 li
cp
149.029 235.587 mo
24.5288 235.587 li
24.5288 216.087 li
149.029 216.087 li
149.029 235.587 li
cp
.095291 .095291 .095291 rgb
f
42.0288 228.087 mo
37.5288 228.087 li
37.5288 223.587 li
42.0288 223.587 li
42.0288 228.087 li
cp
f
51.0288 228.087 mo
46.5288 228.087 li
46.5288 223.587 li
51.0288 223.587 li
51.0288 228.087 li
cp
f
60.0288 228.087 mo
55.5288 228.087 li
55.5288 223.587 li
60.0288 223.587 li
60.0288 228.087 li
cp
f
149.028 320.253 mo
103.428 320.253 li
103.428 315.753 li
144.528 315.753 li
144.528 275.864 li
149.028 275.864 li
149.028 320.253 li
cp
f
70.1177 320.253 mo
24.5278 320.253 li
24.5278 291.542 li
45.978 270.09 li
61.9688 286.082 li
58.7871 289.264 li
45.978 276.455 li
29.0278 293.406 li
29.0278 315.753 li
70.1177 315.753 li
70.1177 320.253 li
cp
f
127.578 281.255 mo
111.583 265.262 li
114.765 262.08 li
127.578 274.891 li
144.529 257.938 li
144.529 235.587 li
29.0288 235.587 li
29.0288 275.472 li
24.5288 275.472 li
24.5288 231.087 li
149.029 231.087 li
149.029 259.798 li
148.37 260.461 li
127.578 281.255 li
cp
f
79.5815 265.29 mo
64.9424 279.929 li
65.2705 281.615 65.791 283.231 66.4771 284.758 cv
79.5815 271.654 li
93.9761 286.052 li
108.616 271.411 li
108.289 269.726 107.769 268.109 107.083 266.582 cv
93.9761 279.688 li
79.5815 265.29 li
cp
f
86.7808 293.429 mo
76.9922 293.429 69.0288 285.461 69.0288 275.667 cv
69.0288 265.878 76.9922 257.915 86.7808 257.915 cv
96.5669 257.915 104.529 265.877 104.529 275.665 cv
104.529 285.46 96.5669 293.429 86.7808 293.429 cv
cp
86.7808 253.415 mo
74.5112 253.415 64.5288 263.397 64.5288 275.667 cv
64.5288 287.942 74.5112 297.929 86.7808 297.929 cv
99.0483 297.929 109.029 287.941 109.029 275.665 cv
109.029 263.396 99.0483 253.415 86.7808 253.415 cv
cp
f
86.7803 248.917 mo
72.0293 248.917 60.0288 260.917 60.0288 275.667 cv
60.0288 290.423 72.0293 302.429 86.7803 302.429 cv
101.529 302.429 113.529 290.423 113.529 275.667 cv
113.529 260.917 101.529 248.917 86.7803 248.917 cv
cp
86.7803 306.929 mo
69.5483 306.929 55.5288 292.905 55.5288 275.667 cv
55.5288 258.436 69.5483 244.417 86.7803 244.417 cv
104.011 244.417 118.029 258.436 118.029 275.667 cv
118.029 292.905 104.011 306.929 86.7803 306.929 cv
cp
f
89.0303 318.007 mo
84.5303 318.007 li
84.5303 304.679 li
89.0303 304.679 li
89.0303 318.007 li
cp
f
83.229 320.257 mo
83.229 339.183 li
83.228 340.128 83.5981 341.018 84.2715 341.691 cv
85.6152 343.038 87.9409 343.039 89.2993 341.688 cv
89.9575 341.025 90.3252 340.132 90.3252 339.183 cv
90.3252 320.257 li
83.229 320.257 li
cp
86.7803 347.235 mo
84.6299 347.235 82.6084 346.396 81.0874 344.871 cv
79.5654 343.349 78.7271 341.327 78.729 339.18 cv
78.729 315.757 li
94.8252 315.757 li
94.8252 339.183 li
94.8252 341.328 93.9937 343.347 92.4834 344.868 cv
90.9468 346.397 88.9243 347.235 86.7803 347.235 cv
cp
f
268.319 388.647 mo
265.619 388.647 li
265.619 385.406 li
268.319 385.406 li
269.328 385.406 270.102 386.018 270.102 387.008 cv
270.102 388.035 269.328 388.647 268.319 388.647 cv
cp
272.731 387.026 mo
272.731 384.793 271.182 383.155 268.68 383.155 cv
263.062 383.155 li
263.062 395.165 li
265.619 395.165 li
265.619 390.898 li
267.491 390.898 li
269.85 395.165 li
272.803 395.165 li
270.084 390.591 li
271.38 390.286 272.731 389.133 272.731 387.026 cv
cp
.0980392 .0941176 .0941176 rgb
f
277.732 390.879 mo
279.605 385.712 li
281.478 390.879 li
277.732 390.879 li
cp
278.002 383.155 mo
273.375 395.165 li
276.274 395.165 li
277.03 393.13 li
282.18 393.13 li
282.936 395.165 li
285.835 395.165 li
281.208 383.155 li
278.002 383.155 li
cp
f
295.14 390.7 mo
289.577 383.155 li
286.948 383.155 li
286.948 395.165 li
289.504 395.165 li
289.504 387.333 li
295.23 395.165 li
297.697 395.165 li
297.697 383.155 li
295.14 383.155 li
295.14 390.7 li
cp
f
310.026 383.155 mo
306.875 383.155 li
302.626 388.502 li
302.626 383.155 li
300.069 383.155 li
300.069 395.165 li
302.626 395.165 li
302.626 391.474 li
303.562 390.339 li
307.199 395.165 li
310.35 395.165 li
305.255 388.791 li
310.026 383.155 li
cp
f
311.517 395.165 mo
314.074 395.165 li
314.074 383.155 li
311.517 383.155 li
311.517 395.165 li
cp
f
324.641 390.7 mo
319.078 383.155 li
316.449 383.155 li
316.449 395.165 li
319.005 395.165 li
319.005 387.333 li
324.731 395.165 li
327.198 395.165 li
327.198 383.155 li
324.641 383.155 li
324.641 390.7 li
cp
f
334.774 388.521 mo
334.774 390.753 li
337.943 390.753 li
337.943 392.194 li
337.457 392.644 336.466 393.112 335.404 393.112 cv
333.208 393.112 331.623 391.438 331.623 389.169 cv
331.623 386.9 333.208 385.226 335.404 385.226 cv
336.665 385.226 337.69 385.946 338.249 386.792 cv
340.355 385.64 li
339.455 384.217 337.889 382.958 335.404 382.958 cv
331.875 382.958 328.994 385.37 328.994 389.169 cv
328.994 392.95 331.875 395.38 335.404 395.38 cv
337.564 395.38 339.275 394.499 340.5 393.13 cv
340.5 388.521 li
334.774 388.521 li
cp
f
304.188 322.431 mo
234.531 322.431 li
234.531 252.772 li
239.031 252.772 li
239.031 317.931 li
304.188 317.931 li
304.188 322.431 li
cp
.095291 .095291 .095291 rgb
f
253.476 303.485 mo
329.194 303.485 li
345.272 319.563 li
345.272 303.485 li
364.531 303.485 li
364.531 240.577 li
253.476 240.577 li
253.476 303.485 li
cp
349.772 330.427 mo
327.33 307.985 li
248.976 307.985 li
248.976 236.077 li
369.031 236.077 li
369.031 307.985 li
349.772 307.985 li
349.772 330.427 li
cp
f
263.104 293.856 mo
354.9 293.856 li
354.9 250.208 li
263.104 250.208 li
263.104 293.856 li
cp
359.4 298.356 mo
258.604 298.356 li
258.604 245.708 li
359.4 245.708 li
359.4 298.356 li
cp
f
287.253 265.237 mo
289.466 269.716 li
294.404 270.431 li
290.83 273.91 li
291.675 278.825 li
287.253 276.506 li
282.843 278.825 li
283.684 273.91 li
280.115 270.431 li
285.054 269.716 li
287.253 265.237 li
cp
f
309.003 265.237 mo
311.205 269.716 li
316.141 270.431 li
312.579 273.91 li
313.425 278.825 li
309.003 276.506 li
304.591 278.825 li
305.434 273.91 li
301.862 270.431 li
306.793 269.716 li
309.003 265.237 li
cp
f
330.751 265.237 mo
332.949 269.716 li
337.893 270.431 li
334.316 273.91 li
335.165 278.825 li
330.751 276.506 li
326.329 278.825 li
327.167 273.91 li
323.613 270.431 li
328.541 269.716 li
330.751 265.237 li
cp
f
456.991 383.155 mo
454.416 383.155 li
454.416 395.165 li
462.068 395.165 li
462.068 392.915 li
456.991 392.915 li
456.991 383.155 li
cp
.0980392 .0941176 .0941176 rgb
f
463.794 395.165 mo
466.351 395.165 li
466.351 383.155 li
463.794 383.155 li
463.794 395.165 li
cp
f
476.918 390.7 mo
471.354 383.155 li
468.726 383.155 li
468.726 395.165 li
471.282 395.165 li
471.282 387.333 li
477.008 395.165 li
479.475 395.165 li
479.475 383.155 li
476.918 383.155 li
476.918 390.7 li
cp
f
491.804 383.155 mo
488.653 383.155 li
484.404 388.502 li
484.404 383.155 li
481.847 383.155 li
481.847 395.165 li
484.404 395.165 li
484.404 391.474 li
485.34 390.339 li
488.977 395.165 li
492.128 395.165 li
487.033 388.791 li
491.804 383.155 li
cp
f
503.791 392.915 mo
500.478 392.915 li
500.478 390.177 li
503.791 390.177 li
504.781 390.177 505.321 390.79 505.321 391.545 cv
505.321 392.41 504.745 392.915 503.791 392.915 cv
cp
500.478 385.406 mo
503.683 385.406 li
504.547 385.406 505.087 385.928 505.087 386.667 cv
505.087 387.441 504.547 387.926 503.683 387.926 cv
500.478 387.926 li
500.478 385.406 li
cp
505.627 388.971 mo
506.761 388.737 507.698 387.71 507.698 386.216 cv
507.698 384.614 506.527 383.155 504.241 383.155 cv
497.921 383.155 li
497.921 395.165 li
504.439 395.165 li
506.744 395.165 507.932 393.724 507.932 391.906 cv
507.932 390.412 506.923 389.169 505.627 388.971 cv
cp
f
518.084 390.286 mo
518.084 391.959 517.129 393.112 515.274 393.112 cv
513.42 393.112 512.448 391.959 512.448 390.286 cv
512.448 383.155 li
509.855 383.155 li
509.855 390.357 li
509.855 393.329 511.62 395.38 515.274 395.38 cv
518.93 395.38 520.694 393.329 520.694 390.357 cv
520.694 383.155 li
518.084 383.155 li
518.084 390.286 li
cp
f
523.067 395.165 mo
525.624 395.165 li
525.624 383.155 li
523.067 383.155 li
523.067 395.165 li
cp
f
530.466 383.155 mo
527.89 383.155 li
527.89 395.165 li
535.542 395.165 li
535.542 392.915 li
530.466 392.915 li
530.466 383.155 li
cp
f
542.004 392.915 mo
539.825 392.915 li
539.825 385.406 li
542.022 385.406 li
544.471 385.406 545.767 387.044 545.767 389.151 cv
545.767 391.204 544.38 392.915 542.004 392.915 cv
cp
542.004 383.155 mo
537.269 383.155 li
537.269 395.165 li
542.022 395.165 li
545.767 395.165 548.378 392.788 548.378 389.151 cv
548.378 385.55 545.767 383.155 542.004 383.155 cv
cp
f
550.192 395.165 mo
552.749 395.165 li
552.749 383.155 li
550.192 383.155 li
550.192 395.165 li
cp
f
563.316 390.7 mo
557.753 383.155 li
555.124 383.155 li
555.124 395.165 li
557.681 395.165 li
557.681 387.333 li
563.406 395.165 li
565.873 395.165 li
565.873 383.155 li
563.316 383.155 li
563.316 390.7 li
cp
f
573.449 388.521 mo
573.449 390.753 li
576.618 390.753 li
576.618 392.194 li
576.132 392.644 575.142 393.112 574.079 393.112 cv
571.882 393.112 570.298 391.438 570.298 389.169 cv
570.298 386.9 571.882 385.226 574.079 385.226 cv
575.339 385.226 576.366 385.946 576.925 386.792 cv
579.03 385.64 li
578.13 384.217 576.563 382.958 574.079 382.958 cv
570.55 382.958 567.669 385.37 567.669 389.169 cv
567.669 392.95 570.55 395.38 574.079 395.38 cv
576.239 395.38 577.95 394.499 579.175 393.13 cv
579.175 388.521 li
573.449 388.521 li
cp
f
505.909 232.593 mo
504.939 228.198 li
506.49 227.856 508.074 227.579 509.647 227.374 cv
510.229 231.836 li
508.785 232.024 507.332 232.279 505.909 232.593 cv
cp
497.553 235.226 mo
495.829 231.069 li
497.296 230.46 498.808 229.91 500.321 229.433 cv
501.673 233.725 li
500.286 234.163 498.899 234.667 497.553 235.226 cv
cp
489.785 239.279 mo
487.363 235.486 li
488.699 234.633 490.091 233.828 491.499 233.093 cv
493.581 237.082 li
492.289 237.756 491.012 238.496 489.785 239.279 cv
cp
482.835 244.622 mo
479.793 241.305 li
480.964 240.231 482.195 239.197 483.451 238.231 cv
486.194 241.799 li
485.041 242.686 483.91 243.636 482.835 244.622 cv
cp
476.913 251.086 mo
473.343 248.346 li
474.309 247.089 475.342 245.857 476.415 244.686 cv
479.733 247.725 li
478.748 248.801 477.799 249.932 476.913 251.086 cv
cp
472.2 258.478 mo
468.209 256.398 li
468.941 254.994 469.745 253.602 470.6 252.261 cv
474.395 254.679 li
473.61 255.911 472.872 257.188 472.2 258.478 cv
cp
468.848 266.574 mo
464.555 265.224 li
465.031 263.71 465.581 262.199 466.188 260.731 cv
470.346 262.452 li
469.789 263.799 469.285 265.186 468.848 266.574 cv
cp
466.965 275.13 mo
462.502 274.552 li
462.707 272.978 462.983 271.394 463.324 269.843 cv
467.719 270.811 li
467.406 272.232 467.152 273.686 466.965 275.13 cv
cp
.095291 .095291 .095291 rgb
f
519.046 231.411 mo
514.546 231.411 li
514.546 226.911 li
519.046 226.911 li
519.046 231.411 li
cp
f
466.545 279.411 mo
466.545 283.911 li
462.045 283.911 li
462.045 279.411 li
466.545 279.411 li
cp
f
570.267 293.478 mo
565.872 292.513 li
566.185 291.088 566.438 289.634 566.625 288.191 cv
571.088 288.771 li
570.884 290.343 570.607 291.926 570.267 293.478 cv
cp
567.4 302.592 mo
563.244 300.869 li
563.8 299.527 564.304 298.141 564.741 296.749 cv
569.034 298.097 li
568.558 299.616 568.008 301.128 567.4 302.592 cv
cp
562.991 311.063 mo
559.196 308.645 li
559.981 307.413 560.72 306.135 561.392 304.846 cv
565.382 306.925 li
564.65 308.329 563.846 309.722 562.991 311.063 cv
cp
557.176 318.637 mo
553.857 315.598 li
554.843 314.522 555.792 313.391 556.679 312.237 cv
560.247 314.977 li
559.282 316.234 558.249 317.466 557.176 318.637 cv
cp
550.139 325.091 mo
547.396 321.523 li
548.553 320.635 549.683 319.685 550.755 318.701 cv
553.798 322.017 li
552.629 323.089 551.397 324.124 550.139 325.091 cv
cp
542.093 330.23 mo
540.011 326.241 li
541.303 325.566 542.58 324.827 543.807 324.043 cv
546.229 327.836 li
544.892 328.69 543.501 329.495 542.093 330.23 cv
cp
533.269 333.89 mo
531.917 329.598 li
533.305 329.161 534.691 328.656 536.037 328.098 cv
537.762 332.254 li
536.294 332.863 534.782 333.414 533.269 333.89 cv
cp
523.944 335.949 mo
523.362 331.487 li
524.807 331.298 526.26 331.044 527.682 330.73 cv
528.652 335.125 li
527.102 335.466 525.518 335.744 523.944 335.949 cv
cp
f
519.046 336.412 mo
514.546 336.412 li
514.546 331.912 li
519.046 331.912 li
519.046 336.412 li
cp
f
571.547 279.411 mo
571.547 283.911 li
567.047 283.911 li
567.047 279.411 li
571.547 279.411 li
cp
f
478.85 345.593 mo
471.91 345.593 465.387 342.892 460.482 337.986 cv
455.569 333.074 452.864 326.546 452.864 319.606 cv
452.864 312.668 455.569 306.142 460.482 301.23 cv
476.989 284.723 li
481.896 279.816 488.419 277.114 495.356 277.114 cv
499.487 277.114 503.441 278.059 507.109 279.923 cv
505.07 283.935 li
502.041 282.395 498.772 281.614 495.356 281.614 cv
489.621 281.614 484.228 283.848 480.17 287.905 cv
463.664 304.412 li
459.601 308.474 457.364 313.87 457.364 319.606 cv
457.364 325.344 459.601 330.742 463.664 334.805 cv
467.719 338.859 473.112 341.093 478.85 341.093 cv
484.593 341.093 489.989 338.859 494.045 334.804 cv
510.552 318.297 li
514.607 314.233 516.842 308.835 516.842 303.101 cv
516.842 299.686 516.061 296.417 514.522 293.387 cv
518.534 291.349 li
520.397 295.017 521.342 298.971 521.342 303.101 cv
521.342 310.036 518.641 316.562 513.736 321.477 cv
497.227 337.986 li
492.321 342.892 485.794 345.593 478.85 345.593 cv
cp
f
538.221 286.208 mo
534.092 286.208 530.14 285.259 526.477 283.387 cv
528.523 279.38 li
531.547 280.925 534.811 281.708 538.222 281.708 cv
538.226 281.708 538.229 281.708 538.233 281.708 cv
543.971 281.708 549.368 279.471 553.431 275.408 cv
569.937 258.902 li
573.992 254.846 576.227 249.453 576.227 243.716 cv
576.227 237.971 573.993 232.574 569.937 228.52 cv
565.88 224.463 560.484 222.229 554.742 222.229 cv
549.006 222.229 543.612 224.463 539.556 228.52 cv
523.046 245.028 li
518.985 249.089 516.75 254.486 516.75 260.224 cv
516.749 263.646 517.531 266.912 519.076 269.932 cv
515.07 271.98 li
513.197 268.32 512.249 264.364 512.25 260.223 cv
512.25 253.284 514.954 246.758 519.864 241.846 cv
536.374 225.337 li
541.28 220.432 547.804 217.729 554.742 217.729 cv
561.686 217.729 568.212 220.432 573.118 225.338 cv
578.024 230.242 580.727 236.769 580.727 243.716 cv
580.727 250.655 578.024 257.178 573.118 262.084 cv
556.612 278.59 li
551.7 283.502 545.173 286.208 538.234 286.208 cv
538.229 286.208 538.226 286.208 538.221 286.208 cv
cp
f
493.768 307.871 mo
490.586 304.689 li
539.829 255.449 li
543.011 258.631 li
493.768 307.871 li
cp
f
649.585 385.226 mo
650.81 385.226 651.89 386 652.395 386.972 cv
654.59 385.892 li
653.744 384.379 652.214 382.958 649.585 382.958 cv
645.966 382.958 643.176 385.459 643.176 389.169 cv
643.176 392.86 645.966 395.38 649.585 395.38 cv
652.214 395.38 653.744 393.922 654.59 392.428 cv
652.395 391.366 li
651.89 392.338 650.81 393.112 649.585 393.112 cv
647.389 393.112 645.805 391.438 645.805 389.169 cv
645.805 386.9 647.389 385.226 649.585 385.226 cv
cp
.0980392 .0941176 .0941176 rgb
f
661.824 393.112 mo
659.592 393.112 658.17 391.402 658.17 389.169 cv
658.17 386.918 659.592 385.226 661.824 385.226 cv
664.039 385.226 665.462 386.918 665.462 389.169 cv
665.462 391.402 664.039 393.112 661.824 393.112 cv
cp
661.824 382.958 mo
658.188 382.958 655.541 385.55 655.541 389.169 cv
655.541 392.788 658.188 395.38 661.824 395.38 cv
665.443 395.38 668.091 392.788 668.091 389.169 cv
668.091 385.55 665.443 382.958 661.824 382.958 cv
cp
f
674.623 392.915 mo
672.443 392.915 li
672.443 385.406 li
674.641 385.406 li
677.09 385.406 678.386 387.044 678.386 389.151 cv
678.386 391.204 676.999 392.915 674.623 392.915 cv
cp
674.623 383.155 mo
669.887 383.155 li
669.887 395.165 li
674.641 395.165 li
678.386 395.165 680.996 392.788 680.996 389.151 cv
680.996 385.55 678.386 383.155 674.623 383.155 cv
cp
f
682.811 395.165 mo
691.31 395.165 li
691.31 392.915 li
685.367 392.915 li
685.367 390.177 li
691.184 390.177 li
691.184 387.926 li
685.367 387.926 li
685.367 385.406 li
691.31 385.406 li
691.31 383.155 li
682.811 383.155 li
682.811 395.165 li
cp
f
703.639 393.112 mo
701.406 393.112 699.982 391.402 699.982 389.169 cv
699.982 386.918 701.406 385.226 703.639 385.226 cv
705.854 385.226 707.275 386.918 707.275 389.169 cv
707.275 391.402 705.854 393.112 703.639 393.112 cv
cp
703.639 382.958 mo
700.001 382.958 697.354 385.55 697.354 389.169 cv
697.354 392.788 700.001 395.38 703.639 395.38 cv
707.258 395.38 709.904 392.788 709.904 389.169 cv
709.904 385.55 707.258 382.958 703.639 382.958 cv
cp
f
716.958 388.628 mo
714.258 388.628 li
714.258 385.406 li
716.958 385.406 li
717.967 385.406 718.74 386.018 718.74 387.026 cv
718.74 388.017 717.967 388.628 716.958 388.628 cv
cp
717.318 383.155 mo
711.701 383.155 li
711.701 395.165 li
714.258 395.165 li
714.258 390.879 li
717.318 390.879 li
719.911 390.879 721.352 389.115 721.352 387.026 cv
721.352 384.919 719.93 383.155 717.318 383.155 cv
cp
f
722.213 385.406 mo
725.723 385.406 li
725.723 395.165 li
728.299 395.165 li
728.299 385.406 li
731.791 385.406 li
731.791 383.155 li
722.213 383.155 li
722.213 385.406 li
cp
f
733.426 395.165 mo
735.982 395.165 li
735.982 383.155 li
733.426 383.155 li
733.426 395.165 li
cp
f
744.857 390.664 mo
741.941 383.155 li
738.357 383.155 li
738.357 395.165 li
740.914 395.165 li
740.914 386.504 li
744.299 395.165 li
745.416 395.165 li
748.801 386.504 li
748.801 395.165 li
751.375 395.165 li
751.375 383.155 li
747.774 383.155 li
744.857 390.664 li
cp
f
753.748 395.165 mo
756.305 395.165 li
756.305 383.155 li
753.748 383.155 li
753.748 395.165 li
cp
f
767.268 385.208 mo
767.268 383.155 li
758.248 383.155 li
758.248 385.406 li
763.919 385.406 li
758.248 393.094 li
758.248 395.165 li
767.395 395.165 li
767.395 392.915 li
761.596 392.915 li
767.268 385.208 li
cp
f
772.432 390.879 mo
774.305 385.712 li
776.178 390.879 li
772.432 390.879 li
cp
772.702 383.155 mo
768.074 395.165 li
770.974 395.165 li
771.73 393.13 li
776.879 393.13 li
777.636 395.165 li
780.535 395.165 li
775.907 383.155 li
772.702 383.155 li
cp
f
779.758 385.406 mo
783.268 385.406 li
783.268 395.165 li
785.844 395.165 li
785.844 385.406 li
789.336 385.406 li
789.336 383.155 li
779.758 383.155 li
779.758 385.406 li
cp
f
790.971 395.165 mo
793.527 395.165 li
793.527 383.155 li
790.971 383.155 li
790.971 395.165 li
cp
f
801.61 393.112 mo
799.378 393.112 797.955 391.402 797.955 389.169 cv
797.955 386.918 799.378 385.226 801.61 385.226 cv
803.825 385.226 805.248 386.918 805.248 389.169 cv
805.248 391.402 803.825 393.112 801.61 393.112 cv
cp
801.61 382.958 mo
797.973 382.958 795.326 385.55 795.326 389.169 cv
795.326 392.788 797.973 395.38 801.61 395.38 cv
805.229 395.38 807.877 392.788 807.877 389.169 cv
807.877 385.55 805.229 382.958 801.61 382.958 cv
cp
f
817.865 383.155 mo
817.865 390.7 li
812.301 383.155 li
809.673 383.155 li
809.673 395.165 li
812.229 395.165 li
812.229 387.333 li
817.955 395.165 li
820.422 395.165 li
820.422 383.155 li
817.865 383.155 li
cp
f
756.992 295.078 mo
746.43 295.078 737.836 303.672 737.836 314.236 cv
737.836 324.801 746.43 333.396 756.992 333.396 cv
767.558 333.396 776.152 324.801 776.152 314.236 cv
776.152 303.672 767.558 295.078 756.992 295.078 cv
cp
756.992 337.896 mo
743.948 337.896 733.336 327.283 733.336 314.236 cv
733.336 301.191 743.948 290.578 756.992 290.578 cv
770.038 290.578 780.652 301.191 780.652 314.236 cv
780.652 327.283 770.038 337.896 756.992 337.896 cv
cp
.095291 .095291 .095291 rgb
f
756.992 308.558 mo
753.861 308.558 751.314 311.105 751.314 314.236 cv
751.314 317.369 753.861 319.917 756.992 319.917 cv
760.123 319.917 762.67 317.369 762.67 314.236 cv
762.67 311.105 760.123 308.558 756.992 308.558 cv
cp
756.992 324.417 mo
751.38 324.417 746.814 319.85 746.814 314.236 cv
746.814 308.624 751.38 304.058 756.992 304.058 cv
762.604 304.058 767.17 308.624 767.17 314.236 cv
767.17 319.85 762.604 324.417 756.992 324.417 cv
cp
f
759.242 292.828 mo
754.742 292.828 li
754.742 284.238 li
759.242 284.238 li
759.242 292.828 li
cp
f
744.334 296.821 mo
740.043 289.382 li
743.941 287.134 li
748.232 294.573 li
744.334 296.821 li
cp
f
737.328 305.483 mo
729.891 301.187 li
732.141 297.29 li
739.578 301.586 li
737.328 305.483 li
cp
f
735.586 316.486 mo
726.992 316.486 li
726.992 311.986 li
735.586 311.986 li
735.586 316.486 li
cp
f
732.142 331.187 mo
729.89 327.29 li
737.327 322.993 li
739.579 326.889 li
732.142 331.187 li
cp
f
743.941 341.341 mo
740.043 339.093 li
744.334 331.654 li
748.232 333.902 li
743.941 341.341 li
cp
f
759.242 344.236 mo
754.742 344.236 li
754.742 335.646 li
759.242 335.646 li
759.242 344.236 li
cp
f
770.044 341.343 mo
765.745 333.904 li
769.642 331.652 li
773.94 339.091 li
770.044 341.343 li
cp
f
781.848 331.185 mo
774.408 326.89 li
776.658 322.992 li
784.098 327.288 li
781.848 331.185 li
cp
f
786.992 316.486 mo
778.402 316.486 li
778.402 311.986 li
786.992 311.986 li
786.992 316.486 li
cp
f
776.659 305.483 mo
774.407 301.586 li
781.847 297.288 li
784.099 301.185 li
776.659 305.483 li
cp
f
769.642 296.823 mo
765.745 294.571 li
770.044 287.132 li
773.94 289.384 li
769.642 296.823 li
cp
f
703.277 250.302 mo
688.99 250.302 li
688.99 245.802 li
703.277 245.802 li
703.277 250.302 li
cp
f
718.641 268.472 mo
703.277 268.472 li
703.277 263.972 li
718.641 263.972 li
718.641 268.472 li
cp
f
718.641 277.554 mo
703.277 277.554 li
703.277 273.054 li
718.641 273.054 li
718.641 277.554 li
cp
f
718.641 304.807 mo
703.277 304.807 li
703.277 300.307 li
718.641 300.307 li
718.641 304.807 li
cp
f
718.641 313.89 mo
703.277 313.89 li
703.277 309.39 li
718.641 309.39 li
718.641 313.89 li
cp
f
718.641 259.384 mo
688.99 259.384 li
688.99 254.884 li
718.641 254.884 li
718.641 259.384 li
cp
f
703.277 286.64 mo
688.99 286.64 li
688.99 282.14 li
703.277 282.14 li
703.277 286.64 li
cp
f
718.641 295.722 mo
688.99 295.722 li
688.99 291.222 li
718.641 291.222 li
718.641 295.722 li
cp
f
740.018 268.472 mo
724.65 268.472 li
724.65 263.972 li
740.018 263.972 li
740.018 268.472 li
cp
f
754.305 277.554 mo
724.65 277.554 li
724.65 273.054 li
754.305 273.054 li
754.305 277.554 li
cp
f
740.018 259.384 mo
724.65 259.384 li
724.65 254.884 li
740.018 254.884 li
740.018 259.384 li
cp
f
678.855 232.73 mo
764.439 232.73 li
764.439 221.336 li
678.855 221.336 li
678.855 232.73 li
cp
768.939 237.23 mo
674.355 237.23 li
674.355 216.836 li
768.939 216.836 li
768.939 237.23 li
cp
f
689.857 229.284 mo
685.355 229.284 li
685.355 224.784 li
689.857 224.784 li
689.857 229.284 li
cp
f
698.857 229.284 mo
694.355 229.284 li
694.355 224.784 li
698.857 224.784 li
698.857 229.284 li
cp
f
707.857 229.284 mo
703.355 229.284 li
703.355 224.784 li
707.857 224.784 li
707.857 229.284 li
cp
f
718.641 326.96 mo
674.355 326.96 li
674.355 232.73 li
768.939 232.73 li
768.939 277.804 li
764.439 277.804 li
764.439 237.23 li
678.855 237.23 li
678.855 322.46 li
718.641 322.46 li
718.641 326.96 li
cp
f
921.229 386.423 mo
921.229 385.703 921.842 385.235 922.922 385.235 cv
924.146 385.235 925.441 385.649 926.414 386.549 cv
927.838 384.641 li
926.648 383.542 925.064 382.966 923.156 382.966 cv
920.328 382.966 918.6 384.623 918.6 386.621 cv
918.6 391.141 925.514 389.682 925.514 391.771 cv
925.514 392.473 924.848 393.103 923.426 393.103 cv
921.77 393.103 920.455 392.347 919.609 391.465 cv
918.205 393.463 li
919.338 394.598 920.994 395.372 923.318 395.372 cv
926.541 395.372 928.125 393.715 928.125 391.519 cv
928.125 387.035 921.229 388.314 921.229 386.423 cv
cp
.0980392 .0941176 .0941176 rgb
f
938.061 387.864 mo
932.389 387.864 li
932.389 383.146 li
929.832 383.146 li
929.832 395.156 li
932.389 395.156 li
932.389 390.096 li
938.061 390.096 li
938.061 395.156 li
940.635 395.156 li
940.635 383.146 li
938.061 383.146 li
938.061 387.864 li
cp
f
946.086 390.871 mo
947.959 385.703 li
949.832 390.871 li
946.086 390.871 li
cp
946.357 383.146 mo
941.73 395.156 li
944.629 395.156 li
945.385 393.121 li
950.533 393.121 li
951.291 395.156 li
954.189 395.156 li
949.563 383.146 li
946.357 383.146 li
cp
f
960.559 388.638 mo
957.859 388.638 li
957.859 385.397 li
960.559 385.397 li
961.568 385.397 962.342 386.009 962.342 387 cv
962.342 388.026 961.568 388.638 960.559 388.638 cv
cp
964.971 387.017 mo
964.971 384.785 963.422 383.146 960.92 383.146 cv
955.303 383.146 li
955.303 395.156 li
957.859 395.156 li
957.859 390.889 li
959.73 390.889 li
962.09 395.156 li
965.043 395.156 li
962.324 390.583 li
963.621 390.276 964.971 389.124 964.971 387.017 cv
cp
f
975.375 385.397 mo
975.375 383.146 li
966.875 383.146 li
966.875 395.156 li
975.375 395.156 li
975.375 392.905 li
969.432 392.905 li
969.432 390.168 li
975.248 390.168 li
975.248 387.917 li
969.432 387.917 li
969.432 385.397 li
975.375 385.397 li
cp
f
907.58 255.622 mo
893.221 255.622 881.539 267.303 881.539 281.661 cv
881.539 296.02 893.221 307.702 907.58 307.702 cv
921.938 307.702 933.619 296.02 933.619 281.661 cv
933.619 267.303 921.938 255.622 907.58 255.622 cv
cp
907.58 312.202 mo
890.739 312.202 877.039 298.501 877.039 281.661 cv
877.039 264.821 890.739 251.122 907.58 251.122 cv
924.419 251.122 938.119 264.821 938.119 281.661 cv
938.119 298.501 924.419 312.202 907.58 312.202 cv
cp
.095291 .095291 .095291 rgb
f
907.58 271.5 mo
901.979 271.5 897.424 276.058 897.424 281.661 cv
897.424 287.263 901.979 291.821 907.58 291.821 cv
913.183 291.821 917.74 287.263 917.74 281.661 cv
917.74 276.058 913.183 271.5 907.58 271.5 cv
cp
907.58 296.321 mo
899.499 296.321 892.924 289.744 892.924 281.661 cv
892.924 273.577 899.499 267 907.58 267 cv
915.664 267 922.24 273.577 922.24 281.661 cv
922.24 289.744 915.664 296.321 907.58 296.321 cv
cp
f
1001.88 271.5 mo
996.276 271.5 991.719 276.058 991.719 281.661 cv
991.719 287.263 996.276 291.821 1001.88 291.821 cv
1007.48 291.821 1012.04 287.263 1012.04 281.661 cv
1012.04 276.058 1007.48 271.5 1001.88 271.5 cv
cp
1001.88 296.321 mo
993.795 296.321 987.219 289.744 987.219 281.661 cv
987.219 273.577 993.795 267 1001.88 267 cv
1009.96 267 1016.54 273.577 1016.54 281.661 cv
1016.54 289.744 1009.96 296.321 1001.88 296.321 cv
cp
f
989.469 283.911 mo
919.99 283.911 li
919.99 279.411 li
989.469 279.411 li
989.469 283.911 li
cp
f
954.732 224.351 mo
952.02 224.351 949.469 225.408 947.55 227.326 cv
943.591 231.286 943.591 237.732 947.551 241.698 cv
949.469 243.614 952.02 244.67 954.732 244.67 cv
957.445 244.67 959.995 243.614 961.913 241.697 cv
965.872 237.732 965.872 231.286 961.913 227.326 cv
959.995 225.408 957.445 224.351 954.732 224.351 cv
cp
954.732 249.17 mo
950.817 249.17 947.137 247.646 944.368 244.879 cv
938.654 239.158 938.655 229.857 944.368 224.144 cv
947.137 221.375 950.817 219.851 954.732 219.851 cv
958.647 219.851 962.327 221.376 965.095 224.144 cv
970.808 229.857 970.809 239.158 965.096 244.877 cv
962.327 247.646 958.647 249.17 954.732 249.17 cv
cp
f
957.23 234.51 mo
957.23 235.891 956.111 237.01 954.73 237.011 cv
953.35 237.011 952.23 235.892 952.23 234.512 cv
952.23 233.13 953.35 232.011 954.73 232.011 cv
956.111 232.011 957.23 233.13 957.23 234.51 cv
cp
f
917.944 274.479 mo
914.763 271.296 li
944.368 241.696 li
947.55 244.879 li
917.944 274.479 li
cp
f
954.732 318.651 mo
952.02 318.651 949.469 319.708 947.55 321.626 cv
943.591 325.589 943.59 332.036 947.55 335.996 cv
949.469 337.914 952.02 338.971 954.732 338.971 cv
957.445 338.971 959.995 337.914 961.912 335.996 cv
965.872 332.036 965.873 325.589 961.914 321.625 cv
959.996 319.708 957.445 318.651 954.732 318.651 cv
cp
954.732 343.471 mo
950.817 343.471 947.137 341.946 944.368 339.177 cv
938.654 333.464 938.654 324.163 944.367 318.445 cv
947.137 315.676 950.817 314.151 954.732 314.151 cv
958.647 314.151 962.328 315.676 965.097 318.445 cv
970.81 324.164 970.808 333.464 965.095 339.177 cv
962.327 341.946 958.647 343.471 954.732 343.471 cv
cp
f
944.368 321.627 mo
914.763 292.025 li
917.944 288.843 li
947.55 318.444 li
944.368 321.627 li
cp
f
910.082 281.661 mo
910.082 283.042 908.963 284.162 907.582 284.162 cv
906.201 284.162 905.082 283.042 905.082 281.661 cv
905.082 280.28 906.201 279.161 907.582 279.161 cv
908.963 279.161 910.082 280.28 910.082 281.661 cv
cp
f
957.232 328.811 mo
957.232 330.192 956.113 331.311 954.732 331.311 cv
953.352 331.311 952.232 330.192 952.232 328.811 cv
952.232 327.43 953.352 326.311 954.732 326.311 cv
956.113 326.311 957.232 327.43 957.232 328.811 cv
cp
f
1004.38 281.661 mo
1004.38 283.042 1003.26 284.162 1001.88 284.162 cv
1000.5 284.162 999.379 283.042 999.379 281.661 cv
999.379 280.28 1000.5 279.161 1001.88 279.161 cv
1003.26 279.161 1004.38 280.28 1004.38 281.661 cv
cp
f
16.2568 598.169 mo
13.1055 598.169 li
8.85645 603.517 li
8.85645 598.169 li
6.2998 598.169 li
6.2998 610.179 li
8.85645 610.179 li
8.85645 606.488 li
9.79297 605.353 li
13.4297 610.179 li
16.5806 610.179 li
11.4854 603.804 li
16.2568 598.169 li
cp
.0980392 .0941176 .0941176 rgb
f
17.7476 610.179 mo
26.2461 610.179 li
26.2461 607.929 li
20.3042 607.929 li
20.3042 605.191 li
26.1201 605.191 li
26.1201 602.941 li
20.3042 602.941 li
20.3042 600.419 li
26.2461 600.419 li
26.2461 598.169 li
17.7476 598.169 li
17.7476 610.179 li
cp
f
50.2041 606.847 mo
47.9355 598.169 li
45.9365 598.169 li
43.6499 606.847 li
41.5435 598.169 li
38.7383 598.169 li
38.6807 598.169 li
35.8394 598.169 li
32.8687 602.976 li
29.8975 598.169 li
26.9805 598.169 li
31.5898 605.263 li
31.5898 610.179 li
34.147 610.179 li
34.147 605.263 li
38.6982 598.23 li
42.1196 610.179 li
44.8384 610.179 li
46.9272 601.933 li
49.0337 610.179 li
51.7524 610.179 li
55.1733 598.169 li
52.3105 598.169 li
50.2041 606.847 li
cp
f
61.7227 608.126 mo
59.4902 608.126 58.0674 606.416 58.0674 604.183 cv
58.0674 601.933 59.4902 600.24 61.7227 600.24 cv
63.9375 600.24 65.3599 601.933 65.3599 604.183 cv
65.3599 606.416 63.9375 608.126 61.7227 608.126 cv
cp
61.7227 597.972 mo
58.0854 597.972 55.439 600.564 55.439 604.183 cv
55.439 607.802 58.0854 610.394 61.7227 610.394 cv
65.3418 610.394 67.9888 607.802 67.9888 604.183 cv
67.9888 600.564 65.3418 597.972 61.7227 597.972 cv
cp
f
75.0425 603.662 mo
72.3418 603.662 li
72.3418 600.419 li
75.0425 600.419 li
76.0508 600.419 76.8252 601.033 76.8252 602.023 cv
76.8252 603.048 76.0508 603.662 75.0425 603.662 cv
cp
79.4541 602.041 mo
79.4541 599.808 77.9053 598.169 75.4028 598.169 cv
69.7852 598.169 li
69.7852 610.179 li
72.3418 610.179 li
72.3418 605.912 li
74.2144 605.912 li
76.5732 610.179 li
79.5259 610.179 li
76.8071 605.605 li
78.1035 605.3 79.4541 604.148 79.4541 602.041 cv
cp
f
86.0942 607.929 mo
83.9155 607.929 li
83.9155 600.419 li
86.1123 600.419 li
88.561 600.419 89.8574 602.058 89.8574 604.166 cv
89.8574 606.218 88.4707 607.929 86.0942 607.929 cv
cp
86.0942 598.169 mo
81.3589 598.169 li
81.3589 610.179 li
86.1123 610.179 li
89.8574 610.179 92.4683 607.802 92.4683 604.166 cv
92.4683 600.564 89.8574 598.169 86.0942 598.169 cv
cp
f
101.105 601.447 mo
101.105 600.726 101.717 600.257 102.798 600.257 cv
104.022 600.257 105.318 600.671 106.291 601.572 cv
107.713 599.664 li
106.525 598.566 104.94 597.99 103.032 597.99 cv
100.205 597.99 98.4766 599.646 98.4766 601.644 cv
98.4766 606.164 105.391 604.705 105.391 606.794 cv
105.391 607.496 104.724 608.126 103.302 608.126 cv
101.646 608.126 100.331 607.371 99.4849 606.488 cv
98.0801 608.486 li
99.2148 609.621 100.871 610.394 103.194 610.394 cv
106.417 610.394 108.001 608.738 108.001 606.542 cv
108.001 602.058 101.105 603.337 101.105 601.447 cv
cp
f
109.708 610.179 mo
118.207 610.179 li
118.207 607.929 li
112.265 607.929 li
112.265 605.191 li
118.081 605.191 li
118.081 602.941 li
112.265 602.941 li
112.265 600.419 li
118.207 600.419 li
118.207 598.169 li
109.708 598.169 li
109.708 610.179 li
cp
f
123.299 605.894 mo
125.171 600.726 li
127.044 605.894 li
123.299 605.894 li
cp
123.569 598.169 mo
118.941 610.179 li
121.84 610.179 li
122.597 608.144 li
127.746 608.144 li
128.502 610.179 li
131.401 610.179 li
126.774 598.169 li
123.569 598.169 li
cp
f
137.771 603.662 mo
135.071 603.662 li
135.071 600.419 li
137.771 600.419 li
138.78 600.419 139.554 601.033 139.554 602.023 cv
139.554 603.048 138.78 603.662 137.771 603.662 cv
cp
142.183 602.041 mo
142.183 599.808 140.634 598.169 138.132 598.169 cv
132.514 598.169 li
132.514 610.179 li
135.071 610.179 li
135.071 605.912 li
136.943 605.912 li
139.302 610.179 li
142.255 610.179 li
139.536 605.605 li
140.833 605.3 142.183 604.148 142.183 602.041 cv
cp
f
149.921 600.24 mo
151.146 600.24 152.226 601.015 152.73 601.986 cv
154.927 600.906 li
154.081 599.394 152.55 597.972 149.921 597.972 cv
146.302 597.972 143.512 600.474 143.512 604.183 cv
143.512 607.875 146.302 610.394 149.921 610.394 cv
152.55 610.394 154.081 608.937 154.927 607.443 cv
152.73 606.38 li
152.226 607.353 151.146 608.126 149.921 608.126 cv
147.725 608.126 146.141 606.453 146.141 604.183 cv
146.141 601.914 147.725 600.24 149.921 600.24 cv
cp
f
164.682 598.169 mo
164.682 602.886 li
159.01 602.886 li
159.01 598.169 li
156.454 598.169 li
156.454 610.179 li
159.01 610.179 li
159.01 605.119 li
164.682 605.119 li
164.682 610.179 li
167.257 610.179 li
167.257 598.169 li
164.682 598.169 li
cp
f
48.5298 451.393 mo
125.027 451.393 li
125.027 438.926 li
48.5298 438.926 li
48.5298 451.393 li
cp
129.527 455.893 mo
44.0298 455.893 li
44.0298 434.426 li
129.527 434.426 li
129.527 455.893 li
cp
.095291 .095291 .095291 rgb
f
59.4551 447.411 mo
54.9536 447.411 li
54.9536 442.911 li
59.4551 442.911 li
59.4551 447.411 li
cp
f
68.457 447.411 mo
63.9556 447.411 li
63.9556 442.911 li
68.457 442.911 li
68.457 447.411 li
cp
f
77.458 447.411 mo
72.9546 447.411 li
72.9546 442.911 li
77.458 442.911 li
77.458 447.411 li
cp
f
48.5298 537.329 mo
94.4688 537.329 li
108.385 551.245 li
108.385 537.329 li
125.027 537.329 li
125.027 455.893 li
48.5298 455.893 li
48.5298 537.329 li
cp
112.885 562.108 mo
92.6045 541.829 li
44.0298 541.829 li
44.0298 451.393 li
129.527 451.393 li
129.527 541.829 li
112.885 541.829 li
112.885 562.108 li
cp
f
110.635 476.057 mo
62.9219 476.057 li
62.9219 471.557 li
110.635 471.557 li
110.635 476.057 li
cp
f
110.635 487.458 mo
62.9219 487.458 li
62.9219 482.958 li
110.635 482.958 li
110.635 487.458 li
cp
f
110.635 510.858 mo
62.9219 510.858 li
62.9219 506.358 li
110.635 506.358 li
110.635 510.858 li
cp
f
86.7783 522.258 mo
62.9219 522.258 li
62.9219 517.758 li
86.7783 517.758 li
86.7783 522.258 li
cp
f
137.471 499.456 mo
9.90625 499.456 li
9.90625 494.956 li
137.471 494.956 li
137.471 499.456 li
cp
f
19.2964 497.206 mo
14.7964 497.206 li
14.7964 482.925 li
19.2964 482.925 li
19.2964 497.206 li
cp
f
38.3359 497.206 mo
33.8359 497.206 li
33.8359 482.925 li
38.3359 482.925 li
38.3359 497.206 li
cp
f
28.8149 497.206 mo
24.3149 497.206 li
24.3149 488.875 li
28.8149 488.875 li
28.8149 497.206 li
cp
f
150.562 486.366 mo
144.584 486.366 139.721 491.229 139.721 497.206 cv
139.721 503.182 144.584 508.043 150.562 508.043 cv
156.538 508.043 161.4 503.182 161.4 497.206 cv
161.4 491.229 156.538 486.366 150.562 486.366 cv
cp
150.562 512.543 mo
142.103 512.543 135.221 505.663 135.221 497.206 cv
135.221 488.747 142.103 481.866 150.562 481.866 cv
159.02 481.866 165.9 488.747 165.9 497.206 cv
165.9 505.663 159.02 512.543 150.562 512.543 cv
cp
f
271.533 602.886 mo
265.861 602.886 li
265.861 598.169 li
263.305 598.169 li
263.305 610.179 li
265.861 610.179 li
265.861 605.119 li
271.533 605.119 li
271.533 610.179 li
274.108 610.179 li
274.108 598.169 li
271.533 598.169 li
271.533 602.886 li
cp
.0980392 .0941176 .0941176 rgb
f
282.17 608.126 mo
279.938 608.126 278.515 606.416 278.515 604.183 cv
278.515 601.933 279.938 600.24 282.17 600.24 cv
284.385 600.24 285.808 601.933 285.808 604.183 cv
285.808 606.416 284.385 608.126 282.17 608.126 cv
cp
282.17 597.972 mo
278.533 597.972 275.887 600.564 275.887 604.183 cv
275.887 607.802 278.533 610.394 282.17 610.394 cv
285.789 610.394 288.437 607.802 288.437 604.183 cv
288.437 600.564 285.789 597.972 282.17 597.972 cv
cp
f
292.429 601.447 mo
292.429 600.726 293.041 600.257 294.122 600.257 cv
295.346 600.257 296.643 600.671 297.614 601.572 cv
299.037 599.664 li
297.849 598.566 296.265 597.99 294.355 597.99 cv
291.529 597.99 289.801 599.646 289.801 601.644 cv
289.801 606.164 296.715 604.705 296.715 606.794 cv
296.715 607.496 296.048 608.126 294.626 608.126 cv
292.97 608.126 291.655 607.371 290.809 606.488 cv
289.404 608.486 li
290.539 609.621 292.195 610.394 294.518 610.394 cv
297.741 610.394 299.325 608.738 299.325 606.542 cv
299.325 602.058 292.429 603.337 292.429 601.447 cv
cp
f
300.061 600.419 mo
303.571 600.419 li
303.571 610.179 li
306.146 610.179 li
306.146 600.419 li
309.639 600.419 li
309.639 598.169 li
300.061 598.169 li
300.061 600.419 li
cp
f
311.274 610.179 mo
313.831 610.179 li
313.831 598.169 li
311.274 598.169 li
311.274 610.179 li
cp
f
324.398 605.714 mo
318.834 598.169 li
316.206 598.169 li
316.206 610.179 li
318.763 610.179 li
318.763 602.347 li
324.488 610.179 li
326.955 610.179 li
326.955 598.169 li
324.398 598.169 li
324.398 605.714 li
cp
f
334.531 603.535 mo
334.531 605.767 li
337.7 605.767 li
337.7 607.208 li
337.214 607.658 336.224 608.126 335.161 608.126 cv
332.964 608.126 331.38 606.453 331.38 604.183 cv
331.38 601.914 332.964 600.24 335.161 600.24 cv
336.421 600.24 337.447 600.96 338.006 601.806 cv
340.112 600.654 li
339.212 599.232 337.646 597.972 335.161 597.972 cv
331.632 597.972 328.751 600.384 328.751 604.183 cv
328.751 607.964 331.632 610.394 335.161 610.394 cv
337.321 610.394 339.032 609.513 340.257 608.144 cv
340.257 603.535 li
334.531 603.535 li
cp
f
320.029 516.926 mo
303.49 516.926 li
303.49 508.426 li
300.07 508.426 li
300.07 516.926 li
283.529 516.926 li
283.529 488.678 li
288.029 488.678 li
288.029 512.426 li
295.57 512.426 li
295.57 503.926 li
307.99 503.926 li
307.99 512.426 li
315.529 512.426 li
315.529 488.678 li
320.029 488.678 li
320.029 516.926 li
cp
.095291 .095291 .095291 rgb
f
322.895 496.971 mo
301.78 475.858 li
280.669 496.97 li
277.487 493.789 li
301.78 469.494 li
326.077 493.788 li
322.895 496.971 li
cp
f
244.031 526.426 mo
359.531 526.426 li
359.531 460.926 li
244.031 460.926 li
244.031 526.426 li
cp
364.031 530.926 mo
239.531 530.926 li
239.531 456.426 li
364.031 456.426 li
364.031 530.926 li
cp
f
251.531 456.426 mo
352.031 456.426 li
352.031 448.926 li
287.031 448.926 li
287.031 442.926 li
251.531 442.926 li
251.531 456.426 li
cp
356.531 460.926 mo
247.031 460.926 li
247.031 438.426 li
291.531 438.426 li
291.531 444.426 li
356.531 444.426 li
356.531 460.926 li
cp
f
301.781 540.926 mo
299.162 540.926 297.031 543.057 297.031 545.676 cv
297.031 548.295 299.162 550.426 301.781 550.426 cv
304.4 550.426 306.531 548.295 306.531 545.676 cv
306.531 543.057 304.4 540.926 301.781 540.926 cv
cp
301.781 554.926 mo
296.68 554.926 292.531 550.777 292.531 545.676 cv
292.531 540.576 296.68 536.426 301.781 536.426 cv
306.881 536.426 311.031 540.576 311.031 545.676 cv
311.031 550.777 306.881 554.926 301.781 554.926 cv
cp
f
354.281 547.926 mo
308.781 547.926 li
308.781 543.426 li
354.281 543.426 li
354.281 547.926 li
cp
f
294.781 547.926 mo
249.281 547.926 li
249.281 543.426 li
294.781 543.426 li
294.781 547.926 li
cp
f
304.03 538.676 mo
299.53 538.676 li
299.53 528.676 li
304.03 528.676 li
304.03 538.676 li
cp
f
502.772 601.447 mo
502.772 600.726 503.384 600.257 504.465 600.257 cv
505.689 600.257 506.985 600.671 507.958 601.572 cv
509.38 599.664 li
508.192 598.566 506.607 597.99 504.699 597.99 cv
501.872 597.99 500.144 599.646 500.144 601.644 cv
500.144 606.164 507.058 604.705 507.058 606.794 cv
507.058 607.496 506.391 608.126 504.969 608.126 cv
503.313 608.126 501.998 607.371 501.152 606.488 cv
499.748 608.486 li
500.882 609.621 502.538 610.394 504.861 610.394 cv
508.084 610.394 509.668 608.738 509.668 606.542 cv
509.668 602.058 502.772 603.337 502.772 601.447 cv
cp
.0980392 .0941176 .0941176 rgb
f
511.375 610.179 mo
519.873 610.179 li
519.873 607.929 li
513.932 607.929 li
513.932 605.191 li
519.748 605.191 li
519.748 602.941 li
513.932 602.941 li
513.932 600.419 li
519.873 600.419 li
519.873 598.169 li
511.375 598.169 li
511.375 610.179 li
cp
f
527.576 608.126 mo
525.344 608.126 523.922 606.416 523.922 604.183 cv
523.922 601.933 525.344 600.24 527.576 600.24 cv
529.791 600.24 531.213 601.933 531.213 604.183 cv
531.213 606.416 529.791 608.126 527.576 608.126 cv
cp
527.576 597.972 mo
523.939 597.972 521.293 600.564 521.293 604.183 cv
521.293 607.802 523.939 610.394 527.576 610.394 cv
531.195 610.394 533.842 607.802 533.842 604.183 cv
533.842 600.564 531.195 597.972 527.576 597.972 cv
cp
f
454.521 471.668 mo
468.751 492.046 491.916 504.165 516.795 504.165 cv
541.671 504.165 564.835 492.046 579.069 471.668 cv
564.835 451.292 541.67 439.174 516.795 439.174 cv
491.917 439.174 468.751 451.292 454.521 471.668 cv
cp
516.795 508.665 mo
489.906 508.665 464.908 495.302 449.926 472.92 cv
449.088 471.668 li
449.926 470.417 li
464.909 448.036 489.907 434.674 516.795 434.674 cv
543.68 434.674 568.678 448.036 583.664 470.417 cv
584.503 471.668 li
583.664 472.92 li
568.678 495.302 543.68 508.665 516.795 508.665 cv
cp
.095291 .095291 .095291 rgb
f
516.797 451.559 mo
505.708 451.559 496.686 460.582 496.686 471.672 cv
496.686 482.761 505.708 491.782 516.797 491.782 cv
527.884 491.782 536.904 482.76 536.904 471.67 cv
536.904 460.581 527.884 451.559 516.797 451.559 cv
cp
516.797 496.282 mo
503.226 496.282 492.186 485.242 492.186 471.672 cv
492.186 458.101 503.226 447.059 516.797 447.059 cv
530.365 447.059 541.404 458.1 541.404 471.67 cv
541.404 485.241 530.365 496.282 516.797 496.282 cv
cp
f
516.796 467.68 mo
514.595 467.68 512.805 469.47 512.805 471.67 cv
512.805 473.871 514.595 475.661 516.796 475.661 cv
518.995 475.661 520.785 473.871 520.785 471.67 cv
520.785 469.47 518.995 467.68 516.796 467.68 cv
cp
516.796 480.161 mo
512.114 480.161 508.305 476.352 508.305 471.67 cv
508.305 466.989 512.114 463.18 516.796 463.18 cv
521.477 463.18 525.285 466.989 525.285 471.67 cv
525.285 476.352 521.477 480.161 516.796 480.161 cv
cp
f
504.745 471.671 mo
500.245 471.67 li
500.246 467.254 501.965 463.101 505.086 459.976 cv
508.271 463.155 li
505.998 465.431 504.746 468.456 504.745 471.671 cv
cp
f
516.797 439.174 mo
498.879 439.174 484.301 453.753 484.301 471.672 cv
484.301 489.59 498.879 504.167 516.797 504.167 cv
534.713 504.167 549.289 489.589 549.289 471.67 cv
549.289 453.752 534.713 439.174 516.797 439.174 cv
cp
516.797 508.667 mo
496.397 508.667 479.801 492.071 479.801 471.672 cv
479.801 451.271 496.397 434.674 516.797 434.674 cv
537.194 434.674 553.789 451.271 553.789 471.67 cv
553.789 492.07 537.194 508.667 516.797 508.667 cv
cp
f
519.047 518.137 mo
514.547 518.137 li
514.547 506.417 li
519.047 506.417 li
519.047 518.137 li
cp
f
512.099 520.387 mo
512.099 549.479 li
512.098 550.734 512.586 551.913 513.474 552.8 cv
514.362 553.689 515.542 554.178 516.797 554.178 cv
518.049 554.178 519.229 553.688 520.119 552.799 cv
521.005 551.913 521.495 550.733 521.496 549.476 cv
521.496 520.387 li
512.099 520.387 li
cp
516.797 558.678 mo
514.338 558.678 512.028 557.72 510.291 555.981 cv
508.553 554.244 507.596 551.933 507.599 549.476 cv
507.599 515.887 li
525.996 515.887 li
525.996 549.479 li
525.993 551.938 525.036 554.247 523.3 555.982 cv
521.559 557.721 519.249 558.678 516.797 558.678 cv
cp
f
866.689 600.42 mo
870.201 600.42 li
870.201 610.179 li
872.775 610.179 li
872.775 600.42 li
876.268 600.42 li
876.268 598.169 li
866.689 598.169 li
866.689 600.42 li
cp
.0980392 .0941176 .0941176 rgb
f
883.16 603.661 mo
880.46 603.661 li
880.46 600.42 li
883.16 600.42 li
884.169 600.42 884.943 601.032 884.943 602.023 cv
884.943 603.049 884.169 603.661 883.16 603.661 cv
cp
887.572 602.042 mo
887.572 599.808 886.023 598.169 883.521 598.169 cv
877.903 598.169 li
877.903 610.179 li
880.46 610.179 li
880.46 605.913 li
882.332 605.913 li
884.691 610.179 li
887.645 610.179 li
884.926 605.606 li
886.222 605.299 887.572 604.147 887.572 602.042 cv
cp
f
892.574 605.894 mo
894.446 600.727 li
896.318 605.894 li
892.574 605.894 li
cp
892.844 598.169 mo
888.217 610.179 li
891.115 610.179 li
891.871 608.145 li
897.021 608.145 li
897.777 610.179 li
900.676 610.179 li
896.049 598.169 li
892.844 598.169 li
cp
f
901.789 610.179 mo
904.346 610.179 li
904.346 605.192 li
910.162 605.192 li
910.162 602.941 li
904.346 602.941 li
904.346 600.42 li
910.287 600.42 li
910.287 598.169 li
901.789 598.169 li
901.789 610.179 li
cp
f
912.066 610.179 mo
914.623 610.179 li
914.623 605.192 li
920.439 605.192 li
920.439 602.941 li
914.623 602.941 li
914.623 600.42 li
920.565 600.42 li
920.565 598.169 li
912.066 598.169 li
912.066 610.179 li
cp
f
922.345 610.179 mo
924.901 610.179 li
924.901 598.169 li
922.345 598.169 li
922.345 610.179 li
cp
f
933.109 600.241 mo
934.334 600.241 935.414 601.014 935.919 601.987 cv
938.115 600.907 li
937.27 599.394 935.738 597.971 933.109 597.971 cv
929.49 597.971 926.7 600.474 926.7 604.184 cv
926.7 607.875 929.49 610.395 933.109 610.395 cv
935.738 610.395 937.27 608.937 938.115 607.442 cv
935.919 606.379 li
935.414 607.352 934.334 608.126 933.109 608.126 cv
930.914 608.126 929.328 606.452 929.328 604.184 cv
929.328 601.915 930.914 600.241 933.109 600.241 cv
cp
f
950.102 600.241 mo
951.326 600.241 952.406 601.014 952.91 601.987 cv
955.107 600.907 li
954.261 599.394 952.73 597.971 950.102 597.971 cv
946.482 597.971 943.691 600.474 943.691 604.184 cv
943.691 607.875 946.482 610.395 950.102 610.395 cv
952.73 610.395 954.261 608.937 955.107 607.442 cv
952.91 606.379 li
952.406 607.352 951.326 608.126 950.102 608.126 cv
947.904 608.126 946.32 606.452 946.32 604.184 cv
946.32 601.915 947.904 600.241 950.102 600.241 cv
cp
f
962.342 608.126 mo
960.109 608.126 958.686 606.417 958.686 604.184 cv
958.686 601.932 960.109 600.241 962.342 600.241 cv
964.557 600.241 965.979 601.932 965.979 604.184 cv
965.979 606.417 964.557 608.126 962.342 608.126 cv
cp
962.342 597.971 mo
958.704 597.971 956.058 600.565 956.058 604.184 cv
956.058 607.803 958.704 610.395 962.342 610.395 cv
965.961 610.395 968.607 607.803 968.607 604.184 cv
968.607 600.565 965.961 597.971 962.342 597.971 cv
cp
f
978.596 605.713 mo
973.033 598.169 li
970.404 598.169 li
970.404 610.179 li
972.961 610.179 li
972.961 602.346 li
978.686 610.179 li
981.152 610.179 li
981.152 598.169 li
978.596 598.169 li
978.596 605.713 li
cp
f
982.787 600.42 mo
986.299 600.42 li
986.299 610.179 li
988.873 610.179 li
988.873 600.42 li
992.365 600.42 li
992.365 598.169 li
982.787 598.169 li
982.787 600.42 li
cp
f
999.258 603.661 mo
996.558 603.661 li
996.558 600.42 li
999.258 600.42 li
1000.27 600.42 1001.04 601.032 1001.04 602.023 cv
1001.04 603.049 1000.27 603.661 999.258 603.661 cv
cp
1003.67 602.042 mo
1003.67 599.808 1002.12 598.169 999.619 598.169 cv
994.001 598.169 li
994.001 610.179 li
996.558 610.179 li
996.558 605.913 li
998.43 605.913 li
1000.79 610.179 li
1003.74 610.179 li
1001.02 605.606 li
1002.32 605.299 1003.67 604.147 1003.67 602.042 cv
cp
f
1011.28 608.126 mo
1009.05 608.126 1007.63 606.417 1007.63 604.184 cv
1007.63 601.932 1009.05 600.241 1011.28 600.241 cv
1013.5 600.241 1014.92 601.932 1014.92 604.184 cv
1014.92 606.417 1013.5 608.126 1011.28 608.126 cv
cp
1011.28 597.971 mo
1007.64 597.971 1005 600.565 1005 604.184 cv
1005 607.803 1007.64 610.395 1011.28 610.395 cv
1014.9 610.395 1017.55 607.803 1017.55 604.184 cv
1017.55 600.565 1014.9 597.971 1011.28 597.971 cv
cp
f
1021.81 607.928 mo
1021.81 598.169 li
1019.24 598.169 li
1019.24 610.179 li
1026.89 610.179 li
1026.89 607.928 li
1021.81 607.928 li
cp
f
946.789 445.415 mo
942.417 445.415 938.859 448.972 938.859 453.344 cv
938.859 457.717 942.417 461.274 946.789 461.274 cv
951.161 461.274 954.719 457.717 954.719 453.344 cv
954.719 448.972 951.161 445.415 946.789 445.415 cv
cp
946.789 465.774 mo
939.936 465.774 934.359 460.198 934.359 453.344 cv
934.359 446.491 939.936 440.915 946.789 440.915 cv
953.643 440.915 959.219 446.491 959.219 453.344 cv
959.219 460.198 953.643 465.774 946.789 465.774 cv
cp
f
946.789 475.913 mo
942.417 475.913 938.859 479.47 938.859 483.842 cv
938.859 488.215 942.417 491.772 946.789 491.772 cv
951.161 491.772 954.719 488.215 954.719 483.842 cv
954.719 479.47 951.161 475.913 946.789 475.913 cv
cp
946.789 496.272 mo
939.936 496.272 934.359 490.696 934.359 483.842 cv
934.359 476.989 939.936 471.413 946.789 471.413 cv
953.643 471.413 959.219 476.989 959.219 483.842 cv
959.219 490.696 953.643 496.272 946.789 496.272 cv
cp
f
946.789 506.45 mo
942.417 506.45 938.859 510.007 938.859 514.379 cv
938.859 518.752 942.417 522.309 946.789 522.309 cv
951.161 522.309 954.719 518.752 954.719 514.379 cv
954.719 510.007 951.161 506.45 946.789 506.45 cv
cp
946.789 526.809 mo
939.936 526.809 934.359 521.233 934.359 514.379 cv
934.359 507.526 939.936 501.95 946.789 501.95 cv
953.643 501.95 959.219 507.526 959.219 514.379 cv
959.219 521.233 953.643 526.809 946.789 526.809 cv
cp
f
924.863 529.963 mo
968.715 529.963 li
968.715 437.76 li
924.863 437.76 li
924.863 529.963 li
cp
973.215 534.463 mo
920.363 534.463 li
920.363 433.26 li
973.215 433.26 li
973.215 534.463 li
cp
f
934.316 433.26 mo
959.262 433.26 li
959.262 428.926 li
934.316 428.926 li
934.316 433.26 li
cp
963.762 437.76 mo
929.816 437.76 li
929.816 424.426 li
963.762 424.426 li
963.762 437.76 li
cp
f
934.316 564.426 mo
959.262 564.426 li
959.262 560.092 li
934.316 560.092 li
934.316 564.426 li
cp
963.762 568.926 mo
929.816 568.926 li
929.816 555.592 li
963.762 555.592 li
963.762 568.926 li
cp
f
949.039 557.842 mo
944.539 557.842 li
944.539 532.213 li
949.039 532.213 li
949.039 557.842 li
cp
f
973.217 445.415 mo
973.217 456.052 li
980.263 445.415 li
973.217 445.415 li
cp
968.717 470.996 mo
968.717 440.915 li
988.64 440.915 li
968.717 470.996 li
cp
f
973.217 475.913 mo
973.217 486.55 li
980.263 475.913 li
973.217 475.913 li
cp
968.717 501.494 mo
968.717 471.413 li
988.64 471.413 li
968.717 501.494 li
cp
f
973.217 506.411 mo
973.217 517.047 li
980.262 506.411 li
973.217 506.411 li
cp
968.717 531.99 mo
968.717 501.911 li
988.641 501.911 li
968.717 531.99 li
cp
f
913.316 445.415 mo
920.365 456.054 li
920.365 445.415 li
913.316 445.415 li
cp
924.865 470.994 mo
904.938 440.915 li
924.865 440.915 li
924.865 470.994 li
cp
f
913.316 475.913 mo
920.365 486.552 li
920.365 475.913 li
913.316 475.913 li
cp
924.865 501.492 mo
904.938 471.413 li
924.865 471.413 li
924.865 501.492 li
cp
f
913.316 506.411 mo
920.365 517.049 li
920.365 506.411 li
913.316 506.411 li
cp
924.865 531.988 mo
904.938 501.911 li
924.865 501.911 li
924.865 531.988 li
cp
f
687.466 601.447 mo
687.466 600.727 688.077 600.258 689.158 600.258 cv
690.382 600.258 691.679 600.672 692.651 601.573 cv
694.073 599.665 li
692.886 598.566 691.301 597.99 689.392 597.99 cv
686.565 597.99 684.837 599.646 684.837 601.645 cv
684.837 606.165 691.751 604.706 691.751 606.794 cv
691.751 607.497 691.085 608.126 689.662 608.126 cv
688.006 608.126 686.691 607.371 685.845 606.489 cv
684.44 608.487 li
685.575 609.622 687.231 610.395 689.554 610.395 cv
692.777 610.395 694.362 608.739 694.362 606.542 cv
694.362 602.059 687.466 603.337 687.466 601.447 cv
cp
f
704.675 598.169 mo
695.097 598.169 li
695.097 600.42 li
698.607 600.42 li
698.607 610.179 li
701.183 610.179 li
701.183 600.42 li
704.675 600.42 li
704.675 598.169 li
cp
f
708.255 605.894 mo
710.128 600.727 li
712.001 605.894 li
708.255 605.894 li
cp
708.525 598.169 mo
703.898 610.179 li
706.797 610.179 li
707.554 608.145 li
712.702 608.145 li
713.459 610.179 li
716.358 610.179 li
711.73 598.169 li
708.525 598.169 li
cp
f
715.581 600.42 mo
719.092 600.42 li
719.092 610.179 li
721.667 610.179 li
721.667 600.42 li
725.159 600.42 li
725.159 598.169 li
715.581 598.169 li
715.581 600.42 li
cp
f
726.794 610.179 mo
729.351 610.179 li
729.351 598.169 li
726.794 598.169 li
726.794 610.179 li
cp
f
733.923 601.447 mo
733.923 600.727 734.534 600.258 735.615 600.258 cv
736.839 600.258 738.136 600.672 739.108 601.573 cv
740.53 599.665 li
739.343 598.566 737.758 597.99 735.849 597.99 cv
733.022 597.99 731.294 599.646 731.294 601.645 cv
731.294 606.165 738.208 604.706 738.208 606.794 cv
738.208 607.497 737.542 608.126 736.119 608.126 cv
734.463 608.126 733.148 607.371 732.302 606.489 cv
730.897 608.487 li
732.032 609.622 733.688 610.395 736.011 610.395 cv
739.234 610.395 740.819 608.739 740.819 606.542 cv
740.819 602.059 733.923 603.337 733.923 601.447 cv
cp
f
741.554 600.42 mo
745.064 600.42 li
745.064 610.179 li
747.64 610.179 li
747.64 600.42 li
751.132 600.42 li
751.132 598.169 li
741.554 598.169 li
741.554 600.42 li
cp
f
752.768 610.179 mo
755.324 610.179 li
755.324 598.169 li
752.768 598.169 li
752.768 610.179 li
cp
f
763.532 600.241 mo
764.757 600.241 765.837 601.014 766.342 601.987 cv
768.538 600.907 li
767.692 599.394 766.161 597.971 763.532 597.971 cv
759.913 597.971 757.123 600.474 757.123 604.184 cv
757.123 607.875 759.913 610.395 763.532 610.395 cv
766.161 610.395 767.692 608.937 768.538 607.442 cv
766.342 606.379 li
765.837 607.352 764.757 608.126 763.532 608.126 cv
761.336 608.126 759.752 606.452 759.752 604.184 cv
759.752 601.915 761.336 600.241 763.532 600.241 cv
cp
f
772.262 601.447 mo
772.262 600.727 772.874 600.258 773.954 600.258 cv
775.179 600.258 776.475 600.672 777.447 601.573 cv
778.87 599.665 li
777.681 598.566 776.097 597.99 774.188 597.99 cv
771.361 597.99 769.633 599.646 769.633 601.645 cv
769.633 606.165 776.547 604.706 776.547 606.794 cv
776.547 607.497 775.88 608.126 774.458 608.126 cv
772.802 608.126 771.487 607.371 770.642 606.489 cv
769.236 608.487 li
770.371 609.622 772.027 610.395 774.351 610.395 cv
777.573 610.395 779.157 608.739 779.157 606.542 cv
779.157 602.059 772.262 603.337 772.262 601.447 cv
cp
f
673.797 527.533 mo
789.804 527.533 li
789.804 456.863 li
789.804 456.396 789.618 455.952 789.282 455.613 cv
788.951 455.284 788.504 455.097 788.033 455.097 cv
675.564 455.097 li
675.093 455.097 674.653 455.279 674.327 455.609 cv
673.981 455.954 673.797 456.396 673.797 456.863 cv
673.797 527.533 li
cp
794.304 532.033 mo
669.297 532.033 li
669.297 456.863 li
669.297 455.193 669.95 453.621 671.138 452.435 cv
672.306 451.253 673.882 450.597 675.564 450.597 cv
788.033 450.597 li
789.702 450.597 791.276 451.249 792.465 452.432 cv
793.654 453.628 794.304 455.199 794.304 456.863 cv
794.304 532.033 li
cp
.095291 .095291 .095291 rgb
f
661.549 532.033 mo
661.549 535.144 li
661.549 535.979 661.871 536.76 662.457 537.344 cv
663.047 537.93 663.831 538.255 664.66 538.255 cv
798.937 538.255 li
799.768 538.255 800.552 537.931 801.144 537.342 cv
801.727 536.76 802.049 535.978 802.049 535.144 cv
802.049 532.033 li
661.549 532.033 li
cp
798.937 542.755 mo
664.66 542.755 li
662.636 542.755 660.726 541.966 659.282 540.534 cv
657.841 539.095 657.049 537.182 657.049 535.144 cv
657.049 527.533 li
806.549 527.533 li
806.549 535.144 li
806.549 537.181 805.758 539.093 804.32 540.529 cv
802.877 541.965 800.966 542.755 798.937 542.755 cv
cp
f
692.243 514.617 mo
686.714 514.617 li
686.714 509.871 li
692.243 509.871 li
692.243 514.617 li
cp
682.214 505.371 mo
682.214 519.117 li
696.743 519.117 li
696.743 505.371 li
682.214 505.371 li
cp
f
713.404 514.617 mo
707.875 514.617 li
707.875 499.406 li
713.404 499.406 li
713.404 514.617 li
cp
703.375 494.906 mo
703.375 519.117 li
717.904 519.117 li
717.904 494.906 li
703.375 494.906 li
cp
f
734.564 514.617 mo
729.035 514.617 li
729.035 488.941 li
734.564 488.941 li
734.564 514.617 li
cp
724.535 484.441 mo
724.535 519.117 li
739.064 519.117 li
739.064 484.441 li
724.535 484.441 li
cp
f
755.724 514.617 mo
750.194 514.617 li
750.194 478.476 li
755.724 478.476 li
755.724 514.617 li
cp
745.694 473.976 mo
745.694 519.117 li
760.224 519.117 li
760.224 473.976 li
745.694 473.976 li
cp
f
776.883 514.617 mo
771.354 514.617 li
771.354 468.012 li
776.883 468.012 li
776.883 514.617 li
cp
766.854 463.512 mo
766.854 519.117 li
781.383 519.117 li
781.383 463.512 li
766.854 463.512 li
cp
f
724.537 477.35 mo
682.216 477.35 li
682.216 472.85 li
724.537 472.85 li
724.537 477.35 li
cp
f
704.145 486.431 mo
682.216 486.431 li
682.216 481.931 li
704.145 481.931 li
704.145 486.431 li
cp
f
724.537 468.261 mo
682.216 468.261 li
682.216 463.761 li
724.537 463.761 li
724.537 468.261 li
cp
f
74.4492 813.162 mo
64.8711 813.162 li
64.8711 815.413 li
68.3818 815.413 li
68.3818 825.171 li
70.957 825.171 li
70.957 815.413 li
74.4492 815.413 li
74.4492 813.162 li
cp
.0980392 .0941176 .0941176 rgb
f
78.0293 820.886 mo
79.9023 815.719 li
81.7744 820.886 li
78.0293 820.886 li
cp
78.2998 813.162 mo
73.6729 825.171 li
76.5713 825.171 li
77.3271 823.137 li
82.4766 823.137 li
83.2334 825.171 li
86.1318 825.171 li
81.5049 813.162 li
78.2998 813.162 li
cp
f
91.8369 820.76 mo
95.0059 820.76 li
95.0059 822.201 li
94.5195 822.651 93.5293 823.119 92.4668 823.119 cv
90.2705 823.119 88.6855 821.444 88.6855 819.176 cv
88.6855 816.907 90.2705 815.233 92.4668 815.233 cv
93.7275 815.233 94.7529 815.953 95.3115 816.799 cv
97.418 815.647 li
96.5176 814.224 94.9512 812.963 92.4668 812.963 cv
88.9375 812.963 86.0566 815.376 86.0566 819.176 cv
86.0566 822.957 88.9375 825.387 92.4668 825.387 cv
94.627 825.387 96.3379 824.505 97.5625 823.137 cv
97.5625 818.528 li
91.8369 818.528 li
91.8369 820.76 li
cp
f
101.79 816.439 mo
101.79 815.719 102.401 815.25 103.482 815.25 cv
104.706 815.25 106.003 815.665 106.976 816.565 cv
108.397 814.657 li
107.209 813.558 105.625 812.982 103.716 812.982 cv
100.89 812.982 99.1611 814.638 99.1611 816.637 cv
99.1611 821.157 106.075 819.698 106.075 821.787 cv
106.075 822.489 105.408 823.119 103.986 823.119 cv
102.33 823.119 101.016 822.363 100.169 821.481 cv
98.7646 823.479 li
99.8994 824.614 101.556 825.387 103.878 825.387 cv
107.102 825.387 108.686 823.731 108.686 821.534 cv
108.686 817.051 101.79 818.33 101.79 816.439 cv
cp
f
24.0283 766.291 mo
132.338 766.291 li
149.528 749.101 li
149.528 721.085 li
132.338 703.896 li
24.0283 703.896 li
24.0283 766.291 li
cp
134.203 770.791 mo
19.5283 770.791 li
19.5283 699.396 li
134.203 699.396 li
154.028 719.222 li
154.028 750.964 li
134.203 770.791 li
cp
.095291 .095291 .095291 rgb
f
133.271 731.992 mo
131.56 731.992 130.169 733.383 130.169 735.093 cv
130.169 736.803 131.56 738.195 133.271 738.195 cv
134.981 738.195 136.372 736.803 136.372 735.093 cv
136.372 733.383 134.981 731.992 133.271 731.992 cv
cp
133.271 742.695 mo
129.079 742.695 125.669 739.285 125.669 735.093 cv
125.669 730.902 129.079 727.492 133.271 727.492 cv
137.462 727.492 140.872 730.902 140.872 735.093 cv
140.872 739.285 137.462 742.695 133.271 742.695 cv
cp
f
32.9478 757.371 mo
114.743 757.371 li
114.743 712.814 li
32.9478 712.814 li
32.9478 757.371 li
cp
119.243 761.871 mo
28.4478 761.871 li
28.4478 708.314 li
119.243 708.314 li
119.243 761.871 li
cp
f
82.8823 747.529 mo
67.0532 747.529 li
65.8105 747.529 64.8032 746.521 64.8032 745.279 cv
64.8032 724.908 li
64.8032 723.666 65.8105 722.658 67.0532 722.658 cv
82.8823 722.658 li
82.8823 727.158 li
69.3032 727.158 li
69.3032 743.029 li
82.8823 743.029 li
82.8823 747.529 li
cp
f
76.0952 737.343 mo
64.8032 737.343 li
64.8032 732.843 li
76.0952 732.843 li
76.0952 737.343 li
cp
f
95.2422 727.158 mo
94.48 727.158 93.7646 727.453 93.2285 727.989 cv
92.6895 728.53 92.3916 729.244 92.3916 729.998 cv
92.3916 740.183 li
92.3916 740.942 92.689 741.658 93.229 742.198 cv
93.7646 742.734 94.48 743.029 95.2422 743.029 cv
98.6338 743.029 li
99.3901 743.029 100.102 742.734 100.637 742.198 cv
101.181 741.661 101.475 740.948 101.475 740.183 cv
101.475 729.998 li
101.475 729.238 101.18 728.527 100.645 727.997 cv
100.102 727.453 99.3901 727.158 98.6338 727.158 cv
95.2422 727.158 li
cp
98.6338 747.529 mo
95.2422 747.529 li
93.2778 747.529 91.4326 746.765 90.0469 745.379 cv
88.6567 743.989 87.8916 742.144 87.8916 740.183 cv
87.8916 729.998 li
87.8916 728.043 88.6563 726.201 90.0449 724.809 cv
91.4326 723.421 93.2778 722.658 95.2422 722.658 cv
98.6338 722.658 li
100.593 722.658 102.435 723.421 103.82 724.807 cv
105.207 726.181 105.975 728.028 105.975 729.998 cv
105.975 740.183 li
105.975 742.16 105.207 744.008 103.811 745.388 cv
102.435 746.765 100.593 747.529 98.6338 747.529 cv
cp
f
52.4546 747.529 mo
49.0566 747.529 li
47.0952 747.529 45.252 746.766 43.8652 745.38 cv
42.4785 743.993 41.7153 742.147 41.7153 740.183 cv
46.2153 740.183 li
46.2153 740.946 46.5107 741.661 47.0474 742.198 cv
47.583 742.734 48.2969 743.029 49.0566 743.029 cv
52.4546 743.029 li
53.2134 743.029 53.9268 742.734 54.4629 742.198 cv
55.002 741.659 55.2988 740.943 55.2988 740.183 cv
55.2988 739.428 55.0015 738.714 54.4614 738.173 cv
53.9263 737.639 53.2124 737.343 52.4546 737.343 cv
49.0566 737.343 li
47.0952 737.343 45.252 736.581 43.8652 735.195 cv
42.4785 733.807 41.7153 731.961 41.7153 729.998 cv
41.7153 728.04 42.478 726.198 43.8633 724.809 cv
45.252 723.42 47.0952 722.658 49.0566 722.658 cv
52.4546 722.658 li
54.4155 722.658 56.2588 723.421 57.6445 724.807 cv
59.0342 726.199 59.7988 728.042 59.7988 729.998 cv
55.2988 729.998 li
55.2988 729.243 55.0015 728.529 54.4614 727.988 cv
53.9268 727.453 53.2134 727.158 52.4546 727.158 cv
49.0566 727.158 li
48.2969 727.158 47.583 727.453 47.0469 727.99 cv
46.5112 728.526 46.2153 729.24 46.2153 729.998 cv
46.2153 730.76 46.5107 731.475 47.0474 732.012 cv
47.583 732.548 48.2969 732.843 49.0566 732.843 cv
52.4546 732.843 li
54.4126 732.843 56.2554 733.606 57.6431 734.991 cv
59.0342 736.384 59.7988 738.227 59.7988 740.183 cv
59.7988 742.146 59.0337 743.992 57.6445 745.38 cv
56.2588 746.765 54.4155 747.529 52.4546 747.529 cv
cp
f
135.521 729.742 mo
131.021 729.742 li
131.021 701.646 li
131.021 699.259 131.95 697.014 133.638 695.325 cv
135.327 693.636 137.572 692.707 139.96 692.707 cv
145.089 692.707 li
146.274 692.707 147.389 692.245 148.229 691.406 cv
149.066 690.568 149.528 689.453 149.528 688.267 cv
149.528 687.082 149.066 685.966 148.228 685.127 cv
147.39 684.29 146.275 683.828 145.089 683.828 cv
103.623 683.828 li
101.236 683.828 98.9917 682.898 97.3018 681.21 cv
95.6123 679.52 94.6826 677.275 94.6826 674.888 cv
94.6826 672.501 95.6123 670.256 97.2998 668.567 cv
98.9902 666.877 101.235 665.947 103.623 665.947 cv
126.581 665.947 li
127.767 665.947 128.882 665.485 129.721 664.647 cv
130.559 663.809 131.021 662.694 131.021 661.507 cv
131.021 654.818 li
135.521 654.818 li
135.521 661.507 li
135.521 663.897 134.59 666.142 132.902 667.83 cv
131.214 669.517 128.969 670.447 126.581 670.447 cv
103.623 670.447 li
102.438 670.447 101.322 670.909 100.482 671.749 cv
99.6445 672.587 99.1826 673.703 99.1826 674.888 cv
99.1826 676.074 99.6445 677.189 100.483 678.028 cv
101.322 678.866 102.438 679.328 103.623 679.328 cv
145.089 679.328 li
147.477 679.328 149.722 680.257 151.41 681.946 cv
153.099 683.635 154.028 685.88 154.028 688.267 cv
154.028 690.654 153.099 692.899 151.411 694.588 cv
149.719 696.277 147.475 697.207 145.089 697.207 cv
139.96 697.207 li
138.774 697.207 137.659 697.668 136.82 698.506 cv
135.982 699.345 135.521 700.46 135.521 701.646 cv
135.521 729.742 li
cp
f
261.932 821.849 mo
259.663 813.17 li
257.664 813.17 li
255.377 821.849 li
253.271 813.17 li
250.408 813.17 li
253.847 825.18 li
256.565 825.18 li
258.654 816.934 li
260.761 825.18 li
263.479 825.18 li
266.9 813.17 li
264.038 813.17 li
261.932 821.849 li
cp
.0980392 .0941176 .0941176 rgb
f
268.103 825.18 mo
270.659 825.18 li
270.659 813.17 li
268.103 813.17 li
268.103 825.18 li
cp
f
278.291 818.663 mo
275.591 818.663 li
275.591 815.421 li
278.291 815.421 li
279.3 815.421 280.074 816.034 280.074 817.024 cv
280.074 818.05 279.3 818.663 278.291 818.663 cv
cp
282.703 817.042 mo
282.703 814.809 281.154 813.17 278.651 813.17 cv
273.034 813.17 li
273.034 825.18 li
275.591 825.18 li
275.591 820.913 li
277.463 820.913 li
279.822 825.18 li
282.774 825.18 li
280.056 820.607 li
281.353 820.301 282.703 819.149 282.703 817.042 cv
cp
f
284.607 825.18 mo
293.106 825.18 li
293.106 822.93 li
287.164 822.93 li
287.164 820.193 li
292.98 820.193 li
292.98 817.942 li
287.164 817.942 li
287.164 815.421 li
293.106 815.421 li
293.106 813.17 li
284.607 813.17 li
284.607 825.18 li
cp
f
295.102 825.18 mo
297.658 825.18 li
297.658 820.193 li
303.474 820.193 li
303.474 817.942 li
297.658 817.942 li
297.658 815.421 li
303.6 815.421 li
303.6 813.17 li
295.102 813.17 li
295.102 825.18 li
cp
f
310.637 818.663 mo
307.936 818.663 li
307.936 815.421 li
310.637 815.421 li
311.645 815.421 312.419 816.034 312.419 817.024 cv
312.419 818.05 311.645 818.663 310.637 818.663 cv
cp
315.048 817.042 mo
315.048 814.809 313.499 813.17 310.997 813.17 cv
305.379 813.17 li
305.379 825.18 li
307.936 825.18 li
307.936 820.913 li
309.809 820.913 li
312.167 825.18 li
315.12 825.18 li
312.401 820.607 li
313.697 820.301 315.048 819.149 315.048 817.042 cv
cp
f
320.05 820.895 mo
321.922 815.727 li
323.795 820.895 li
320.05 820.895 li
cp
320.319 813.17 mo
315.692 825.18 li
318.591 825.18 li
319.348 823.145 li
324.497 823.145 li
325.253 825.18 li
328.152 825.18 li
323.524 813.17 li
320.319 813.17 li
cp
f
335.765 820.678 mo
332.848 813.17 li
329.265 813.17 li
329.265 825.18 li
331.821 825.18 li
331.821 816.52 li
335.206 825.18 li
336.323 825.18 li
339.708 816.52 li
339.708 825.18 li
342.282 825.18 li
342.282 813.17 li
338.682 813.17 li
335.765 820.678 li
cp
f
353.153 815.421 mo
353.153 813.17 li
344.655 813.17 li
344.655 825.18 li
353.153 825.18 li
353.153 822.93 li
347.212 822.93 li
347.212 820.193 li
353.027 820.193 li
353.027 817.942 li
347.212 817.942 li
347.212 815.421 li
353.153 815.421 li
cp
f
244.031 764.262 mo
359.531 764.262 li
359.531 674.096 li
244.031 674.096 li
244.031 764.262 li
cp
364.031 768.762 mo
239.531 768.762 li
239.531 669.596 li
364.031 669.596 li
364.031 768.762 li
cp
.095291 .095291 .095291 rgb
f
304.031 730.911 mo
299.531 730.911 li
299.531 717.448 li
304.031 717.448 li
304.031 730.911 li
cp
f
290.98 743.961 mo
277.382 743.961 li
277.382 739.461 li
290.98 739.461 li
290.98 743.961 li
cp
f
326.179 743.961 mo
312.582 743.961 li
312.582 739.461 li
326.179 739.461 li
326.179 743.961 li
cp
f
281.632 715.198 mo
321.929 715.198 li
321.929 688.096 li
281.632 688.096 li
281.632 715.198 li
cp
326.429 719.698 mo
277.132 719.698 li
277.132 683.596 li
326.429 683.596 li
326.429 719.698 li
cp
f
293.23 750.262 mo
310.332 750.262 li
310.332 733.161 li
293.23 733.161 li
293.23 750.262 li
cp
314.832 754.762 mo
288.73 754.762 li
288.73 728.661 li
314.832 728.661 li
314.832 754.762 li
cp
f
258.031 750.262 mo
275.132 750.262 li
275.132 733.161 li
258.031 733.161 li
258.031 750.262 li
cp
279.632 754.762 mo
253.531 754.762 li
253.531 728.661 li
279.632 728.661 li
279.632 754.762 li
cp
f
328.429 750.262 mo
345.531 750.262 li
345.531 733.161 li
328.429 733.161 li
328.429 750.262 li
cp
350.031 754.762 mo
323.929 754.762 li
323.929 728.661 li
350.031 728.661 li
350.031 754.762 li
cp
f
341.98 743.961 mo
331.98 743.961 li
331.98 739.461 li
341.98 739.461 li
341.98 743.961 li
cp
f
271.582 743.961 mo
261.582 743.961 li
261.582 739.461 li
271.582 739.461 li
271.582 743.961 li
cp
f
306.781 743.961 mo
296.781 743.961 li
296.781 739.461 li
306.781 739.461 li
306.781 743.961 li
cp
f
312.582 708.897 mo
290.98 708.897 li
290.98 704.397 li
312.582 704.397 li
312.582 708.897 li
cp
f
312.582 698.897 mo
290.98 698.897 li
290.98 694.397 li
312.582 694.397 li
312.582 698.897 li
cp
f
244.031 669.596 mo
359.531 669.596 li
359.531 659.096 li
244.031 659.096 li
244.031 669.596 li
cp
364.031 674.096 mo
239.531 674.096 li
239.531 654.596 li
364.031 654.596 li
364.031 674.096 li
cp
f
257.031 666.596 mo
252.531 666.596 li
252.531 662.096 li
257.031 662.096 li
257.031 666.596 li
cp
f
266.031 666.596 mo
261.531 666.596 li
261.531 662.096 li
266.031 662.096 li
266.031 666.596 li
cp
f
275.031 666.596 mo
270.531 666.596 li
270.531 662.096 li
275.031 662.096 li
275.031 666.596 li
cp
f
489.398 820.895 mo
491.271 815.728 li
493.144 820.895 li
489.398 820.895 li
cp
489.668 813.17 mo
485.041 825.18 li
487.939 825.18 li
488.696 823.146 li
493.846 823.146 li
494.602 825.18 li
497.501 825.18 li
492.873 813.17 li
489.668 813.17 li
cp
.0980392 .0941176 .0941176 rgb
f
510.281 813.17 mo
508.175 821.85 li
505.906 813.17 li
503.907 813.17 li
501.62 821.85 li
499.514 813.17 li
496.651 813.17 li
500.09 825.18 li
502.809 825.18 li
504.897 816.934 li
507.004 825.18 li
509.723 825.18 li
513.144 813.17 li
510.281 813.17 li
cp
f
516.65 820.895 mo
518.523 815.728 li
520.396 820.895 li
516.65 820.895 li
cp
516.921 813.17 mo
512.293 825.18 li
515.192 825.18 li
515.948 823.146 li
521.098 823.146 li
521.854 825.18 li
524.753 825.18 li
520.126 813.17 li
516.921 813.17 li
cp
f
531.123 818.663 mo
528.423 818.663 li
528.423 815.422 li
531.123 815.422 li
532.132 815.422 532.905 816.034 532.905 817.024 cv
532.905 818.051 532.132 818.663 531.123 818.663 cv
cp
535.534 817.042 mo
535.534 814.809 533.985 813.17 531.483 813.17 cv
525.866 813.17 li
525.866 825.18 li
528.423 825.18 li
528.423 820.914 li
530.295 820.914 li
532.653 825.18 li
535.606 825.18 li
532.888 820.608 li
534.185 820.301 535.534 819.149 535.534 817.042 cv
cp
f
542.175 822.93 mo
539.996 822.93 li
539.996 815.422 li
542.192 815.422 li
544.642 815.422 545.938 817.06 545.938 819.167 cv
545.938 821.219 544.552 822.93 542.175 822.93 cv
cp
542.175 813.17 mo
537.439 813.17 li
537.439 825.18 li
542.192 825.18 li
545.938 825.18 548.549 822.803 548.549 819.167 cv
548.549 815.566 545.938 813.17 542.175 813.17 cv
cp
f
539.223 782.549 mo
525.276 753.309 li
529.339 751.372 li
538.609 770.809 li
543.615 756.682 li
557.738 761.684 li
548.675 742.68 li
552.737 740.743 li
566.477 769.553 li
546.354 762.426 li
539.223 782.549 li
cp
.095291 .095291 .095291 rgb
f
494.368 782.549 mo
487.237 762.426 li
467.114 769.553 li
480.854 740.743 li
484.916 742.68 li
475.853 761.684 li
489.976 756.682 li
494.982 770.809 li
504.252 751.372 li
508.314 753.309 li
494.368 782.549 li
cp
f
516.795 669.537 mo
501.218 669.537 488.545 682.209 488.545 697.787 cv
488.545 713.364 501.218 726.037 516.795 726.037 cv
532.372 726.037 545.045 713.364 545.045 697.787 cv
545.045 682.209 532.372 669.537 516.795 669.537 cv
cp
516.795 730.537 mo
498.737 730.537 484.045 715.845 484.045 697.787 cv
484.045 679.728 498.737 665.037 516.795 665.037 cv
534.854 665.037 549.545 679.728 549.545 697.787 cv
549.545 715.845 534.854 730.537 516.795 730.537 cv
cp
f
516.795 705.122 mo
523.556 708.674 li
522.267 701.147 li
527.733 695.819 li
520.176 694.72 li
516.796 687.872 li
513.417 694.72 li
505.859 695.819 li
511.325 701.148 li
510.036 708.674 li
516.795 705.122 li
cp
504.061 716.899 mo
506.49 702.718 li
496.189 692.676 li
510.428 690.607 li
516.795 677.702 li
523.164 690.607 li
537.403 692.676 li
527.101 702.719 li
529.53 716.899 li
516.795 710.206 li
504.061 716.899 li
cp
f
508.333 737.039 mo
516.8 745.68 li
525.261 737.039 li
536.502 741.491 li
540.717 730.156 li
552.808 729.652 li
552.05 717.582 li
562.885 712.197 li
557.278 701.481 li
564.988 692.16 li
555.509 684.642 li
558.764 672.998 li
547.047 669.986 li
545.281 658.018 li
533.354 660.042 li
526.867 649.826 li
516.801 656.522 li
506.724 649.826 li
500.244 660.042 li
488.312 658.018 li
486.548 669.986 li
474.83 672.998 li
478.086 684.642 li
468.604 692.16 li
476.318 701.481 li
470.713 712.197 li
481.545 717.582 li
480.788 729.652 li
492.873 730.156 li
497.091 741.492 li
508.333 737.039 li
cp
516.801 752.112 mo
507.21 742.324 li
494.476 747.367 li
489.698 734.527 li
476.009 733.957 li
476.867 720.281 li
464.597 714.181 li
470.944 702.045 li
462.206 691.488 li
472.947 682.974 li
469.259 669.783 li
482.533 666.373 li
484.531 652.813 li
498.046 655.105 li
505.386 643.533 li
516.8 651.118 li
528.203 643.533 li
535.549 655.105 li
549.063 652.813 li
551.063 666.373 li
564.334 669.783 li
560.647 682.974 li
571.383 691.488 li
562.651 702.045 li
569.002 714.181 li
556.728 720.281 li
557.587 733.957 li
543.893 734.527 li
539.118 747.368 li
526.384 742.324 li
516.801 752.112 li
cp
f
635.627 820.67 mo
632.71 813.162 li
629.127 813.162 li
629.127 825.171 li
631.684 825.171 li
631.684 816.51 li
635.068 825.171 li
636.186 825.171 li
639.57 816.51 li
639.57 825.171 li
642.145 825.171 li
642.145 813.162 li
638.543 813.162 li
635.627 820.67 li
cp
.0980392 .0941176 .0941176 rgb
f
647.613 820.886 mo
649.486 815.719 li
651.359 820.886 li
647.613 820.886 li
cp
647.884 813.162 mo
643.257 825.171 li
646.155 825.171 li
646.912 823.137 li
652.061 823.137 li
652.817 825.171 li
655.717 825.171 li
651.089 813.162 li
647.884 813.162 li
cp
f
662.086 818.653 mo
659.386 818.653 li
659.386 815.413 li
662.086 815.413 li
663.095 815.413 663.869 816.025 663.869 817.015 cv
663.869 818.042 663.095 818.653 662.086 818.653 cv
cp
666.498 817.033 mo
666.498 814.8 664.949 813.162 662.447 813.162 cv
656.829 813.162 li
656.829 825.171 li
659.386 825.171 li
659.386 820.905 li
661.258 820.905 li
663.617 825.171 li
666.57 825.171 li
663.852 820.598 li
665.147 820.292 666.498 819.139 666.498 817.033 cv
cp
f
678.359 813.162 mo
675.209 813.162 li
670.959 818.509 li
670.959 813.162 li
668.402 813.162 li
668.402 825.171 li
670.959 825.171 li
670.959 821.481 li
671.896 820.346 li
675.533 825.171 li
678.684 825.171 li
673.588 818.797 li
678.359 813.162 li
cp
f
679.851 825.171 mo
688.35 825.171 li
688.35 822.92 li
682.407 822.92 li
682.407 820.184 li
688.223 820.184 li
688.223 817.933 li
682.407 817.933 li
682.407 815.413 li
688.35 815.413 li
688.35 813.162 li
679.851 813.162 li
679.851 825.171 li
cp
f
689.605 815.413 mo
693.117 815.413 li
693.117 825.171 li
695.691 825.171 li
695.691 815.413 li
699.185 815.413 li
699.185 813.162 li
689.605 813.162 li
689.605 815.413 li
cp
f
700.82 825.171 mo
703.377 825.171 li
703.377 813.162 li
700.82 813.162 li
700.82 825.171 li
cp
f
713.943 820.706 mo
708.38 813.162 li
705.752 813.162 li
705.752 825.171 li
708.309 825.171 li
708.309 817.338 li
714.033 825.171 li
716.5 825.171 li
716.5 813.162 li
713.943 813.162 li
713.943 820.706 li
cp
f
724.076 820.76 mo
727.246 820.76 li
727.246 822.201 li
726.76 822.651 725.77 823.119 724.707 823.119 cv
722.51 823.119 720.926 821.444 720.926 819.176 cv
720.926 816.907 722.51 815.233 724.707 815.233 cv
725.967 815.233 726.993 815.953 727.552 816.799 cv
729.658 815.647 li
728.758 814.224 727.191 812.963 724.707 812.963 cv
721.178 812.963 718.297 815.376 718.297 819.176 cv
718.297 822.957 721.178 825.387 724.707 825.387 cv
726.867 825.387 728.578 824.505 729.803 823.137 cv
729.803 818.528 li
724.076 818.528 li
724.076 820.76 li
cp
f
738.655 816.439 mo
738.655 815.719 739.268 815.25 740.348 815.25 cv
741.572 815.25 742.869 815.665 743.841 816.565 cv
745.264 814.657 li
744.075 813.558 742.49 812.982 740.582 812.982 cv
737.756 812.982 736.027 814.638 736.027 816.637 cv
736.027 821.157 742.941 819.698 742.941 821.787 cv
742.941 822.489 742.274 823.119 740.852 823.119 cv
739.195 823.119 737.881 822.363 737.035 821.481 cv
735.631 823.479 li
736.766 824.614 738.422 825.387 740.744 825.387 cv
743.967 825.387 745.552 823.731 745.552 821.534 cv
745.552 817.051 738.655 818.33 738.655 816.439 cv
cp
f
752.967 823.119 mo
750.734 823.119 749.312 821.409 749.312 819.176 cv
749.312 816.924 750.734 815.233 752.967 815.233 cv
755.182 815.233 756.604 816.924 756.604 819.176 cv
756.604 821.409 755.182 823.119 752.967 823.119 cv
cp
752.967 812.963 mo
749.329 812.963 746.683 815.557 746.683 819.176 cv
746.683 822.794 749.329 825.387 752.967 825.387 cv
756.586 825.387 759.232 822.794 759.232 819.176 cv
759.232 815.557 756.586 812.963 752.967 812.963 cv
cp
f
763.496 813.162 mo
760.921 813.162 li
760.921 825.171 li
768.572 825.171 li
768.572 822.92 li
763.496 822.92 li
763.496 813.162 li
cp
f
778.096 820.292 mo
778.096 821.966 777.141 823.119 775.287 823.119 cv
773.432 823.119 772.46 821.966 772.46 820.292 cv
772.46 813.162 li
769.867 813.162 li
769.867 820.364 li
769.867 823.334 771.632 825.387 775.287 825.387 cv
778.941 825.387 780.706 823.334 780.706 820.364 cv
780.706 813.162 li
778.096 813.162 li
778.096 820.292 li
cp
f
782.341 815.413 mo
785.852 815.413 li
785.852 825.171 li
788.427 825.171 li
788.427 815.413 li
791.92 815.413 li
791.92 813.162 li
782.341 813.162 li
782.341 815.413 li
cp
f
793.555 825.171 mo
796.111 825.171 li
796.111 813.162 li
793.555 813.162 li
793.555 825.171 li
cp
f
804.193 823.119 mo
801.961 823.119 800.539 821.409 800.539 819.176 cv
800.539 816.924 801.961 815.233 804.193 815.233 cv
806.408 815.233 807.831 816.924 807.831 819.176 cv
807.831 821.409 806.408 823.119 804.193 823.119 cv
cp
804.193 812.963 mo
800.557 812.963 797.91 815.557 797.91 819.176 cv
797.91 822.794 800.557 825.387 804.193 825.387 cv
807.813 825.387 810.46 822.794 810.46 819.176 cv
810.46 815.557 807.813 812.963 804.193 812.963 cv
cp
f
820.449 820.706 mo
814.885 813.162 li
812.256 813.162 li
812.256 825.171 li
814.813 825.171 li
814.813 817.338 li
820.539 825.171 li
823.006 825.171 li
823.006 813.162 li
820.449 813.162 li
820.449 820.706 li
cp
f
827.574 816.439 mo
827.574 815.719 828.187 815.25 829.268 815.25 cv
830.491 815.25 831.787 815.665 832.76 816.565 cv
834.183 814.657 li
832.994 813.558 831.41 812.982 829.501 812.982 cv
826.674 812.982 824.945 814.638 824.945 816.637 cv
824.945 821.157 831.859 819.698 831.859 821.787 cv
831.859 822.489 831.193 823.119 829.771 823.119 cv
828.115 823.119 826.801 822.363 825.954 821.481 cv
824.55 823.479 li
825.684 824.614 827.34 825.387 829.663 825.387 cv
832.887 825.387 834.471 823.731 834.471 821.534 cv
834.471 817.051 827.574 818.33 827.574 816.439 cv
cp
f
752.465 771.759 mo
747.965 771.759 li
747.965 751.917 li
752.465 751.917 li
752.465 771.759 li
cp
.095291 .095291 .095291 rgb
f
715.637 771.759 mo
711.137 771.759 li
711.137 751.917 li
715.637 751.917 li
715.637 771.759 li
cp
f
756.602 754.167 mo
706.994 754.167 li
706.994 749.667 li
756.602 749.667 li
756.602 754.167 li
cp
f
756.602 764.087 mo
706.994 764.087 li
706.994 759.587 li
756.602 759.587 li
756.602 764.087 li
cp
f
756.602 774.009 mo
706.994 774.009 li
706.994 769.509 li
756.602 769.509 li
756.602 774.009 li
cp
f
742.826 783.929 mo
720.775 783.929 li
720.775 779.429 li
742.826 779.429 li
742.826 783.929 li
cp
f
715.563 749.667 mo
748.026 749.667 li
748.617 739.547 753.17 729.976 760.721 723.129 cv
761.18 722.711 761.645 722.292 762.104 721.905 cv
771.347 713.457 776.686 701.375 776.686 688.816 cv
776.686 664.065 756.55 643.929 731.799 643.929 cv
707.048 643.929 686.912 664.065 686.912 688.816 cv
686.912 701.361 692.234 713.428 701.515 721.93 cv
701.852 722.211 702.192 722.51 702.538 722.814 cv
702.866 723.101 li
710.431 729.996 714.973 739.566 715.563 749.667 cv
cp
752.461 754.167 mo
711.129 754.167 li
711.129 751.917 li
711.129 742.259 707.025 732.98 699.871 726.459 cv
699.57 726.197 li
699.24 725.907 698.915 725.622 698.594 725.354 cv
698.516 725.286 li
688.281 715.931 682.412 702.638 682.412 688.816 cv
682.412 661.584 704.567 639.429 731.799 639.429 cv
759.03 639.429 781.186 661.584 781.186 688.816 cv
781.186 702.635 775.313 715.927 765.072 725.286 cv
764.59 725.696 764.168 726.077 763.748 726.459 cv
756.573 732.964 752.461 742.242 752.461 751.917 cv
752.461 754.167 li
cp
f
727.608 654.318 mo
727.071 649.849 li
728.625 649.663 730.215 649.568 731.797 649.568 cv
731.939 654.069 li
731.75 654.068 li
730.394 654.068 728.984 654.152 727.608 654.318 cv
cp
740.24 655.1 mo
738.888 654.763 737.501 654.504 736.12 654.334 cv
736.673 649.868 li
738.234 650.061 739.801 650.353 741.33 650.735 cv
740.24 655.1 li
cp
719.478 656.314 mo
717.884 652.105 li
719.361 651.545 720.885 651.073 722.411 650.698 cv
723.483 655.069 li
722.133 655.4 720.785 655.819 719.478 656.314 cv
cp
748.054 658.096 mo
746.823 657.443 745.539 656.859 744.238 656.36 cv
745.85 652.159 li
747.32 652.723 748.771 653.383 750.163 654.122 cv
748.054 658.096 li
cp
712.065 660.21 mo
709.507 656.507 li
710.807 655.61 712.171 654.784 713.561 654.053 cv
715.654 658.038 li
714.424 658.684 713.217 659.415 712.065 660.21 cv
cp
754.924 662.881 mo
753.88 661.95 752.772 661.075 751.632 660.281 cv
754.202 656.587 li
755.491 657.485 756.741 658.472 757.92 659.522 cv
754.924 662.881 li
cp
705.797 665.764 mo
702.43 662.778 li
703.476 661.599 704.603 660.473 705.779 659.43 cv
708.764 662.797 li
707.722 663.721 706.723 664.719 705.797 665.764 cv
cp
760.461 669.167 mo
759.672 668.017 758.804 666.904 757.881 665.857 cv
761.258 662.882 li
762.299 664.064 763.279 665.321 764.17 666.618 cv
760.461 669.167 li
cp
701.033 672.648 mo
697.051 670.55 li
697.784 669.159 698.61 667.796 699.506 666.501 cv
703.207 669.062 li
702.413 670.208 701.682 671.415 701.033 672.648 cv
cp
764.338 676.59 mo
763.848 675.29 763.271 674 762.624 672.761 cv
766.614 670.679 li
767.345 672.08 767.996 673.535 768.549 675.006 cv
764.338 676.59 li
cp
698.057 680.47 mo
693.688 679.392 li
694.065 677.86 694.541 676.338 695.101 674.868 cv
699.306 676.469 li
698.812 677.769 698.391 679.115 698.057 680.47 cv
cp
766.312 684.724 mo
766.149 683.341 765.9 681.953 765.572 680.598 cv
769.945 679.538 li
770.316 681.069 770.598 682.638 770.78 684.201 cv
766.312 684.724 li
cp
697.05 688.782 mo
692.55 688.78 li
692.551 687.203 692.647 685.613 692.836 684.053 cv
697.303 684.594 li
697.136 685.975 697.051 687.384 697.05 688.782 cv
cp
770.754 693.65 mo
766.287 693.101 li
766.457 691.719 766.545 690.31 766.549 688.913 cv
771.049 688.924 li
771.045 690.501 770.945 692.091 770.754 693.65 cv
cp
693.67 698.166 mo
693.297 696.64 693.013 695.072 692.826 693.502 cv
697.295 692.971 li
697.46 694.36 697.711 695.748 698.041 697.095 cv
693.67 698.166 li
cp
768.47 702.832 mo
764.267 701.222 li
764.765 699.923 765.188 698.578 765.524 697.224 cv
769.892 698.31 li
769.511 699.841 769.032 701.363 768.47 702.832 cv
cp
697.02 707.019 mo
696.288 705.626 695.635 704.171 695.075 702.696 cv
699.284 701.102 li
699.778 702.408 700.357 703.695 701.004 704.927 cv
697.02 707.019 li
cp
764.048 711.19 mo
760.354 708.62 li
761.151 707.474 761.885 706.27 762.534 705.042 cv
766.513 707.145 li
765.778 708.534 764.949 709.895 764.048 711.19 cv
cp
702.388 714.804 mo
701.345 713.625 700.362 712.37 699.469 711.074 cv
703.172 708.519 li
703.964 709.667 704.834 710.778 705.759 711.824 cv
702.388 714.804 li
cp
757.76 718.249 mo
754.783 714.874 li
755.828 713.952 756.828 712.957 757.756 711.915 cv
761.117 714.907 li
760.069 716.083 758.94 717.208 757.76 718.249 cv
cp
709.453 721.085 mo
708.158 720.186 706.906 719.201 705.732 718.158 cv
708.723 714.794 li
709.762 715.719 710.871 716.591 712.02 717.388 cv
709.453 721.085 li
cp
749.97 723.609 mo
747.882 719.623 li
749.12 718.974 750.328 718.246 751.475 717.457 cv
754.027 721.162 li
752.732 722.054 751.367 722.877 749.97 723.609 cv
cp
717.817 725.499 mo
716.348 724.938 714.896 724.281 713.5 723.543 cv
715.602 719.564 li
716.836 720.216 718.121 720.798 719.421 721.293 cv
717.817 725.499 li
cp
741.112 726.949 mo
740.048 722.576 li
741.404 722.246 742.753 721.829 744.055 721.337 cv
745.643 725.548 li
744.171 726.103 742.646 726.575 741.112 726.949 cv
cp
726.999 727.771 mo
725.437 727.581 723.869 727.292 722.34 726.915 cv
723.42 722.545 li
724.774 722.88 726.161 723.136 727.542 723.304 cv
726.999 727.771 li
cp
731.797 728.062 mo
731.729 723.562 li
731.797 723.562 li
733.172 723.562 734.56 723.481 735.921 723.32 cv
736.448 727.789 li
734.913 727.97 733.348 728.062 731.797 728.062 cv
cp
f
731.8 671.437 mo
722.221 671.437 714.427 679.232 714.427 688.813 cv
714.427 698.395 722.221 706.191 731.8 706.191 cv
741.382 706.191 749.178 698.395 749.178 688.813 cv
749.178 679.232 741.382 671.437 731.8 671.437 cv
cp
731.8 710.691 mo
719.739 710.691 709.927 700.876 709.927 688.813 cv
709.927 676.75 719.739 666.937 731.8 666.937 cv
743.863 666.937 753.678 676.75 753.678 688.813 cv
753.678 700.876 743.863 710.691 731.8 710.691 cv
cp
f
731.8 683.794 mo
729.033 683.794 726.782 686.045 726.782 688.813 cv
726.782 691.583 729.033 693.835 731.8 693.835 cv
734.567 693.835 736.819 691.583 736.819 688.813 cv
736.819 686.045 734.567 683.794 731.8 683.794 cv
cp
731.8 698.335 mo
726.552 698.335 722.282 694.064 722.282 688.813 cv
722.282 683.564 726.552 679.294 731.8 679.294 cv
737.049 679.294 741.319 683.564 741.319 688.813 cv
741.319 694.064 737.049 698.335 731.8 698.335 cv
cp
f
734.05 669.187 mo
729.55 669.187 li
729.55 661.315 li
734.05 661.315 li
734.05 669.187 li
cp
f
720.036 672.942 mo
716.101 666.123 li
719.999 663.873 li
723.935 670.692 li
720.036 672.942 li
cp
f
713.679 680.954 mo
706.861 677.013 li
709.113 673.117 li
715.931 677.057 li
713.679 680.954 li
cp
f
712.177 691.063 mo
704.3 691.063 li
704.3 686.563 li
712.177 686.563 li
712.177 691.063 li
cp
f
709.113 704.513 mo
706.861 700.617 li
713.679 696.676 li
715.931 700.573 li
709.113 704.513 li
cp
f
719.998 713.755 mo
716.102 711.505 li
720.037 704.687 li
723.934 706.937 li
719.998 713.755 li
cp
f
734.05 716.313 mo
729.55 716.313 li
729.55 708.441 li
734.05 708.441 li
734.05 716.313 li
cp
f
743.602 713.756 mo
739.659 706.938 li
743.556 704.686 li
747.498 711.504 li
743.602 713.756 li
cp
f
754.492 704.511 mo
747.672 700.573 li
749.922 696.676 li
756.742 700.615 li
754.492 704.511 li
cp
f
759.3 691.063 mo
751.428 691.063 li
751.428 686.563 li
759.3 686.563 li
759.3 691.063 li
cp
f
749.923 680.954 mo
747.671 677.057 li
754.491 673.115 li
756.743 677.011 li
749.923 680.954 li
cp
f
743.556 672.943 mo
739.659 670.691 li
743.602 663.872 li
747.498 666.124 li
743.556 672.943 li
cp
f
872.522 822.38 mo
869.19 813.162 li
866.292 813.162 li
870.919 825.171 li
874.124 825.171 li
878.752 813.162 li
875.853 813.162 li
872.522 822.38 li
cp
.0980392 .0941176 .0941176 rgb
f
879.864 825.171 mo
882.421 825.171 li
882.421 813.162 li
879.864 813.162 li
879.864 825.171 li
cp
f
889.532 822.92 mo
887.353 822.92 li
887.353 815.413 li
889.55 815.413 li
891.999 815.413 893.295 817.051 893.295 819.158 cv
893.295 821.21 891.908 822.92 889.532 822.92 cv
cp
889.532 813.162 mo
884.796 813.162 li
884.796 825.171 li
889.55 825.171 li
893.295 825.171 895.905 822.794 895.905 819.158 cv
895.905 815.557 893.295 813.162 889.532 813.162 cv
cp
f
897.72 825.171 mo
906.219 825.171 li
906.219 822.92 li
900.276 822.92 li
900.276 820.184 li
906.093 820.184 li
906.093 817.933 li
900.276 817.933 li
900.276 815.413 li
906.219 815.413 li
906.219 813.162 li
897.72 813.162 li
897.72 825.171 li
cp
f
913.921 823.119 mo
911.688 823.119 910.267 821.409 910.267 819.176 cv
910.267 816.924 911.688 815.233 913.921 815.233 cv
916.136 815.233 917.559 816.924 917.559 819.176 cv
917.559 821.409 916.136 823.119 913.921 823.119 cv
cp
913.921 812.963 mo
910.284 812.963 907.638 815.557 907.638 819.176 cv
907.638 822.794 910.284 825.387 913.921 825.387 cv
917.54 825.387 920.188 822.794 920.188 819.176 cv
920.188 815.557 917.54 812.963 913.921 812.963 cv
cp
f
933.11 820.67 mo
930.192 813.162 li
926.61 813.162 li
926.61 825.171 li
929.167 825.171 li
929.167 816.51 li
932.552 825.171 li
933.668 825.171 li
937.053 816.51 li
937.053 825.171 li
939.628 825.171 li
939.628 813.162 li
936.026 813.162 li
933.11 820.67 li
cp
f
945.097 820.886 mo
946.97 815.719 li
948.842 820.886 li
945.097 820.886 li
cp
945.366 813.162 mo
940.739 825.171 li
943.638 825.171 li
944.395 823.137 li
949.544 823.137 li
950.3 825.171 li
953.199 825.171 li
948.571 813.162 li
945.366 813.162 li
cp
f
959.569 818.653 mo
956.868 818.653 li
956.868 815.413 li
959.569 815.413 li
960.577 815.413 961.353 816.025 961.353 817.015 cv
961.353 818.042 960.577 818.653 959.569 818.653 cv
cp
963.981 817.033 mo
963.981 814.8 962.433 813.162 959.93 813.162 cv
954.312 813.162 li
954.312 825.171 li
956.868 825.171 li
956.868 820.905 li
958.741 820.905 li
961.101 825.171 li
964.053 825.171 li
961.334 820.598 li
962.63 820.292 963.981 819.139 963.981 817.033 cv
cp
f
975.843 813.162 mo
972.691 813.162 li
968.442 818.509 li
968.442 813.162 li
965.886 813.162 li
965.886 825.171 li
968.442 825.171 li
968.442 821.481 li
969.379 820.346 li
973.016 825.171 li
976.167 825.171 li
971.071 818.797 li
975.843 813.162 li
cp
f
977.334 825.171 mo
985.832 825.171 li
985.832 822.92 li
979.891 822.92 li
979.891 820.184 li
985.706 820.184 li
985.706 817.933 li
979.891 817.933 li
979.891 815.413 li
985.832 815.413 li
985.832 813.162 li
977.334 813.162 li
977.334 825.171 li
cp
f
987.09 815.413 mo
990.601 815.413 li
990.601 825.171 li
993.176 825.171 li
993.176 815.413 li
996.669 815.413 li
996.669 813.162 li
987.09 813.162 li
987.09 815.413 li
cp
f
998.304 825.171 mo
1000.86 825.171 li
1000.86 813.162 li
998.304 813.162 li
998.304 825.171 li
cp
f
1011.43 820.706 mo
1005.86 813.162 li
1003.24 813.162 li
1003.24 825.171 li
1005.79 825.171 li
1005.79 817.338 li
1011.52 825.171 li
1013.98 825.171 li
1013.98 813.162 li
1011.43 813.162 li
1011.43 820.706 li
cp
f
1021.56 818.528 mo
1021.56 820.76 li
1024.73 820.76 li
1024.73 822.201 li
1024.24 822.651 1023.25 823.119 1022.19 823.119 cv
1019.99 823.119 1018.41 821.444 1018.41 819.176 cv
1018.41 816.907 1019.99 815.233 1022.19 815.233 cv
1023.45 815.233 1024.48 815.953 1025.04 816.799 cv
1027.14 815.647 li
1026.24 814.224 1024.68 812.963 1022.19 812.963 cv
1018.66 812.963 1015.78 815.376 1015.78 819.176 cv
1015.78 822.957 1018.66 825.387 1022.19 825.387 cv
1024.35 825.387 1026.06 824.505 1027.29 823.137 cv
1027.29 818.528 li
1021.56 818.528 li
cp
f
884.039 740.302 mo
1009.54 740.302 li
1009.54 663.552 li
884.039 663.552 li
884.039 740.302 li
cp
1014.04 744.802 mo
879.539 744.802 li
879.539 659.052 li
1014.04 659.052 li
1014.04 744.802 li
cp
.095291 .095291 .095291 rgb
f
895.791 728.552 mo
997.787 728.552 li
997.787 675.304 li
895.791 675.304 li
895.791 728.552 li
cp
1002.29 733.052 mo
891.291 733.052 li
891.291 670.804 li
1002.29 670.804 li
1002.29 733.052 li
cp
f
940.813 696.325 mo
940.813 707.53 li
950.516 701.927 li
940.813 696.325 li
cp
936.313 715.325 mo
936.313 688.53 li
959.514 701.927 li
936.313 715.325 li
cp
f
946.789 752.927 mo
944.893 752.927 943.35 754.47 943.35 756.367 cv
943.35 758.263 944.893 759.806 946.789 759.806 cv
948.686 759.806 950.229 758.263 950.229 756.367 cv
950.229 754.47 948.686 752.927 946.789 752.927 cv
cp
946.789 764.306 mo
942.411 764.306 938.85 760.745 938.85 756.367 cv
938.85 751.989 942.411 748.427 946.789 748.427 cv
951.167 748.427 954.729 751.989 954.729 756.367 cv
954.729 760.745 951.167 764.306 946.789 764.306 cv
cp
f
1002.04 758.617 mo
960.604 758.617 li
960.604 754.117 li
1002.04 754.117 li
1002.04 758.617 li
cp
f
932.975 758.617 mo
891.541 758.617 li
891.541 754.117 li
932.975 754.117 li
932.975 758.617 li
cp
f
50.4829 1031.43 mo
50.4829 1030.71 51.0952 1030.24 52.1758 1030.24 cv
53.3999 1030.24 54.6963 1030.65 55.6685 1031.55 cv
57.0913 1029.64 li
55.9028 1028.55 54.3184 1027.97 52.4097 1027.97 cv
49.583 1027.97 47.8545 1029.63 47.8545 1031.62 cv
47.8545 1036.14 54.7686 1034.69 54.7686 1036.77 cv
54.7686 1037.48 54.1021 1038.11 52.6797 1038.11 cv
51.0234 1038.11 49.709 1037.35 48.8628 1036.47 cv
47.4585 1038.47 li
48.5928 1039.6 50.249 1040.38 52.5718 1040.38 cv
55.7949 1040.38 57.3794 1038.72 57.3794 1036.52 cv
57.3794 1032.04 50.4829 1033.32 50.4829 1031.43 cv
cp
.0980392 .0941176 .0941176 rgb
f
59.0864 1040.16 mo
67.585 1040.16 li
67.585 1037.91 li
61.6431 1037.91 li
61.6431 1035.17 li
67.459 1035.17 li
67.459 1032.92 li
61.6431 1032.92 li
61.6431 1030.4 li
67.585 1030.4 li
67.585 1028.15 li
59.0864 1028.15 li
59.0864 1040.16 li
cp
f
68.8418 1030.4 mo
72.353 1030.4 li
72.353 1040.16 li
74.9277 1040.16 li
74.9277 1030.4 li
78.4204 1030.4 li
78.4204 1028.15 li
68.8418 1028.15 li
68.8418 1030.4 li
cp
f
79.3174 1030.4 mo
82.8286 1030.4 li
82.8286 1040.16 li
85.4033 1040.16 li
85.4033 1030.4 li
88.896 1030.4 li
88.896 1028.15 li
79.3174 1028.15 li
79.3174 1030.4 li
cp
f
90.5313 1040.16 mo
93.0879 1040.16 li
93.0879 1028.15 li
90.5313 1028.15 li
90.5313 1040.16 li
cp
f
103.655 1035.69 mo
98.0913 1028.15 li
95.4629 1028.15 li
95.4629 1040.16 li
98.0195 1040.16 li
98.0195 1032.33 li
103.745 1040.16 li
106.212 1040.16 li
106.212 1028.15 li
103.655 1028.15 li
103.655 1035.69 li
cp
f
113.788 1035.75 mo
116.957 1035.75 li
116.957 1037.19 li
116.471 1037.64 115.48 1038.11 114.418 1038.11 cv
112.221 1038.11 110.637 1036.43 110.637 1034.16 cv
110.637 1031.89 112.221 1030.22 114.418 1030.22 cv
115.678 1030.22 116.705 1030.94 117.263 1031.79 cv
119.37 1030.63 li
118.469 1029.21 116.903 1027.95 114.418 1027.95 cv
110.889 1027.95 108.008 1030.36 108.008 1034.16 cv
108.008 1037.94 110.889 1040.38 114.418 1040.38 cv
116.579 1040.38 118.289 1039.49 119.514 1038.12 cv
119.514 1033.52 li
113.788 1033.52 li
113.788 1035.75 li
cp
f
123.741 1031.43 mo
123.741 1030.71 124.353 1030.24 125.434 1030.24 cv
126.658 1030.24 127.954 1030.65 128.926 1031.55 cv
130.349 1029.64 li
129.161 1028.55 127.576 1027.97 125.667 1027.97 cv
122.841 1027.97 121.112 1029.63 121.112 1031.62 cv
121.112 1036.14 128.026 1034.69 128.026 1036.77 cv
128.026 1037.48 127.36 1038.11 125.938 1038.11 cv
124.281 1038.11 122.967 1037.35 122.121 1036.47 cv
120.716 1038.47 li
121.851 1039.6 123.507 1040.38 125.83 1040.38 cv
129.053 1040.38 130.637 1038.72 130.637 1036.52 cv
130.637 1032.04 123.741 1033.32 123.741 1031.43 cv
cp
f
45.7368 986.695 mo
46.3271 986.75 46.9209 986.779 47.5166 986.779 cv
52.5059 986.779 57.1958 984.838 60.7236 981.316 cv
65.6582 976.375 67.4204 969.151 65.3203 962.464 cv
64.9116 961.164 li
123.686 902.395 li
124.987 902.804 li
126.813 903.377 128.711 903.668 130.63 903.668 cv
135.621 903.668 140.312 901.728 143.838 898.205 cv
147.83 894.208 149.745 888.716 149.22 883.223 cv
137.437 894.998 li
120.584 878.135 li
132.357 866.367 li
131.769 866.311 131.176 866.283 130.583 866.283 cv
125.594 866.283 120.906 868.225 117.382 871.752 cv
112.437 876.695 110.673 883.917 112.777 890.601 cv
113.188 891.903 li
54.4229 950.668 li
53.1211 950.259 li
51.292 949.683 49.3901 949.391 47.4678 949.391 cv
42.4771 949.391 37.7896 951.332 34.2686 954.856 cv
30.2676 958.854 28.3491 964.346 28.877 969.839 cv
40.6523 958.059 li
57.5059 974.921 li
45.7368 986.695 li
cp
47.5166 991.279 mo
45.1372 991.279 42.7822 990.917 40.5171 990.205 cv
36.9785 989.091 li
51.1436 974.921 li
40.6523 964.424 li
26.4849 978.598 li
25.3711 975.057 li
22.7622 966.764 24.9521 957.804 31.0864 951.673 cv
35.4565 947.3 41.2744 944.891 47.4678 944.891 cv
49.3853 944.891 51.2866 945.125 53.1382 945.589 cv
108.108 890.619 li
106.12 882.712 108.393 874.375 114.199 868.571 cv
118.572 864.194 124.391 861.783 130.583 861.783 cv
132.961 861.783 135.315 862.144 137.579 862.857 cv
141.118 863.971 li
126.948 878.137 li
137.439 888.634 li
151.618 874.465 li
152.729 878.007 li
155.33 886.297 153.143 895.256 147.021 901.386 cv
142.643 905.76 136.822 908.168 130.63 908.168 cv
130.629 908.168 130.63 908.168 130.63 908.168 cv
128.716 908.168 126.819 907.935 124.972 907.473 cv
69.9897 962.45 li
71.9727 970.355 69.7031 978.693 63.9053 984.498 cv
59.5259 988.872 53.7065 991.279 47.5166 991.279 cv
cp
.095291 .095291 .095291 rgb
f
90.5259 941.917 mo
131.097 982.491 li
132.068 983.463 133.773 983.467 134.751 982.489 cv
145.005 972.237 li
145.493 971.747 145.763 971.095 145.764 970.405 cv
145.764 969.717 145.495 969.07 145.007 968.583 cv
104.435 928.007 li
90.5259 941.917 li
cp
132.924 987.746 mo
131.027 987.746 129.247 987.008 127.913 985.67 cv
84.1626 941.917 li
104.435 921.644 li
148.187 965.399 li
149.525 966.734 150.264 968.513 150.264 970.406 cv
150.263 972.296 149.526 974.076 148.189 975.417 cv
137.933 985.67 li
136.595 987.008 134.816 987.746 132.924 987.746 cv
cp
f
131.229 971.897 mo
102.949 943.609 li
106.131 940.427 li
134.412 968.715 li
131.229 971.897 li
cp
f
87.2915 931.847 mo
90.7627 935.316 li
97.835 928.246 li
94.3633 924.775 li
87.2915 931.847 li
cp
90.7627 941.679 mo
80.9263 931.847 li
94.3633 918.412 li
104.2 928.246 li
90.7627 941.679 li
cp
f
40.0918 882.083 mo
44.9307 882.411 li
44.6001 877.573 li
33.7139 871.126 li
33.6445 871.196 li
40.0918 882.083 li
cp
49.7715 887.249 mo
37.4258 886.413 li
27.9932 870.483 li
33.002 865.474 li
48.9282 874.907 li
49.7715 887.249 li
cp
f
87.6436 928.311 mo
45.7603 886.42 li
48.9429 883.239 li
90.8262 925.129 li
87.6436 928.311 li
cp
f
138.587 880.529 mo
135.052 876.996 li
138.587 873.46 li
142.123 876.997 li
138.587 880.529 li
cp
f
39.5093 979.607 mo
35.9751 976.07 li
39.5088 972.537 li
43.0439 976.07 li
39.5093 979.607 li
cp
f
262.955 1037.91 mo
259.642 1037.91 li
259.642 1035.17 li
262.955 1035.17 li
263.945 1035.17 264.485 1035.78 264.485 1036.54 cv
264.485 1037.4 263.909 1037.91 262.955 1037.91 cv
cp
259.642 1030.4 mo
262.847 1030.4 li
263.711 1030.4 264.251 1030.92 264.251 1031.66 cv
264.251 1032.44 263.711 1032.92 262.847 1032.92 cv
259.642 1032.92 li
259.642 1030.4 li
cp
264.792 1033.97 mo
265.926 1033.73 266.862 1032.7 266.862 1031.21 cv
266.862 1029.61 265.692 1028.15 263.405 1028.15 cv
257.085 1028.15 li
257.085 1040.16 li
263.604 1040.16 li
265.908 1040.16 267.096 1038.72 267.096 1036.9 cv
267.096 1035.41 266.088 1034.16 264.792 1033.97 cv
cp
.0980392 .0941176 .0941176 rgb
f
271.486 1028.15 mo
268.911 1028.15 li
268.911 1040.16 li
276.563 1040.16 li
276.563 1037.91 li
271.486 1037.91 li
271.486 1028.15 li
cp
f
283.511 1038.11 mo
281.279 1038.11 279.856 1036.4 279.856 1034.16 cv
279.856 1031.91 281.279 1030.22 283.511 1030.22 cv
285.726 1030.22 287.148 1031.91 287.148 1034.16 cv
287.148 1036.4 285.726 1038.11 283.511 1038.11 cv
cp
283.511 1027.95 mo
279.874 1027.95 277.228 1030.54 277.228 1034.16 cv
277.228 1037.78 279.874 1040.38 283.511 1040.38 cv
287.13 1040.38 289.777 1037.78 289.777 1034.16 cv
289.777 1030.54 287.13 1027.95 283.511 1027.95 cv
cp
f
296.777 1035.75 mo
299.946 1035.75 li
299.946 1037.19 li
299.46 1037.64 298.47 1038.11 297.407 1038.11 cv
295.211 1038.11 293.626 1036.43 293.626 1034.16 cv
293.626 1031.89 295.211 1030.22 297.407 1030.22 cv
298.668 1030.22 299.694 1030.94 300.252 1031.79 cv
302.359 1030.63 li
301.458 1029.21 299.892 1027.95 297.407 1027.95 cv
293.878 1027.95 290.998 1030.36 290.998 1034.16 cv
290.998 1037.94 293.878 1040.38 297.407 1040.38 cv
299.568 1040.38 301.278 1039.49 302.503 1038.12 cv
302.503 1033.52 li
296.777 1033.52 li
296.777 1035.75 li
cp
f
309.737 1035.75 mo
312.906 1035.75 li
312.906 1037.19 li
312.42 1037.64 311.43 1038.11 310.367 1038.11 cv
308.171 1038.11 306.586 1036.43 306.586 1034.16 cv
306.586 1031.89 308.171 1030.22 310.367 1030.22 cv
311.628 1030.22 312.654 1030.94 313.212 1031.79 cv
315.319 1030.63 li
314.418 1029.21 312.852 1027.95 310.367 1027.95 cv
306.838 1027.95 303.958 1030.36 303.958 1034.16 cv
303.958 1037.94 306.838 1040.38 310.367 1040.38 cv
312.528 1040.38 314.238 1039.49 315.463 1038.12 cv
315.463 1033.52 li
309.737 1033.52 li
309.737 1035.75 li
cp
f
317.494 1040.16 mo
320.05 1040.16 li
320.05 1028.15 li
317.494 1028.15 li
317.494 1040.16 li
cp
f
330.618 1035.69 mo
325.054 1028.15 li
322.425 1028.15 li
322.425 1040.16 li
324.982 1040.16 li
324.982 1032.33 li
330.708 1040.16 li
333.174 1040.16 li
333.174 1028.15 li
330.618 1028.15 li
330.618 1035.69 li
cp
f
340.75 1033.52 mo
340.75 1035.75 li
343.919 1035.75 li
343.919 1037.19 li
343.433 1037.64 342.443 1038.11 341.38 1038.11 cv
339.184 1038.11 337.6 1036.43 337.6 1034.16 cv
337.6 1031.89 339.184 1030.22 341.38 1030.22 cv
342.641 1030.22 343.667 1030.94 344.226 1031.79 cv
346.332 1030.63 li
345.432 1029.21 343.865 1027.95 341.38 1027.95 cv
337.852 1027.95 334.971 1030.36 334.971 1034.16 cv
334.971 1037.94 337.852 1040.38 341.38 1040.38 cv
343.541 1040.38 345.251 1039.49 346.476 1038.12 cv
346.476 1033.52 li
340.75 1033.52 li
cp
f
252.788 923.937 mo
252.788 914.13 li
244.299 919.035 li
252.788 923.937 li
cp
.095291 .095291 .095291 rgb
f
349.262 921.285 mo
271.092 921.283 li
271.092 916.783 li
349.262 916.785 li
349.262 921.285 li
cp
f
260.162 930.788 mo
239.799 919.035 li
260.162 907.278 li
262.412 911.174 li
248.8 919.035 li
262.411 926.891 li
260.162 930.788 li
cp
f
349.262 931.091 mo
261.287 931.089 li
260.376 931.089 259.556 930.542 259.208 929.701 cv
258.86 928.86 259.052 927.892 259.695 927.249 cv
267.911 919.033 li
259.695 910.817 li
259.052 910.173 258.86 909.206 259.208 908.365 cv
259.556 907.524 260.376 906.976 261.287 906.976 cv
261.287 906.976 li
349.262 906.978 li
349.262 911.478 li
266.718 911.476 li
272.683 917.442 li
273.562 918.321 273.562 919.745 272.683 920.624 cv
266.718 926.589 li
349.262 926.591 li
349.262 931.091 li
cp
f
351.512 926.591 mo
354.262 926.591 li
354.997 926.591 355.687 926.305 356.206 925.787 cv
356.726 925.266 357.012 924.576 357.012 923.841 cv
357.012 914.23 li
357.012 913.496 356.726 912.805 356.207 912.286 cv
355.687 911.766 354.997 911.48 354.262 911.48 cv
351.512 911.479 li
351.512 926.591 li
cp
354.262 931.091 mo
347.012 931.091 li
347.012 906.977 li
354.263 906.98 li
356.2 906.98 358.021 907.735 359.389 909.105 cv
360.758 910.473 361.512 912.293 361.512 914.23 cv
361.512 923.841 li
361.512 925.778 360.758 927.598 359.388 928.967 cv
358.021 930.336 356.2 931.091 354.262 931.091 cv
cp
f
339.293 998.16 mo
321.111 979.978 li
259.034 979.978 li
259.034 928.835 li
263.534 928.835 li
263.534 975.478 li
322.976 975.478 li
334.793 987.296 li
334.793 975.478 li
347.014 975.478 li
347.014 880.837 li
328.762 862.585 li
263.534 862.585 li
263.534 909.226 li
259.034 909.226 li
259.034 858.085 li
330.626 858.085 li
351.504 878.964 li
351.514 879.906 li
351.514 979.978 li
339.293 979.978 li
339.293 998.16 li
cp
f
349.26 882.152 mo
327.442 882.152 li
327.442 860.333 li
331.942 860.333 li
331.942 877.652 li
349.26 877.652 li
349.26 882.152 li
cp
f
304.784 882.152 mo
273.504 882.152 li
273.504 877.652 li
304.784 877.652 li
304.784 882.152 li
cp
f
337.043 940.865 mo
273.504 940.865 li
273.504 936.365 li
337.043 936.365 li
337.043 940.865 li
cp
f
337.043 950.638 mo
273.504 950.638 li
273.504 946.138 li
337.043 946.138 li
337.043 950.638 li
cp
f
337.043 960.414 mo
273.504 960.414 li
273.504 955.914 li
337.043 955.914 li
337.043 960.414 li
cp
f
337.043 891.925 mo
273.504 891.925 li
273.504 887.425 li
337.043 887.425 li
337.043 891.925 li
cp
f
337.043 901.701 mo
273.504 901.701 li
273.504 897.201 li
337.043 897.201 li
337.043 901.701 li
cp
f
436.976 1035.69 mo
431.412 1028.15 li
428.783 1028.15 li
428.783 1040.16 li
431.34 1040.16 li
431.34 1032.33 li
437.065 1040.16 li
439.532 1040.16 li
439.532 1028.15 li
436.976 1028.15 li
436.976 1035.69 li
cp
.0980392 .0941176 .0941176 rgb
f
441.905 1040.16 mo
450.403 1040.16 li
450.403 1037.91 li
444.462 1037.91 li
444.462 1035.17 li
450.277 1035.17 li
450.277 1032.92 li
444.462 1032.92 li
444.462 1030.4 li
450.403 1030.4 li
450.403 1028.15 li
441.905 1028.15 li
441.905 1040.16 li
cp
f
451.66 1030.4 mo
455.171 1030.4 li
455.171 1040.16 li
457.746 1040.16 li
457.746 1030.4 li
461.239 1030.4 li
461.239 1028.15 li
451.66 1028.15 li
451.66 1030.4 li
cp
f
473.228 1036.83 mo
470.959 1028.15 li
468.96 1028.15 li
466.673 1036.83 li
464.566 1028.15 li
461.704 1028.15 li
465.143 1040.16 li
467.861 1040.16 li
469.95 1031.91 li
472.057 1040.16 li
474.775 1040.16 li
478.196 1028.15 li
475.334 1028.15 li
473.228 1036.83 li
cp
f
484.746 1038.11 mo
482.514 1038.11 481.091 1036.4 481.091 1034.16 cv
481.091 1031.91 482.514 1030.22 484.746 1030.22 cv
486.961 1030.22 488.383 1031.91 488.383 1034.16 cv
488.383 1036.4 486.961 1038.11 484.746 1038.11 cv
cp
484.746 1027.95 mo
481.108 1027.95 478.462 1030.54 478.462 1034.16 cv
478.462 1037.78 481.108 1040.38 484.746 1040.38 cv
488.365 1040.38 491.012 1037.78 491.012 1034.16 cv
491.012 1030.54 488.365 1027.95 484.746 1027.95 cv
cp
f
498.065 1033.64 mo
495.365 1033.64 li
495.365 1030.4 li
498.065 1030.4 li
499.074 1030.4 499.849 1031.01 499.849 1032 cv
499.849 1033.03 499.074 1033.64 498.065 1033.64 cv
cp
502.478 1032.02 mo
502.478 1029.79 500.929 1028.15 498.426 1028.15 cv
492.809 1028.15 li
492.809 1040.16 li
495.365 1040.16 li
495.365 1035.89 li
497.237 1035.89 li
499.597 1040.16 li
502.549 1040.16 li
499.83 1035.59 li
501.127 1035.28 502.478 1034.13 502.478 1032.02 cv
cp
f
514.339 1028.15 mo
511.188 1028.15 li
506.938 1033.5 li
506.938 1028.15 li
504.382 1028.15 li
504.382 1040.16 li
506.938 1040.16 li
506.938 1036.47 li
507.875 1035.33 li
511.512 1040.16 li
514.663 1040.16 li
509.567 1033.79 li
514.339 1028.15 li
cp
f
522.652 1031.43 mo
522.652 1030.71 523.265 1030.24 524.345 1030.24 cv
525.569 1030.24 526.865 1030.65 527.838 1031.55 cv
529.26 1029.64 li
528.071 1028.55 526.487 1027.97 524.579 1027.97 cv
521.752 1027.97 520.023 1029.63 520.023 1031.63 cv
520.023 1036.14 526.938 1034.69 526.938 1036.77 cv
526.938 1037.48 526.271 1038.11 524.849 1038.11 cv
523.192 1038.11 521.878 1037.35 521.032 1036.47 cv
519.627 1038.47 li
520.762 1039.6 522.418 1040.38 524.741 1040.38 cv
527.964 1040.38 529.548 1038.72 529.548 1036.52 cv
529.548 1032.04 522.652 1033.32 522.652 1031.43 cv
cp
f
531.256 1040.16 mo
539.754 1040.16 li
539.754 1037.91 li
533.813 1037.91 li
533.813 1035.17 li
539.628 1035.17 li
539.628 1032.92 li
533.813 1032.92 li
533.813 1030.4 li
539.754 1030.4 li
539.754 1028.15 li
531.256 1028.15 li
531.256 1040.16 li
cp
f
547.584 1030.22 mo
548.808 1030.22 549.889 1030.99 550.393 1031.97 cv
552.589 1030.89 li
551.743 1029.37 550.212 1027.95 547.584 1027.95 cv
543.965 1027.95 541.174 1030.45 541.174 1034.16 cv
541.174 1037.85 543.965 1040.38 547.584 1040.38 cv
550.212 1040.38 551.743 1038.92 552.589 1037.42 cv
550.393 1036.36 li
549.889 1037.33 548.808 1038.11 547.584 1038.11 cv
545.387 1038.11 543.803 1036.43 543.803 1034.16 cv
543.803 1031.9 545.387 1030.22 547.584 1030.22 cv
cp
f
562.345 1035.28 mo
562.345 1036.95 561.391 1038.11 559.536 1038.11 cv
557.681 1038.11 556.709 1036.95 556.709 1035.28 cv
556.709 1028.15 li
554.116 1028.15 li
554.116 1035.35 li
554.116 1038.32 555.881 1040.38 559.536 1040.38 cv
563.19 1040.38 564.955 1038.32 564.955 1035.35 cv
564.955 1028.15 li
562.345 1028.15 li
562.345 1035.28 li
cp
f
572.586 1033.64 mo
569.885 1033.64 li
569.885 1030.4 li
572.586 1030.4 li
573.594 1030.4 574.368 1031.01 574.368 1032 cv
574.368 1033.03 573.594 1033.64 572.586 1033.64 cv
cp
576.997 1032.02 mo
576.997 1029.79 575.448 1028.15 572.945 1028.15 cv
567.328 1028.15 li
567.328 1040.16 li
569.885 1040.16 li
569.885 1035.89 li
571.757 1035.89 li
574.116 1040.16 li
577.069 1040.16 li
574.351 1035.59 li
575.646 1035.28 576.997 1034.13 576.997 1032.02 cv
cp
f
578.902 1040.16 mo
581.459 1040.16 li
581.459 1028.15 li
578.902 1028.15 li
578.902 1040.16 li
cp
f
583.096 1030.4 mo
586.606 1030.4 li
586.606 1040.16 li
589.182 1040.16 li
589.182 1030.4 li
592.675 1030.4 li
592.675 1028.15 li
583.096 1028.15 li
583.096 1030.4 li
cp
f
601.907 1028.15 mo
598.937 1032.96 li
595.966 1028.15 li
593.049 1028.15 li
597.658 1035.24 li
597.658 1040.16 li
600.215 1040.16 li
600.215 1035.24 li
604.807 1028.15 li
601.907 1028.15 li
cp
f
459.045 880.495 mo
574.545 880.495 li
574.545 869.995 li
459.045 869.995 li
459.045 880.495 li
cp
579.045 884.995 mo
454.545 884.995 li
454.545 865.495 li
579.045 865.495 li
579.045 884.995 li
cp
.095291 .095291 .095291 rgb
f
472.045 877.495 mo
467.545 877.495 li
467.545 872.995 li
472.045 872.995 li
472.045 877.495 li
cp
f
481.045 877.495 mo
476.545 877.495 li
476.545 872.995 li
481.045 872.995 li
481.045 877.495 li
cp
f
490.045 877.495 mo
485.545 877.495 li
485.545 872.995 li
490.045 872.995 li
490.045 877.495 li
cp
f
579.045 969.655 mo
540.323 969.655 li
540.323 965.155 li
574.545 965.155 li
574.545 884.995 li
459.045 884.995 li
459.045 965.155 li
493.267 965.155 li
493.267 969.655 li
454.545 969.655 li
454.545 880.495 li
579.045 880.495 li
579.045 969.655 li
cp
f
516.796 925.803 mo
508.387 925.803 501.545 932.647 501.545 941.058 cv
501.545 949.469 508.387 956.313 516.796 956.313 cv
525.209 956.313 532.054 949.469 532.054 941.058 cv
532.054 932.647 525.209 925.803 516.796 925.803 cv
cp
516.796 960.813 mo
505.905 960.813 497.045 951.951 497.045 941.058 cv
497.045 930.166 505.905 921.303 516.796 921.303 cv
527.69 921.303 536.554 930.166 536.554 941.058 cv
536.554 951.951 527.69 960.813 516.796 960.813 cv
cp
f
515.019 949.377 mo
506.721 941.079 li
509.902 937.897 li
515.019 943.013 li
523.695 934.334 li
526.877 937.516 li
515.019 949.377 li
cp
f
487.146 914.61 mo
487.146 940.488 li
487.146 959.469 499.025 976.425 516.791 982.929 cv
534.562 976.426 546.444 959.47 546.444 940.488 cv
546.444 914.61 li
516.791 900.805 li
487.146 914.61 li
cp
516.791 987.699 mo
516.053 987.444 li
496.072 980.515 482.646 961.645 482.646 940.488 cv
482.646 911.741 li
516.791 895.842 li
550.944 911.741 li
550.944 940.488 li
550.944 961.647 537.515 980.517 517.527 987.444 cv
516.791 987.699 li
cp
f
519.041 911.049 mo
514.541 911.049 li
514.541 898.318 li
519.041 898.318 li
519.041 911.049 li
cp
f
519.041 985.318 mo
514.541 985.318 li
514.541 972.586 li
519.041 972.586 li
519.041 985.318 li
cp
f
682.822 1030.22 mo
684.047 1030.22 685.127 1031 685.631 1031.97 cv
687.828 1030.89 li
686.98 1029.37 685.451 1027.95 682.822 1027.95 cv
679.203 1027.95 676.412 1030.45 676.412 1034.16 cv
676.412 1037.85 679.203 1040.37 682.822 1040.37 cv
685.451 1040.37 686.98 1038.92 687.828 1037.42 cv
685.631 1036.36 li
685.127 1037.33 684.047 1038.11 682.822 1038.11 cv
680.625 1038.11 679.041 1036.43 679.041 1034.16 cv
679.041 1031.89 680.625 1030.22 682.822 1030.22 cv
cp
.0980392 .0941176 .0941176 rgb
f
695.062 1038.11 mo
692.829 1038.11 691.406 1036.4 691.406 1034.16 cv
691.406 1031.91 692.829 1030.22 695.062 1030.22 cv
697.276 1030.22 698.699 1031.91 698.699 1034.16 cv
698.699 1036.4 697.276 1038.11 695.062 1038.11 cv
cp
695.062 1027.95 mo
691.424 1027.95 688.777 1030.54 688.777 1034.16 cv
688.777 1037.78 691.424 1040.37 695.062 1040.37 cv
698.681 1040.37 701.328 1037.78 701.328 1034.16 cv
701.328 1030.54 698.681 1027.95 695.062 1027.95 cv
cp
f
711.316 1035.69 mo
705.752 1028.15 li
703.124 1028.15 li
703.124 1040.16 li
705.681 1040.16 li
705.681 1032.33 li
711.406 1040.16 li
713.873 1040.16 li
713.873 1028.15 li
711.316 1028.15 li
711.316 1035.69 li
cp
f
718.441 1031.43 mo
718.441 1030.71 719.055 1030.24 720.135 1030.24 cv
721.359 1030.24 722.655 1030.65 723.627 1031.55 cv
725.051 1029.64 li
723.861 1028.55 722.277 1027.97 720.369 1027.97 cv
717.542 1027.97 715.813 1029.63 715.813 1031.62 cv
715.813 1036.14 722.728 1034.69 722.728 1036.77 cv
722.728 1037.48 722.061 1038.11 720.639 1038.11 cv
718.982 1038.11 717.668 1037.35 716.822 1036.47 cv
715.418 1038.47 li
716.552 1039.6 718.208 1040.37 720.531 1040.37 cv
723.754 1040.37 725.338 1038.72 725.338 1036.52 cv
725.338 1032.04 718.441 1033.32 718.441 1031.43 cv
cp
f
735.273 1035.28 mo
735.273 1036.95 734.319 1038.11 732.465 1038.11 cv
730.61 1038.11 729.639 1036.95 729.639 1035.28 cv
729.639 1028.15 li
727.045 1028.15 li
727.045 1035.35 li
727.045 1038.32 728.811 1040.37 732.465 1040.37 cv
736.12 1040.37 737.885 1038.32 737.885 1035.35 cv
737.885 1028.15 li
735.273 1028.15 li
735.273 1035.28 li
cp
f
742.725 1028.15 mo
740.148 1028.15 li
740.148 1040.16 li
747.801 1040.16 li
747.801 1037.91 li
742.725 1037.91 li
742.725 1028.15 li
cp
f
746.989 1030.4 mo
750.5 1030.4 li
750.5 1040.16 li
753.075 1040.16 li
753.075 1030.4 li
756.568 1030.4 li
756.568 1028.15 li
746.989 1028.15 li
746.989 1030.4 li
cp
f
758.203 1040.16 mo
760.76 1040.16 li
760.76 1028.15 li
758.203 1028.15 li
758.203 1040.16 li
cp
f
771.327 1035.69 mo
765.764 1028.15 li
763.135 1028.15 li
763.135 1040.16 li
765.691 1040.16 li
765.691 1032.33 li
771.417 1040.16 li
773.884 1040.16 li
773.884 1028.15 li
771.327 1028.15 li
771.327 1035.69 li
cp
f
781.46 1033.52 mo
781.46 1035.75 li
784.629 1035.75 li
784.629 1037.19 li
784.143 1037.64 783.152 1038.11 782.09 1038.11 cv
779.893 1038.11 778.309 1036.43 778.309 1034.16 cv
778.309 1031.89 779.893 1030.22 782.09 1030.22 cv
783.35 1030.22 784.377 1030.94 784.936 1031.79 cv
787.041 1030.63 li
786.141 1029.21 784.574 1027.95 782.09 1027.95 cv
778.561 1027.95 775.68 1030.36 775.68 1034.16 cv
775.68 1037.94 778.561 1040.37 782.09 1040.37 cv
784.25 1040.37 785.961 1039.49 787.186 1038.12 cv
787.186 1033.52 li
781.46 1033.52 li
cp
f
674.049 960.966 mo
693.264 960.966 li
693.264 973.505 li
705.803 960.966 li
770.332 960.966 li
770.332 895.591 li
674.049 895.591 li
674.049 960.966 li
cp
688.764 984.369 mo
688.764 965.466 li
669.549 965.466 li
669.549 891.091 li
774.832 891.091 li
774.832 965.466 li
707.666 965.466 li
688.764 984.369 li
cp
.095291 .095291 .095291 rgb
f
693.264 941.75 mo
789.549 941.75 li
789.549 876.375 li
693.264 876.375 li
693.264 941.75 li
cp
794.049 946.25 mo
688.764 946.25 li
688.764 871.875 li
794.049 871.875 li
794.049 946.25 li
cp
f
701.745 933.267 mo
761.853 933.267 li
761.853 904.07 li
701.745 904.07 li
701.745 933.267 li
cp
766.353 937.767 mo
697.245 937.767 li
697.245 899.57 li
766.353 899.57 li
766.353 937.767 li
cp
f
725.051 920.919 mo
720.551 920.919 li
720.551 916.419 li
725.051 916.419 li
725.051 920.919 li
cp
f
734.046 920.919 mo
729.551 920.919 li
729.551 916.419 li
734.046 916.419 li
734.046 920.919 li
cp
f
743.045 920.919 mo
738.545 920.919 li
738.545 916.419 li
743.045 916.419 li
743.045 920.919 li
cp
f
889.136 1035.87 mo
891.008 1030.71 li
892.881 1035.87 li
889.136 1035.87 li
cp
889.406 1028.15 mo
884.778 1040.16 li
887.678 1040.16 li
888.434 1038.13 li
893.583 1038.13 li
894.34 1040.16 li
897.238 1040.16 li
892.611 1028.15 li
889.406 1028.15 li
cp
.0980392 .0941176 .0941176 rgb
f
906.543 1035.69 mo
900.979 1028.15 li
898.352 1028.15 li
898.352 1040.16 li
900.908 1040.16 li
900.908 1032.33 li
906.633 1040.16 li
909.1 1040.16 li
909.1 1028.15 li
906.543 1028.15 li
906.543 1035.69 li
cp
f
917.307 1030.22 mo
918.531 1030.22 919.611 1030.99 920.115 1031.97 cv
922.312 1030.89 li
921.465 1029.37 919.936 1027.95 917.307 1027.95 cv
913.688 1027.95 910.896 1030.45 910.896 1034.16 cv
910.896 1037.85 913.688 1040.38 917.307 1040.38 cv
919.936 1040.38 921.465 1038.92 922.312 1037.42 cv
920.115 1036.36 li
919.611 1037.33 918.531 1038.11 917.307 1038.11 cv
915.109 1038.11 913.525 1036.43 913.525 1034.16 cv
913.525 1031.9 915.109 1030.22 917.307 1030.22 cv
cp
f
932.066 1032.87 mo
926.395 1032.87 li
926.395 1028.15 li
923.838 1028.15 li
923.838 1040.16 li
926.395 1040.16 li
926.395 1035.1 li
932.066 1035.1 li
932.066 1040.16 li
934.642 1040.16 li
934.642 1028.15 li
932.066 1028.15 li
932.066 1032.87 li
cp
f
942.703 1038.11 mo
940.471 1038.11 939.049 1036.4 939.049 1034.16 cv
939.049 1031.91 940.471 1030.22 942.703 1030.22 cv
944.918 1030.22 946.341 1031.91 946.341 1034.16 cv
946.341 1036.4 944.918 1038.11 942.703 1038.11 cv
cp
942.703 1027.95 mo
939.066 1027.95 936.42 1030.55 936.42 1034.16 cv
936.42 1037.78 939.066 1040.38 942.703 1040.38 cv
946.322 1040.38 948.97 1037.78 948.97 1034.16 cv
948.97 1030.55 946.322 1027.95 942.703 1027.95 cv
cp
f
956.023 1033.64 mo
953.322 1033.64 li
953.322 1030.4 li
956.023 1030.4 li
957.031 1030.4 957.807 1031.01 957.807 1032 cv
957.807 1033.03 957.031 1033.64 956.023 1033.64 cv
cp
960.436 1032.02 mo
960.436 1029.79 958.887 1028.15 956.384 1028.15 cv
950.766 1028.15 li
950.766 1040.16 li
953.322 1040.16 li
953.322 1035.89 li
955.195 1035.89 li
957.555 1040.16 li
960.507 1040.16 li
957.788 1035.59 li
959.084 1035.28 960.436 1034.13 960.436 1032.02 cv
cp
f
966.228 1030.4 mo
969.738 1030.4 li
969.738 1040.16 li
972.313 1040.16 li
972.313 1030.4 li
975.807 1030.4 li
975.807 1028.15 li
966.228 1028.15 li
966.228 1030.4 li
cp
f
977.441 1040.16 mo
985.939 1040.16 li
985.939 1037.91 li
979.998 1037.91 li
979.998 1035.17 li
985.814 1035.17 li
985.814 1032.92 li
979.998 1032.92 li
979.998 1030.4 li
985.939 1030.4 li
985.939 1028.15 li
977.441 1028.15 li
977.441 1040.16 li
cp
f
998.559 1028.15 mo
995.479 1028.15 li
992.76 1032.26 li
990.006 1028.15 li
986.963 1028.15 li
991.05 1034 li
986.692 1040.16 li
989.735 1040.16 li
992.76 1035.77 li
995.768 1040.16 li
998.828 1040.16 li
994.471 1033.98 li
998.559 1028.15 li
cp
f
999.221 1028.15 mo
999.221 1030.4 li
1002.73 1030.4 li
1002.73 1040.16 li
1005.31 1040.16 li
1005.31 1030.4 li
1008.8 1030.4 li
1008.8 1028.15 li
999.221 1028.15 li
cp
f
949.041 965.472 mo
944.541 965.472 li
944.541 888.646 li
949.041 888.646 li
949.041 965.472 li
cp
f
946.791 865.281 mo
940.971 865.281 936.236 870.015 936.236 875.833 cv
936.236 881.658 940.971 886.396 946.791 886.396 cv
952.609 886.396 957.344 881.658 957.344 875.833 cv
957.344 870.015 952.609 865.281 946.791 865.281 cv
cp
946.791 890.896 mo
938.49 890.896 931.736 884.139 931.736 875.833 cv
931.736 867.534 938.49 860.781 946.791 860.781 cv
955.091 860.781 961.844 867.534 961.844 875.833 cv
961.844 884.139 955.091 890.896 946.791 890.896 cv
cp
f
949.039 875.837 mo
949.039 874.595 948.033 873.589 946.791 873.589 cv
945.549 873.589 944.541 874.595 944.541 875.837 cv
944.541 877.08 945.549 878.089 946.791 878.089 cv
948.033 878.089 949.039 877.08 949.039 875.837 cv
cp
f
970.299 929.302 mo
954.646 929.302 li
954.646 924.802 li
970.299 924.802 li
976.538 924.802 982.404 922.375 986.816 917.968 cv
991.227 913.556 993.656 907.69 993.656 901.453 cv
993.656 895.208 991.227 889.342 986.815 884.935 cv
982.402 880.516 976.537 878.083 970.299 878.083 cv
959.594 878.083 li
959.594 873.583 li
970.299 873.583 li
977.74 873.583 984.736 876.485 989.998 881.753 cv
995.259 887.009 998.156 894.006 998.156 901.453 cv
998.156 908.892 995.259 915.887 989.997 921.151 cv
984.734 926.408 977.739 929.302 970.299 929.302 cv
cp
f
946.791 954.917 mo
938.934 954.917 li
934.901 954.917 931.119 953.349 928.284 950.5 cv
925.442 947.672 923.873 943.891 923.873 939.861 cv
923.873 935.842 925.44 932.061 928.287 929.211 cv
931.134 926.368 934.914 924.802 938.934 924.802 cv
938.934 929.302 li
936.115 929.302 933.465 930.4 931.47 932.394 cv
929.473 934.392 928.373 937.043 928.373 939.861 cv
928.373 942.685 929.472 945.333 931.466 947.319 cv
933.458 949.32 936.107 950.417 938.934 950.417 cv
946.791 950.417 li
946.791 954.917 li
cp
f
961.844 965.472 mo
957.344 965.472 li
957.344 962.654 956.246 960.003 954.253 958.01 cv
952.257 956.016 949.606 954.917 946.791 954.917 cv
946.791 950.417 li
950.808 950.417 954.588 951.984 957.435 954.828 cv
960.278 957.671 961.844 961.452 961.844 965.472 cv
cp
f
966.6 903.703 mo
926.982 903.703 li
926.982 899.203 li
966.6 899.203 li
966.6 903.703 li
cp
f
971.35 992.281 mo
960.389 992.281 950.941 985.667 946.791 976.221 cv
942.641 985.667 933.193 992.281 922.232 992.281 cv
907.449 992.281 895.422 980.254 895.422 965.472 cv
895.422 963.222 li
909.465 963.222 li
909.465 967.722 li
900.034 967.722 li
901.166 978.971 910.689 987.781 922.232 987.781 cv
934.533 987.781 944.541 977.773 944.541 965.472 cv
949.041 965.472 li
949.041 977.773 959.049 987.781 971.35 987.781 cv
982.891 987.781 992.412 978.971 993.544 967.722 cv
984.115 967.722 li
984.115 963.222 li
998.156 963.222 li
998.156 965.472 li
998.156 980.254 986.131 992.281 971.35 992.281 cv
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 16.0.0
%%For: (Max) ()
%%Title: (vector_416.eps)
%%CreationDate: 10/23/2015 1:00 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb"-6H]K8jE@(Ir!.BY%a+1P/C0/,!1Nb>dk\bQj^$nCNm'SL*`IR)I1=n>CJA\Xqm\dg>cABWBC/XV]*kO<ar./DYU+>PpR?@#!
%EUlp)jSmsoDa/aCp/h"Wrnj@)Uf))ZP#BUb.IG6+/EqpSpldr<Df:+(qWm;LhWD0U*h@3'fI*,([r'<PmHiH(U@F.cYJ0i'p"L!A
%HiNNal`\'PGk]1hpL!smk2FoFhqn:mb?rq@?JbTEYJ9klh7qh%J+<*[5?jVh5B!/W^%p[\e%>?]^AMrVhej-oce/#2^U@0d!rP`;
%s6S(H1sms_J,!FGBBR:nJ+E1q]0BZNV#:/S++F4c=)YhPnG_O)2t,W&cQD2o]0G1ql<h4'lD8r<-aT_Xc]@FZ2_SM;o&Vf;I*a`h
%Nhbs]%mReE.K8q`?[i7$f5.kLKb?V>J+P=P-&BlCn=!..IJab-c8Xj^l8h0,faD%0l[XDqWQfm_]g;MY!g*>92i0Kg2m:!olALuN
%?F(IBB%P'fnO":,n"'cK>4(ad]&1`?hu"b/l:2hbqYFRU]`-NThYak700asbhYZa/rJ+amq>[OWCiD61j1kBb2da4Hs0lq(I'D4e
%.@YYRJ,/O(f3d2#`sJ?OGfd*N4Ve"i,Q?ieqd7&9@)MQk(Z4/as7Bo>n[lR4k0(Maq<QWLA]ZUrf3c4?q`"!C#B/-6W79Ra>J@(H
%gl@]Tc$$_fHb[\WY]3o`Nh5Or->iA(K5h?j&>tEoF`bpTC_ZmAq_u99oCf("Dfkgpm@X@1q_t,hj4!/Bcp)oRgN!'Oj0.@N]n[+?
%?GDIi8bo]J^H@MJmIi2_JP/5ArVYX1QfsU9nb(bYpfe^:?bH9$s7Z6)hq9Hmq9#=`K$XG]SMbZ`(+9+?&,o29)k[)qMf7sKJ+ilt
%2dcOZgL%\li=CBZp\DFNI!tTN?GH@+m_*c6k;RnhO8mD;r:oDES:rnOoD[i%4,85ka5"CVo@8p%N>(#e^41R+hca65[Jt`5s1_9T
%S"cc3NY=t[q"A'$J+;s-dtsFPjkJ+"rpJnFYJ/9'J+gk)[kHXrn/(EGJ+;Z.lo-TbPoXL%ADc[Z2KZ[=Qc)?Uk1M&0b5nMJIB-#S
%r:!LZ?XLSHr9JKKI=6;1&q6<Kro2O:ro:UDhL,:`3oO5IIf>XWpYkfB[t"?W\,$#mYQ*kLDr/2)icl%r^jgKKo(rr4oC(fclekQE
%^jc+JpZ)i<^\Hg5YMR%llCZqGqUG=*nb[I&hpD($NM9L%l^tcJoiLHg+1M%>FIa7:O.X0AjnB^kol!"U(]X@&_lJ8Bp%"14?bV$]
%qVRZukh][\H#&?,bqHeVoATAi?gk`,$7=NP0E14t<tOE5VpgdKH.uu?5b&X@TD[cZ0+IO8rpBN;5C<G$o/F,Or:K,ApKr;XDtKZO
%D.c%][T+s;gjf=@+8j"eIpb1oT(ZXZgP.@1n$s25P05\_&jMAi[5%1"bd/WP(@'/:I!5PhEXFFj3WX_0o:'EA'92D=[N)2^_^Vfp
%IeLCGiVr0#p%lGleTL9V(Ish2C]=iLnRq=)q#'9n2d_&"?Q<G>6o@$cs8Lsfnn+M)T?P&1(OiB4bVHJngN2OjfOsdDb]ickpODZ'
%K7.(Yk7Jdtj&:CV)ua/-M1617YC?r[l;.)&okF?is8MKmr-@I4)]erYp\i2)i=(hB1<Nn50+[0L4OmuODoQR0[F\8g]rM\;H)seY
%CWT=P>AJTOD77'"h]CK]Hhu\3p<=Ye^_#;aI^e5'0D<HbWGgT4U0`34HQR\0]Dg/aoZ+4rA?Vd;F+-S#F52cPnLu$)e(j:)Q"ftU
%pY"_sGOp9ti-d!0qY"4pUu1[`qUc\Us7LeAIMtHJqUj85G3@W@kKZ9cr&iWpKmb$8YqnR\:V;M^M-'[in*/6VihO1sp3#B8)SC=#
%c_Gp\kJ9@Vp:7NU[*R[NhV&?aV_=Ke.R$)p_2DbEN1FK$hS@$mI3.d.PN^?+II?GXm:1)0U%>VFa*J6oqG?sl;>A$N4='gV_q[K4
%5K/'B./Z8+rb/e7E.<@eG<bQ:ID=\.gO6ag2NlPfG5$+QBXdqZGCOg\2t+al^YA52?+haHg=+k9T;K:BH`.28e7kK.XcqM@f&:nO
%\W%sU!\`mumqk>60l1Oi2FOPSP\^G6lVIK,?Go4G[t-AQ5]n#H2H4LC'cUbaDnGFa4&he765jS/F14@-lgq>E0@o=VUX'T;)DUbk
%p0j`0fpL*4C/<Em%lPA=)`BXTbn>),lBCo8^!33IGFM=h)V%fYXT'AYY"bC,R$@hr)`.M<+5t!-O5@pZ^!7)QL7NfXc6jRDanhf8
%h_aYoDLFCEcgIq(?<A:5fs&cQX4;N?[pC-,gNV67&(^W=pJ3\:P)Y9,,GW6DGW(3FDuBO1q=sJcT=XN9I!Ep-Z=`]s_0/;m@*RMp
%YL)AWR?gKml=n2Ch/P2Z)VH(HfZ*-Hp=:q3X,l_NnSP&u*l$e"DB.Ij[V]Pb)W,U8Ri8_4?#2nV)pp<T1f'.mC1DKE[J@\hkM8?$
%BL;j)pY-^ba+)O08,lCm4]0fnh=G.Jrb:q5chV+toX*An-H20CJL;E-:KZ1%L$VMug(^sDi"*3O_kW3i7iQN1p?j!BUWr9uHO#UI
%@+j&LVfENg3jNu-)8;]tg$="3Wa_SJXt3a\Cte^]1@2Eh)ImQ>Y;;ZI"KXK23_=,3jD+9o?21paol'm%Rg/I3Q^ZBDoDJ2r\\AQ&
%)JqLfm3:&C9Y]qMIGA`;a;YPY?K[XAIp;EejIs8#-I82/)#7]%rU/j1iKh^=g2X@1iOVPWKo-%Hkdf4]/]W=p&E>mUrk#PgFgl'#
%#B+MG2MZG8cku_/L-<ePO(-:Mhj[Bj)If\D]D2?N`I#HV[Wmek-eQY5ifCKaF6G@@D):M:Cq>(n<o;;4rS+f"?[hhIo:'*ta:)sR
%Y+H?!4UMVf8(W6Ig968)j+<*knrZRPU3TsWf(N[tRK<<5<(X!;Y<O&be+u##8;`[ZPJ&6lE9Bi%VtF#&2f5pg*bZcmg."0+U-`'t
%UCHj).Bg'MP#=?jd\3%52=^9_;GIarKeKd[N7us/p0jN*.aiX$_36Z<%ufWB.G*gr[e(GFG!b"0/01=ArQrm2T<Ij'>Pu41XF>2O
%eW7^PoXn47g""nqkr[VG07N4(I%XW>EG2,o>SrGf++n[.T'4Z<3^.S!-CpSAFDEdUCuj16FDUBh1j^oD>)nRkk)Wc:([]Vor^=f(
%R`=]+o#\Ff=RM.gSDl.rpI,B]P.fAQ+Q_Lh+CR:iJqW56(8P&q@St"JoK_.Klf8^238&8TiX2fL7U'c.>r$*@9j2[`Zs)m3^V$4f
%LX-X84R7C)0XQKt0oogYP5Vbk5.b$I#-TD%*VJ4Z^:Ul=F7e=eoZ6VFbhe+F0A^"3d:Qnf/U[pQp#sTX]a7d5"e8Tdl-ZPN=j>N,
%c`1osGF/2QoPVD\*?Uaj`I$86fZ];LQdsDP:OfCJqs*XlNq5Gi$`H7uhN)"CDLHZrIJ(*^fQiK_Asr>B1!e-.Fjg#VkUH2R-[Md:
%q"/Q%76bAPVe])%T8oL@5=JBH>C@7"'sfXWA+\C%-VQoa2*!0A0?9p0*\T[B<j*PB[X5bpHgLuLWqu,;RZcS(ci;QPI`e0D7n_PS
%Eu,9oBDbk!4P/sYi`n-EX?e4IS7.X&5q6SiHaDh]FZIIk@!LsjN@0FWG3dF8Nh@bQ$)t<[_bj2f5)P>XDB8Gd&/;uWI@)[Dd$+,V
%_bSD:H)-XF:Y04*IV?),?nZ?'')jHjji(Z'r9sr`[Sds9\RTHQ1FD^q@kHi.IZ%lta'.oF9shmr_mbN4S>.\.<ZgP/RU'^t)Bk6C
%TZD$FaM>k)L.:SJ*9l$Abl]656R4=d#Oec:&Lclb.ObXhe;`FM(CZ\d+_5&qh\e>OV0q0%htP[qIJ$+qX,FTrgDSp3likargH?cL
%Aj<Y"G'XnDhbUaE^Ir?dZ;9D@k8qpHIeik%1[UCO9`$QJnB@:ls+W?$gR[UGB;aIRR8:?CbKTgYU%LJb'o-;ugdPSb[kf).H!^M_
%s7[GV.P_(.Nr'o+MSD,4pGU"*o)ufr0!@"Q,@Yr-,*pOW"SF\W#T1+"3^k\>,%(OP1!GG_N['__W;sg(1pUtMA=LAn8o8oucb=bm
%k]UiXmci1tL[WmbpROhO-g/nVHlaI1D6otilmObbP$Rnj=Y-%.Qq=/&D-gXo<K=F#7]Q;#a0Wa[EaRB)7OQpWCff;mpt4Do[Ee)q
%O5Ba4>IO8#<4,$(>8NdnB\e,U_r-4XMC0>i2J[1)1cQe#*oL_d^jBMMAnBNlO0u^cokij".h(3+irJ=ho7Zt-2,RdHs$;e+gQ?=2
%\O9JJn!!\SXa_53TDnNP4(?5X8*kIA`q$p'P)']r;=NZQ^F0)'KOF4K#j,QL@.Z0:V*Ku'(kO8*s$Z#t1!cJ[fAHBi15$^I/`$/T
%3FHB^RB\+.T]-ItHfXY-/cPP#=jJUZ&*Ng%lKtUZJN9t-k(Tp!^a9&^ciL;R',I;]2H,0f[Ve7\l?-a?fZ,fBEQph>7<[PUo>p*4
%4;fO#'90(`)Hnfl]gQU0agJsG;J\GPD=^_2nT:7H!=%;Uj:gA:(C+.%R13[#!4/Gr<;I1E75AE?T2qH=^5_dVSuiZjib3$?5<=dd
%$Xp?j[%E6,I`I2XmqA>c*:<?A%bcBTOR76#07M+&icbfaIEO=sJ,R[Tbd[4G^7ueBJ,67u["l?CNWGR;8i^3V1=noD^@n\R:]0^]
%/BI:(UAlh%_;G4?Rh)_&Ms;cG?S:6N:N-/d95iI<J@g.\SEB<B_HRp%/j!JoSPYY=\4_5;eq\bAN">o5i?(#Yn(kDH5)o+T-]R[K
%Xgmt)]/u!3s-Nu\nEfc+qY<<\o,f>cZaA&e`lH+EUn,NI0ih$o`l>qODQ[L4/k4+[BqbPTBd"EOe&KM)h0udEYZlV6gUqtj[9QBO
%FrNpF=:$%WLMSTorm4C$gt<nAnF4;BoBet%2[tl)p7e#XS#-hdc-UcF#1q>aB'*0W9E0F-r'*rDS4NSHl8=&*nKM*5i]7#c^\Ra]
%nbnjMIS>,R-@Y9J\@Ck<D)iW(;uEk2_$mf[48//BmeM'Cpd]>E^LL7a/*g3GXTCf[i;`\DIsDLLSc@TsNlnV]Re5@J+Iq#O4jR/I
%EgjHqOG[rK:B1:k^Z,93oHfk*rr1OGrnm,+s(0W.[Bn]ejip$fcgBld+0sGCEBmbY:42XZU`Wn2jtA@HF^oo@50'Rtf2J?6n?Y?m
%HiN'DRo_$%J,0)q2a?E7DuTD.h7G=*`8Ii\1Y#3KG5q-`5MO@+?,:/<B+=]e6&YaNs/[UJ:Z(@e0D*nHX`)sr\JJjo+_=k4LCibn
%2Mb@tQeN>p^T7e4s8>SK/+%Mdl#bD?mBh`3mfZO0'lLV]Dc>p*!h5>j!_b]`pnSVbEq>1UlF9Q`2b<Q(TT.V%o]*BW3DEn"W9"=:
%3TpbjfPF?m2N[g\8@S;%mHeu1/SVQ_9KW,XluN'5kI09,EkBjVr,O-lf:FF^#lU3biP#Q,4R=a/7`G+"p3CPa;/1PYdb+Y;2aJs"
%Jl2B/T]G.t>3\.qX`dh4\"jc?0])5D0@g=#/nVPY4T*mdIQLb*&5KrjAe/+dc0VpM!-=1h"TE?8eeD1JgK@eUUkY^@8K)rp,^&""
%,c69VV@@/r.:3SgI7m_`[Fup@3k$QnBU<Y>dh:pRB#?nrT48@-8['jBDrS8"MQ=5>X1]243n$(^%`"L<G93'Y@[Ca>=BCi@]A.>:
%\J3G3[io;i/T'P!'K64h]hPh;e$Rr.@daR)@ioE_Ua>?c=#"%R(_F$kp>dmK,k*TpJo`3%0c]oqnW8!5[I?HQ401kC[i9@k]W1Xm
%,h_=f2pJhfHut6EpAQBX#ekLFWD+2C$oCX6)M1]g,VllAh/%Vo+M)E8YC%Y)fF1A!+(.aNUS\kk2C%SFeAGi+48!:\Hh>Tq1DY0r
%n@nFF]gm7T/dh-I'),XS*n^+M;fh`pTk%LhCZ8YY5HsZ3>Ks3DhsaYhZ+3Y%.l0W3ELSo2-?Qo'?r,Ib_QhLt%2:'G_D!'KnF*.?
%nW;>-g-TBrX)hUlH>C]:LL=N.k7++uN'3YLFn]*oPdB/@g[(Jdj_b06g<5/TUB"fN"D2$%;nHMR2JKW:^p=iHGS<,PnG?gM?f,W]
%h_\&/9P'XAC`%Mke%0\Uh:^W<_N1V$k88A/rZ\p->8Ql_iG)1tAm!h(9Jc"V1,flB?)h9s^J@I!M.0?m&I::bec[lkd*@q*F5\S#
%;i,Zl0+Cg+(\lkSZoejg4p?2U\D0t#3IsG-Vku(N+`WI?>._smI>;^J[qmS9^hlFZpqrLL`7Qf0BP(%M.ir9"fuJaG`Cfhka%K0I
%2+[*d6HV:n5sZ%7qI'%s.=dl*pO0^g';dl=V8\p@84"<@L?U>&h)Or*kQ@t4*BM4^$=1;'lSDaQEej(k:@)TK69lRZO-at%hDIW:
%J=DEO("TX!D0S^^;XN&uV@,AkfC_-!9PTHYkV+Q$-K$r-42Qgs3&fT<jiKDE9[f_pK?EBlT`18?Xm=rOBrP##aJ1$QPYFE%DgU2t
%`'8E`(#SCDl_Vs#=c>YDY@kc4@,h9GTG]q?LJ"jZn>^*VS<OneFtR!mq82Zm=,119:,]d\_oW&N)%LN@]8^f$a%TYOltU3gae2YN
%L91b/Wc"-Jjf3%pS(VRin!cuS)dd3t<'FQAHA>h6Q!,(0rG8>jL8>bVM.XeY!FXa<3]+'H/u-$q!UQ]GI')g#G\iMXb%1riY)P5+
%Wj:>,S[KTurF<jY?!u*T^+J+#;(1^>2g-TA'5UcJE<OeD1+25R0`e+?!L>"$]n*'fJqTP,k)6p\j)Wm27:`HYR6lV*+6FAJ'(eo-
%4n/o,N8:QuIlMe[)C?e"\!hq[m56F5(.-YuR'L<2mT>i`/Q32kd@gdLO5_)0?!hti6*f/sAX^>82F=9dHj^b8D+p/IPa[]BWms=D
%Wn:DNcgTV[fW*5EfGj>'+JlfF^t^";A5>M,.@-d5]q$UcJ[K1dC:Ri6_#rBj3QhnOj&:P2i<EuONPk,Eo(D)kD4I'JLh8?t'RTfn
%9,]/ierm#%_9ep%Pd(jt6>MHCA3<\G[r#$'5a-qBZ9_!Q^>"J$fda,#(\TZ9]c76@#mr"h`a',.8%Ef7\!@eNfaL!G5R!4qjEo:m
%XJENkI37ajA^[#Sd;CH#cjW"cIVjLT;s\48o$T:nk0E"XfJ$NA>LDsfh&=K_'C7\"K#25:o6%C+MKYj'O*5TNB`i)<C.D(?"OsGf
%LL)H1CSa7eh3P1e:am?0#_Hd%m`,6MV3@`E0Yq2?*D2)#';cD>4Tn#IR:&_4e/akGi0l_$jc2T`]=3(LO-?sW6I9C4gDcVN7r3so
%hDN;H-V<^X@hfsC2FKWK)CIL\6G)\,A*"lXI(o"1hNKs32H=UQ_]>S:X3e,K4f_:#oDbPUXaPH)oI#OG9J\m;$Dh:WOYU/t^l7[.
%I74>DKH3j$h_XKg+D@,K-:hB@2n;&Ofk.FAb>TqY7KVd_ZO.@>?F7V-dl0F]X1>%*^kH5&LRej9B&:X[:M@Y,Y6d"*QDN_[.(!-b
%L-e%+1V_,<_+1j]d$frO&Emje^UX]S_p"4@=N7;*L?rT6Q$0S^&I56m88bMe3+JU/Yk$E.lXRfc@>!0L^FV_Vd[j/J<psc/BXL.A
%Tp_SNm3S3o_T5sK-75$Me\r*dVFC<(Y_qI/I7aJigtTB1Apr"[9e#[_WB$Vg1V?CC%s0]$P[:5TS@^4o]Q7,Jo=d:eHhWoP3g0N(
%Fo9UT-KX>3jTNgq.i8BkCK*bgTKcZJ+[h[Ofb6!=UG<!5@h@Q\[c1+;f%W$X8p,o?%+c2A]Yf<-+\msY&D64!f*]0d_qdjF4XV^a
%?0K\A\_3kK5+p`E=pMU-'@D=tODTT8cse.eCkHVQ8NM-NH\`ss7V5)jYD79lAsC*`1F^po30sW!5lK!h%eRP7L6mKenW>imD4@nc
%"%RhE!gj?8ihKFZnF`o,V<\T.D;]Vk(XX\9Kdit4m(u,HV'JF\b^m()X3@*4g"$/tXr&q29LMPY"oStZkFD/J#.m?,2D5CfV^@MM
%0Lclrb#t(K]Z[07&BfW^K7G*m#\^rh=.#I0LW<`g2J?Jh1O9R`h+!V8b,gKeYo??f$.n51@E,Zs)DsbIZZI$.c!rFF+Y(*")iTP"
%J6nQId)2_R$6ImTW/,7hfU0+Uf`/T=f4%iSnB`I\q'K:klk(k/_MXakB$RL@Z"_K!9s)7:=k"tq]iVjQ1kS)b@0LQ?BL^1(`YZW3
%Y)AX4,@#gdO0Orfb6Sh71EdS!N`;M9`EpC)=K!`:$]T>FG%d/&ApBOG;.,s3RnMU\Hq1\NHe>VJ)CFQr125QYB.'+rWOids!+""6
%S?6C,*\ffdH.A_\CBCW\=<>:a#/N%2.dT.u>i_(p)t$Z@#qgm8ofFbO/0Ao7Y*tW!0>.fadGWt``8kTVAjhR.pZ3HY]lb=uQbldu
%>9r+hqJKK+$ITm(YUSo==);hAT0Cht)r??aSo&a`>U^Bs].YI!rD+[.0nW-0_$JY+Y?5m&[0]e`?^CRnONJGk=Ut0j<tE,4%1J]&
%c/T(TSDo;8moVfQ#OoGM1#kQ_?>M;^!p#Ul><G*f)%Pf*BoZ2mm6aT.'Y'=-Bu4X>`+cDiLSL4kPS$:"_T4#VgJ%(l6iC71oV_p0
%j+6X%<$6`Hf5aaL/=Ye#$,[Q<L3)URcnM]`oGBJS+N^UoKWKF[[.5pUktQSoU_rWG8iXfZW#,]&^e`CQ\XtKH^BJBuZp'M6fuNta
%30ud"JOP8!39Ig0FL"VW7Bf?oSVr=,*K:7@aq'6'\R[VZ<k*hjJ^9T=1p\cNeEXOQ`_CLJ<Pe>*&S''>-RKSTVEhnALo/QRlV0]]
%3#<"Obk7/0U>PA#6!K/=:a&]K((UJ1O:p>L8b2^Z93R,_2`TAN(L?*R(P9U3f0g%#&f]JC]@C3dP*OT`#,o/mK"u]P1r3XV[ln,(
%Y@sEf'c%b.+;#qf<&$6>*e`*XRAF1<QWFc<PE(<@hg&>!M8Sgjl]UaD&Keq2>V59o,\BT,#A++R(_P!'k0>j@,b,Z$/u<GDD)"nQ
%K\LAAar-S101M<C4Fr:6\k`bsgsh_):f%rO8:\MMi)lGi'`d++[^$!kTiRMs*.^A;E^U8F:sYrA-^XhckL%]eFq`=MSo/4]X[g<r
%&mcSJrESY+E\[n%1,"4aApglPb+.s&Lr*1.Ao1MmT`OZfTK)<J19A8$jTLS,1?*Bakh8++>j[@(RDDX47\h_8o1o(BahJ?*ST?Kt
%n1*F\ZQh_QH@pM^B46l>C'4=K":9@8kmG=`h54THCbdLrm.mXq%jhf61`]Qh%h&\+?-ZX=n1]e]@9h8kSqrGDGV>PPJ=5N]XUB<*
%_B;QXM3+@7krdd9UAuH?'/ZesX5/dq#?#8T-$^\:@jWUN/JKo(:-gqcX3hR7AV>F"J/g/i1P3tJF>iO+B8LjBVCe=^\Ts](Djl\r
%PENt5Z)`&?I6ROt>W\-9+lPKoSG\Dc)$J165_,iER`X)2H55Sq-pH%@0uFjG&a!jqE!h&`Z5I7`+\PEd+$()p2a$@,L!A^k(A[RY
%G;^"P3<Vn3(hTeYXq5>^>-FBt[8J7]i>RfpRa5DTiuTS_1:`1tkAk<+!sI&\=!#A;V?thM&2`]b&*C8<,A[Jt^c42@+Y5,RY!Sa'
%_`rcCRmgA_RNWSIe[5KC+TtbS-=GJjJqj3I<^o,RdCG]Gksq<Leq49B`pmdL:IQ&AgYpaB?u=\0Qj'uk#4S!?.("5d>JNeq&M#ZX
%c!HJ@la\N-QJiO`PD3:6bsi/K=B!ma^Dt,DNG>.EUgo3N(eg)I8VI7+YbqQf7l*h/Ui<l%i9V[;#KMN(P+<afVR_`M9:jfq1%<>5
%+M_QeMDe]P%]:aZA\]L:#MY:_p9",ddu(:;jiYMmW<HLV]6lV.eo]"s7kb#=L<5;IQkm#&nP)V"eXPkCBb3)TCgtD8Gqu6OT]>g%
%E)d*,+ZZ]_&.!38/fc9cFb@Of\qWV++6QJ9dOi5r$16"9*Adm\V#/6?2nOi'@K)=aYE;sh1ruO)!Z;hcPH!J>Ps!@(qd?crB.S]I
%[m;Mq.qOt`2.`4=b8-d+&*jUd^;`LT&KkX[NfrJ4_6hlcDSX@]J3pHu.GK*5LB,3l_o0Rf[WQ-p$Naqb%6JoU0%`8&*W+:J8QHg_
%GuFN2ZNPQIh:lqcg3qJQFrO*h8<Y\_JH#-3E_n^@OmOM<#OU_c+Pqb$#^J]GW*3be0a!65$gd\;j_?ro>@$2u7=e1^b22&U%Y8GN
%O[4"nNl-1n$e[JMFNCdCnCNa)?VsZkboqY&@h4DE)`.uM@>l?Y!tEB"\fZpA@^OC4KI1(dcAuF0%pB'J4b*n\aTs[^5aBE8101f_
%3&i-b".kbA#64,2:ltbl#>JkW7ZHT>+5c#gY*Ta+,T'@H^.=a>6#-\W!QK0X]>)3,UZFHb.mdKq&mJ"*&Qt^GS!O\%5.$52`\uIp
%aA*iucY6SGO^a"Umi/Rp3I>L.jQnqb`R$]Lo,Pc$'MeSuW6oQ4&6:7h.gS,M+ZNr`_\S5_i6Kh[_j_aI.=Om2:Icr=i;h2\.#7l5
%e?kgIiT3pegDht';TJ0mm/\=?<\<cS14qJU#G!1T0H=p:LlqVbrAc$'jqaadrFU7dqG^4NMcJ2B:;gDaCg0&Q<8prH#hg#LBmfUC
%2&YKrRh@S4Y;!L/@Q[\M$8]YE?#ETn$!n;^.qA]tc/Dl0!"92JKj8<E$u%4*jIHgj.Ja4a4>l01NlX7+(I0/E%"P+A^*51_e"6,a
%4%t]l!1[LtaGpeDd]-7[?S-UE0()@0!SN+%N!Up;RG>o9"[og'pOg)[B#9TDgu;&]#X`dClq2BK7'a]Mcnq#'_J!;VRSp5!Aq\7i
%K)h3QjhRt\'/cq>IQ^IL,/4E@(luQSdrq[B/atcir8Mn#WL+S;YJ)]O)2KdL>SC(^MX)tfXm!M/+EEQOJXlq)W_eE"6gHFZ;e,q"
%].FQe&f$e&T#fh&]Md`&pcc@N,%#@OZEGDGJ`R^q1"LtDB47c!7'^%[9?2jMlYMkCZic;a&0S+(Qcg/]l(CMW:UIo#A7S>eQ7LR\
%^:J,QD8X"V(VrW.k!S,^:K^aBLCgM>9tHi5B##+#_cHmi(r&J%(V)'4b"c)</Bi^PKiO<<bh9B4:f+Yifgm0b>ulIoTbrJ1$4)JK
%3u&qa^<'\c6,pRFj69$G$<DFh9U)QPfQFtmaW)j`g:14JPXgKCb9I/\eD/Y"?4*8MNl]CM78+Bo>LrT.@8r?pZk-9'*?C!l3BGXD
%D),&5-I&)+a(=BRLWDu?cbm&FrmTcqh[B>tR*ACoN,>o3&3MR?7Xub6m^82;F[lXB\6BqN0CWNW"(<)l^Bj_qb9^`NF*B_],D:o/
%.Jf"5+0=3./8(+A*>hP)in1@q]qu-`'uQeed>Wkjm&_IAKtc)X<a/Us__u*`ZsI4H-KP;1&T3,G?9DFr=*V##DH\^@af=9[#oU).
%fmtE!JE_g0kYj01!CfE.E-B+=&s>skM%B]BBo^sam)1Z5!.9S_6/)g&"`B2b;V2G],T%O/E6[-)=e;Hl=83djI\8b:);R-F$2;O*
%BL^?Hp4*YVFDi:P"]#.U$%e[dZX6-T6ElF0B171XOj$];.mc2B'=0-U(2a032Z&nN;0\N0LuP)_(!GL'@WOf;*"c7[c=f`b2sB5.
%5trI=X9l2S"!POYSjH#>G.U)nS2C_&\Ph>d$k@/I=WbloLi[*>nus_&+LM]^`bDq3RdPA[#t;iQjWhS")Vj3;((M6(Sc@Le9*l:F
%]cuYN/C:Url!!01NZj!U]]Z9ne8dM<]UbV8g_k(4(p\E'O:kUM,]]lS!dTlrrhFQ[J-j<=]eVf/R3<Q;,TJEDl)f-2jK&j44:3Ac
%r(_AB!Ec+<dApTu2KQ+T]8X-"QT9+Us2tQd0G,gD1Xt:mWu]uaP%/e$[&H]=4EU>=+m.q<:1upXf1nS[pTPq*3L@DHQ6Go#=Cr8C
%GSpL<D/s]b6nYWb+CMRJJs?i3STZ86`f,HZ":8pb0O6'qZagLsa8lbO-_-b;+>9f-3#U!5[V7<Yc5gVK,ib7[#K.*u6C3<=2@4>G
%b]k7CLM.K$SQ5&2o5ObH^=A2+"A!7p2AgpLYYSll+Fr->f]P##>8IRG'd;<;Fb>s3kQ.Fsn0&f)_$TRk2j=JtK0sQ$E.JHKFEUn%
%>^dgJ:S>"p^u:k)?Oai95`ct9AY98O(i+p>d$P'6N2Is''7mST[A2U<R1I[,/eqdn-7=uS"MdPPi7#<(k2q!V+l!B1Y>r'8J1X2(
%&nspL3qk!$*8'D^ggWf9@F,@Sm(R'4i(Rnn`]VR'c:Ms0-C!\r#QVTf6!.er#eFEsbC6,[:9ZY?gQ@rl6WP5fG]\7d64@]\f&='7
%-Sfk+@7!+5j8tPuo#\fc,77TX06&;hUgp''R(h=DXq)h3_#j]?i"2t,o*0$09hu$4WnKS>O7P&3cdb9^K*f-=/5qeKV_LCIGm+>T
%_PnmY$E8J:^8oJKVJ-35V'mA#r!E9k7)?CU@">Y1b*Bk4eF8;Cq^*t=iLR;VUnA+"5/2tk"MNgNTd)5r2?7A4ONCUl*5hLS5D5-T
%-)=e>9YdkX"qJN;'NCWJ`AH/VG1GX2l4j>]*?)14ji>I3^+$AR@J>20':I7l-Vk51/Dm,d-+>\sJG(!=+-?'cKhGYA8AI`-iXrHm
%<2nQ3IKFJ.ZEF5tc(G!p_tuB2Is(@Xqtn!,YJ0i'kO1TRbMVJ?Ae*Rl3C+?Ko!4-+6S+/t`3Qe^4B"iXJ_;#5`UN5G(,6(b":)ll
%1R.6T%AIMbft?C$q6_FN8N["dD%,k(Wm%0RZ^`('V#(r@2`Z%i@?0@pLH]``]A,$bK'fT7HAH0R3DhV%%g@t0e+GVA).$aU;al9<
%LZIR$--&:0'lL>/K]@S*\O>*>B.Z%oWt5s-6OCqaHB`t+<Mr)KIC7in'lOP@45<&[)WX8B!:oRYbX9,rMjS8kP">3uOop,oO)*U=
%N)QB]B=Z<LdcI$*\3gN=.u,6mf+Os5Fth0B46GO8=1XFo(<tP(!FA>`kBF)JrcE)`m0*tqZ"3tT9i^hAD*rG3lXD;)i$Fj/A-0Tj
%ig7nAD(L7*q\7rkW:!jJ(ttIhGt9g4]l3t5?CL;Onh<%2XaKbdZ!oPFZ?PCI;%g^G6['eedC@Uf//K/,%WN9HHui>.a8k-9,F3%H
%)hN-p/%jT`fc$I0TNf@]3-1E(Qn<!AI6356MdrUXc';l1A/l(h=#0_OLjGjg^O.p(E\)U>QR*W`d6'[UNp"6!^\]eSbr1(1c$bpD
%Y][_u@DKbV``kdV&QY8`gedp6X7MPs<()*`i1I'rV%@mOV(:66%`<mVp!J^)V358o@&0HI@2V.prGORuiq^YAG1mX$RW@(u78Y\'
%eZFUB?8+ELEl+X4,jV$;LV"!cB64U$eW'hX_Vn`A+b0YW\lLSpA$si>k@#YiB`X6i,q$/N+/a#ei2\3?M>#6)RGK5fIKX9;ZgC11
%3i;H+$m5V9&c>&e"71`Ih"+_IE`LJ!#ZLn,V/.Q15n5^1_#IB[)T1MW>)A#/$J:+r1Y#6#Gf&2ml8mBjk05aV0Oj(Hrg>V6mq+`2
%WqSt8oY;UkL&Q!d16+/AjFVOs<A_L2d;3$BQ):omG>RcPR.AtESP)K%prprRf]e55^c[EmM<)^Y.l.R/2fKh[;.@.0Z#=#&ZBbsF
%#':=q_PN*Ns!okn1olc<K?Ia+7dZS\K2"eTELtn3&&[(F$tfZg,\p9X9nI7EZkqjdXD?m@@tlF']L=@O2@DQb13WX.]hL!b8&;fS
%(f[`j;9I&'K=TNsEF8/:$5eh`lo^oW1c.ZU^=+'6oi1(MNXGAO:J/`Tk#(Z>lVNiu7fcHf<A):;1jU4A.)ksK?B>I+ZN5_U"/;AU
%)mH6p&YX4R("RclIUL4D8@>p+ODBK'j+<4T36V]\?^$>Z3IHP`F/H#uMKJ?2Mq?c/.m=Ff$*bp[2F4F,).b0e>G"JR-mA0BbL,>f
%=a:BB9Mi[$_*SI#ZZrS^,q#X`'$/hs#T%k3U7o9EMjQ[j58X6O/L^^TEqBVl0u_>=eW7\-W!Shrn8sID[ZZe2'JPT04QOPK"=#'@
%?4N3Va!_6P_n\VM9U^pjK1UUc&He?E[;5t"142?.JdZ@jnj&'pa`GOSNpsoG[F>PjO,+eu$huem"G(+='`_1[\dOPfR_\lNf]F<6
%7-n;E9Ai@bE@U9rna;+C(kP=^ILX8W/G)0>1Vg!k(/K4M<5j25#rDaJR$\/pU`";q]*s`jNIr;9b>F5p1Vu&sLY5$W`3$7+B:!n:
%2'Bb3)8Y]sr66QJ$\E@8iIs8q#mPc9&O_kY*M[+74*RaboF`iVFI8'#*,?CeJr'86b&R7p"nI;fL9-c4Sdq]Er3e,2O3@hQW<3fa
%\5Pnq'i-LI@OrLh\>>24,?@bf$rf4@<FX'dFeMmE$;+Kt_NGl?P[6$OQBcm=GD=MLnr32%&/fCk5"+K5g[_kt+j:+%n/a%\:JAq3
%?kPg'X2kgGF:a^#Kd/l[:iA3*"J/pF!S@ZiEha8i//_h\0JhptRX)se]G6DpRTW1k%>H\l>E`YQ=XT6X^$<*<'ILnJ"1XtVqIQf2
%$k?sJKb+"]Lp=6?3Lp$TR=sh:+KO%F>hI'"*`[]G`Z_;QP7?bRj@Q#=@m$H<P1PsL&:N/>\tGK+l!?jI=K1QKlmUHji+?E='5R:R
%;N&m?C(ptpFVBf;ga-tF4e:;@r3moA9qNP^IU[+%JF$QOrWoX2=*p$SAAsIiQYPJN[#-;Cl]K>iOe8tL!cZWXoY<.1VS7n>-0K=p
%Df!8s6crXsn.GoB,KjpLU&ZV#I&VdL'GVTJX+H4\`fQ4Uol20:)p4t$/?d4+7\jBE5:k.FQ'ffH<ErTi7-?"P2]Qj->DA8a`hSoA
%LF6$ka^o(A+);:\"BcBE:mf5dW_d[m?EsVE8&PuF^QMSt\SC%qKRLJ]A!A1Xc20+B(gM60O[l6gdI!nsPR16VML)l!AkWL4)MDVZ
%WY^@V8YH2+?A9H9FZ$o0&r$.ngPj,-3Z`j*#2l)$p/=%(W+C9<p?omL&.iN+@V/#tMl4OS+?Jkg1*)#!g]T'tEFbV&k(r7\`ac^R
%4HW2mO@4f?RFf+8+0\7G)Oo?\qCLOcs0^gJS@T*7dY:TS&0OWq]Ei[<P;bOsph2$r6W6a??a3io-eIig?,\;<;:)C5,5*8.OOa.W
%MGpEtf4C4O<n6!p-nJS]hEmbKO7p#2Nq4Kp".'3N786i'L&_5^]-'@Z#D*[mK='nlRA\#@nCEZD;44gEeDmT3-0]3rTk#^S6o;[`
%q,doc`'Y8PVGK)$CgNIKod_>lF!rO]l*u]3+fNqOMf$rS;LkSEANGF8(.RQXrH,S&&qpsL8&ft2;H)?_Y\fE`+aBtj3(7h9^^3iQ
%!fKp6GDXK!SQKo_SQ8^E7NNc9aQTp_*X`!=IJ->P"<?;j-I$;G5Qg9aX4N'pDICmoI4$S=GQj`Z3(`-B?AYc2jtNXuA5$.FAW_RK
%jr51N=GAY3X\&31>,(9fhi7F/oC<!VM]aC=JV&EWVW=cf"^U5Dk9<^@&m)W`e,W"iR?#STBW(1tOnEf`).22Pm5NbrJZiL]HBlLg
%d!,A(f.]_j1.b+-dKZ6U2d9^n14,a/T_H:pm,INA@k,2rF_7N^cD>fpW";99]$!ekhVl+R;nsF]QkIt,>g8(@5ZJRoBF$)&VLh>(
%\]Oh@n-YhaPMC,qP+>1jL)L9H."3DWIF_VAK5D*lD.7PT-",2c+@Jcm2aWJ-Y4q3mDnB(sP$k>_BYZT[+E_]5L6?QM('8+?g;uLp
%g$'e,n]fuT(djCN5cfql0(P:KfqA=P@:P\kgr21lLIQSF6_!L@7tj2Zi0PVVbhojLc8ocbIk@[s7;@q##S_HhLpn]tp]ihL\DZ9n
%$u3`[O:qlg+&d&&"dW1>Y.DLY0q!5rW6Z!L!1F,T=TAh?nDLm"pGLEA^hEHVEuH+;mM@LE5%sbnUX1&r.\[5(VF*'&V3ssW[GZk]
%h6kCGU<\)0J\7nO+9ZTF%F)M-f\@0nScQ'&K'`[r>LKeR;MDn:#2k;h\)GOU,G.oQpbd>MS@=+P+C7PR_$L8_dC?4t>=<'[*-@H*
%,oR:mfd!ZOo-*UH?!%t8J`L=k)_;$J*CtJW+=!W!e=ISFTR.jf="s2=LEV6bOhM]KZ6gfa#8Dqk9LeXh[FLLWf6q&c4$>tFm)Nq5
%?7O;bMZuQrSe9j_5Vg"U%d,iCWn^uJSr(9M:q>!F6+i3Ciq2KY@*HJ&@Uog^JBXZfa>!pQJ]otRdE,Z[G6VCPMFlN?pq"dp:eM)F
%j09`"`AkN'I'r"8L(k"U9BgCW3"ZNSZRTO<5]6gP=9/eu1f[UXfoK6daZ733X.Y6c+8c/1TFG?j7l-Yk8.^MS<?Or-pClCf[t_%q
%3+OFG:QQ><>e4%JkQ-iljPbL!-DpR4;C8Da:T*I"<dW^o!Z1(B>pDuR=@NknTdE+aO-i&$U,$r<8%_aLREF=$]Ls*S+`Truh$I3h
%,&9P/`n9<jBY"j2*5t@"YVXQ2:(M[14dOVuADG4&<db%.O/''c*XK..k4BlRQb!u,nsBLke.l"cGL3r;M.61Qo(\g%72$ifN8>+"
%/uug\L\PZ7J?d<(1KH.D#rJePRl`U*(NQ)X1/e?8#3)P/SDZnDr*K?rn>4'g=d@M`,nY8$A$!'Y:"b"(V[UiaeKR"J%1f/T"1Y*H
%cDX)l&1LXsofgn6."(,k9ot\KB$\Et8PfGd!I0*7r)AO\>_`#QZc]`m!/BQ*iWU2L,_q%R_WH:fR2UtSTFdp]/J3$Udcp_*E^re'
%h.Ld"eV3hsAW$ZXZ7?G0,p.EAkt%T4B%+X>gb9C.q%%VVhfuG&0Gsicf:W$>oiJ>(IX(heB@apqp#uSYo&Z@MT09jalIVZAq^&5&
%s6T]rDn^OHom-/(+5d"phr2V:Boda6^>nCPd0TBi]j0f_0maR#Fq0mpk01YaN0k?I(-mq'jutE%GfIIrO'D0247b1C>2WH,`5hAj
%7i@6Z(p9uHH-m\N#@e84b^'[/1'nJ^oGHJ*\&!?KmkcoISB#FkPCR'tS@Jm@E>RJW53"^/[M!.]6$J8i/gq^YG2.U%_t6*S*<Z82
%C0=f^-lCbC&g8TU"f0FFHr(iUV'PT5YZmbnK'9][-eQ-%*7pil%\D\f"$N!'k-u0AeQmH\Wrm71jr!XCL78n%EV#Ih6?<PtW(;W4
%jd:o"RLYWnKRop2c6UGdK]J:,NapT%1.;c-,2r^qGfF\23'_6=+?485$!m2Cr4YB?2l:Q>KA.6@+mVTo)rk[MYKrSq)\R$frus?*
%DR7-.$Y!U*Fs<J:o,7k4FjV,rcMkLZNVDBsX#$Y.I"gRi.P@p<$T/l^``T.PI/'qL\=E$ZTJQ$-6m%Bp(R8i=53&TiE]R\Ea:2c@
%-C\ucB!Vl50hc'<@%GKN&,5mOb.(M+8O#!KG7T-*Og-o$%+PKAnap;($]Qm`8r%@`$n'_P`j^Q<(uNfP;Ac/<Mnd5=4M=S,$&i;0
%_-XnG(QViNd@`/4XG6<bm)?JYGT%Ch@XuSYBEWN6l\(rSK"ID.,\cg%>gSsEZGBhjFj`j;a^)PeD\qhNU>EsZkV]9-f(tX>_09?A
%a+Xn;Q\ug4`H_=eaTcmmq&E(RT:(V8"'pMg=>LnTYYJHI<?-Rr$ZWGIZS$]8#\Z?eMm$qq7G`a/R,\Ao%OWm+OgC*A.n2HN]Z&>%
%WBj_sXpZG?*(>e&K\!>s`D\)@_,q]6;\0^?O&93XMBTq!$G'[L-kK;f[US#^F,&H"VTZo#Y%#TWGcUr%"hp%Zg_3WVKK%`@+tD^t
%Z;KsN`E5lD,[Y5B_%I,o/6Iea'VfTN'K9Yi\W@LaLF`X$0dn(s8V<cT$kM!oiBgDs4K]G.`Me.'Q%G\Hh`%fs*gDB"N=5fOSY)8L
%qD&gL1$f6LqIat\dWD=jaGG+P."ds*0m8MJ$T0[)N;"=9`.1YZ4OD762'3W@ip'N:_+P1D\ZTrV+u;bG\;r-j0iA3U%*)=Ei'u@'
%?(Ak.hSj\e`,gO70GoY7>63k^KZ(9UL\S_V>[27Q*AIWQ[Ht_!%%F;cK"6sTe#f&b\;7IE90l#EgmC1_SdoJS1-Y8X,pGhK#67;h
%+U60q'8L:qq?:[qZOdA@7Z\0;9dg')^4%o]qYa8hg`55j%)fXg)?671\=o319@K;YQk^e9?n#]!1Psda22Urc*0;uP0IlWdT8S%5
%V<rS5`'GRJQ2ttf'+[$G^R]!SpN!JL_b@1A'0\sB5r+F%B5e@@qb@b^`=h[2jf2t5@ANoh'cVhDS@'bm&Wu#JHDVWN_&sMp?lM#]
%MmQhW2V\im<8m)X22nUuXG!5b#*JF.`aI=Q1iWV&Lk]@4^t]?i@H\Q*:7Po5^IMpA=GE;Y*eIl=.6Epb5r%.k7?uVm@2M=<f;PV:
%*QgVAKqVN3Q!>.a)YmO,>8V<Gb`AD4#!EF*K.bBbaFN9)SQH`ub*hh['s>8(`J%?[8;jT&<ahXBS48b.#qWkghA8pqOBA742(41C
%3oFnH;&C:GSD7aD@Gp9?c&5DcN1[4(5%/h7ZWuaJo+Y,0YR+qG)1tR!D+_Dq$(%Bkm6nf^A"-(n4MmrYX^#OmOhJrtB'1;n74b[q
%JTnHHm;a!Q@:VTC=Y]tIkT0q\nA^Sejtd3M)ni$e&V2X%6?SRJ"h#W,qM[QSeJ#&,jM>dU[XN0#Dp"taWIr$$fDEB(bl,cshVaCY
%n%p!%[0pEH+:SO('+;o+%Badh/sO0prl)IR(kXa^0.t-".C,g$?SJd1>@2KgVus&X.l]VRn?VO-X,9X]WaHlIo"c#&"Xgtr"aB40
%`=n314udIH'-,m_/AWJ<P2N>'JCFOMIhb0ER3EIOVR%fl@71oio'=58Xm]nOi"-)U0T)B>hSfuk6gd8N4IO<oM]3LT"#+D?)L/#E
%XkA&/0,GBRW.BLe@C:>V")ik'Q#WW)`dAMf[;uHM"IBjMXcij*/0[jN8e-f;=9;c[)]3a#l&-IIU$:.2beTm9"?hq^"5C>ZDHsii
%oZ533>%!i%Qk@/8#5Sqo3._k^>(`N6$S*o;.1MWB1"aRm/PH.=e;^/_B;E>;.n^*pnE-6h5m`M>9c7#%?ppt+[0f6.TR+%IJe&^P
%BX9F6T``;d"*dbK!J?5[`DTPYKKrKc="`FtH[%Oc0WVoZD]g#"^;G!)&-6Fi\ciTudbSAFEX6DYf]^N\%)WO^\\S?+="QhL_WZMB
%,.r!U!"NF6!!C7s7TpMAHn/_\3FUkIMo)\)!aoCNTH&Ua(V_=4fpVlLG`46<IuDph#Q$.c!5q^)MXX0eNI6P's+3XHP'o`=:^Y\.
%4#?oR5(NnFia6@]0Lc;FDaPoRNR,PX2"o*9AENbWr#=NH`4nt/`4laS8"GS4pUQ]=fYNA748IQtpK&<)N(*W5WY^jNhHp70VSFr7
%hVV9p\\*0:E?+QR_>B.me?i)nL%gpC!mH;0(D::jK(h4/5]Y2sG^k:m?tUH2GFs@Nqb%66k<f'88s!usmB:b=SN0C^)F?T;\[p/e
%OpPG;,LQLbV(s;^qb&9j*`U,a$kHf%^cLj9IMeY`U+O8)R,to`reg'OQ@njs%nI+-Yl=2pak;gfU9HbmN%e@`R0D@!4BR*d5uaWr
%emG5QPS8,h?b@m8:kJ@A6\$Vq1[?\mFG."^kq@m*)'j7N?g\uN+R+UP(KV.`4%Oj@91m_<kq>iT@./gB2s"E_%+\e&[)c5dXM:!=
%b[5%5fi515Vu<HF&B(7?KnRtq=5%$Pjn]f:lS%7l/GiV`^Pjg$@sFmLAYr5ob'AIS5#O/]BBF"?XM+-&JuPJ($4NL`===In%G"nQ
%:8XTQcD84]7DZ*Irpm;M%a&.KLp[q0_I(66fYPDubHR>u8=]5eO.s#;L%9F_J*FfE4-Lm,K('RjM<$er#N%2/OkMqCbN+FGD\h.^
%"Jhp0Yl0UK@([WZKg:l]cLi-eP:P0:b1Ko_Ljg56/&#_l#P&nVGpW=KEtdUR9Y]r2iA!L_,?GTX]Fb$:en-td0-Xg5X?"HW^;F\L
%PPdaJ`6HI2(J_bJXAf%[p2k(OL>T?u@p:Yb1-!U"'cCegNhWd@;uBOsOY&XCIei+D[<@F7^+B3E6Li5QIP6W<Qeu4,#/`(tc4#(S
%r$hm"qI95"Nb7FmnB3?m=;rk$^US(55/Ha366e&B_=3@1&U!B,iKsF?+>+6?^X2bG3DT+fpVOMX1WM/F=Q5n3QUTtkG6c/A"O(1W
%3.<"[C>`A2Y\UKNNaE.'-/G!LQfq-FJ=PYdqn"](Y_@Q,MZMCd$d#UAS9DRgq;l$9%!@`j'\#MeSmP$Vf*Iu*J:3=;2j";Y>ZlM!
%,YBgoIOW(T*\>&?E6Fk0bqF1Lpkt^*<uWm<4_T;,<Mp>=d/64&V]f`&+Wr4,d/6eW9(t-hYGCkAK'8OK@KiVBrBe;WQOD1o2mL.s
%"OXD&6]gQ6Y4[4LK+$)1G#R/=,5T8J6sS5okSL2cinV0Od4_c]iqjM2UH8"PoDJ/@L\I5"QVo,u7(#\+GYoMJej^,.rsR)T+Q?Q"
%%Ur#>XV:&OT_VmWmgIAn%7&0:kP<)TnjnB(r1[(S5?rG^+Vs2jG^^h+ji_pu.:IV^_Xj8JrY&&ubB&e\12),fqk)>qi!u2_4K,?d
%T_[\aXaIB0ikYb,VXVIo96:rR/OAudL8sSJRU<]90gT&XIK@oAqI6Au`=N]u0kc#7o5-n!1qtRT$FM-m2+!U\i&Jt7NH\:GS8!F$
%V6(Oj^QSA/aQWNBlp&#`:pZYLn-@:Ca<bk24MT7T`)8\CYD0mKY<9Ra_JfmS?_!YemGReoJBQMtkEdXq+moDok\SO(+$@:NoQoWp
%`V#VW%\@%Q&s7Ifm)%K8KPq+R%]MWkU]ejoo;"Au$=>3[Z'Qug09hqR3[k3Rcoug'r9hop>Ih';6F]#rn'Ef5n;-*@Y[^e'B8U'a
%8uOF!6[?:bJ,(ho3d\I/qsJkY'ZfUmSY=YlHa0nr432k^r]&Yub5c[<R2=Ymnbp]!]4B4S4+)/\dU!L<Z:a@TmG#=?H6"9Bl/;7-
%Y@gnn&36Ylh)oZjcKRDKrc_uH*F<n2N4rfn9SpXfL,71]pj@iu6O05:cAV=#d.r\r_t_+2gO4:@+S4u\!=g_hE%mBRn4_q:?Ir?r
%P:s\K\qk_Gm"U,%nG#>+5p%qtpl5q"/A?prPNMU5inHE<N&leK@c5=^"c"a@i]19nI!<%HK#&8p%tqp<i7hc%LGOK7BY!h>(4Ru\
%1dWZFk^3%TBYg+MQSS(N1R3qXfH;u[HblT/['AFR@Y/g*ltnKO,.X.gFlH_HNqM21]Y/t\U7BhLH]]r3*etq&@;_e2.qpXq^1@>J
%3."Le0L-*8PeFSfN/_f&N4lkAE1/dqn*WALnF_rr%2c$">q_,lTUq[UQR-VgB27$)SE.W=]='>7WnuB'Hs9P(M0_JV_>'(0kE&H?
%]Hd,83OA>ZMl*4G5A84($BAGj'Y?'kP557hIT"hn$M-+\H@nKD_Tt<6$on$-!UaSLQdbPXE#;dV_Tk4X94$\lE*^"oLDNb,pG4\q
%OuY<Opi8npHQ_;cO?_4b:++d&<aPQBc9L7B<.oF1J$=Qj(K,g]'bDSsV&cYMFB"cJpU$8932]m(&N0pa@Ti'3,%nq.K[cSrH*P^n
%2$YWbN6rgf7i#)7cd,rXH/W`d=W![A]VeIoq*&.g2+SNY?J63?i8E[]Bd#ZM#D2ae_\Z))AR,Ed0*Ft""Xbr,/GD>Lo$Tqdbr[:+
%BdgK0S9+7MA>D==qrNm\aid3qeAd3+QVs^ZSWd.F]@%K!0;EP5l9B@\1?JY%-THCnR_dI2PBT&f_M+-hO&!GS.!_.t)3q9/YL,;A
%;"A@"9Na@s7J$Yu\mgH,%#9-8*BNd^;"@*F/f8k:p5$>m0_-uHL%-%>]SnJYD$rg>7Rrh?5;Vj_ZdK_:3?U&sJs#f[p>X<;H^6./
%jfsMIj<[;clW6DZ6L:a.bMqq4.<=j7OS@Z63>:rrp4sGH#^JkYf#Aop78M?E\e+G,5QuUN0_1sXMF;J7rghb&j[-uq<0]7k;u+8$
%bt@!jbfILcd@#r[_%[ZU3#f&o[+\bhKbb6,B4SXfOt'T/7%QoMBMk[qI5fG-)m>ue/;<WZW@`:/'-/aD=?0[_GS0.jpC_S\_t@6<
%nZm0\cRTm:ZZ.u=D]ce),lQ4m[!(EeKrh4`PIS9nKseb6gO37189b0>,K#`i&`!aeK7^SQenSh%hX::7"9EH0?EiaJ"X+j`cCa?F
%Yn[N9D6WKs0JKuCfQYFI3qk0#/dS&i;<$ZK@">8Z/acn"6M2l#mN-^iLj4,V4==6TG>Bu#89YA0&JHh(qq.SfX6a2_=>dAN>UXg,
%FZ&`4cFD%!oe[HCDKV2qKl<;[JCtap/p<9YUa4T95pP+S1U^RKU.DHkfe,C=IE][<Msip3?`8,KJDncWcEtd^Oj[?"]-)j1=-d,k
%LE`'',eFN)V2Jau0H?bB0*Jlup9lW'?,1Yfl\d)+n/aPH(O"WSB[U/H\kUq=T%_hVO"7OhlKF(%GP2PNn*ggX<u3/?`+tuZFhu_H
%c!?i>\,!bR6)oi`+:q+O3-?B4-nRE$@94gB]Rq(e-TO!J!ppJ:Y7p1F\(R<Z(FBLq'oM_23S89>]Q;XmV[NM1j#5P3;,W<o`e@*1
%\pkE!]$kk8$7]>sPtA0'VU>V\(@h6/dKR?'%XeoQ!e61`hjHtnJD*;a4$@a./@tTt(KrB$9F0PWK1.^CpHbN8*5m?ccpdIKrE/70
%S^+)L'Y;`qa;5%dA0ZmBgEVOAL$euZ?.<!n#$jhUnUj+dOkMY<`LtBsHI`'U.!3!m3l6hATo3KS&\k!c9sO$&R6pX-fcJ[kXqQFT
%QPBl6\m@@<ahbc[Mf\);3QjS<SO6Jhi``N*\hqdDY=Cfl!4eu6e#oYd_sW>9rIJ*nVhZ:q,e>dTMg#M6"FH'I3GFR_h+peFHN8#^
%'?)R&gc8l&0;m,b4(`Ibm("\%X9o5r4El,=DG]=B.d+h56(P'NLmCgA@c&dbGCr$P82-UfF(rJ&+ehRp\4bTeZNg#-Yh*+sE#C><
%XFKt8i$`'Q?(jQhSpf*bHRo>CY3LUN\lmh!P`QC=_O\jcQmBM=bNFU?l.ii8qh7+uEFeV\3-VMtRE&Rf\]gmMOkH=^J2[-oK0'kN
%^o/#m/o>0>igu#\@:[2N%-h(#s1'q!!/kh^&QA-aS]dKPFYW'VfG5ZuF'5^I'mjB7V3Fo,ouH3p`gLnIjtOD"bdk(i`KT%fp:I":
%`46HKmOl_ooLs8n:7Y&M"^K0BcDAZ#q9#4#7hm[0Qub!t\U4U&Y-OU0?C>k+d"1Tqk$2KTF'@A08.G'b?FY'uP/=4'kK\d3/mrY]
%.](Mc.sEVN('m82G:j%f>e+)39LQKJk9?h%(Z$>T5NQkgF"WJd?Aa4dk5ppbOCBp,1A-El$qad?G05Y5f97"<RIbP8X:4Z#3,pQk
%0,uAVi`o$BcBG4;eg9&-_46E?&L1'fk$7Jk_.O5>>R21i%-Ce%@'<h&F30)7's\V3J^d4E'V%1Mm9&asB$O,hA_45TF&<EPh;HY_
%!Sdi"dEE8FY-M_F=j4Fhmj>)$HRBQk=h?BN6E83hF)EJPCQP&HQNDDV(Znsn$+(*&>TUnoi68_oF)jIsK*DUS3sMjY^^OLBghUll
%0#<6(pQ.F_/l'aF7aU-AU8LYpZKEEubFmNL/A(Wim(%o0bauGB_4I-J+t_Gg@r,JmF&Um2D_A)li<9C'/i.7ral%[V;E/74BgO&8
%#'VD-F.![lMI7Kj*?=]O*RId$NS'fNk45u80JC)LU_L`=$f5-c#IWf2\F%tMb"fU[UhAJm8rttJ6V@]Ei6CB5o#16IqiFG1_237'
%Pn\g9S-o@7U'krnUkH_lF"RX1J#shm&2;L\B$TN(L&pM^\]jn>HrH=rfmTL[$Zdr3>4JV#c6WibfD`#V1M&4=]J/L]bE0\RY:6'6
%$$]>1@eas7Y:F`J`%>"#+TdS"qA+3+,tsD-W,m5R&lJpV/eNS,O9]n\,_E9Abdk)OR?MdU>hZ8iL'd!Iio8#\E+7*u_Sr%gQ"p/]
%[d$Dr0@IU@QuaG%k]5fj#aeLqbdfi([&dp&>`.35_43%@[GbB%,.,EhK3.>CU&^Sd%dI:a<CDub0s_Q_8ltFc7YU['K0,F]TnH0$
%.5#65TDd!)991G@_AT-__8`tf(ZO4;l<Hg6SA]Wu'nu1!S,A=TrNe&5j;fW%>ZKj_`L7/ZT3b]_js"&hE;,&BG?52_;<I9JO>"W/
%U&+d>@BKpKk]&I\!:jN$`p%M6Cf>UkbCqmbTA+H'=p7p/j&`E`\YtZZ<J87AY_@r_?@3QgXF02b-l9+.:_Yld0#DA%/e/(h:]PR'
%fJ?5SKYXVn9.j\(gK5H+-m:j\d"NY[&G3iq,K5b&muuKmMBNen;-J,da<fB@c&LZ%"iq`uMfj6Z%b&``Oh!1U6borb6/9/*hWrr^
%&NEA+I3Q]8@L,Y-d^B;[%M[YX1N(mVdJB7H(T'ZVTAcl]gkp##M\Hs9K68-Z3,qS'?supl!q?c;K2i*W!TI$Z7U/KHM[VpWS-O<4
%7>P0*[\1>)i>-5pOMus4e1AbX@`0AqDO0LO$b(-lbXI6/&DJao#oClO=UiYE\;5@YK*E-G2Hlc=('*1f7\Z1^$R(1rm0F2,1n%rd
%nW:_eD,2en\>\+lcT)"Y\J!iP3<(R\)&QgqqHH3q1:ITgYrki%#_WBW/W<8=+b/V_6b&C12Q+8X*UKN6m9][7@D,*I?8D@&h,uF`
%neQ(5m;]#9"YM2"hKH!K`$V%%&&MPdaKcXk&&)71,0=tumM<!VZcHXL#Z2pc7X-o'M!Ko2Or4=ud-Fe5[nQ1MG%J7=&=-$%h*s,A
%nD#eZO$2[O1q28_U=@/&]..9\jL0:NpP%ZDaMTS*9>M^S=];@eEJnK`<:5J!QCJq//qR<qi;iq;4(%d>`jjIO6AUN\@(-;.#7>:!
%g_Ns`:3O7NE^[$\&dW5VQs=p$`GCGFYkj=1QC%s9.@es)e0gVPc>&9H!*n`Ae.t@r)hQNSUmMG=#Gj#.^jAjY9&&:&#tA-H#KM`Y
%g>XWe&f3l=]Frks_.Qtqa$r$a$Yh,h][(E&.!f>'S-hi,9Q#,qfqPDP'CeD#bAmi@l$I7G,(P+RfcjA+pFD4TnsRkn6">iA+CYWm
%>C8q`c%X(o<u#L(%bp7N8//LllK9%;/b1At6fnO<M=u,^f4*YN"`^EC2'F!V.!*;KaaC(Of-92WPO:bD4'?3g%dr&n>1A29(<UHP
%B?[bXHpWb$2Yi6q]X8Rj2-jp3#BsQOMm[_I1`rO$=>TcoB?j\B9p"i#.;KNc%"_[N&&!=iogDk3W6\qRm1.K_ZJ+XK;-1&,)e@mo
%=Br7oK3_Ha,W9nm<6Ms6lTnLNF_/tMg/l-;/i9tlFO(Un/]KAdKQ*)X@XQ<SNnPZr-R``9YMI#kbMq\cY6;65J*_U2e&(img@8;3
%[&AW2dW9S8l[r@W3GmgMT..9aYpQbCo"n*O"9mRDkGC[ud^STZ]ObS)YftFGS/0M!OaW;KlVF#J.ORLXa>!V2gYU;VR*ZXi>+cTa
%KS#[OW2bH<(+HW<lBRbQN]dfP+JqSa3/lPKV/9OhGbLsfJslas3dJSQ`mF$_n@e/>L[WWrGaX/H(3rNf5_G2b`%68K'%/\Ak_u/k
%32rP_K4br^.\7qJfP!bf#>5?]HGaK:/m>LZ3*bgCU4j/:7SqK-ha,)HBYiF0`H`W$7H>F`7.AQt%Z#,2['i80;"MOj4,/X&Jq\BX
%Y8Qu<h6W(W%U'#)VWp&fgnBsOYZ&ogpBq(?#_RZ94&p#,bB@NQ\^8Y(29N^l$V-BM''-CbqjDdhKL%cU4_tkWZe_#t0#Y*3buV*s
%._seLVZcC'GGstaFgh0b`^)Z?*Kh'MZP_srNK,DC=Bi>NW&)^/-YEt,=[;Y3>BNfg,'m=tI2#$gr%:_nm=\Gmd^nqm%VP>=]%Q$]
%/d:(tn1DR3CpV#BALErf!TS:)fuV@.WFgc..@=_fn@a@(BQcB+j2s/>4@'lBZa6UW-WjusC7>s15"K97b[ke<ZI-aO@MVBnQm*?$
%fm.B[`rIC\Hi"l^ZE/,hm7K#>7OEeVJmEPGq;*<^jkKD:D@UR;iEVee/;l'8C-J1j(AG]ES1hO\5p3gRAT:MIPmg\reD@E%n\Qc6
%&1!+Q1Z+PA14iHu36.FbG!nsO).eTO4@(&.1]B]g$P]N&C.0L3+s.FCZ+W15gkAE;Hn+1p$n7?&o3d_-5e>9S7'^29g%KOWaHC;6
%NIs^/4(@9f,23.opR5Wtgqep6j5?"VJ[kJ-'XBeEbWQs\ZLD&>@2Kui95l5?4bR:,h4=RXOdPh^aKRIU/.jd&b^Be^fBgU>j@M$^
%7JCiaO9N/.mBODA/G\OXKMEWt(FFK"njm15`KZ7PN+X4uLZh\`&?n(h_B'(;9ji;`Gq?7:U^MD7fH(18([bBN1q<j\;od=il8f8@
%[%sTNU7#5I%hqPLIfmWreL^@C,*%B/U4D$e2msp?R.Bde+XgK!^aTUVgD0]mg'Tnd14C"7Z/ju5AT>^R[q6]\i:bUnS?^t21R@oZ
%1%tpLC[0P\_8Q^>&pX_+jnOKOLL_l;Qk`eIoTuJbJiFG0=XH0"(7,kYh*@=.>4^tY7X&mCV?rL@]kJE(!WBRs6(PiabYA799].@2
%a@L1+.7sRfVK5""17SXlhWCf61VG:q>o(%J&IORfP1jfhK8]%e=o695JAWc=.8JlQa'o3O=8'nZ_2T/sWGa,GaU3r-6K[IIc,E]T
%g,tmX4d$=pk=M0Y3(hFG:E^mN!7Sd>$OMuZ:/)\:)pYVU:oC(J9AoAMj_WZD&cqL,[UEj`EB3b&L0'AhY>a1"Q]88!PbVt<iOj[B
%i)6;5MX2$+#[#oZ%?EYU$,;cF617<0(H8[USVFhZ$T7/9`,+)oRN/TfObqpFaHMqYV4F)@n!9O6QSd6cVLo"=No0B(o>]5"eP;no
%n2FMHJ2?SC%g*'l@M:0Xa9]m/F`H,(XQYgV^-JUV2,\rA2gq^]^#dDc7I^c[MQ]HQ:,ER;lo%j?f8HpOhEJgD,:L70`roh<lmfMf
%fOTRd!qpKnILXq[JWP,h7Wu9h3P+Z\Njl(fb<!MHL]VY3L9X3>>'C?aOo')erWNp'Q#Hc$]HG<`4dQof"/[aMFEG0&@opVi`Wj*Y
%OQLW[`(#h9FNa/-ReF20,`<"BmV=tr?+4_iL<2ed)MPSL6mARTF/hZ$HIm]j%&9I-9"lg2FL3Usr@XQ`#9<jlLbn2<G=n-2(!BB+
%M1o%k5EaC!7J/E_4;7HB-(ZO]PkRGMpZBF(go46,8O,p]D1!s8=$OH-MHS^9<&qr-#7r\HE5T5u,KM^_C6)l5LiRI<FlMMp!a[uc
%HT9q%gt.Ph)c`e#'FK$iB3'7FLlupN;BI%rO.A!.bQ@;9</!POd<:T+E!')jBW2)hF7QS_\Mk'>U(qI<\?_oDC0kpk0^B-lL;">(
%LTbF*U2?o6-]p=?gSpo,g,V=43qKE9(1K*[_pHeHrt!m8E6a<joLRr"WUtd,Ab&L2?RC%6#WHAd]`8q/@p``5^h^,(5mT4>2XDP#
%h_[[-('<fVh-G884B[FDMDAZ/dL,IU`D#(f=A(1M,RF!/1:.ug-5BZ?c-Ar`//ajGi'!2Q)LTHHhimS\P,&ellS@s0nN"0n%p=`K
%W;I!sJ'e2;&>PEPd"2fbP=6sEI+:AfOWj\Imbh\Lb$)>Qh?aO5M(u5Y;+C.NN(7o6R9Hi)c7FrL9(t_P)^\8F6HDlHE6dE..Z@Re
%G"N^IR"AR9E/lrH8:nLTlSDIh!![KqAC1GQMVii$OWU3B5NG?T]6X\:9SsQ<'1RN,)/rg0nVeGT+N,rZaB!;-5aG23dd"pie#j5J
%Gk_u7E9@L3!a'S;a?5"SQk.=?Y;SpZ11n\7#."nTaI>Bp$g/.TBCVdr5gUWGc>$5tpWcilU^W5SU.g?oLqd+oVmsmLDc'bej\1>`
%`J1Z7KCoM]3_Yrr#BsnE^<Crjo=IN('4Pp<V*4UW&.HJbKg=3A;#+`s-D@`!@Zio?_Wj)lJ^@_UK_BBt^KraVJlb"m8NV$NCWB\&
%DY2$k_)A4KU;ZH%k$,9q!thjS`hGMr=DWU]\q\e&I0iC->ngmM(>L<lSFbMP0)PWZ/>OgcN5'hZRh&JKjk*^_DuuRVM9:?Cf.p,S
%c)rjCVc.J:VMIbT_Z5aK_T*nJJUJ7;YrLC@4[SI0)8RKCS8\'G).Mi7[^9.%0VQ#Q[+H-6*dHd1SAhtI!g1T,@(/;-Vnoh1PImn2
%h__5,DHSgYp]f,fbq)m9_;0jlS#0B;)hWeY5A\I@isrk?$T6][L6d!^+ZOTMb/#*<V7<fu/\>YC&&kC@4I"TtKRS.f.WXMIXkLL*
%aKo#DobcbChfK<-Huf7ZTrh\01DhD)n/H[i*OLUe$F85(].H9.d#?^BkOfB=LR<NMfW'+a&K)/RetKh=`i\\!Cp:F_kpEna#:-Sm
%o!bjYEiWDpWL3;#>-IY.E0%sUpTXfR6#Oc_1/2p78:qH]B^9qomUADOiIQ5FW8BN;ES-Ke0ndo7GuIXD&%anleLCA/$fg/0f'MjB
%cW'/30T5C&`W_j\b#+3rU!/Ap-K^cu]>X;L<B8am5]!+7`NmO/gt!g\B,c'Rg/=D(^C[9:bsC,5l'dEZ&/EKZjiDlOVbXN9,dkas
%VhnP^>GhaeOlGLoh[RU>Os,Ur7F/J`887OS&IrcFYM`-m@O-WH&TE,,&4hma-[VC4`WuH:]j:cfMP:U9r.%Qcgb]ST6X`X)95.$=
%)Akb:?52D]S9VmV_o;]J\@;nCEt]e%/Z!Z.QD`cK,\%pj4"MS,EbLduh-FY+\fcg%@)rK5o.H?)Lb7([0!X"=1="&k#e"25<U5p>
%OY60T+*QL\TR1@ZZe?7/M=<4U18N/4\OfiC947JBF'bUX<%tO;]MH.i1tng0>J'NUaKep[KF(q@\(2#n!O)C\X4oeSl\=7A`!Q$c
%(gfi!_9J`Q/tQtWITbBq)]dIW2\l-@kg;a*Jocp+3`5cAjUo4XgiVsbKZ#ig5p9LbY(&G]dt!A*<#`Q>9qgmh$5$#QYRqrh)pD.\
%EZ%DB,,8$WSe>ta,""8jCWg'E2q6rsX1"7U*Q&<iUBL4_.Do.2F?-4%'%s>,_AN%h6tXMXgH=YnD8*i@ZeQ>5Vo:0pLO#:-$]e2?
%7^\VSh%IQ$ZE!p9X!WE<>9R]h5[YR1N,5LfU_H*)8TQm%!.PTU3Q2oL^:bu9i^g@\f&hETT!,#kR",K6!mT^LM7+YhL;i2(OJ)>Q
%hi$W(4$Zk5h?f2"N7^]N*`T'p-C-u%@M1p;,"j2Nc^Ybh/J:g,Kl4\-`"<7EQGr#6$8KC^Tnab1C'/dLX/-dUQCC65P-Ahj7*@fQ
%7L3<_Du7KC:;h5J>S67o<>GU"`8(rD70":5Gl4cnSVTZmESY"lC$2BD:a+CUXVWTlSmC^,kD+o8:BaQO^Kgh=inTn!):Ifl1%%e7
%Pc)rKr5^`T]SF.XXsjH`LiM\VVer.Eak<6,lo]/'M[&^,eI1kc#T%Hjs4+[QEcK`(Y.b?CAgIjp/N.9U,NLV?a=3psW(*GN&;11&
%Nca&F$4Hu:5>k><'gTu6gnc=ep:N`?pIp[/_Zj./&o_BU.<025E"E67m#EQeK;hg<@Ca,93Pe5:Gp#Y4pf*aJj"g.*\8(OSmWfU+
%:nJ;W`.CcN[["#N*[M't5pB?WmaeU#JLf$=cSJ>on+EoQ"r^:BWu@Ffg&fa?Mt.0Idpdk1rT_4u;[!TI,;U8"/\TpM?-c5R12;>i
%PJRi_CuQkO'1]qSmC/OI;4KS11cTQZ:.G?O@i[UuJrF5b>J!9kDDi//NHe_%NPI<Ka*C^jZ9^0Z!"L,O`#@XOGI)S!)S>@o8KbeT
%W(:M])U\V>R.3Y;$Eba%H3^r*b,$Bj!*LZ((=T&T^0ZcO2]lu!>OO$ja4k3>IROo[>&c&7"TT-^-2TbK?A5JG&G34#+_:NqU]Z?1
%,V7F(EU6IlGd"&cbk5X@p_KZa'_44+M'*DdrT;HB9%G="H!<r^79`VC3Pr>$SRdm:<UAih\3pJ/pIJi!DO+L/1Nj,b.Ni63_(94`
%frEZ4&kREV6&6L1[o4W]'-pi/!F?s;'WgT*=Khg5!b`k.:1l93/Mp!\fB%6A8G6PK0[dP^WAF^`+f$<:;G0buLAPR/8e16i-cHI,
%C<6o3fq$gR'[7qAbe"SnIi0LlU6$?Ch#%ZYKKBAghm<K<YC2D2@^bZkfarA)#)4U6GqR(c#M01BiTa7_]Z(M,p;$IURZ%ckRHc4R
%-ln>1l)C\k"Xk[0-^A2)$ZRr7"r8cJ>T5UL8t.I:i2E&:q-h%U`6b[9#&!@[Lj?\U5GS:uEdUk9kdi/`7E997??r^$FWc=jRJS=k
%m#labAL*2o]+ThB&1KIHA>U&N>/W^2dl%3_UXSs/SfZ-G#*&;3A%L[?9<&>kdZAI6d+jaO<&OQ3<WVr6815i=2d%L0E:*N&+u;6h
%?EoX!Dbe5d&EA^ZaObq_5EC=Z5k:]OR'E7n^cL7fhSV\,`Oe$5.GAm\qfE0pN8Q@kKhP\Cmd]8m[@fB_nOOT6Vn5rf*:H)bm\$A;
%S'5Y$-s865Lh3OoiHI&Nkl*'`'q*DLfPY'^2W3fD[k;<d,/Y6:^=P<WNSL$CPR=UK7Y-qG(5b\S"?I8DgPT*?.+&Y(WWS?e90!X=
%a]!c;!tlH$]O]46W:P,Q.bHFq@13_*DAe.]UrmrO%0CPL4N=M&TcN!X]3q$sbHY?uE;QX=N=e:B'b>n`,h`rR4bU#=aY>rLLLW.K
%VQpLu;si<q70]".IVIONEtK\0(o4#9V7ik'6m;9[`#JtM4[pa9m:'^=$R=mBbE6?W^l!436E#V#'9il&-[?5G/'Q.`Cb"W73>?7Y
%hs?7EQ=932Z?rDL,j03#X9^Ped2:@q)<Ls`l.Q?\Yt:0"=)C\qJ:scMV!@YEm#I9>F#*#d6ttJ#FLE,>(NcEcdSP^?K-M;dUnGRN
%&*!$4*2a-T<=hpAOIN2%KS4(6]Xr4i-!d74#>uarC"IB.@F,goRE)j+0_k"MVq"a[%b)qI`9g;oa`X8"?1d,FS/_s="*OG#2R;FQ
%Yg@/a3/W%i66\Pg*i:*drsW0)>nrO*c'.T%gNR!YOqW7fhkp\l/pKLSpNa.$Z3(M;B#4^=q:8i&"A4n;geZ3.Rei%C7EZSFF>7,1
%CdID+r9<Kh3H"ikVJln$1X"O?1*dDF<f$8B+d!K@&2<\La+:qD$c3BG74C$r-j?8O"`tp-2i%V]"OesMKr!nb,S;$tJ4e"PJ66pf
%],+["!E\Q++L>a_rn]U,W&JRRnH6:m&M>j9HAGqu[F(^8Dk$oLe*/uU"(r9[$ih`A-mTUZ&L]71]-VUb>V(6OENI.J=m-7tR9\Zg
%f@e\La(:<Wf-p;s&k:t!j2)tB6D'F!\ae6AmY1=31"eH[3GPBnZ_Z%n&Rs\7/5FEW47+<Qe#*K#n84O)[GLjATs2>-6rra7(fX(-
%J:<"rQZ8q&rL'%+B=J,!OW+l86`DcX[[@\),Qm9HD,M(A*D66Y=c>gP!Ad&m&hWr28.2+eepF5#UnB+ti'^\Bdb=&U`J9A8Q((,+
%32M&>N5EddH.7^h=#Ef6='ZM?fS5V6.:gB,5m*=\:!l!kXiKSW!Kp3t@l>LE&_"n6j<iRpAiH)=m61OFL.5L5Ab-0=aNHMSU,U,c
%A*r!I!qcoL5uQ!&I1$-&c3B=Chu`(>5($:W*[Kq(l7U6qnMLKu\8+#*A6r$$et1RIrZs5Oo^97$M#BS_r?ssO2K)8clmcJ^Fhb5l
%+D1T_0lnfU86GJtc\(J[Xd4>#E.CUi[2(#6=:mN;cf[oupZpS!Eg-.N2&_^!UE,NC)C6YT<+`X`mE1W7@.kQja]8^bED#RDELl)o
%a2``e-uMpaAIoG9`4h=oWuYs![m2?6?rB>.$2fjN0I*>+9E/a0S8MD436W#)#\?eaUCr+c&<BtO%%C2BKj_rC2e,dDc'loZE;$FT
%l;-F(#Z^:H1HjgC9GTTl#eFCID\V>BTbC-*6@->e$7(+-.KS$jMsOkR+EY/'g/c=jL(H=cKQ$ht$#LS%;brK,mFRoH\q5V5bhT.W
%i4a_5AFRT-_mT#6Nu1M%Go`[N>[n(Aj-CO<%)nfHGYTG;CN[iF*(dk]L6`-i9YP!@hH>[ei@1?>K'-=-am;&nOr/(._Ybj%^J&=.
%PGCYs)I!nLO1I7Oij*'"#u7F9?$)!a4gs#90@G@VJAV-Za;TD-QJ*FELRA`LP1FS"gS!#g=P;]i!H8HpVVMhQ`C$0>s+b-1\jCcF
%34fbdRc>:d4#b-s1hOP%P@H+\RXrH&-E`Aa`sn@3#_m*#cuo^Q(U%gfSoU"j+qiaL7:<0;e?s&p[OT-_<"q9Q`&.hR5c(c2E.e/o
%P'oF2;$BC!+a9*S/4)VOs0jJ-:rkrtN:V;FYc;1LArTn_cVPkKm/)_h<l1bS$mui%/R=Sp\H.?mS[IgLEl-UrIP_e[9^s5A+i`;?
%KfmaM*gcL0lg`"NZtFnuOsUloR%j#kU<d3aNb--7[k=H^if'[Ag>#a>U-.GkRDmgIo,XS^NaOZiK?A[TG=LLr;n%ir?rO:d*gFH9
%dA^692AJGr.j[qED*d?RKSNC?OW8e>U2NXBD@Yl)*k,aiH8NA^<B_[V3M(m(lO"'+10hl2AOrJ"nKtOt+<>I=:$s$tg3n!&SN5P]
%J4d/e#(""QO]GBp=d$S'`"k^M=']#"I?dh-i-Xi2@Eh3KZnClDZl,94X1rGI<EV8:N[*/oI^GoV;kFb(AMB4`92KI9&"dgkBa:D-
%F\d]QRI1RGS?/LC*:j<[.RQoq3!H;h%I'D5jR@?nM45-56HF?]V.0-0e$]*#SZQXF4.)eC;8aO$>YD[6.Cko.A^<Zd[Brta:0`C'
%[+6pX,'sa?Oeh?</7GiI@$'=aIH4E4"@*]8T7TjZId03"cspZ%(SsV&%uSi=3ElQ7TG\/fY:WZV@MXcDhqse-:<*1BQYSm]D-Vu)
%K3(]s5mY'G![KU>jdJ>X8JGr"R0UMI^5<9YM]dl[/^h!MLHh;g?3@%`/3Ej0_mdO:HU\NZpGue"0b?DOS/?OTH9+,`HZ6!:,`aX,
%8>]#_Q,3u-S"d&/Y9CD;b9b-0#u[[,qp%pDR5.Qf!-OjE4L#$.l=(7caUSF<?6bnJ5E^fkJTOoM10N!1?nnF_?$6%%XtUb[N;R-#
%K=H,\^V_JQ@n@sD]a.6lk8Iti_<uG`K^BrJ_8Vr6Op1F4<U%B,07/DeL2d)fF@E*h@0uig@1XOfbf&BE&F<HdN6%(cGG4=+r;]Q,
%@WYJKJqW5=o+OHB8Z-LF`8h/AK!]$W&ceN"W[dsM9sm\3G'RKFDY*3#%qO+@l\erp04"uijW<ouR:qEc9k(Jl@Jlg>D;rq9"d:2(
%R0IS>M8S'9&pU4rjA+b?p2T"%@&`uth()4)M<!Lo`+Q8n@^i_Y/?A+WbC.;]ai15>dD`Cs$O\Y6aF]^EWp2R"\bI=E8T$k"Jf@XP
%-c=8Z6un;$2DNrB#`7PbNrH:6Q7M+DI0s<CM2S;BJXH-o;t_2"6XZA,NJOq$\rKr((n63N!]//<'J5ieLHIc/>E?kf+.-]0edM6F
%#,;Hu6!o@kW1[jZV:XgA;mKK.5g`?co7[!MKX/2FVQI`Z@FQ?lm,l8;['s0eerF2^-_=2eZi6^Mm"0m'ac.-JA]cnVDV4=0Y5C7S
%V>i)jPA;"L7dL7:Q_h8Tk(EncUi<<md@i4MFbC@cNQ!p1e[$kE057XX9U%a0Xf(EH/=TL@:HWF(Gu?L[hMRJn:qTjE,qjQGESln=
%Cf)>-L#(gn[;!XXq!=0J=>E.UBIQCcUu^b3,Y)&n;*2H]];h^=U04Nel(PFiXCe;D74\X7o0+L$!Lo*4*DOXD7WE17j].]q\CYlN
%ie:iHg&43pZT,f]e:Rt[iJ<Em1`Wn[FN[#C&@[uO,q<,eVqhI';]-qLXU.;M:G'OoM,8Be%$gOdKS9?Bk5/qWGHIraWF@jk>afC\
%M5u[,I,+q7PF`-W1+3++>^#,dk9eV=*2m$c0HZru7eq":E_ptT11N2l%R&J8M@$W5c%6W'1I*l#:Ig\'Gi4^G."R\>R#8<HNiSDK
%LRCO[MG(5\Bt9G-[`.6_\H,"j:a1OV4;Z7c0HM3$^221'ebuHeFi-ID,A]pk&)S:_OLJV@"\_A'Rp65^'W1%*VCGMb%@[$QGj_TP
%rag'ldR[VUbn<l?*u5HD&c"p,'$0EdLa,oOfI0KaCB]Da>fE12E[5N(YoXXF,4sl-9P1NRBhEOR.U_]l!kGS.6sc73k1c%aXG%E&
%nrR7k8U(nbW^=I+^<B1abN)&L!\^NIGJ14T+fm2)JAl6NG9slnITq^S4)?:nPQ]NKc62uIAG3'13!64VYBU=&0Qb^BMJ"'uF`UEC
%$q^,,dUVHXME)`n:k6jSEDlr$)gHD&XK#Zd[qscO)sRkP#jD0ACY>,DMsi(&/^$gid\qVKf<fgo(`fj)_?.dQ*sGhu;oq4.#D,ZS
%`J%=2CF9GRZBs1U`3Uo#P.>?S&J%g:ltbf?P?6J\LK@=o!Bq]<hnJo()0:%.-.7Cp=Em1@]ZRm&EEc>0J:%6*Q&BNp8DY,2?e&5J
%*;&K85.K=7[5LaWiheGp,^%R-"/>(6&.ob60d@Q+B;1X,%+mr#0k-YM%l"^<.]a>"''tfEG[,MSdkDZ/UEJ,,JmUnj"^j3R?SVge
%'n_]5^,lY."5;o-TZMhlX:V%4HJEgAl%p\,7TDp,4f>Ub`0'(X9V#]/o*TA;SYCopjlPh?"%he_q$$oRJ6#D#b=5(r=hN6%UP!0:
%CV]2hE-9b>TX5A)Tr9@PK2egpCgqWkA&UBtK=GX^H=C!dKd*0?o,GOujF/p#cj:J[TVY#NL_a?@Uaq(S4D*tH:KprVG!1G%^-<SY
%T%/OJBbJWZX(!NQ,u+sF+f;5<^HH`i;8*H:QW'kM/e4rs3gOQDBB0r>V']f^@1ajY+IJgh>m:_r+P(\q0S_ol1kaG9mE=ZZ9#=JA
%\/8DPl`L)OUmre5$bP0GoVC+8/N*n<d.gjX\^=2@oU5T%&aEC:?q\TR3o&jh9EYmb/R7oAHBMYPS%>?*LNrQVF23?i?kaNF+8H%h
%GkZi%,iX1i)X&Xjj[MX4PrRd*!!+6%7=g*4j<cSD<(T%r/Z1I-O4M\>7$&`WY9VJ8?9ts1acUu<OCM)SB&>CK<PHE5ZQ:>!"iLNT
%4ih`=6U;KDRkc$ZA+uY+L*W?j>9RWcPW>`(7)jbum8`gP>t#X&JOt_Tl8aufn[]9_.Y*o@@u!PYieerk[H%"]eZ3#7bpUR^U>^Q5
%g)%"B[AIEHfKJ#Z[R_NQc\IkL\\lD^d^8U)T<^+</2#'J6/mW43(tmhlX#@A@kbO(A*\lo9gR]edSPoF"$S`f<pT10&2=,+ojF`o
%&0\d:a$R)2W53]Aj`VUPG(TIgT?8gOThA7eJP)?dF2?k=W@<)YSS?'4##GP6L6[llJFNgBck7Wg*:X$.V,Jt@/6V$h)8jE.S./hI
%5h5ULA$YpO(k_dB*+sfU0eA>_0'-JhTQ,>Rf(HTbX%b#eT2V/3rJX1.)m+Al.(88I?9MEB?U\@$62;L?6>QW=He8nj71!lL!<#kl
%9goU(IjQiP8d.K!MtgjC@k(leBgGVi(1#aKc6do'(NjrG\Mmjq3Hm3a4;(kHFqj+Z@??h,6=drt=,>^%`P<(V6r>J41rN,/WS![:
%0FHCJ_?1.*l55>F4t"1K=3XK0gk)l"kNYY`e8=TM_g5Oj-MK"Xe(-'V'&94[a]8:,FK2@P0V_#DiEK\iO"V1:^aONR-i[LM>,Gr=
%E]_-JGk-ba@R3MoO[iIIj9VW'2[?XX<F%uR:Q#4T4(esJVid5CJ+ha+3Nh+?(]NhPs+gT:Wq`]P`]P5jZKNR!F6TC"j;qBn3i/RM
%QGjLI\eJ_rq=QDl#j`V./R*7>diBeG\VQ4S?ipdPHkr3d!NFala9cM34&Z),@CaaO!p9a31iV7]A.f_Q"LUtN/IR@?QLj8'2Lnch
%0Yo<WC-N+jOegDt@#Yhh@/M`K_.iuo1jKJ1"+kR/)lNg7AR$?K_8j3"V"?]$S<*h`CBI)]+H/p#mk$_S`sRuhP1FU!>.kd3l3TA+
%%VcVq$OClD(Oq$)_9Q-ql_]c3Kt4B1EJ+qdC;I@dlq`6]X5XaB'Guo\JLqJX94Er/&ub@h-<gmCR2I[_+p4BHE$?*TJpS48d04R!
%5_%^1.`Fq&kA+MD`.!lbRG)oF;]^?.i)<&R$cj/.k9U<8L5WlNGgJ0g0U(N`*t@"c')K;k["6q2oL_eX68YgoDaO^j-);.5\/n88
%%nbeM?sH&?(`9'&*X/kcjah"RIBo@rK8YM`'imY3!ZTb`;5ul+M5q=S'oBeag7F2Z5pYpgd`gVm&FU'4(TlJIZQTbc7RhPa7N8[-
%jk8[FFgj&\c*2^0]Hj-t8jiZ_\D!=SM@+Y<J;h8T@#1Z.@G/J1)12ao4OY[HUm.2lE+SC;Y_U^1L(7d`gVae#U&dgcUXpXO.dL@R
%.I)Wfc5``7MZ6SN7tPQo*4JP>lNiZ3JMOI]iSI%J.k4nPXhd/[Fs8U=3kW!`4WBBp7%oOW`\HYDlLpo8;s;N);ZPMVU3@I]>OuCU
%d<Un*#?=4>hrI3Y_0e;_>mSAlM^2O=-:oJ-5KndNLf@pD&8aiQU(Pkld';Ks?qd?d"Kt/K>6m2U1^1to5Zu[Bb(q6X(ZrM`>e%R0
%7bOR3:Jk)FA/_6\9%?^#6qu]70FcB*RQ<d;'1-F\b#FZ$!9sn\R^0ULF1s+bJT8.b+<:q\^]qUsa>eQ:iiE6UQgf-,H?_:J%06)+
%9)D]tc',>jmS0?ra:3ZB6(nV+Je:?RPb>A*LjJCq%>+iin"=&!Y`*!);rB3>W%jkucIFZo*L+asi$J"6-UrM8bTS!IA#QI7iYTCT
%@/);efO\g9S^5O\OdK1*;nUKfL1-k-OBSC(<jHui^:p6\mWl$T@f/Z+#\^#UR09OS>)mSM%!usKOu\^F+pHX5FK[t_\-s2o_R_Hq
%Qe[p]+e*;1b*$<;ie7*^@;(E"`%d=PE`@]iC7%,O,[&GI+qfEs7s=Q'I2^a5kf4AEbF+(>'>5Q8&L.$m@MjSR6_L*8EPctn6,5O9
%O$Tiqb()q-GcD]'mmYTLJ.,Qs8AT)M!Xr/($o1M@JM/_"e"4M`Yc&pe8<=jWCUE#(ZPt=jW0BdS1+:b9P)5n;=K!5bL.9s*keNj.
%><+nOD9n#PV&7a5C5QaOltGHhLhX&Z4Be*1N0K3>`O,7$H[:DjV-"ZZoTP9mVAKqBa^BuVMV_U2<!p[BGUI`VJ:nTXW"q]pK#nS@
%TbVCHb"(8rV$RSS!cLBCUm0[+3&0e2'<s+V&M#29G#%U4/IU$m`<pu,j*oqZNqsr>[5&ML5"WQmi7,i5d`<hm":JUYeg+j>@IGo[
%Na@M75q&F"l+hl.JA<^i3%KY/>9u7-^mQp)/7M4mB'l_+(5\IJ&M8m+dM0M[V?m;\3q,RI\XlCo&I9S4m5tlr@G[`B8mM3<M?6&_
%E,VO[Fr&T^dL9@EX6B-..c0Z&(osU@,7p'L;-"BsU(j2u70=,KX^aFP[BR<2Di$4aT`:d"7juSZ1*bCc6b%QkR/jOnB+.D^1bj!u
%F`>/hegnt9`$`*9#Nea$Zj`]1j@O5Tl'MIH%KT3js#:bsiW'E[P4rMrdE:NIT^S$m:Bum<Y%R<9EYo9h3'stdG)KK,k``G;+UlDP
%?Lli[l1%@O^k47Z"Lh!`;-?J2MO[:r`aE#+E%o:K#Rh:IRN2Fa"tIMW0Ln")*BDgPW/I1>0!?C^?,rm<fYerYJL?7/]s>aK@(C.h
%@OiTk!=2nSgLC4)7;hf%'?eb/#^+:PBXDn4jmEclZD1+6*cZk5As2LqPkb>3%.iF\_*kdF:p.&p2N"5AW)dU3!mq:47HRMh3HQ')
%,aA%sHC2e1:%s25,V]N=_tmD%Yg`>!j;e9Gh[Rq;;CA>dk$WUiX@\+%#K+)Nn8^(j8-Y:bR(9E]O]F#S!:QiB)9Np%A44b6+IPT;
%C@NRj!KakA),hMr;"r&-3SNjD(Q1OK)9!QrG&g_6LcH#;1`8U'nMs7Q3,%f6m]ut\(Fk8Cj`cFE(PlnD0*cP3)I<T]*6JU):\RCM
%0:-]H$=4e+$)6A>JR_f[f]A[HM;+u2@mE%!QNR"-,3hjPb5i.]6N._04F!i9`V(6!&8*T&keQ;2_kn0X*6\[#a2tjQ;6Jsl[iAk%
%&cFtRknq;LaSCU7?;,SL']u2f"];q*!a6)5j64o-b]8ZFE+K3Y*)#h@dLjZrXIf$8=,t%l.9\a[C@,Ejcj)nZ#Z`su$6u2j;!!he
%)AT4kbZ[3`N`6M2@qKD0%ag2`l!QSJH")_^KdffOj4ZtaE[YDX3Jn8!?[r@#Ei/t9%bJ4a-0oRg?M95,.Bpa$m;VQN#Ug"C;h/o1
%oM^-X"F=[E'*L`*6KRran8(Xk,A/icP@Ki\UBCc0<m<r"'1Q[+ba'&6-?&_lHJK:&*4:Jk0]F+>*;#3,Ls?jL&,HQ_Nt<d$r6G)_
%*F,<GRZ9Xr6g(rc"d-H<!U;*VGtI?F(-HU;dJt:jiQ,FK=OM&<7U?H;_H&@29XaP_.tNFcX:@R!P7t<I_Zb?#N#[b/&>D.:OTU;B
%.MFLVMitQ7Lfi#&$s3B>/93"40Pm.BjX&KT"cFAmE.gUq/94RTcilI],-P8:?BN=&TF/(?,]YGKJp+g6&il'd\!-@!JO0YOR:6%&
%-[\[^aFT9U5(Z1_Q!R?++!Z.!"Gj]Gg:lR.95uA2+brIMaL]':OMb'"mh,nH;9BT(]G?@0)Ze$2MG@9i*sWHNjs53$^gT3"@&Z#i
%)sW$=*JhPPU$sqV\4W]Bc0Xhb5`^Q7N".."*\WXPBbYe3;OB34Dh:'B\.G"DNlNW4)8hJMMYRBt4E=7IUQ,G*$!OG6F<'dCW%Q,H
%3?H0/-]mANiHZ/Y*!h-tg#534'1=:g$ofli?j1Hg6SpNeG(^f)Q\a`;=>88PG2EYX310P^Ind/e_%VNJ$N`0q+_uC7\?IHn=slSq
%6'C"+BKWL:8o_io,rBY8BnmQ2T1H1!:#FSCJ:CDc$3h@Q65GZ02)8TYR.A**j62FsFNuR`)=rC*$8MU?K5-5"9(9g9T1N0_$ni+-
%*<MI$d)B;UWDXGi_O$g&Mm(6_h.Fimko^pQIea+L*:eUe3GS)fJ1a3<<Q5aY;#kn*"BJchA/&#`IAi0)kchq+3$BZ:ih/(NTW^V<
%_u!8A'VKEHj_3W\TK)^RE;KnU1UJWW1(d8dl4$P:`51Jdj_k8q4HQqG:u^CE`(61#P'CLnJAR&YW((07OHK]uK6J%"a9ZMf+q=b&
%P8-G)#R"'[6ARuk7:_p+%)mb]U2aK>`&hDG&!pg'Kb'5RnJ(Wb(b#T%$6C7b.[a\""$Cj<!,sba7]qJ*5n:r*(5*',i,I$la_A]'
%iJ>3Qkp(<&E#;Ss*Aead3"R?$0Z.C.YLs%6*2mn-@Sf&r/43^9OVN*S?/ZeU*+<(l@u0/E!^lqp<]C(>&[K=\'b1^`*4d8H#JgNY
%T^Z=mI=B*@%hc&j0]CrL,CEif$28HV:I)c?1][&t"X?-K]XgF_HNB2"+G>(JIh@?QW)-^oqE]XN/6U..&KMtK6+2cLk6Um<C,IJ#
%3'>3ICJUOSrJh+KOMSc/PVBA$J\bc-=3e?W>]9ZWE)O=LnGtJ_<5?3]<UlZ4JgY`U$.5EClKEt8r>Khdf;]Z1_,872*>(D*%O9q`
%)tk4GiP7H@\"eKnp5(48\7%>g'FW\-DISA&2^nTI+E.n0lj=.\>a(Dp`@0XF9D;=h5:(a_ng7-d^^D'o.H$d?^^Xr".KXj+LX$S6
%]WsUsn@qg$lJURh/&kpiDL9Edm>Ck%bnrX!>RZlAJle&Kfc[6/hhgph479Qj-EuB"("D]p`X]iU7VegESNt)OD!BJ^/5RkVG:*fL
%hb"TqDl:^\!r";$Ee=!j0e=Fu"RI(l/W>K!XD``7:BpL[!OU2YKo6Po2rQb"f<N%!L=?")K(Wsl'beJ`)!q,3q#)%VRaJhMc%.M+
%$/.=o.>`TV-tnU&2AGK3$%VdRl5OhgFHQpXG=<C9!i=f`TkV=r<cGbrkK!q-[m^i7/n?OfhiLc4TK!UPDigV_m1G_(KAcY?DW.im
%Ff%uc$-K_Ie56S6,;oYiANAJmd#l+?qC0@lA&JR?q"B`r1DJadQl3k-NVM?Aeq2:^!q5Ls43.T])rT3pgiEVmG#F,mYe;&YMH4D/
%+J<[:62#KgS.o@L#TlSMm=5egO_nVB=Ds9I.0>`"BeXJ>d!RPY&g;Ht=\M,pPq&0X&@$d8eq3.Glbl\*c\auH(of>a?7aEZ=:47$
%/PsER!.'!s0FFC1`(=A9\A3C-"?;47Vg0IgJ$C$<gK.u.K&s+CGpAP4`6f_1'-qM;%RGnqJ`m;G-CjK,aW'md5>[R%/I5CY&gg0+
%S]XL[Z*L34J@sJ:nLggD@q%:3&]gI,/X;@VN?Nb<[O=Dt(uL-p'GDU-34jFV'Z_43&p0uNH,Fj(RVa:22c;BH5iB.d[j.7r=!GG-
%guMLd]OADaVM[R)W3-NgGiS7H_4o2)KqBg(<cPbqQI?/++W6=qJBCfNCrc'8L^_L4&KG_J$Ur*ui-6J3;J'J1+TN>""R4,ihY<es
%nO@e4N`#8C0]!XLK=Jo0j,GcNV3VVOND1s6T+C^EO?nE]WWM4?;7D@0b:qca1IN@J',YWrg*^]KL@M^.[#A]5%-%d9PX($P0]!YJ
%m;b_e"p0BF.#Krl9ng01ib^96cVbHqLmK;5VP&0Dj>0uN-SXCB-EL!on]"ZkKV)inD^=84TAXtSPF,Aq38R1,",5`Z!sO\_;]K_C
%(h.=iN&S\IA%J<7H"-sl\l)$<D_/XSa,6r%?kst/,m/FFPlh&"7j)_(bFuIKE4ft^TO!9AL>%Mao5d1eY#-sd)8mIujk)<#Tq?($
%&A5':OUH[uRe+nM//[4t'+@p2@X(6Q'HRU4n?/(N9a/?Pd>o1@>QMLRmRf>j)8I2CE[]&!n[gMJa&>"C%c7^1hD'dgd(=io!3$C`
%%F53tp[6\i?keR\>=!rLXc=6G+irJA*M-)28*"QX[UX4_3Q2D.!)r*!a9#,a/Z-VFePeXO6Tp#qO)T(V[Mt.D-Yh%+]7K5bC)cOY
%cjcD7$*tS/a>:>e6?ZQAS?S6T`jLI&KiTn>l'@1eW9K]*"LdL(0J1ka6Wa[b73Xi0!1,sB5Jc[j1?F3GA2b-o>)tpl,=0,Z4(L:5
%0dB=6]C?>4SNn=0JO2e&-]m.lg."Y*+hKIW"$mD"Z5][Z&B?#+2s-',@('Hd6P]k,UBtNk/eV`cNhG3!c5]DEL(9\55Z^4_0nBF\
%NX9AXVU6gK2i.j/1T1G`)_"`dEs1mMTNV]%@aK"o&;BV'K%^[c(Bosq:qJ1#(>^O>h:OD:\gSAhB33Lq\/U,DWcH4sh&;>)\D9CU
%N5"+V]7ES*WsmaB"AH?<fP[K]8[/l:)bk^5:@8:%<AO"G[i5cXaR:Ich5F@_#`IVa"!s$ZMK-7j63%E=E]9+8aG>tjYqo#9-0/qd
%:]ZR_E]7%._<;4lmO#o(Z+Ls#.X.E[Nnd@j*tq]rV$n]sZ@F'AURi\igE!gD_p=b>+E08/W7)>ei,5@;=Vu_%Oj)+]87o\3+hEQc
%NUJ.>LCq"bK)Qc:e$@pE*/[uWJC55ZRX^4LNUe:pq(ltK//na[$?.ql75uT:#]Tq+#j!",6%]Ypr<[F%R7\*eSLAHdeTs'2gJ*D<
%mlPDG)J?(#Sb/8WWKK(c\D8PaP-8.*?FYA;Km*UR%135Lk=YOpd$uL-(3-qum`r,E\`7k.AXR:S0Q&gc34+JkDRYU'6[?W;`j@IZ
%$kh?5/-nge9oRhdU-BDNR,E-4)+@!1m3[^I*OgB$CD\l8@*D)\)AK\#>`k7V.)=XSiBjcYU.Boe]81]X'B!aR8'FY!H>QJL]`<6Y
%Ku37*^th7NK`O%:(Wp\'$3fiE$9I!4i,3cg<?2b2DX`dOnUkhn_5/OkM&j#D?)!^\-*Z2*npl*e&@mAlM'&lFGD!_o*5kMS,V;V2
%A)-Jd,Y`!+m09S!b89"u5TnDt#450ZLU),p+L/[O+hNrB->Ab_lY6dZS[_S/icP?6SRLhFg;]coHQ;Rf8]HWm)-*U];kCLNFXpl%
%f%m;6em8(5<t&tsa.a9V&Z[u`cMl1&"?*GKh=CFGVH\l[d[_%AdL&N(+E=p$QpPm>?od7`UAkp$go+!U68oIS:>lK*%F:/HPl\Ii
%GK^("I-tHglVHHLZW'^6FDa@[Tj!Qec4--o":.%tF!DTE+T!25B97XE6q6=aQLQIq?u@+HYnUG\+9]tf5XthlPQeV0UN1"r"96_<
%$4&HO1DEZ'+CLSq"HtpPbbC3S?t2V^Ee3;sEf()iDLefU\8_Q1:/X>[n@/Lp'f-mXE83uq(ip*#JEO-XY^g^P!h%Rc=PQJ)",>e>
%].Xn:@r)Rm,+ejT@q[@CpgY:]E5IeRJ75rrFg7Ou"GIdFK\+pD\<E^T$O/Nu#W%Jf&DT5r@%)\_%82]95QJ<FJ:d`U^F]G:$GVR'
%Pp(ADmBN8n^9&]O"a`=h'2*kaPrh[$[fNLlnsgSB4*.Y4L!qYP.<>R&>nVqJCU6X%U4R8M3+C*1aDHSHPlrMr.7)D#)0*8ZW65<_
%]*QEc!,b/-#C6XZD]<Z7n_0AGD-+UZ7mYl6]c5el%(<:Q:U%8hQ(bVe+%OIM@ffkCj37^>]*eP%^heWuWZhhIKOF^Af.ZJEgH[)+
%8;qj3.hi5UD:Gcm5.fEkL2\\3q\#95TOc*)h,Mu,g=5I:0\^Qmdd823gGL[(K:m%5@Y@rq!j^W/M%D6GZAet(72Cu%KKppeM;<5c
%5iBSk$ck58+;DgGVkT>Tb-b#1[dgD-D?tl2j7Y`fTn$r(Ks6/!ODQN_.^L8X3lm+VnWH/Gf-R=nQ)["na>TJ/&P['CZAiB'`"8#I
%1/%K!+go_Q89I-dODV@[@:YRPCr9oJG;.)rTOHi7R:'jK)GoRm?u1#j=YR;KW)p,LdB13EUP]dr)_!b!W92JQ_XGu:b1JV0YmhD!
%M.MK[bcaIL14e)4R8S^/5]"=r,ZlUKfER1o6K0='gKjg/W!_1\W;-h>2Sj\Rnr\'Nm=EImgK<AO*IS!o%2=b?RilMl>R'KUK!9)(
%rgZgj#TEdgKotar&@Q!P;]q;ICh%]5V$Jlo2LK,Zgn#X)6`qJ^V[::",cq[&4m/SA.cN;(f7s&[.1UkX",PlqrEFZ(*9fHsFD\B,
%+ZC3^D6tBnOG:Pd,:0LeCD/SRP8KUCI:5UU^h_slW?1R8Y>$?@6URRF4(H@_W;,)S#S-\2YRT8RBW)Pkm?1%n<d8K*/oh)ih9iX(
%ck#qEnKri1;"Rcp[!(S*a9f(/&<U`8Y'-*^Dh6HaEf*=cD,?4j'KhjhZ@EAlVD]P4i\`fKeBV</9G+[RQ5"?De-8/rZiLV\g/&B[
%E,%ADR5+?OYSdVY)PEU_6"<=3#"UShWt7,TjMcG]@+km\7\8lTV4Fuj%jPdU56Hjf&g-KD72rL.(g@r3.55"h&M,VA'W)HN_+SkY
%D$Zk$j.\ePK>.tW/qT`:,\CrrTT'e0Q,4*[f*UXKaHZom4(O5*R_i])W#+P!1O:q^p1*[&J7f)nKpZ7\6[06<Z3YP1<d3SDU>Q9d
%c=$l7)tK1!jap@9,Cp%*A2^AdQt8?FbQ]P.J8kWS`*&dJ:-c!+&rWDi7_%g+q'V&c*P)+=n/0#Z:8+u$i0#3oUV_SN0*>cQkR0F3
%-TKd5$*$>20\K;QWs_NX,a_H2Wt?U=$9ElkA:kA"SV1R`ja[q?7jCD[gb`[\&VOu1SMEQE@r,o@/A*Ds2Mh95^fg03@<f<""WeUL
%Z3ipk%-Z>De3!cPY#3=p1,a;M*!eZ9@mc>77e$gB2W/#<+[_?r&MhfCU%IP]MfD4<Md>!:Ts307OOnVWCilm(N/#,WM[r3QYote1
%9ofram#n1`#(pAd_)W6(lme=q&J?$f4HqLje-dBq%2,RuWfuTq;]QJia_:8W88O4:`#LAMP%J)aQjG)tO=R%N#UVIhD^!D^?t*?B
%D)9#H*dV?nCnM=lQ@NFKb6`\t:i$7Q_/C]of]`>F%.$@sjq.Y=KG@="'GjX)&5[1b3ob?1Yh89)B"&_nB38s]3=OLCm\ndG,".,o
%@KXsWemB1`Clg>%@q>>t-u]Hchb!mRJ`&NV#k>.X3V8J/i34qYR'!cPL0Y\F=tm,$DAhF@(,c5'GYC&]L&f&H^s7Od4a?Hc3,I(o
%6Kr19W7!tNJUh1(3E=LD4/+SN<='_:_6@ou5'/>l'[?e^esnoqY"HOI7LC;oB$"e-S8^99@:KWP<>oI'Cn,djb,#N$Xcs,/2EXPj
%0`m(=`tZ]Q-l=k`?\+A_7PJX$;rqWm_ZgI$\h+U))b"q)\/pf`6(gTp9#8@KL^P]79MjBo!^GHC$QI-@%$70eXd5=d-u;S,6'aW"
%@3[XK0b"1D!t'&nL;HE'Lab:s-u9Sf"o"Im&529TMM)EQMJAMD@A=m'eZ]/agL<pNVbgqC"Yc2#<hQZoZ$%:5-u;_7.Ifj"YfY.K
%Kule4Cc''QhMFL+ULlr+58XeJ_<:r-[tBeb@MpRcL;C)+N36,H6)-+""EA8[L5do@BR=5CCa=7[^.qWI0+oK'#_``U;uR%2KaeVE
%<2N<]Yb;LXg&qa%Yq=@N,#HqUB>r7*_DTF,I`06<Dc#Do,&IS:)e$',&iSsD[#68%fP&MV$t)QA#+:\i!J/)l.g4PW-;`?J)c^1!
%_T(4s3fjc(N>0T)Rm:C\4D=F/$CeiL&FDGK@@bKOG63JX2L.SXYF&L(=\BAUCt(cXl[=H'-:ap&*=<`u5R8,6Kai2[L(G5rY^t"O
%,q*T:T@)R6$6(F-A"#Yk".>et)%%>;d>BUl2KisUdCDVQULHVf2hEmo;20d?P+oEY#no/^J]r)cn-Ur'#g,#nTI@<XKYn!gP73,u
%d"u'UE7b8(KZ!4gJ\ssBO?s6j%U6C1'FiePV?qsr!EoIm1^FXNqD#M`8rra8C1YeTQiQn9;9^:)Cii*D2V<h<9k!hp72T5bZCap3
%Yd"Y;bS)+8MQqms_?,Bb[Lt2u6$<L;HPN[rhLVmC6Ih_JRXq]jq1O89!ecPG;5+N>;FQ.)'1'J>6:/_q+CV%A$irsI8D%Tg6I5pf
%_F=mgE!1lS"H%dJTs4&;TH@I4YgEVMjfTI.)pAVQgH'o&7L697B[E"5"4#lL"a!:.EL^Q$Ku1j^'.4MKO=`GCp_GDs1r!E)p^%]o
%O:fN=Z*9@B+%riBOb2PW'.dtd&L3)7$QG'Z=<q1VYgH3Und6'h9#-I&K!;M>Z&BA()nd!iFtl<lGHsJBj7QJPm82HFDT/Lg-u:$T
%SeEMgTMT<g5[e.A%,%(7@3ZXSR6Y0o\m_ia$QERuW@Z5[p4ooDL9\ETh:IM9N.PK58'%rKh8->C1_)'4_6>Z')8dg*iu00Q7/!1'
%@ADOf#ATN[&]$t;_?:1W;]4p0Wuc8gEnlmp>/1Bi2fRkQ>YK.A4g)+s-k&"]DQFtW.+jB7bY:C-':W8A"$<bV=s:*Xj'57iYR;Bj
%'ucUTq`Fe"OY&PD^Fj3])]p<K@`?&6S51r[^4s9\N7_V+CYUSj$1p(X\=b^,Jp].8`/8pO6"e:*"AINhC@DB#)Mj'RafsCTGqu4K
%?DA%3qA%4ia8&%/Gn#GL`Gl2-"GCkT]Qa-2`"E=RLB+NOa9cI4lPQ\dcm.C)UhCl_YJ=EO!0tE,HRTLi6+_l%0/,BlehooZK+K5'
%f76Z)Jog=S8=^01mA5E@TNn7)bENa'C[d:H@uN.F+n#HTC(&%hB?ZPG`&/+Rdjk^U?:#A1i>T@;=O2<qE"2%reTH+Pn7n%c^fq,.
%Cp8Ba"Pc%;L/Sn)CGZr1hk@09KVD5'XheK]#$br"P!MW%J[L6T%lh]<Wc_d15XDO23CKe]9P`i/m=#^>CC%>H$k?'(-]i`=C'V,#
%!(,Ik'0L%YEeo'Ki2e*G#4G2NZNabrMPh+ACK/^jjktXnSH8:RE3/"7/4)1EYm.%eM$RRM8gGBS_6A[7Yg1Jr_\rqCRc8li`.;D1
%"i2,:"!&0jmJtfl?NSJar+ZY7M.F(co,!.:<5OFY)EDHS.<m]S1'DVJU$i^`/IJoLd+(D#bYCI,<hKEnY"jR?35M`:dQ!h?&(F0t
%-9%]#HU0-KTN4G(.:.i4=q)=kLn?)_eWD#/-BQc6=Tb*#,?@<c!>E7`+FqRIMH:6dbeP%)C&kP*X.Q%b_qV90=1`p-aC6DseKE9`
%1p'#CUDnUrW#AnfB^ZV)C4HW-6ROS<SjS1..+MX^2_mo]A>0X4.:Z=%FrWu6N>U3'ng"ds5bMnT?%P>WE0^es[?m$V!`0>VI`Mm"
%T3Cd<-h,WI;FcS1S:h$inA6AgC7"_b:9^^gKFJ8F27S>b2ksiBM,7%s\CBFe`[aDqWI]RG&."TU8ZgJK.WppW#`(`3WIsOj`h\X9
%^K)MW,BCm,OW#h^oKWd,2=,8R=AJ@a,NS]hd.8c=R?Bq+dAXlbKnf7,)KeJ]XBd4kFl5=MMFF'b-$BHL]%s6kOH)W`#g9]c!)[g]
%lkG5dTFSt@\C)dO0J4&n\fgY9.L7n>Z='dC_4WE^#7:O?=QEQQV`A?^iMX!rS7(u'-g>eQo]\cs,TV9$K.7U_)I3hgd*q2lOo.m4
%gjEZ^mPO8@bGfh/G8ddG&;rk_VdXYQ#"+.M3?i0)*H^#AE$^n#:8A#DSAn6O`nFJ3Bup'BP^A;Y'^.oHlcSh@DVp@F>`WjQ*3Lo-
%dh-F+[Y%9nbT@+."`0V/>I*^*dpScDQs'N[`dh#5'TLGUJ6-H@R1_cYWel<c]e6P(J#*-I1Z>;CB[_N\HO;Y_fPl^**?E%o:S=T$
%*^Ob8N&1uO+]N$AJYo4'_+nsH!AXf>(kJ(Z/.cj91<MEb1:QK4;06UWB8gPDr*i'\5YQgB<!j?4d%)Sq`b_Q.cr];,$lf][X2VcN
%nC#92PS"Q@_)Jq8/mU%H,c95B5fGht_3V6%RRNmG!G3-hB-t^JeT,4m!LAI^1pRR21\_(K"=LG%V/RSpJX%jX.ACM'!:>?i$568#
%bg7.u9q6^5R*nTo5Y;Da&Z*<hO0q@Z-Q3&M;3RU08OG`t=brGK/>L2tRWSRP"HsV$@S%dYFtF_,3X\!l"A'LUXFoG(_aTh88$iS_
%1_?GaiulH9[<P!"c4WMkOO6(o4*?,u%1$<?KUEsYMc=[-"DKhc$BV>+dNrp;P!DP__5E;9NQ,uX<rf%S^h#6LFQ&s5Jfg!Fk>PW:
%Ns89OEgee11k_0hc]c2?+bg]_Ee5=6pgaFHNTc_mNaq/6_J%Iui+U3_U*?pH'+(YfXh[C.[rH5en#4W)FhWJtj)`0gAi,$X,<X]`
%1:iM=14d=d4u\';1LN$d+M,(7(Cc16BL<HCBS\75";OCa`mqJG"Y@5=jK1[9K2%l!PSkng"r*8n!_!Jb\DfooTJ3cT@%s^"+QOtF
%1n6j**Yak&.]GZ7&j:Ef0qsU$LBSm5OF'[[TS5I$nY%+NQQW4E*u`M[?niDh3<ob,S=i5:F95p($5L5<Fb#4dYkhU+OJ0LEKlF1'
%$k9rrQmUi[B-Yq07p'HoN"o*a-X]Qa!+5j8%8Jh"c^\B0VargrM?s`<2WB`(.'sU6W6h*XYgA63UD/n/e75Q$;Z[:8oaRjE1939o
%fTiQ*W6h59)!_kM)Xt9]0.-PU5]:\B,=7#Ljk/qRIDMSAJJb;8d%J$?/l[Yi%L=I::>hcG'Gj&I"UuAHS>]BeK0a,N-6L$r'8Lf]
%(,TcOfleo[KU)4Z"UZ0e3,:SgZtRI:"HC!6at#a(TP#KSNN@E`'JY;m"p-!V:Jd\bV[EmD$48UVZ;f^ITN<G7e+YJAm1]^"S["_i
%s*nqds7tRMdm)_Pj.;>DJai<4gRE-85k!H0+$F*0j5gg=/]1pZrogDLppWS>H[PSaeI1d1O8l`#3PSla>GP%Y2N,mGrl?Y)qs!.%
%?K6O5OO.V0TC&QVD7#oN@I`I=^]2>*T!a?fqtB'2*r,s.BaapTCS8V1.I3:VB<+EfQ$(A!O)H<7j#9*#YM6f7>6%VZ"&W3]IK1r+
%@bNWV\,q7Xj4@!aJ03Le:Imdp&k'@\=?L[9G]f".p/-Il7s+60&eW[?7YG`b`m1J\6(%gd?(s9GU2o;@N]Zu3g\$-RqR4]clN:g]
%5GoR<4&tfHSt&4#8dFr15#S'g%kT72:Vf'/p*_M`D<^4W?3([_/j]JI!l#q3fOZV]1$jaQ%PCR'@LNXXZiJEBU+:nC5kGJN72ej9
%@^ut([aEI[)tS,;#AmZ.2&1CHG)8<TE.MjGZ`Y-1,b)s6,(Td_>3HI73VjMFVZSC0;*PTl=s4I[(8qJPLRB2tR[.df67bGCH@Vdu
%,!&VaM/M';&pe`V\;?SQLe3CQZPY("deU:u`r_tI5N67+IF]HaqjWAM6LUBh5TKt+'2"k-WqZUW*^Qbb'7(+.9RQ!s6Mbid`np:m
%!F="BYhOT(X52k%-t`dkpke3m/0J+F2NI0H(j6&2'V.,AFkGX1N(h9"ZnnPV^aIO@.`4`DQ\^Cjr*%G,#HGSME'+l0']/[a4>b7n
%A6#'j`((u*TG,SA&&#@rrGpqqVfE#;Qc]@L1f$QLe]Q7Y;.k<PJKR;X_T;p.>gR$7StPf*)qu`K,+]Pg1\B&'<A?V!!5+254[@`J
%84lR6NFOpg\.mV5OW/kKUg0pOK[Jupfhk*!,rlZR+%LX6Nk&?<4;a.pl!m'DJ+SYYDsW*J_iYBN#@7eo=eRc_Qe!Y6</AR[N=R?_
%b8[SN,@.?@QO5SS=5K@l1!l0Y3(T2p%/>R!?6Qsmj4M@[YImhih;fTeIis"&9\\06LHWr$+IuX(ghiNU5Cu`rKRo@$h,fjHmjPGF
%:IE8o=M++;doZD1bUHHj(,ItST*+`_^aj=gO$")%2O5/i%4$,n8jE7h#c,A!@.)@Kcs;n=AXhJ[+CY\bSe-Y@!YZ1EVFrhFdR.Ua
%!No;^/dPOs,Ji1<6qfNNp=Yb/pJ>.X0`["5GAEBW[[MlZ15l."lL61V9@lN)+Lpp,cBUnO?75"cn4gE0G_cJIX.$B="X?^>#LEK0
%No>*T`5WSGFgV_jE^XD<hFpE^'.9G?Pa$tI20=Eebamt+rC_IF_^7ZgJ#<)g4f<+M)!temfZ%@/5)MmS@G%"&?L!MT"W!U`6k!,L
%5(p^*Z11pCP+bk/egbO)>=5W)(1M:3lcRRD4s@CgUTdMT':@D,0/0!2&P3[L^MQQ<EN!oG/@8=n7o[dB14h^"8G4t>;`9&COWku?
%GiV5R-p`Uk;aV0[A=FHF,a\_8XLIF$Ho&8P[;cqlfg+SW6b!u!Y#lou!^>FCXI%>.ZE5ZY[QK5oYfI3lY0,W[66%;\1l7(*e(NRP
%`j>1s2CXSlRd+idXZs\i6fl-0phFGGqAK*<Y*m&=!ILa8`QD0C]J'eR[NZp"&)dUZF=b^3(M;ZPLd&,C=<R!aGE8q-=Cis;BOCAH
%=&Y?IckHb"*;04f+^^$UEu<5AXh'S0JuI-SqLrb?)r-KoIeE'$[4B>O1V"#,mn"F('C-G)3bdqcl,:[\FEe(7TX#F\87!h&aRO8(
%"@<7hms8Uo(<7*Y5pT&JYID_2$s2[c6=R;G3V94NL,JCc-=64G#8"Xl5sr%(mt0/SLq\aOK%C_NF`(lueccL8Lp3&*Id\\cltc*/
%feHUcKO7fVEE;cKWY/BF1#A[*`@hq`oH(-3nD.-9hL`_h>`8qjQ#aWq#Q_,T,]XV[ZMH-8V^BaA4R1$-a)F)@5IufPF7B/#%BVCs
%M9PlO.?lcH$!E*6A0HtRN3ue8(ffe)<i,_o;TQutjp]S9^4@ajb?dA&3A!,&AUCdW:9GHu&i`"ATNHHqFCM#nUC"M"5o;ncD4)JV
%)d#.(OZ8.<fYVrOTK%3@L.LSbk:[LR>r^7f>7k?FG2HMAbc3o/kqgNEQ(<EJM-'+q#d15HP`p3>.M?$oedO]0<c>Z$S59hGd(TQ0
%%.+&rL6.dD)#+<Haunp#72f[A//"-W6Hh")6.g>P_\fD?*\9l2"YuZ3X,*(<e\\aR,aMDa0s#bZ1Sk2N0[f'U't>o%-6hH5D#D<O
%o-8.fX?F5Y>3Ne*jsOge37IRYl5c/l0.@Z=i%7Hs&jA2-.P9IgrNl('LBD4bI+B\^Sn7;;$S.!/H=`ae1:$.<c3=cGI8nsO+#F:G
%@?B!$JkX0EOafc6X""^uSd>K$N1mJ+k/DoW@CD3H70A)H7)\7j?r7CE=[=NSe?3pR,LTi^S/GgLH%+T[@jkL)50QKr*`V&L=k'-^
%Opr`=9eUrdSPqEZXU%U)0*3/u.8G1#S^ro0QkuZ8b?B[(UoHQg7[&spiI!sko`Gateqmi!3'$)_7Fj4_A_s*HaEPfOeYGbIH9#1a
%`PC4tAOe)KY=d?)X!8Xc$rr'=j5?Y9hl(^#SL0$3(CEnr6n34>gtP<6`1X`AlR(0l`6Cs-gD\Z[+SlNhB#E5K"#k3\"Ve%oBX4iZ
%guo]<nAL(";@&'FW_O_h58\:E-o)Q%(D0(s8S#H/S#Rt,#!1WlOGBbA>S5O-$=D.q6Pr>VGtg"CEYtA1CC"aT;$J3[J^C5H:`3bR
%+pUq,6Cgor<LA*0;fQh,%(bc5q&(,s0"M94-.(-,8s15`)"Vk8oG-q3]7ej[-'C](0VC3$8V?0j65:fP>=EBd6dLV.8FVEL)+H0O
%4VqP/CF_L^hF%?/@9\Gp<2s&%9iSM56LAS-Y5:ttRG6oWI0tZ>mq=iM:!7*EnRG1kFA57\;43:iQ:A"3K>qHDeZIGPk?[Ag>3eR0
%5H'p7]!!5js&eZRqp/:P4s5T5`:nG/YB74L+*g;,)!")TSg,G^KqA&S&=ZUC$:'Y,1>Pq-N(@LR70_D]Yh7V"WP13hW>R7)EiC:S
%9q@YY)s!hmjUMFa.gm[b)'M'P2tX1)"['AhVPRu%1]onA%lP4<C(f*L(T#.ijSMJAC/KrL>QT4#:9RLa5Z5pSMjc+Ya.umB6j*FC
%Z0AIn]e<pY.iIj6Y*I9jNBe7e,/u*[ZT'cq+Yen:haYWr<MZtS+]&Y3&Hdr?JV4[\qV'VBn\'^>*KMe8:4_6,Bq9%/D4JR)61O\Y
%>a4S?a@0R1%KsSF`2ebMh'CfAUjS792Sl.$OkBVeNqJs)4-X=F"Eg^jXF*O)?m^a19^!>IaE6Lp5`BN.b]NYulrf`F2<9el/,#6c
%.6Bh5?=Gr,H>:C@C0V0@6sDHc-rm`+LO<"GHum*heANPokkZ.96Rf`&2n5R>*-W,\OMI,8qpBHEG/G[NlBkGb44TqQd[Nc56)#1[
%0\WPFkns9^fthTai5=/5pIY$fp?YgJR?/)MaU8H,\CIP1P==/YG[)Uo\3qK*Cp'3nn?.63qH"G30u#un?s31k%O8oW=m5]lluHZd
%M#a1"8e4?N0&EHrKHODAQ;1s>(i^5a5"7RhZRke[,UR6L;WNQekj[N7"YmoO+UX9B(<:R+BVtm*eS>YQ";&sGHnQ(kD@W>?ZGKWC
%lp5LJM;3\u,>^0VPbN;Hm9+Gk6=asJ[hlV\\Lg_mRj(q+52G".^Qehe5r?`-i'f1"3h$A*NKCaULfsWUR>jO8^=8&s\6DZ-H<nC)
%Z9HPm3^eI]he7E<\eIuB+=1XW\B<DqcdiVK+c>Ka41+n:R<Y_pGjU&^66oTGS4VpM+2d@4V7M,+R:?+nWHsK:?QqP3Hr5hn;8X@*
%e$#CeWBJK;42Gf7r>W=R)8eErX)To&H\:5grj%K,bX@YK6[06#1!j*WM8k]as0OWh4"9OZ`l92u'Mk<goeDECM]*U8+a?>/(HSbj
%?FP'Ci0G:,j)&-d&&IJb(^2H9qJILcoe!'fCKm](#TC.(dCgJH+e(Ck-7ujE,E:\dkamDr,3:++d?;3YA^X+k7>P!O-(kK$!jT>W
%7(20m'o2POL,!cN1(pB@[SQ2&+hELs-[#__4p2GKNOE(;`[X,nq%;=m.qEFl/VgMUbc#(k8$i7E;QW:kdugVWO%<NO<'oSiPqdoo
%8_OgP&rFGnY*FT(+4FHN=UT(QaSVn[Suo\fL&s'GE5;VZ:m"reKYqT!MjfQS1EuSrFr>.t6IACnXR+cbiZ#[n=[[tBcI4@`"!U3R
%F80F4&s[.9>d?isq*7_,Rq4AIT*[Y"\L:`YdReVB)uH!B'+p=XLr&uFZf?!o`,,q<33Z16os#gN6%SSQ:'ab%@Zmp$6nf91"Cqm.
%+g.kT/8j\Y^cK?4DtVA5mj95**70He_`.:NN"C[`TGki(,J\)Ze2uNai#,Vg"OON.`d7db*%R;9IHGd4U8sMc(t<4R/0&'LAEa,B
%eD*ERQ6Fl:JS:7(r%VhN8&ui;';T7!gZ1/U&G0Orqp![3hQ^_f3+RYBC$[ih,>g!B&-;INn@j'3_ucTu/:.rA*bReUpI$0EM23e,
%QH(Qd7*I@H_r48>YlOtf$1*?q\kintLg":E3e+)4.j*9!FV*cf3\-]:#(@S!P!lBF&lW\BU1cRhnZ0,ZF%]koJosG;.#p#90_f&X
%W%`Ks_0B\\0F'ug@3VmA-:8mf@u<D"U@pI;96;G2#C:8=mP5'8iI,J*GH@da%iYskb_2TX%gNT9`JTgH1mB6DeZtl3LrBQb`6nIS
%!$]KdhTqIT2O9.uVTl=m5VGhFZ$b&A-9D;P`W\N.X<q!`3&21T[_7;uPeB&OqKGel5pGQWM&^`*6om_F&>d$d`IK#81esGd=-Rt3
%=@Hei>fMWuaP$Z49Y,Qpm1H:GAnB@Mat5oJE06@L9%;CBWiUUG'(Im`]b/8GGi&VN#dLCF&Emg&-.Yt.P65VuQKp[<:H\\1TOEtY
%^_o4^Rs?6!$lV_<M*$hjZ)Hf`NA_NGB9hC"S"7>3;T0:ug_?h:/@f/FWhB[D)\%DlP?c.1-.]<FZt:hc(T[joSZkKD9bnu"WZf;H
%7i@f7W<EUS_/?Rr\?V'Rp0bPC>%=eb=B)t!?=`Ji2&=7Fc%Fh&W(YZa"'&al1s>QQhInp5MZnF8I>&\kUJsen"JRYtPVKS$@TB5+
%`$$[5Tcg)1ZBC&E,L4rj*YR5>Tnb,`J.Z<CkB\#5=No`=UP_!(:FXGC;u9p4NXC4;r>'qn$QrKN$tstr3jXFP:TDL2Qt=*U5=jRs
%GfFj'%erGk(drJIFFeO!+2mI3L-Y"GX/qcL5S)qQhTFH2I#h[G7?M#?XnLr22'+&/5%,a,0f2e@$IBDA9:-SsmNT6PKK/mtM0tR7
%1=Hmk,[$UGr@igG*FjciRF8DY0f'!JiA@9f/<[s`Lt2p<R!oWLW_>\taRJ!#X&jQiXB['+Qn5QnVdhM$R#pN8,,03TR%8@dN1<J'
%aJdd=aPo)8T]-)n:E4)mau^1]Zn[U80q\\">HEQs*C,'/67dZFb/>E$1JU8oJF5Fc.I'Ml!b@O*hir-$7*KFWf'Gcm_:Tl3<&,YR
%!W6pQdEf/,$;/\k&KHr1&5bd-,,PjBMU%GQig#=[I0+@VM-:d!lSV8O[LrU$W&>E3&i3INTR3>%%Ia\j-%Pis5u]](gfnl!0i]O*
%8L;UPO0[/8ecp*P.Vj\46Mc)eQ%@VQM&H[7eSft<D<:Wt@C7GDrK"s%GlkcEe#;CBdBSkPYcc]4"N>Oe)]At3?MQVbjN8leDG\jl
%3-;!:Zp>XX&J.>'dOg3$o"if`_g'>"Tt."o3sT!rM;K_E&2[/)9:V:!8QH=M#OU-J/M!e4*FK\`ZAc_t?prgH5p\7cI)B`PMLg)V
%WmS^)M>%l\d->]lb*m<1CEgX(:nO+bs"sLdZ8>%YQp2pSBE0Y*S[`RMWcV&IR0*itA(DoCCjf^5,]Tb6+>0rM_,FVW2Ha(oL7mn5
%GY%r'J;pWY3M/n'*X?(TGU$m=iJ8r+J30fl=mpIJc-QQNJW`D08Yfq)4)hZ0mXX#dY5un6P9dJ&&7W+`-j[]c%!eS(#^\sdB\bDV
%$ggKgGp<%$3^i+YM=Q4ba@[cF#`TUm1-"8t-lU23o^&)QHt4M(<NXMC"!f?3M\^<6C8`K\f#pM,7Tt?+c+5@(OJ3$JfllNd>B-TU
%@2h$=p(HUN4!CJ!h!.Xe*fQ\B/s\bL3CoR<l4?ft95kL5;C8F39Nr\d*F$tU7L4KOUNo`NC@4aGm5CAM)=8SZ@JCJD=V6.BpMe4g
%]2k,!><S7Gd2jRVZ)>7cW6oO7m.s+<l'j;`*^g.8b?;QLZ+QHsS]CgZ)[Q/;b5dl/miXYg-*9/U,,K>.63=Y1'Dmc\2:`8;dQ*Fi
%0q_Qn&G[fs#)8%,:*KCBV$DOrMC`![:0RalAe"tH<_GaPQ+7h?$:TSj!6R`W^g!(\7`B=J_uinI(Lf40"lZ0hcVD?G.e4oePp?m6
%p4UFN\L-TqYo5;@ktaQ$U'OAomRAi<cllpOEY"T!P),bjM5Or@q4>BQWLASkI3n9"\m:tr3,jk_!5m2b!+qHphGX$2S>[X4,E$#T
%G:IVTQRX%mg!T;cqZ)T;917$\"!9)7fteCBZs,'9%.-(/6fa?#.)lkcQGqXXWRI]!9h(<5f\o]X]Fr;3cNE;\A(:s,^01(FZpjY1
%aI^/YUks\QhPqPs35W+%^&jk`WhG+Mi'/Jc?Lk^#eVm4a:cO?B'#G>;%%Ga`!sWitN>"C1$6eqbMWs9mnZ6=L7n.^j!H\dqatN)b
%bC_iNWZ0;1*C!B.!ZckP4X!5I'lI9hE$E2FJd!mfjG#9EocCCcmIm>qQlE+%!4>5h!eP/i=`b-&/OdppJS`!1^=L@5-*+O`X:t=>
%-$(B4T-@0"X1H8:Oq8QJQ-fnNN/W=u2u;(c%!R=1p2!,J6%#[gTo5iL9VmVfcDY)qE!2%fjXI3:HSukmi\d5=nYJ&^5@bppZcEfY
%X#`+8^S5"FU98mjS-Rp^;GaIrmG++dR!6k.1TStiG?&tYOVc]Oc_Ul#6="@b@<nlK^gdIGG7jF#S`<E-+\?-=FaRf*DQ6*+B-ZC1
%i]M771!;^A!p/q8[>c0pmY5l%cU>^o=!XPfBFeR6EU&L<7Fi<=>_j]bPU2/7G;o\,i?8,'KT5.`l^@dCW*4dbEZiRokriQ-0F):N
%j3OE=pa0/^fN+>^dHEK(e@G!(\uk2\0L6?H&-lXrJQ;iWSK7ot1^BANLQ+KEBe2QkBTAHtCe"\H-MDg+?cFg29gDM1[@\3$JE9k&
%7?S]Y)V7:(\"&NM/P;=Z"s<I>Pp#To+ncokLEq,h1MI(Y8U=j06H(6XH9-E:l]<N\*pJhl"VoOmjP*Y7rqfS>OV%]0[0H^On72\`
%;gOOeVaUM0AGT%6+!kh+>&#OKkq[3Ll?70#eu8LLZMZ<9m1;!o!#4CO=\f(b<L!Z:_g;]0aHFnJ-u"9/!Uh*=iRLIm]n>hZPn!1C
%n.!a."MNh"30RQ2l.(S"CVKJ4*7AS)JD2,](,a(d3@g)IOTP[Mdt.`\YGoa[CUJuP-``rm*T.:qk-F2p-Q18M_1.Q27f_B*=B"-b
%FV$,N`7pAnq@SS`RTZ7FmGf*bWj3moX,rp#lldaVHmZ^f-G#,8Y#m\o-E1`Z9pG+/qj[]S<RU%bpHg_o8Ot@r9b!bF8HKm$A1jmW
%">`+R:K?is?.XoH+4X'`RY\XO6uQUS%iJia&qgXp7+Zl6g^sNUXf2/#'2!oCp,+YM=Q41k]TsAtU.EuU>$CR\$FZs?do'c`e$DF[
%95qWjBkqIaEC2>Z23qK^L@q7lac5F3H4Ge#AV+B;\+\mS%I@W@@dW,p^Q5fk3cj>W8_t'o/Ln"=bT8$U*C65YYM#`X7S1Osa$+It
%37\2ZgdKE>Io@&*WNpffVdasUSg0j]'/bjfo4ldt-:TLY!>e/jEK?\Y[1,W;0mC(/pL'5TjNPsE&4qVQ!2<,LRFH-;iVDCWh4LAK
%J1,`HVaB*J;%t=t%I%mu[opRj$ZS?eGNpd#GQU4<R\55+]in8p!Y-SGUE*D,0uY4?/QnGBIAaU3K?o_'JIY:1&=]Dm$pguB@N`\%
%U4Y>6.Q.`^37LVC<5M?a%eT*u/m-\ZM!Z,fC0?E\N)B$4=>`VSC>Q9njsBmFUTY@M6-Y9Y"2=[5G_G^N<6M=WUJ:$d*@@@8!"O\\
%-q'2C)/tjfmZC>+B$FX"5+nLamb!;j_:iUFlNj_LkA:M*lX$iC.%Lp+HF/"N+je3d%f=;&K+(+EBI0D`5^Z"fC+E5e:)/'RM2:_f
%/K'ZlU$o8,M;rGlW]nPO1];U7Ss'%AR1>'RhIU_Oh18^'!Dth(%uW)tgk:\Y->&N:#OeA<qoM_f4W[]@bT1\DfFF0XaV31;i^#>[
%9)!&o+T9eQo:h_$_@Y-:GVA#3O4Z[%ZeT%sOt(!Z4lop`3.paa:;tp4&=jU_/BdQ=KBjI%c!#iCJt*N+H237_.Y@#K+Xf^0cEVtr
%H>tZ)>Qu1#KQY555V/lA;1r^LH?p-J?ZOr8pe%l!3F5C`$0r&Al16C^!Bh=Z;(*$H$,,)O,l#Fr^$#>cA@HcVa<FgGXH?DhUFede
%Q\Nf=3omcD;Fld%`QkBA[KnI3R_*W%@P#ML;<K&OBZCsRlm]Tc8A%jMA3s$3`E4S6RZeFXC+T+Q-br94cB;;A+Bf^RB.5Y-.7l3q
%<sG3sJ%t#r`Wq?qgoP*roSXV;Lh1:7>Y_tf`(V-r\"Z%L,ps,K3=T)6'S"Y[89+`dj<X@,75N7UiA(cAk-.2W-3VYO*Rj_p(dFh3
%E8h0.*-S\(V`W`=%D-eJ?:i),OH2\n7#[Xf%bi6;4k+qmG]"KMMO50=h1%$dP!LNt=#(5r<A?ijO:X5:b,tJ*Bol(L;$0-nD%Kp;
%!>o/fH:<P'o'P4"<egr-i)&GpJ20)ZliWtk@cd%4LGBKW4=Q`]N-%eG6Vk);9+cH7F'K@mbYX$u3=QG?D"*GJkpG=Ig;.@h369ZT
%Fc(]c6'iZ)UB1l=8]aL'C7SE+21XmJ>t\3>6+SAo[p(hCNcfs;F[l"1b[Ro!8Vj,W$[tO0k:*PBWfX5k:c][$]';@;dbP!n<HdGN
%H)sq,?K'[,:\XCLVOosdmbsAj324D/NC:U?"Zcbl@$D$F,`Q]],!Q,;P*h#MXM1k,.-0F_Kdp>QMD`ke;eXD;Q@O['Y]6L)HL+Z6
%Z@#[E=&52)]n\!P%H:<V$,)^T3?iK=$;^e--B\Wa(5YN52M+_%cVU=T."hcgea3DT<3aNL9NWcG3%e7!jW;8=[#<:71q"Rf_@m?I
%dR2GAEqB]<J5Scb:1&Mq4B<^hr;<JHZ'-c_TV+Qo+q/GC23=i.,ZLl@q4oaX>nqrgF_dp)1+Mg'"728D74>#JZuLo>e8!Q^6naDJ
%$*/"O=:h%YOAtoDPj2&_m,a0FX83[_2Gs]cmcOQNaJ(jRC)+0VIMMh6JJ#etHr"i^/)jO89XMK3`DK<2W(P!:i)F>UQM<@6Br=S,
%[]7D;U%D/d-Ab0u<deCV2`.*8P&X^d@)Ye_#r/]?;L$#=!Fc@)Da9;7O57n8"`XU"'#EQVJd$rQ/-oJO4m"Ys=tY[DGn>L>S7!@G
%E]aq$/cshT!tD$SW'X#60+bg'1i-A@,$(,*"n&C8A;:A+@^9pM(e232`J,3X2OTqUk[OTKZKQPL(N!E:hX<0Q0c/ZAr,gF2#Xi^+
%)'j5\df-H6KM,,SbQnSHYYOTelY7]U@>IoA@TFZ*&=,)[bi6W^$I&]fVB%W,^Z:g0Z^t<)1FB-/+#p\f<eASh"!l^R_7mn9mBI.I
%$,bt86\Y>UrTbf2(_TS_VHF<D<m=LP)#L#*DcZHQ;H30.`'`qni\"eGOslp1jho)(Y[B[,2@cHp><Y/7[!EeC29c^sM?9c$$`<QR
%-KJ<?_%\@ni8mdI-j?EHQlo^3iuH$DkHnS%i(;s3Tr(T@UmrH^7#iuAj!#la<[/&%d"Wa3-+?7K3=,h]0An]s*W5;*U@G=GdT?JZ
%Op!7BFF`]Q5K4-qBPN3/mYgTf115i]U*,B2@4)=R`'"77eED#fc]8-o"R]EumF.mYq+_@c9NW>Ko2NAkO?fW'mDDdYB0qYc"%4/J
%.m)fm6pbT4b]=6nlXiS9"*P<G+F,H0;)sL.9Tf(<-$'rP\Z!?0n@BkWh1\k>=GOs.%%AW=\5![Qnb5CTA\bUiZ0S3B,Z,b3/&@Ka
%@aH0dk%J;'Z*+`aqBQscU9g-.'It>,JNR^59UbFfhC'Z?ln[COb.kloMWK7"2\r`--:mAk>8$4T"%K.tJ=nT$=nt\RON:P1jtKtC
%H4Q1nS;8bf$$V^$XCn:p!QqG<;k,[qpPUZ0f6n'-iM0on@1_Uigg&jINhcpoZ1MGS`;C>YE'[8dp&4RucBP7Ae="[1lnJ`$!3sSa
%<fmi]g4L#D1YT0ckU*lT=>m)rNU*AB;:-"ZA5p(#$O%"X_]`+hQK?5NMBArI_FJX'E=YMbW^J&sREuV*'&_3_/E2Ka.8kC8ODL%m
%pjqU[Lm01g<=fp44(1S;[;'5t!NM@+Vng)-(A4]]KX3#h5c#S]>&)Pu_O@*[?(&=C!A^44_!(,e5d*OIT]?DGM'DYA_8);Q6Y!h`
%+]QJ'l\$QP_N3\20Xi"=6u`W8@]MWWK)lGeDfs?JK_it43Jn<S/hoj&</k^]7\]5\\ZS5/p6#J5W[Y`K-+O%s?&9?)="H$q7&ue3
%G=E;kq.+0XN+Sbr.n$pu6WB^,@*EpgKqqOBM%$Ci:J%j**6O0h=HV_,`J#9XNRLOHI=`pc,o/9K^]CHNR]M$"T9$GA`tR9Bgp!V7
%0^R@]<1e+<:bO][[`;"&g*mglUESP81mT/#GZk9-01o1G6,uflKMODl+jQf30B/Aa&BRjC/O>Z:kd/Y&-akZ2bW47QCaM^tBVN@'
%3X;pC@cF)1+#)#60!g5V6fBN>UX1%G'i-rOI\bm,$l;Uf3tlq!ElfWQX9i3K%7)"6@Ll:ib6pjB#GHgj,0k.)EG@'((1rc[dT'`)
%(h1TM36G?tcg9<Fi5g5(h/\Sj(an$Y9FP'X!2uWm/1Rt!&tC/.AAQKFQ<:kd`<E[,KoX]P"n;hR@arSQMZcH<Qfla3#'KRjhNV"k
%J0$bs%]=aY1ZUK)d]3!`!atH?^ec<r=u<t5Jl)[SfS1?b?o=[h8a'op_Rba?*R:U!NAtn=9]m((<VM=$N_p#3.F!l%rTa&U@l"as
%lUnXh07HF.l<r/!X>*,%.aE)*0,3Q,)E]+d@/7**NgM*2JOrUh[Q37QLuR0!an\p&G@'B>%f8`=TO].LG8c?"p@B$K&acq$nGjba
%S6\tGd0gqWP:d#<'L%6ueA81b:9T4g^Tn33*KUS`/9alFqI*tU<0aFn#SE'a@*^`I./CqbKM4)`C)du?/QSU-f1AA1Q7td5"fhnE
%7Q7@Q3D"oL%4h[oBQK\U_2WeV$S*r>TT+9Y#,?45'L,bC$LA"l7-_UV.:W-*WY5fd7%b@<DDAH'+lZLH"J^2#^msmS9l!)UF,KNC
%]l*,65pH8`ql\sj17]%TCs)5VeRdcn!X'<6iqM:)g,%'kKV!kMC7ku3<?L_]MfmnBbf'JeVYL_>:c*jAA([CB1kJt!:Oj2:SiN(a
%"13WE<Npaf4BT9h0Ul-L)M3nKF^9td,a*b]E8h$^5D#]Yjt>PDZU>K+-&i\O<DMO&_@hYjG@aHr?Q6tJJ2,O06#7@rBkZ!BU0O\1
%mF`4R+dZ?.?%n7-.4_>b(#fQ]bUGm/fYnZdSeK^O+sb!?U&2R=4Tj\`r3@DC[fB%<8er%sl0A&%HM2qfjGqSqK\0215)*"T:%T?$
%(?q!s(4+qu9/p7J[le8ujIk2cZIk;d:,S]<ZJL9!W"RHROt$m',/#mh;['5E'].rnriY?LO=lh\cNUD)KE:R\Eqj_t!oC/sgSsfV
%]YYJ?-o%IQMs\jTo@";ui!b$@N8uYONl:##CSbeP$R^lG;4M!bb9?sAC-\?W39c8^o[JMs&i?)K<3$>Z6.)?i0Z81Q*A-pIX#/,e
%)&>KXogqh9EQCLpF"_KbC/U5YmD7Zt:qG_5ME(ku,5F@\;-r^Zh@-egH&49,_aIN"9BtH3@cC0HU]Q@8=,Am?O5:/8+E<Ta@;4b:
%'[\%F>__J[:.H-t7GL0joQ@'i0RuHD9T4S\+u]#Z>[F6r#qk^1SgOn6ksi&,N<<,O5tH=.U3`VaXt&4P,-f=W!FjS99&@^/b0gZd
%b/jf#TSF^L<5ET]+%&9dSheYT`\d=&:W3iI"IKRjq&$Z@kFQ3r,e>OX`0)5t%?g!Z3oFV58n!F36P_m#/7Sg`%:e_A2JP,ZUdk#\
%$<BJnP)E3E_e\[7b!g&DGU")kWL$Nd\e?/@g3%_dK9-fSKbFuU@M&ji(L8-;\Cs[cZ(`;5X"D>-egEK$`JQT$p+2Q#`.-?JGEAuT
%Lk0?D!)Xc@OXWGJFQIKq'mLuU'%:YR*6`.uccQsum$u)oHZB??r3^'>GqmKN\detrqp)U?k$Pqrla\OeQ6j72:cTOf,1K^K%+iL<
%3l!Hc%68U:K/!_-KG/T>,Z[KPa<WM`OmVo:A4U?kMSN]CN5oa@.nE&U.4pbXO1R^iHNTfVh%_gT-9fHGkS`a6os%RV>jpil"S1%e
%i:6l!.Y0sW6*(r4M*hCI,sO35C5sel@3XX/*2>7;/F*QZZ%Bt<R=j_/fJKh]&[liK=\%6aZp5af.Oe.gYlL:I9'h7=@aCPNC(Ugd
%mZ60.3QP6'`;87Me'uMEa:@lq8b`:UI"ge)`&hsAUP8P\90`B-<CI\aRK_;0(DR[8lM@+9(?WC=plGi`)9&'?==J9MM!@UOpJiY2
%&0u1mOrQtF$d@th7b61fW7&aH+kK&iMFSp,,D!p9/Ktqfi+sNrAVgLq+O[l%I?OB3o#>YQ,s.^gSTG%Kg/OoSFm2?$P$mn?9YHf;
%;.e4`lGtf62-i90F6qhhCL]=EjFUP]S[]0N^QF-@OC!7(i//RXk*ICGg?C-dF=^8p/Jd7GN1*`LIIG*p2WV)a4?'Mi5k[\6jtp'X
%N?.A_3@im6e*k72cK5O+l*-m.`T2apMGkKZFq5^Q^\Yea5'22gVo&X=3nFZBFX&o7?;OKtiEs+'1_GL.H`Q.2U2,RA$EP0%f#]ZE
%FrjO;0aIGVkg`;)VE26`HSq2,dC.niIb`FJKN5iq"<\t*]g)gReEZ\XJ5+"<94QMb-FT-((lk')3Z3o2R(c9B$M]ZgnM7Lo/CHPF
%/X%.89^1hc/Y%.JS>qC)aHXcKX\;:9Vd!IdQGt=AN7I,`<BtqoGqp]6CM=1XZH8=IF1.neI>'Tem91oRl!!<1Jh<4*7RSt?^dhfX
%YYiS>U&:)&2teAnbM=hU4pLj!9oZ335CTp5m_@>%rkmoK.o61moBc#'lW5aR3PW=9hVBmYna_IYRjn;ss1#U"^Ks*.+F1fq7>RR`
%C_iXqZM<6O++No$s(`Bn@IToXIYQbZZi0O2NV:gF/A>Bep]$W"ZhDaihmPQ-(sE']FkqO7OKV@P@?-/KfN*G_]fgHql)Xc+"#'Yb
%r<kEXg>3((P_i+11/L<KmBni9Yg.S7g(2/Jq!)6"b5gc+h0JH#@XMtM!TI=3l/]0NZ2o%r2i_Pb8KS.@7f.7@s0UCe.h>TN(j1?O
%#`'!Km?1[=)kS,Z+9,CE6kN+I#u.q`lIpc/=rSmB[43!(jt8QRL8UZYQds#uE8cS[iGcg-KFY8/.8P]/J^g=3@J\!9EL=P7K#;$*
%]0,%3PABLu<]deF/)_#hflliR37hNO3`ppRF1I5SfKbmcF5rM9O6HI$Q?gBQI.&ErJ(not48m'fbl/)4?2TZhjl3D63hShI8Y^o;
%Vros:T\ajt-&m.lAm=NuXmb:\pQ"?OdPP7*RulkiN_\/jmgHFPKVS3Xo.2fH#6s_!\\ZWCS;/Mjb[EfC37,uPkkM.B39A_).s\Ec
%.oY+dmdL)HN21ZUg`Zfl+s[H4)@$&k$@T3!ETT-=T<ONVMmRIJ)b7aYA9MAN+!*>CS]+>h8S/]g?4([>e2]p9?ELYK2S;NBI]c4R
%=uftZ%%ssb_/hkG&0,%Y>7T]u3qdXfgW2PN]e`bhWNP7MPrf;%$6q?4V^Qm47e>s@XHepbU:16?)\[gfGU"/"OR;\H'fp_=A,SB\
%njYZfcm\PchJMoD]t^#nlA&N7(*<O,A_f&r:5:DS^ocY([aIIDcKiZXNBUXVD9KT^Zhuk=X]o4^N7W!<laF4S\sAFB<o-6:Z"Cb6
%FmDM!J*HVF#ALZ;#G?]rN``qo&\AR&)gsd#NJk$Xmd/s)Qc&RO,/l"sfYV,VE2+kG)..+IQ,IOj/sOIeecNM<@6d@%:6hR^*tg5C
%P3\mPLPs3a@1fC8&C:Bodn`3C]Dpm]ir8NBk5=Z1`I@mTO+8jER_2oi=a^),rpK@>LW(>W5Q:T?iq;uR\+f(4pli[hT]p+Y00MR>
%W[_"t]b[IiGA*l+Z)^H+pk$Kq7r[\NrJp@V\(e!R/ct_1=1:-G[$TUXpH<i@FM%Xp^O5t,="j)^f$GM2r859gjmoEop$kPElH_/H
%:VZetm&SlR9Dj&ra#Eq\Zc+$dFa\D]rqNE$nF#lEfD!Hi38:l@GNZ#D/m_dh4hFqHHFUqlJ%N8[ItW=-s86noJ,H'!jq#@]NfAKM
%^O"/,?7[aZG]CKp*SgSFXGoI`rb8R6o@)g-q\M&#_sMV)RG731GBn3.q"FC*ZSp%J\,UdObb!iaqo?tCrMph-S$_&&/E_DbD)37]
%o<8+a_Tt$8nFQ(FnG1t5IX^t\`VEI0p8M:\RkY^moVZsZhD_$Ns8)0\f2p.bMri^FJt@;SC1uclS']ofEjpGhqJ$M(Q\N,@cHYa?
%qoekpD&dqjdOT/.pWKW!*-O;U]rT8c\'O@%p%?oQpZFcdRafu7BDh;<`4&P.qt!n4^YCF@hs5IVk&AM/p+r,][Md^Vc/A!`mdfgb
%@iE83hu"L<nqisn^:q3]rq5^Wjbq<?)-=VuS1EN0G?\tN!/F/$^0KNchr!;8QqD;.h`Ui-AfLc;IMfQco5]/(rUT[4jo)jPnps8]
%o'b<<nECb4kDRZHWn\XjkGZND<OnkSGIp_;$V+4bq;$<0I]pJs]mOs%ju,usW6B\*aiuer#H5kk0G,=J\YCd$eE)_%gejF8L!!29
%=M!:hko>L3pW,Jt4_NUsp0Z9o]_lbpp#O*fZeM+4Xt.'Z;>khA(]Op6q:5GM0:"h/EqmZ`X^GtZX*K,Com5@eoda%P>tP-I4b*Fq
%e`HVOj6a2-Dn1/5G'c-&XZtP`?_9-03F)O9%b^]kj0A@6lh:/G=3LJ"S;%,0lX/]-%e>ikJLCrSHl'7n[s.lBdu3U>bN,8jq.bq,
%OPB.rd%2tUQck<==6Fe*[l:MYcYqr^](JR:2Es!IJq*dObM/NJ4&)qDZE";WLm*)VqX41T`U_-iq7I_.Bn#.-^M4[k;8.LmD+jg3
%%"7$CC""<]J)7m\s.6J0s5'G1*,!N*hj&LLmpjRClZXdfHujX[F+6*o_Y'f;2iK,32k7/.E0*E4Cqd=O*;I?1"5_F9o.E4XrSD:E
%VXqHiQXeo4^^SKGT6'_W5BjWFk01ZfR=jDQ*+iI%s4h5)REQi@pDgViX2u@JY1`6\EKZsO?/E?+?Ja"rbX('Gmi]4.rS;^@H2l.b
%j]7S`nT$`c-2:as^$ig/G54G=>i,F`KU"YjBkRE2H^N^NK9"q.j`?COff1#LJ>.F?*uQ#Yif#P!moIb;VeH)tR8.[=Y9)RQQiEZ9
%NdU&19_N!d*q\:aZcgsANg_f[XfhIrU9^@r?CfD^R3.ZZ3TJ!s9M3R":%k1S`s7eeDsq#H\@oKP@0ZVc6T*q5Z*>PFg/I/,OR`G8
%,fUglf5Dm85D3.e#Jd[[TAfN*SFaFH/<(0_^^iC3p&QM[ce;NKJ(EcgN/)H)+*;E#N(Db,bjD%-rI004s5'?K6b.FO*2)6E))g[,
%([!_9bH!#6X6%;_4`((Z?#@!qB:,IOI=CLCltV"(@]W%R4uYQ3a(Yjp(Ra4^Jn)NeZ)nL*oU.M'6b.'J\:!u?lMP+:]tCoUo).T8
%?9-X#Xh,H7gk3sqUjRhu/Co9WP98[G@Jk,*Hn#U"qF'^6X.E`u3uf<N"+\2u`T']:)>MB60o>kkDmR0s^7UEGfujVWpG'QdE&abE
%`ag-:GfoWG@62^fYHI#AJmId3K3hj?/C.rs/iQMlilg(:!N8B7>tsV^lDO6G[tuuk@s<EO2tPg%b?[hV`jr^rSKkc'mPTcLIWp-%
%kKI>??-VDIM&OdrB64(=g#`1oO)ke*Dn<7q2WMS8Rfi(HX`cR]S(jDm?Nr"#]m`=*aQ2(aNH[7^)5>G:4aHj)3/tDnE8#bRWpP`s
%pcVU/S)\adG!"5*c>P>=B5On<IAd`?!+<6*AHlL&7\Y;*3F"\B8<c,u3>D)(0bS&im'F$Af&!%l@jK3J7&%m+`B1k3Pi&?Mi81'-
%6b.N'Yp^R*b:sdo\!l1_e_i]%;1:H%_Z@]M>WefaPW=pfPhY=;Mm@!,c<C?H*bHtGX:r#9XSO*ZU<K%LU%#QZO%#K0/b]-b4OdJt
%Mh`")11r@tEpDP[Qf\ihC1_n;GMjCOr0E*ISi81:lhDb9%rpWK5/[[H`@a[MT^W=Rs4c!U&5VEP%P/%c[MX':7YcTfo?b:X5;_ZO
%:)WB0U!+MPg:Qj^FQ@3nQJfj9NdU68f+*D9rV<TnNoJbi>h`o"[Y.A$jD%2fp24.&.'+GC[3Ja7Ej^\>eOGVHdiJ4mpMEK6/A\N4
%aW?ZKn9BoKr>=YV0q,?Ma('3R7[#tKbp(F=i1ikn4"H&(BY,dOm.XB;WNj6W0)r>lqW@)@kGLD_H/,mBI(-c&h$V5BB](J/2p[f9
%05n98hOK7A]j./dIk_>H@;*9RWP*Taa>@h-ee+6\\%"7*'+;e)6)$>jU$QMtDj*#<819si:j-oG(A9Os(,iUNRmm53BC4mUs.?\`
%/3Za2aR1mHG<pW02ppht'e9+j']%T`kKYP6IP=(co;;,+%--7.c`uqoJ*R*lK<+)fggU)PA:8h'o(H'^?,(j%NDKLFI^Vm=E%81U
%81lU6:@ujm)sj1Ygg>-bYUp8s1'bQ]/RZR<[e[lhEsVY+LMbp`1'`.S]P?nRa7Hpdq\Rl-q`-UW!T'!G240$-,<lb7ie+`d&()!Z
%No0Ptl$(AD48OGfrnhpjji%22"5q"DgWN+empZ!@O*+$Srne_7&!$YHXWQ`is#p4.hcY7.&$Rj^c'0K752SN2R-_@llfdq'qL">f
%hffiZk&.:K1SM0'X`q1pIU6>dh>['?WEig/nD_/>G]Wu%RknZcqS:Bee/8najn%Z=?S,&lDjlu21P[ih4g?fB@0S63IJ:CR*clPe
%[/$<b^4!b1H(R3l954*YNYXBM_N#D;UP8&J+o?[kaH#@kpXqkk9<(.DanEeL7f(8?5MRiW2kMrVEVWbL].STCrTqSJgT0H7B6VO3
%TAA@phe_t$+73^Q@"W$F3V31+Qe/G0\!8&**%Pa6X'M*)9P8Y$I[b%9)qs`49_64LC:%Wh(j?mfnc^H\B?[%[F5,$n-Eg`.0A8"&
%pC>c0oga0QhTVVMTE"Si#ncV__>_ODUsa*pm";O%*R.*$D*F,(Yg_BgI:K9I_opHsE\tEK%515hbL,g"1q`aP2\h]_aRI&I(pq$t
%%57U[JK>7RmpLCn*@lLsEB\_Z5^L;idm73"hFRh)H[YU=i_;P*9\R063.*-/E7eP3ErZ:8*Gf31*0+D?HP$q%pL"XFXn'G`7@TYd
%0t@8Xj438i2s6N3I9=P5EK;!k^0cmj,c:OM*$54pdsO?%]GD)Ff/fS:nVG!QYRm2YiO^/YQ]C9&]@s-s)k<WM0@$3GrcB\ho?af6
%B:r!?Zh!i[,WPR@p)/Q.T5EV^PN\B`m;?^aRDXtuX4V+#O2p*uYM86d?S1a*1u'[Tc"+qOG36QZ3W:(BJ7%ki+/UftDdVW/\j6hh
%UDu.u6dX2]2h-)L%XkUP(HJ9#GBMs!0P<F2>s=_m=i]oQG('BC[-'q;cM1pkUu!+!^%3R*8*o'*eD'@-8$M([B#dG442q<c1^@s>
%-kF+R0kUtd43$,l\qbIkO*6JW*Fn!@bgDGjZst)3*TQmf.t`S"Im,CLlCmNVcgT.4ma&)N]"OUI`_=^lFZm,/SP8;-4\,,1AeHn9
%#6t@4HZT)Frpp%tS#pY(4[Zir?XCuLTq8XJe`>im@GST1rjj,V+(ri5CqQf?R?JNX8`-/T>5mW$q>XbSD_C1NE%C>Mq.Mp5[XSDu
%R`.1G5XQW&;@a=PaILI&4EH!67s;K"F0>Q@me1r:9>G/OR`WGMIQHIPD>cA>JGV/n*."fm:V/F^]F/Q&LGJf*rUo"@YHQY`+/VnS
%Q5$q!>3Z^lABsph4$Ke8RcJTJPg7\Q+'-2/XQ^],^/WqE]b,V:#M\ihY;oP6s'W#_LcjLJ@IQ@a/D\'8/3>\4!_hfkMa%VSr/>$Y
%"#Rudho$;F9DS4qFh)cKii(-#ee:)ZF%:*8W6H?j\YD'l02jhYD/P*\p!C+W#8eM*eE7<3T:5k5EIdo@N*.1O\YD30<9K;,h"kG>
%WcKugTD5Y?\QRBAWcNN_c98HD5bXZ+M>^N?rp0:Ofai;iF7-r$Y0T8<aq?Kukp%=gmZl:i$1nI##4CDh-'%bf7pLlQ`0K!6j;ng&
%H9VBI].lc^2*m8&.f[Q`=6CD"r+nZpgR%(>QhN`Ea"5]nX8ANmk#eUnh6-J-bi7"TF,jkXk>72d?XVn7j=-Pp+nklcH#Voj?O#Gp
%pU,&`ZukdEJK@T/(2nQhp$ueJ4LmGD,m[1JmqSWroO:jIq\9nMJ+P'?5>H+hJR-N=``M20S#<_S=G;0`DR]J\Y%BU;P2t0Z]BA>n
%bIO*_gAInbri0\V0&q73pX8uVZk(sMD>fF"GQ.'SldrJ5BA.B-+#_A/)d6RUhe&=hLUOg`&mdjc^uY;fimS^1Gh\b5o.L(-6Oj6e
%^_pML%oo'^@\`B7(p#s-1V%/<H'ZkWq-PdnDjKiK_>_MQE'9)%^I-E:SLP5$.'W$NA#`%mkTGPQUJ1=:#P*QD_*JGtmoWnEcWTmm
%1ZX&$39C+rDMM7HiinEu1G6CkcIlS)gu7sq1P]h_.[)mfrLUp8fS%?d_@BSn)0=H]AhjV'CY&B%i`jat0(3.P05$P"32eoZ^4CV1
%n&MKPqesb5\(YDRQfB,C[!f\/kKMn03UXp-pAK$%c_lfti^)d3a1Ljbgl7)&5s?&'gfL34__Co(q&UW"'F2/n*[$3`_l>3c<k+A]
%N'Ma:\3pk5k1^J\G2G=Uom,k@#%5G:n8Punr6M74Pk+P$ifA-jR5@#/5/6iYemI1\YMKi<FO6K4ea;1ZD`V\2bpFKtFS&BQ5!F?`
%gb-q"_.."<H3bW2O(Lq)H]O?[iN,^7REjF!;*O>!:]CHJ9Y?!_ZhI\k_*urRP-]30:(hLl^ngu/_4[bLKVRT.^<PN@"?WO"o0LOJ
%j+j(c9mC?LkhlX0LNKf<?Mj0do'S/tG<<0]m+W>j5Q?2Xf0'E*Ug)%sn`,<&mp,JEV"KbYa^8B3>^Um[CucaVZBMpTMhf$krd*@3
%]A@/niA7g\3t2Zc'aO<rs*f0@oBQ.A8d]pTkMK"6fm=n0_-'"Z3P"5o$m.=,h+H*ce&S>hK->0*?X4[0S6rj7O!0f2-H,HWNSkh8
%+T:9j^KL1#cSs1W(_Y7@OIgoDHh0tt"X.V%1&^Y5LWc1W0->]9eP#-3s7k[<lgJbq_!1Ogrr2WRPE3uJo8c*kMsl,kpnQF_J+WcS
%L,j\`Pcs%Q&hik4cg]\=[\*Q.d=,8$ZhSS2hu@1%cWUS2I1(O@ms:4nod?Ha\B$D9PIS+<U/K9uP3OMCgQQH-"MaOajs6EW;F5*t
%G=p0m`J<:X;r!51Nh56Z]fCqh,)KY:'^gb^Lm562H&P/G]!Y.H'N=o+m"?"YF/Im*cUQ&2\)+I8Iq9d-=3k<?^S$.FrfZRR`LW6$
%4a1%\00lnF>p<i@Fh@Ke#"i)e)ma#uY@;\RNU8S*V,*X2_pk+&VJ[>u1$Lgk3+[04%5QWHhe+5"Pbfm:(49C="(g+Rj'oHG*e+\j
%i/doJJHP^an\a2YZca\?0?PYe&ft%4'm>B[HON!nS/D$^>s*.FnL0Y+'C\qfgirX>f@/;j>O)^tp\<`RqL1Q9Dqr(R2t!ZcO5%MN
%a2]:Pf!NBS`36B9p%H_:65`#I2Tklohlo9!lLu4+fjn$@>B/,P*B3]VQE@lM*&^^7F*+gqp\].%NCS$ABp64h*0:UkG(!Ff5K^t=
%9absZo6+tdPL=QVPlA?sGHKcR3en0Vp<A#hmb4dkj2+Q7D;2FIGhSs[ql+u:LSl>-[>W@\e"iPrh$kLWh;/*:0'b_a22b6Phqh[6
%)r6%tiNKF<T<W)%LSo.*X)H`eqWe%irD>q;@?K:/Q:8Rmrq+t,q%X)/_&k$Fe0e=a"MiUVkeGt[55RRfT=GWFp7K3)r8T/_n,@*e
%!Vkg6FI>(mnbZN=FglC^^ZLFo:3N4UQ+$qk.gOq7*8Ka9r'$V^+5cY$5Om4?ina7*d-pq+i:"Q<_;C#8dX.3Gd`6aHrI!+=3$'\'
%3WXKhf#%Ljf[Ms#4;qH$>rrnXqHZ<&;oqa8_l\;`\+2shIp`#'Du+m1rE$aqI_k!$%SV7e#H[BV(%/cHX.inqh/3#EXR+(gr9d>N
%<8@(g.dYRO__/>I]@9Tp]\]E>H2Th;@@+]dkg;$]EIYLp#/OeJgMLE?ep]O`*LkccM]Da6\=>QNc5@.>3sHX=L*+&[m4p@C0"IG0
%:Hk1O2Z<.$3A,Nk]@?RL?KHD-*!%u`eN:CP5JqL.f6,M*Eo,&`nmm#pGO]/819lb`?h/VSk:;9mUp9TgVHfu*Mp3WCZjd)k,b4X7
%i02i=&lNj;%$m>:jamt_3D$[5BhK3CLCT$Tn%BQL7H[E4l[1GOXc6`M]gAE*qZqtC4HZ>TQ2._1-4)&\?YhpeknD<=YpU\B8&(WT
%)]CqopR^$aDNJBr36@jK4#m215/a59K8aeq>V^PP)^:eJ4`d+%pVa_Pq"1WAqeqf;[s-0Pn8K&c*7*=S4oP:sJ*#qnrV>j:[A5q3
%c>6_[g$SOWVk=!k5&Gpu!p-YXp5r$-0J(Ckcdl1G]k&KkQmJk$P1+sP&aekKq_GV1MoO.*2@ekpgSVCZdDg`4`99i<@cI9f&[O-^
%La=ta`]=?@f`:c8M^R'Y<KCU91jPgB)b=Os-d9RK0pZ'ukSoFJ@`^h)p&qs"\<0_%G&-6[agam[i0sF+6sgtD9\+P3>@ZlqGI;Y'
%6fEsPS$f@&BftLQ[&t35b_GQ@E`+J2VRBR=Zp`o-oO**m.ucjP1u(GN=bnMq5f>QY=gnr<Wq3GY-lFibiCrIg]0LK(%?@P&PE2+X
%MPcXEZ0=tNN7eJ0!."um[?lucE>qb!U2c3-[:Y^[MKa+.\'<o[.f?8?lekJ#_->S/N^hEPWSk&k4(s&SS^-76nWUp:OKm`?D;dhT
%#r[08._EFlD)nk<Xb^K.0>mmtV6/I[6Z1\#_DK%VfWNrdnB*VkD<B!b+IT[!*7t]egC"`+l+)31^(19mmq\Wo&Fr*Lc-_O\&UcN'
%1sRl(aUScZ$""sVq'KR(+M.VsI+AggLBhK9Z4<Hu84ot72aM;-jE0U9A^D"P#(a7krt*Qs>-19dhM^'jNNqr(QouK`"&%tW/kDB?
%G$DXh&qBC[C1?2V/eI$A0V(,N0Pq5gW9lVm7cO@Q7&%n8E7PIla4/0],6SZ@e+!Vikhm!d@63dS45paia2C@Z',+Yb95uF'[+O[>
%1UW'_QB?#p<oT>7r(SCe_!9NYfda,e^T\`)qY.S,Q&6"qSN0f[Q&%'E_Sf8&$\-0\dT7a,_S!.*eA/,J?kmsiTl'Q.&OY<L]S%Un
%?BsLp9*@8_4+MZq45/UFKC^(Q1AQ)kBY>?*pC;[0\0$gB^))G^lnU[ge&JhUT85CNO_^sOghlPsG".p`AM+bPp"^LbEIgo?+c[F8
%C3H"@RkL)<@#REg+'_jQ1%)L.]G'!BQ@9c9Q5'+X"RG,j>FS\XhV+;[h6I,R?3d7e5DVg]CnTB@19A<Mna3sXY9rgp`Kq[)6_e@>
%VW*G)\Li@E5lf3E/S1S>67'Yk4D&H>A4nkcCV/;#-5sC;f_/BBg'rs'\<@hE`GH:L8jtns;r^@rdq4O49D]jO20j^u!'WcBh5A9b
%YQNP"f(!>6M:Uk*1sqrMf1fu51nU"q\7nRR8DC0--CaMTCVAMM!JCK</_^(@c_UH?D$j5"Es&1j`j>t;`fh/Wa,*5<odi%:>D'A`
%$4F)@(r*A`CYo/1aNc)d^GimRjAFG.Kp`8G&aFbo<&@E.)5F1l+s,+H@1$r]lHPEZ!`,84XF(<-KJRZ+2?d0W80(DIipVPJR!WNF
%3>=U0e,l,<".6#YSq1B;_G<6R9qc-TW2[OP!o!M56M.]&I&LR;BV!Q6Db<*q[HY/4,4?6X]<%P]DG84gPSaKV-;XNh_0O#I2Z@BI
%Hu7K&2t;Y'dMds1NL1`Xj2PU=49i_NL]q%Rp9fm&Z4?8E.*shtefF55k7"kW)BWcNU>pl:6-gZKg9ug=_\ueh/WDD#rlU'C3&%eZ
%l$$Ll,c=j)ce3.)$S3=&,jgBF4mW<5^I#PEr42mZk*k##8-0Y.nd(:Vn\cV=)h('Jl[-ur`&Ap\gpYm%`Vu7N'Q@3&4Mt/h4$HW*
%WY9M%=(!8]ccbH#&!@0gh[kWGGiIAHhknPCaMDcSgT)o)_I9l'0\:cS[7*`a6$p3/Q1M2<n.#B)cm7;Q$l0<o.("u_K?/c[8D#'.
%jqAFY*1DoAF=]3!G)E@+Kcop1=t:O<n]h4](sTI*<"FQu0We'1eo4M:T%RjMh?2fg073$Ffl(_t_IkcB)GhmG\N<JD.[e6Z`!!cf
%H+%tjir%nYEK*g3UFtq7X>_Z=kBhMJ\*_!X/0"ps[-aUk-g"UXFQ9C*?U=/qhUZQiO,MYHE\S!CP_lKW_>S4O)@*nfR/o.YQ/ic-
%1;L?e$QT"0Ft2B[E-b3D`pJ5``6Ohr+o4P`-l]V(2IRs*>G?sibi<1W\I90ADd^?]1_:n#V/pmN#5I]1T``HsRHUL:/^]@Xo`Vr(
%9k7^sgF<de8F73KL?_W(KhJC>F?ruEPF)tg?`EF'Sjeij/DYHfH*M;li#$^U,Ms;ZL%=?]/ns2qN0S=t`!_]c;T5\ZCi"sk+L0&-
%FEN+b$B5M1ZX&c\fuhn6\r>>kfN%]^_G+U_jk8.B5j%]^;`-E_coohlhC:ZFH,%]he"h#MZ5r0&'OoK+Xkd>XCm4L=kC[*>G?q@"
%f)sikh8NM3@N#j'?q@Y84D7,^DD"=8o@@sB:e<eP6(A2B<@M[?GUi?:r2<DC/Kpg<d&-.SgX=hLZLbGdH=O.LX>dYB"'Q+j#KJSR
%g=1Fb6NXs#%<@HQ<qsmHn,poTp8#aP4X0o@PKE`NF2@6C'!UkUN7QsIfNP]sdI^bWq:R)R1_mW>UpeL,jg's6QbN4am.X]9W-!h\
%5]7#niO(5,Aj!cr$#LB='#^MtMLO$d1<18`N#_'i1i^>$X_nQ)m6\Gs@0LlEUiAI*Z&*opoNf%C/)kMsM73\-XsR2'>\P!6cbc1S
%.o,&EPA#0KX!e,-6`B=AapI&*NQdN<:G=La4AP9\JbT)>XgLAe]<]V^P+Y+#'A7RplK5D``goNC\k7!i=("^6<ZFB\T(Yuk*S7d;
%>>JAM3l!-R-d7]JAO.?jA<sRG@djc6h$V=2C3&(20f$'<`;oX;#56\K5WE0fR!2aZOJ+s7g@So;"=2&F?+2uM,]l.U^Z_5LB>,%>
%=[;"C"HbE4O4NVkp3%"G!iqL@=Po*#mj<q#F5l[V[2YmZe0WM-mb]4F2Eesc;\JWt[9L:,!Fh^;?[h\>2?)hrC5("cULc<X?jEdV
%>1pg\`b*Cq"b@H(?gBM"mYE3dVE&OA(?ESr!^iG7R,_R3J)OTRc[IC##_bG*-CAr=m4T2!GN)<(NQ3S87U(BL0XM4km:0Y$rQUn6
%Ip`3@rq!b`q)7ss)QOc`2])\J(ksPMX_Jfa2PJDQQ+MVgNN?-LUNAd,Z+cdFT,(k[,obe'KXNW)OJ+'/^RaV-Z*7i"/Z6@'b?+J`
%:X\`M$c^`JjJS'4WJ@?uB=@'ODeJoN/4DVmX1rYt=8TFa^r-6^4=9ou!d?E-#uC>G]@]`*]6X5KIW[<3pUcdYp.YYj8:;/fDo3oZ
%Ib[??hl,Xk9dC[Pku)rq7'Y"cD_[2TBDNRTgq0ZjcI+%H1spl'E)#Emcl;,6,RP7^gG`3;gV:N&rdU7NpMHh%Vge12me*UsM_ECp
%c@8sQ/\\rG[_2LuD1>g;?Vf"OXtG3sbVF)4pU7f.0)X_jrQ4&'0I;+XhR;7YXcM][f"CO8[I1#Tp;GQISmTSAD-MC9doQ:`V"Nu1
%o=Kq8o;fj*`F"quO39V&:OOehZYXmWalV'6Xn='"'4/Ydo$]Jo!8h;0X?SuNiP%kX4"M?MQi8poTtYfr^[V3o=^f;6mCrPJUrK:*
%2*p(gH2@hopFp`7q)E@MBB&CW@r9q>0YI'A7t^e_+bFG)F<U\"Z@0="^_T$+$bl(dCc_bRCcVd$';.8]g`j\=J#VuT3cAe`ca4#j
%?C75f<o8AAfHU[1aWR/7lJThSRJgN/<9\<6]$tVf:]Jbcm8#\9)r*9"r6NP.QV[YXjHIQ\?aVmkVHpfkIU$WO:J]Z&9'KXV<8.tN
%2[aBk(X<l8Mh9^]C%Gh1ma!Qcq3K&BT>.tMQooG6qu:a3k&#,!9"sflpN`A%*QgIPTq&)]Ah$r"MCJsCQYgR.^(sOQRais;VWX$;
%g##o=KX.n6^8LG1I:m0'L]3Po,_\RY:ad%3+'nl.UAm2tF_V:[f<.K$`JZn=K!p`BaX0Ho,r4=EnGTiI5QB-"'"%Su32dg8a0ctj
%%8Y:hqpdhng:l3$T@B^\5K;Pd_8f4GmnJSHB;=SG7n9bkq0?L[A)PK[.j4S]:c870cZFhnRl^Ikd`Re$G6jEgRDHt)V#&d`Md*fF
%\S7VF^-R7#[Jr8TJ;p!DGQa8H<o9RZ)WP)F[,@/F4K7hoc%%NdY`&T=(A>$NJ+S5\/!mSUl!SV?rU97>&Q/>\Qp@A^J]+D@J8^bR
%CUA58NStuHh:&qfq[E8hio'a8e7S#nLF3<mS(Vb=&:Bo"iLkTiRA2\N'm9bu8Ui"CJhO,L/[Xj(V7Vho*iEoRkY7ME#Ge([XU>;\
%[AI:M*fOL3iGP`6?GG;pT;CNHofdBR_g`ooiZJ0qO0u):/ks%ZM>-f4ce%:0OQ6j-J"R/gs/^h>F>+9)e=2`"esk'qY958BG(`%-
%ne;V=XVUKH5E63`NrS4U..CoKnl2BY/#T/iOY<-#AX1Ys,BT\l<TX,C5Nr)$%-<JjM?6lPZDc2<VX+!<Qgbcu/$Fi18gnK\=HR..
%3MQEZfS1B:&,dki;;nAd?"jKR(>o^'Wg"]Z^kC'64/rqk.Euj2N.4*R91O+*j4mZNck!^\o>&EM^+S'sU?Qt6d)X3i\cYfl!ipR0
%SR>Ea8[(kqg8Z\DAHgjm=\o;NB8%2F&kZdnk_1IJpII&N1!ir'B"kN)8\e@BW[&dFT4d3na:n-:!ZdJ7C_+^?JMG.d\_@s;JU[id
%fZFp-%5\_iP8Td&UKJD"BpRgRe*)a>/F`ERIoKR>_#QH`3AqQ*]sNl&JL24VR;Gri)P\l="(iW`pcg$1`)of/+WE5s@i!)@R*&]f
%c00$O8:F$;K:rpjNg/2CEJc1S$k-o>0i)1"BgG@i1H>/$Am",8c,*UE/h.>`F&JeIlu@`=/-<pk(Y0U`+]4*.k#EQNjc&$DM2u+`
%>*:n*Mb/J/WPbee15"O6+N6@tP+hS]#33b&R:%\381A5C0od#,:?-:-@5soI1jQB#j*;@pYU&I17=mg785J8G*4i>k9<t@[+TM!d
%B@&r/F#-(_n[+X)Kc=%L9pTcl.FZ"tBe!d6Xg(GhPo+8*c8!+jq56i&>_1kcZu6e"*$0qfUj3gl>uf<XeOJ:tPFt,+NMD)nKfZ8"
%ig,[<.E8eF'rIJ:!scEfU^EZ>`J-Zdkd:)r(>537_r_dLQs[[G@O7+ONa^.R7BB5sR)dj]e6jOHr_W^nb:pT3I0G_`e5>V%8(o#&
%=61mU9:[RWRUQeaUM`h;9[q;nRM)Q$?pcO,2cnKC:ai<6D&#^K,.D&d#DJ%A8^]J6:*_f=@=YS1@;'eKkL:,P!?T&W0jn5&4bjnW
%7CpY+_)ts0UZkf?V4Hm*h*>&hTape!<!gZ9R\2N06;eO)Kk[r'pr^Ou$UutV/7@'[TjCWl3C4#_qYBQK.2<.\B%97V-+D='(ZfmE
%-#s;Fl1,f&8tt-0$#9esAIPP+R>R;lN.sct@B!3C%?H]X.oQ;L)J`[Q9.)M!XtmAN%P(gRnn_uO#d/_>f/,45/77!2SP)Ad7ScSN
%(Q=Mld3qRp-urQWdnJ4!/ql4.GUS,IA-N&*Gm]/[X%;4H`QkRc=gZgiU]i;m364S9/TW[eJ=]Mm/e!IXEj1d,aBn"OTH,,ng=t%5
%fO1/u74q\GPcP=&=2O\a?qiL0SuA97l7]B,<25V/L"[V.JS06Nqa&P?BjTm=#uYM?j(GUqO\AcP8na;;.l8b!liRe+b=dCb4f&n:
%W'Imi):+=@-UcYO,c>FCcl^bg@H#AaRVgZIB]5\.9.3HcQk_H(KhhFZ$F!R/--:I.gos\,X-OL-Zo34Y\mtjJ;[%n,UX+KRZPdA/
%U59646*ELJ?+7c+)%.*PYdm)$0TuU"F]l$@/7C7`Ga=XEc!-.E+W[FbMc2S!'%Y^$0_%+I7I?u+'#eXl'gLM`Rp6g+nX2*RU;hm3
%1+UBMgTB>Og%gmi6HP#`g<6VkrBII_hA>8!-i51-pZ-\ZP('Qb/1GB*=!4NUU1Y5+@a[,7Ul8E*]/V]%5b3?l(&3/"/1,Y2P[l?1
%/?)6g49R(2C/Q][*L(#q")98]K;&7R&6"4h=-ITReEPCn3,o11W#_tu;R1>Je.f>#VG*Q7T@fS%MN0/hI'.M@#XqUPMMKGXQ'0Pq
%kt?:&[V'[S5Fe`Dku0"]_UKt`c+4D/Ac.%N'M*0'Yd^?EL4>`DLc,Xt,DCUN13lpKMNu*9K9g?k0,d1(ESN[+FBJR\dOf/kj!LH6
%\el,Bfe.Q-8d55cb*(s;=O_&meGc)]/AQb1RT)U9@+pgD#=;GPndg\uAcoq.Y5X3OX[iWESdYN<e:T5+dL)Wf%-ptsQZ?E`.mpaF
%iW"a9[QLUoQa!qE5uk-F/D/)p0a+'Ncl^*Trbt7u?A-FB.>%\S[B#r9VJ,mmoLGM+rO27r3+5B8R2EFT^q[bsbNQTJk8Hc8i?('d
%#>&$\\OH0U]WmUG7LMXhafQ[fB=pr=3ElUR%jYSMQh^UX]d6fJ)M]71D(2V>"fI?(c29T:r*]![4Ruhca8EH2LeIao8_0!Qrtbid
%KWJrEAP7-*+"lI&:NS2!9:BHShE0T*3#is0pP.iu^>3XWL<JEVLd["-5>P#n8>kc3ESu>(b[4>mV#5Zb31r"Dhjs47GE:%`s#rP.
%S%CF9,8A->Y"X$*>B:S[kPt.T3]]I93e\lE4#l*N+)PAC9s3^PhkGamHUli;i2`I]KsDgWl_F'<e=15q<#5KaL#V!&b,$O@msMkk
%/+tZ[k#sS$3[=TQ>nI"J;OIF]qJ$&Sr]LB*qmcl7NT7pkJbo7..\a7^6Tj)>2&,33od08q0lPXHIeiCrh4FXL;u(7m?[i1RrdR1s
%T4*!(s-U&e'9+%Z$mNQUbY.g2F0rFRo3.@)(]@PdE7dOEI,k+(*r]qnqu#Wb3bV1c4o1LVD2!`U=*<uSGBLG.J!4cpUhQ7fV>RAT
%G3)r?e;QWk-65`b0[Rc;C`^KKq/A%A3Ic1_[sN8/HYUe"7t2JqJi"fepg:l<^;#G7!=RcAU)f#aoAMTp>^o%LWdhW8\$iErjB=;d
%8e[H!WOd1*)Ju6#^6?K"^DLhV>o^<0N6[Fo/o8UjYGSXpVCh8F!W20AUt%]F.+k<BBl!*XF>c0uM9TItqs$5C<U7Wflt>Y/nEbOE
%](b(rFsQ@XT4COcafC?kPDf%54q\_5`nE?g*pm8BG=SdCj-,B72m)?p,qE6&-c>?=5aKs9iUCZuXr>S\NmI%QL'N'Cig*?YCnL(%
%/Z(,,FaS-H7]<ZIl<Ki$q`ZoDogi;)(gHl-a'8G]^m!U'A)EmbAbU^N_t-`@'8,^\"NO/:Xcq]MN8<1DiPiW0YV]TSWESK[\C8P2
%KQuenW-3(uMYh#J8h2+n%o:M1O,'Xf/a2<dBhLbR(Sf\X*%uMA@_3?#Fj7e$hBc+]R*g(dd8W$pb-J;^<u)9_8./,'k__DMm1,2+
%+.fS>I\tLhd[WAsIFLSjChn<CmsMXUGHc;j8)n^J3'NJ23WAOX)LV*gDbmMU*,c;thMb2^%aKY/B[JCna\`AW^)1>XXhj5qd6U-h
%PLbcG#U#uLHUjj^)+@2j9q$I;7;dNqn8rmb%"db7VlRKeqRLl;oOS9J>JgPB4],or@KZ@X=LHV#R-:=t+,J\?XS+:W%c#FD)kA07
%i7E]d<etW'O3[K'^m3k]6bt*uSAS`pX"O'n*HXmi"m<k0:Kru$5E'C)TT]sVlJn_An#3pds6G&qEaL#3,9$*oZq*5%@Zq#h`/3RF
%n"\>FFS1!O-a'#^02>*Fc28(%_41L&)]iiRM7`[tlX917P.;QkrX1(#/dt/#W'6+1^g<9Rf'0I@[%h+Yk\@;8NCm1Ye?MXV$Nn"X
%(Tg>s.K4(4,7ESs/"3VN?c@/aXlZt`5@5:XG)b5ToW!0/l;&G6CrMI5#VKsR2``oW_YPLtS1&Q#Ye,(_haE)[<q_fL6gKk08L>2,
%#ZFHT-^EX*pX)'gbGDdT7V,rWL&F'0&e<Fa\V6l`@MdM+-GR([eI7AZ:#Hj)\gGTO`B)=CBm:U<#7],846"IYr+=`lB!n]-;:m]g
%qX&O69a$4V#Atu6Q%uU^qZ<sU_M"k3A.muSMOj/'SSS@;p1s9(?LAM.d*o>K0jRAa]I6kqBZOK4'A$mMRlPCZ+JYPLDlt/K*4NjQ
%GSQu$2/74$r,@Im_3iqb>p[[dllPT(2fVhYhUuW77bF,*'?_I-:\W2Tau?Rg-@^"n!d."K@$n(USk'OhOM`;PKA=3u<-<A5d,&A<
%,S,@jRd":$>>B"Y/h).QNB,/lNiq8sPO0m"o&3+ffefKP-`=E.AW2@1[U(n?THBX-&.2#G>ZjcP(:bWYV$BW[*Ps@E++VIS]oqR!
%-Wdd=Mk5h&052dMNb!,:U^D5+G&-]1<pt/!pZN@*qY*LBiZG@6X3S&nV64DJ'8+tW2S-KTc[*.,EMm9Q&%k5-D3*!9G)r)8P)\1;
%dlNsNV+DtoGP2M9f-r[AA&WPdZAch6]ZUPXD37#$;N\*A,8g,qF9c(%%kR"4]1n=&S6Yi2]7#'a<oL:!Su\45!GgWVn`bOYD-^X+
%>$S7-dp2E\qf3"ML"u3:RS58U#+Mo\VflXfhll8.g"+9]efU6W-SDcKFEXW76_X+bK?,,iTpIH@#K)a@Yeq6hX95h!N@7lKV.pj*
%SbWYVP6@81Z+:\aj-$\jn`P8^@1'DB5&oNb%?IAo9c%*@l<[J(lh'u5W\S7Am=Atl<Ol%JD=PbpEAP9g4?^;m!+Y'JaqZ6QI4kD>
%<FNG`>f5h=/\+>bZ//bl=LP#>*pjr<\$lmNd!f6`jE0S[kYfrdjj#J:rLD*#7dCJo)`a.OMJV^;(K_R\rN(E(g)Zb`XS?A'E3fS2
%le*".KEYfK3P'gr6&P;h^4X[V%LSg+*.kF[\r9iqC35JrO<\FGi(#$*>-YA)p]&i:4*J/2o9tQ-NnO!aY\5MtgLU":'su/Zn9?gM
%D(*K._CLM\Jp2LBk`Hh(]BBPIO&*2:dl:=dm'>TJ'&+5So*Wu2]YX`$IGEL5<X^IdF)eR0RBUWRl\da7Hr!FILIXl6JE)f%=7-p6
%%]'mtosVQjDS7-/[^sM`U"sU7R9G+?C@04Cf'dA%cKl,/3beOM)3dr'pK2c4QUr&l@cuk(i?+C)@%lX9V7pZt8p=Nc\XAb4Prs<I
%f(T)YFKdYah&0LFgHG4Tp#+b[<k@>?emGh57=WllYQ'%LI!E"]4;Dlo/i2-]/F/?(0;kkUXP7u,_Hb]GNRQk.a]0Xd!TXo$$Hr3t
%##JIkFLjqEmb$BmSf1\=5<M"4\UCqGqNmE-NLq=;Xl8NC"Z"N3gYru^D[_(ZC]3S^kbrV^r#H#XGgsUX]MIFq0h%LJ%F=N6S&2,U
%pP3t[f%Vu)%0&NOmioVu*+-'J5cqMUO'82sn/#gD'A^W44aT]s>tYIOF:0Sl"HK/TXn-$JZo)UcOWSJn3Z.F3J)E%+N7#Ju(*C2\
%?#9JX#-T*@BU]foEQtpUOJ<1sp$kdjd,%pkib0E4GI/_gY`fEe]QLf0En*o2)T"F7Qnq$gGh)8Q?FE(;V;I5T?_G5Wm:In@f>,qU
%2_MLp?-tM`McVPjMd=_ie%J-%i^S"Ic^i<SDO+:`6F<%]$G41h5,6mP>qo]#]_R4&O8=m^f3$@o$<oRrWH4qCZc1pmo&BH.GjFPW
%n_pDOo#1X8@tu4e7^:P_jSn?F$':*q*M;b,?_BY=Fb;8[%nGGBV'ZTNICjM\r$+%C'qJ!gc!t\%l>-&peGXd`B_tR6>R0t5S&=j6
%n;i^`X+-.$6%1KU-o'tLSmJQ1-HO4RHO2^e6#T3Tjd0s6*Y?H=9>tfi[Pko;fI+<t/a6B#(KXSD!BjSH_EB6k&Qf@\jOgDV/LE,O
%4MNgCi5TmVJ/SHiZAkImLRUfO]`TDoQZf3.$7@\"Wg!$I,a[<MW8TY/=M9Q=ZdTRH(>-&dVu/PX(Y6poibFZ,rUKG.B>7R;5\gl0
%K]shtLjF06H%[(!+tqjW2c+ooGqU2`\oCe"Q.%%crCV4d49b<_lfn):b5T>fX>YdjG<WJNK6,^fW36L"5$V%`N/%mJ]p)k:1@_81
%@s&_imG?.FV5KJX8%)[*!JsT0'mQ-[1bJ:Mk&!hq/dnn^9@rh<&?f8<-CP3i:(&XZFUi`"poDS[Md9amO1)j*X",%>r^%Ko%UHj.
%FPGKF4h$^DXER`I:#:Nilo$0N];)"2])2<^r;21pF2JO;ca(0dAsO3.<t9`*mN12/f"Wq&Fg&D9CnKN9hEG3tDTsfJ?$Z?75FEO>
%\bBS'oO=lf0<5oO:9*uh,WY2hf%Z`jDD0:`CHkpkT0>8>4F=4P5rFRAK,^_ke?ebCh5@F]Mt;8%hVDC\][^f,n*Q.c2;%m6'pcQ4
%S_<S_b'EHbY=n`@b]N%;G];5:>sJAbn8WI6U>OG/h_4qOE">lNpND^4RuPp8Qdnk,me,`rSW.Oah;haN\_40EoDAKiMmI'`_hYqi
%3u@jpQ0fTjLA9=!!RnBaoC[OBFKg#Z@<Q;JkBZf7q'h:_o&FV+.inOkS:>SJ4VNE:T67p9IQN;!mf)LRDQho!RPDS5m]=ai3oWVV
%(iE\G2:ZVD&%@k6o%-grTDJH?I-47JpYjQDkoUEP]D(1U];(8hO5E+4olG"dCUfFTm6+_2)>rQqe)\o\4PdXJ@s7=qZgFTA4&>:h
%S3Hjkd2B%CrIl9%^GtuSB*Qm#F76gqG)j$!*Bm_Q1&%V/r3EP.QB0=7ZHh^cCAMn!2YA?)HI'mn!U%UPU[ii!CsVNl*t;Y?dh`Bj
%1Xi+qK6$@@qs\TEB<f'0J*[((FHp>_`STnCin!.qHi39ir4D@BZYK*_=/,TekRM_!EUhs&%a4%pII[.>=nR#Rs*c\4"n^XE+A'?)
%HI7'rSA3gnnaP!V<`@oehhVUSJSL@mS#`"Wj5K%t]_uXFrUP"^hjn*Q_:6t)[0dQE+aNkXnaa'P4kX,FK\eB+cY`^Unf*RcD_]Uc
%[?S:<T[_CGhh82,$0fsV)_<kpK]P.YHJaS8?lV;V`M__)Xj0E)[thYf8'cZ:%u9ms0,9sp?dCt(I=L&*ppkP(=hDB?U9gOK'S0$T
%p#@Y!B`$9LLEB;E4I9/p,AI+b+/kT[p?>L7BHN:^46t)E`)<6i]`7KkXh"0g8k9i"=oP!VI(,n94R4YlT)O,<B4&<$6DJ)^^!d$P
%nA4b7V;piFSXXWN-0lSPG]8cZ<&=8fiF8hE4%P^$BDF+VCF.YD6B@&Lj2JQgo:);1BBL)kgoQL4@(dNX&#V>tgH_>'X1d,aZg-OE
%2<mun4h9JK=hOR;]U?u.k`&>5Vj#N^_OPNNF2YCpYgW@H/1$^RTD?mT.Jpd6>Q(ZD=tRObC=[kT54?/\[e-<Oh0EUqo_IWm^Unph
%OYgdi334YO'FX@3n`"r#n7h.O`iXqu,G5rga66NAAcL$]l?YUSasKc)B&=\k\$o[]$iZSY?TG[-=]H!qoZJ.Kk#TfgGIi-6HNgCo
%REo[6riO_KTjMl9ft3"nVr-9"+a``uiRt,AY1DD^T[P[kp!2L3b5(f!_p8+>B>$f^$WDI#Y]K8IdFiba]Y!rV@s-F22Qo>12=h?B
%jY*2M-d0uZ03/$i1&CtUrh<TQgAc<IeNaf0@*!*ZmcSp!d$5"53c>L'*lrB*LJL2NhUCSUT+BYHk9&<:TGjNO?%MI&)s,mWh8-:S
%1g33eh!OKNmX:"ZKK&l/p\Qmu;F`tQ+,sZCjdWYbSHrVSrFk:)T0Ij;FldjnH=L^k)#="k9^rY&+$O!Z1A\Db5.u3jh:m:iNLd\4
%75fJ<T0Jn2cS+JUku[/pmXl`:^[Ye'cI0P8UlFF-3D@rN4P>(S(Z0'n.bC9+Ga!#oHeZ[1hRL8#mbe#p9inoY7JuI+8:%k/N&G=@
%Usi8u-Q[UCe\iPL;8VfeQV^%mktCm!@XXnUj0&j_\Z_]bfFjD5bg5q)I&?X-IK+DpN()l+6XtC0HG6O./G1b0ibG^7R)Yk=raYuI
%*#6<PXAPIc&_J$FeD\DT:V"g(/7d*3@WOph<'rM->f&rheOol+R"cm<@trE%F8.8.j@S8V(WP#\,EI$2?@+$#'2*a2o<L;`"<Uu3
%^=OEbg.4Id[DCd^OC*PuFbEj3F(Bju(&jCfq5RL_,G:KM5T_okhPJ-,NMaI<^UVkaT2sAY`T%lBJV=?C?U8#`P&#D#O^ALO=.2F8
%,7C3s=SPl0?Y`RUWpsn1W:eZHAN$FU,]6@9HqV6*C3=#"-D6HiBP8ImiMFE4N)%9TRIa-Xo4iqIeb5k9]Hk)?A[c?kV*[OS7hJ!m
%HK(!TZlsS;cd=s)N&2lIC%K%CC?:r%V"\6D?T\J*Y@[7,]`[Qt\'-IX<Tg=PAnUiu(nAoJC?nB&j5'=%raM>a6T$B<<k\Z?nu4rX
%//PMYbkJlED`h-l9@duC>^lG+WE\+hD@7CN=:4_<PUqRkNV`o<C1(%j-oQ!X"WNon9>s&u$1EA8\D8Xt4q7@ZD#a2bg*O[CH:Zcq
%W5]fA9?Q@akoJT,roBE3eLZ+jFl"+?^[8+pY9#;\*'B[IIm*!K<d.<oT&\)oYW_"b<^1O#lFcC7Xc[1)XffQt2m?"FlR_J)YX$@A
%Xg`40jd0UuHI#>.r+I;$ae+#fm6#mu)Js0B[^UJS=3b-3:9@5M.$e6is3gUFMtZ7:Mp(i0A9,2^"]?ko[pMYOHTSFWefX:]I0Pm]
%q,`oBnP%d:I/.Yoi`6AcOh7G4W7X,eLk"X$lM#aSs1Q&=>OcBEkO?bLR(a)/@*@RPAbfs8(gAp4bU.,aXri$#Uem^9[JsAKO5b_7
%*'EZVcJ3od28%3Urr</he\1CsLEF-hp)Ym2g@:&''l?tE62K@7YZjSf-HBQ^.1H=-Rb^:`_gl=Ub,B!qUclcSa"6Xe*iqLf^l:k:
%*lNC-dF;o\oXkQ;g4%]SnbmIX>PVCh^oi)g-#,l`W7-0Cj8PD!*l^h+ZE*c@le]qALF]%*q`T(OH^UcUD.di[W*"n)S%lR"Bmu?G
%DdOUAl7X5br(qU;6fURBIerc5c_fJ94Bm-F[KsSBGkf]J!\Q[nl+DJUriY.j^[6IU14O[1.JGJRf93uAc',AqXue#\VgTPSma!OF
%Afj3Cq>T3lf@MnhA,H)MrelP>poj(<aZGDeR;YaqC>hYW_)i'gg$Q\0"P8m)aRE!A07o\1L>)[mWiZ<p;GQ58p?RK0h@4tF)E,aW
%\`Y&Q_A;b+NL9LAcMG]WD_O'WVeYbhNJb`,#%:s*6B+h2G3B1\Bhs2L?-l,DY<g,o2;a-RA)hD$qanB03;<,Q><(/4IW0@Gk@3hf
%cGnVt8#Tki+R+AYbb-slB=tCM]/n<2G0iJ1R3X_j0=p,>Z(uQfBq.UeaNJ4:U5I7PhPM?r?TF*795kg<U-SJAY8tj[Hhf&^nF=Q&
%&&q1I_]'`^%`C21)LVQV/B+l>>WfX^[GPfH/C)!-D;VO")o^)$;:g+-5m1gqIN@nM*dsD[F=b*aHLu:Nm0BrhbdMDc[p[bNqh6"k
%I^O:ml7jo,OZDu10>4s<4or:QS1QsQ;!`ua/4^ii<,qfd0=*Y8rn$#^cI:%o`RtcM8W*1"Dt0l&oL%Xg5!T"NGY5onH>\Wf;m;fW
%hh!T\1tN\;]Gclk;;<)R>DT98o8OPF6iH,YK>@bnHr"W5Inu*=p3&??kTF3'5(7M!aVR%2QabNUmanNglcn4uZObct\lkUfHMO_M
%0j)Bi=Nud`Isu/&FJcY5XM&oOFa!5Cfn!"MrrC)/=?X;\/Na*F)*@o*jicEXpUQoWlF!Y4^CF\JGAf&3HEoC85N$clFNimhDEE:C
%DVAPRb\3nkh#91[T/s.Cf7$@O#HK?$n4PAlqW5rL_-sVO6F6]kGWblgj5SicQ&^(6QD:^9U8<-`r*Wt_.PeWL^%lHVaJYG4;LQ..
%muE;(c:2`>/fg<`-;i7,p(h:J]fr)TPKIK2QKWF#@I(gDQor%uSMqLG^W$H<eld38iPjL0D#_ebGZ&okl+ZMuHfE;i_Q>cYr8-#f
%hWi[][3bcXSWAd0[p(e!0hG^GVk-$h<)::$c`Mb7#I4fup:Qc>I_2r8gV*8[Qa8(,/f70,%g"1<#Ed`ckSRn"oDJRAGJ9i6cS'3#
%qK*@>jkMc#EVK0Qs8/q1ld3P)?^AJ*G.pC_bAiiNS1ee54d^h9Am[[E5'JnCmbWafk/jX$40VI3.iSRkamMC.9TYF8\,+q+=0N\]
%=4'+^mnI`]hTa./XnFj")kF9\ZWlZ998Cm=V.=$I>Si.)Qb#D&1qhkm2V=pE]R-s!3</aVO,9/4Nfq!`1e(.8pWfB_l&Rd\5$drX
%mp2utf)CT+9XVW32>aF-@=,;-/14i1G`:tK1N\^FL\'jJll\JlJ];M@DS5>ns1!7/H2]PS(:>bWJ%=Ci5-1WV'+\d2'I`o]qn#-5
%ZV!F\nM:t[et7ApqL//0pp]*Tp$A?\q-`Yd2>D/PhsVO)h'=(W9k[?+n3CsdAbXT=hXfq%O4]1cYLdF`bN[;OJ%"t2VAn([;m6gL
%4=V-CS]=CBSWg^q3]so.VMYl7mK7[I^-T`lmQFpjM2nam9U_Tf=Sp`X9[:Dj^`RFeD`jC^@A!E45H5FAT^2p-a!X@'boTR7k7)+8
%;1<T,?]0,C7sL=1F8`)g_bTmrbKF,ghV*n\rga]3HKP0>G;3=uUr0"8ee.fpln1=)m$-hF\fLS/l/MV7qgNTD=R,;]3gm`JWT@rD
%ZJF7'kc(Dfb>W&C?W!_sFabWLe"::b?j=r)S6X>8?qK23fk@1DhKu\j)sc[Xj.ELraK=!(;jO6:D[J.g!8_YoR8+<4]MrgZ^@Gjs
%cH92j6F2.b$D.k*?U4f1Dj,T98"F0X(Q0qmm8lO8L%%8YVN:TbmS=X,*U,Yido\`*1X!=+[Iqh:it]nsb.^JT`=pdoS%]d6q;[Vb
%Qh$@-Sc7.1PtI&nM<sO]\+#0*cMH\F%W<aqEH??gn>?"U(f6,d:O`-():fb,k']-P/E^?S>3i7s]N*u"9Rb]"4kr,OF_p:RRWq[$
%J%W9i9stC8c-E)ZX8?@QE3"9.SY9Jlj%!=sS&\<;Xsgc!p\i_*iK)NY98=&HMDa-]R]oAT]_hcI]dMe>C=L0)*:#+-0K\0#+J1jm
%"m5UF9>=#]1B$V4hM;*dMj)PO^0#uh&8]G,et%[<:)Qm+mH&tshgSd6m&b0?54:Y(Rd/pYl7/DgFUj.]A2,[.hd*qSWd]]CWss7>
%TZO^O(@LFhD3Vd!cKb_m@EmRg9VlcYG&a+TIU8GG9afPl0O(tDAm^#A]]fCjV@HJO14M4^8IEtaBM#9039-D?GEVpNYZ?.=lL!@i
%\Q,.a5@<W(5A39=X4dA.]aH'*p7RrSp2D$JPTJDr-G+blJWZU\*I[D5EL"7frhs=-cH\-S!=ZZliJ5CYq]B_LSj3,KX#HLIFu'OF
%mg+AU=LNEK5a-S@<6T6o\pN8Zn_4Co?Vd<f^Rp"HkqCm4D8[fJ"jIjaCtua5%9Df6R@a[5S6f@oA2_.QDf0[RpNH/?HSnO[Q'g$-
%Ic4n(AVXibL'+1mn0kX?oCMm`IV3NfAG4!q`Gt6=/;deKoqo4K*U`YCloj&PkHj9tnu&&/Aae'C,3prWfDE'Y%6J1!I1s:@/#:"K
%Bks?`N?:q<om7Jq3o55nB#qZR?N6tq!`mg1qb-g-o/"s6WKGs>A[d,nYoSE^=>O-TYAZ&Tp\Pe?Zb/HUgD-a;(>--.3GmID[e&X+
%n=t7+li+WR=<j<%m`c9.VnXk?J8`tHE9S"M?o@qhLJ3'mlbTpak(h>'R!+O_Y'g.rnq.XRT10L(mg$p[()K6,ch),jVlu^V!JBSB
%..$-3QDdO7V5ditSYK0/(N7p6+2O1i45IZ8:;QApopb4&ZPtu_liS%f8W.f-Fuluso^<42fc"j;(aZ;6pXAP-Ds-o]6ZP"@3kh`Y
%?S^hFhH7=%T7#res)d-$&\sK[HcoV02ntb^:U?$1Rsm9Is$$C![b_s!BOgkJ[ZngcIWTd`p@$rX\qq?m$(M\[S`='iO"b,*<U]81
%a'6s=G>JILc\Cmp";XCpmFP_b^ZaQZ\^Q%Skk@fUK6i$Zh0\kb<\CF:35</>[5kop@0uDQ'+5o=]SiQb*=]RTa@H6;>b([LF4&\)
%QJZ+`\d]VK7l/'.EG*c3X^`j6<+g)gmd&W(nn<.jm=!ghWmEE'I^&Ug;$5@R[LEmiD]\`p=fKUC].8Mt&F.cZEOU6q'[QJrMiF-c
%T@EFkRAED<O1'hQX53NJd+G7`M/+R-mbRYc&*M3T#@"rhamGK@>4V8(h$5BF)%LT%B&N(=$G'I1UtPcor(hgo9OYf(egn<AF4TVR
%%S@PUa7mgCM7hE#I-Q?iXCQX^Lm/1WS-kUD349@dMB?oMHMT!\U*3bZ,:72oVG;k9r`\dj:8XGmU]#hOoCgc*Ktl'tY2QK(mC2T\
%OU:dNeq_#$?<eJ?n!tGW3jiK`SpgL25Lqjhi<XM>F\Y\$_c(O[B!.hqiXt)%UF(3S=VU5r5K0*CFN&j(23b:MPuS3!q,-cXAWGt^
%o:Q&MU=-19IVWmj/;'6I-)?"%g&i+2l0hH;H'3Q1ibs6_1Ml9!Hr5eC0E1IEJ,\J[rm/;g>q1<iYpbg3i$[;8Iaef0LS#\^grj@;
%5@a*\plk/L(J3K/PUTcl=]2V$"e@jTk<JO;C6sVY<5DpESeS:-U1HF2$8i.7d^5P[M.X,0(R;!IU.Nq]Q,sTV2X&ZOES2NbgW&=-
%,ZM2qoV*5rI010A9Fiape9b"9c.W=b&Jr/C`:"*uWLDCQL;-G_e3O7jUTfje&5^.H6D9MJ$q:[`D0k+mVP$h7J@&&eg8h6"J&Y^9
%rCL7$Z5eA=J4Bo0]8D#.o<qQHQR$ELM=D$K.dDsC4(tEtq=PNX=nn\CIM>dOj;!&??r*PPWhca)//t?E^:@Dh:hA@\b&n0<<4c%<
%'Jb%X.N>-EehV,dOm.#jXV7M8a][$:.qRu\3]+"d;.rEF"ftPdG$:c3"g68g%tQ@fRAPEpF:b4ESY9R+$3O)J!758ABb`\,LO$!Q
%_=VYS2'?4nJ@=rGL$r();8EtAQ.Q*hZHP]JbRT_?r\gDe$kgXV,R4s>chY_0/[WJk:-d$tJfm7SU_-K!G%3fLPft#F%*\W%ILCHK
%kFmO]Q/r`:!W&B<.Z867ALW%&H0Arb;G`.C2'0%d;5MEH_9C9$P?^\>YGk)aE'^/dXTj1caPftY--To9"UA0_d"C;_TE,M)8@%Kj
%4`#0C3i!I9_(riY\m8c'qEZZ)c"IZb8>G9l)[j[n/]T4Ml\[(9g,c;"=uV3TWhQZCEql-3PXGn*BX"WPMu!k.JZWKh@un#rW\S7@
%WJn!ZZFjk;V%Y\hb()OoC0d*a;\5t1:nSJ%ab1#f!Ko*VI,S!3F:b-C+/)>a)=+h'-%usW4,I^1d"j3dA^.0LJGQ.]+Y;^d@RnQ\
%QERRPp1QkJ;eSX9$8..&!>S]t;h1__enbsL;IT-],oA47A`/d6&eS%qJ?\a9%&Tu$'df0K1n&[o1eX+Wq,gVghQN(&"=0u^W,%tP
%(]#iBfe"AKTiFkV&h@@;Ff`$V7uC7Ka<[-IAH[ij#rHFq.4Pfnc7)mnYL(:dJE8VIaoQ9V'iPL%X>Z`cI@cnr`)prer58YX[@LkY
%<^%Rh7Mof+0JL\]JQ'C"OdWfUHSgmuTFcjk!>Pec2Sh.JPV$;e18[f*TX#$e4lZhLSZZ-ppKJ`rHP7He:ZU33Zbr'9_b4NBRc3VS
%'g=maf[NYIf0)0VBPQ`WmlFVr/Qg-c$C["Df`Qn+L`hB^*YS[BOZ"I%H'RnuYCPd1QE#Lf3Bi%d+U%)9XRKGl@m/=QCFiI8($Hc0
%Tf!UN'Oimd]>fJ*3NP$F06mcq%mmL.>0)6,E5TMD`FmVU'e2p-.]>IR@+eR<L`"^Nh_K71$9,;rKGE&,5W#3ujY<4%THOku2-Vl$
%.T".kO]6;C;cn:QnCnA9:RNr;TeS-PniSXY&I>Ak&#s,b!F(@0.q1D/1^o&5+AqnQVfk<uR"6-h88Dc:\6n5pca4?$A0nW'(0+;p
%/6)m]9+THD%Dj]NJ-=1;`&oRln]nLp%7b;4e\VZ[Q(%H=TQ@IEPoW[8+OE3]apWd_#5;FMcI;o]`>&.P];r@iE4?:'$bdlTS`>fr
%(!SEh/CUt[:n!\0TC\5;l&?h<Ve@tb"cB%K^_B5g.X^.I'%BdWTi`&^4:%co$WD]IA`=?rL3CI//I,2oLB4htCcP>tFU@/;h!d>b
%^kQhUG)>%^:;[V3+kM`D"LReT7RKgYe0L^J&ZS`nCB_]o8O!Z;Apjj]d3XW1U/boJ7Y,>W&8!`45YmL#&bABUTWXL\#9qo#Qr.!0
%^W*uT>E,`eCiF!AaaIZ>Sp.DcVKL1l)C?jt3XL5Xb8TFG>b[NmK17a'F7OoO]>1ODMMl&'X(DYFp/%IjL)<=Xj=Mm\4GEX9)>+[J
%NHD"rN14QTM:u'PXY?)YXVMpJ1rY0edJ"?D;+\Ut31,8jG=p>Jca>t&Uhuc_[6?OENl%HODKDFYf:F.^\BbYEqQ->:mH=c^c)@;n
%2[pWU($'_7+fbt59ZU,cDE;k^;&h?q7%!r*m7U8f[&!aA/nJg666cO$/Sdgeb9@lH>FCS:8If&ljY.:SdS*'ji/Q3Fp3,'nqF1r9
%;WViXi!!'i;kVKrNXoI[F%O]hfB0"6UWHW':2`(c&[06Raps'_AMo@8Ts+ME8UZ1O0Udjtqe#KKq<<5Q8(`H7-pr3J;)uF%<1CKM
%a4GN:%^--!3/6mkdIGVL7X30#%lT3L_U0/d$U0tI?o;*_;nT@CBT^-V*uG@sm-E-%-mK!ukn;PkEZ99<('gs6eIpri4,1bWW7O?1
%/M:oEWFTA?csXbiLg5I@]`N<c%-2dp`qq:Q"7[o<Lbc$]1g%8UQ7,KsANPa$DFt5W<XBHKJ35bB6*<T\DQQnSg1$rkD"PlK+J)!"
%Ln&u`]`Id8%-2dp`r"MMV@CXdCo)l)'J(S&BdHq#l^(&X)2t$6/KkInPFB<((hlWn/omL.RX9SQ7>YCWD!(o#Tr3/)K9DLN8I&&r
%P8lKiZ3(TBU/74>QNbd,8%2Tnjq1a3!5U;9.=,g;olsm]ZiYjpSQ0BqB<JGBkNb%sA^Di.)+Z,5M,kGJ:)Ji)R)*`]^C@f7"V`[>
%TJ47(a,5pQJ.<Nr\0]B7n$k."@Yop\RT9WWLL#.50;Y^Cfs3l\laDCI:..`s=Q)HQE7L[=.3Oe;%eSRB^Km##ZErRrl!C@0hG-+M
%[)[uF%g7aY^O:p*U%%0/FlEMpC%7953alH?+]O`L3MOl5#=@0?Ep'\QBFDR4^oa>g$3HF7b^O?sc*g<@Z^T3*<4dfDMCaAT"hZc3
%T*Z@Z%UCViQBcS;QPr=$.Ajq2#J3iJNA<pG+DM@%A;[<&<0sk2*LB#8(*Ebl#TJ10:cu[I[U?3@*Z0u/c'Y5a+;!<@jFFrR-lrm1
%rs\g1$',u_37!L,G-V^P8cD.ED>-8:oTd>dbs2;o)':5jX9uPoj=JLA[frBN?r:3+d1d$AV._DOLoi><Upat(]OV.^1#kPM<3dXJ
%H*H23-O3WY1*RmR:Sr%4RXqoK=G32D6'"p-[Mm)F*K?K4GSWbDmgRgjU@."S.%]WJ<Q.i<]0\@].qm+C5L)#rDBl+5r=sb:KE\!]
%Cek]o]o/SVc0-G)I"jNZlF=nCS)kNZl^0__$?B4.UF(3J?l;R"U7fcP>-!9e?Ilcn)(jD3F.fVM6Uk!9o4_m@YU8mA=Er!`,RF1+
%$WAC:OJNI7K8Ip%)CREZar.<s`el&>%oj:YUg9Aq-5V!V9I9YQ)6!KBkBh_u^(j)+1gSU2#KC#Rgmj%,X/h25&(fd_W&ff"`Ho#q
%2En%(-:U9_YX9Md@S2qc[)5UP:DG`^^<gp?68?b.E<LkU85s"..udSO)C52fd9=l7'G(s(RXn27AQa[o9:3"gJ0dr\&@=%:XCVMA
%G&l/s`,'K5g)X5SbhuX)'/H[feh\XC/$0FtAsd:[fNj&^MF_<>nM<5g7$00rD2bd^Lu6iRA%Z9*FUuG)^G\[OO.-grFD^OZFqHmc
%2"71]*Wd%04+]ki9gX*WUKN-U[">\("sf9<3^)st.Y$>@;:'LhQ4bkpYT':NYgTL%B.a><^r.d+!!<I7'n[7!-/%Y93\_[b;)FpG
%9N3QWo<BHo4Cf':r=>P1GR0Q3\;glG?%KeKX>2:s8RY^T@#(b>4;I'FU6-Y8NI54+8SBqj"5RQ'f;9hP"[+]D#o)94N.aaNM.kZs
%9:ul]]p6d&:,.j'.YVg_,)YN*#gWKMUNPXl1J42S&d\Xe5W[>q>(MtU_bd=s=.Qos7jpn?9"C)F"=0u^W,%tP(]#iB=eQm*X2G<!
%(tu3WQVsES7p<OH!Ch27M,joscZCsZ66Kp;<Rr)l=JLX5eO<FKHB].E6nUa1hLPG,#'.EsA,Y4%?ZNP(h6DpC;m]Hde>SqF"uHro
%V8]r&TOP_J[7+a5UK]3^*9[h+L`o:DnMJ?4-nKf[Kk39@Dh/mq,GO];^$H*JJ7%o4eI])kBuN1?4g8V%?X\eU'I7F4+"YTMKgW\g
%1qR^!8G#QJ)Ga/6?m')$eBmcjFDBSRQ'jIMZ!1?3gFuo;q#r5Q0uK3dWg\`9$F$/DCq*R\)@;RF=Yj4hYgJn7E2A4r8'nQnopDD&
%7\i2$B!c0h_p/g*;e8ZXP8i4t_[[>r3Aj:[i&5?p)Ds.&WF".C('TSB/=a#!ik]V4T2mu?o'8"r)?[kaNdm<.4=\O+I6P@V3AB_c
%DX8]#7`Ta`R9"!Ji"1k\=PL(EYNlUX7\i2$B!a`oGUT^EVa;&WIL9a^`)o+.)3&/B[MRXCF\*?[/!qhe*L5H52H4s.9LQjc=/3Zj
%cHg!BXDdcsh4X.4hdG^^N4cDLE3SWoH$,&q$nH@lWcg%p%=/r*c0%q+Mb/>PW@QUo<o^U(>#a!qQjrEt4%sH`<Rl;\g1Vir@Y]g4
%bA;!/)5e$hQl73n@]bXNX%Y5#%s1(3Y2Y;FY#!)g7MI88Zn=TbNS*5per80Z@?.d)VTO.Hj_4U\]!_oYFA]hPBLX@02"FUSctaA#
%Ou[@oZo#=6EkN>:Cc)M&1Ie+iq?uAsN>UrG`ak\'FpB&1)7MJH_u_,4%A7L,,8GMYhGmuSM?XAK1.Q8Ph9&ia3g4U2^GXIc,T.1j
%C\UJAei]2i#!4T\#Rtg%Lk<1iM).-m8R;PL2,KBUh&,U!YTn]XHoM^PTn(j16P;,X*_fLmmEZLOg=4a?J49SL'[""i%3U?Co!p;0
%J0IbJU05?AW"[Of"_/Pl9SbQR:l@9N4[;;a0<)d$hob=BMDQ")J9Op@"m7jA@j``5"pB>Y4$d^,%N-h>78<Z`!2A?Wc!D`/cV1@O
%aBPAb%^K<",V+bN@-,]=*B=.c**#DaHBd-M<%UD]F^g:1iiH)VM!HVCNpK&]3!l!C29^rrG1"k`+jhW'Pn!4-X%SP,V,-tH1&i,b
%hUp,2@X1&C]sd?M#t[She?t=9Q*Lq\SIP;'h3F<*S.B,-=B<5U1*!1u',\XPBfAmK'Kqg`U"pd-I?2u!16VYlWf=<RPpG%^m?qC$
%.kJ4D)q6V5-4s2mh"qM@:B7?7),*>UVVq%iN4;R)S5E5I9FaE=Q2R(f$H4TjfT!/UFo?W>5?0_a7Ab=hRW?TF?Ho1+(sGoZcE#*s
%=A[WbC_+UD9&YV@;1b%j_+0?"=Gd=eetV$bZ;2uZH<;e>SjM*$PHQ$gq^XdJ7YkLWWT">]g)=/9c-IeAP1W0"3sd"lU"-#<lmiq4
%,qf+U:Lo:.!N4>&W_,,``0`t\:.],2`[C38@oqH1h(J*JHij!D2a-1O5?*QX#=oEcZbWqul'uAlNO@+j]lZ!SGQfAC/2,#6KVUUB
%f@j8ZEMD5:P2MRPM2C@NJ(R8*(`n?H,TLWOXCagQ,WdOhKW1&s/%."u7L+YUR"F+H,q<jQ5lf.ZWRhm(LZc*#.Usio_-gZi+UKjM
%$Z_++@k3:k+t(^98XLQ*M+OdQ'5tii('R&^V2@8M$Fu6:Pc&N@0ZQG'0K:69*t#W<bg<7[&IV,0]jM^QSQ+?IaHM=UU):uk2+M;p
%CR#jnCtpii7&pH7%_I>IBN(d^AO;OkCT&hRPU&"XYu_RIrE<j"N<[U0p`'u;`lq1<g'=;qV3QbSa`(bRjLheYRA%Y-+;!DRN]Mo*
%lO5.HU24=;XaO\'`XJqA2rheXWX/5D+.C"u,K2u*WJ8*C]lB96I(^!M!D<WO"qC<abCN6OJ;+(4$3YtCMq5C$i5ni]Gaq*6`CCG,
%d"Y=->*+88g>;QHVP1iQcpTtJ'LGAW&,:c,fnX,-pf)SpAX?,[d@--HTPIf5gaZ6=:<H<OE`j+kE/%)"D2+>Fi>T\!@&sZ\]3p^8
%1BL$",maR:TU9.*?DH^B2:-69PLSH),5.l_CK!@;0<)=u)-hI=1i7XA<OgEZ$,e(aSCAgU.&63^*>(gqaf2^M`3B4DD\/-J2`+GN
%Dqcs,TA0`0NYNEeW#ps-gO]poH9TnLa)t9"\W[Ido0RY@Of,Xf$Ip%5/efPIob^ViF1(#<K+5]`!n^2(!@R]@`q+Hn;WN2!ge2Gs
%<h8:e.TD7$L;&em1+dR++)@Y34KOQ4gK5\&oJ1%dV%m]D]_6#4at%et`reel7Qs6KX=-5rOpM3d.X0e4"a:9NT(;PnN"(6-V0#.Z
%A?!epc#(VO"[=/k`g\@sN#4H>1T%sG;)uf^:3i]'@\uC->O4)?[2dbm![eFD\k'55U0'gF\#?Ot>#qKFLKNc1f0#2tFPO]3bo!2%
%8;)*$\d)D=BrgpH=u^C+OccM#$5?N8e5fW9:f'_KKcO,Y9/K,`eBOh-K3:'fYUX;],'Ba'#6nul,q3&-+aa!X16*N$"];I6F9`gF
%==05)#&k-TR>T9s22:WL&gk2R"f<\gMLFG#-OZGB'&j[FZ#eE'MLED'bcU)X%9fDrfjaqmV;lKZnhB'*'RhU]b^!e.PLp^=Yar$J
%GUJdB83%)P6D5hL1N^59j:ZR/[C&;gP7"e"'Eu@i/AUCbn_$6+cn,c9?A7MEc:8Sb0X)!!^f#&oGAP8<)h:RNNo/8n)a$1>UM6LG
%_P,=(fP^k1E4s)RQ08@W:gptm*aQ-3HpM9Tr!_^.=KV;&);/(^%]mWS(YZ##8S*r\9>7&UP@au*%R_>/dZU6!<bLqTa9ZI;cSX('
%bTU=)=6Q.i:84&@`:CcY\!A@g7gX!$lau*KJXo5YA&FLj2DW9=8JQI$(;pDX$-up)7mUU+5(^fr^0YIjhCdch)`NjJZ/U+1g^U$t
%GVfiapf8)_#_Rn2N\/V&a\\+RmngA-kmuu=?FD38'b#6(R[,k.R1"3e28pJC9M_W\)Sh;%]"eUPT*Qh`HpUCs:j4F:T$L_Ye,c@;
%L!V!]4d%4^7G=m^U%c!s4iN%FS-]n386RV\HA"-/Q*>Ys#q;($")MZmdUIa%LqZObjq*Q>iIOFe)FGAF'TFuE1tKSL>]#9:D.nc/
%2#D-tbg[nZB!5LaM>9-ZfEKuV]-1o+bPFsQX<(4'QC4sSB#b#(R-$`H86:))U]0T'*QbOo;n0Tf3I\/_DK)/d;=E]Nf6kkq(YT8R
%\<=GaqqB1Nh4<DaO=44`N=@*t-Sk-3']ppeX][VYG9FgD9."at<XCJkhrGrt+._:'ruTW"D8AkN7F""6,<L]A*X?Z5_,3N8"Z(L`
%clT2974BNJpLL`$(uh$cJo?'fZ)6>[$S<;o@G8/&!TQSeiDAY(bZ/nXF3$j5-!uDE#V=$0'%[5sLmn/GC37;HaTKDQEp_1lC1P?o
%MLQjcfXoo<rQ&FB)OW"7]FGO-*WK6aLO`"C-rDCVg@5YVQ=Ut?q8NShdSU/1]7aQ&VV,f>;<rZAjEuRu=tWS9_ls'TN;A7jBr9p#
%1l6s.'[\RjC<U^-jRKS?Wf*")OR-%6@2['Z.$AXcO)0Fe=rq$tTTMap7i1gXEC1m#lFANd6]i/G3*<0(-P'X\(RJbgPg)1&<8FHI
%IZ/Sj*o,nU8Q%WPD.p%2f#(i&jeAs7Yo`=e[0uPGVg:lt/!F-@OTkkQae3pAX"(/i$BN:"UisNgctLX#oo2BA$WQgA,B'pbR=[[M
%"lHUt[)T.#p4^1k*qori@9Gh.-)Y:FN&B&9)d:W;P>g@/Z?oR2(%E1CoY785I>9C>DX'6c)HnZ3^*";sV2mnYBk8:)rSX%+7&]:]
%C7l[Rhr(o+`+?<[0cIEq)+tQmB,)/N1Q?(t<J,Mda&HJ47>+*e?Gie7H3]F4=K^tKKp<C]I'k@5JOX3*.mlHR-(n*g.[W.`;&AtH
%maOW6ND.tLe^Y)rVG&brT$#oL&0PgGrFH0\</M0.[Afpg![CG*'OZ-`lPM2OFSA(EVkL@^dM1MI.;N)kpKC^gUp6_(qdA>tC8QPK
%O>O=1N7MQ"bs^hG/-mT)c"5[?E[&),2!QMfW6a?$MUP785aCT&R%Y,1Y2<hJDLq+?1FeE!,8idS,n6?.&_pjVBg%+TNBlkaXTZ#8
%^=u0uaOE"gd6Y6Q=cYj9]<3Wi3o(5CEV0=+LA"4oJ[Uq$9l"3i#A?.KCLVm5K="H40c?l3`.Tc'Pa7dkm@6L%MCp/8Ls_<-%T2NL
%N6OG^>>!AE.!,E]O\1*kkOAm4>bt:U3ed<pCg=X__Nn#S"-BGj_j9A"=FmP4`#i@ho>9^i@)d)\)4u*_:$=EX!GW<if>VY90Wa([
%Bi(--(\#QZMi>nBLD7o]MH::iOYId,PHp.!Jl-uU^"?ofc:LQI+eUa^>Ti4I9EZ/"3/[:`7o9g39kit%0(QY`IjpU4LqVo%6Rg&\
%``rete;QkbkEIlPq_a6=U-2+,2CASV9P"As=]Hd0ACTMN638J_MMY`NIO2aI7Y>t3gXUsH1Yqf7)6H=^iO2i=a#@W^@&fMTX]p[M
%%Aol*c"P&<,.6k/$)gtk'fu)H\uCZ@X%[ErB]Y4^8\q1-C^FiLf2HVl2!P8,`hT<O(`hXsAK+d.dDCr\"1u[N7D7.NQ1@ihS2Ot'
%)?^<VSuY7T"GQc0n!d/t5GDFXBZ(26he'5J<Tku*Z77a@3.A/.)'^$`Yb`4s3JhD'7SQ:IBn/pVZF]g]V3i&jSZYJX2Y^$(UTnO+
%0[4R5C[k^3NUDe"JX@/96r`$=_>Ud@7lq)8U/3[_l2qt!A$!@r9>\3?lQsJiiI4*pjNtjk*#PN#-rDg;kstpdDGJ]=7gNKk!/0%u
%'H+#eL"E2Id7Z4#+o.;Kej^\k,.,/`&8CQ+D"=Qg-_9&;U-TW>!n4U.cpeVML_aQ:l[ooYCdYZ&F838LR84I5DGT%\B\Jt*]#\]l
%'<%pPHZkN_\Nj\J!l`e&ZrRnnhfL&.gH/M56X0%^,M*ZOA?:K;EOQ2l[Rj)2X5or*-25<]drn20O;1MO9]nY,d).7qoN*M'i@3F&
%R"MNp6>%l(58B8=+=J5W(ISe1i@Iafon?Be]n^M'D-OT2/W?c,?_>1K.qQ1%g+MS1`EeV'4L&QtkNH-C9p&mT^>ej/faapm)N+!4
%P\pf72g6G[UI[/p#E&.QkZ'QP;u)m&Ri!>4?!bL"f.Di]VN:of#pYj&N)7mF8T*p4b%\X]aY8h?ZElWE]V)%t!YYf:=6Nn>!6RMq
%UK>"d#&W_^)mA"3"*.=Ys77=dcjG8",'ZjY=4f'U8^7pcB_RoMZ)9jA:&E^`oI(.kHCrT*XqV+1k2\CpIV?*DH,@q)I(Q@MF,IPj
%k]kq`R4b7K`CF1C6Lek<j-fH=UIIdNqTts:M*1mZ$Z$1A0]WAP03+1e"qGRb(46rC:qVSj%-8Ok<W/O.A/j.\fM<9-k&n!IPW[uC
%#;s.^-*G<P9*&]@DF63IMPnf8aAjOVs016[c[Va;(llPN<Nm0K-,38AgO"=FJ[;XqfVP6W.U%T>,.E=E-b$V9-=_Y2$']<8?`W?S
%d_.cNGO&p"<?0dbqim8L-lJN!#b`g.BP//clENf;(*0$Bmc*^f;I)_>QtSRbGi5DXN)`'Pc]\j-*X$(K8puVmPuVq/633p!bkT\2
%!OY*A]*lIeWmmK^jK0g]8nK\9r!GK2`X!_mHH9!_kdDdLBufdM>cMq9U_sh/;HcBW;rV9le0L$&(d:'Y0FsXA%\kI4J-:;)*7Tot
%5`2H@pc1dXbb4P5%/$WSA&-XuqJ]EQ2?j?bQ:t0INVif=mjW^;X9Z<V5@ACi"YZ#f=!Tn!'Et8RiID^g5hD[Kb"I["_^2q13Je<^
%kb'=]7*.U<l'?hACGO]q(g'b$E)dU$_N%it5^!ifrHQGZW\@8<P8;UB'"'*rJk/S4L=;82KsN:64*OT-d`j7g:/GrU/dgBR%Og>-
%WU/[rm:gBE1.;<jfA/\ge5$5nH,M*J%YZ=i^p>`+GUB7Z4tU>3TJTe4nJUCbBQR.^nAHm(S@d@:*"@k80Q<LlOIY_U/kP1Bb%eq)
%!u:,HCK>IP&"NdaG/H^hJA.%?=;s9[Yjtp$EC$uU"]UUmc]M5Ae=7M<O2;'R;nJ$3l;1)Pf0r=DK3bn1*BU>U7+jL6OE7B1i)b3N
%U+%HO_66eVK0tP$6DZiYj8D88_'$O+0g(l//k<P[:f2.%$s9cdA\]P+,*Q+f'A?IA-6.B:XO(rp6b5eg@885.J$5rHK%?[-%7t,G
%L"b\$%&fZrScI"M;eQF,9n,C,\2E?[:?eo,FI\doT`@&@Z\0jl/h/fNSQin#;okraXJ9GJ;A5=>@PNp8T,:b!E?ls]/e*9'm#HT_
%-Vus;'GD>gQShoC35`@!8ACkL;nTS*R/o-g$Bf=O14>0Ba>ok'M'*&#Tt\cJhFLUeX-]%*)MDUhI1QHFd,rXeD0,'0:@I4DK$RC9
%8i%X"&\bbU<B4F>+NLs']anJdJ2nu;V8"0QiDpahEF.SEejELOFr&*Sk-UooG'Ti_d:k\RRe&l#os(`pD7HNVV=Ejr0L9]Nl&cj!
%g%&o-a>f&fFo*8D1hoTb3.I\Ha#YtTU!cAV951+l.0O]3f%c"6@s;X-gMsX3AMGnk7`JXe/]bP^j$<pIf'12WCUA[A.u&0Ok(])p
%juu$9SW@J[CCc6*`lr:QAsb-3JjP#(*<BQ"ada%B)*WUQF<Je+7rqdJQQ;%O<E8*=YnDjAB!g<nQHl\r;)C[33!PNIH30b@E@BFn
%F#l18GA"5Q*d)r9r+pB5=d`rHgJKUQUGhBRo"K<"7sK5im,KC`H_lW)/M'\SdoFLO3TEW:E5B_>TWG8.gH@D_rWQOYXL/L(QLXZ&
%c#Hg=!g0gS$(WlN91a(XHPNEV.W91q>=X&sa!hNHOLR&VRI`TY/r;ZI.;.">3R;M0+Pd%($:&BD0:'uE8n_fWNI3<(_qe-uhsd?/
%8pj`kkG#D/CU/W^2"8.82@^B/eB70?GZ01J/@X8o3hW/%#XrZs/fXo[.(X"=H58fXGsI9C?B$I@RhG?r'J;;.DPgBL"S+WYgdS9<
%.Hs`A*'6,*&U-OP-o8n(D66(@fA%pDe("2lWfhd>WR(F$P$)N]G\(>[kOBCeEeB><`5Sc.F*mY>"Hu83F$;#]cF&s2a]De@3iha^
%(lbtf7BRRU<0t.ZgWYCGi)p3=Ehi@8GVPqpIZ`?"Lq,Bel%'+d:B7S8iGsL=rN`65e*MZ$'-Xpi`m_.G[#788d_GC<<I*O3>G]I@
%T]r!rO4'8XWdlNpQ8DP[FsRR)Oc%7Rm81NN^q'e]Uo<g/mPIsrNA'[g#Gg)E/EN09pW*fD_3A":b<2[We%fR9Q4)eH6]tDT&M#ra
%DYR=JVqb2hB2Xhih/f>q/.KV$!?!F4,W+"ERWqiPgD!'_W+]&5fti:dncG%T6#$ef(+Xa?O]]qa?.eL3UtJ!dZtXl@O&2KM1'R;r
%is@<^/NUbg2&4\?p6p#HU)i3qS$&/28!dcae;dT+i(Er,_\3"7#8'mro<q5co*G!P-5^2qeKYn6*(?_M.;^"OU,&5e<*4c1hoZ6Z
%@(CdOa6"J$Y`Pe2Jo(]9-CI@!L75\(UDiZ8N<d$N1's*08Ou/n;%[+]8OTegD]AP_`WVjoRBe3)P_LU'U@&3;-6eTeD53Pg+(?2J
%=$.1T#*1g#:(f]RV?*!fS-^Trb%6uV6N*l,;(u_OJ2'C.Z([u?N(RE6VDZ5qbkc3QJ0uYtJ<^AC*9XjLN5HQMP@4Mn[$/-N,$Dep
%N''`'dA:Hl>*@Eg2$Fs1!sZ\EolOOR(?mIQ`]1>Q*-Pp_N<ik(Xri!hkpj.Id4R.#ooMm(QPhSgKXLWEGd\nG(gb=bZ<DRuW&l.e
%Ad$;.(.9?K>D#br0tOer'[[m6=@eSm_3?6%,%t32e,_SKcpn[\)Pul<?59QXYpgGr3C.U_CfGg<#ujY26"0mH3L$"VP*BJJahtAO
%qT_cb-Vk_@Aag5s\MQ/DVej9S)!\:!+fh"BN%V@H)AL"?^cdeO0gDCU)'+BSX"Y&W()6utLYjTn,R#N1(U.hV-Rh)5hY1[bKZ8ke
%2#q:_W;mHMhm1BWTQFKW@BskS[b57:Ou=^>W]c#r!F52T$s=2]T;`aJJ45_.34..5%,Dfeq:><IF.-Jp"Qa9o=1SJ,8f+RQHYsde
%0"t4P3\=CD5571)jUdUr:!BmSU='07g6M(s(1T%q<?6G3Qoe3r1Gr(pS7@!mXc&5\QFTu+Je;>RNq4fb3AC<IOrKXgk`/WR!gZGF
%&;f<P$k4LUF'gC,Ab&Gp?rH4rfIC/mcn!rB%S3FS:<kD1@59G@4i.(`>)t]F34Ic)$#j``9"lZ3&XIFtfTN&3`u"nP*rRf;(^a6R
%&5>I/_f9C#[n[Up\3#taa'giMN)b#V%>IFPd7<1Cr!,=!U?YYc/hP)[pC[,&#Q(P3.HUmcr3OT[[Ncj@85j\Pek)2dfIH/h6aI#,
%$K08.C0>Wh,/r`r.sD<A?\H3UBHnA_;&Y7DNEqu^jGD#b:.>^]K2+Z@`L+/$l1S5jX+8b<OkUi4P@+u\7a7V):T_!u8<ZVYg^N)(
%$#glEQK!U0]'CEg&*c2lk`[i](8)B!$g1>HQQ_m'TGhX(n.`&ggLkImMXWGK)o&au?Vlc%qHgdXf6Ir</Wu#G*_P+-.AEc`fuH89
%dtC5Y=Qh#H'86gW_5\(EO9UMZV_%)Ej)TjsNe^lu&X.UJn;*Vn?$O;2\+[rV$>V:O^9S'h6r=\86lW?O@1b^*CdZbuP$u_XjC?A*
%%Yil:7bXhs&KD0$5"_u@Ca'kBG+^u!Q9/4@_O>cP:l,BTSD9l_$dah>93b;,7`AQb^l?/fe(qtt#%25_)G^9XoP&$P`Tq]MjC\uW
%kVQl&<^jRD[#Qh>fnOGB$^^uIEW$OrnKo2<+=h4$(pEUWF.8]ITkG1X2EXQl`O,q11t7^'*?+CY82h);Y4>@!_a9I;bbuS[/U>A7
%`>'A2cj6_m)@n?cOpO0-"%bUhW9T@`(pc\?%bJ4(j^#`SAAD[*3*8#eP8##UmsBHV26!j:/gk6.(bNO[I9Y=@cpq3p1)HfRJX7"-
%)C]&TFe].$Or222msE/G3fNf?Gk8>i;,K#I.n,AF+=T!IH[nIN4\=%pn\-qTO.tAaV;:(iJHn]a31..TQ0g6=P+34@(9tls\2<,l
%:e?i,J#tZT@Vu:f%gdoP-,,_dh=VHa(3:h<^7Cj)kg"G!]@*b))CW!3W$t>4]IDGL+dFltY6)`o.D;K3e!.Jo_.eMCG]F-S`fNVX
%P9aO55<V]lCGegu8!34>(MP]n4iUD//3_45&rM9%#PlcXTGX?#D?5N)HA\FYj#s$-].hU*Yfe=B+*.&Z(j_,'`SB2T"GqNh*ih$8
%_fR)k=uF>G0el+'Dk+_RgfB'b@J3,gN23r]FX.,+Z,X\UTq8(Dd!4G`\OE.sVMjO[BPOB[[o137+GMU5W3XHbK#e's&90cZS3t;n
%A?.]'^nI=N\kG]s4'u;l]$tp,"/]?<&Z*B4"LFFlFsV!(jftsZmDI>9*XkECBVj\.8hf@0B'PcNa-L#o/.@\Di%%ik,eb[q1ZiK!
%Cmm`jgc%%,'/-N1GDC4qAZ@&'m]^TQ-O6sk!REdJL^4^;P4b-BWN8(rfJQ9H-NYZkV<4[)]7q_tU?uP%M`;ngA=b\26'6Dnj18qa
%X9gJIl,G;s-B.B&HpmR0E6DRYBCR^$o-P,)0q1,WLfIGH@ten>r&/0/IR([+QFZ%,Tim';He[N"bV?)RYZOd)N;eaZIVqaBN)+%s
%m<HHH>J>c6U0eosT$%$4>IBan0L[Nn',1\XTP/[.?;Nn9-afBs*AD(&V'b<7[fInqfs[Jh!6cDIOsr^Ndhn8W#r(n05PHF[a(2^U
%b'>h6rSj:a"tk!F%'Z*C(@*l:aIoF0;N/$-3&.a6)Tj+W`+C1.@t*Nk'<!`8-7a,\rKhku;CtbYL;A/!VIY-2U+qp4%)Lq8\!$j;
%35(n0Qe=d8F<eoYS6CmB!-G?XLVl=a51I%.8LV69"#G"?6c8KAAkinj&\eUN`5QXm]K;7oa&r0"$9i6?moQ?M/@2Wb%r$e\E.p;F
%+3:T;;s3d%0bE$X%V6q<r4(FW^lI2^HD5R\P%]bfAQb1:(fOBJ]c>0n9F>C1h0r2^SGWk)nc`"Je0IWA+I+kB$\mQ3)1rW^c.[jf
%C,+^66I@3,2!8+oQCbNfQ>ml(C:6I(F#QQu,%c6gF;W<&f]\[=g2&3EG9j5[kh&]A1c[C(dGPAR@**50+Lb"A(<]A<HJl45U+#^m
%CKZ7CE?$-M:NbhQ];9'f2O%G]DO=^f.f5g1*>BcL),,rF'k9k6mOHIUD4L-HT!,5LEDF@Qa=K?)'tAIeKTK'+ctgL.+s`<YP@Gi#
%?`Yccae?[I_3WK3B]fON>*u).A.HM!\qDMmC80$7;f[\+i(7W-\e*ClREG>`=I.D>,+Rhm6Q3rn'\'d56j,B&@`YQH'A4*#'=Oc)
%D1r2EjK-a!+q6HE[T:t=5mQ##6&a;hP;0+V&fc_S1sh][Nf]<sZHqJ0S@[Xa1'ug]"9[0@NB,]i0o56K;NIXe_`LWHeVVD'l%^bI
%!+;g)j`XFfdUhXZ8VuEugD!YZCX.l2XrYfmNKN<Tb&<fUX&9[U>%?37Q5+Q^N#pus,tXqGMZtnp2[KQPM%EqU3p^PW>$]l;0YC6-
%X6"\#BgfV0\Ai$S>,?ADUDVMscFh.GqZ5e%_T5^/>1Z4W,LI.!CBK6=-WQP@2Op"p,P?"Lf2^u[MZRJu<L6mDV:9P31$kX7KQqgQ
%9[^N%HJ5N&][+WY<S:*AgD$ebm4R3T=m<*^;D0&L%lSGt43<X?]'dKZU%]glkBH2%RJ=$<*hC4jBdE*I#<S/Y_7#@3*d;f@1e-6M
%MLOJG860'm6QjNalX3B*UF`eO:s+r_U>/#epXDEQ6$&ud4jDb^%V92*.BtnZ:>&R#BeE&m7'uoC\kupJO]KkcZ=:'NSRIUh2<77a
%<a"II)tiZEhG$+sZ<;:s[?b5$/ft`Qp8'DQo4_-4F8T6dJbA]J_WV.[M;t'Q*Q+8=R_rbAM=G0d`*NjrS")ECOdY03M1M=AD!teM
%&)Mt>=fmQX(i7I@2^a]I?r_/26`m7rmALp#26Rm(L<>^mW_'\l)$]>khE2t;JOCd>j-7U)r9obd'8F6[.3sN]Iq!0?*s%W37#"IH
%lK>&H'h?$4[Ksj39^:Kj-.H=gGSdZ:2GX<,?6^cZ9#0d"/eQ7]UW1gMLAm&)<C7#XrXic^^+.kY_H/$%%\"^IM,ouX9U8,']d>YW
%UP^2A.tLU^.Mm3fCkEX0*hQ,fHl.7m-pIMmA:ClP+,q-6_T0\/?OTi33s`eVW/+mmjt]'9k>4;0Y!9C.P^EETVX*)lLa6fL]`Tum
%R-.W:>"jOA,UD>7GG?.+Qf1S0g),O:,7LI*-ofdFo8O\7Y?]"5e54@9=4U=4)9h/R;O_,fCVG!;d"j:;]WK2@j\\SMU\_<mQ8]/Z
%*6r;Ug+_(ciHHS+\q^r.U!WS-5s<J*5bhB.dh26_Gu-9Of+k%bT='d>+s?D.Gf<I(!K$%a:cId(>SSPMC?VF_p6_r+-M/&%5'0'6
%q>cE;/\[Qb6-FtLo9f3dV?1m]?9kep!HiHI:ifQa][^H5)pIK97K\?Mb,^7AI=^D2IHo1<hfG1cqNH:(S?r2g!5l@\pq.1QbS+i.
%66i2rI;MG$L"RC"!#m50Ii+q=:t"80F'0i&Q74NDG*I+YQu=[;1p&tV*70N-p`f',-8g@c3%[H)b`\deW+!ui'_%E:?;GBoAPHds
%+C0)b.2*N(a3g$\-$t^4"YFFrP6d1:7O43_^kNV&W3YcE7;JG-K.89?eC[-N0R^/9H'ZY<,G5S_.8e?nRRqP.5n,C^o*;IXqth^D
%nHQeeo3]52KGo7&.o3M[aF]*N+c:o8nQ6"%m,i$@j0?Z06o6(1d"c,if=KHq-Y.r7?"6!M]ekQT=q(X.QNZ0c@S+WZ/GQ>4D'W.)
%B>^d7W7OC9YA9dZke#fjY[i5<$qiAi!bWne.q^13()jo7.N*(*X5o(i&1iGWbk>7J0_&#''S'a=82*?&2Z-11o)h*%#qZ(Q;IWW'
%\qrMjU8k6oO%,<G;ido(RVICGc0K.\7V`3kWUTSa8CKrd.\&Fh?ILn8NLT8_1nuq1>2^o%.O*ne_Goa5c\uC@Pq%5&0MIi`c0W>M
%@_u)YDJu/h#m3hX273:7_65kWJsut</TSR)W;/-2MC=:A$RbqYG*GZ,"]:D\SM,PaT*BlP@_VX2M/p<DDS!pGqWT4"&uLRtTUd]u
%c#slDnHdSIb[L66JhMr32uW+GRP#594:%mV/s;_HhD%%Kku(pq8*14WMYBUA_7b1n2k2B\%EN<CG*Q5Q5CQs=CrgoV/m1$,%1Qtr
%r17XJLb'u7R'D6;Njc,/(E?aIW9/;]@KKrt#A"h#0buVBIP-US,g2("J^PJQ=jE==@[B3<)JriqUjsZuS.,aY\P_Pm)4M[)p:)MI
%_i)ng*nQ'[4_.VtS^LB*08M9Kk.6f<!p&Y6ZD!H"kTE46P7FV4@!5\Y[ICc<WjTi4>AQloN?$+"<l"FR;%$4=KRdMu(K_"a0oYBi
%LnTFl(@!f<LK21L#<_Up\)%X`gK@-j*GR8k!kToN&f#"[#S8pMT`ZHhie+X`c5=X]=]1t?B,I;l*hSE_<@EOH*2t][KEC4LU]oLa
%s7GLt6;,5l*))4@aSA6%7)urV#6A&A:L]UR$=Qc>m>rP,TW%#``S9OdKZ,DPUPtMWaM;d#FW8A0Ck+3u4QQgq%)'*d$+_[FDMYCP
%6p3G$Bn3.MHo*B>Qks<?G)Re<fcO%S$H>&=MsX5^.sMbpjXNiDTI(4S.<_o3a"eo"Ld7>'$5Nq'D3BR9<b.`R5W$GG`,"Dmr-Ug&
%-$.*h\Gup?G`[PGE>j+;R'D0B#0D&sFW3h\CmZW'<Q/0F"`uaJP!]]7!htUqW0B$(5="!r`VY:<dMp&rdfVVC;G^ct0Ynb7iO=&#
%.H?d>MrMUj(QLU<!P*Ng]Q,AS3f$W,<\YN=\McA-8QonhK<.PHLCCm>]qCs38M37?(EA;m?g4;-+G\(.&n7m!^4j.XA)^RqlNXY$
%)T.FPi10r3j/HiCU;8el:'d$Q)sYMZ/9*"i_Y]:>YZkP-r1pPW0L5F_\)43J'k\>mRXr:a6Zh-U0^WEG!"r4BfdFs_L*]i/KpWKr
%=i3NCZ<UAoc[m)!erCs$r2]TV'1Kt4ZYim#8mE9qMF.`T@i=I<Epk"%MJ[YK]SFZ8>Ra[4dW:2Yi-?tLCR/?0OBh<E9mS80-#UoJ
%#@5up06imIRuCg\LHSANLHXn)>r.k6CoRoR!@]<WP=8?jdEUPS`8GNDEW!L?APoi6P5=noPjL,0I_Q`%Z_cfq_W6Cg^%@;VV1j7T
%#irbIWB_n>/tP3.<:Kj%!TAC@prFT_Rg9_#ho-S"Sf1'4i+s(W3X@she9SEF#mDj'PD'#hSsho4XTA+>$e0PO`d95>kDD`CIZg+D
%Jbbps(+=<]P5OAXl@T>V&e_;RBPKMlSfie85\:[#\lMsi^+Jjumij5p3+87$kFnj2JGKIrEhOF^r=/M:;8MacZ8oo(UcqY%7<p""
%.DoefkR;k@.YJTEp`U[`0dKNK,k+B5W@s,5F%X93c(M"BoUm(ErSf7lp)rInF-I1q[hkT>8$t?.,4!!]7`4s^S5,CAjl+k?9idb^
%S8Td%F:b.?%4(#GQitS#nOO*2kF@?cp54#NUOg;7b=G&rM."n+%`n>lf#l<Iq,o0i+i"`PBeQDFh%4<93WrC"O]u"RbA=t!+=7Xs
%Bg@+4!k$C1H=)@5&PWTN"H>rI.-"1i%40'h'3%;]&KZ'n?BB5c6*r'h&<,Dd-rEPaQXM:4*`3;A`/9*Ap3C\P(\QX&N?8m6:/=Q@
%96D^HeiA]:!k&cHrM'%Xd)?WN&$poY]?hVaE\_A"`Q(jp:ba9c!<Xta%A;_@0g`\hV)\8VeR2<SqK,;Z'%GEsF\5J"2s=qS9pC'@
%+L;83U(hMp\rIcNgk?2"P!XlEG;,I,I]YSXgL8S>LW4b+ZX$Ch.(6(9AZ6>S@Vle4JOmjcT3Jb5(9RB!$q\`&W1i>3A:u`;-X(JO
%jJ(X)TU<,.PQMu@Dan6%M`:M]7SU$uR*M!Vg(B<,Kh[%O)&5l`I(7]P9Wi!;itrH*6B//Z!fUmgm;GI0Wu6YLTq@Z2?Xh$\_[+6@
%"c$Qe1@m<")9#k12V2T@pu-0Y9odPe?p5XS7hl_*RFlqme-qSc\DhF46-NT(\k,t:9(3`ATo]>5RL:c##]a7dKmKR>`5eLkCF'<;
%IZ']VS<G@2#+CLif<C;WFUc'D6+70i><7N`/ne!?%;=%\O8(`5]*U!ABMDSY'W'M_d?9*.&!P`3RH%Q`!C^6!."4em4ZU:6$1<_*
%O^=SMMl<:Cb6q-A:PW=E9</q=K[A7bGn;eAajQhZ_Yg"pcR2X"gNT,-)a3&fd=Q3_5@[o<Wi(@W+r!t3>?"F47Kir;D-2Hu'n:;g
%o)_R,&>?$8>[%8`AlMS4O3"-!cAC;)i4UC/T^kgM*F+O5@T8-*"GLHpP"i`&ThQ8&N>5Jg'ab;mBNu^p9/9fsV?\$C:nWEIT[8We
%'hXf\6C_X:5T:4UWn2s5CT5KXma4=R@WHIDdc_?uAs=O$arkblTVAk8:5_`R`hUPYOOoBu'XJ_@WcH"q%t&*`mNh/OU5,Q6`Mj`7
%X*S?09Ij\8+uLE4Pr;fQ:r";+O[,6`e)#NbW8pA16o/$4F+GqbFDP`M\h&e!%hh"4YL$"i*\.Yn\$%+<LfZLTH(Y/l/\Ha5S"uSL
%=P$BK7Z&PC&5Z*sSF&`bYB$)Z85YbOaY2#`HI<,="NX$NBMhqZ43jB]Y@R0o!9t7Q1NuWd):$\2Pjt^rpO"`tW<OS!Ys*e+@JJP2
%kEaM?[0p>"5cC>h8r\is4K[kjC,Es%(@I;eF:P'K9X7`1V)(7hcT`.e[lb5GPFMh4TqaEN+"K+#1-C'*fQ_]cWM4(-WhbPmh7/W$
%/a5Q"^R9;41+qotn<LSB_T=L2Z7>X+T;8i4_)i4gh!NHipc]%rR49X1VDNZ./"gUq2^ggHXX\eb/_'&/g5[W-^b6%00:f(l"BGl2
%.>utclCr_%<eVpaHdU2E\H<GGU<F>FW>te;Pm9%4hDM<@+Vp0t76iYT@N4H[Vag9chBiW`D/Dkj9n\+$(]pL&cRd"%:k\T07/QJ!
%?;E3G@_B0Y?[JdA=EDIp^u<FpIq0,f>k0!u1b<ZL;i34Z$V8E8=:HuH%rN7J[1#c/KtApDXbU_bq)gPL`.\(D231/#'N!Do5g=MI
%Tss#R]kA*+I^bfu`'(Wo;6bpelC8]KkE/:)QmU:Z(!,VjM[!$F`!eKXj+=L-Pr3R_P2,Q*DdX^N]@#!_>':<84P&";NOaP?WJP6g
%0fk+ebgp%P#?(\XAlMUZ)&#S84Kn--Mq<sQ+VTndMIab[-XC1F&6P&CR14F(2.!4?p2*@MY*<3Xdl)f&Nj%ft\cA4Z*$5Do-mpG%
%VhSlan0lrq[^2@?N2gRpl$H^RYaVR7:R%RY$E,]S<%$O!/*R[/[CWGA!,18C&\-UZEp+tL9Y+WK(q1]OV?hM.C`,0^*Yg8$h9-SF
%F:Xbs4u1)r")L-4=C;uu9nH3,f[m_am?-M6dT?u8$=X&JL@Q+p4\t'r]=WqV*2(V3/[Zn&ZGJX=R:FSPSOEgn[VMFnKXlO@)LEEH
%0\83Mr\#&b.s(FMK[L!lfU40clcdk8k(h'1]*9j-;\d_t#s:`,KV'<LIN<tD`t6VXBAk4h_/619=^b56m8GG(Hdm"^7k+QrIkh^c
%RFilZ.NEi(U?Bggft\e?8K\\:QR2D^743aA;kh*D.4Ig[s(Cb*FtUm^/[;j;IYSnd"0Q\.'"SL`F1MAS2Z*PE)J+/TG,*IJrN/Ld
%i_kGQrGA0:T2UA/@XYL1l4OG]+rA:hO>B*OSHu?[09[RRAMS#79GV7J*Afu+7_tH-3]E\Vh`AirekV8lmYKBG4dE6YFVA+'(dYtl
%>4*bAeF;2r+KRC^6-4q33&D/WIV>TT7SZPm?k#\\!dZ'2Jm_6"FK&"1V2P9Im,oe5GE*Y/8Po9OO-R%&cDS:K@r2C]fK,bV;[A1&
%IKR\:$OpW^h]>2p84_h]\@'(tE(5&4CsF_=dW8tB&#qjt0'0F2UTMTU9OU9`fjkih^7a8B-/]2lZWP[KGT#;7Fl$?X\'6?!q;F%f
%\D_]".]FklL[5D8Z8EUk?k1F8UJ`9J1,;i;hX6@TO?;dC5GQt-5R)eS'\:u=SqQ1cr02b*U&3Bs6:j$?LbX>\H0#JEk-!s0(5[5f
%h`u):HZ2Fr/$DpQA&`]nKTaq/p4:e'qhFrQ!%\A3P4H58%(a<AfYsJF>SJh$4M[Omb1r-W_5nnVIM]e]Hbg#ZG6&t,](i71\dO%?
%D7SBn_(%;k,M`N6WEaSDr@T5QL7lPnhZ^g8)CNX%G6'I(f3C2mib*-+/g,dYV2)KB(bL2]h$"@sNImpK(I6uWMk<MsmfLktg:#1H
%F<c!XA*#<C]re!P)7$jS6HSPC=CH+Qm)..6`a2`pYUa]-;s&p9jM4\"r@j[DdcqB/<t3k>MUs\P"D[=_;JUGdat4MN^p"*+'qlT?
%GU'UCj*6uSFWrJ0OtsZ/J3'Fg5\s%KE*l9*,K^WiLGLtKqtT\,26.'EIY5tP*qcaB`Ws$c.Z5,B5*9qo#VbZWPb7>YC5uuE4eVJf
%FZ?-IiQ6DXB.7?oRKbdHJsrZP+`[9J23`-T+%?o7AqQMb9>VQX$#9rr0s6n&l>"o832=:t;@3:URSYiljL^($aqFV5kWgMhc?[MT
%JL`jl3XmCkBZ4$kbmGN4@"$e9"Ad]#7hE"g'#QVo>0_j\.1H8=m7O3KUInaCqgX"0e$Ls8]0DpA"aF<K\KP+d\kNF^gCc0Dlhfu%
%Zj<B0\o+&S@\;!h64b.[hn?-XM<\/T1+=RS'jmM<X_jU5C#E!`c[oG!')OSt$#,.]3Ue`j,Z9*CpXQbKSPJJDfK0OoOA[,Tj9sH.
%UHKki,]O^+D?X%_A^,3Z<b#@+5ocB_rd5KR*Hfttg`(>mrRkhJTtKIkJb=G8mJVV2<t-:dO]Zm/[e.Sth^C.@T&r&,DQ;Mu8jq76
%+;336>YQ6Th)N-&SbUpVAFA;U&1f]I5ZZHcImuBW\0-hdjgH,K"Xj=r4\d%%Zl$:`qM)Rl#fr(*:WLO57f,gGb"ma_!=`t/>Bg%l
%k\_:Tm(tLDP@!2=.(q`Se7HJlR>b!l(7Y1o[0^k$.[aoScqe0UUNG+lT?%B;4)u(V!`0p_5F,bE`+SN4FsMG/hsDN]&.[a;auSH_
%64o(e)TG=OG!,00*;NHN;eH?#VHLqJ<FsDnVC//$BneI&.@OES(hRu?prZ2q8br3bb(NZ2LOaA2H]/?^(:qWpNc0I`mC?k/,t"W?
%V:<MDU'Q%-m`B$q>NLXV,'&cs)i$W'-o:(rJ@B7s6;D_?e<f1,N^C8,.@+HN]\Ya"C6aDPUJ31>=^9RpicYe-\a*qmkGYr)5""a\
%eJXE)(WUjU[l4MRG1,[Bk5>1<lM]I(dAK'+HR6Im]d"8cbguNF+s/!3l+7X_?0])1G"5j>fuNZ2MN@B'Nl&8c\\;]RZ#tR;LLhI!
%idT<-0KE%a+2!^I;-4f(eh3i;;-r`7;lelfa#T%UTr8Ke;&#`C%:s*qoV3Mom:X@h9V7T3U(?,&Wprhm"B_/?g/6GIa7,&5IbW9h
%eqI.0VU&SZS!"A$Dmb4ei:Zt'\psF.I3P3/qhIERCg[(LUSJ#J/+882Sj@i>]W!.ND'MLaf:MX;%I8.m'd]*/JUm@u<@tU]@b9<G
%&Vnf@\U"f<ccDraOB<Qac<to1[eB7#f"<7(?YTD9Br5/1n19Om8FOo[c@U#LF-9jq6d#A)4qW\$o(X&P<5'0sn?"K`*lu%.qI@c.
%KZH9j6k8e#q<uYn^1P")O7/t"YTkG<k94>_'Ai26USM'`"AQSEJS_Cs%EcQs/dN8.r@)f=gq7jhN:+,X7D)Wgp6U%Z*@,i?"k-bg
%^Okmj"IM$^@(J%IR;6'LCVR"g]ZrH+3<-j6iGE@AHP"jKH!5*)@5?oh4$ohQPJg2A,dg8t9IMmlRb!*s\_3;SZO.(dYQgs0Z\B>A
%^`L],AdO:q=<:-AXAU0K3@7lHpL'^?eRiAUGSq1pnmE*;%>(A;_'F$lUVh`Q?RI7hms2[A%jI%9\-!D8Q%4M3JOq9#.c5%-I69ZJ
%/!im[]qDVSd`QJkpISXB3AFTnH3;lrStdU2lc7X^LAA!DLPTuqK%rBMTj%4AIVL*rnq4ucW$.0d-$J\eggF_2Sq*%B$SBF=HVdO_
%X9)6fG\>sPCW^sZK41n2,EqcdE?fs8$EX!'`]]F;V;,ubE%K!N3.?lgRmo*S&PuG&64>NnNR(j+bnFc^jO^>I0bt\7\M%B?KTBpX
%a[*\@3%/Yq!6gVNMK$K>)'f^T<]7*O0e+X@edA@4MF\cM@+RY&\4*&a$PI`AS[M!NCEWI28GTnF0fF2eL!N,]H`@_)!P4^2).>Ul
%0BQ3LT745/6H4clcsBH<U<tcHUtTh*Z\HJT7nYsFR.E("Gjg@YCj_MNZ$?kY>87.VG0+k+e<=lReerk^^s47h8)"Ct0M1PI(#_[5
%3%u=jdMSRbN`155!/3EC9duWZ!@(I'0\n4@.!C'Yig+?8\4=Y\N/4\N$&KI7P7&^#50q+@;n>.<WcpQQI5K>poSqj/!ii:>)k@NY
%<D]jW/,rMo'TYiO2/(HEl0!%)^2(3>hpSQrVLqlA/[uK8('f:?lp_&9D0/Hr7*Rifs!\^#"jLPF0*II1/]J^lCCOt]g/2Ma5EE[N
%O,ejtrh,saNpK+Zq^So#X6)r;'oFj'!&a?M,ZGGo=#8f-!;B=o'msK9$Am@EV_C7T,ubl*>#VQ!X?gCFTs\4rlm6Ir"k>N;#a?Gs
%*?N_fHtt]!QdAFA$0bQ8e885=!FbiBUoEr^5.9?Qd0oq(*4GO+GC54eW"'pg*=.07VX7/BgLTDS&iQ1n-_<:f'6UdJS9]'de*KA/
%7sQWKAt8!oi;=hLlnZkM)81R@I7HL@HFLj`8J9;s8bbs7G=+o#hs2Q<BCsd/+k*Xi\*16:WXj,7IhN(cn%gT!NE>.)r:hB5kPtBc
%rf@*NJ,f'-s3lJoO2$/Be*m>$s8&r!/"Z\M5Q6"M`?+ipFTeaoec3_0C(U?p,M6;`'8?E)r>#l_>4Vor<4+AWBLb2B=Qh[jZG6lc
%=YIL8%_<.-q!1=W=fg8#2?eN;BQ\>PU6YWVp%od`o34^h_.BK]j&S$>6.CL9-])dn`escCB8<I3.lt,UnYY87'U6F`^nolp=t_;Z
%/GU&?.+>aKnT"G2S,>2/V6`_"!cEMGZ<Kk*6mCE_5`i?qd*PaqaQjY_I)5f_<If(DZH-;c4L%4J"lYUWrWRNF(o/K+S2'tJTaO_f
%3!S(&ggc2s=Z>[#mJTD-Y,msm3(/>T?I?$[N+iqtYA0gZ0De%*;naC_pbmi%1mAuS/gK"=7"rkD8'dj>q]I`#AK3\!`BhY#VM*\i
%U1W`NVPr73D4D3YpEeQ_F&ZIC*6XQM0dADP^:FT*Q]_U;3dA:I)Ofq3Od+72SgA=N[l%,t=R0-G+M-&A2-a+S,/Z)K`l?OS-l.C1
%R,S-\H(cd9?.2RY/?U0)Bh/Y,fiUk-l:sj.N!*sW<rrb%"?*mn@sHi[r`k4M@>L'#WLD<nJ]Jt#N2X(*gK?.3I3,p+)]o>.>)<5\
%AkAjc;^(4f*1pe`B+:X+Q6VDXMPkaXX*?q)[W2n2q$/#kK_5SQd!?T[]G:?YVo$VLJKs6T?1sD6nLA)").14W&^k5*H:1/fd!>^2
%B9HK&J^YXInLgRPiAm,i""rbLqSb!%:l!/lP['=$:ku1\.uu6]d;2/J[tB-.nM,s]Clg1M1LoO>ga&e,S:k>]oD"jG,"\q=7+Du:
%jd'HaWW]D+5Y]C),6fi/8jcf9Yu.Nq^!6/o0[[&HK&1DKrB_U&0LsUOqL,F>r?I0d'>B"a)`ba\%M&"5da+!4qY=KuZT>AeqoG^c
%#r1`8Dc-NI*p!<Mq0fVg,Ik<1C(AYUb<hBXeOgt0=TrBU,ifp<n;VKgD_aE\$)qqd^6'N^nU=V]KZ@NcDE+$)*$[Q4*Y1"_<_^pK
%"%"d\[)_T+ip]Rt>I18`0gE@7[%dpbi)[5XMD5X)f+`nK+'(#r<Ff`rIjJR;`eJH47Z_laa8UPP!I-ea4Nq#Q*)r7l'EKaGq3u!"
%Te>D%2)&MjV@>G-YqL#W4<QDQ^i>8OUY]OZQ#P;[R0c0In[]&$(-RJcX=Q"GmdmZ:itO>1K2Gu1Z&jIPlp=!)#o!BS>>04'N]QU6
%fu`%kDLQLCILr9.%H;XW[&=@g`5*S-a$rYf(5-iIaa5-@!qNd>Q]$Kon8_0jJ=L+o<>pPJic7W*ea(&=XN[;p6OJR:RF85RWe6:;
%73LgMY."$*gM0PI&u1<LPj=W2"+hj2X[3S$bC]"GTXZ8f;S\a"[U5)@`,WUa)eIoi090:1+>P,(-@3S],+D;qTD*>UK,H@d<D=Tu
%(;t:2&8AF8**3[QKbh$f*koIuihN*IMRXKU"lJU;H<SL\-o9c>H!!`lpq)RHn.e9c%H4O29WKhF1Je]9-/_<&euBfC7rd.R-'AhT
%,;mr-OR1.[+)&G$b)n>=38DN:=,Lp_;*X'MkKs&FJ0`!([1T`g6GH2aM%/)Z6qt#nFDJMd>?&55/.onYX_h=Q4rH/1#dZ&m_4qh/
%k;t+eo,jra-97J]\B]ap1Ju)i.-5[3+q_sQJl$#-f!rARMIQS3Z:G@LSuaW2W6lPJ`Lso[#@9"s`lg>XZJ<BGP1!_?JrtiC5h't?
%,Q:*l`[+@mkOi(3<Wq'OJY8dXHSqis^W\Lspk;tAbR^i2rhI)G$\t(J(HJ3#;g;D2M':N8l.5f$:cWk5;bn/l?HoM<^F%iYOY9Rb
%Q["k`8osCI(ne$CX72Ppfe\4^&oNo;2-:5F#eDDEWb@)j65q+@i8bi:KIZ?S'fK<XE`ICmj]S#f.F)'_^6l.$Au0UgTh%g$K$'cP
%Eu[%iYnIdq&bekcLs0cq%`sE*ED6e<p65c*Ze"&r<kI-N_1+TV5',[nm,`A;=h:^kUqSY#bL'1O:rYp2$%l<bogk'7o"=cpE5Kt_
%^a3QJF_-M_PZV=0#86<R;k9(?qE?+,WGG<C>-GHMchsHLoaL5Web%Fd"BW&#UZ<?m<Zg0PSYLX,-0B1&$JtI\O7U*A'pb9Vg:XZJ
%613LFs0!>k<cN/nAnI#2%a8,kMMm0+D8u"LDPaW$N&M$((@maV,ZKT>[b($)/f&s^`G)UE2'c70(9]?K+$\?q,^tS;g<a\4m2FPB
%%taPd:P,*g=9aBP[YI\h1iVR<imoE9\')6DY+S"h\e3176iBIC8$^Csa$seoBnQKr@^PEi1t:hTO0kU=5C=HRNR&%s\RLqZMfS>X
%&<F[pf>XA?o-o-jKjT0d5fLFY7aR"2JmIohgT;J)q0Stcau)=JX;IXWmn_B_TW_CAEc=E$i\X#lOH2(#-mRRsTh@J6[efLY.jYmm
%9$XqJq^a/Y1Xm"/<1)'n+W:VV-V#57>;P>$dEQL27Sun+[De]HUb-7qf$U>O''HrQp@d+3388#PkI49ML<o8[9W]PhYNnWmrJ3'p
%EAql0/J*WlUnj7$1*I]>60OhM&iQ"8BMG0EoN)P<605binlDgtJJ8kd?"+LJ'Q&U^PVodT&ah[Rb#&T`JMaK"4k4gnm1'gZ8J`mG
%:C%j60YcWm[YR6<-K6`5=3RH(n7uTSs+4.AT*mW21ifbJ(R3L<p[jD^@4f3P&YXGf=]E8<5E(q*q83?@n[m):/mVfonTI9u/Qe@J
%p+C9L2EB9fdoo3>?qsb=E(M:->'4qdkL.!VYMR\[a%H.cLLLH'Iq'Vt'DbD5Q!K%d*f>ZsIEA>1c&6`8?*;"oWn6qeqU=IOc(Su*
%**rCmEScUTDbo+-MP6bhb.c,OS+@L:kodZ>E0JmDUcF(!Z:lie.-=P$/IcRd#oHb9V)@oOU3(WLMjAAqEI";a3:r<A`:;GUZUJ<G
%2Y2:]_*n$Hn`rd[(_(4Hd\_9,\R]^">3<U4maVBNhJokQe)m;]D2S()Q*E>=]%mX%GS2578eX1E:6Xi:"S2#$TmtU*mg5fo7!bEO
%/M7rQp5Cklp3(HK4Q?,AAAS9B1V2t@XZ!e",49fBC69^2]*QpYX3[_H6:j!.T[MB*J](iT,&m!:+'NAi#6nC;/FrF[8,:Q6qs5,\
%ocFrkf)Xs8=3k<[iKBBlDYrLRZf5iQ3jlE3XgRj!1V-<+33<+IgE`Z;6,-lfOpnn*HV#QKenIVe^g3SrH58U*V1aJ[0&=*D9Kebd
%)0E1d*hEr;I&03F*oHDr,*9$+T`!B@'B3r_=rh)LQ![qF1J3.;?D&e#eQ:BdU$[m;m%NWG^#MI._EK$YISf[sgFW>-/G$c)0Y528
%"l#1e%gKtMT'uVFEKKZm4!'9foR1BOXX1u7FQ`!'b2#J8bk:?"!r;RM!8k&17qkdjY;<cWGc4rGhH>0(:m5aZ"hSLZZ=*_2)*Q`1
%*MH-250gtb)*p`fDeP1E[S/TH,@mDXW$WOARW]d\8HrX"c2:oI?k-4ZH:]?7)Kg-NkL*BAhH_E0Od0qhZ)>)upC3At.:'cs^_e8t
%*1\u.M49eQCZQmP7u#9If=0qsg;K;a"`;LF](E%p&R_/Sp!sSj5&?7[4j64t.B%X,WT1TjT5,F_B'l#c7jtKN\\<AdJeL\[nk`^(
%Z9O6$VpsujOP>9XlKu>K7jq$P:^Mi+X`8().6cE_k%B7L/p&&R[h3Bh,^l[nWc+T@$&5e@V+"qlO&>I;-\AltC#(j,MG;f6\#(j2
%W)Z0^H6dBNimlYQ<0bRJ65EDL%tEtIGA!UQ3D_dselbAr=,2#G*(?Y;DXL)$0t'g)acKm+q6](BM9<lVH>(_4ih:=5l:9i704)?j
%\XfFsI7Wd1mnS@.,>2\[-7TaJV>:B?Xb?D;+<D.c;ciZF&r3N4`+sY)'>[KA4ZON0MJfCHDFl'd)j5n-rES.C`N-JgeU`6MZn=^C
%XkNA5V*!8sph)qO3(#eBN]+S\-ZRcK*]b/_6]j3OLn>XBZ$oJ_"AuLY:AnGQlG]g5^,gX]N&U;cIb-+'q_E*'(AM;LESe6qeN&,.
%"R5*!fb*50pb%XiVPj_a`%4N[/OVVT4f*GZd%_%P,uVJ%!66[TUg,&BUZK"G-G/'d+C]rq6E"R4WgqJp%[@u\"E8K6Y)NEp^"8$f
%E*9S_gpHck0kPPlqj'=iKM@m,,WJ%5cE.YKcGKcL)jjZJ!<<%W\q%PmcHQE*P9h/]s5`VJk+5iSSW^3I.=T#--Zb"2j_NG?J'%@$
%ZrsA;:d/M'4HnB4<f0gEdgRFn28!OJb5JEIft*EJXo<0_:2jF/V'nd`[M"WDrVS>GEYXGO'dY\A$YAufQUDRs6G?jB?6dtB/0ehr
%=Z-i=Spe_g#*gatT#7Yrdh&6^OYS.n`Sf`Vj*IPTSK.^1Q=I>KV:E5-$(]ZEEtuu`gHe%f^9eaMAOll_i3kIBiNg4Dg9nT.9WG<b
%^I@D+m<uUu93Q]W=QjR;c%^$7YF1U!i\_[\Z+O[D2PJ_R:UtCrltr9/[AcSfE)eP/)rgQ],Xs*L_]Y\W-g8<0UEnbNouQC*#N@4d
%0^/9)pdB<L;D5g^P&Nlr_U]jHpOo2cCN,u>*R.2Irn/Tf;4"LGLe-RQSdeG:D_PUeg/IV[e0XGjk$)30]toQn%;&l9L8X5gW(VBZ
%Trl(Ha`LmS[#U$6!$63(7S1C&S'Hie]<-Q]ncD#pLleoDT>.$O?lr-sBVb96DLu)6\8Y*eQ1tf2!Ires85_^](ZM#0kh?J2-nTk1
%E(9R<U.n/*p-L=XgC$:q/U`e$7e[^N1nj"tIA->n-nc$rE(9R*_j_VU(1!(U,p!F/RW;6J!tI+1:L**r6ZZH\>U89eP([D\9C_%U
%3F7-Bg-Gg>)#\:7%A$oWY3Q_G-qQB6n7fu('8JBLlQd#N.YP5kDWk_#Dj8a.e0UV^Os$rC4>duAWBj$WZqEBRNs=RBH8h56WBj$W
%ZqEBRH\:bg54iI)#-+-IjQgKQqs'odj)oH1&I:<(j05_O1V0]"=t(gu-mkj(e;H-J^%f&NU_^*p>L"$;E26[Smg!*^h['Fa(9/rm
%5^:3OL>1!V8lW$%o(0F"aSM[VUAfkI!45H&6b`0'IO^d83t=*5.PDr^bu3<WBfTCRcV-s\M:>[C/WV'X<L$1A+k8$p6&qQG8/9J%
%:s(kQ?k4iL_!q+M-)`)+=0&9Tf_&3e/8BKkrnLp9_dn*nX`nc2_RLE4kEV]K^MGrW>MQ@SBUV&kLj6hU%*XV,W3`mtUuMcUrtm<V
%8A^7,4QVB.$k!LNN7--bTe4,I+Zdm&EeStqABahSq-XMTK-SY530rHV+jj)8lQC)7a+<Wu[c4lqb+BHI\qS1e4s3G4T"_4R'SkUn
%L#*^FH,*QYrX'n,FA_]Q?oW.!I0o]R>O^B[=7@0Q6BDDdCAFFY9gS(B(YCgq[juEjnoZ[9.Do3bC2Rh$>5%"Z7LIW(iCFl5)m4q]
%\JLY5]W_/Mb6FQpnnPBPf"Jg[p<rft2^S$-akG81\7SA7$j]nKd<;anjd]S(pi@/.2?AdYio&Q:c&m7,h[^Qr^k1/D9KMV5LWZ:a
%7!]#HnoD0N)7t6n*SuMV-,s\VIflH2`+;#BO)&2`pmto7]9$X=SHjNmK*bTLR%8,.5q8/)PNQ!:ZMR2N"t7STr#W4P4F'J`W2ifa
%m_Qnbok2.&DW87uC,T*<A:q5:N&[o0Z&`!eihm6$])2GprAM0$9["j3oK%,GdOG?$55G]d'd\;n@%-aC7788IJpCs!a>Z(/Q*J2G
%?!Df0a%fXb[3S*$^"jPq87??5.HDFA'6>"S[p=*cq:_74_j.EnfT'e5ODO=BE`T,l(-G@LQ\F9?j0p4CJ2&;O%T>utIDI&/\Pg?Q
%=X(\VOqLg4C4&@snBnU6Io$IU4le22Dq\XOE_3(`]K8k)+.I"V;S.lOf[]@U7os+gWG:(&`YM5"@oO5&]KjkR#t4K2Iqgkr*>Sc2
%$+#.H$9)hU,s&E@]jO`Z8bClP\p_(2gUXgs?_"%\RNc#+=b`>#0!KG!asr;'YhsZXYYAP]Oc/#51g;0O$-DaGN@-&;+,Aq.Y.d&V
%cnnJ+>nRs\[CoDgElk*5]K:RK66N5,5u6AD/-fm;,'[L'T$bha^#ig@duE:_nV\q2a5WG+L?Z2jj$^C"r6bDi&4McGco*KiFY-mj
%pZC<%_^Yuor89&bf1h(ji<G#AFt)kqbm7aZ,Je/]?)0+XDgbhK!P\EapIB:sn#_LiChqj8=*0:p%__bb98EMj9.*,,7oCu23S7b\
%o[9NH[L\A8F.u7e=q@\S/Y)m^XHHi`U\S6nrt7oU2Dbeb79u^5khUGi4goAX"nZ=\Y`BPj9<LnNB1K-o/[UB0!kXD*s23pKi_>RU
%g4C@;OX-2I_ZRM9&Kq!O9s<"+/0Lq&83"<ZQ.?2@<DC=EU:Tp50MS+We\,'jldt'"5pWu<g=sG8'ZG)q+1_0-GY_W<M>]2>E0<bo
%8&\M'I>Y+<JYj!MXcHPSkd4;b`K[39ogaHPB@g?4lVLg66'@P"7PpL9ESiZXlJ&G[gN?\;/bJ51S;q]?O_$"dFu"`nY:)eBLcEh.
%.9>^6S5b[J\m\=V3nhoffEV`uG2$]D-*XY*-@n#U*S[o='@WX@Z?6T1UW?:A6IY*AiGV6IR'kePou3=cMA!?Yj?M81gICW`q(T?K
%1n:b3-aTAd\DtV4%T/lj)_8PS&]N_/AZCMZ<&JPZ<KDCSg8SdqdG.S.1k?qd/7ZmJe%K7)4kU5WCiQeNaL"?]l\Shi7G"<aTdB9c
%pKrEjV=FkYkjdP[/")8UJ]0ufZs<s?D;FOf'F:nuGV\_\Md#U^KQX&(:&HWf4mI)(IG>USd3+q]qmO"Bg9+7/8T'Vq'+"_*0%R`g
%8haA\dgsH9U#3KFYN:KMlp%=1[RD@,C>u16IE&0u]E?pC\$19bUdo"&b'apPqjKFlec"mi@`_Qpqu/lcV=gbVY.Ah*D2U5AXq;-*
%CY[7jU@;?['Do5J@+q]tXWfk?ZkU=(+`<0c>Ei;=+@n1[=m;*4l13.tdHRZl>u?1cj*gO%Lf"G]Xr4\:MY-,dX%9%&CI/oXNB<8e
%X1;?"WB9ltdeGWj]QDjAV,EKfOt/qQq&9"*!TQgZ)DHXF]r@Zf8YnRW4qt!#GShK0=aPAIhs2S7?3ogCJU2rsdJVMiXqH[C\l$]H
%3:0b2g8sUbW/iC'7hQAt2LZ.36Vh]TD<DdlK2V-D5bSYrHcq0.EQ3.n8(1]%]A(dB0"\Fo=C"NDr;-L>j]`58f^R@$/<+l/^OQ^`
%0@Pl(RZH;1OnZ2)s"Xn>)]s$"ZcKbm>G'RE19%#IW-?<O^ADfC&e[1\[fbRW#<_0,+GujfJgm+:1>ur8KS2++\SVksK=ptq>(>r/
%S5kk7B:mqUKu.$iU\,c#ea["Elc/rp=,^l"rUVZ\1WVeC3*8JW#B'_l"XieqbLD5T*rt>:`OW.G*d^jM6pg]P:^d[7i"n5*EQ6U,
%8!7g\;.Bg@H\*Rpoi6##NGH+dlDr=j]7b'$_)j]"(H.kBBasf_p+[&ca'i=-R>#%!^mSB1Df;?j"mp/uBL2jD=0Q?t^AU7Se*n*s
%-q'RH!fg[8$f$M<8!GCBH[A5][hp(rGt[@09hd:70fZ]&\R2BB,UC7U[%k-P`oYC,+=Ob'Y1L!Ga^ebWQ;#rXK(@.I\LPF_-<.-'
%C6kn;&?ID;AG`\L+tR)72R>fKW7pp0UV%S(gpX\q-qch_JosC^rr`H<C3_F>jBLL8o6"aq6m+W[I^?^(TX)/4kBd6\+`K;%:p?s,
%cd<b?NB=jDiB?YU.o#Lh8^];A-`P3i);tEX8?S_$<XVH,Fio+A6au4RrDNS@M@boTm?+muoX:+?SIg5Xs0Q#K/MnY9;A^.83/5(O
%7]1hjDKY!q?bT;,^F$V;)C-AM'OGebd31*2,C<au)a\%#W6I4,1V+uPe0+Q9U24DGqh']edW]Y%F,6<.FK4NP<ZbXr4cg"=<0aMq
%Je5IFITcrlQp66lcq_U%X"n!U)<W"9M.oR[Ci*CS%amZcP=^\kJ>P@V;MUP;B*Jn*%cXhcq"<"HAmA=(-nM$%qmhBZ#WeQ5ZFSp-
%"s5UE*3QMc%!W9oXX=NC]R/(TXAuf&iZ9NCka$/dr-Lp1T2E6r$^Dds3^Z?"*#Pq?`F%3DCkdLG<O45Vk,n7$e$A0s^$aHB"BQdl
%l1VZ1F;sdgA=FOL,5W-:$r`Z7"2Fj=_3gH#*eX1_PI._E?[<B:K`?$1!7E=WQ,g8$"cUmJGc)Ct[D*8nqK08[QlYt>)59kd=I!%j
%d^5Updc[aAcWC<9VcnmdAOuaOmi<G+1L*6J'#%Q*Dbs.Q8t^A\"@8r=gW%gQ#Fe.A!GX1fl5$m]G&'`kaUs6?>$c<TQ0N!F9"DiI
%bGHHb-V@s'C,6Yl"pnjMDDskU9X;_jH8$1[VmHKF1.+p,<91NKej"9c&=Fbt-tr:n0o6L,%D'1NP#:T.(_e,PoZ]58VU<Q#^LER7
%M.q;JJT]L,d[6^VSA/M#h_;$ZWkP_SCI>T[Ab6Pq*FtML&8rpP3=^h85GGAiUt@PSD)(N+9tNn;"EeKnVOeb\)6+T4Lu/h+="l5+
%XPAqneYg#h*/B7iEW+,4HB^D$V]eMX^O\rGCS?5Jh(j`g.GaP0Fjlj,S5FU=8[BYagS"<9N:%Inn$FK1d-erj0;9;W"G?+eFXr[=
%$Z4n%PU1Nh$):UA<g[MB7t]?+g*FIL);_K<.rrDtkcHKAS)LQnN$9?Y/32r(a>@+smDq-6m%a7?k:#:#CDL?@96CLu>6pa2Madti
%Ada2]EdO6,E8RRKdI#jM=GWoX:UA#;Z;BK#/D%dUOifsc]*7GC;R9e%;<]l#m?WY#k'aR?W9;WIH&WBi/L\K`g;@g%0"B_(+M@jK
%HU\+Sq_l&TfQdSR/WPqKio%1J8=%p\0:h>XfYHE0(RQ&gkYTIfhfgo7o1_^hm)#Lu5^EMX<d.W]&Ol,op`ZF?OG8dTOhd8lh]CTN
%)sWto><-`^+Dp<N&eUs#^L[0\b(N;s,T/8Fc5E@O&#!rVh\b#6X2kuXXn"Edeaj#I-`!PV)iKDrgU,8C:]9Z#RC`0tGmKmcIX%OK
%7uq88^5a<g_P*D>XPIoVj]bhtM)`G+i$aE&d&]lEoD;\sp-D$mNS`=4np<ao;=/[.(-@i%>`K&R[g5qq'B\C0.)4%[iJaY.Y2.F,
%fb#M:$.MB.1HVA5fm=^!TnS9c_H:ccP+p*t"a=PNVUqg[lAg<O'_1)#X@NuL-qRNB?)W$Ynkh+qY:iMTh\c4C;!bhAT-Tq(P&SWd
%_NE\1#nYfR6W2Y!gg92W8$`H#OG#FD\2"h)*Mj*/%QB2"IZ;YX$$FWHiJd16,#1TflDVOD'huj(*bU^*PCta'2>GCh;`B"jGoqm5
%#=j.K?,'$P&mHabp:e79fX<,?Fe)A/4gfaUVFJV6M2D:W<c+nnJf=>[@p1Yi^hGH54Eo;I>V#T&D/U8nh\5:iJ$<1r4Hh+L`+k^D
%\BdR>Kmn2e%%*_>iJb@$^U?A"5.bf8Om%Yi%8P?L?1\r_-+p]BH4F!o79:531ss!bI.@[l$"oJJr2":_hVkI7$%GEaik<0bmL=b4
%hb]JT7S1JSVr5I-;Ki1WE59<i>;'o&N@sS8(kQfDUE:RDs0Z+Y7'"Cbg+q?UJ<8*gJY*A[QLaS!IXagm^gHB)=&LA_X]4=.imo)[
%\c2I^]!jT+M[Mrl[aoEt\q-Io*$7tpm!\TbT2BJ8)^5]Y>2b0tMDARfRO=WP)23XE;<B8Ge.=Q+ONIHtL:i(>7L14]BrGeS".YgN
%cn@1P,`9J]ls6`&''Bf`lek[eV6*M*HV;a=XAi1hHPqaA0cc;6(t#JGn='!`6*?H)E+&<kT.XiW/'A\c4/$"rg51FR+H!p:+/_)R
%GUsi)lFF:PM0En:T^sh%(b;<Zs6NBo$(8NL9HMXa3WQ"(@cNkQ1-:WfTfN'Y:c;rl_AOXUg%@C6oP4R[Vtdp@,F#Q=^HZ/V;tfTL
%/;-hun`:\k&h76b+k9aVl'H1T+[6#_C;06bCnC'n9f`KQ:mZDcks7:tocA>a,D]MLFK4N`<[ZaP-&2U$PqLoYR.7\oP5_72O+X]T
%#Ur3@h3G6%48X$(IN/J8LDjLk@(-D*''Bh8lfcjEV6*M*HL"XN+Q+,mk533]Z"MQkAAVi#=*DM,Tcg2_$'GU0)P>1`U4-[_UTo(1
%V1+e;,Ikc8N'^^DPs"cuKt5?CLKa6#6XXfJ+E>?_`N[-!HgmO7$T)Z1-DNY/*d`XsA'_*"m*TWNn$dT/)0(`9Nl#9:,aQ);916M^
%k,+64U8DV7[g06nkYI8QYd_Su::kf<_8&t.]U>0/H`:P$las#8HVA;eOe"2Q78*5iYA(ST'W40Nd&:bu'_0cgipM*oc!/L%b.RD&
%Q)De<Pr^cYH9(Dt,SN;Rm;^lL..<Q@3[$?TK!L&G1]@jF*S*)0UEfj\a]W,e[VH,pEF&Bc<D4g!FpVf'GN0nPY6;NV""j'qEOZ;#
%]S,]i(G]<jpl+hgPa)?WI-o8KQ(uGL%6gdZ^$b'B+Ddo=rQKr#%c3+"3r<N[*Yu.'l6Z?:n+uJ^/6^sL,2ffXH`eS!dn&ND!G]Ru
%TL+$`OPcQ]Fr$+O%9KHT%>Vo0n-3e3*/ML5%aO09A;Kr#6Ii-XdcT/4R\e>$l0?0\#HO-;;m.n[3eMQ?Wn=!Gg"ilRe3l7;P7S:q
%GZm,0C;Ih>'(%l&I;)t+qU2)_/T7mJ;BiHk%u<V;1;nh'BNJ47'">:nDjRpaE%.Zmm;3TPIbXlPaoeENk)5ar;)S[n[>"65XfcRP
%b3u=U;W:kD6;e[SWG*hdf2W.T0UV]W8]h5^7Jjfl/-$[@HWrRhV"^``P;&imhk<&UCJd^PQEM\L6RRcG>4'67jPLIglan`==YCl9
%1J7WEl^9emOSaQ\Jt.@C-'!Mk=0Hc),T;GuVLt.gpq+gaKC2auZHB['RT\W7`h./'r]7&3apAT.=3e`Oo>bDF><SbL'^D+c;+b)o
%"h?F37mDsLmC(#Q8N<Ir@@h44?%9QT2]/4%>.n(eC:1B#X48H;&tTuP)$eLd\*.nF:(eR!oJVN!pGZc.(I,<N7f-VA>(2Jg`Wler
%mu\sH?2R6mpfg^THd"[bhFFrd`puO;+@@[&<$n7QhgAgo,FMtk_SiDeeUh+E&l^Fnl'ItN-41[])Lf3'@X:nP'>dPO*8pua3,G#X
%O@Bd=lfcdC`N<IZHV:L\qJ2(t&]aDf6+Xs#@JNY5Z?hQL,-;,>#Z>A$86cP+d?p$n()BWDgOjp6m1S#HP<e>0E/F1(]__NH&'CR=
%l*J2`+uua^okar+BVrc:'$b1RQO,%!rb<#:)t1fb-.+!sN:%.PFZ371Nh=RAh9jQ'hMa&nB9X\>>@NN.f2q:>o?j.,45*>]pFC2:
%*c;`c>>>Jdg7uN3^M``GTG2ddAo`GBm>&Z;&lWL/g>c5nmWB&[_k[$B*/k+98#qiW'0DHC@33GNd2j=U*'8IcfWjPt?p'2AB[<Uu
%mA1nIqH%XCB>fl)4"Adm@?Y!O.0/BBgAM;#`\?;TVsV=jV$LgBlHrpc[\Z-=n]K57;D%*G?c:@D-l<Kce:G6U?g)O\)'Cd'A.6,8
%S>HOf`5^'<GRXE4Sl%T+o:iPNrF,B`nU>Ri/;3d(`mY":r=OuY.#$KN_#,%VrZ1[94&j&I_GK,d&%c<XB@N":XP"2^UFZ$4N.))Q
%.g<+;+1>^QW\J';[%NrF20BLt-prHh@appL,]52eeLWA@E<:JHNJ^tPc&bkh7M%FMkg[qtX^8Yd9-.=;,<9QJL]jNtP.siW:0Ohs
%X;f#$iM_$(=dgA(WDu/r(D%'_b7Uc#AZJ5^dKnipE7EA^BsS>R^Adt@jo%Qt/Q@EG4(Hd8A(/:kW98"6Y);%51>XWaDbT5Oa<b9'
%/>s&53Z;KI6Hhd-Z<b7)@i=<>!t'Cr4ho)APMGpUMiD97hAU>X7kE816,0d_GjC&*6lG`r[CrHI$=ZmV9%%mjge=!UG5\*Z5:c\p
%PF`.f*VZGoi4Oi,/4pc=@k&G*L&o#c#6S7l2a2"T-9F+K'W6^k7AT*LD$b]n,F'ag/<lih3;Eeo']4`>+K"D;''d,B.n4PPf)Iql
%'10$/`&mLAdK]n7/ocZlrd:@"p4Ki_-Qsb?.f[h5r=j"rhEmofCsV-d5Q5n;7rSb$U!etcWp#H'A,5IeBo))3j!aoERpD,h]#na!
%Sq@?KeR=rE2)q=i.SC,BU0T<7Q8%dE]<AS@80oG)]P\aH@8b(7#VEPLcjk5mE+EW(M1p]VkHM)J%i:!oh>YpH+;p'077HE+`1pHW
%+YITX2Ad*-"XCIf.F,QqmdFSlfQre'LS3>K(_q!u,ZVf[==gqo/YJ@u<=2&`[g?ODM9,7.=a.o7GZ_.U--3f\R\<"XU.i`WD'E2Z
%%SkiG/FUBdVm"XE.^cM`"l6/5mEn6GY[l7#Np:^!$_7hML'?GNOLc^&X6=C5kqf#?C)JJ@"[/51?#Ic)JB)&K;m@Xk[=@rAE?H!#
%^M*KU*g=;aLbNj+R/IClJdjed0(1&dVg.QM%e3E6/!6tKFgZs)oe[jDW6(X;\06^&OEB0f)mcm9UMY+0003eAo:%CohEC[XR,'OS
%gEN')$^F8K+Kc.>nu.@2&ARfE`ESV^f_&M)j0Ld6>Q(mS%AQSQK_6H[@`d02MAtAlBU`<u7DVfM\2`rs]>*MLE.2AIle09mMQUk.
%6;=PF=V!\+mA$p_E-`&R5?s_-5p'8JA6*C\>Ke1R0:d8!ii^5H2B!6/"nA^#iZ@"2XhW34N`W$4B";[uLqWJ(7m@rm[UYpWRJ:tS
%8bhVZ-sP<'MUpuCq;Vk%c5C[=[oLlbD7Jgfd1-O.F<sW$gE]eC"q!Q;436YhLu(do(9nu;P0IJ0Id244:u$SElRTX36@eY2KnQTp
%Z&6h]HBp-d#X1qOE>Ffj*q@d:eg\oc9::=<HVq8RZ&^^_K_K0MP/bO2e\?+'2(*@:XJhe$D8Lo3VK>(,5>8F+UPXtWr'5_"PtLV6
%9ht(Ad=,AGY`0<A9A7S]<7N,UAjG%4Z99%aW?'u%QU+86Auk;KOV*==GgTb\%%;VeU_@7m;(+UUf$QK5TAt0e?.f2RiFKX>\gm#L
%Io7t,8K!-rqUn^-::O-S\B"@bhIUf00Dl8+mf@-H7S1Nn.R/*bgA4Kg_L(kN!F*!9\3Qj\\*SB.T8tcnj*#q3kE:r,U5:";)h<HJ
%#j!pK%SMDBnUcO#4\?6l.L4p""SV3qdS"Ve,H@WD:"K$c_46t5k1r>e`G$Hrf%t,ba>Y8P@Q3bDLp![8#!Y2kZg9G*[-DkQ@I8uL
%n_n(A`?"P4[LLNNh7/:u[1450/bQYpMH.(@8:`B)b,8mdc[_jr^^Ihg[]j#M(Rk\8USO:`]YRmr<p`4C+'Xfp(;"F*q\jj_rSbl9
%Fd>e)VhbfsE>g9"0=d2`To#1`mcgAL)8<'VA[2P&/ukR;@e\oHKS<h(=!j\2*8fRlo'Uu0'Aj<.q#^.3PAbd4hr/E3]fTTZ#8tkl
%/#$l2@8bI[oQ9j`]QFqM;q+P;%H`\6O=r;3F9n!IKO<]?UY_Opn?`/3=1SPH.u!J;2d]_5$ub-2a;=X)C&qC;=fI0t;_#-GkCNri
%XK7IpTaD)d#S,<H4dmKgQ>KqVmqqA&2+7lm"IdVfje7Q.B4VuWQ633W`+52aPG?-i7'_$(gKkPE%`+bu8VnIq<)aJXNp;e:L*ri-
%0-1!gn&nBpj^'m*4dN@G+[SBXA]oftZ`,`g)th=._\;*K?;u\;7S%tb)BYo4O"'n=@lte8_dJ[*GDSNFYLW0dekJM@=j,-6K?>kh
%bcJaNW8a>U<J*C-pf]MIOG`kAC2cUH2.1j7)UIsH[GVs?Ws5E7H]QpV[7m@2f*u.N:^!tej!&n7GjF,4ECK->eKJ9\e9>4\5#An6
%HplT/nSqp:JS']S%d;GDoWLE8+G*S1[VuN,`l$cGE(H^!qJ1BSH5`0O&BgN0=X0do3>bJ-?^Ib%(t):JF:mj8&_rX!L.1qaoR#Wj
%Re)6OT3A^0+i*ssB/HrPA;j])GU_o%]gM8&Dhb"dR0gVnp\NMLZu9$QX&h=5D\ruo_+>='2j%nD3g2bP\JoK.4\C!LFD0S#LIfIo
%efAp&?)2].eT\dZ$KF@\-dD#Bd0eWfNU"jbr9+SoA&c'/Jbap:,XH\#r!A\IAZPS04_u[YVbu<K4Sb`hhDFcJI">oPm:./krI+&K
%R.MGre\^C7>D<I#RkdkLlX`m)]EoH&leS-jO/'>H9>*"J\&0Q&:g9FZbj2LTn2tN=9iY3t*B(aPWhj77_^:7W`),2e+,BRk5\/!#
%VNP@K<X/1a.76$N+,jFg7R*PkSsoJVM>l>1=DjLt20g2(=n==X]S0`aKH5(tCiXIXYfSRp1C;am1i/f&:MXn:afM>:9ucD(am_E0
%ZH.=F4ETP(g^KA-^u#OaBO1rA[He#.4'NEDgmo>CNL\q7k@aK+fXG9Hc<h0Z$G4Q#:Ym57G/d(88/O9\nBs,!]l3jpomBsEl`^3q
%!AA=AKst.N=AFjbB#[q1K'.m7,3O`4)Q-@:Lj!Q)I=JP*rB-D0f[dRMY,@3Mr]GPQ?P'G=`T]\pWS;`=GhXb,!PP*69+5aB2"FVA
%C?.<u2Yf@Knr=.Ni!lA][l]s@2O&C2169QPEYke^$*C/X&NSJ'L;@!)DkitL\5oFaAs%lS<>01+DU:&C:GlS,+7.CT*K`J)[\b'g
%/R>+Fk1t#tX`(5)Yq4+ZP`T`n%8h44ERl!qA9Cg,f.g<c@,-u*W=#mU6LgCWLAeDfO=$OfUXa*"O\!@!Fb5sS/opXJea^Pr3B\\9
%#2!J\A[>cJ$c>4r$'&lUPQ2c6oNX<9Z7Bi/M$efR)kRH(bJkW/COtP,[PdHVCZuJF2t)d!QORimnHn*>bsZ7tPTX&YEQ;0=Jrq0'
%'p;jse.-r-B%Xh6psHVf80hX!3l+Hd(V0D6lM*SG2Q1:/YPYkH-Hp6k/rXi)Y^Gcaos&<E(9=8L>U7#`W%5]d:[G?*r)$f20%.#,
%Fba7"([2rdp\i:XOlLHfc_WF+?4`<hEl2!>K"KkSZUj%eIk#*`A*qX<CI,I$_RO`?Q_H+\47qt<cf;ta<Rn^=EIenpB@U"@*-"hW
%+S`:Z2hE/fR.X.NO=r9qnX78d=W7ui5*(W<nu`f,g#*ej^Y+>Lq#[mapNtCALX^gU%TX:FPA$.SW5H*B*3kSY0F@:+j(5PTCs7@S
%\%mG]6ch"oNj4[!YRC8rhUh'sBcPXI"n0,p<_g9TZ^Y<0(38Vel1`?=U2DUYo7.GDSt=d9$G2D5TT5,slU?*N4^'e$C2*ALrp4S)
%GOTtt>f[_KK`'r/U9<Qf>ZXIor4SfQ>19fb(`Ql)&+h0!a&ZP/Q/j8.Tce,%f!fXd)FH#4YO1;p;8d2IO;bu"I"t3fV?*srA4,5u
%c<Xj7J5F/jQgj@aI/%asnIN3_>#/4Uc`W'kFe-U+-Dio`[u`86OV?/*ofJZUo?n9E7b7KbqK!EmI'mPcMfXI)o=D4FSI)Ksp$<8q
%!k-^)*:.Ko@B9C!Oh%d7DD.r&n[cHMh?*\j(U?$KZPU9;2ML&H'QEKZAn4YbF`F7fpO_#J>JT.j!l[]L2=]l6Y9D?hLe\OhqS<Q_
%<Q;U"=*etAQdnC?k@cmRF$k7WK^l*/*1kKrW85r^A?bgiNW:k@Mc%p8*;P;\-4N9#k7A.]fg$h,Y^u;K1qUK%W3>_)^BJKAO$>Ih
%9bp5$FiuYu^66\EEOSiebT&KR+uRlZA@=DA!.NV&%u-sRJ3R'i)adK37/<s[<H8;jXRdq"IZtF?B%t^Z20gf[JT!$3E3&BbG*+L;
%,)Q+<W7UB.9p=7\>^APmr%T2j0Q`s9;S%9JB%-WBoV1X,gEkss0sN`Wc8MUFJ`N;)%MRo#,50rRQ]kZ4`+Cf)Q,i`f:?+a+V?HC?
%Z<XiUb#?Vb93%aS[ucsmB<=XH/eL]Nf9Z2Dl%"r7W<o2$cX5'o_U@e0m]eIhmFi,oRCB,MhtjqrT%%:&cZm>TC6M&j4=t%dY#VjU
%U'3"g&iscP]NWL#2nVWQXma<$V>.)'R8\3'6e"fTQ*q+Md&mm-MWZ+uGIN;DbW_Fsk.OL$OX8PL6glFIlHZuaHp]h!:#>:ki&2uV
%Y;<cIf//`Q$Q%,6\q*\0nuS$E.#W6TB6920BrIAfqK"#3FRJ3t?^XnpFFtV>+q:m;NP(uhjU@@%k7Ft>a)*%C2Ms6RnO?gu1?l]j
%Q%KhOT#HA).gJk3hHI!$)V)bA1"k:'9DLB@RE0%PB"d`.XdgNfapGJX]EUM@pf:,qD<2]d>PV*?]NX&j?Fg=9DHf-2(i%s:El<`t
%S%%s.%%m2]BIcSh8XT#SCF_'I1[`=b?4^pmo*l(,)4uuQ<Y!9G4)B7-l3l7Xg"a^VU90s4\WtX$RToT7l.K*tic=_Om29[PM..+<
%^:eWKnuL.j4/RBk=TVh^q6`^Pb--qCG"*Ql1I>$oZSZ*++CG[Th'U3prV'ssnLf#^$h;aX>3i+?S+u9IohMrR`!ZU7+TWW;e?:QI
%fI:((?^FeUs'nJ*iTJEI'd7QH6T8Y[-`]@)cWt%SY=nC4dN%hi.7Pm_Lr?DQ\sh`gm-7<03\_k4\@3M%`$=:C69Ko:+N+@Fhd)ic
%HH1@j.UdW53Uei->(VADi\>CO6\ALpRbm3_d+<$Fp3%55Xe&DElGncK(%B0o1%qB&PL1lX2E1O'N2jl.@e6"a(M'l@J[s+hB&>sT
%^16$dnYhe3Pg(6Nh1ChR*6R@.k&"Cg6+O8B,\mpNrB0BUA",VK^=b<BRm!4j'VDqh1ZFo&Naf="EqPFP'+1(pgV+50R.iX=k^tWp
%c-<t0i"BsRhs@&??&m?FO(WC3s.m7i-<H)*nA;A>9?]<t"2DSm!N3:u><O.Ddh?C64g-6fkRS'if7.:EM*6R,j+m]E]=MV$1$ij\
%e:_g35E+SS:hlsm:]rG4mq'+o0UU&^+RGLS-6_3.hqjNNT]"?fSN[`\f(;'Y<j^$_U'<I*3\8GD^TkXC+pcYO'A?.t-4AF$@YHJB
%a/l8_f#.Q+UOH'7P_c#'A:oUj2',tr%ubT\@(HWLrr5*@+Sd.U6TUAhGi*Uj431Lr2\Z-Db2^YnfPeh-NK1GX8AO'd7"PZ:XIQDA
%l$.m0X9TlSa/E"sW<8B,K]YN<J.7s%gsD+Vl0<t!oPRc?@5\/X"YW5<99h$l<*0#$R`bCNXc_"[_/(C<#P^!+#B/%^R,@FR'cpr9
%Qft9%]i.di7Hat'p]5W#m6LFi-<eG[YihAgP!HV4D1I>]CKPT?eMpa-7[VOXN@u`<iRWJ&Ho+YZp9[1u&Mb!A9*!1;Itpc*%hq`t
%:KL&<]U85hco;2PHt"Do<AhO5BqQGSQRb,]iTPBMlG,`.0ur6,MKGUqHX?+:f"n<Nas^<-Q%*2s2-ED395t:BUbu)HU4rgeeFE(:
%FAE%9UZ+<];Yai(AY$.f[hJSJ/VAn/'NJpeTcFlp_)#\?aB3%a;,Uut\f,8.P57AMm[uT2^9rE.OA@m3^/H#+na'\k]tB'RfNX&M
%a\J04hIGQ#q6!I1gn0&3m)P`^7!:>9OJ:sPCP.T'lHeemK8G&#1l,6,_`p@NrnD(5>_=5+GsR<'2>FkYgnT3cEdpBQK[3N`k"mLj
%#D7@2eb(lV>=W,-:\cX%N;d+TD_V<B89dP5PoIM)mMe](2?3H1:'$uN<:2G&&Gd(.E/@K2DX[#qj0b&1kkA`^n%(T@R9^KmY?U=U
%s5$T?g=VLPT(i[S-%(_n\]9M8dbf#);;4/p-\tTdi)@?_32:uPB,m&:)N:&W7_Q<OP^D"ZlaK)c?UpH9cVZ=f)4'K_P,Q]AgcoGn
%;(t>T.=XoKUPD&50CtAIm#rumk5Xi+rHEthZg5[3GVW%W='X?pP*hl=WF0MF;ar*$5<G=a0E9]OS5GV\*q*)#'rjlgYr=Yi]tn(j
%;4h.2)0H78YpL=?>[uS/>j,fj1C/!chNr/Z9DH!7hhX&J&q8RkicV=t<&9_GJtF&7o)]TUeb!nJ%,U$F$arMjLKu,o`>=aB/=fPg
%;MhRk:t]+,(T8RWgEpG<O#FVtq/>JAMpu/&G@#)$&\GGIm-H.aR1Oe]9/%-?#E#&P^4"H-XY&oRpnP,hGED)oOdV#J*,paf;3;C%
%8ajOE^RkBD-2<LNg2cK:l,'R+JNY_G]4tR6B1J/+l$]qq>Erqm5_Z4$`l\02j+IIj>.m$5Jq!Y[.K?N?3:u-&LOlno9Th:>UaEEi
%pd/UY4,M-LKCYts$-@+D&kVSF<U5SQ#_sRfiC$f\M5ouAYj8;mV0]dT.GH$]T7r4j[rN6)Q';m[L7cX\&$m`O?*&uNU.hr+FajrZ
%#a3Gc2T435&.\i9;Aeg,8HT,&hE2j+K7<'tC&C+W#TmH?$,6G@+thhhXj7m-H57e`UYf)_cI^J^V6tt+EK\)=",-!n9?RPQC+C6b
%<bI`O!YH(1I;@^#K$Yh5,Y9EkH4X%-3itj+D^a!c/2GYTUdY-f>(f0h_(OW=qfk#omXn2-eKWpg$sT+JMVS9T#a^H:U<NBk>YP''
%2#jX6!_44t<=9;XD\n9m]HSZN_=AXiqSf4&#jBd>G5]:@HI8OQ3tB^<L4Mhh9)Nl3dW*$Cl.^jdc_3p2BfAfd.-7U2%e=ddNVGs$
%p+Eam\r`"Vkt&=%6]&CC)XLEoXAuZrCG*H6Uhbu+k88G<qXb$!mfHWT!=Zs/!$G6-8YWA\\Z!*p59(Hrd9$(F!F&F,",^A]fZ0d!
%T!c;J%tdTZ%l>`YJ%qZ_6.0E79-^<WZph)hnMt;KSh3q!Z_*2OpT<_SMRW.-9i-Krp"H7LANL5_Vd<CAE"`5W1K0ar3htQadk;EU
%!F.Qugk?)`b\sUT)C<"4Td]l=Kb8:53*quf&<?:"Vu4s]TbGB[:)^liEH'Z?`DaA^qIKgN/!sK<6/:f5e$FrWLtZun.Hobl2r=KZ
%T+1a!,4Uh^pFCJi8gcH]q=_q4/`%D#81R#rAr*_%@=18GRa<^iP;kJE[QQTV)XI54k7G,gkYfdHX_tfJHUo+.?/e`0U_#/8"6QEi
%Q;@X#>`+0+%31kr*G5i7p%pQ1!nOu:3]JUf[HZ.sA%1[u$NiU4R&s'5BD_WFFTGgBp?XenM)c&gGc>FVJ"[^d+9j2e%!.YGe!4OD
%f]m^*&K$Jog];I,s"o?LR$8'E@2\lmAb"cBCpEWP;bMfNr7mO-k\!DTVD*r$*WM@Pjb-XWC>FC<"na&699"8E[*!\0Mrls@B4BZ8
%Z!8s"kf63?J,Rt\:B@*)Z%n[d9VDZfDJZI'N6p?958rSWHtN18<&cX+&XufAXdH8ZA-(_7]KoY>p!t*15XD.BYfDQHPG+Y.cp.34
%L)(KEd4O4kHWKgh2Lnc7p/RGUFdZL#01&:klOV!DlIoDjCC#0aph91q!SNXkC&"l?!o@@$",9/m`KU\XEZ31j=LHLZr9pkH`es38
%2413Cfb"'\gW@5k>+Zf=o2,cXXGpbC&*m,XZ.H.W0?@rZds=`dpMEY$Hcbct_8jf,Ol'2L]9c!c*,1k%:t'c)R0DR)PE'!rb5clo
%$/:!]0sQ$iYSD.,R3G!^64WPl&SdncD$+r;TJlJd=eVW/Re%Z!>3!MfD`rnZhr^t7YE'k(g>OUa2m6<AB>nHlD/06[E9E!/'%L*&
%;]86eJ;R&b]%5mGd6$G<]i,%XYge,mHF:!_rKsN]6CX0LB)GPP9r<,N9f]mM#5pY9)#qBbLc7;#WfFW.;#uLrEg#3A-YaUkf;(;V
%_dR>,N#1d)9+\8/IH;sga>Xcq%c*gJ(WOi<kG0eU-u]\.jJ*SB8Fe\2Z_Nlr,\mmg`bikknZ[/q5.<d-c:GYR:ao_SaOa&C1%9n:
%j5gY#i,1DXEVk%3XE/8i#.j3UJ.eO"f)p6)J<XJ04,82MK#6O=B,$A^Z'C\9Zf@iVTscImJcNH\Sd&+IkZ:HDNc[W`N9eANrLM<]
%D11pJF01MrCL80nEBk`A=rspFbfZaC0b,#*Hdc.`hEW+EG_YjuP+O@'5#k]e&=.1^fBdEioEtJnMNj=N#j<U9&*C?UH:jeZ)AW*J
%aZ-2c[\(IH.haa(<M<4"#Q@[+PQBC2<n1<,!$bJ+<dKK4E6.c^=p)Ln0SiFc#@87Qe_;"MKlM<2cL?NbBYU864nfO0!oIp@\9u2f
%\''98hEc)@R`<V>&Pi1'\%,'S$eJa6l!&r_6q`.unMS]00hu`mF`(oO_"f3i\-]-9:qsFthBJgGaKL.\qr/`f;8tZj]_u(Ts(5LC
%;i<2e]A#nL$6*i?"8RKjQfaQ@*23T+%RDMO=_RudY%95;"i/_8n(PL#Vo:tqI!l+R?]^m5CD[:@R66nDIf$*&mc\:N-!G0^8fSkX
%%Yd,k+s_uDM(e]XEgUYU`Iqb=Tt@Qsm+=Z/730]oHGQl!2E9c[KS09D).g&aHp0%^C?4Sp+>gpGl5,!`]Yg'Bb;YI[A$P)GFqsRb
%E6J/P*@a\0M"DGPR?EUW>/VOLaNR-_frrX<',o;WIZUp52$QO>L#]Ii;AHUEjep_;(;OJhB:a32Cj.0$-eJsdeHq'];\3c1#rPpV
%,Ot]p#cbQLmPYK`EHp\M]Yteph#](:RTjsZ<KgUi%H2LZ=t\*5aWNkLPHZ,a<:gN=HDq?Jb3hs_/js4#B'fqD9Lh3V9@JeKEE-"V
%X'5Os]oX-t*CYe&Y<';-+:J<p*_fn,W%?!t<!nT$aeVF'7)TMG<W,Zu1VY2mWTEB-)9,QU<'Eje^*U2oOe)u@abPlFP@'!sn1c`>
%qKfulTMr]0^%J$'5@V7)NCCG-/alRC;PFFerG8Z87UA4.*/]crG"W?gQ;IfUL1-(nK(c#tdEaoiabj@g7gN\S.?-sW$kl`+r.+Wa
%MqahW`R%gfs1,7m@29!PPgat&&R*4J,i32N2\mPbcI&Z%bm.cl76;CB8XD=&o]nW$l>(UCmel&][-o@UrRgurTjI`iL1MTJX;/=)
%/PEpWJL%XIjioEN1XGpK[B]XZOInL3NIPAm2jB"c/%SF6+qcC[#21Ub&X$S7=V17:_ZKuJ:+js"q$Q'$+WIHMSVkJgpb&V?CoAcK
%GZFaFPj#^oO\.ig/r>`YHrNP/Pkc/K/e#Dc2\+C;WBk>`W_P?\?^.2'Dpn.[rr:k[pOlU'2nN]7ib0%)lrNUHDhXYj>f(,XW_.+V
%Cqm,sGpYi(ZE?Rjfjkmc)i.tAaY%2$&<3>=7<CnDYddrKGg..#R';8N($Y_!D2K:$6*c"OjJ-Kj*D[4<2)mX.H#+NNF;BicRtr;m
%jk8Jn8ML,BN041$/][s4niAF@&I^F0kD]nM7N3^j+G5`[2"(-7Zrto0gD-.7erb\Mqpdi"j%Sf/nRt(2DICn2p\oO'DIEX+,19cc
%lG+Us9Z#EhMiJ=,j0:aEf5WU+kfgp]rUQ$SN.P+&^hqjd53p.h:)LM8%)F#7>.&2H4em!c;&Ccgcl`YLp]qa`-0<c'YcE8;AZ7G'
%Sc-\TO'PgcB=F-C6$SokUIo4N\Clq/A5;u%ImJ\knXG3YC\inurPT#O9DF+eppk!D:g0CGj"n9]4'D-9kABW*+=kUGO,nqC3P"Ol
%nlM&;[fi3elC)['QM_c"Y'CQ'kdSf'DP2&rC_h]LbsKJVB;C)r(+;C!I"^6dJV4mi2RI2X-k@ZIinj49q\&0U6V_qr[=bF7ZD+_W
%mmjRF7LCi\Ji%_a5R[mV1>4@no4ts_NtQ@I):$rXn(WP?K!l$gBh%@]N+OmFI(MW[dTq.5+G_oa6Ka@pibZY[WVuE/H^YOK+W7(k
%2JmkUdbZn!(t\NEIj7$9cN"L!EmG"K$nHdDThVlFFpTH3V=6+HkiKUocJJDHBVt3.oUW:D&H%.:gp\"^eVG9kI><PTCWN.H*$r,h
%3eNjC_G%hH,*`OnD<-I<PDdp+HbQ_ED?GD&D0lbCUPKT#WV*#IA.:9ISjcW#"059:QhTB!\ikCU,0Lkb*`UW"I;MC@Og1Gnk.TgW
%X]>@I7p0q6(]$(TF`Rjr;#6,."B!;=ImIdE*tgDmmgI:-\kDgMdbFaBLUZ5l#kuHF8YtW611;Kr'rH81@qJ(m)gYfdVLCE0B9X[c
%424bnY=L+l<ce"9%K1,,20Nc!:D1r$8U(I^BVB]s%OZ\"kg<<$)uA77N,2s7q]Q8YPU)'9J-\0Ko=NQGs'&4MgTL8[rTkq+>XM*"
%)0H7!nEtcQ]nN<V16/su4k_-F,eJRO\@$K^A9_(K5\<!JFZAJ(#lSQf:Af/:/HJA'IfJ"\\A2GoEY'6OgViN]5q3(f(do)0'^i_#
%UEnb8b_%S&Q":MheN[+l6?oh1cU9u:HM9iZ:(ki#8Q\-A4(jg#r&mB3+o>"'pW1aF[8uR*PAiu__Q2!+cB4eaj%sX^$Y`9_pWb(T
%d6jOG3k'<lqi!@/q[N5O;<f/n32:uTkEa[t1s[RuSf_6]OSe1T5GP,Z0#8;dG??IET'?s2e%#T$_0:,!IF`;rI=L]mjb8/,PdZVK
%O3i=T63@,"<Jeo_Kmn306sos"h&Ab.I':j:1VV5^NfrVuO3k#FJ(f'P`,*>*rHm;J-bAd=ahgpK^&*bOKYR6$Nt%srKCLAdN2E_n
%Di$^LL$5^9phkCo+81QBFru[%1Wg=?VT1MpG10qW@TKPf/9r*NB9X^Pkn/CBa8]s/'3q&+5[>juA&E&_/cgnXDi>s3dE3paUsH^n
%`,"s^OAH_KNt&hacF:8')MFIJh&rIFRO+KOXhfL\">elr0i?n:VVio5a]lsToft*5gic:i%mF6KTfq1,=0h>(LR$(k2of<?^HCh5
%d.VM3+=C:Z(*7LSeZe#Mcp;#"rYE'=^#OS>/RZ1m8P))<Hcjr.G!>+2,ktSq6HH]%a%E:mJfL0,b,%KTljt8Am:,0g*[%C=e="4h
%+)c>6mUu"cdsM&@P3Bcgn/0]]r(2i*,OaWm!u,:+E`'G3S"l"p"'ss,3kU40Zhr^CXXgd(O28`iG^iJ:DJI3Ucjkqla,7aK6[k`<
%-2qc`mZh1gTcaPucZSq^Qe*,Q8YnW&fkjCqq`7*Tb-7CaF.KujI,<-t:b:+C3m5cl8YEUH6*MJ?/$<\SZGCZHmQ"*%qeFGW\Nh2N
%(gj7,f+ao<5&(>GYhRup1r7op;"ickE8]uC#8mYZBhl^F?DF8oq3i?>EEmh9Vr.&.5ifAl(atF]\Ljcgm^?Z1-qXGOs#m.O9Il[4
%F<F&ek$Z9dQAfu]N+-e,cWfdhgTo=UmQ18,_626-RO?`b*d'HOhCi#c,Nn3%;=e"[3:MesmKl7Ik/j<@Nl%+m:+[*f<p!WXT/:3[
%fBK;uIO-KGcOMKmH%*D5)d86Wb%H]U)cK_V`ll&nIM!K`&d73Y(hG.<d/<(s]J;.B^N!$an0.)*)aM04K^U%t;9C3s"q%]"/B4WA
%0Tr)@>i9"sBi514o$c`r[4$lDCC'.Oj&G90<C6rKRuebBF<Zu)(@c0W/e+?KKK0UKDXoHCct>g+Jl?VrZXn71$hj:uN[C\'TkCt$
%_(HRgoB\6RJ8^9h?m-?=q;bG?)[p4jJeW''%^iMmEfN0^hDDc/h)ZQB7u5^&%1lEn]/VTl/B<N.(Q![8@3:6>SO<XQTm,,F(871>
%S8X)LcP891&RQ9$]ohEU"(EBt'?3`+Z*En*#fRp"k\dXM"GTQ69eK,,KHP*=3K[[[AR@3VlS/O]Bb&:KjUeiai6lHK>9.t]P;4fT
%O-o2m#`+4u-#4VSct]+=@>1a<6jbrAZ]Yc]0Zfd='Jea9meN/K2]i,@W-*"#EerFkE9ZN%Ad;Z@r.isM=Fm_L;P3%,C[*gZ:+:hN
%L.OAUEh,[0el7a9`*9S"."g\WJpmR&:_aRZYGP@6TZ(fL[qG52M%\^j@LIduCGlod('30So'J&H5MPg^E*:Z<%itNe=%#BVA^[]c
%=ACY-$RH&.Cd>*hM"m`U/-/26N[27G-^:DXpL44sEI$LX:X_(``i?USYPFL-k9E,2"]8s`\182MV'/^]U-[+Hi.n.lT@uIjpA)-"
%p+8TOCe6tsI]FoiA$tY2WEX;Q:smO)/4^qf[)5WL&t")_/r]1X'%\XI:i7u:TXoe\%g5e@8!/,XN%9jTi6dhk'EM@;3QVmNP+"R]
%gU3RTk?:T3EYW/3cj837>;8Yr2$Ou[WI8[Hn20cAcdm/$;09W:/4f<TMN5A%(1E/fkW6&\ObbYP)/+,O;+sJW!`p>>U,=tC#%<he
%RI+-ZRp+!t`C`D,E'LZ9j55TS[XH^0h`B>N\=etC4p^hMPXaDXoi[Z4#IgGkL8M<H7'phO)a%j0j@e0sD169Npu-WMJ37%7*1J_G
%gMpYLK?IbU]b_p.[eM[kq;N1Bl2&uVJOfM4qDQ78WL>@\:Wfnc%AT34*2u8<et5u=Bl\X)S74ngEO-t>[A#;e9GbCl<^(U/4,t=j
%jl#WC\]5O.+bc/I<qmC4730"p2EQaE'<sol^+/*m:]ktY>RV815GleJ6]1&0>X@D'55KD`;fbC(lY$OCECdV,M[L0?eE=iJ'dSNR
%-8CqCW7QbCmZcmHe?`!8o!>:;.d-M"m+B_SfUaPqiD9pnD(f/e84Ygb/>/5*XH,)tg=c%jkOH-p/sq''0Def;o)P@'qnW&m_90B1
%J'@?O'Q#?D_=uX">W)4,H`k<5d74.c;l\oNmu4;,*ZH72JdD!F2^W!mc_Rg#Eh[!_N+6Ao$52CH0TlD%f9O+F#`a`;on<S_RJh@G
%(;u)>ROEoueaS[Ykk=@[9OD.'l3-lAn,D\,CLfW@IgJb2aL4Ki;\f-$Fn4sFZX#5PFqiIe@s\b^_/CF]i^[29=E,cSLC%L8l.$^I
%h6.PGB)R!hqscHr1hl3#&5M3U<0]:p#cAeNCG7NOe3Ut7m6ct/NM+#87SKY=(:=@/]s4hP#pX0+_%EG[]d3'346drL8Ok8tA>)#W
%;2K'P8d)/ZUN[EMg#nfYlL2+c<n,Q0B[3HJ3TsBkH%s^Q__RpWj7JDnbek!SK*fGgH_5Ot+RSpSNJ[(oEu$VK5Tjm$5Yju_g2.Nm
%&QE*G+V1Ufjb.d+dMH&TBld,*cPsrRYQa.WO^r)U(+,O)-<tQ"q5LBZQ"-%""h.D@ha!V^qY_5[^DsaI$g(V5>2OH71=sRp6Ef6m
%+L4r"V9DH.K\=q_qZuDtK*0mTI-+(VeGU7\Qh$A7kg4^CH2r:tr!iqm\@:@bVrWfR(S:63$TNcS@?FH#d&4mqH3C4F(`;&M`"hpD
%FjZ9YR*r=CM/>W1XFeq<P^\Z;o'-iOK<?`(F9L4AL#+RhQHM1k_MS0fQkE#C?,.&"%%"3Q>o'?mQ1#52i*3_h2\F;l0UtG[$buGj
%Si<+#NnFlDIm3U5P[CH5Q$5\h!S@>W>,OQBaYV4QKh6/1.E!NU69dQsjG&IWOY#-L(:bTOQ[:7,=bp[9eB)`#[0@,S=N^>F<r13.
%(:bSUcKe!a,W?ugPI$A)-#u@Em+s0%dCFNg+9u3Qk!:>/6U^%<0_rh,W0u-RS8HK)103#>#Sb9F<lM$Id1&Z?jp,NooqF>iBH%"C
%Q.h=q9i<qlH"W1Ro<dN'_7eGH[qIN9,0TijIGWctZQZ$\@Hd%@#k#?[Dun9E>3@bRe-m`S4k-cS-pgu`LKY'tG$[Nb][J4^V`e/5
%[oRb`Og(t#pWRE/ZZC#1PO#l9GZJM[-`nPdDo?k/a9nb9<M-JpA2Vl*<,m6rFd4L=f2rJ"E`POo-`\E%+aLGE/6YDq(9\m6QD)tW
%4?>lZ]g0SL[MHQ3)!2CIp0^_/oT-t-LlTH"o0/!?KdJ$G>D&-l:foWEIPd&:&-@d0\?@2+m/0q7/5<W8FtQP3TjP8h6>X`)',qQF
%M%+`1.C%i?p&03dgDe1gYd9DugNFROTD#V*WoKnL\^tks<^bOCnZ,8qerha5DY;K5jT-5(s/+r:H4XX.EfVc3+DTNUV4``Nh0A[\
%XD$2-<ek[UpNp7Pk`N0e@YM`*6s;U.]c25@,]7J@U_W:Q%7MN(7A2lsc'^lW(::L8kYcAVo5;5;qod6&PZ4qM9fKh6k$S>hi]9V;
%CagsdSjkT4A9iK*B65qZ3ugClAg>HLl1^3A9b?fd9-Au`&*9;KCF-l#QVj'IjL.8Y?Am66*'r0D:G!o)W,%6q6s%Q=0`8N=nH!6M
%8O2e%(0S#W"K\uF/Z;#npVHZ58<`[hM'L*1L!l!EJj+cVE-?QQ_Q=%`[^E`3>]%)Y9H^Nl(pps%2j=G5A.=h#'dRX%W?]L82Mqjl
%)VG%RdQ_$Zr#^5:PQ\UK,Igt4?=Y/ra3V3Y8qdr=GrE#WPfTf1V)^jq4+Xh/P,u&J]MW!&.$>0TMR,L&lSr,1;]J*QXJ8EO([$3k
%Fd@2Uf#i2Ae7"IuNa>6Jke9,qBFOE=/9Gcl,]7LqXHi7a.+hIq@mlqVLN;4H3OB6MUJ&B$?s>hef(WBb1R@F:c=55c'ctO9VY;jX
%hB9"*)"_Ti%k+!f`0e-.r\==to"6&A;IO_+KPbA,N[%&D=N(E3;;?0cFX9*rMlkaWb>-(@K2CZEgN2:p:1P"?Z/ZeV`8dM+<$5uj
%GH``SafHUSEA'esZ#!^E@_ndL'R/Ufo]]0%#B)RR,9+T1\PZ&a1lA+Ok#F:6R%\(*1MB641k)MaW8(TMqZ=\iVmJZIDf_4=N.,Iu
%6oKoaE_FS<f1r(XrKoc$1Q!>Qpc3#_.>u]-G9dL29DA-feM8ap'Jnf>0qm&EVF@=>nU'O!qGN[K&K6@F'.ln5pmYSI1'ea@@7NP@
%_V,Z1reDei;3i?]R5U7`\O!l548NB-'>5Z]d78gO"CaVGlf?DGT`D\]IbB(Qd*I_Y>-.\/9/r\!iNMVZr>l3lefG8qFDnBjH8+/D
%ImIAWet?!$N,s6Ak_4J/oPt0m8N<Iti@d@'?K1)XaJcG^\E!PQ?"d4bqUs83fL(D)J0X9m2etdHQ@/K$8VE#^Y0T[]Ph4&E_-)W&
%,%H`_D-[/+%fua<!Y"uLV(+909Cr-WR2F3)!%4`O7*_,YZVU`V.I1]qK$>Do%<?BH4TI@B7:&g9C-cpE@<nU/`YJJ(\B37Z/5]."
%;\^C-6h+&phI"_f/OeW\]`NM)e,b_IXaei8A#u2b&o'-E4)RNigHAD5IaYjM--dZOQV^P`<425WP:YO?pRpK>^\'kJQ$/;60q"(!
%<ML8e'in*>#t+Y0S=FnnOA(HN$EN^%b7t5`&'QXSOEen"1AH-"809=TM/2W.=7#NQ\",6c%J/ZT5Nlt;WXk+WBPPEE=+Z_?6]e.M
%VMUcq.hOCoRAgugmIUHnP%c7+,2k+LHJa3Vc&#e.26/!4AXA"#=1?<`=FYOYPLkD2[MFbTWX-4&##`0]\2OoD<FX<.gG^C!cl\5<
%EnA8^BNq$f6GX"Q1CE`1lTfcI0QHm]KhjtGMca?a()8Dn1K8ss!,4,B+Lr^%UrAr\b`\[i;stGRc)o6k(.=?'4Um,P6DPt`ED:]G
%0p>M1rk/feEQ9Sg9Lir>IcA9i:ALuM\Y=\G@m9drN+2H:7YPUnj/SoUYZ0PW;\'&)Z-Kc$og"G<-XE2i:EZLAeSQ@bP`Afelr*>G
%Zh@9;laLl&MGm>0GcRmI"XW*V]][fn&7)[;D:T:Ae@:6Z2ra^l1$VgJYS&U5%n=Mk"E2XS/&^Z;1AWF`rHj^^$5MpRUPABhPVqAm
%gFl/$ND1R^akSLQq+%(->)BPni.;k_>I.I_>Zok.'#cJg6_kd/\Y%X4D?#p;$?JGT+\G>[O['"o&lBlM*@pQu5sZI^4';E5#dnu?
%I8/EL-:(/*&Y."gHYWUb':,1u6R;-::G\#iD&^Z%$T6l"f<*"$!eM>k>Z=8mC?ac4bTZnZfI@ir^.dNb_eFQFn0Zj1-b_Xr1pstO
%RV]FP&It1mmebG24T,'$o'27\as=>V)>M"QT]K1COSh[H,7YFMY!_i/Si_MQ4-_MiAoEX4@ij.+!RIO)V-C^2.Z@XOg4gW43*jsH
%FhfYQ\]],h[QAT&Pem-kVKQB7`80q1<k=OADX3#[Keq6"^l\qP?%a%e%"e+S654nj27+MsMF#eF4-Z#\!H6P0];P=FftcHJ]"(Dj
%LdH:\eE=dUp;Qj=iq"F&[Tq=d&JsRH@4Ye`3o\]sQ@f`.MUEC(Y[<:@:eRC#SjS-s=Dibt<^[XE`\Uoe0+!LMII7l&(fdC=Kjp&\
%87d.[m?WRS:7<""UF.l)ej^*klm.t!9>a+O5GK/YI2WG#I],(L^3#lt?0C@4m99FsNe^Z=P`Xo>_K6nJ$RKYiFq\Ug3@hp[!^7Pg
%<Pou<7[1um,N(q)\[4eC"P]n[k[`<*@@NBHk`B>c*Aj;HIa)GhO>3RON8U8>2<%EQ4Y]Q:Vn?$O>Fd"U7GKIC<m3A+K^[(c3E&KC
%1k_ce8]+>G*]6VQCLIGF6h;JKWYgITNuFHs"d(A4g>^OFS(#)Lr;!EB"k:[H^jh.iFr2I_fhmo,(nZ>CqFSagP8-\ZrHKpcJ5M/l
%.>m/]d;,YQq^%o&QOO$]_Fm68FB!Kd1GHu7CkcgEkr/*T1":`J:,r5!`Ts9>JO!Eh9NO,?RL:NSVJXo[]Zb!p>=qp?TH7[r7KEjA
%SV#rCUX,+LqX^N@*:fn\BVh&M2>UP/V7Q#E/i*h`8lF.O&KnZe@0'T87aRi.8DZ2.!S,YN5Z\2S#4!d#Ik@!5?%Uqn$kU-`(1&K=
%9%R`ee;!B0\1^gbKSEJA\e^.'%bS70^DQDS/oF\VAM3BgKIa7XRLGT@K]ZU@4O>@-h1`Z`MaA/IN<kHu5t=ip6S*Fs&DFBGD;\>A
%P(GJJ8uMe^.7T"R=(35TXS$NI/.ukRCE5Ht;s->_B^VZYgXo*<QOluW<*oo1LE;2[=6%5bn(l<bMDNU,9^;BaeGWn#]jHso\6QI>
%7%EP:nIS>K0qbNsoW%2mQ)1MF/mp`Cp3">i(M/D"-FK8"+sDN=);28_L^RAR<K44B+_U8:j3P-@CM?<FD3kG32[OAd5oC#;]>H's
%fR\`^@[N+#3bqmI%[)9.D4'Bg+@4lD4oK'=AGa_Z9$3"(6dmRuKdTkhjZZOK$]q1$*W,H,Ta+[gP:3m'n+dSE*C\>!nY7m^?'a4k
%FCF0oLe<gnjoGUXio1M638tt?os:j'eK'g9=D#P29<"hIb>LBoN=raPf=F@5c>EF&&Pr#rI9AJlDtQE'2CZ3^fXLrRC7t'd#LE^7
%<Gq=9/,[nu'occn<9r(uh72<B2aS%QGLf>R.6GY_]2P40LLLmMIf8G,a#W;<%SVs,-H'gANa-HH4Du!*,<VPPWt.XH5kt=O-FRFm
%%/#OI,,Q$D0;0piZ>&4&a&(nkGm4G;d[X-)9ht=YGN$#k2Y+!7\_Y9I,4\!]giWa_VAP.ih7@l]`9)\PXZ*f;>RhcdPDdthR1d\;
%g%5INU"dGI$qmtbQ4>&a>;;=fj,%YHNlB>>L=:X"gV+iUK7O!2>/sNj>al7FPi)O4=n@Ki[j6fMXTpXMSr9GnAhpbZCNIOY8[sa+
%E?k2qKi_5(pd5WO.\'m<dl]9hm;EHsW+5.UWGI"Qh8$'6=X+b-n?#=pN*KKdP&sG=-`(LAFAG*iEqI9ZFHPH-I@EGNn!:ISTKQ^p
%[9sdr'$cN3Kp"kMf+dF*o&5$='qA-U\/`W4g4rJc\"3UXaBmT0F=fL!+otFO^>setZ$p0U<[mL!2:bPPfFb,:2aHLF:f[`nR!b/e
%,#\3JV1jn?WA0,#S>?</<4#N+HChU91+VLI&k$3eb;-l!+V#U)p];^7[8L-uNi7IRnA$"p>%LpdIk5FE;+^&lW\TJ%QM@DH4V[PT
%NYB1YTTsEX@MAQ:n[!TrEmLQK_ini_S`111p5L^F*\=GI/'/)T9DDjh3pKbifY'BTqPcY,jdhMM@#d;G<B+tKC)K>L>(WnY6P36G
%Kl(o\_8UCjgjNd(Z_P+UZ]"T&J*ZCa[iR+1Q.)[tm_K]Gi[Gl\hdY0X4\%.ZOl4Eq`6">J_(aa6Jh1Y2X"!jsfJ@if=e%k7Y+nWU
%0@$r9na8',@ae]SdEKkl0Z9a/fjgbf"\C'D9!5!"g.&tWA/+$>ki-RZHtYA\$cgb[pAQ2i2:hFLNZ]C&Ke<O7h!2nk^PA=qH3u%*
%Ci1,Ti[Bd`om^+1#Q;M$6Fn`[fl-`>Op0E2M8]!T-Y-YZG#DHRU0Br!m,B#EAdP$n\[^1FGA#50"Qa@E^?c##/ZX_"34JUcCAOqT
%gH[;$QTB*::.ZjGr`$o\M/]"e8cG@sZ-_?%@0H*S/9E?(i`6TH*SpE!>8VK(T4!t-HX.2pYbN:0@DgmJ5#Y+k).a-F"\e3P&L1S[
%Gg.V:`tPF+@jWoO'n<U?_(d6T0;sR[0>.64X[dT7e&j+S?HDXFXA!eqHc_Th#FlWrR00=IKK"\qM<=Z5AjNUYn8)h4lr0u)<QT!J
%+PAg1&Y`HgJ;&G1'Y309FU;]F,lG&!NU*$HDG0GkS4[BpQI9`=(_Hgl&3$Oi6_C,YRQjA#K2F&S[5EGS<.P&fk%-s/r*9o_3mZ_1
%SgF8#I#`71[sP6Q%!s6a=6N&]'afl4JDYc^MeA8"fL<IKpdLD#VP,5g5u_Qp8AM!aciG/gpG<kjFX=$goJqf"Y5U0%=.^]XlSN4C
%\RK8Ri-(I>nSJKl.+%-f(OPd'FZNjhF"L"*.*S`!+BkJ!nlg,ABCrGq7;&;!TJo]Y=6nnK&tRd)!G=q!TCQcC<Fb]A@$s3$2BT46
%R"KHSh.?;s2BBB>Uj_BI)nI,T4GCKO@fD'p'E@m-g#F&lCYjmPB6A@3$lDb+<Ck0in&,\2aP.VoB([9a6%&j<HJ/:JOg4]*r>H2B
%lCo;Il"5JJ(NT4QGbhbWppN8j8"0lukq;"TIL3Ln(I#=/RZN90O5Df><S=3#FAjU-($N*BAMMIJ4Kq#KeRegKL0]-"oh0bJi#+l)
%,#,2KqEI,pQMrj2kG<7i>.&W<U7Pd(L$$Ztk\X\iM/Kn-JDE*d>Ls4%n]BHj,_d0K.ln]XG7u<.E6Y;$5M&ToH5#h9$\Gq4@%6A\
%b0C=e]N,W-Y$Si[PhO8H^;2XtY2:%[<h]9cN.,'s&jA-ZS/GNpi1r;.$Q[T*`A2/p3C^9u)n]5DOuU?9\SV];$l:PEn!VO:O!8[2
%_q&':@GJB1Y,@2Rrk*RVMdI,qc6LR=S@.(F_pYr/.K(%*]j][:/9o0iZcF"R^+&78job$p"%&'o\-!N2fKM,%]:qqDFm.BM?hBX-
%KI0a#ZSB!S#+QHU+Y?!52okdMJfW\(8?dWOBAt\a7+X0OHR67?:RB20]>8M=eDs:=ipcq(Gk1HA=*L$Y,IrZqg%4ql]j<ma'/fV3
%auCU>:E1mGVTX:`2RodEmLNq*#a[6t?1eB!=ds4@Jms5gNP`tWc`)9Vr8EtH73"\#0^Hj\0dL$?*5Vh$U?$IC9Z>-HE>%hf;h0N/
%AQ68g&j$?>"rdli^i4ME.D9I]n7_?Hq,9,M/,bL>m-$>kM">;`$$"HT56`%U3WD@N*HE5Gl>]PlC_U-u"sTV%Qr$Sgi^&rZ+K+b`
%p,g3c[UPBfP7`JZ6]<.Hd[,e90UgL45up9YFT<d<aG)]*a9Ktjjt+o%3b_B56%J?JG=jag/a0m()LSiCe<TFpM4R#e)b_aa2oSjG
%IWcanq'-L/?mc3tE*QDrS0;FYAW0`=/fF<NY]C"RpZj>'1a.YE0V^_F!I&Gt]o3X<o(&!S@=u["$Fhq-AesJ?-;/%m;^gPm"LFpm
%6GC:MoLQ_M-r%>Jr/C%J<!]FTGd.Q+!sLm1nC#5%D>:mqdc5E'-$YV^N/M%?d[G8>UR]jo`\&\&lXS?TDGsp"BS'Bsb;c9CiQK]4
%5hTr5q0k<,"^I,GnN4=_f6*X6Kdh^Me>Oh2Ad7#<'jbgY_lSZ<jc")FC`u@%nLV*tBA_T.9T0MbY'QH-*Ho:3J[6Y2$/`fhb,X/S
%Xh+R7^!YE@FZ858F&qMP?qG0uEeGUA/01:G,:mcdWmikp[Eu5'`6e<j[7eQZ4#/L"9)jO#8&j0Q;MrmeR!N:*NBgQjfVh;.BX:cU
%*WoLj56aZ6,U/d$bt=#na'p,6BH%CN2#rl[XYUF4"!)lajLqjkkG-i]3>VjUFBcKQDW8pg0UVW):<W(mZhgS0*BRR$Ec!GN6Z>Pp
%5:"s"qLUpNN,*cKNr3][^;):1?Himerb&!JOgcW`dft:[(nhDH/<.=,,KrLRT"K;a,km8H.p9KXmZVH5IM_q8@;p0iZmuO[!g=0;
%MeGsUJ*>G:*"*'88tFnd%O8W$[R!6o^a/"0=a]>dF!o)e^^G_jVr'QE1<pl:Yrh9'+Db&Jet9:1Xj`qSd6E8DI'qpPC=L6_hcS%Q
%f#CpMp[2#";4C&MaE:]>i>jbRA-e[p'ap=KTuN!I1%\,k0Sq>pk3!q5Cleq1@$.iI(C[c:1&3gh)9't_8*eBKEKPoolOLP$0%)iR
%me]eO(&r?u3mPM-jCVZ0':*_*D>gl\eIC8f`o4)JAh4R7BeSQVe%UO(N^]"hc_Cre&kU_61_)0-?)2].h02(ukfU`"CtDq/X4$.X
%1eh`<$%F#c]ri53+^\Un+s(f96>K'2egc9A2>2*,Q!b6N6GC6>X8d@G3QC]V%SI&ICOJ!f5@>=;j3-+$^tK@Y!"-u\V[:80OJ&OM
%pID8!N=nqUN^@M8_iqJ[gF'_SIId0U=1R.1[V6"#ma;q1>>,*o._i2qP"Q"U8q`,>0i8:O!3e*Nd9ot,Zm?t:Cfo3*&,A6%FVmk-
%N6nI,^YlnHD-7pIrDS/?E7=0!?qFJ'#A2T%:gW2o-9iRo2CUK$O.r`Gh+XVtn,g5%NY.HHCY'/8=<KNK?,K/sg*cEG%(M>cj3@W<
%T8Q=\kIm-59%DK"A&!+PZuuF4g/0<-9L]!Mk,tgdQe]*b)uLf'Mnt.<PA[d3C-C94%Knsd8FdgVSajX[4Z6e3_>c]&Fcf_tjk,Z?
%nCqPlIAN*1QVq*8bB(HMC%])ejoNB6r@';/XLb1=or7eS[9nmkE_=orUn$j'2bC-`ojIP0@72OkohA['ft,)ij;FOb)%\7IVYgJ7
%fk(a:-Lq/?WeEPkGRl%uYUI_JIt28&^B#?V)G]iY><<Nff3TgE-Ljpo_)';'i6K'eoG*`qB*KGc,(^DLJU*T4^Gqr&;(B$'\CV$C
%lg%t:/KS=IP+[M&Qe<RM=XOCqi7!M1-FH*6$Q=m3a]TQc,abQ,)Y`H0=Wk^V;V0$J(4-Dbgt$HJ#;V(+.F0\hLqj4OSpH&e88L?r
%0'^l0DV_D&p`n"Qcu:%6+/Or=Kk_me9`Lk_C^KX(&jJ5"f*OkKQY'Yt\QLg)JL*u9+Z:$+o]a"X=(TS6\:;QFn]X1+911*$'d>8o
%%.+Z/.R0IH'RBXL@VVr)gP1.dP91lR,d*YAil#00S[BsfHn]72XX:l0_aGW1^\AR+ZGmcY>scj'16oohRBh*N9:RC$j-]<<Qg@Yo
%'no5,(J9SIJC.%%g=1>6#l<r,?.25sES!+o#&PhZJ\Bam=A]D,j4:,qI]H1+!<\iL@I3<eZl\/1[]gI.BO\Gn1aTC,X!F!!eM.PN
%Ofsqd^Fu!0$r'>TO/#jI,6*;*1egguiHo2Nc_`+VYX+2m!f:B"^"&QS'MFVYB4LH=4EY's@.--#c'ldL4n*hk@KDs]=Fa*Y_iWB4
%3$kh[9h?nO-Ad<Jc;4t>&?P7ZCglSAC*"(,l004d+I3Q^Ygp"69b9t0PVDWMl@KjVCSL2FLk2Q1ORSut%_dUMqQ?GX%:@Vlbd5.H
%0SZGA`i)F:@DS?GG.0Bes&qS<@6laK\,E&F9sYnB0N[ZC?'4&1"XDg$8BS1],OVuh[XPIm,YZY?<1XitHnot*>G4s"pC)T\Q/INN
%(pRaX9W+uI7E*lT9uA*:77d?g)NDt;%U-n"-k(\?\[4tdKL7F*Kn5q^UC(B_du$F3Z7]0]7B-MK"H.Q5AkT!O06jaLM4fmU/&LZ?
%;P`(q2hd8cVA5IdL#Co94t^UD?5>],OYe2;Up-M^f=$Vg<+AM<[7aCYUM1=JJ[h),6W:,B;J[N0\ME`6U<F9'<:#RL88>l)[+#]=
%<e#1-"NcNOSgSJ84HM0`TZso%:0mD0Cb:]m\qC2$@cKr9\j[QJqlWA#%0esOgF&tP.:W+Y[WtRj>\oTKEUfQn![D!'[RNP6MqCYB
%@IZ(Hp_5*j,h":P(%,-@/uT*<I^U^j7keUTST[>[%;Q:O#F:/k?KZ?+MSBgVSn&Xp20r`G3O?A\:/,N>riG:O*A,djrS%Jh_`\Lk
%4uO:mA-('@Z@plV738$sXH__=rGLk4`8E+[-A^`"eU8o=HXM)KPru%!KrSFI$#,Z>jf-rt?0".MYgg+cmr(r,<h&b&UNHr+mAf^Q
%Ee#8Z6'$cN_I5]$4`D)s;g1q/Pe$C+dj@(3ZmWL&qE_k?Cbk=M!m09H#-I:f@R;/'K99e9Sq6U>JZldiP1j?LD`Y"F-,/WIqtVT9
%$r8eSGEu0N8\0X7%;?CkV5U\K`B<eLno5tBQ,$:*:_nTbfaDt.QBksbZjsc]\LCFM95Q([`"K_N,fdHo=J5&ibXW!)&A<qYD(&i$
%#mq!(i3D0m%q'\3AVG52S#nU%RNeY=#?bUeglD?8]8_5DFMji#@[4%eXc?;&$.3.$E=%N\CHu*fJiQB@E'Ag]HIj%b`+QD"9MR%i
%0deM>Gh!o[EVaN`CG)hQmu&bfOi3a%(ZA7B<u9T4iF^+_/p016Mtu%KGgk*r03&Qt6"865b3+#K.W)MqeDY4H"SM99%g<J_6oX?V
%TdLSXOn4"\(`"b=kA<:I;rhRujB8o^,4WBl;34pl"1UCKKHcc9B":4XT`o`%6p=[<&U1>O>sM:iZko5QP3:mX?H3=^XVrgJ^$#8I
%>i+)W5E-5(HF,ZR-'M@,LJPjk_DDZhH)lTbGfn!cOhT4DOd(sl[q.W+%P(\P3Wo=bk`n5np[r%20*lh]/c@+PK]GM+WlcTrU+qN,
%bF+`&P(;g[60T^>e`$]V;'L[MWs]OjaN!!$4be=jMqgE;VueR1s,fN<qc8[jEc/cc,27!(a@5-/a]:_X`=utCkVl"h'6T^?3i#cn
%+?p]a@hZ"?C#WsgV>RQoqsgTFF$CH3+nXk1G3hJd37s:/r*4/pKGpo56oUJT1^ak&3GRLU"Lg)c.]Y3oSN%=W=k10-!CiXnoI\Ql
%+bBOm7mEBJ@p+f^Tpd;o#qLO:LRU;L7@OPE-YHG6Gd<YH<ESmKN(S,V(Wo1TI&J#ueIQ1KX!Lj^Y,$0pl^mfc\5Iph0$n>L8[C^=
%qCMM2&>#kqHBY&\P1'LCqMqrYb0TVrQ<hsL^$Z3AGbMq"/t[6-n.C/(A8nMcXt8j6n)N3Bj9BZ#;+qLC-%18DM!k2fQH6A+-;)B6
%.CVN04a.[YHVo++H>.P+9B'FNMo!t.gd6Q^ZjN*T2q>;h2UkdgNmTq#7J;_Cq;Y"UaTO6<4B55,I+9G_26SR"8b<;X%b6J0mL+Y)
%CZ>h,H/3[i?Bki)()L?(Ek*)iXf=(-$$$h>%!rf`TA8rb[OY]Po+$=@d=@S84mB^p&fZ>(T76V5ZTT=ag9HGt'd5Cklh_;B=;k+L
%reT?Q_&9TE$')<E><>=7j4r8n/$&Ck\t=K?2qYBZ3ktI^p]'s-++F+cGFs?`X'bhrrV]M6s8'>lIY5YTq"/c@c!+%+0botB(Cd.V
%4@=hQm,Y-lo";X.?>MjdbS1bPe>;"[Nhh/0k5QN89APBuPj=B/8$fN25;cHl+:GkP;f;(Qc"<S9ZHN4SaNL;,&ldh@.^T5^+I[a.
%"F/>T.-RT];=D0V#Y7hWr.`Kc1N?Iq1JA-m&5d6:$#U[(1JtBaXfe!'bmm,1,?m+ihpJ/""N\.$^pL"`;b(h')tLo58$H$B.(d[L
%!4r[BBYQW]Bk)dKD-&]]N*DX):7/!Bhskc>2bdKi8=C-M4#cBj`9B+fh$lV.!m%Hc%CX$4dgr<I0Yl02(PjbM/]H7nJ^n=8+ctt8
%?q<2@Hm/dKhrr-7,SY)E)cq4cQp)6&\XSm:/B\R>:p$^GMj>[,[/TXE/D'559QS-X5/>Yoa)prdANp<L9`VgMjKL3:cB?)]oWkOo
%XT`MX"Tj#6>Dt#BWg*?,V.t`o;:R5(AP2rtRhQa0I5C.n'#cl"bIB"4JH"lWAsjA^%emiEN2mG"\"jiK(sND]S#!_*"O._#>u.4m
%L>\\&$S=*7Z3Psid@:b/GU.lN/=05[0WNuQ:@'[eA[nk-NR?>aSHc]bS=Ph5E#S*6k33M8%jWl'q8>cmIR[>Bba-=QR#P[`fEI5r
%J5ET*"c>LCe2L)dimNm$b/7n]ft#mOQ_j9IEAH9[pds&mqf.$t^D*SeLtV0+k*DcrV)hbRV:le'?%6P@-,9G>E:1\_(GM9f6HsDg
%'Z\4_IIe5>bkK"1DCr1pF.[V;%(r`[Hnr%_"aCsL_?tX?fl!.=6[-;H87\VmgM&qd8F$ipV9Q);^)k6(rj3^ml0MtE6G%`;f&Pm-
%fk<N(2Eq2:^)i]:Y;5C4efus1k'UpSpC$r,*hi0\CH\diKG87_fGX!PN3oMULmU#'csr>8Q?YP:A&j%%O%?ofa-E@aOYN:76@D!0
%`NdQthn1$-ctgoQ[e)t%Zl\i2Qf.PX0J,Cn?Oq*XO,-hBQf.+["Y!$Ale0a@@29*(a9*D&8M[ZsRi.Zm,>!XX\h<l6%O)96IMrV"
%*Y3q^SUEa?-:\\fdSdf8/.f_QHD+%eF$dciJ>4>\QI:uZnR5ehirm\L!#6qAF+(Yjl$0-TRV2V/IQTlH]=5<7-)X`P5(Zn$.)i_J
%3B"itV?@EnJB\P>W1OSod<@`t:'ZH>^ZqdI1ln,5:3o/JSR>4\H/]'^=Ek=jm`#9)&$$mF#DAm3Mn>Q_iWB7.mLmj*N*"I_Hn=o?
%?u4*nUOGH>`Neg0F$:b/!_'bW\`khT4l_3GPBr^-Oe30ndnt(jp9$HAgM0AYBtcmV^Skaoh_h7W7td!h.BD<<X-.Zu[;[NpU[\A/
%7)#[HOEqglg\tBq6WF(r=I@T'Jclob,9?:7fG6>"#b8q.`8Oto5(<_SJsJ4XPl9RNBlOpP)-:f\^ar&t7Cg^\FD,0PNX^\nRm!%5
%.#uS%iq.A1DfFX"8FmK,O*'UTTah(+>=Rs9R]OD,B@0sT>FR5I!\]=-l-mC%N7VsLaXL;ENreQn<4$1ahmM!AmI3,:q]\^s<?D+\
%Q#G;baKQ(DI\K2+4()BjUgbC_c/YqnD6r>#2V=scLm"$!mlW7tN+Ou[F<d:.f^ob!p'&/X4S$`T2G]KGDfP1bNb`1367o,.K_b[c
%G?mtup3"/?@Y)F[\d2gs@NmM3-)l_3Kf5#)Qnai)6Q?I5*78erYrhhLoU^JG?IDm0iH;b9k4:\[O7$R.A[jgto1oYJbfepU'Fk?[
%%3_CsP';Y%K4eljcQSF>\VX>8^9=>S`An:#Hr[dj[VWo#6#,,aj@mZI5^U7R[.F?ln@RD6G=%4b)!5.40ntIFo!@([?`Q4S1$?&3
%0O[(1T;.mt,TBoO.0g7SF[!YI#i?&V3aIdV")DLggasnFE04&lEG6:XT_@^Vg2G;dXgdij&1e,D@YA9hAGueuZhfPmQFc56$1]-5
%G'(bJVi-hp@a:eq$2C2+@_9\gR<.?6>F7?89l@Pfjtq-A)&V-o";tiZ<P]tm#[E1oKSCLRf<O5p@+nW']nb][bZZ1oC:j=B=DYEp
%QGC,:V0n#UK^u-SoMA3M$0KguS[:ST#X4O3INbt"9pd7F,L5*#UO)j,,7>%[(2bi()\%q/73rRCq0M<H[k:iSc!b+-eS50ejltrH
%p]12hj]g4#>FQrL`^_\d7i[fQ(W3AW=sZ^9Ub7*c`P?RT$0q!\V@HDm>Xn+JA_GDbif<Mb,AmhMY)(.$*'*eX^'R\?e<r%*3Rh!J
%%\Gd7<NkFa,k:pKOl++W^d/1NTMr$(T6`rf.u0Pj4\S7=]co&B)FBk'Tr1)8qSd33"PU?KUi;UO\K/>:TI)]Si:)R*7'JXE6lo_[
%EZ4U_U=cGHLJPTMQ0Bud^P@Zehbm//0(-^P)D/kcE0o"k6Rh:]J\@RJI"m`K!C,,OF-!P=0Jmi4qU^,nZ$!GoISVAu5XTdHI:PD7
%3sm@4W-Z:I&Unq`O(+Ib4ZfraeY@R&/fHQ`7.Sj+hSRa%(Pk2h0^kuR8mq-0%b!0<rr>Q+f+&n^)EO/*3`pA_4.S(O+f^ZiFSVL2
%1D(<6fumql">f5)^O)29o\jlmRk82T-bM!2^,-HO0GKuKKP<BK6/X!k6o+.&PTlK4Bt:=uG$%(o0HgV6KCq3RKd&s=L>lAIciOH^
%\m7m,X7I:h'bLTc]4=3ifR::?r&dQSBYuC\Kq*bB"S9,iArIXBoLu;db_#p8$E&ECacS$`(5Y+#Ki::BX!>'+bp=BWTZGdPRo/?h
%&tFTbNgkupr,8lM(:]3"0GRt5fMY67noD``=pW[)*se=<1%[WZOp.\qC:%s$^fh*[)5:7We<sj!@kcMS:HR]D2(6i#Z9(3?P-U,^
%guip7>M^Fnd02F$o55_dPCh4jBg3^<%.bN2#;)#VZk%/a$<^s+ZFlYH(e+h*m2Qk"&ST:b'>3Rn7o0*;e6*4_h!t`]Pe`Y?#Op+*
%GOO@0nR=k)WEl&@C]3pe3$(F_UR^LU+Mi$ni_a?Cb#$7K>&260+#(mVrbeKS(d?"r]LgM<\mp59F;3e;htM)k@rOH?7sXmfW!p9+
%6S#6%p5F$%jNqh3k\GqK)\S8<fRr#`?F><dITi^So2<#tSM#Ia<U]Z<S?+>qN2B`\o"-?U4)Nm2c()[#"0CIG"WEJ4*C^D20,=l!
%>^+3W),XW5(q6_-`>a9-,0?N\$G9EGgH2H9E%5fZX2Q;oh,,/o2;@&JVCW@MQ5u/+8arMf;'DI8Y:@^7c:td90>bRT",:be]-/$"
%E(UOQ`'.?grd\#A\])l47Q=9FTO;(6da;d]B5VO9GoFi\9D2S-\jID1.rWJg#_Ped1crT($f(,^n?gu70--3j0P39jLn6t`0qiGK
%48opCO1kb#K&U-73tc2\J5sjLpT>T`^^-lD5D:t][JJ8+o$h`^^hp]\+>.-^emu`Gj1ZY'7./J`ZJ_BGG`(9fjQCrGVoTm74MZ&V
%15#<T+#l+P#<5?8"lV,X&mSm">Hjlu*"7ni0E\0mf*h"H4:!e%;/Z?4Bo0u@jYO<DP_oYa8,gqaqb#'KISY4p<$!6L80067mp^?Y
%;hQs8ARr:6B1%3Hd(uXq=_!%nTi0d\VMWRNe-CUr+l9V8e;%q.2uW96,H,AD$hAB\)N#?.h7#1i+klari\"H"s'WfO/Lc8(V#s3Y
%60P2"L',Ebc*,=.[McrHr.I"[j5U8X.H<$u=NsV#'\9)Y,2AHlk\1pSh`+Dm:h7ZDQAM1e07Msgg+G>X6uf1A'57_hRUu\%[4inT
%HX`V6$&VP3d:uquW]6PCPpBkj3VXth3Me0QJ:/&*0<2T90EF!Gp-)7@qPc(q`#d!$`*\ae96Nb'dsP#Y0MJB;Q(XQ</Gq1q;K0CQ
%qgl1]iUK4$#"E!@6m)r<UUkckA`N'E=dl<D#::DI9c(pk'p_2\opW1+(s`nV"$Fos5_S**&X=$4)Aqe\/Ylm2VJsbXai8n'0m1P:
%'TO[NfW=JA^oA#>2D4h$!@H#@JVZG(nbT5#dAkYPDWqnhhR<"pJmi7<-*?P,$o8JpK5T9O6Z?F]1ACi>>u9@#n_sEdhACB.=q/^D
%r1]m$'noYJFQjJo^%V).G[!:B)U!A,hZcDmn=/$eI"VT]_s47n3kUF5<m,rU[/ut*.t1tAW3@Bo^+SXbNS\dP`A$;fWhGWr4W6l$
%&U5*>LGY`cXCLUZlG$LM0nN91g%cd8%knT`!HK5goadolEtZOOU\(muT&A3,cD/9Bj8hH3&*S.RHYrMj[bG,Va9*E/:"sNglZ(Z0
%_aL)Q4M[Xl?A'4+78!_+VajV->!Z8>B(/53Jr;PiGr\"&]P;^PgquM_$7)aincUaqZr%n&Y`*j'gqlbG\q)`3N*Y*D')/SuLo$M9
%.V^iE"?#-^Kupao_^a+k<\:r/]5#,$/i]-m1QX"/0@gIV&9[E.]p5(E=0lV-WG4;'!2E'rpJ(-bP:2IMgl.bn9EK,DU,D_R8EL^#
%Sd,[pS1bi'&d2p7YV7dFQCJ&%+;;l7.Ka_[NgX3"X5l@3,"CA.lQccE;`!CK.$5JO\f(C0+Du3W(DPEP/-Eb`3At[g[B0os9V8`'
%OFZE9*cB4JC*#f!U%iRC\$Af+(mIUXR@uh\qNH+f'6-45XF.AFQg1.cD:Nm`JjLS$cS%<CAb.gYSi!<o<R4P+d7r>",j#P3/&DjB
%hR#=%_r?]Z[Tqg"5qp?^BsI3dPT&tfec\)%'<ImOGi9g2Me_O1>u<L3E4TD%A8h4K5dtQl=<upSf1PBO&S>>TDS?gY^!1`9<Age3
%::"P*GZ2jXXf;nqVV'sKjn7RaRQ$WhSn3MEf@)9hju*"H+5,t\COCn=:3GGEM'`-tc"c)#`pbLq-jlK50f+YK^dR6BiBLV2)l:K0
%r.&:\')Lra"![:9'9U$U(P;hSKsm\0G.!U"+YHtQ9HAQW%a.D+89R6gY/C#@b>VarrEFbSllB;B#q/b8?9K1&l)d4EPc:DBqhJ<p
%ll@W':%,toQSprL9PkN;Tr&-pWNDP\-lI]/fsbJ>pY^)!UqsRt.ZA`>XhlV`]iCHG6Qc;9hG%o%51*@"*:%3JmCDIdE2'haHc5'"
%0P^Hj5]M2DlhYjeb)mnl[-$$9_dEcs7#k+g9mj.O?D::!2Ygk4N5J>/IYQN9IkV!R[dfa6VFXH>^Q+IfCj++&ZUkkoE3:E54U;"V
%%*hA+%)>/?-UUPE?j.hu6SpA.<82Abjr]RESfd?MfsD3"J2Z670E-\bJqVL09[NTFC1A+4&Pl=]as?`1Bg`o.3tj)/OPRuba2_f6
%3hBc+O+R^dn2m!WS%skT,<&(]eDl^.RUKf]7e6UMc_^eYC#-up%=nO\6f<NBUJ@R+P,4nCp9kKKMs")'p8gH9U$4bI$sR&g/j2o:
%e]b(?+=s\FZR$.t^"q5X/V0S[mSIfX"&lM7#SX(3Xts5_;,CM5Gc\dq(pKE128Ef17.2^k-*WoDBaG3P,ut28C<V;=k%2?+EtoGh
%>-nEA5U5.=/:kUVaZ*"G7m8oEZ=d4WR&VGYG#KNt]EO,86Ybceg#G&EOC$$C-nXBuPl7VDr#5[+VSE1)DUkuTbS#0052WJOqk;+C
%:"][\VN2Cl"pNLahmX6dWhWZVNmg,NJX#H!Bpt[4.2$0>^M.,$LO&WZnLf9B`D3(4=oiME^]B+T<5XF,,N,b'7cMkL'Ud430j#aD
%R.ZI_&0,qcZha\!4P72rCpeOOCJ#,5="=*$%`*P6*EI4B)&DhG_:7QK*;,i#__,[E'@\R[$gQP=2(X>d&J!$LrkuKj50uOrM*^j=
%_)s0bh?+`r[\,qrac<Ob59s(gia0e^P:%ObE)cD;-'(`pI"A_o1bR-(j2Q=o"-84;dsQi5!X0r_gWj0)5<6G#kL`jDie3*Y!66%c
%M6Wk$I1)*Q%e,9`DI&Km8DRp#`\mpBQVWZZDD4eL.!N.C[j$di/8J.uZK9^Q`=j\II[A"U2MA,]ROfL.R]I8cT4/i9e?Va&'`Lub
%[^f$HqM/MqgYDWeAip3.Ci`hX0K`as@[fZj`ci<,6kV1C<:.7;9jp0VMD>t%*3_FFN*:$R;tRD^4/ZR+D!'2^%E!2#8<7W-aRbRL
%9OP-M!M2U$GAHYM"\]+?H-+_,>^&mYp^poUb3<r`P2'41#u3;%&Mp8k:`j*mK!Of7]"g65P(r6e1,nAEkq(O=Au#bkp_@0NYE`$k
%jRD;L'&:&AGGm<D%jOl0%?!5lJ;M@Xpg$P!)5@&Pda$adiA`8Zk@Qa@p`Lak0G,1$894rY,O;pJiT$[or/._VFH/0S";?p4R$[M[
%bpkN-JlgaW54"8B\W\%_7<h1O5/0`;OU%80N9T!caNlF:<7Z1ZnH&NP_64->G+/.k6lo_[EaL>YXGg!k8^ARt8Cl&:$AA!ar/.`>
%N,a(TH%:a-LtPm!R\l?sQ1s"?=+Zi&&UAn&]h7/$p!RV?3pR*$7@;11OU!l>qBIFSJ+Nl(EfQT'J:qXY1YOs^e!+ZpF3AlX_:Mfo
%`L[BnQVm]5iq4oX9=EAAgCrf>>/i5<:3Z'>\4Sl$M*8CZS"*hlA5FgD6O>L#Fe:7(s*C=o\!c;=W-]HrR3ggS"Rg+VBD+C#>0Yi8
%4O-P_B;7T*P_Vc=&W,r2*;M5<EhuNUjCXG;$'32Q,Wik\rZEDS,qD<>Z5&Tg/YQ8mS;?Qr\m&hQqf?U$aYUD&$%nRr.%aT7$gi21
%Df&FX$OmpMgu1&.7a@]Un3niVKZ5EKZu3dX[ZhF0g!-OA12NEQ5h,c.!XIf`(YGS(F'u.gO0`fhKB19*Ca02D?MutU"Il0"p_"pa
%a0.CtHqB7D5?3T#qq*H\qX>5Z+AWK`jt.LNcGaa.3:C0$'\D1'\f8a"X)"a"':&(=#nP2p9"t7%\1QWI>7d>Q*)>7ZRc;QS"!6[u
%ffSnsbt`NAPNY-f1_4E.OG^`2NCfVk,u.._<^65$gF+:MGEhP++FR[Qc,^Hpc4s&)K]S8*;f%&K`^jt6Bd!^a#)NM<#J3BH%d[dC
%hYFUQs-!INP/rt7H5E%m`#ceC,"O7?XJn6*dBO.JK=MGuXRLBs5V^9lSu<:A$kPOh-),H_f/^?tT$s\hq_6:)Mf?ThkBN_gF1ADW
%WBX6T$5,A?Nig&_/rkPb%pS-D]QS14nHmLL'b?4X5NA\n@0VNQ#:VTD/MP%CXsN9)DlkJK?LR#1*,!2PL2WtC/4HAqnE;"igfc'"
%0J^O!,G'@\OUgEm)Nt\dF]<eoS)\GjVsA<?c$;9F2<JdHnj]>eWkQ]a_X>K\V'PcXJ/IHFJeB(#G"J&@n49HOrZCX6"GtGP4?E+,
%rqCGjnW]`LVW9bD8iYG@70O0hpTNO3H:[6N1BI;7:3COYSL9r*M"uG6H&?hfT(&]Rm6*i8[@_U>./*M6ZqD*Ea7l9I7[9KAC^=t]
%9p`(2WJ\)i$`\@iY,]I%:N>[oTsa!VMjL_Pi_O^5M4^MfQ!VI[dh4jL4WK<]OV#3SSX79t[J*u<o/!6rC#YcVe.Eb9g'/eA,oS`#
%Ok#*'fNUJb5pEj^A=L9O_^DtQs&S[b-bK93cUeIqD"c_aeakp6r,ojg'*+$\lU9nB-TWka_'a2)Wp:ngBP?5*?dsH`?r>8Bc_nm=
%qDGK1-%\e?-(n_4j8JB#7He$Q(F+e?8!6l'qB+A%?#pp[:JF9[Uj8a?`IXS+-[`3\M"73V-@gJM",#'a.Lql8c#^ZE8S4S%<0`_=
%(P?.F-GCf9kTm03-KW+<K/uM!-tn=LfbgR5IGf`/JT6t]*t/[c1pZEmcilCOEjj]/R$[Ge*-UQ[N`[:gC&O4%o;nX/@B9sMoJe\/
%UG6V>8X)O$i;L$$:oHg\S#A61HQih%l?!PSB2]_6e%D(L(Q1]I-.TIUfd@j=d!k3ne_q,+q!3U.r2o!Q-fWKijMn]s#te)c;"4P%
%'1E6YlDkkL,3:_.[jr_:9:qPNA_B?`_H*3[%#et^=Sbq>Pf,7Th%7O-:"3A#Ke$S>6kMtP8Ke(Obo^,ZFo.3'EG`t75\_0IBbDD5
%1GRI4^]sd!j*bU$#<IgIMj,_:=Gt;G*F5<Ydq`,5%IC]-9ZY.pRB$riKf&R4b2$\Z*ttg@^=X81F#d[)8AI#,d"J;1<(Y*FjuI(N
%KVZm>\6[p1?)H/,V>5=`XkbU'3sg1.*+b@JP?6_C3n&ZGKDs4A<eSYU+=91#=UuRuH)]o8qYlYPBrY$^5BbL$Ckj?c<],ZDFlA=X
%[;5r$F?_[$`f#,*)d*Vr^f-o'_1Kt&(f&Pm_;sV&RG4cYDiAL:ipPf?E:E6O4^h!A*]\r-8*Md-QS%X9+=pW3$1M/,B3*S72sb2)
%SOf]4Nl+BBQQ"/"!/B`HHrK(-OjsN:[AZHhnY!;7:k0B9&Z&=2qVGio/D-3GL4[75;m5D?k>c!LgNcd:rd%[`Y+;D94\/4fP6GZW
%E>4JhPJ64cVUrX':q!JGZaj`u1;*?X,LCA^XMMG\P2n0W!mPF@Xm[4;^HTm.&aqPX3:4,tP(`*c>ZNe5.h[)oGON.,m]Bq%A/hcf
%a!nksZCU&%T-)tF8AD"4F(jUgRSC&AoGm-r2t5E:8)@dsREcI0l%kuC^Cg'i8/hk:c.4r710pro[8;F[T&q$_&Y`:RSN!mqcc/dp
%XSRsLADnf%>6%[n]6pkre81&PgSVLmO8u@Hr;t&=)faB2od)$nS9:SkiWffG)np#9O:.Sd2UlA"bpATT'&tmP`%%H2QOu9W)]02b
%Cc[9G5.174]7#OK4hiNb-R*Em%nCjArL#HhZIRAMbf4?=!<H]G&2gJRYT'q?B"+A&YWQV.e'uhmqZPCC-9N(F?ItYM%#j:g\%LUI
%**_^o<uq(t5OJL@lgOlFp!',DrSdA2%fG[#^A73OJ,eJshu<AZ5Q(.$hu2N's7uB;2rB+G<;>AM^AmNJG<^KPLHke+LMoEUiP0j9
%^Hh:`nUmJ4m+;:8O$ETbrrI_MA!6~>
%AI9_PrivateDataEnd
