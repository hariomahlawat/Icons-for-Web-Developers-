%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: vector_410.eps
%%Creator: Adobe Illustrator(R) 16.0
%%For: Max
%%CreationDate: 10/6/2015
%%BoundingBox: 0 0 998 1045
%%HiResBoundingBox: 0 0 997.0108 1044.8775
%%CropBox: 0 0 997.0108 1044.8775
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 16.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 16.0.0 x682 R agm 4.6676 ct 5.2591%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.3-c011 66.145661, 2012/02/06-14:56:27        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Basic RGB</rdf:li>
            </rdf:Alt>
         </dc:title>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:CreatorTool>Adobe Illustrator CS6 (Windows)</xmp:CreatorTool>
         <xmp:CreateDate>2015-10-06T04:23:41+03:00</xmp:CreateDate>
         <xmp:ModifyDate>2015-10-06T04:23:41+03:00</xmp:ModifyDate>
         <xmp:MetadataDate>2015-10-06T04:23:41+03:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>244</xmpGImg:width>
                  <xmpGImg:height>256</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEBLAEsAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABABLAAAAAEA&#xA;AQEsAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgBAAD0AwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A71+a2savpPkye50q8XTb&#xA;qW5s7VtTeNZVtYrq6jgkn4N8J4LITvirzHzh51/MDytY6l5MuNUuL3WpLoS6RrAgWK7n0hbSS6uf&#xA;RKo0JuI2tzBypWrg06YqnujaV5n8j3vk67uNavNRTzFdDTdd067uJrqETzwSzxT27XBeRHUw0k+K&#xA;jeA7KvSdO83+VtT1S50nTtXtLvU7Ov1qzhmR5Y+J4tyRST8LbHwOKpvirsVdirzn8xPzGl0+4Oi6&#xA;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</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#">
         <xmpMM:OriginalDocumentID>uuid:9E3E5C9A8C81DB118734DB58FDDE4BA7</xmpMM:OriginalDocumentID>
         <xmpMM:DocumentID>xmp.did:44831BD7736BE5118671ECE021D48F9D</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:44831BD7736BE5118671ECE021D48F9D</xmpMM:InstanceID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:43831BD7736BE5118671ECE021D48F9D</stRef:instanceID>
            <stRef:documentID>xmp.did:43831BD7736BE5118671ECE021D48F9D</stRef:documentID>
            <stRef:originalDocumentID>uuid:9E3E5C9A8C81DB118734DB58FDDE4BA7</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:3F831BD7736BE5118671ECE021D48F9D</stEvt:instanceID>
                  <stEvt:when>2015-10-05T18:14:57+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:44831BD7736BE5118671ECE021D48F9D</stEvt:instanceID>
                  <stEvt:when>2015-10-06T04:23:41+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/">
         <illustrator:StartupProfile>Basic RGB</illustrator:StartupProfile>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>1175.000000</stDim:w>
            <stDim:h>1175.000000</stDim:h>
            <stDim:unit>Points</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>White</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Black</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Red</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Yellow</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Green</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Cyan</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Blue</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Magenta</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=193 G=39 B=45</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>193</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>45</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=28 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>28</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=241 G=90 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>241</xmpG:red>
                           <xmpG:green>90</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=247 G=147 B=30</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>247</xmpG:red>
                           <xmpG:green>147</xmpG:green>
                           <xmpG:blue>30</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=251 G=176 B=59</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>251</xmpG:red>
                           <xmpG:green>176</xmpG:green>
                           <xmpG:blue>59</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=252 G=238 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>252</xmpG:red>
                           <xmpG:green>238</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=217 G=224 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>217</xmpG:red>
                           <xmpG:green>224</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=198 B=63</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>198</xmpG:green>
                           <xmpG:blue>63</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=57 G=181 B=74</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>57</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>74</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=146 B=69</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>146</xmpG:green>
                           <xmpG:blue>69</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=104 B=55</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>104</xmpG:green>
                           <xmpG:blue>55</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=34 G=181 B=115</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>34</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>115</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=169 B=157</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>169</xmpG:green>
                           <xmpG:blue>157</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=41 G=171 B=226</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>41</xmpG:red>
                           <xmpG:green>171</xmpG:green>
                           <xmpG:blue>226</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=113 B=188</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>113</xmpG:green>
                           <xmpG:blue>188</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=46 G=49 B=146</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>46</xmpG:red>
                           <xmpG:green>49</xmpG:green>
                           <xmpG:blue>146</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=27 G=20 B=100</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>27</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>100</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=45 B=145</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>45</xmpG:green>
                           <xmpG:blue>145</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=147 G=39 B=143</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>147</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>143</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=158 G=0 B=93</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>158</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>93</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=212 G=20 B=90</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>212</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>90</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=30 B=121</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>30</xmpG:green>
                           <xmpG:blue>121</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=199 G=178 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>199</xmpG:red>
                           <xmpG:green>178</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=134 B=117</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>134</xmpG:green>
                           <xmpG:blue>117</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=115 G=99 B=87</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>115</xmpG:red>
                           <xmpG:green>99</xmpG:green>
                           <xmpG:blue>87</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=83 G=71 B=65</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>83</xmpG:red>
                           <xmpG:green>71</xmpG:green>
                           <xmpG:blue>65</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=198 G=156 B=109</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>198</xmpG:red>
                           <xmpG:green>156</xmpG:green>
                           <xmpG:blue>109</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=166 G=124 B=82</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>166</xmpG:red>
                           <xmpG:green>124</xmpG:green>
                           <xmpG:blue>82</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=98 B=57</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>98</xmpG:green>
                           <xmpG:blue>57</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=117 G=76 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>117</xmpG:red>
                           <xmpG:green>76</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=96 G=56 B=19</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>96</xmpG:red>
                           <xmpG:green>56</xmpG:green>
                           <xmpG:blue>19</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=66 G=33 B=11</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>66</xmpG:red>
                           <xmpG:green>33</xmpG:green>
                           <xmpG:blue>11</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Cold</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=56 M=0 Y=20 K=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>101</xmpG:red>
                           <xmpG:green>200</xmpG:green>
                           <xmpG:blue>208</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=51 M=43 Y=0 K=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>131</xmpG:red>
                           <xmpG:green>139</xmpG:green>
                           <xmpG:blue>197</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=26 M=41 Y=0 K=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>186</xmpG:red>
                           <xmpG:green>155</xmpG:green>
                           <xmpG:blue>201</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Grays</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=0 B=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=26 G=26 B=26</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>26</xmpG:red>
                           <xmpG:green>26</xmpG:green>
                           <xmpG:blue>26</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=51 G=51 B=51</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>51</xmpG:red>
                           <xmpG:green>51</xmpG:green>
                           <xmpG:blue>51</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=77 G=77 B=77</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>77</xmpG:red>
                           <xmpG:green>77</xmpG:green>
                           <xmpG:blue>77</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=102 B=102</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>102</xmpG:green>
                           <xmpG:blue>102</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=128 G=128 B=128</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>128</xmpG:red>
                           <xmpG:green>128</xmpG:green>
                           <xmpG:blue>128</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=153 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>153</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=179 G=179 B=179</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>179</xmpG:red>
                           <xmpG:green>179</xmpG:green>
                           <xmpG:blue>179</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=204 G=204 B=204</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>204</xmpG:red>
                           <xmpG:green>204</xmpG:green>
                           <xmpG:blue>204</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=230 G=230 B=230</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>230</xmpG:red>
                           <xmpG:green>230</xmpG:green>
                           <xmpG:blue>230</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=242 G=242 B=242</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>242</xmpG:red>
                           <xmpG:green>242</xmpG:green>
                           <xmpG:blue>242</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <pdf:Producer>Adobe PDF library 10.01</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -1044.88 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 1044.88 li
997.011 1044.88 li
997.011 0 li
cp
clp
907.926 180.15 mo
905.009 172.642 li
901.426 172.642 li
901.426 184.652 li
903.982 184.652 li
903.982 175.991 li
907.367 184.652 li
908.483 184.652 li
911.868 175.991 li
911.868 184.652 li
914.443 184.652 li
914.443 172.642 li
910.843 172.642 li
907.926 180.15 li
cp
false sop
/0 
[/DeviceRGB] /CSA add_res
.0980392 .0941176 .0941176 rgb
f
922.523 182.599 mo
920.291 182.599 918.868 180.889 918.868 178.656 cv
918.868 176.405 920.291 174.713 922.523 174.713 cv
924.738 174.713 926.161 176.405 926.161 178.656 cv
926.161 180.889 924.738 182.599 922.523 182.599 cv
cp
922.523 172.444 mo
918.886 172.444 916.239 175.037 916.239 178.656 cv
916.239 182.275 918.886 184.868 922.523 184.868 cv
926.143 184.868 928.79 182.275 928.79 178.656 cv
928.79 175.037 926.143 172.444 922.523 172.444 cv
cp
f
938.814 179.772 mo
938.814 181.447 937.86 182.599 936.005 182.599 cv
934.151 182.599 933.179 181.447 933.179 179.772 cv
933.179 172.642 li
930.586 172.642 li
930.586 179.844 li
930.586 182.815 932.351 184.868 936.005 184.868 cv
939.661 184.868 941.425 182.815 941.425 179.844 cv
941.425 172.642 li
938.814 172.642 li
938.814 179.772 li
cp
f
945.994 175.919 mo
945.994 175.199 946.606 174.731 947.687 174.731 cv
948.911 174.731 950.208 175.145 951.18 176.045 cv
952.603 174.137 li
951.414 173.039 949.829 172.462 947.921 172.462 cv
945.095 172.462 943.366 174.119 943.366 176.117 cv
943.366 180.637 950.279 179.178 950.279 181.267 cv
950.279 181.969 949.613 182.599 948.191 182.599 cv
946.534 182.599 945.22 181.843 944.374 180.961 cv
942.97 182.959 li
944.104 184.094 945.761 184.868 948.083 184.868 cv
951.306 184.868 952.891 183.211 952.891 181.015 cv
952.891 176.531 945.994 177.81 945.994 175.919 cv
cp
f
963.096 174.893 mo
963.096 172.642 li
954.598 172.642 li
954.598 184.652 li
963.096 184.652 li
963.096 182.401 li
957.154 182.401 li
957.154 179.665 li
962.97 179.665 li
962.97 177.414 li
957.154 177.414 li
957.154 174.893 li
963.096 174.893 li
cp
f
906.771 87.9507 mo
906.771 113.425 li
906.771 120.232 909.421 126.635 914.233 131.455 cv
919.052 136.262 925.453 138.911 932.256 138.911 cv
939.068 138.911 945.468 136.263 950.273 131.454 cv
955.097 126.632 957.752 120.229 957.752 113.425 cv
957.752 87.9507 li
906.771 87.9507 li
cp
932.256 143.411 mo
924.253 143.411 916.723 140.295 911.053 134.637 cv
905.389 128.965 902.271 121.433 902.271 113.425 cv
902.271 83.4507 li
962.252 83.4507 li
962.252 113.425 li
962.252 121.432 959.128 128.964 953.456 134.636 cv
947.801 140.294 940.271 143.411 932.256 143.411 cv
cp
f
906.771 83.4507 mo
930.006 83.4507 li
930.006 60.2158 li
915.613 60.2158 li
913.259 60.2158 911.041 61.1367 909.368 62.8096 cv
907.69 64.4736 906.771 66.6909 906.771 69.0596 cv
906.771 83.4507 li
cp
934.506 87.9507 mo
902.271 87.9507 li
902.271 69.0596 li
902.271 65.4824 903.663 62.1304 906.192 59.6211 cv
908.709 57.105 912.058 55.7158 915.613 55.7158 cv
934.506 55.7158 li
934.506 87.9507 li
cp
f
934.506 83.4507 mo
957.752 83.4507 li
957.752 69.0596 li
957.752 66.6987 956.828 64.481 955.15 62.8145 cv
953.474 61.1367 951.255 60.2158 948.896 60.2158 cv
934.506 60.2158 li
934.506 83.4507 li
cp
962.252 87.9507 mo
930.006 87.9507 li
930.006 55.7158 li
948.896 55.7158 li
952.457 55.7158 955.807 57.105 958.328 59.6279 cv
960.856 62.1396 962.252 65.4912 962.252 69.0596 cv
962.252 87.9507 li
cp
f
934.506 57.9658 mo
930.006 57.9658 li
930.006 50.8657 li
930.006 48.3789 930.978 46.0322 932.742 44.2568 cv
934.466 42.5146 936.882 41.5132 939.365 41.5132 cv
952.891 41.5132 li
954.2 41.5132 955.411 41.0127 956.301 40.1035 cv
957.23 39.1772 957.752 37.9316 957.752 36.6636 cv
957.752 35.3774 957.243 34.1597 956.318 33.2358 cv
955.407 32.3096 954.194 31.8071 952.891 31.8071 cv
911.623 31.8071 li
909.134 31.8071 906.785 30.8374 905.009 29.0771 cv
903.241 27.3198 902.27 24.9692 902.27 22.4561 cv
902.27 19.9653 903.238 17.6201 904.998 15.853 cv
906.77 14.084 909.121 13.1123 911.623 13.1123 cv
925.149 13.1123 li
926.434 13.1123 927.683 12.5977 928.575 11.7012 cv
929.498 10.7759 930.006 9.5542 930.006 8.25977 cv
930.006 1.16113 li
934.506 1.16113 li
934.506 8.25977 li
934.506 10.7544 933.531 13.1045 931.763 14.8774 cv
930.033 16.6152 927.622 17.6123 925.149 17.6123 cv
911.623 17.6123 li
910.321 17.6123 909.1 18.1167 908.183 19.0327 cv
907.273 19.9463 906.77 21.1636 906.77 22.4561 cv
906.77 23.7622 907.271 24.9795 908.18 25.8833 cv
909.104 26.8008 910.328 27.3071 911.623 27.3071 cv
952.891 27.3071 li
955.41 27.3071 957.763 28.2871 959.513 30.0664 cv
961.274 31.8271 962.252 34.1748 962.252 36.6636 cv
962.252 39.1196 961.248 41.5283 959.496 43.2715 cv
957.774 45.0317 955.421 46.0132 952.891 46.0132 cv
939.365 46.0132 li
938.075 46.0132 936.825 46.5278 935.938 47.4258 cv
935.013 48.356 934.506 49.5762 934.506 50.8657 cv
934.506 57.9658 li
cp
f
267.421 184.661 mo
269.978 184.661 li
269.978 172.651 li
267.421 172.651 li
267.421 184.661 li
cp
f
277.088 182.411 mo
274.909 182.411 li
274.909 174.902 li
277.105 174.902 li
279.555 174.902 280.851 176.541 280.851 178.647 cv
280.851 180.7 279.464 182.411 277.088 182.411 cv
cp
277.088 172.651 mo
272.353 172.651 li
272.353 184.661 li
277.105 184.661 li
280.851 184.661 283.462 182.285 283.462 178.647 cv
283.462 175.046 280.851 172.651 277.088 172.651 cv
cp
f
285.276 184.661 mo
293.774 184.661 li
293.774 182.411 li
287.833 182.411 li
287.833 179.674 li
293.648 179.674 li
293.648 177.423 li
287.833 177.423 li
287.833 174.902 li
293.774 174.902 li
293.774 172.651 li
285.276 172.651 li
285.276 184.661 li
cp
f
298.866 180.376 mo
300.739 175.208 li
302.611 180.376 li
298.866 180.376 li
cp
302.342 172.651 mo
299.137 172.651 li
294.509 184.661 li
297.408 184.661 li
298.164 182.626 li
303.313 182.626 li
304.07 184.661 li
306.969 184.661 li
302.342 172.651 li
cp
f
270.082 112.837 mo
304.305 112.837 li
304.888 104.236 308.795 96.1147 315.226 90.2793 cv
315.66 89.8872 316.046 89.5386 316.495 89.1563 cv
325.437 80.9834 330.599 69.2998 330.599 57.1543 cv
330.599 33.2217 311.128 13.751 287.196 13.751 cv
263.262 13.751 243.791 33.2217 243.791 57.1543 cv
243.791 69.3027 248.95 80.9863 257.945 89.2085 cv
257.999 89.2549 li
258.195 89.416 258.447 89.6362 258.703 89.8604 cv
259.146 90.2466 li
265.598 96.1279 269.499 104.25 270.082 112.837 cv
cp
308.729 117.337 mo
265.658 117.337 li
265.658 115.087 li
265.658 106.943 262.194 99.1143 256.155 93.6079 cv
255.738 93.2456 li
255.516 93.0508 255.296 92.8584 255.077 92.6768 cv
254.939 92.5566 li
244.983 83.457 239.291 70.5635 239.291 57.1543 cv
239.291 30.7402 260.781 9.25098 287.196 9.25098 cv
313.609 9.25098 335.099 30.7402 335.099 57.1543 cv
335.099 70.5605 329.403 83.4546 319.472 92.5303 cv
319.001 92.9331 318.646 93.2544 318.292 93.5732 cv
312.199 99.1025 308.729 106.93 308.729 115.087 cv
308.729 117.337 li
cp
.0952911 .0952911 .0952911 rgb
f
296.585 115.087 mo
292.085 115.087 li
292.085 73.6855 li
282.304 73.6855 li
282.304 115.087 li
277.804 115.087 li
277.804 69.1855 li
296.585 69.1855 li
296.585 115.087 li
cp
f
272.915 59.4043 mo
270.218 59.4043 268.023 61.5986 268.023 64.2959 cv
268.023 66.9922 270.218 69.1855 272.915 69.1855 cv
277.804 69.1855 li
277.804 64.2959 li
277.804 61.5986 275.611 59.4043 272.915 59.4043 cv
cp
282.304 73.6855 mo
272.915 73.6855 li
267.736 73.6855 263.523 69.4731 263.523 64.2959 cv
263.523 59.1172 267.736 54.9043 272.915 54.9043 cv
278.092 54.9043 282.304 59.1172 282.304 64.2959 cv
282.304 73.6855 li
cp
f
296.585 69.1855 mo
301.477 69.1855 li
304.174 69.1855 306.368 66.9922 306.368 64.2959 cv
306.368 61.5986 304.174 59.4043 301.477 59.4043 cv
298.779 59.4043 296.585 61.5986 296.585 64.2959 cv
296.585 69.1855 li
cp
301.477 73.6855 mo
292.085 73.6855 li
292.085 64.2959 li
292.085 59.1172 296.298 54.9043 301.477 54.9043 cv
306.655 54.9043 310.868 59.1172 310.868 64.2959 cv
310.868 69.4731 306.655 73.6855 301.477 73.6855 cv
cp
f
263.251 33.21 mo
260.069 30.0283 li
267.327 22.77 276.961 18.7725 287.196 18.7725 cv
287.196 23.2725 li
278.163 23.2725 269.659 26.8018 263.251 33.21 cv
cp
f
306.355 133.302 mo
301.855 133.302 li
301.855 115.087 li
306.355 115.087 li
306.355 133.302 li
cp
f
272.542 133.302 mo
268.042 133.302 li
268.042 115.087 li
272.542 115.087 li
272.542 133.302 li
cp
f
309.968 117.337 mo
264.424 117.337 li
264.424 112.837 li
309.968 112.837 li
309.968 117.337 li
cp
f
309.968 126.444 mo
264.424 126.444 li
264.424 121.944 li
309.968 121.944 li
309.968 126.444 li
cp
f
309.968 135.552 mo
264.424 135.552 li
264.424 131.052 li
309.968 131.052 li
309.968 135.552 li
cp
f
297.318 144.661 mo
277.077 144.661 li
277.077 140.161 li
297.318 140.161 li
297.318 144.661 li
cp
f
281.116 4.81543 mo
280.602 .344727 li
282.16 .166016 283.745 .0498047 285.313 0 cv
285.456 4.49805 li
284.011 4.54395 282.551 4.65039 281.116 4.81543 cv
cp
294.147 4.9292 mo
292.717 4.74072 291.258 4.6084 289.812 4.53711 cv
290.034 .0429688 li
291.602 .120117 293.184 .263184 294.736 .468262 cv
294.147 4.9292 li
cp
272.592 6.52051 mo
271.344 2.19727 li
272.85 1.7627 274.395 1.38623 275.935 1.07813 cv
276.818 5.49023 li
275.399 5.77441 273.978 6.12109 272.592 6.52051 cv
cp
302.644 6.77441 mo
301.262 6.35156 299.846 5.98242 298.434 5.67578 cv
299.388 1.27832 li
300.921 1.61084 302.459 2.01221 303.96 2.4707 cv
302.644 6.77441 li
cp
264.462 9.6167 mo
262.518 5.55811 li
263.933 4.88037 265.395 4.25293 266.861 3.69434 cv
268.463 7.89941 li
267.112 8.41406 265.766 8.9917 264.462 9.6167 cv
cp
310.714 9.99756 mo
309.423 9.35254 308.089 8.75391 306.748 8.21826 cv
308.417 4.03955 li
309.874 4.62109 311.323 5.27148 312.726 5.97217 cv
310.714 9.99756 li
cp
256.955 14.0112 mo
254.369 10.3286 li
255.654 9.42627 256.992 8.56738 258.345 7.77539 cv
260.618 11.6592 li
259.371 12.3887 258.139 13.1802 256.955 14.0112 cv
cp
318.144 14.5132 mo
316.974 13.6626 315.756 12.8511 314.522 12.1016 cv
316.859 8.25586 li
318.199 9.06982 319.521 9.95068 320.79 10.8735 cv
318.144 14.5132 li
cp
250.269 19.5781 mo
247.116 16.3682 li
248.233 15.2705 249.412 14.2041 250.619 13.1997 cv
253.498 16.6577 li
252.385 17.584 251.299 18.5664 250.269 19.5781 cv
cp
324.733 20.1899 mo
323.718 19.1592 322.648 18.1582 321.554 17.2153 cv
324.492 13.8062 li
325.679 14.8291 326.839 15.9146 327.94 17.0327 cv
324.733 20.1899 li
cp
244.585 26.1631 mo
240.949 23.5117 li
241.873 22.2451 242.861 21.0005 243.885 19.8135 cv
247.292 22.7539 li
246.347 23.8481 245.437 24.9951 244.585 26.1631 cv
cp
330.306 26.8706 mo
329.474 25.6865 328.582 24.5244 327.657 23.4155 cv
331.112 20.5327 li
332.116 21.7358 333.083 22.9966 333.987 24.2808 cv
330.306 26.8706 li
cp
240.063 33.5869 mo
236.04 31.5703 li
236.743 30.167 237.513 28.7773 238.328 27.4404 cv
242.17 29.7813 li
241.42 31.0132 240.711 32.2935 240.063 33.5869 cv
cp
334.709 34.373 mo
334.085 33.0742 333.396 31.7808 332.663 30.5298 cv
336.544 28.2534 li
337.34 29.6108 338.087 31.0137 338.765 32.4238 cv
334.709 34.373 li
cp
236.831 41.6538 mo
232.529 40.3325 li
232.99 38.8306 233.52 37.332 234.102 35.8779 cv
238.279 37.5518 li
237.743 38.8901 237.255 40.2705 236.831 41.6538 cv
cp
337.813 42.4995 mo
337.412 41.1123 336.947 39.7241 336.43 38.3721 cv
340.633 36.7656 li
341.195 38.2339 341.7 39.7422 342.136 41.2485 cv
337.813 42.4995 li
cp
234.977 50.1489 mo
230.516 49.5552 li
230.724 47.9956 230.998 46.4302 231.332 44.9033 cv
235.728 45.8623 li
235.421 47.2695 235.168 48.7114 234.977 50.1489 cv
cp
339.528 51.022 mo
339.361 49.5879 339.133 48.1421 338.848 46.7246 cv
343.26 45.8379 li
343.569 47.3765 343.817 48.9463 343.998 50.5034 cv
339.528 51.022 li
cp
230.047 59.2144 mo
230.023 58.5449 230.011 57.8726 230.011 57.1978 cv
230.011 56.2993 230.033 55.3975 230.075 54.4912 cv
230.086 54.2539 li
234.58 54.4873 li
234.57 54.6885 li
234.531 55.5361 234.511 56.3687 234.511 57.1978 cv
234.511 57.8188 234.522 58.4375 234.544 59.0542 cv
230.047 59.2144 li
cp
344.309 59.9424 mo
339.815 59.709 li
339.819 59.6255 li
339.859 58.772 339.878 57.939 339.878 57.1104 cv
339.878 56.5254 339.869 55.9424 339.849 55.3613 cv
344.347 55.2129 li
344.368 55.8428 344.378 56.4756 344.378 57.1104 cv
344.378 58.0083 344.357 58.9106 344.315 59.8174 cv
344.309 59.9424 li
cp
231.153 68.5864 mo
230.841 67.0503 230.589 65.4805 230.406 63.9209 cv
234.875 63.3945 li
235.044 64.8301 235.275 66.2749 235.563 67.689 cv
231.153 68.5864 li
cp
343.083 69.29 mo
338.685 68.3408 li
338.989 66.9312 339.238 65.4883 339.427 64.0522 cv
343.889 64.6372 li
343.684 66.1953 343.413 67.7607 343.083 69.29 cv
cp
233.798 77.6528 mo
233.235 76.1885 232.727 74.6816 232.287 73.1738 cv
236.606 71.9131 li
237.011 73.3018 237.48 74.689 237.999 76.0376 cv
233.798 77.6528 li
cp
340.331 78.3218 mo
336.15 76.6567 li
336.684 75.3164 337.168 73.9355 337.59 72.5518 cv
341.895 73.8633 li
341.437 75.3662 340.911 76.8662 340.331 78.3218 cv
cp
237.905 86.1558 mo
237.107 84.8027 236.357 83.4009 235.676 81.9897 cv
239.728 80.0327 li
240.355 81.3325 241.046 82.624 241.782 83.8706 cv
237.905 86.1558 li
cp
336.123 86.769 mo
332.275 84.4351 li
333.025 83.1987 333.732 81.9175 334.375 80.6265 cv
338.403 82.6323 li
337.705 84.0347 336.938 85.4263 336.123 86.769 cv
cp
243.354 93.8662 mo
242.347 92.6655 241.377 91.4063 240.471 90.1235 cv
244.146 87.5269 li
244.981 88.709 245.875 89.8696 246.803 90.9766 cv
243.354 93.8662 li
cp
330.581 94.4063 mo
327.169 91.4727 li
328.11 90.3784 329.018 89.2295 329.869 88.0581 cv
333.51 90.7026 li
332.587 91.9731 331.602 93.2192 330.581 94.4063 cv
cp
249.986 100.578 mo
248.795 99.5557 247.633 98.4722 246.532 97.3584 cv
249.733 94.1953 li
250.748 95.2222 251.819 96.2212 252.918 97.1641 cv
249.986 100.578 li
cp
323.862 101.034 mo
320.975 97.5815 li
322.083 96.6553 323.167 95.6704 324.198 94.6543 cv
327.357 97.8584 li
326.239 98.9609 325.063 100.029 323.862 101.034 cv
cp
f
420.556 184.652 mo
423.112 184.652 li
423.112 179.665 li
428.928 179.665 li
428.928 177.414 li
423.112 177.414 li
423.112 174.893 li
429.054 174.893 li
429.054 172.642 li
420.556 172.642 li
420.556 184.652 li
cp
.0980392 .0941176 .0941176 rgb
f
430.833 184.652 mo
433.39 184.652 li
433.39 172.642 li
430.833 172.642 li
430.833 184.652 li
cp
f
438.232 172.642 mo
435.657 172.642 li
435.657 184.652 li
443.309 184.652 li
443.309 182.402 li
438.232 182.402 li
438.232 172.642 li
cp
f
445.035 184.652 mo
453.534 184.652 li
453.534 182.402 li
447.592 182.402 li
447.592 179.665 li
453.408 179.665 li
453.408 177.414 li
447.592 177.414 li
447.592 174.893 li
453.534 174.893 li
453.534 172.642 li
445.035 172.642 li
445.035 184.652 li
cp
f
466.655 180.151 mo
463.738 172.642 li
460.155 172.642 li
460.155 184.652 li
462.711 184.652 li
462.711 175.992 li
466.097 184.652 li
467.213 184.652 li
470.598 175.992 li
470.598 184.652 li
473.172 184.652 li
473.172 172.642 li
469.571 172.642 li
466.655 180.151 li
cp
f
478.642 180.367 mo
480.514 175.2 li
482.387 180.367 li
478.642 180.367 li
cp
478.912 172.642 mo
474.284 184.652 li
477.183 184.652 li
477.939 182.618 li
483.089 182.618 li
483.845 184.652 li
486.744 184.652 li
482.117 172.642 li
478.912 172.642 li
cp
f
496.049 180.187 mo
490.485 172.642 li
487.857 172.642 li
487.857 184.652 li
490.414 184.652 li
490.414 176.82 li
496.139 184.652 li
498.606 184.652 li
498.606 172.642 li
496.049 172.642 li
496.049 180.187 li
cp
f
504.075 180.367 mo
505.948 175.2 li
507.82 180.367 li
504.075 180.367 li
cp
504.345 172.642 mo
499.718 184.652 li
502.617 184.652 li
503.373 182.618 li
508.522 182.618 li
509.278 184.652 li
512.179 184.652 li
507.55 172.642 li
504.345 172.642 li
cp
f
517.882 180.241 mo
521.052 180.241 li
521.052 181.681 li
520.565 182.131 519.575 182.599 518.513 182.599 cv
516.315 182.599 514.731 180.925 514.731 178.657 cv
514.731 176.387 516.315 174.713 518.513 174.713 cv
519.772 174.713 520.8 175.433 521.358 176.28 cv
523.464 175.127 li
522.563 173.705 520.997 172.445 518.513 172.445 cv
514.983 172.445 512.103 174.857 512.103 178.657 cv
512.103 182.437 514.983 184.868 518.513 184.868 cv
520.673 184.868 522.384 183.986 523.608 182.618 cv
523.608 178.008 li
517.882 178.008 li
517.882 180.241 li
cp
f
525.64 184.652 mo
534.138 184.652 li
534.138 182.402 li
528.196 182.402 li
528.196 179.665 li
534.011 179.665 li
534.011 177.414 li
528.196 177.414 li
528.196 174.893 li
534.138 174.893 li
534.138 172.642 li
525.64 172.642 li
525.64 184.652 li
cp
f
542.632 180.151 mo
539.716 172.642 li
536.132 172.642 li
536.132 184.652 li
538.688 184.652 li
538.688 175.992 li
542.075 184.652 li
543.19 184.652 li
546.575 175.992 li
546.575 184.652 li
549.149 184.652 li
549.149 172.642 li
545.55 172.642 li
542.632 180.151 li
cp
f
551.522 184.652 mo
560.021 184.652 li
560.021 182.402 li
554.079 182.402 li
554.079 179.665 li
559.896 179.665 li
559.896 177.414 li
554.079 177.414 li
554.079 174.893 li
560.021 174.893 li
560.021 172.642 li
551.522 172.642 li
551.522 184.652 li
cp
f
570.208 180.187 mo
564.646 172.642 li
562.017 172.642 li
562.017 184.652 li
564.573 184.652 li
564.573 176.82 li
570.298 184.652 li
572.765 184.652 li
572.765 172.642 li
570.208 172.642 li
570.208 180.187 li
cp
f
574.399 172.642 mo
574.399 174.893 li
577.911 174.893 li
577.911 184.652 li
580.485 184.652 li
580.485 174.893 li
583.978 174.893 li
583.978 172.642 li
574.399 172.642 li
cp
f
569.267 128.542 mo
550.017 128.542 li
550.017 124.042 li
564.767 124.042 li
564.767 78.6743 li
569.267 78.6743 li
569.267 128.542 li
cp
.0952911 .0952911 .0952911 rgb
f
552.267 134.042 mo
557.767 134.042 li
557.767 31.9888 li
555.017 29.2388 li
552.267 31.9888 li
552.267 134.042 li
cp
562.267 138.542 mo
547.767 138.542 li
547.767 30.1245 li
555.017 22.8745 li
562.267 30.1245 li
562.267 138.542 li
cp
f
560.017 80.9243 mo
550.017 80.9243 li
550.017 76.4243 li
560.017 76.4243 li
560.017 80.9243 li
cp
f
557.267 26.0566 mo
552.767 26.0566 li
552.767 21.0479 li
557.267 21.0479 li
557.267 26.0566 li
cp
f
439.767 136.542 mo
522.767 136.542 li
522.767 128.542 li
447.767 128.542 li
447.767 18.2803 li
439.767 18.2803 li
439.767 136.542 li
cp
527.267 141.042 mo
435.267 141.042 li
435.267 13.7803 li
452.267 13.7803 li
452.267 124.042 li
527.267 124.042 li
527.267 141.042 li
cp
f
452.267 124.042 mo
537.767 124.042 li
537.767 24.4839 li
519.065 5.78027 li
452.267 5.78027 li
452.267 124.042 li
cp
542.267 128.542 mo
447.767 128.542 li
447.767 1.28027 li
520.929 1.28027 li
542.267 22.6196 li
542.267 128.542 li
cp
f
540.015 25.7979 mo
517.747 25.7979 li
517.747 3.53027 li
522.247 3.53027 li
522.247 21.2979 li
540.015 21.2979 li
540.015 25.7979 li
cp
f
527.517 94.0435 mo
462.517 94.0435 li
462.517 89.5435 li
527.517 89.5435 li
527.517 94.0435 li
cp
f
527.517 103.792 mo
462.517 103.792 li
462.517 99.2925 li
527.517 99.2925 li
527.517 103.792 li
cp
f
527.517 113.542 mo
462.517 113.542 li
462.517 109.042 li
527.517 109.042 li
527.517 113.542 li
cp
f
495.017 25.7979 mo
462.517 25.7979 li
462.517 21.2979 li
495.017 21.2979 li
495.017 25.7979 li
cp
f
523.017 77.5439 mo
467.017 77.5439 li
467.017 37.7974 li
523.017 37.7974 li
523.017 77.5439 li
cp
462.517 33.2974 mo
462.517 82.0439 li
527.517 82.0439 li
527.517 33.2974 li
462.517 33.2974 li
cp
f
522.167 80.8452 mo
465.167 38.0947 li
467.867 34.4951 li
524.866 77.2446 li
522.167 80.8452 li
cp
f
467.867 80.8452 mo
465.167 77.2446 li
522.166 34.4951 li
524.867 38.0947 li
467.867 80.8452 li
cp
f
677.878 180.367 mo
679.751 175.2 li
681.624 180.367 li
677.878 180.367 li
cp
678.147 172.642 mo
673.521 184.652 li
676.419 184.652 li
677.177 182.618 li
682.325 182.618 li
683.081 184.652 li
685.981 184.652 li
681.353 172.642 li
678.147 172.642 li
cp
.0980392 .0941176 .0941176 rgb
f
692.351 178.134 mo
689.649 178.134 li
689.649 174.893 li
692.351 174.893 li
693.358 174.893 694.134 175.505 694.134 176.496 cv
694.134 177.522 693.358 178.134 692.351 178.134 cv
cp
696.763 176.513 mo
696.763 174.281 695.214 172.642 692.712 172.642 cv
687.093 172.642 li
687.093 184.652 li
689.649 184.652 li
689.649 180.385 li
691.522 180.385 li
693.882 184.652 li
696.835 184.652 li
694.116 180.079 li
695.411 179.773 696.763 178.621 696.763 176.513 cv
cp
f
704.501 174.713 mo
705.726 174.713 706.806 175.488 707.31 176.459 cv
709.507 175.379 li
708.659 173.867 707.13 172.445 704.501 172.445 cv
700.882 172.445 698.091 174.947 698.091 178.657 cv
698.091 182.347 700.882 184.868 704.501 184.868 cv
707.13 184.868 708.659 183.41 709.507 181.916 cv
707.31 180.853 li
706.806 181.826 705.726 182.599 704.501 182.599 cv
702.304 182.599 700.72 180.925 700.72 178.657 cv
700.72 176.387 702.304 174.713 704.501 174.713 cv
cp
f
719.261 177.36 mo
713.589 177.36 li
713.589 172.642 li
711.032 172.642 li
711.032 184.652 li
713.589 184.652 li
713.589 179.592 li
719.261 179.592 li
719.261 184.652 li
721.837 184.652 li
721.837 172.642 li
719.261 172.642 li
719.261 177.36 li
cp
f
724.19 184.652 mo
726.747 184.652 li
726.747 172.642 li
724.19 172.642 li
724.19 184.652 li
cp
f
734.091 181.861 mo
730.761 172.642 li
727.862 172.642 li
732.489 184.652 li
735.694 184.652 li
740.321 172.642 li
737.423 172.642 li
734.091 181.861 li
cp
f
741.435 184.652 mo
749.933 184.652 li
749.933 182.402 li
743.991 182.402 li
743.991 179.665 li
749.808 179.665 li
749.808 177.414 li
743.991 177.414 li
743.991 174.893 li
749.933 174.893 li
749.933 172.642 li
741.435 172.642 li
741.435 184.652 li
cp
f
754.124 175.919 mo
754.124 175.2 754.737 174.731 755.817 174.731 cv
757.042 174.731 758.337 175.145 759.31 176.045 cv
760.733 174.137 li
759.544 173.039 757.96 172.462 756.052 172.462 cv
753.224 172.462 751.495 174.119 751.495 176.118 cv
751.495 180.637 758.409 179.178 758.409 181.267 cv
758.409 181.969 757.743 182.599 756.321 182.599 cv
754.665 182.599 753.351 181.843 752.505 180.961 cv
751.101 182.959 li
752.233 184.094 753.89 184.868 756.214 184.868 cv
759.437 184.868 761.021 183.211 761.021 181.015 cv
761.021 176.532 754.124 177.81 754.124 175.919 cv
cp
f
669.521 121.411 mo
765.021 121.411 li
765.021 10.9111 li
669.521 10.9111 li
669.521 121.411 li
cp
769.521 125.911 mo
665.021 125.911 li
665.021 6.41113 li
769.521 6.41113 li
769.521 125.911 li
cp
.0952911 .0952911 .0952911 rgb
f
679.521 43.4111 mo
755.021 43.4111 li
755.021 20.9111 li
679.521 20.9111 li
679.521 43.4111 li
cp
759.521 47.9111 mo
675.021 47.9111 li
675.021 16.4111 li
759.521 16.4111 li
759.521 47.9111 li
cp
f
737.021 37.9111 mo
697.521 37.9111 li
697.521 28.6611 li
702.021 28.6611 li
702.021 33.4111 li
732.521 33.4111 li
732.521 28.6611 li
737.021 28.6611 li
737.021 37.9111 li
cp
f
679.521 77.4111 mo
755.021 77.4111 li
755.021 54.9111 li
679.521 54.9111 li
679.521 77.4111 li
cp
759.521 81.9111 mo
675.021 81.9111 li
675.021 50.4111 li
759.521 50.4111 li
759.521 81.9111 li
cp
f
737.021 71.9111 mo
697.521 71.9111 li
697.521 62.6611 li
702.021 62.6611 li
702.021 67.4111 li
732.521 67.4111 li
732.521 62.6611 li
737.021 62.6611 li
737.021 71.9111 li
cp
f
679.521 111.411 mo
755.021 111.411 li
755.021 88.9111 li
679.521 88.9111 li
679.521 111.411 li
cp
759.521 115.911 mo
675.021 115.911 li
675.021 84.4111 li
759.521 84.4111 li
759.521 115.911 li
cp
f
737.021 105.911 mo
697.521 105.911 li
697.521 96.6611 li
702.021 96.6611 li
702.021 101.411 li
732.521 101.411 li
732.521 96.6611 li
737.021 96.6611 li
737.021 105.911 li
cp
f
757.021 135.911 mo
677.521 135.911 li
677.521 123.661 li
682.021 123.661 li
682.021 131.411 li
752.521 131.411 li
752.521 123.661 li
757.021 123.661 li
757.021 135.911 li
cp
f
20.8789 182.402 mo
18.7002 182.402 li
18.7002 174.893 li
20.8965 174.893 li
23.3457 174.893 24.6416 176.532 24.6416 178.638 cv
24.6416 180.691 23.2549 182.402 20.8789 182.402 cv
cp
20.8789 172.642 mo
16.1436 172.642 li
16.1436 184.652 li
20.8965 184.652 li
24.6416 184.652 27.2529 182.275 27.2529 178.638 cv
27.2529 175.038 24.6416 172.642 20.8789 172.642 cv
cp
.0980392 .0941176 .0941176 rgb
f
29.0674 184.652 mo
37.5654 184.652 li
37.5654 182.402 li
31.624 182.402 li
31.624 179.665 li
37.4395 179.665 li
37.4395 177.414 li
31.624 177.414 li
31.624 174.893 li
37.5654 174.893 li
37.5654 172.642 li
29.0674 172.642 li
29.0674 184.652 li
cp
f
45.3945 174.713 mo
46.6191 174.713 47.6992 175.488 48.2031 176.459 cv
50.4004 175.379 li
49.5537 173.867 48.0234 172.445 45.3945 172.445 cv
41.7754 172.445 38.9844 174.947 38.9844 178.657 cv
38.9844 182.347 41.7754 184.868 45.3945 184.868 cv
48.0234 184.868 49.5537 183.41 50.4004 181.916 cv
48.2031 180.853 li
47.6992 181.826 46.6191 182.599 45.3945 182.599 cv
43.1982 182.599 41.6133 180.925 41.6133 178.657 cv
41.6133 176.387 43.1982 174.713 45.3945 174.713 cv
cp
f
57.6338 182.599 mo
55.4014 182.599 53.9795 180.889 53.9795 178.657 cv
53.9795 176.406 55.4014 174.713 57.6338 174.713 cv
59.8486 174.713 61.2715 176.406 61.2715 178.657 cv
61.2715 180.889 59.8486 182.599 57.6338 182.599 cv
cp
57.6338 172.445 mo
53.9971 172.445 51.3506 175.038 51.3506 178.657 cv
51.3506 182.275 53.9971 184.868 57.6338 184.868 cv
61.2529 184.868 63.9004 182.275 63.9004 178.657 cv
63.9004 175.038 61.2529 172.445 57.6338 172.445 cv
cp
f
70.9541 178.134 mo
68.2529 178.134 li
68.2529 174.893 li
70.9541 174.893 li
71.9619 174.893 72.7363 175.505 72.7363 176.496 cv
72.7363 177.522 71.9619 178.134 70.9541 178.134 cv
cp
75.3652 176.513 mo
75.3652 174.281 73.8164 172.642 71.3145 172.642 cv
65.6963 172.642 li
65.6963 184.652 li
68.2529 184.652 li
68.2529 180.385 li
70.126 180.385 li
72.4844 184.652 li
75.4375 184.652 li
72.7188 180.079 li
74.0146 179.773 75.3652 178.621 75.3652 176.513 cv
cp
f
80.3672 180.367 mo
82.2393 175.2 li
84.1123 180.367 li
80.3672 180.367 li
cp
80.6367 172.642 mo
76.0098 184.652 li
78.9082 184.652 li
79.665 182.618 li
84.8145 182.618 li
85.5703 184.652 li
88.4697 184.652 li
83.8418 172.642 li
80.6367 172.642 li
cp
f
87.6924 174.893 mo
91.2031 174.893 li
91.2031 184.652 li
93.7783 184.652 li
93.7783 174.893 li
97.2705 174.893 li
97.2705 172.642 li
87.6924 172.642 li
87.6924 174.893 li
cp
f
98.9063 184.652 mo
101.463 184.652 li
101.463 172.642 li
98.9063 172.642 li
98.9063 184.652 li
cp
f
109.545 182.599 mo
107.313 182.599 105.891 180.889 105.891 178.657 cv
105.891 176.406 107.313 174.713 109.545 174.713 cv
111.76 174.713 113.183 176.406 113.183 178.657 cv
113.183 180.889 111.76 182.599 109.545 182.599 cv
cp
109.545 172.445 mo
105.908 172.445 103.262 175.038 103.262 178.657 cv
103.262 182.275 105.908 184.868 109.545 184.868 cv
113.164 184.868 115.812 182.275 115.812 178.657 cv
115.812 175.038 113.164 172.445 109.545 172.445 cv
cp
f
125.8 172.642 mo
125.8 180.187 li
120.236 172.642 li
117.607 172.642 li
117.607 184.652 li
120.164 184.652 li
120.164 176.82 li
125.89 184.652 li
128.356 184.652 li
128.356 172.642 li
125.8 172.642 li
cp
f
88.9214 70.9375 mo
88.9214 66.4375 li
104.137 66.4375 116.515 54.0591 116.515 38.8442 cv
116.515 35.1221 113.487 32.0942 109.765 32.0942 cv
106.043 32.0942 103.015 35.1221 103.015 38.8442 cv
103.015 46.6152 96.6929 52.9375 88.9214 52.9375 cv
88.9214 48.4375 li
94.2114 48.4375 98.5151 44.1338 98.5151 38.8442 cv
98.5151 32.6411 103.562 27.5942 109.765 27.5942 cv
115.968 27.5942 121.015 32.6411 121.015 38.8442 cv
121.015 56.5405 106.618 70.9375 88.9214 70.9375 cv
cp
.0952911 .0952911 .0952911 rgb
f
55.5757 50.4766 mo
37.8809 50.4766 23.4849 36.0811 23.4849 18.3862 cv
23.4849 12.1831 28.5317 7.13623 34.7349 7.13623 cv
40.938 7.13623 45.9849 12.1831 45.9849 18.3862 cv
45.9849 23.6743 50.2871 27.9766 55.5757 27.9766 cv
55.5757 32.4766 li
47.8062 32.4766 41.4849 26.1558 41.4849 18.3862 cv
41.4849 14.6641 38.457 11.6362 34.7349 11.6362 cv
31.0127 11.6362 27.9849 14.6641 27.9849 18.3862 cv
27.9849 33.5996 40.3618 45.9766 55.5757 45.9766 cv
55.5757 50.4766 li
cp
f
57.8257 77.8989 mo
86.6714 77.8989 li
86.6714 22.835 li
86.6714 18.9805 85.1719 15.3584 82.4487 12.6362 cv
79.7231 9.91162 76.1011 8.41113 72.2495 8.41113 cv
68.3979 8.41113 64.7759 9.91162 62.0503 12.6362 cv
59.3262 15.3594 57.8257 18.9814 57.8257 22.835 cv
57.8257 77.8989 li
cp
91.1714 82.3989 mo
53.3257 82.3989 li
53.3257 22.835 li
53.3257 17.7793 55.2944 13.0269 58.8687 9.45361 cv
62.4443 5.87939 67.1968 3.91113 72.2495 3.91113 cv
77.3022 3.91113 82.0547 5.87939 85.6304 9.45361 cv
89.2036 13.0259 91.1714 17.7778 91.1714 22.835 cv
91.1714 82.3989 li
cp
f
65.8257 29.7979 mo
61.3257 29.7979 li
61.3257 22.835 li
61.3257 19.917 62.4619 17.1743 64.5249 15.1113 cv
66.5889 13.0474 69.3325 11.9111 72.2495 11.9111 cv
72.2495 16.4111 li
70.5342 16.4111 68.9204 17.0796 67.7065 18.2935 cv
66.4937 19.5063 65.8257 21.1191 65.8257 22.835 cv
65.8257 29.7979 li
cp
f
41.0269 92.8193 mo
41.0269 113.236 li
41.0269 118.758 43.1777 123.95 47.0825 127.854 cv
50.9883 131.76 56.1807 133.911 61.7036 133.911 cv
82.7974 133.911 li
88.3193 133.911 93.5103 131.76 97.4141 127.855 cv
101.32 123.954 103.47 118.763 103.47 113.236 cv
103.47 92.8193 li
41.0269 92.8193 li
cp
82.7974 138.411 mo
61.7036 138.411 li
54.9785 138.411 48.6563 135.792 43.9009 131.037 cv
39.1455 126.282 36.5269 119.96 36.5269 113.236 cv
36.5269 88.3193 li
107.97 88.3193 li
107.97 113.236 li
107.97 119.965 105.351 126.288 100.595 131.038 cv
95.8433 135.792 89.522 138.411 82.7974 138.411 cv
cp
f
72.2485 130.411 mo
61.7036 130.411 li
57.1147 130.411 52.8013 128.625 49.5576 125.38 cv
46.314 122.138 44.5269 117.825 44.5269 113.236 cv
49.0269 113.236 li
49.0269 116.622 50.3452 119.805 52.7397 122.198 cv
55.1338 124.593 58.3169 125.911 61.7036 125.911 cv
72.2485 125.911 li
72.2485 130.411 li
cp
f
35.8159 88.3193 mo
108.68 88.3193 li
108.68 82.3989 li
35.8159 82.3989 li
35.8159 88.3193 li
cp
113.18 92.8193 mo
31.3159 92.8193 li
31.3159 77.8989 li
113.18 77.8989 li
113.18 92.8193 li
cp
f
249.75 397.426 mo
247.571 397.426 li
247.571 389.918 li
249.769 389.918 li
252.217 389.918 253.514 391.556 253.514 393.663 cv
253.514 395.716 252.127 397.426 249.75 397.426 cv
cp
249.75 387.667 mo
245.015 387.667 li
245.015 399.677 li
249.769 399.677 li
253.514 399.677 256.124 397.3 256.124 393.663 cv
256.124 390.062 253.514 387.667 249.75 387.667 cv
cp
.0980392 .0941176 .0941176 rgb
f
257.938 399.677 mo
266.438 399.677 li
266.438 397.426 li
260.495 397.426 li
260.495 394.689 li
266.312 394.689 li
266.312 392.438 li
260.495 392.438 li
260.495 389.918 li
266.438 389.918 li
266.438 387.667 li
257.938 387.667 li
257.938 399.677 li
cp
f
271.529 395.392 mo
273.401 390.224 li
275.274 395.392 li
271.529 395.392 li
cp
271.799 387.667 mo
267.172 399.677 li
270.07 399.677 li
270.827 397.642 li
275.977 397.642 li
276.732 399.677 li
279.632 399.677 li
275.004 387.667 li
271.799 387.667 li
cp
f
285.479 397.426 mo
283.301 397.426 li
283.301 389.918 li
285.498 389.918 li
287.946 389.918 289.243 391.556 289.243 393.663 cv
289.243 395.716 287.856 397.426 285.479 397.426 cv
cp
285.479 387.667 mo
280.744 387.667 li
280.744 399.677 li
285.498 399.677 li
289.243 399.677 291.854 397.3 291.854 393.663 cv
291.854 390.062 289.243 387.667 285.479 387.667 cv
cp
f
296.135 387.667 mo
293.56 387.667 li
293.56 399.677 li
301.212 399.677 li
301.212 397.426 li
296.135 397.426 li
296.135 387.667 li
cp
f
302.938 399.677 mo
305.495 399.677 li
305.495 387.667 li
302.938 387.667 li
302.938 399.677 li
cp
f
316.063 395.211 mo
310.498 387.667 li
307.87 387.667 li
307.87 399.677 li
310.427 399.677 li
310.427 391.844 li
316.152 399.677 li
318.619 399.677 li
318.619 387.667 li
316.063 387.667 li
316.063 395.211 li
cp
f
329.49 389.918 mo
329.49 387.667 li
320.991 387.667 li
320.991 399.677 li
329.49 399.677 li
329.49 397.426 li
323.548 397.426 li
323.548 394.689 li
329.364 394.689 li
329.364 392.438 li
323.548 392.438 li
323.548 389.918 li
329.49 389.918 li
cp
f
287.252 228.414 mo
255.409 228.414 229.502 254.321 229.502 286.164 cv
229.502 318.007 255.409 343.914 287.252 343.914 cv
319.096 343.914 345.002 318.007 345.002 286.164 cv
345.002 254.321 319.096 228.414 287.252 228.414 cv
cp
287.252 348.414 mo
252.928 348.414 225.002 320.489 225.002 286.164 cv
225.002 251.839 252.928 223.914 287.252 223.914 cv
321.577 223.914 349.502 251.839 349.502 286.164 cv
349.502 320.489 321.577 348.414 287.252 348.414 cv
cp
.0952911 .0952911 .0952911 rgb
f
287.252 238.414 mo
260.923 238.414 239.502 259.834 239.502 286.164 cv
239.502 312.494 260.923 333.914 287.252 333.914 cv
313.582 333.914 335.002 312.494 335.002 286.164 cv
335.002 259.834 313.582 238.414 287.252 238.414 cv
cp
287.252 338.414 mo
258.442 338.414 235.002 314.975 235.002 286.164 cv
235.002 257.354 258.442 233.914 287.252 233.914 cv
316.063 233.914 339.502 257.354 339.502 286.164 cv
339.502 314.975 316.063 338.414 287.252 338.414 cv
cp
f
294.752 288.415 mo
294.752 283.915 li
319.926 283.914 li
318.766 266.901 304.555 253.415 287.252 253.415 cv
287.252 248.915 li
307.792 248.915 324.502 265.625 324.502 286.164 cv
324.502 288.414 li
294.752 288.415 li
cp
f
287.252 280.915 mo
284.357 280.915 282.002 283.27 282.002 286.164 cv
282.002 289.059 284.357 291.414 287.252 291.414 cv
290.147 291.414 292.502 289.059 292.502 286.164 cv
292.502 283.27 290.147 280.915 287.252 280.915 cv
cp
287.252 295.914 mo
281.876 295.914 277.502 291.54 277.502 286.164 cv
277.502 280.789 281.876 276.415 287.252 276.415 cv
292.628 276.415 297.002 280.789 297.002 286.164 cv
297.002 291.54 292.628 295.914 287.252 295.914 cv
cp
f
285.003 307.414 mo
285.002 293.664 li
289.502 293.664 li
289.503 307.414 li
285.003 307.414 li
cp
f
289.502 242.164 mo
285.002 242.164 li
285.002 236.164 li
289.502 236.164 li
289.502 242.164 li
cp
f
263.304 249.185 mo
260.304 243.988 li
264.201 241.738 li
267.201 246.935 li
263.304 249.185 li
cp
f
248.022 266.113 mo
242.826 263.112 li
245.077 259.216 li
250.273 262.217 li
248.022 266.113 li
cp
f
243.253 288.414 mo
237.253 288.414 li
237.253 283.914 li
243.253 283.914 li
243.253 288.414 li
cp
f
245.078 313.113 mo
242.828 309.215 li
248.024 306.215 li
250.274 310.113 li
245.078 313.113 li
cp
f
264.203 330.59 mo
260.306 328.34 li
263.306 323.144 li
267.203 325.394 li
264.203 330.59 li
cp
f
289.504 336.163 mo
285.004 336.163 li
285.004 330.162 li
289.504 330.162 li
289.504 336.163 li
cp
f
310.306 330.589 mo
307.305 325.393 li
311.202 323.142 li
314.203 328.338 li
310.306 330.589 li
cp
f
329.43 313.111 mo
324.233 310.111 li
326.483 306.213 li
331.68 309.213 li
329.43 313.111 li
cp
f
337.252 288.412 mo
331.252 288.412 li
331.252 283.912 li
337.252 283.912 li
337.252 288.412 li
cp
f
326.482 266.111 mo
324.231 262.215 li
329.427 259.214 li
331.678 263.11 li
326.482 266.111 li
cp
f
311.2 249.183 mo
307.303 246.934 li
310.302 241.737 li
314.199 243.986 li
311.2 249.183 li
cp
f
658.456 393.131 mo
655.756 393.131 li
655.756 389.909 li
658.456 389.909 li
659.465 389.909 660.239 390.521 660.239 391.529 cv
660.239 392.52 659.465 393.131 658.456 393.131 cv
cp
658.817 387.658 mo
653.199 387.658 li
653.199 399.667 li
655.756 399.667 li
655.756 395.382 li
658.817 395.382 li
661.409 395.382 662.851 393.618 662.851 391.529 cv
662.851 389.422 661.428 387.658 658.817 387.658 cv
cp
.0980392 .0941176 .0941176 rgb
f
669.706 393.15 mo
667.006 393.15 li
667.006 389.909 li
669.706 389.909 li
670.715 389.909 671.489 390.521 671.489 391.511 cv
671.489 392.538 670.715 393.15 669.706 393.15 cv
cp
674.118 391.529 mo
674.118 389.296 672.569 387.658 670.067 387.658 cv
664.449 387.658 li
664.449 399.667 li
667.006 399.667 li
667.006 395.401 li
668.878 395.401 li
671.237 399.667 li
674.19 399.667 li
671.472 395.094 li
672.768 394.789 674.118 393.636 674.118 391.529 cv
cp
f
676.022 399.667 mo
684.521 399.667 li
684.521 397.417 li
678.579 397.417 li
678.579 394.68 li
684.396 394.68 li
684.396 392.429 li
678.579 392.429 li
678.579 389.909 li
684.521 389.909 li
684.521 387.658 li
676.022 387.658 li
676.022 399.667 li
cp
f
688.713 390.935 mo
688.713 390.215 689.325 389.747 690.405 389.747 cv
691.63 389.747 692.927 390.161 693.898 391.061 cv
695.321 389.153 li
694.133 388.054 692.548 387.478 690.64 387.478 cv
687.813 387.478 686.085 389.134 686.085 391.133 cv
686.085 395.653 692.999 394.194 692.999 396.283 cv
692.999 396.985 692.332 397.615 690.909 397.615 cv
689.253 397.615 687.938 396.859 687.093 395.977 cv
685.688 397.975 li
686.823 399.11 688.479 399.883 690.802 399.883 cv
694.024 399.883 695.609 398.227 695.609 396.031 cv
695.609 391.547 688.713 392.826 688.713 390.935 cv
cp
f
697.316 399.667 mo
705.815 399.667 li
705.815 397.417 li
699.873 397.417 li
699.873 394.68 li
705.688 394.68 li
705.688 392.429 li
699.873 392.429 li
699.873 389.909 li
705.815 389.909 li
705.815 387.658 li
697.316 387.658 li
697.316 399.667 li
cp
f
716.003 395.203 mo
710.438 387.658 li
707.81 387.658 li
707.81 399.667 li
710.366 399.667 li
710.366 391.835 li
716.093 399.667 li
718.56 399.667 li
718.56 387.658 li
716.003 387.658 li
716.003 395.203 li
cp
f
729.772 387.658 mo
720.193 387.658 li
720.193 389.909 li
723.704 389.909 li
723.704 399.667 li
726.279 399.667 li
726.279 389.909 li
729.772 389.909 li
729.772 387.658 li
cp
f
733.353 395.382 mo
735.225 390.215 li
737.097 395.382 li
733.353 395.382 li
cp
733.622 387.658 mo
728.995 399.667 li
731.894 399.667 li
732.649 397.633 li
737.8 397.633 li
738.556 399.667 li
741.454 399.667 li
736.827 387.658 li
733.622 387.658 li
cp
f
740.677 389.909 mo
744.188 389.909 li
744.188 399.667 li
746.763 399.667 li
746.763 389.909 li
750.256 389.909 li
750.256 387.658 li
740.677 387.658 li
740.677 389.909 li
cp
f
751.892 399.667 mo
754.448 399.667 li
754.448 387.658 li
751.892 387.658 li
751.892 399.667 li
cp
f
762.53 397.615 mo
760.298 397.615 758.875 395.905 758.875 393.672 cv
758.875 391.421 760.298 389.729 762.53 389.729 cv
764.745 389.729 766.167 391.421 766.167 393.672 cv
766.167 395.905 764.745 397.615 762.53 397.615 cv
cp
762.53 387.46 mo
758.894 387.46 756.247 390.053 756.247 393.672 cv
756.247 397.291 758.894 399.883 762.53 399.883 cv
766.149 399.883 768.796 397.291 768.796 393.672 cv
768.796 390.053 766.149 387.46 762.53 387.46 cv
cp
f
778.785 387.658 mo
778.785 395.203 li
773.222 387.658 li
770.593 387.658 li
770.593 399.667 li
773.149 399.667 li
773.149 391.835 li
778.875 399.667 li
781.342 399.667 li
781.342 387.658 li
778.785 387.658 li
cp
f
665.52 297.416 mo
769.021 297.416 li
769.021 231.714 li
665.52 231.714 li
665.52 297.416 li
cp
773.521 301.916 mo
661.02 301.916 li
661.02 227.214 li
773.521 227.214 li
773.521 301.916 li
cp
.0952911 .0952911 .0952911 rgb
f
673.52 289.416 mo
761.021 289.416 li
761.021 239.714 li
673.52 239.714 li
673.52 289.416 li
cp
765.521 293.916 mo
669.02 293.916 li
669.02 235.214 li
765.521 235.214 li
765.521 293.916 li
cp
f
681.361 282.121 mo
678.18 278.939 li
694.294 262.825 li
702.815 271.347 li
710.137 264.027 li
713.798 267.687 li
728.068 253.418 li
742.81 268.162 li
753.18 257.795 li
756.361 260.978 li
742.81 274.525 li
728.068 259.782 li
713.798 274.05 li
710.137 270.39 li
702.815 277.71 li
694.294 269.189 li
681.361 282.121 li
cp
f
700.897 247.714 mo
677.27 247.714 li
677.27 243.214 li
700.897 243.214 li
700.897 247.714 li
cp
f
689.083 257.464 mo
677.27 257.464 li
677.27 252.964 li
689.083 252.964 li
689.083 257.464 li
cp
f
660.119 227.214 mo
774.422 227.214 li
774.422 220.915 li
660.119 220.915 li
660.119 227.214 li
cp
778.922 231.714 mo
655.619 231.714 li
655.619 216.415 li
778.922 216.415 li
778.922 231.714 li
cp
f
706.021 308.215 mo
728.52 308.215 li
728.52 301.916 li
706.021 301.916 li
706.021 308.215 li
cp
733.02 312.715 mo
701.521 312.715 li
701.521 297.416 li
733.02 297.416 li
733.02 312.715 li
cp
f
685.586 355.042 mo
682.029 352.286 li
715.492 309.087 li
719.049 311.843 li
685.586 355.042 li
cp
f
748.955 355.042 mo
715.492 311.843 li
719.049 309.087 li
752.512 352.286 li
748.955 355.042 li
cp
f
719.521 353.664 mo
715.021 353.664 li
715.021 310.465 li
719.521 310.465 li
719.521 353.664 li
cp
f
467.996 393.131 mo
465.295 393.131 li
465.295 389.909 li
467.996 389.909 li
469.004 389.909 469.778 390.521 469.778 391.529 cv
469.778 392.52 469.004 393.131 467.996 393.131 cv
cp
468.356 387.658 mo
462.738 387.658 li
462.738 399.667 li
465.295 399.667 li
465.295 395.382 li
468.356 395.382 li
470.949 395.382 472.389 393.618 472.389 391.529 cv
472.389 389.422 470.967 387.658 468.356 387.658 cv
cp
.0980392 .0941176 .0941176 rgb
f
473.988 399.667 mo
476.545 399.667 li
476.545 387.658 li
473.988 387.658 li
473.988 399.667 li
cp
f
487.112 395.202 mo
481.549 387.658 li
478.92 387.658 li
478.92 399.667 li
481.477 399.667 li
481.477 391.835 li
487.202 399.667 li
489.669 399.667 li
489.669 387.658 li
487.112 387.658 li
487.112 395.202 li
cp
f
495.929 389.909 mo
499.44 389.909 li
499.44 399.667 li
502.015 399.667 li
502.015 389.909 li
505.507 389.909 li
505.507 387.658 li
495.929 387.658 li
495.929 389.909 li
cp
f
512.419 397.615 mo
510.187 397.615 508.763 395.904 508.763 393.672 cv
508.763 391.421 510.187 389.729 512.419 389.729 cv
514.634 389.729 516.056 391.421 516.056 393.672 cv
516.056 395.904 514.634 397.615 512.419 397.615 cv
cp
512.419 387.46 mo
508.782 387.46 506.136 390.053 506.136 393.672 cv
506.136 397.291 508.782 399.884 512.419 399.884 cv
516.038 399.884 518.685 397.291 518.685 393.672 cv
518.685 390.053 516.038 387.46 512.419 387.46 cv
cp
f
526.188 397.615 mo
523.956 397.615 522.534 395.904 522.534 393.672 cv
522.534 391.421 523.956 389.729 526.188 389.729 cv
528.403 389.729 529.825 391.421 529.825 393.672 cv
529.825 395.904 528.403 397.615 526.188 397.615 cv
cp
526.188 387.46 mo
522.552 387.46 519.905 390.053 519.905 393.672 cv
519.905 397.291 522.552 399.884 526.188 399.884 cv
529.808 399.884 532.454 397.291 532.454 393.672 cv
532.454 390.053 529.808 387.46 526.188 387.46 cv
cp
f
536.718 397.417 mo
536.718 387.658 li
534.144 387.658 li
534.144 399.667 li
541.796 399.667 li
541.796 397.417 li
536.718 397.417 li
cp
f
504.519 356.164 mo
500.019 356.164 li
500.019 309.263 li
504.519 309.263 li
504.519 356.164 li
cp
f
492.554 307.013 mo
511.978 307.013 li
511.978 300.88 li
492.554 300.88 li
492.554 307.013 li
cp
516.478 311.513 mo
488.054 311.513 li
488.054 296.38 li
516.478 296.38 li
516.478 311.513 li
cp
f
523.579 268.216 mo
519.079 268.216 li
519.079 232.595 li
485.465 232.595 li
485.465 268.216 li
480.965 268.216 li
480.965 228.095 li
523.579 228.095 li
523.579 268.216 li
cp
f
468.697 296.38 mo
535.837 296.38 li
534.675 278.873 520.063 264.984 502.269 264.984 cv
484.473 264.984 469.859 278.873 468.697 296.38 cv
cp
540.411 300.88 mo
464.123 300.88 li
464.123 298.63 li
464.123 277.596 481.235 260.484 502.269 260.484 cv
523.301 260.484 540.411 277.596 540.411 298.63 cv
540.411 300.88 li
cp
f
478.115 218.415 mo
476.822 218.415 475.609 218.917 474.701 219.831 cv
473.779 220.748 473.276 221.96 473.276 223.253 cv
473.276 224.545 473.781 225.762 474.697 226.678 cv
475.608 227.593 476.82 228.095 478.115 228.095 cv
526.417 228.095 li
527.716 228.095 528.936 227.592 529.85 226.678 cv
530.759 225.765 531.261 224.548 531.261 223.253 cv
531.261 221.958 530.76 220.744 529.851 219.836 cv
528.934 218.919 527.714 218.415 526.417 218.415 cv
478.115 218.415 li
cp
526.417 232.595 mo
478.115 232.595 li
475.614 232.595 473.269 231.623 471.511 229.856 cv
469.749 228.093 468.776 225.747 468.776 223.253 cv
468.776 220.753 469.75 218.408 471.519 216.648 cv
473.271 214.888 475.616 213.915 478.115 213.915 cv
526.417 213.915 li
528.915 213.915 531.265 214.887 533.031 216.652 cv
534.791 218.41 535.761 220.754 535.761 223.253 cv
535.761 225.746 534.793 228.091 533.035 229.856 cv
531.267 231.624 528.917 232.595 526.417 232.595 cv
cp
f
28.9512 393.131 mo
26.25 393.131 li
26.25 389.909 li
28.9512 389.909 li
29.959 389.909 30.7334 390.521 30.7334 391.529 cv
30.7334 392.52 29.959 393.131 28.9512 393.131 cv
cp
29.3115 387.658 mo
23.6934 387.658 li
23.6934 399.667 li
26.25 399.667 li
26.25 395.382 li
29.3115 395.382 li
31.9043 395.382 33.3447 393.618 33.3447 391.529 cv
33.3447 389.422 31.9219 387.658 29.3115 387.658 cv
cp
f
40.6514 397.615 mo
38.4189 397.615 36.9961 395.905 36.9961 393.672 cv
36.9961 391.421 38.4189 389.729 40.6514 389.729 cv
42.8662 389.729 44.2881 391.421 44.2881 393.672 cv
44.2881 395.905 42.8662 397.615 40.6514 397.615 cv
cp
40.6514 387.46 mo
37.0137 387.46 34.3672 390.053 34.3672 393.672 cv
34.3672 397.291 37.0137 399.883 40.6514 399.883 cv
44.2705 399.883 46.917 397.291 46.917 393.672 cv
46.917 390.053 44.2705 387.46 40.6514 387.46 cv
cp
f
53.9707 393.15 mo
51.2705 393.15 li
51.2705 389.909 li
53.9707 389.909 li
54.9795 389.909 55.7539 390.521 55.7539 391.511 cv
55.7539 392.538 54.9795 393.15 53.9707 393.15 cv
cp
58.3828 391.529 mo
58.3828 389.296 56.834 387.658 54.3311 387.658 cv
48.7139 387.658 li
48.7139 399.667 li
51.2705 399.667 li
51.2705 395.401 li
53.1426 395.401 li
55.502 399.667 li
58.4541 399.667 li
55.7354 395.094 li
57.0322 394.789 58.3828 393.636 58.3828 391.529 cv
cp
f
59.3691 389.909 mo
62.8799 389.909 li
62.8799 399.667 li
65.4551 399.667 li
65.4551 389.909 li
68.9482 389.909 li
68.9482 387.658 li
59.3691 387.658 li
59.3691 389.909 li
cp
f
70.583 399.667 mo
73.1396 399.667 li
73.1396 394.68 li
78.9561 394.68 li
78.9561 392.429 li
73.1396 392.429 li
73.1396 389.909 li
79.082 389.909 li
79.082 387.658 li
70.583 387.658 li
70.583 399.667 li
cp
f
86.5684 397.615 mo
84.3359 397.615 82.9131 395.905 82.9131 393.672 cv
82.9131 391.421 84.3359 389.729 86.5684 389.729 cv
88.7832 389.729 90.2061 391.421 90.2061 393.672 cv
90.2061 395.905 88.7832 397.615 86.5684 397.615 cv
cp
86.5684 387.46 mo
82.9316 387.46 80.2852 390.053 80.2852 393.672 cv
80.2852 397.291 82.9316 399.883 86.5684 399.883 cv
90.1875 399.883 92.835 397.291 92.835 393.672 cv
92.835 390.053 90.1875 387.46 86.5684 387.46 cv
cp
f
97.0977 387.658 mo
94.5225 387.658 li
94.5225 399.667 li
102.175 399.667 li
102.175 397.417 li
97.0977 397.417 li
97.0977 387.658 li
cp
f
103.901 399.667 mo
106.458 399.667 li
106.458 387.658 li
103.901 387.658 li
103.901 399.667 li
cp
f
114.54 397.615 mo
112.308 397.615 110.885 395.905 110.885 393.672 cv
110.885 391.421 112.308 389.729 114.54 389.729 cv
116.755 389.729 118.178 391.421 118.178 393.672 cv
118.178 395.905 116.755 397.615 114.54 397.615 cv
cp
114.54 387.46 mo
110.903 387.46 108.257 390.053 108.257 393.672 cv
108.257 397.291 110.903 399.883 114.54 399.883 cv
118.159 399.883 120.807 397.291 120.807 393.672 cv
120.807 390.053 118.159 387.46 114.54 387.46 cv
cp
f
12 333.914 mo
132.5 333.914 li
132.5 253.414 li
12 253.414 li
12 333.914 li
cp
137 338.414 mo
7.5 338.414 li
7.5 248.914 li
137 248.914 li
137 338.414 li
cp
.0952911 .0952911 .0952911 rgb
f
97.125 295.914 mo
47.375 295.914 li
47.375 291.414 li
97.125 291.414 li
97.125 295.914 li
cp
f
134.75 295.914 mo
114.125 295.914 li
114.125 291.414 li
134.75 291.414 li
134.75 295.914 li
cp
f
33.875 295.914 mo
9.75 295.914 li
9.75 291.414 li
33.875 291.414 li
33.875 295.914 li
cp
f
36.125 333.914 mo
41.625 333.914 li
41.625 253.414 li
36.125 253.414 li
36.125 333.914 li
cp
46.125 338.414 mo
31.625 338.414 li
31.625 248.914 li
46.125 248.914 li
46.125 338.414 li
cp
f
102.875 333.914 mo
108.375 333.914 li
108.375 253.414 li
102.875 253.414 li
102.875 333.914 li
cp
112.875 338.414 mo
98.375 338.414 li
98.375 248.914 li
112.875 248.914 li
112.875 338.414 li
cp
f
49.625 303.414 mo
44.542 303.414 li
44.542 298.914 li
45.125 298.914 li
45.125 288.414 li
32.625 288.414 li
32.625 298.914 li
33.208 298.914 li
33.208 303.414 li
28.125 303.414 li
28.125 283.914 li
49.625 283.914 li
49.625 303.414 li
cp
f
116.375 303.414 mo
111.292 303.414 li
111.292 298.914 li
111.875 298.914 li
111.875 288.414 li
99.375 288.414 li
99.375 298.914 li
99.958 298.914 li
99.958 303.414 li
94.875 303.414 li
94.875 283.914 li
116.375 283.914 li
116.375 303.414 li
cp
f
94.5 251.164 mo
90 251.164 li
90 238.414 li
54.5 238.414 li
54.5 251.164 li
50 251.164 li
50 233.914 li
94.5 233.914 li
94.5 251.164 li
cp
f
906.925 399.677 mo
915.424 399.677 li
915.424 397.426 li
909.481 397.426 li
909.481 394.689 li
915.297 394.689 li
915.297 392.438 li
909.481 392.438 li
909.481 389.918 li
915.424 389.918 li
915.424 387.667 li
906.925 387.667 li
906.925 399.677 li
cp
.0980392 .0941176 .0941176 rgb
f
923.918 395.175 mo
921.002 387.667 li
917.418 387.667 li
917.418 399.677 li
919.975 399.677 li
919.975 391.016 li
923.359 399.677 li
924.477 399.677 li
927.861 391.016 li
927.861 399.677 li
930.436 399.677 li
930.436 387.667 li
926.835 387.667 li
923.918 395.175 li
cp
f
935.905 395.392 mo
937.777 390.224 li
939.65 395.392 li
935.905 395.392 li
cp
936.176 387.667 mo
931.549 399.677 li
934.447 399.677 li
935.203 397.642 li
940.353 397.642 li
941.109 399.677 li
944.008 399.677 li
939.381 387.667 li
936.176 387.667 li
cp
f
945.121 399.677 mo
947.678 399.677 li
947.678 387.667 li
945.121 387.667 li
945.121 399.677 li
cp
f
952.52 397.426 mo
952.52 387.667 li
949.943 387.667 li
949.943 399.677 li
957.596 399.677 li
957.596 397.426 li
952.52 397.426 li
cp
f
933.511 315.491 mo
931.015 311.747 li
987.329 274.202 li
989.825 277.946 li
933.511 315.491 li
cp
.0952911 .0952911 .0952911 rgb
f
990.823 353.414 mo
873.694 353.414 li
873.694 274.87 li
888.774 264.812 li
891.271 268.556 li
878.194 277.278 li
878.194 348.914 li
986.323 348.914 li
986.323 277.278 li
973.255 268.566 li
975.751 264.822 li
990.823 274.87 li
990.823 353.414 li
cp
f
987.329 353.036 mo
874.696 277.946 li
877.192 274.202 li
989.825 349.292 li
987.329 353.036 li
cp
f
976.749 285.459 mo
972.249 285.459 li
972.249 240.889 li
954.776 223.415 li
892.274 223.415 li
892.274 285.459 li
887.774 285.459 li
887.774 218.915 li
956.64 218.915 li
976.749 239.024 li
976.749 285.459 li
cp
f
974.497 242.203 mo
953.458 242.203 li
953.458 221.165 li
957.958 221.165 li
957.958 237.703 li
974.497 237.703 li
974.497 242.203 li
cp
f
964.499 283.955 mo
941.339 283.955 li
941.339 279.455 li
964.499 279.455 li
964.499 283.955 li
cp
f
964.499 273.517 mo
941.339 273.517 li
941.339 269.017 li
964.499 269.017 li
964.499 273.517 li
cp
f
964.499 263.08 mo
941.339 263.08 li
941.339 258.58 li
964.499 258.58 li
964.499 263.08 li
cp
f
964.499 252.641 mo
941.339 252.641 li
941.339 248.141 li
964.499 248.141 li
964.499 252.641 li
cp
f
936.339 242.203 mo
900.024 242.203 li
900.024 237.703 li
936.339 237.703 li
936.339 242.203 li
cp
f
964.499 294.392 mo
900.024 294.392 li
900.024 289.892 li
964.499 289.892 li
964.499 294.392 li
cp
f
948.817 304.832 mo
915.704 304.832 li
915.704 300.332 li
948.817 300.332 li
948.817 304.832 li
cp
f
931.839 279.705 mo
904.524 279.705 li
904.524 252.391 li
931.839 252.391 li
931.839 279.705 li
cp
900.024 247.891 mo
900.024 284.205 li
936.339 284.205 li
936.339 247.891 li
900.024 247.891 li
cp
f
911.433 268.298 mo
906.933 268.298 li
906.933 263.798 li
911.433 263.798 li
911.433 268.298 li
cp
f
920.433 268.298 mo
915.933 268.298 li
915.933 263.798 li
920.433 263.798 li
920.433 268.298 li
cp
f
929.433 268.298 mo
924.933 268.298 li
924.933 263.798 li
929.433 263.798 li
929.433 268.298 li
cp
f
40.6787 612.431 mo
38.5 612.431 li
38.5 604.923 li
40.6968 604.923 li
43.1455 604.923 44.4419 606.562 44.4419 608.668 cv
44.4419 610.721 43.0552 612.431 40.6787 612.431 cv
cp
40.6787 602.672 mo
35.9434 602.672 li
35.9434 614.682 li
40.6968 614.682 li
44.4419 614.682 47.0527 612.305 47.0527 608.668 cv
47.0527 605.068 44.4419 602.672 40.6787 602.672 cv
cp
.0980392 .0941176 .0941176 rgb
f
48.8672 614.682 mo
57.3657 614.682 li
57.3657 612.431 li
51.4238 612.431 li
51.4238 609.695 li
57.2397 609.695 li
57.2397 607.444 li
51.4238 607.444 li
51.4238 604.923 li
57.3657 604.923 li
57.3657 602.672 li
48.8672 602.672 li
48.8672 614.682 li
cp
f
64.3301 611.891 mo
60.999 602.672 li
58.1006 602.672 li
62.7275 614.682 li
65.9326 614.682 li
70.5601 602.672 li
67.6611 602.672 li
64.3301 611.891 li
cp
f
71.6729 614.682 mo
74.2295 614.682 li
74.2295 602.672 li
71.6729 602.672 li
71.6729 614.682 li
cp
f
82.438 604.744 mo
83.6626 604.744 84.7427 605.517 85.2471 606.49 cv
87.4434 605.41 li
86.5972 603.897 85.0669 602.474 82.438 602.474 cv
78.8188 602.474 76.0283 604.977 76.0283 608.687 cv
76.0283 612.377 78.8188 614.898 82.438 614.898 cv
85.0669 614.898 86.5972 613.44 87.4434 611.945 cv
85.2471 610.882 li
84.7427 611.855 83.6626 612.629 82.438 612.629 cv
80.2412 612.629 78.6572 610.955 78.6572 608.687 cv
78.6572 606.417 80.2412 604.744 82.438 604.744 cv
cp
f
88.9702 614.682 mo
97.4688 614.682 li
97.4688 612.431 li
91.5269 612.431 li
91.5269 609.695 li
97.3428 609.695 li
97.3428 607.444 li
91.5269 607.444 li
91.5269 604.923 li
97.4688 604.923 li
97.4688 602.672 li
88.9702 602.672 li
88.9702 614.682 li
cp
f
101.66 605.95 mo
101.66 605.23 102.272 604.761 103.353 604.761 cv
104.577 604.761 105.874 605.175 106.846 606.076 cv
108.269 604.167 li
107.08 603.069 105.496 602.493 103.587 602.493 cv
100.76 602.493 99.0317 604.149 99.0317 606.148 cv
99.0317 610.667 105.946 609.208 105.946 611.297 cv
105.946 612 105.279 612.629 103.857 612.629 cv
102.201 612.629 100.886 611.874 100.04 610.992 cv
98.6357 612.99 li
99.77 614.125 101.426 614.898 103.749 614.898 cv
106.972 614.898 108.557 613.242 108.557 611.044 cv
108.557 606.562 101.66 607.84 101.66 605.95 cv
cp
f
127.25 552.021 mo
111.75 552.021 li
111.75 547.521 li
127.25 547.521 li
128.767 547.521 130 546.288 130 544.771 cv
130 494.771 li
130 493.254 128.767 492.021 127.25 492.021 cv
17.25 492.021 li
15.7334 492.021 14.5 493.254 14.5 494.771 cv
14.5 544.771 li
14.5 546.288 15.7334 547.521 17.25 547.521 cv
32.75 547.521 li
32.75 552.021 li
17.25 552.021 li
13.2524 552.021 10 548.769 10 544.771 cv
10 494.771 li
10 490.773 13.2524 487.521 17.25 487.521 cv
127.25 487.521 li
131.248 487.521 134.5 490.773 134.5 494.771 cv
134.5 544.771 li
134.5 548.769 131.248 552.021 127.25 552.021 cv
cp
.0952911 .0952911 .0952911 rgb
f
132.25 522.021 mo
12.25 522.021 li
12.25 517.521 li
132.25 517.521 li
132.25 522.021 li
cp
f
107 489.771 mo
102.5 489.771 li
102.5 452.98 li
89.3579 439.837 li
42 439.837 li
42 489.771 li
37.5 489.771 li
37.5 435.337 li
91.2222 435.337 li
107 451.116 li
107 489.771 li
cp
f
104.749 454.296 mo
88.04 454.296 li
88.04 437.587 li
92.54 437.587 li
92.54 449.796 li
104.749 449.796 li
104.749 454.296 li
cp
f
95.7236 463.728 mo
48.7773 463.728 li
48.7773 459.228 li
95.7236 459.228 li
95.7236 463.728 li
cp
f
95.7236 473.158 mo
48.7773 473.158 li
48.7773 468.658 li
95.7236 468.658 li
95.7236 473.158 li
cp
f
95.7236 482.589 mo
48.7773 482.589 li
48.7773 478.089 li
95.7236 478.089 li
95.7236 482.589 li
cp
f
72.25 454.296 mo
48.7773 454.296 li
48.7773 449.796 li
72.25 449.796 li
72.25 454.296 li
cp
f
122.25 537.021 mo
22.25 537.021 li
22.25 532.521 li
122.25 532.521 li
122.25 537.021 li
cp
f
42 564.771 mo
37.5 564.771 li
37.5 534.771 li
42 534.771 li
42 564.771 li
cp
f
51.2856 564.771 mo
46.7856 564.771 li
46.7856 534.771 li
51.2856 534.771 li
51.2856 564.771 li
cp
f
60.5713 564.771 mo
56.0713 564.771 li
56.0713 534.771 li
60.5713 534.771 li
60.5713 564.771 li
cp
f
69.8569 564.771 mo
65.3569 564.771 li
65.3569 534.771 li
69.8569 534.771 li
69.8569 564.771 li
cp
f
79.1426 564.771 mo
74.6426 564.771 li
74.6426 534.771 li
79.1426 534.771 li
79.1426 564.771 li
cp
f
88.4287 564.771 mo
83.9287 564.771 li
83.9287 534.771 li
88.4287 534.771 li
88.4287 564.771 li
cp
f
97.7139 564.771 mo
93.2139 564.771 li
93.2139 534.771 li
97.7139 534.771 li
97.7139 564.771 li
cp
f
107 564.771 mo
102.5 564.771 li
102.5 534.771 li
107 534.771 li
107 564.771 li
cp
f
37 507.521 mo
31.5 507.521 li
31.5 502.021 li
37 502.021 li
37 507.521 li
cp
f
48 507.521 mo
42.5 507.521 li
42.5 502.021 li
48 502.021 li
48 507.521 li
cp
f
205.253 614.682 mo
213.752 614.682 li
213.752 612.432 li
207.81 612.432 li
207.81 609.695 li
213.626 609.695 li
213.626 607.444 li
207.81 607.444 li
207.81 604.923 li
213.752 604.923 li
213.752 602.672 li
205.253 602.672 li
205.253 614.682 li
cp
.0980392 .0941176 .0941176 rgb
f
220.716 611.891 mo
217.385 602.672 li
214.486 602.672 li
219.113 614.682 li
222.318 614.682 li
226.946 602.672 li
224.047 602.672 li
220.716 611.891 li
cp
f
228.059 614.682 mo
236.558 614.682 li
236.558 612.432 li
230.615 612.432 li
230.615 609.695 li
236.432 609.695 li
236.432 607.444 li
230.615 607.444 li
230.615 604.923 li
236.558 604.923 li
236.558 602.672 li
228.059 602.672 li
228.059 614.682 li
cp
f
246.745 610.217 mo
241.181 602.672 li
238.553 602.672 li
238.553 614.682 li
241.109 614.682 li
241.109 606.85 li
246.835 614.682 li
249.302 614.682 li
249.302 602.672 li
246.745 602.672 li
246.745 610.217 li
cp
f
250.936 604.923 mo
254.446 604.923 li
254.446 614.682 li
257.021 614.682 li
257.021 604.923 li
260.515 604.923 li
260.515 602.672 li
250.936 602.672 li
250.936 604.923 li
cp
f
264.22 605.95 mo
264.22 605.229 264.832 604.761 265.913 604.761 cv
267.137 604.761 268.434 605.175 269.405 606.076 cv
270.828 604.167 li
269.64 603.069 268.056 602.493 266.146 602.493 cv
263.32 602.493 261.592 604.149 261.592 606.147 cv
261.592 610.667 268.506 609.208 268.506 611.297 cv
268.506 612 267.839 612.629 266.417 612.629 cv
264.761 612.629 263.446 611.874 262.6 610.991 cv
261.195 612.99 li
262.33 614.124 263.986 614.898 266.309 614.898 cv
269.532 614.898 271.116 613.242 271.116 611.045 cv
271.116 606.561 264.22 607.84 264.22 605.95 cv
cp
f
283.283 604.743 mo
284.508 604.743 285.588 605.518 286.092 606.49 cv
288.288 605.409 li
287.442 603.897 285.912 602.475 283.283 602.475 cv
279.664 602.475 276.873 604.977 276.873 608.686 cv
276.873 612.377 279.664 614.898 283.283 614.898 cv
285.912 614.898 287.442 613.44 288.288 611.946 cv
286.092 610.883 li
285.588 611.856 284.508 612.629 283.283 612.629 cv
281.086 612.629 279.502 610.956 279.502 608.686 cv
279.502 606.417 281.086 604.743 283.283 604.743 cv
cp
f
292.786 610.397 mo
294.659 605.229 li
296.531 610.397 li
292.786 610.397 li
cp
293.057 602.672 mo
288.429 614.682 li
291.328 614.682 li
292.084 612.647 li
297.233 612.647 li
297.99 614.682 li
300.889 614.682 li
296.262 602.672 li
293.057 602.672 li
cp
f
304.469 602.672 mo
301.894 602.672 li
301.894 614.682 li
309.546 614.682 li
309.546 612.432 li
304.469 612.432 li
304.469 602.672 li
cp
f
311.271 614.682 mo
319.771 614.682 li
319.771 612.432 li
313.828 612.432 li
313.828 609.695 li
319.645 609.695 li
319.645 607.444 li
313.828 607.444 li
313.828 604.923 li
319.771 604.923 li
319.771 602.672 li
311.271 602.672 li
311.271 614.682 li
cp
f
329.958 610.217 mo
324.394 602.672 li
321.766 602.672 li
321.766 614.682 li
324.322 614.682 li
324.322 606.85 li
330.048 614.682 li
332.515 614.682 li
332.515 602.672 li
329.958 602.672 li
329.958 610.217 li
cp
f
339.622 612.432 mo
337.443 612.432 li
337.443 604.923 li
339.641 604.923 li
342.089 604.923 343.386 606.561 343.386 608.668 cv
343.386 610.721 341.999 612.432 339.622 612.432 cv
cp
339.622 602.672 mo
334.887 602.672 li
334.887 614.682 li
339.641 614.682 li
343.386 614.682 345.996 612.305 345.996 608.668 cv
345.996 605.067 343.386 602.672 339.622 602.672 cv
cp
f
350.295 610.397 mo
352.168 605.229 li
354.04 610.397 li
350.295 610.397 li
cp
350.565 602.672 mo
345.938 614.682 li
348.837 614.682 li
349.593 612.647 li
354.742 612.647 li
355.499 614.682 li
358.397 614.682 li
353.771 602.672 li
350.565 602.672 li
cp
f
364.769 608.165 mo
362.067 608.165 li
362.067 604.923 li
364.769 604.923 li
365.776 604.923 366.551 605.536 366.551 606.526 cv
366.551 607.552 365.776 608.165 364.769 608.165 cv
cp
366.533 610.109 mo
367.829 609.803 369.18 608.651 369.18 606.543 cv
369.18 604.311 367.631 602.672 365.129 602.672 cv
359.511 602.672 li
359.511 614.682 li
362.067 614.682 li
362.067 610.415 li
363.94 610.415 li
366.299 614.682 li
369.252 614.682 li
366.533 610.109 li
cp
f
280.252 533.515 mo
239.252 533.515 li
239.252 492.515 li
280.252 492.515 li
280.252 533.515 li
cp
234.752 488.015 mo
234.752 538.015 li
284.752 538.015 li
284.752 488.015 li
234.752 488.015 li
cp
.0952911 .0952911 .0952911 rgb
f
250.069 522.766 mo
246.252 522.766 li
245.01 522.766 244.002 521.759 244.002 520.516 cv
244.002 516.767 li
244.002 515.159 244.627 513.65 245.763 512.52 cv
246.891 511.389 248.398 510.763 250.003 510.763 cv
252.499 510.763 li
252.901 510.763 253.277 510.608 253.557 510.327 cv
253.844 510.041 254 509.665 254 509.264 cv
254 508.863 253.844 508.487 253.561 508.204 cv
253.277 507.919 252.901 507.764 252.499 507.764 cv
250.003 507.764 li
249.6 507.764 249.224 507.919 248.944 508.2 cv
248.657 508.485 248.502 508.861 248.502 509.264 cv
244.002 509.264 li
244.002 507.656 244.627 506.147 245.763 505.017 cv
246.888 503.889 248.396 503.264 250.003 503.264 cv
252.499 503.264 li
254.104 503.264 255.611 503.888 256.743 505.021 cv
257.875 506.152 258.5 507.66 258.5 509.264 cv
258.5 510.868 257.875 512.375 256.739 513.509 cv
255.611 514.639 254.104 515.263 252.499 515.263 cv
250.003 515.263 li
249.603 515.263 249.227 515.419 248.944 515.703 cv
248.657 515.988 248.502 516.364 248.502 516.767 cv
248.502 518.266 li
250.069 518.266 li
250.069 522.766 li
cp
f
258.5 522.766 mo
247.819 522.766 li
247.819 518.266 li
258.5 518.266 li
258.5 522.766 li
cp
f
275.502 515.265 mo
267 515.265 li
265.396 515.265 263.889 514.64 262.756 513.504 cv
261.626 512.375 261.002 510.868 261.002 509.264 cv
261.002 503.264 li
265.502 503.264 li
265.502 509.264 li
265.502 509.665 265.657 510.041 265.939 510.323 cv
266.225 510.609 266.601 510.765 267 510.765 cv
275.502 510.765 li
275.502 515.265 li
cp
f
275.502 522.766 mo
271.002 522.766 li
271.002 503.264 li
275.502 503.264 li
275.502 522.766 li
cp
f
294.752 493.015 mo
289.752 493.015 li
289.752 488.015 li
294.752 488.015 li
294.752 493.015 li
cp
f
303.752 493.015 mo
298.752 493.015 li
298.752 488.015 li
303.752 488.015 li
303.752 493.015 li
cp
f
294.752 502.015 mo
289.752 502.015 li
289.752 497.015 li
294.752 497.015 li
294.752 502.015 li
cp
f
303.752 502.015 mo
298.752 502.015 li
298.752 497.015 li
303.752 497.015 li
303.752 502.015 li
cp
f
312.752 502.015 mo
307.752 502.015 li
307.752 497.015 li
312.752 497.015 li
312.752 502.015 li
cp
f
321.752 502.015 mo
316.752 502.015 li
316.752 497.015 li
321.752 497.015 li
321.752 502.015 li
cp
f
330.752 502.015 mo
325.752 502.015 li
325.752 497.015 li
330.752 497.015 li
330.752 502.015 li
cp
f
339.752 502.015 mo
334.752 502.015 li
334.752 497.015 li
339.752 497.015 li
339.752 502.015 li
cp
f
294.752 511.015 mo
289.752 511.015 li
289.752 506.015 li
294.752 506.015 li
294.752 511.015 li
cp
f
303.752 511.015 mo
298.752 511.015 li
298.752 506.015 li
303.752 506.015 li
303.752 511.015 li
cp
f
312.752 511.015 mo
307.752 511.015 li
307.752 506.015 li
312.752 506.015 li
312.752 511.015 li
cp
f
321.752 511.015 mo
316.752 511.015 li
316.752 506.015 li
321.752 506.015 li
321.752 511.015 li
cp
f
330.752 511.015 mo
325.752 511.015 li
325.752 506.015 li
330.752 506.015 li
330.752 511.015 li
cp
f
339.752 511.015 mo
334.752 511.015 li
334.752 506.015 li
339.752 506.015 li
339.752 511.015 li
cp
f
294.752 520.015 mo
289.752 520.015 li
289.752 515.015 li
294.752 515.015 li
294.752 520.015 li
cp
f
303.752 520.015 mo
298.752 520.015 li
298.752 515.015 li
303.752 515.015 li
303.752 520.015 li
cp
f
312.752 520.015 mo
307.752 520.015 li
307.752 515.015 li
312.752 515.015 li
312.752 520.015 li
cp
f
321.752 520.015 mo
316.752 520.015 li
316.752 515.015 li
321.752 515.015 li
321.752 520.015 li
cp
f
330.752 520.015 mo
325.752 520.015 li
325.752 515.015 li
330.752 515.015 li
330.752 520.015 li
cp
f
339.752 520.015 mo
334.752 520.015 li
334.752 515.015 li
339.752 515.015 li
339.752 520.015 li
cp
f
294.752 529.015 mo
289.752 529.015 li
289.752 524.015 li
294.752 524.015 li
294.752 529.015 li
cp
f
303.752 529.015 mo
298.752 529.015 li
298.752 524.015 li
303.752 524.015 li
303.752 529.015 li
cp
f
312.752 529.015 mo
307.752 529.015 li
307.752 524.015 li
312.752 524.015 li
312.752 529.015 li
cp
f
321.752 529.015 mo
316.752 529.015 li
316.752 524.015 li
321.752 524.015 li
321.752 529.015 li
cp
f
330.752 529.015 mo
325.752 529.015 li
325.752 524.015 li
330.752 524.015 li
330.752 529.015 li
cp
f
339.752 529.015 mo
334.752 529.015 li
334.752 524.015 li
339.752 524.015 li
339.752 529.015 li
cp
f
294.752 538.015 mo
289.752 538.015 li
289.752 533.015 li
294.752 533.015 li
294.752 538.015 li
cp
f
303.752 538.015 mo
298.752 538.015 li
298.752 533.015 li
303.752 533.015 li
303.752 538.015 li
cp
f
312.752 538.015 mo
307.752 538.015 li
307.752 533.015 li
312.752 533.015 li
312.752 538.015 li
cp
f
321.752 538.015 mo
316.752 538.015 li
316.752 533.015 li
321.752 533.015 li
321.752 538.015 li
cp
f
330.752 538.015 mo
325.752 538.015 li
325.752 533.015 li
330.752 533.015 li
330.752 538.015 li
cp
f
338.185 550.261 mo
222.502 550.261 li
222.502 480.511 li
227.002 480.511 li
227.002 545.761 li
336.32 545.761 li
347.502 534.58 li
347.502 480.511 li
352.002 480.511 li
352.002 536.443 li
338.185 550.261 li
cp
f
339.502 548.015 mo
335.002 548.015 li
335.002 533.265 li
349.752 533.265 li
349.752 537.765 li
339.502 537.765 li
339.502 548.015 li
cp
f
227.002 478.261 mo
347.502 478.261 li
347.502 462.761 li
227.002 462.761 li
227.002 478.261 li
cp
352.002 482.761 mo
222.502 482.761 li
222.502 458.261 li
352.002 458.261 li
352.002 482.761 li
cp
f
239.502 471.343 mo
235.002 471.343 li
235.002 454.343 li
239.502 454.343 li
239.502 471.343 li
cp
f
339.502 471.343 mo
335.002 471.343 li
335.002 454.343 li
339.502 454.343 li
339.502 471.343 li
cp
f
458.267 605.95 mo
458.267 605.229 458.879 604.761 459.959 604.761 cv
461.184 604.761 462.48 605.175 463.452 606.076 cv
464.875 604.167 li
463.687 603.069 462.102 602.493 460.193 602.493 cv
457.367 602.493 455.638 604.149 455.638 606.147 cv
455.638 610.667 462.552 609.208 462.552 611.297 cv
462.552 612 461.886 612.629 460.463 612.629 cv
458.807 612.629 457.493 611.874 456.646 610.991 cv
455.242 612.99 li
456.376 614.124 458.033 614.898 460.355 614.898 cv
463.579 614.898 465.163 613.242 465.163 611.045 cv
465.163 606.561 458.267 607.84 458.267 605.95 cv
cp
.0980392 .0941176 .0941176 rgb
f
472.704 604.743 mo
473.928 604.743 475.008 605.518 475.513 606.49 cv
477.709 605.409 li
476.863 603.897 475.333 602.475 472.704 602.475 cv
469.084 602.475 466.294 604.977 466.294 608.686 cv
466.294 612.377 469.084 614.898 472.704 614.898 cv
475.333 614.898 476.863 613.44 477.709 611.946 cv
475.513 610.883 li
475.008 611.856 473.928 612.629 472.704 612.629 cv
470.507 612.629 468.923 610.956 468.923 608.686 cv
468.923 606.417 470.507 604.743 472.704 604.743 cv
cp
f
487.464 607.39 mo
481.792 607.39 li
481.792 602.672 li
479.236 602.672 li
479.236 614.682 li
481.792 614.682 li
481.792 609.623 li
487.464 609.623 li
487.464 614.682 li
490.039 614.682 li
490.039 602.672 li
487.464 602.672 li
487.464 607.39 li
cp
f
492.394 614.682 mo
500.892 614.682 li
500.892 612.432 li
494.95 612.432 li
494.95 609.695 li
500.766 609.695 li
500.766 607.444 li
494.95 607.444 li
494.95 604.923 li
500.892 604.923 li
500.892 602.672 li
492.394 602.672 li
492.394 614.682 li
cp
f
507.622 612.432 mo
505.444 612.432 li
505.444 604.923 li
507.641 604.923 li
510.09 604.923 511.386 606.561 511.386 608.668 cv
511.386 610.721 509.999 612.432 507.622 612.432 cv
cp
507.622 602.672 mo
502.887 602.672 li
502.887 614.682 li
507.641 614.682 li
511.386 614.682 513.996 612.305 513.996 608.668 cv
513.996 605.067 511.386 602.672 507.622 602.672 cv
cp
f
524.039 609.803 mo
524.039 611.477 523.085 612.629 521.23 612.629 cv
519.376 612.629 518.404 611.477 518.404 609.803 cv
518.404 602.672 li
515.811 602.672 li
515.811 609.875 li
515.811 612.846 517.575 614.898 521.23 614.898 cv
524.886 614.898 526.65 612.846 526.65 609.875 cv
526.65 602.672 li
524.039 602.672 li
524.039 609.803 li
cp
f
531.49 602.672 mo
528.915 602.672 li
528.915 614.682 li
536.566 614.682 li
536.566 612.432 li
531.49 612.432 li
531.49 602.672 li
cp
f
546.791 604.923 mo
546.791 602.672 li
538.293 602.672 li
538.293 614.682 li
546.791 614.682 li
546.791 612.432 li
540.85 612.432 li
540.85 609.695 li
546.666 609.695 li
546.666 607.444 li
540.85 607.444 li
540.85 604.923 li
546.791 604.923 li
cp
f
558.767 545.597 mo
548.517 545.597 li
548.517 541.097 li
554.267 541.097 li
554.267 526.763 li
548.517 526.763 li
548.517 522.263 li
558.767 522.263 li
558.767 545.597 li
cp
.0952911 .0952911 .0952911 rgb
f
558.767 512.845 mo
548.517 512.845 li
548.517 508.345 li
554.267 508.345 li
554.267 494.013 li
548.517 494.013 li
548.517 489.513 li
558.767 489.513 li
558.767 512.845 li
cp
f
558.767 482.596 mo
548.517 482.596 li
548.517 478.096 li
554.267 478.096 li
554.267 463.764 li
548.517 463.764 li
548.517 459.264 li
558.767 459.264 li
558.767 482.596 li
cp
f
548.517 482.596 mo
465.517 482.596 li
465.517 478.096 li
548.517 478.096 li
548.517 482.596 li
cp
f
548.517 524.263 mo
465.517 524.263 li
465.517 519.763 li
548.517 519.763 li
548.517 524.263 li
cp
f
467.767 561.429 mo
546.267 561.429 li
546.267 440.929 li
467.767 440.929 li
467.767 561.429 li
cp
550.767 565.929 mo
463.267 565.929 li
463.267 436.429 li
550.767 436.429 li
550.767 565.929 li
cp
f
447.767 561.429 mo
463.267 561.429 li
463.267 440.929 li
447.767 440.929 li
447.767 561.429 li
cp
467.767 565.929 mo
443.267 565.929 li
443.267 436.429 li
467.767 436.429 li
467.767 565.929 li
cp
f
520.821 493.681 mo
493.208 493.681 li
493.208 489.181 li
520.821 489.181 li
520.821 493.681 li
cp
f
533.517 503.429 mo
480.517 503.429 li
480.517 498.929 li
533.517 498.929 li
533.517 503.429 li
cp
f
533.517 513.179 mo
480.517 513.179 li
480.517 508.679 li
533.517 508.679 li
533.517 513.179 li
cp
f
457.767 475.304 mo
453.267 475.304 li
453.267 470.804 li
457.767 470.804 li
457.767 475.304 li
cp
f
457.767 484.68 mo
453.267 484.68 li
453.267 480.18 li
457.767 480.18 li
457.767 484.68 li
cp
f
457.767 494.055 mo
453.268 494.055 li
453.268 489.555 li
457.767 489.555 li
457.767 494.055 li
cp
f
457.767 503.429 mo
453.267 503.429 li
453.267 498.929 li
457.767 498.929 li
457.767 503.429 li
cp
f
457.767 512.805 mo
453.267 512.805 li
453.267 508.305 li
457.767 508.305 li
457.767 512.805 li
cp
f
457.767 522.18 mo
453.267 522.18 li
453.267 517.68 li
457.767 517.68 li
457.767 522.18 li
cp
f
457.767 531.554 mo
453.267 531.554 li
453.267 527.054 li
457.767 527.054 li
457.767 531.554 li
cp
f
679.813 612.629 mo
677.581 612.629 676.158 610.92 676.158 608.688 cv
676.158 606.436 677.581 604.745 679.813 604.745 cv
682.028 604.745 683.45 606.436 683.45 608.688 cv
683.45 610.92 682.028 612.629 679.813 612.629 cv
cp
679.813 602.475 mo
676.177 602.475 673.53 605.069 673.53 608.688 cv
673.53 612.307 676.177 614.899 679.813 614.899 cv
683.433 614.899 686.079 612.307 686.079 608.688 cv
686.079 605.069 683.433 602.475 679.813 602.475 cv
cp
.0980392 .0941176 .0941176 rgb
f
692.485 611.891 mo
689.154 602.672 li
686.256 602.672 li
690.883 614.682 li
694.088 614.682 li
698.716 602.672 li
695.816 602.672 li
692.485 611.891 li
cp
f
699.828 614.682 mo
708.327 614.682 li
708.327 612.432 li
702.385 612.432 li
702.385 609.696 li
708.2 609.696 li
708.2 607.444 li
702.385 607.444 li
702.385 604.924 li
708.327 604.924 li
708.327 602.672 li
699.828 602.672 li
699.828 614.682 li
cp
f
715.579 608.165 mo
712.878 608.165 li
712.878 604.924 li
715.579 604.924 li
716.587 604.924 717.362 605.536 717.362 606.526 cv
717.362 607.553 716.587 608.165 715.579 608.165 cv
cp
719.991 606.545 mo
719.991 604.311 718.442 602.672 715.939 602.672 cv
710.321 602.672 li
710.321 614.682 li
712.878 614.682 li
712.878 610.417 li
714.751 610.417 li
717.11 614.682 li
720.063 614.682 li
717.344 610.11 li
718.64 609.803 719.991 608.651 719.991 606.545 cv
cp
f
720.978 604.924 mo
724.488 604.924 li
724.488 614.682 li
727.063 614.682 li
727.063 604.924 li
730.556 604.924 li
730.556 602.672 li
720.978 602.672 li
720.978 604.924 li
cp
f
732.191 614.682 mo
734.748 614.682 li
734.748 602.672 li
732.191 602.672 li
732.191 614.682 li
cp
f
743.623 610.182 mo
740.706 602.672 li
737.123 602.672 li
737.123 614.682 li
739.68 614.682 li
739.68 606.022 li
743.064 614.682 li
744.181 614.682 li
747.565 606.022 li
747.565 614.682 li
750.141 614.682 li
750.141 602.672 li
746.54 602.672 li
743.623 610.182 li
cp
f
761.012 604.924 mo
761.012 602.672 li
752.513 602.672 li
752.513 614.682 li
761.012 614.682 li
761.012 612.432 li
755.069 612.432 li
755.069 609.696 li
760.886 609.696 li
760.886 607.444 li
755.069 607.444 li
755.069 604.924 li
761.012 604.924 li
cp
f
735.255 501.054 mo
728.653 501.054 723.283 495.687 723.283 489.089 cv
727.783 489.089 li
727.783 493.206 731.135 496.554 735.255 496.554 cv
739.369 496.554 742.717 493.206 742.717 489.089 cv
747.217 489.089 li
747.217 495.687 741.851 501.054 735.255 501.054 cv
cp
f
703.782 567.429 mo
766.722 567.429 li
766.722 562.937 li
766.722 559.934 765.552 557.113 763.429 554.992 cv
761.308 552.866 758.486 551.697 755.483 551.697 cv
715.022 551.697 li
712.017 551.697 709.194 552.867 707.073 554.99 cv
704.951 557.113 703.782 559.935 703.782 562.937 cv
703.782 567.429 li
cp
771.222 571.929 mo
699.282 571.929 li
699.282 562.937 li
699.282 558.733 700.919 554.781 703.891 551.809 cv
706.859 548.835 710.813 547.197 715.022 547.197 cv
755.483 547.197 li
759.69 547.197 763.643 548.835 766.611 551.811 cv
769.583 554.778 771.222 558.731 771.222 562.937 cv
771.222 571.929 li
cp
f
709.671 486.839 mo
760.83 486.839 li
746.722 442.703 li
723.782 442.703 li
709.671 486.839 li
cp
766.992 491.339 mo
703.507 491.339 li
720.497 438.203 li
750.007 438.203 li
766.992 491.339 li
cp
f
682.342 496.747 mo
679.16 493.565 li
714.287 458.436 li
717.469 461.618 li
682.342 496.747 li
cp
f
720.887 551.042 mo
679.158 509.311 li
682.34 506.129 li
724.068 547.86 li
720.887 551.042 li
cp
f
674.47 494.789 mo
670.803 494.789 667.819 497.772 667.819 501.439 cv
667.819 505.106 670.803 508.089 674.47 508.089 cv
678.138 508.089 681.122 505.106 681.122 501.439 cv
681.122 497.772 678.138 494.789 674.47 494.789 cv
cp
674.47 512.589 mo
668.321 512.589 663.319 507.587 663.319 501.439 cv
663.319 495.291 668.321 490.289 674.47 490.289 cv
680.619 490.289 685.622 495.291 685.622 501.439 cv
685.622 507.587 680.619 512.589 674.47 512.589 cv
cp
f
753.372 549.447 mo
748.872 549.447 li
748.872 542.888 li
753.372 542.888 li
753.372 549.447 li
cp
f
716.733 509.011 mo
712.233 509.011 li
712.233 489.089 li
716.733 489.089 li
716.733 509.011 li
cp
f
730.213 438.203 mo
740.287 438.203 li
740.287 434.929 li
730.213 434.929 li
730.213 438.203 li
cp
744.787 442.703 mo
725.713 442.703 li
725.713 430.429 li
744.787 430.429 li
744.787 442.703 li
cp
f
909.382 605.942 mo
909.382 605.221 909.994 604.752 911.075 604.752 cv
912.299 604.752 913.595 605.167 914.567 606.067 cv
915.99 604.159 li
914.802 603.061 913.218 602.485 911.309 602.485 cv
908.481 602.485 906.753 604.141 906.753 606.139 cv
906.753 610.659 913.667 609.2 913.667 611.29 cv
913.667 611.991 913.001 612.622 911.579 612.622 cv
909.923 612.622 908.608 611.866 907.762 610.983 cv
906.357 612.981 li
907.491 614.116 909.147 614.889 911.471 614.889 cv
914.694 614.889 916.278 613.233 916.278 611.038 cv
916.278 606.553 909.382 607.833 909.382 605.942 cv
cp
f
926.592 602.665 mo
917.013 602.665 li
917.013 604.915 li
920.524 604.915 li
920.524 614.674 li
923.099 614.674 li
923.099 604.915 li
926.592 604.915 li
926.592 602.665 li
cp
f
930.172 610.389 mo
932.044 605.221 li
933.917 610.389 li
930.172 610.389 li
cp
930.442 602.665 mo
925.814 614.674 li
928.714 614.674 li
929.47 612.639 li
934.619 612.639 li
935.376 614.674 li
938.274 614.674 li
933.647 602.665 li
930.442 602.665 li
cp
f
939.388 614.674 mo
941.944 614.674 li
941.944 609.686 li
947.76 609.686 li
947.76 607.436 li
941.944 607.436 li
941.944 604.915 li
947.886 604.915 li
947.886 602.665 li
939.388 602.665 li
939.388 614.674 li
cp
f
958.163 604.915 mo
958.163 602.665 li
949.665 602.665 li
949.665 614.674 li
952.222 614.674 li
952.222 609.686 li
958.038 609.686 li
958.038 607.436 li
952.222 607.436 li
952.222 604.915 li
958.163 604.915 li
cp
f
929.418 492.712 mo
935.107 492.712 li
941.061 479.287 li
932.261 473.332 li
923.46 479.288 li
929.418 492.712 li
cp
938.035 497.212 mo
926.492 497.212 li
917.819 477.672 li
932.261 467.898 li
946.699 477.669 li
938.035 497.212 li
cp
.0952911 .0952911 .0952911 rgb
f
915.061 547.706 mo
932.263 567.726 li
949.461 547.708 li
934.879 497.212 li
929.647 497.212 li
915.061 547.706 li
cp
932.263 574.632 mo
910.063 548.793 li
926.263 492.712 li
938.264 492.712 li
954.459 548.795 li
932.263 574.632 li
cp
f
957.103 445.73 mo
907.423 445.73 li
907.423 441.23 li
957.103 441.23 li
957.103 445.73 li
cp
f
930.576 472.106 mo
895.675 432.67 li
899.044 429.688 li
933.945 469.124 li
930.576 472.106 li
cp
f
896.454 443.49 mo
907.002 484.993 li
932.261 467.898 li
957.519 484.993 li
968.067 443.49 li
965.422 433.429 li
899.1 433.429 li
896.454 443.49 li
cp
960.302 492.311 mo
932.261 473.332 li
904.219 492.311 li
891.806 443.47 li
895.631 428.929 li
968.891 428.929 li
972.716 443.47 li
960.302 492.311 li
cp
f
933.945 472.106 mo
930.576 469.124 li
965.475 429.688 li
968.844 432.67 li
933.945 472.106 li
cp
f
894.722 820.932 mo
894.722 820.211 895.335 819.745 896.415 819.745 cv
897.64 819.745 898.935 820.159 899.907 821.059 cv
901.331 819.149 li
900.142 818.051 898.558 817.475 896.649 817.475 cv
893.821 817.475 892.093 819.131 892.093 821.129 cv
892.093 825.649 899.007 824.192 899.007 826.28 cv
899.007 826.983 898.341 827.612 896.919 827.612 cv
895.263 827.612 893.948 826.856 893.103 825.973 cv
891.696 827.973 li
892.831 829.106 894.487 829.881 896.812 829.881 cv
900.034 829.881 901.618 828.225 901.618 826.028 cv
901.618 821.543 894.722 822.823 894.722 820.932 cv
cp
.0980392 .0941176 .0941176 rgb
f
911.554 824.786 mo
911.554 826.459 910.599 827.612 908.745 827.612 cv
906.89 827.612 905.919 826.459 905.919 824.786 cv
905.919 817.655 li
903.325 817.655 li
903.325 824.858 li
903.325 827.829 905.089 829.881 908.745 829.881 cv
912.399 829.881 914.165 827.829 914.165 824.858 cv
914.165 817.655 li
911.554 817.655 li
911.554 824.786 li
cp
f
921.794 823.129 mo
919.095 823.129 li
919.095 819.907 li
921.794 819.907 li
922.804 819.907 923.577 820.518 923.577 821.526 cv
923.577 822.516 922.804 823.129 921.794 823.129 cv
cp
922.155 817.655 mo
916.538 817.655 li
916.538 829.665 li
919.095 829.665 li
919.095 825.379 li
922.155 825.379 li
924.747 825.379 926.188 823.616 926.188 821.526 cv
926.188 819.42 924.767 817.655 922.155 817.655 cv
cp
f
933.044 823.129 mo
930.345 823.129 li
930.345 819.907 li
933.044 819.907 li
934.054 819.907 934.827 820.518 934.827 821.526 cv
934.827 822.516 934.054 823.129 933.044 823.129 cv
cp
933.405 817.655 mo
927.788 817.655 li
927.788 829.665 li
930.345 829.665 li
930.345 825.379 li
933.405 825.379 li
935.997 825.379 937.438 823.616 937.438 821.526 cv
937.438 819.42 936.017 817.655 933.405 817.655 cv
cp
f
941.505 817.655 mo
938.929 817.655 li
938.929 829.665 li
946.581 829.665 li
946.581 827.415 li
941.505 827.415 li
941.505 817.655 li
cp
f
948.308 829.665 mo
950.864 829.665 li
950.864 817.655 li
948.308 817.655 li
948.308 829.665 li
cp
f
953.239 829.665 mo
961.737 829.665 li
961.737 827.415 li
955.796 827.415 li
955.796 824.678 li
961.612 824.678 li
961.612 822.426 li
955.796 822.426 li
955.796 819.907 li
961.737 819.907 li
961.737 817.655 li
953.239 817.655 li
953.239 829.665 li
cp
f
965.929 820.932 mo
965.929 820.211 966.542 819.745 967.622 819.745 cv
968.847 819.745 970.142 820.159 971.114 821.059 cv
972.538 819.149 li
971.349 818.051 969.765 817.475 967.856 817.475 cv
965.028 817.475 963.3 819.131 963.3 821.129 cv
963.3 825.649 970.214 824.192 970.214 826.28 cv
970.214 826.983 969.548 827.612 968.126 827.612 cv
966.47 827.612 965.155 826.856 964.31 825.973 cv
962.903 827.973 li
964.038 829.106 965.694 829.881 968.019 829.881 cv
971.241 829.881 972.825 828.225 972.825 826.028 cv
972.825 821.543 965.929 822.823 965.929 820.932 cv
cp
f
885.487 775.182 mo
910.987 775.182 li
910.987 659.682 li
885.487 659.682 li
885.487 775.182 li
cp
915.487 779.682 mo
880.987 779.682 li
880.987 655.182 li
915.487 655.182 li
915.487 779.682 li
cp
.0952911 .0952911 .0952911 rgb
f
913.237 769.682 mo
903.237 769.682 li
903.237 765.182 li
913.237 765.182 li
913.237 769.682 li
cp
f
913.237 759.682 mo
903.237 759.682 li
903.237 755.182 li
913.237 755.182 li
913.237 759.682 li
cp
f
913.237 749.682 mo
903.237 749.682 li
903.237 745.182 li
913.237 745.182 li
913.237 749.682 li
cp
f
913.237 739.682 mo
903.237 739.682 li
903.237 735.182 li
913.237 735.182 li
913.237 739.682 li
cp
f
913.237 729.682 mo
903.237 729.682 li
903.237 725.182 li
913.237 725.182 li
913.237 729.682 li
cp
f
913.237 719.682 mo
903.237 719.682 li
903.237 715.182 li
913.237 715.182 li
913.237 719.682 li
cp
f
913.237 709.682 mo
903.237 709.682 li
903.237 705.182 li
913.237 705.182 li
913.237 709.682 li
cp
f
913.237 699.682 mo
903.237 699.682 li
903.237 695.182 li
913.237 695.182 li
913.237 699.682 li
cp
f
913.237 689.682 mo
903.237 689.682 li
903.237 685.182 li
913.237 685.182 li
913.237 689.682 li
cp
f
913.237 679.682 mo
903.237 679.682 li
903.237 675.182 li
913.237 675.182 li
913.237 679.682 li
cp
f
913.237 669.682 mo
903.237 669.682 li
903.237 665.182 li
913.237 665.182 li
913.237 669.682 li
cp
f
931.493 669.034 mo
942.005 669.034 li
936.747 659.932 li
931.493 669.034 li
cp
f
938.997 756.413 mo
934.497 756.413 li
934.499 688.647 li
938.999 688.647 li
938.997 756.413 li
cp
f
945.313 679.26 mo
936.747 664.431 li
928.187 679.26 li
924.29 677.01 li
936.747 655.433 li
949.209 677.01 li
945.313 679.26 li
cp
f
928.487 754.163 mo
945.009 754.163 li
945.011 683.567 li
938.34 690.238 li
937.918 690.66 937.346 690.897 936.749 690.897 cv
936.749 690.897 li
936.152 690.897 935.58 690.66 935.158 690.238 cv
928.488 683.568 li
928.487 754.163 li
cp
947.259 758.663 mo
926.237 758.663 li
925.641 758.663 925.068 758.425 924.646 758.003 cv
924.225 757.582 923.987 757.009 923.987 756.413 cv
923.988 678.135 li
923.988 677.225 924.536 676.405 925.377 676.056 cv
926.22 675.708 927.186 675.901 927.829 676.544 cv
936.749 685.465 li
945.67 676.544 li
946.313 675.901 947.279 675.708 948.122 676.056 cv
948.963 676.405 949.511 677.225 949.511 678.135 cv
949.509 756.413 li
949.509 757.656 948.501 758.663 947.259 758.663 cv
cp
f
928.487 762.815 mo
945.008 762.815 li
945.008 758.663 li
928.487 758.663 li
928.487 762.815 li
cp
947.257 767.315 mo
926.237 767.315 li
924.995 767.315 923.987 766.307 923.987 765.065 cv
923.987 756.413 li
923.987 755.17 924.995 754.163 926.237 754.163 cv
947.259 754.163 li
947.855 754.163 948.428 754.4 948.85 754.822 cv
949.271 755.244 949.509 755.816 949.509 756.414 cv
949.507 765.066 li
949.507 766.308 948.499 767.315 947.257 767.315 cv
cp
f
928.487 758.663 mo
928.487 766.922 li
928.487 769.127 929.347 771.204 930.907 772.766 cv
932.467 774.324 934.538 775.182 936.739 775.182 cv
936.739 777.432 li
936.745 775.182 li
938.955 775.182 941.029 774.324 942.588 772.765 cv
944.149 771.203 945.009 769.127 945.007 766.924 cv
945.009 758.663 li
928.487 758.663 li
cp
936.747 779.682 mo
936.739 779.682 li
933.337 779.682 930.136 778.356 927.726 775.948 cv
925.314 773.533 923.987 770.329 923.987 766.922 cv
923.987 754.163 li
949.509 754.163 li
949.507 766.922 li
949.51 770.327 948.183 773.532 945.771 775.946 cv
943.361 778.356 940.156 779.682 936.747 779.682 cv
cp
f
983.534 767.315 mo
960.261 767.315 li
960.261 762.815 li
979.034 762.815 li
979.034 716.188 li
983.534 716.188 li
983.534 767.315 li
cp
f
962.511 775.182 mo
970.377 775.182 li
970.377 668.243 li
966.444 664.309 li
962.511 668.243 li
962.511 775.182 li
cp
974.877 779.682 mo
958.011 779.682 li
958.011 666.379 li
966.444 657.946 li
974.877 666.379 li
974.877 779.682 li
cp
f
972.627 718.438 mo
960.261 718.438 li
960.261 713.938 li
972.627 713.938 li
972.627 718.438 li
cp
f
968.694 661.127 mo
964.194 661.127 li
964.194 654.932 li
968.694 654.932 li
968.694 661.127 li
cp
f
206.958 819.735 mo
208.183 819.735 209.263 820.51 209.768 821.481 cv
211.964 820.401 li
211.117 818.889 209.587 817.467 206.958 817.467 cv
203.339 817.467 200.549 819.969 200.549 823.678 cv
200.549 827.37 203.339 829.889 206.958 829.889 cv
209.587 829.889 211.117 828.432 211.964 826.938 cv
209.768 825.875 li
209.263 826.848 208.183 827.622 206.958 827.622 cv
204.762 827.622 203.178 825.948 203.178 823.678 cv
203.178 821.409 204.762 819.735 206.958 819.735 cv
cp
.0980392 .0941176 .0941176 rgb
f
221.719 824.795 mo
221.719 826.469 220.765 827.622 218.91 827.622 cv
217.056 827.622 216.083 826.469 216.083 824.795 cv
216.083 817.665 li
213.49 817.665 li
213.49 824.866 li
213.49 827.838 215.255 829.889 218.91 829.889 cv
222.565 829.889 224.33 827.838 224.33 824.866 cv
224.33 817.665 li
221.719 817.665 li
221.719 824.795 li
cp
f
228.899 820.942 mo
228.899 820.221 229.511 819.752 230.592 819.752 cv
231.815 819.752 233.112 820.167 234.085 821.067 cv
235.507 819.159 li
234.318 818.061 232.734 817.485 230.825 817.485 cv
227.999 817.485 226.271 819.141 226.271 821.139 cv
226.271 825.659 233.185 824.2 233.185 826.29 cv
233.185 826.991 232.518 827.622 231.096 827.622 cv
229.439 827.622 228.125 826.866 227.278 825.983 cv
225.874 827.981 li
227.009 829.116 228.665 829.889 230.987 829.889 cv
234.211 829.889 235.795 828.233 235.795 826.038 cv
235.795 821.553 228.899 822.833 228.899 820.942 cv
cp
f
236.53 819.915 mo
240.041 819.915 li
240.041 829.674 li
242.616 829.674 li
242.616 819.915 li
246.108 819.915 li
246.108 817.665 li
236.53 817.665 li
236.53 819.915 li
cp
f
253.02 827.622 mo
250.787 827.622 249.365 825.911 249.365 823.678 cv
249.365 821.428 250.787 819.735 253.02 819.735 cv
255.234 819.735 256.657 821.428 256.657 823.678 cv
256.657 825.911 255.234 827.622 253.02 827.622 cv
cp
253.02 817.467 mo
249.383 817.467 246.736 820.059 246.736 823.678 cv
246.736 827.297 249.383 829.889 253.02 829.889 cv
256.639 829.889 259.286 827.297 259.286 823.678 cv
259.286 820.059 256.639 817.467 253.02 817.467 cv
cp
f
267.582 825.172 mo
264.665 817.665 li
261.082 817.665 li
261.082 829.674 li
263.639 829.674 li
263.639 821.014 li
267.024 829.674 li
268.141 829.674 li
271.525 821.014 li
271.525 829.674 li
274.1 829.674 li
274.1 817.665 li
270.499 817.665 li
267.582 825.172 li
cp
f
276.473 829.674 mo
284.971 829.674 li
284.971 827.424 li
279.029 827.424 li
279.029 824.686 li
284.845 824.686 li
284.845 822.436 li
279.029 822.436 li
279.029 819.915 li
284.971 819.915 li
284.971 817.665 li
276.473 817.665 li
276.473 829.674 li
cp
f
292.224 823.157 mo
289.522 823.157 li
289.522 819.915 li
292.224 819.915 li
293.231 819.915 294.006 820.528 294.006 821.518 cv
294.006 822.543 293.231 823.157 292.224 823.157 cv
cp
296.635 821.536 mo
296.635 819.303 295.086 817.665 292.584 817.665 cv
286.966 817.665 li
286.966 829.674 li
289.522 829.674 li
289.522 825.407 li
291.396 825.407 li
293.754 829.674 li
296.707 829.674 li
293.988 825.1 li
295.284 824.795 296.635 823.643 296.635 821.536 cv
cp
f
305.362 820.942 mo
305.362 820.221 305.975 819.752 307.055 819.752 cv
308.279 819.752 309.575 820.167 310.548 821.067 cv
311.971 819.159 li
310.782 818.061 309.197 817.485 307.289 817.485 cv
304.462 817.485 302.733 819.141 302.733 821.139 cv
302.733 825.659 309.647 824.2 309.647 826.29 cv
309.647 826.991 308.981 827.622 307.559 827.622 cv
305.902 827.622 304.588 826.866 303.742 825.983 cv
302.338 827.981 li
303.472 829.116 305.128 829.889 307.451 829.889 cv
310.674 829.889 312.259 828.233 312.259 826.038 cv
312.259 821.553 305.362 822.833 305.362 820.942 cv
cp
f
313.966 829.674 mo
322.464 829.674 li
322.464 827.424 li
316.522 827.424 li
316.522 824.686 li
322.338 824.686 li
322.338 822.436 li
316.522 822.436 li
316.522 819.915 li
322.464 819.915 li
322.464 817.665 li
313.966 817.665 li
313.966 829.674 li
cp
f
329.717 823.157 mo
327.016 823.157 li
327.016 819.915 li
329.717 819.915 li
330.725 819.915 331.499 820.528 331.499 821.518 cv
331.499 822.543 330.725 823.157 329.717 823.157 cv
cp
334.128 821.536 mo
334.128 819.303 332.579 817.665 330.077 817.665 cv
324.459 817.665 li
324.459 829.674 li
327.016 829.674 li
327.016 825.407 li
328.889 825.407 li
331.247 829.674 li
334.2 829.674 li
331.481 825.1 li
332.777 824.795 334.128 823.643 334.128 821.536 cv
cp
f
340.822 826.883 mo
337.491 817.665 li
334.593 817.665 li
339.22 829.674 li
342.425 829.674 li
347.053 817.665 li
344.153 817.665 li
340.822 826.883 li
cp
f
348.165 829.674 mo
350.722 829.674 li
350.722 817.665 li
348.165 817.665 li
348.165 829.674 li
cp
f
358.931 819.735 mo
360.155 819.735 361.235 820.51 361.739 821.481 cv
363.937 820.401 li
363.09 818.889 361.56 817.467 358.931 817.467 cv
355.312 817.467 352.521 819.969 352.521 823.678 cv
352.521 827.37 355.312 829.889 358.931 829.889 cv
361.56 829.889 363.09 828.432 363.937 826.938 cv
361.739 825.875 li
361.235 826.848 360.155 827.622 358.931 827.622 cv
356.734 827.622 355.149 825.948 355.149 823.678 cv
355.149 821.409 356.734 819.735 358.931 819.735 cv
cp
f
373.961 819.915 mo
373.961 817.665 li
365.463 817.665 li
365.463 829.674 li
373.961 829.674 li
373.961 827.424 li
368.02 827.424 li
368.02 824.686 li
373.835 824.686 li
373.835 822.436 li
368.02 822.436 li
368.02 819.915 li
373.961 819.915 li
cp
f
335.255 771.561 mo
239.255 771.561 li
231.397 771.561 225.005 765.168 225.005 757.311 cv
225.005 681.311 li
225.005 673.454 231.397 667.061 239.255 667.061 cv
243.305 667.061 li
243.305 671.561 li
239.255 671.561 li
233.879 671.561 229.505 675.935 229.505 681.311 cv
229.505 757.311 li
229.505 762.687 233.879 767.061 239.255 767.061 cv
335.255 767.061 li
340.631 767.061 345.005 762.687 345.005 757.311 cv
345.005 681.311 li
345.005 675.935 340.631 671.561 335.255 671.561 cv
270.205 671.561 li
270.205 667.061 li
335.255 667.061 li
343.112 667.061 349.505 673.454 349.505 681.311 cv
349.505 757.311 li
349.505 765.168 343.112 771.561 335.255 771.561 cv
cp
.0952911 .0952911 .0952911 rgb
f
247.252 771.557 mo
247.252 767.057 li
251.25 767.057 254.502 763.805 254.502 759.807 cv
254.502 752.307 li
259.002 752.307 li
259.002 759.807 li
259.002 766.286 253.731 771.557 247.252 771.557 cv
cp
f
250.252 665.307 mo
247.633 665.307 245.502 667.438 245.502 670.057 cv
245.502 745.307 li
245.502 747.926 247.633 750.057 250.252 750.057 cv
263.252 750.057 li
265.872 750.057 268.002 747.926 268.002 745.307 cv
268.002 670.057 li
268.002 667.438 265.872 665.307 263.252 665.307 cv
250.252 665.307 li
cp
263.252 754.557 mo
250.252 754.557 li
245.152 754.557 241.002 750.408 241.002 745.307 cv
241.002 670.057 li
241.002 664.957 245.152 660.807 250.252 660.807 cv
263.252 660.807 li
268.353 660.807 272.502 664.957 272.502 670.057 cv
272.502 745.307 li
272.502 750.408 268.353 754.557 263.252 754.557 cv
cp
f
296.418 721.557 mo
283.252 721.557 li
283.252 717.057 li
296.418 717.057 li
296.418 721.557 li
cp
f
316.585 721.557 mo
303.419 721.557 li
303.419 717.057 li
316.585 717.057 li
316.585 721.557 li
cp
f
336.752 721.557 mo
323.586 721.557 li
323.586 717.057 li
336.752 717.057 li
336.752 721.557 li
cp
f
296.418 733.225 mo
283.252 733.225 li
283.252 728.725 li
296.418 728.725 li
296.418 733.225 li
cp
f
316.585 733.225 mo
303.419 733.225 li
303.419 728.725 li
316.585 728.725 li
316.585 733.225 li
cp
f
336.752 733.225 mo
323.586 733.225 li
323.586 728.725 li
336.752 728.725 li
336.752 733.225 li
cp
f
296.418 744.891 mo
283.252 744.891 li
283.252 740.391 li
296.418 740.391 li
296.418 744.891 li
cp
f
316.585 744.891 mo
303.419 744.891 li
303.419 740.391 li
316.585 740.391 li
316.585 744.891 li
cp
f
336.752 744.891 mo
323.586 744.891 li
323.586 740.391 li
336.752 740.391 li
336.752 744.891 li
cp
f
296.418 756.557 mo
283.252 756.557 li
283.252 752.057 li
296.418 752.057 li
296.418 756.557 li
cp
f
316.585 756.557 mo
303.419 756.557 li
303.419 752.057 li
316.585 752.057 li
316.585 756.557 li
cp
f
336.752 756.557 mo
323.586 756.557 li
323.586 752.057 li
336.752 752.057 li
336.752 756.557 li
cp
f
288.002 702.057 mo
332.002 702.057 li
332.002 686.557 li
288.002 686.557 li
288.002 702.057 li
cp
336.502 706.557 mo
283.502 706.557 li
283.502 682.057 li
336.502 682.057 li
336.502 706.557 li
cp
f
325.502 696.557 mo
321.002 696.557 li
321.002 692.057 li
325.502 692.057 li
325.502 696.557 li
cp
f
316.502 696.557 mo
312.002 696.557 li
312.002 692.057 li
316.502 692.057 li
316.502 696.557 li
cp
f
307.502 696.557 mo
303.002 696.557 li
303.002 692.057 li
307.502 692.057 li
307.502 696.557 li
cp
f
462.739 827.415 mo
460.561 827.415 li
460.561 819.907 li
462.757 819.907 li
465.206 819.907 466.502 821.543 466.502 823.651 cv
466.502 825.704 465.115 827.415 462.739 827.415 cv
cp
462.739 817.655 mo
458.004 817.655 li
458.004 829.665 li
462.757 829.665 li
466.502 829.665 469.113 827.288 469.113 823.651 cv
469.113 820.049 466.502 817.655 462.739 817.655 cv
cp
.0980392 .0941176 .0941176 rgb
f
473.412 825.379 mo
475.285 820.211 li
477.157 825.379 li
473.412 825.379 li
cp
473.683 817.655 mo
469.056 829.665 li
471.954 829.665 li
472.71 827.629 li
477.859 827.629 li
478.616 829.665 li
481.515 829.665 li
476.888 817.655 li
473.683 817.655 li
cp
f
490.316 817.655 mo
480.737 817.655 li
480.737 819.907 li
484.249 819.907 li
484.249 829.665 li
486.823 829.665 li
486.823 819.907 li
490.316 819.907 li
490.316 817.655 li
cp
f
493.896 825.379 mo
495.769 820.211 li
497.642 825.379 li
493.896 825.379 li
cp
494.166 817.655 mo
489.539 829.665 li
492.438 829.665 li
493.194 827.629 li
498.344 827.629 li
499.1 829.665 li
501.999 829.665 li
497.371 817.655 li
494.166 817.655 li
cp
f
508.98 827.415 mo
505.668 827.415 li
505.668 824.678 li
508.98 824.678 li
509.971 824.678 510.512 825.29 510.512 826.045 cv
510.512 826.911 509.936 827.415 508.98 827.415 cv
cp
505.668 819.907 mo
508.873 819.907 li
509.737 819.907 510.277 820.428 510.277 821.167 cv
510.277 821.94 509.737 822.426 508.873 822.426 cv
505.668 822.426 li
505.668 819.907 li
cp
510.817 823.471 mo
511.951 823.237 512.889 822.211 512.889 820.715 cv
512.889 819.114 511.718 817.655 509.432 817.655 cv
503.111 817.655 li
503.111 829.665 li
509.629 829.665 li
511.934 829.665 513.122 828.225 513.122 826.407 cv
513.122 824.911 512.113 823.668 510.817 823.471 cv
cp
f
518.143 825.379 mo
520.016 820.211 li
521.888 825.379 li
518.143 825.379 li
cp
518.412 817.655 mo
513.785 829.665 li
516.684 829.665 li
517.44 827.629 li
522.59 827.629 li
523.346 829.665 li
526.245 829.665 li
521.617 817.655 li
518.412 817.655 li
cp
f
529.429 820.932 mo
529.429 820.211 530.041 819.745 531.121 819.745 cv
532.346 819.745 533.642 820.159 534.614 821.059 cv
536.037 819.149 li
534.848 818.051 533.264 817.475 531.355 817.475 cv
528.528 817.475 526.8 819.131 526.8 821.129 cv
526.8 825.649 533.714 824.192 533.714 826.28 cv
533.714 826.983 533.047 827.612 531.625 827.612 cv
529.969 827.612 528.654 826.856 527.809 825.973 cv
526.403 827.973 li
527.538 829.106 529.194 829.881 531.518 829.881 cv
534.74 829.881 536.324 828.225 536.324 826.028 cv
536.324 821.543 529.429 822.823 529.429 820.932 cv
cp
f
546.53 819.907 mo
546.53 817.655 li
538.031 817.655 li
538.031 829.665 li
546.53 829.665 li
546.53 827.415 li
540.588 827.415 li
540.588 824.678 li
546.404 824.678 li
546.404 822.426 li
540.588 822.426 li
540.588 819.907 li
546.53 819.907 li
cp
f
446.517 751.902 mo
474.372 751.902 li
474.372 663.962 li
446.517 663.962 li
446.517 751.902 li
cp
478.872 756.402 mo
442.017 756.402 li
442.017 659.462 li
478.872 659.462 li
478.872 756.402 li
cp
.0952911 .0952911 .0952911 rgb
f
455.761 705.683 mo
465.127 705.683 li
465.127 673.207 li
455.761 673.207 li
455.761 705.683 li
cp
469.627 710.183 mo
451.261 710.183 li
451.261 668.707 li
469.627 668.707 li
469.627 710.183 li
cp
f
460.444 733.292 mo
457.862 733.292 455.761 735.393 455.761 737.976 cv
455.761 740.559 457.862 742.66 460.444 742.66 cv
463.027 742.66 465.127 740.559 465.127 737.976 cv
465.127 735.393 463.027 733.292 460.444 733.292 cv
cp
460.444 747.16 mo
455.381 747.16 451.261 743.04 451.261 737.976 cv
451.261 732.913 455.381 728.792 460.444 728.792 cv
465.508 728.792 469.627 732.913 469.627 737.976 cv
469.627 743.04 465.508 747.16 460.444 747.16 cv
cp
f
462.694 724.111 mo
458.194 724.111 li
458.194 714.867 li
462.694 714.867 li
462.694 724.111 li
cp
f
488.34 751.902 mo
516.19 751.902 li
516.19 663.962 li
488.34 663.962 li
488.34 751.902 li
cp
520.69 756.402 mo
483.84 756.402 li
483.84 659.462 li
520.69 659.462 li
520.69 756.402 li
cp
f
497.584 705.683 mo
506.95 705.683 li
506.95 673.207 li
497.584 673.207 li
497.584 705.683 li
cp
511.45 710.183 mo
493.084 710.183 li
493.084 668.707 li
511.45 668.707 li
511.45 710.183 li
cp
f
502.267 733.292 mo
499.685 733.292 497.584 735.393 497.584 737.976 cv
497.584 740.559 499.685 742.66 502.267 742.66 cv
504.85 742.66 506.95 740.559 506.95 737.976 cv
506.95 735.393 504.85 733.292 502.267 733.292 cv
cp
502.267 747.16 mo
497.204 747.16 493.084 743.04 493.084 737.976 cv
493.084 732.913 497.204 728.792 502.267 728.792 cv
507.331 728.792 511.45 732.913 511.45 737.976 cv
511.45 743.04 507.331 747.16 502.267 747.16 cv
cp
f
504.517 724.111 mo
500.017 724.111 li
500.017 714.867 li
504.517 714.867 li
504.517 724.111 li
cp
f
530.163 751.902 mo
558.017 751.902 li
558.017 663.962 li
530.163 663.962 li
530.163 751.902 li
cp
562.517 756.402 mo
525.663 756.402 li
525.663 659.462 li
562.517 659.462 li
562.517 756.402 li
cp
f
539.407 705.683 mo
548.772 705.683 li
548.772 673.207 li
539.407 673.207 li
539.407 705.683 li
cp
553.272 710.183 mo
534.907 710.183 li
534.907 668.707 li
553.272 668.707 li
553.272 710.183 li
cp
f
544.095 733.292 mo
541.51 733.292 539.407 735.393 539.407 737.976 cv
539.407 740.559 541.51 742.66 544.095 742.66 cv
546.674 742.66 548.772 740.559 548.772 737.976 cv
548.772 735.393 546.674 733.292 544.095 733.292 cv
cp
544.095 747.16 mo
539.028 747.16 534.907 743.04 534.907 737.976 cv
534.907 732.913 539.028 728.792 544.095 728.792 cv
549.155 728.792 553.272 732.913 553.272 737.976 cv
553.272 743.04 549.155 747.16 544.095 747.16 cv
cp
f
546.345 724.111 mo
541.845 724.111 li
541.845 714.867 li
546.345 714.867 li
546.345 724.111 li
cp
f
434.517 763.902 mo
570.017 763.902 li
570.017 756.402 li
434.517 756.402 li
434.517 763.902 li
cp
574.517 768.402 mo
430.017 768.402 li
430.017 751.902 li
574.517 751.902 li
574.517 768.402 li
cp
f
446.517 773.152 mo
442.017 773.152 li
442.017 766.152 li
446.517 766.152 li
446.517 773.152 li
cp
f
562.517 773.152 mo
558.017 773.152 li
558.017 766.152 li
562.517 766.152 li
562.517 773.152 li
cp
f
685.707 820.942 mo
685.707 820.222 686.319 819.753 687.399 819.753 cv
688.624 819.753 689.921 820.167 690.893 821.068 cv
692.315 819.16 li
691.127 818.061 689.542 817.485 687.634 817.485 cv
684.808 817.485 683.079 819.141 683.079 821.14 cv
683.079 825.66 689.993 824.201 689.993 826.29 cv
689.993 826.992 689.326 827.622 687.903 827.622 cv
686.247 827.622 684.933 826.866 684.087 825.984 cv
682.683 827.982 li
683.817 829.117 685.474 829.89 687.796 829.89 cv
691.019 829.89 692.604 828.234 692.604 826.037 cv
692.604 821.554 685.707 822.833 685.707 820.942 cv
cp
.0980392 .0941176 .0941176 rgb
f
694.311 829.674 mo
702.81 829.674 li
702.81 827.423 li
696.867 827.423 li
696.867 824.687 li
702.683 824.687 li
702.683 822.436 li
696.867 822.436 li
696.867 819.916 li
702.81 819.916 li
702.81 817.665 li
694.311 817.665 li
694.311 829.674 li
cp
f
707.901 825.389 mo
709.773 820.222 li
711.646 825.389 li
707.901 825.389 li
cp
708.171 817.665 mo
703.544 829.674 li
706.442 829.674 li
707.198 827.64 li
712.349 827.64 li
713.104 829.674 li
716.003 829.674 li
711.376 817.665 li
708.171 817.665 li
cp
f
722.374 823.156 mo
719.673 823.156 li
719.673 819.916 li
722.374 819.916 li
723.382 819.916 724.156 820.528 724.156 821.518 cv
724.156 822.544 723.382 823.156 722.374 823.156 cv
cp
726.785 821.536 mo
726.785 819.303 725.236 817.665 722.733 817.665 cv
717.116 817.665 li
717.116 829.674 li
719.673 829.674 li
719.673 825.408 li
721.546 825.408 li
723.904 829.674 li
726.856 829.674 li
724.138 825.101 li
725.435 824.794 726.785 823.642 726.785 821.536 cv
cp
f
734.523 819.736 mo
735.748 819.736 736.828 820.509 737.333 821.482 cv
739.529 820.402 li
738.683 818.889 737.152 817.466 734.523 817.466 cv
730.904 817.466 728.114 819.969 728.114 823.679 cv
728.114 827.37 730.904 829.89 734.523 829.89 cv
737.152 829.89 738.683 828.432 739.529 826.937 cv
737.333 825.875 li
736.828 826.847 735.748 827.622 734.523 827.622 cv
732.327 827.622 730.742 825.947 730.742 823.679 cv
730.742 821.41 732.327 819.736 734.523 819.736 cv
cp
f
749.284 817.665 mo
749.284 822.382 li
743.612 822.382 li
743.612 817.665 li
741.056 817.665 li
741.056 829.674 li
743.612 829.674 li
743.612 824.615 li
749.284 824.615 li
749.284 829.674 li
751.858 829.674 li
751.858 817.665 li
749.284 817.665 li
cp
f
762.298 780.932 mo
666.157 780.932 li
666.157 651.432 li
740.6 651.432 li
762.298 673.139 li
762.298 726.702 li
757.798 726.702 li
757.798 675.002 li
738.734 655.932 li
670.657 655.932 li
670.657 776.432 li
757.798 776.432 li
757.798 763.411 li
762.298 763.411 li
762.298 780.932 li
cp
.0952911 .0952911 .0952911 rgb
f
760.044 676.317 mo
737.413 676.317 li
737.413 653.684 li
741.913 653.684 li
741.913 671.817 li
760.044 671.817 li
760.044 676.317 li
cp
f
714.226 745.805 mo
682.228 745.805 li
682.228 741.305 li
714.226 741.305 li
714.226 745.805 li
cp
f
746.228 755.733 mo
682.228 755.733 li
682.228 751.233 li
746.228 751.233 li
746.228 755.733 li
cp
f
746.228 765.661 mo
682.228 765.661 li
682.228 761.161 li
746.228 761.161 li
746.228 765.661 li
cp
f
714.438 684.849 mo
704.376 684.849 696.189 693.037 696.189 703.1 cv
696.189 713.164 704.376 721.351 714.438 721.351 cv
724.502 721.351 732.689 713.164 732.689 703.1 cv
732.689 693.037 724.502 684.849 714.438 684.849 cv
cp
714.438 725.851 mo
701.895 725.851 691.689 715.645 691.689 703.1 cv
691.689 690.555 701.895 680.349 714.438 680.349 cv
726.983 680.349 737.189 690.555 737.189 703.1 cv
737.189 715.645 726.983 725.851 714.438 725.851 cv
cp
f
714.44 677.045 mo
700.074 677.047 688.386 688.735 688.386 703.1 cv
688.385 710.059 691.095 716.602 696.016 721.523 cv
700.938 726.445 707.48 729.155 714.44 729.155 cv
728.806 729.155 740.493 717.466 740.493 703.1 cv
740.493 688.734 728.806 677.045 714.44 677.045 cv
cp
714.44 733.655 mo
706.278 733.655 698.605 730.476 692.834 724.705 cv
687.063 718.933 683.885 711.26 683.886 703.1 cv
683.886 686.254 697.593 672.547 714.44 672.545 cv
731.287 672.545 744.993 686.252 744.993 703.1 cv
744.993 719.948 731.287 733.655 714.44 733.655 cv
cp
f
738.869 730.71 mo
732.863 724.707 li
736.045 721.525 li
742.051 727.529 li
738.869 730.71 li
cp
f
739.638 733.123 mo
758.064 751.544 li
759.354 752.838 761.598 752.833 762.88 751.547 cv
763.528 750.901 763.883 750.045 763.884 749.132 cv
763.884 748.225 763.528 747.368 762.883 746.722 cv
744.458 728.3 li
739.638 733.123 li
cp
760.472 757.045 mo
758.357 757.045 756.371 756.22 754.88 754.723 cv
733.274 733.125 li
744.458 721.935 li
766.064 743.541 li
767.561 745.036 768.384 747.023 768.384 749.135 cv
768.381 751.254 767.557 753.24 766.062 754.729 cv
764.576 756.22 762.589 757.045 760.472 757.045 cv
cp
f
703.689 703.1 mo
699.189 703.1 li
699.189 694.691 706.03 687.849 714.438 687.849 cv
714.438 692.349 li
708.512 692.349 703.689 697.172 703.689 703.1 cv
cp
f
35.8906 825.172 mo
32.9736 817.664 li
29.3906 817.664 li
29.3906 829.673 li
31.9473 829.673 li
31.9473 821.013 li
35.333 829.673 li
36.4492 829.673 li
39.834 821.013 li
39.834 829.673 li
42.4082 829.673 li
42.4082 817.664 li
38.8076 817.664 li
35.8906 825.172 li
cp
.0980392 .0941176 .0941176 rgb
f
47.8779 825.388 mo
49.75 820.221 li
51.623 825.388 li
47.8779 825.388 li
cp
48.1475 817.664 mo
43.5205 829.673 li
46.4189 829.673 li
47.1758 827.639 li
52.3252 827.639 li
53.0811 829.673 li
55.9805 829.673 li
51.3525 817.664 li
48.1475 817.664 li
cp
f
65.2852 825.208 mo
59.7217 817.664 li
57.0928 817.664 li
57.0928 829.673 li
59.6494 829.673 li
59.6494 821.841 li
65.375 829.673 li
67.8418 829.673 li
67.8418 817.664 li
65.2852 817.664 li
65.2852 825.208 li
cp
f
73.3115 825.388 mo
75.1836 820.221 li
77.0566 825.388 li
73.3115 825.388 li
cp
73.5811 817.664 mo
68.9541 829.673 li
71.8525 829.673 li
72.6094 827.639 li
77.7588 827.639 li
78.5146 829.673 li
81.4141 829.673 li
76.7861 817.664 li
73.5811 817.664 li
cp
f
87.1182 825.263 mo
90.2871 825.263 li
90.2871 826.703 li
89.8008 827.154 88.8105 827.621 87.748 827.621 cv
85.5518 827.621 83.9678 825.947 83.9678 823.678 cv
83.9678 821.41 85.5518 819.735 87.748 819.735 cv
89.0088 819.735 90.0352 820.455 90.5938 821.301 cv
92.7002 820.149 li
91.7998 818.726 90.2334 817.466 87.748 817.466 cv
84.2197 817.466 81.3389 819.878 81.3389 823.678 cv
81.3389 827.458 84.2197 829.89 87.748 829.89 cv
89.9092 829.89 91.6191 829.007 92.8438 827.639 cv
92.8438 823.03 li
87.1182 823.03 li
87.1182 825.263 li
cp
f
94.875 829.673 mo
103.373 829.673 li
103.373 827.423 li
97.4316 827.423 li
97.4316 824.687 li
103.247 824.687 li
103.247 822.435 li
97.4316 822.435 li
97.4316 819.916 li
103.373 819.916 li
103.373 817.664 li
94.875 817.664 li
94.875 829.673 li
cp
f
110.626 823.156 mo
107.925 823.156 li
107.925 819.916 li
110.626 819.916 li
111.634 819.916 112.408 820.527 112.408 821.517 cv
112.408 822.544 111.634 823.156 110.626 823.156 cv
cp
112.391 825.101 mo
113.687 824.794 115.037 823.642 115.037 821.535 cv
115.037 819.302 113.488 817.664 110.986 817.664 cv
105.368 817.664 li
105.368 829.673 li
107.925 829.673 li
107.925 825.407 li
109.798 825.407 li
112.156 829.673 li
115.109 829.673 li
112.391 825.101 li
cp
f
79.3711 720.581 mo
74.8711 720.581 li
74.8711 713.329 li
69.6289 713.329 li
69.6289 720.581 li
65.1289 720.581 li
65.1289 708.829 li
79.3711 708.829 li
79.3711 720.581 li
cp
.0952911 .0952911 .0952911 rgb
f
79.3711 748.118 mo
65.1289 748.118 li
65.1289 737.417 li
69.6289 737.417 li
69.6289 743.618 li
74.8711 743.618 li
74.8711 737.417 li
79.3711 737.417 li
79.3711 748.118 li
cp
f
74.5 770.485 mo
70 770.485 li
70 745.868 li
74.5 745.868 li
74.5 770.485 li
cp
f
104.71 770.485 mo
100.21 770.485 li
100.21 768.258 99.3428 766.165 97.7681 764.589 cv
96.1934 763.014 94.0991 762.147 91.8711 762.147 cv
52.6289 762.147 li
50.4009 762.147 48.3066 763.014 46.7314 764.589 cv
45.1572 766.166 44.29 768.259 44.29 770.485 cv
39.79 770.485 li
39.79 767.058 41.125 763.834 43.5488 761.409 cv
45.9746 758.983 49.1992 757.647 52.6289 757.647 cv
91.8711 757.647 li
95.3008 757.647 98.5254 758.983 100.95 761.408 cv
103.375 763.833 104.71 767.057 104.71 770.485 cv
cp
f
72.25 778.69 mo
70.8042 778.69 69.6279 779.866 69.6279 781.311 cv
69.6279 782.756 70.8042 783.932 72.25 783.932 cv
73.6953 783.932 74.8711 782.756 74.8711 781.311 cv
74.8711 779.866 73.6953 778.69 72.25 778.69 cv
cp
72.25 788.432 mo
68.3228 788.432 65.1279 785.238 65.1279 781.311 cv
65.1279 777.384 68.3228 774.19 72.25 774.19 cv
76.1768 774.19 79.3711 777.384 79.3711 781.311 cv
79.3711 785.238 76.1768 788.432 72.25 788.432 cv
cp
f
42.04 778.69 mo
40.5942 778.69 39.418 779.866 39.418 781.311 cv
39.418 782.756 40.5942 783.932 42.04 783.932 cv
43.4854 783.932 44.6611 782.756 44.6611 781.311 cv
44.6611 779.866 43.4854 778.69 42.04 778.69 cv
cp
42.04 788.432 mo
38.1128 788.432 34.918 785.238 34.918 781.311 cv
34.918 777.384 38.1128 774.19 42.04 774.19 cv
45.9668 774.19 49.1611 777.384 49.1611 781.311 cv
49.1611 785.238 45.9668 788.432 42.04 788.432 cv
cp
f
102.46 778.69 mo
101.015 778.69 99.8398 779.866 99.8398 781.311 cv
99.8398 782.756 101.015 783.932 102.46 783.932 cv
103.906 783.932 105.082 782.756 105.082 781.311 cv
105.082 779.866 103.906 778.69 102.46 778.69 cv
cp
102.46 788.432 mo
98.5337 788.432 95.3398 785.238 95.3398 781.311 cv
95.3398 777.384 98.5337 774.19 102.46 774.19 cv
106.387 774.19 109.582 777.384 109.582 781.311 cv
109.582 785.238 106.387 788.432 102.46 788.432 cv
cp
f
74.5 698.881 mo
70 698.881 li
70 694.381 li
74.5 694.381 li
74.5 698.881 li
cp
f
74.5 689.881 mo
70 689.881 li
70 685.381 li
74.5 685.381 li
74.5 689.881 li
cp
f
74.5 680.881 mo
70 680.881 li
70 676.381 li
74.5 676.381 li
74.5 680.881 li
cp
f
74.5 671.881 mo
70 671.881 li
70 667.381 li
74.5 667.381 li
74.5 671.881 li
cp
f
74.5 662.881 mo
70 662.881 li
70 658.381 li
74.5 658.381 li
74.5 662.881 li
cp
f
44.29 735.167 mo
100.21 735.167 li
100.21 731.17 li
100.21 728.941 99.3428 726.847 97.7686 725.274 cv
96.1934 723.698 94.0991 722.831 91.8711 722.831 cv
52.6289 722.831 li
50.4009 722.831 48.3066 723.698 46.7314 725.273 cv
45.1572 726.847 44.29 728.942 44.29 731.17 cv
44.29 735.167 li
cp
104.71 739.667 mo
39.79 739.667 li
39.79 731.17 li
39.79 727.74 41.125 724.515 43.5498 722.091 cv
45.9746 719.667 49.1992 718.331 52.6289 718.331 cv
91.8711 718.331 li
95.3008 718.331 98.5254 719.667 100.95 722.091 cv
103.375 724.514 104.71 727.739 104.71 731.17 cv
104.71 739.667 li
cp
f
60.3643 648.432 mo
58.2593 648.432 56.2266 649.196 54.6411 650.582 cv
53.0566 651.966 52.0288 653.878 51.7461 655.966 cv
44.7729 707.657 li
44.749 707.833 44.7495 708.169 45.0186 708.477 cv
45.2861 708.783 45.6211 708.829 45.7969 708.829 cv
98.7031 708.829 li
98.8784 708.829 99.2134 708.783 99.4844 708.474 cv
99.751 708.169 99.7515 707.831 99.728 707.657 cv
92.7534 655.965 li
92.4712 653.878 91.4434 651.966 89.8584 650.582 cv
88.2739 649.195 86.2417 648.432 84.1357 648.432 cv
60.3643 648.432 li
cp
98.7031 713.329 mo
45.7969 713.329 li
44.2012 713.329 42.6831 712.64 41.6318 711.44 cv
40.5781 710.234 40.0986 708.636 40.3135 707.053 cv
47.2866 655.364 li
47.7153 652.196 49.2749 649.294 51.6797 647.193 cv
54.0854 645.09 57.1694 643.932 60.3643 643.932 cv
84.1357 643.932 li
87.332 643.932 90.4165 645.09 92.8203 647.194 cv
95.2241 649.293 96.7847 652.196 97.2129 655.363 cv
104.188 707.055 li
104.401 708.64 103.92 710.238 102.869 711.439 cv
101.815 712.641 100.297 713.329 98.7031 713.329 cv
cp
f
105.716 733.731 mo
101.377 733.731 li
101.377 729.231 li
105.716 729.231 li
107.942 729.231 110.037 728.364 111.612 726.788 cv
113.188 725.212 114.056 723.119 114.056 720.891 cv
114.056 705.756 li
118.556 705.756 li
118.556 720.891 li
118.556 724.32 117.22 727.544 114.794 729.97 cv
112.368 732.396 109.144 733.731 105.716 733.731 cv
cp
f
111.556 703.506 mo
121.056 703.506 li
121.056 702.756 li
121.056 700.137 118.925 698.006 116.306 698.006 cv
113.687 698.006 111.556 700.137 111.556 702.756 cv
111.556 703.506 li
cp
125.556 708.006 mo
107.056 708.006 li
107.056 702.756 li
107.056 697.656 111.205 693.506 116.306 693.506 cv
121.406 693.506 125.556 697.656 125.556 702.756 cv
125.556 708.006 li
cp
f
43.123 733.731 mo
38.7852 733.731 li
35.3564 733.731 32.1323 732.396 29.7061 729.971 cv
27.2803 727.544 25.9443 724.32 25.9443 720.891 cv
25.9443 705.756 li
30.4443 705.756 li
30.4443 720.891 li
30.4443 723.119 31.312 725.212 32.8877 726.789 cv
34.4634 728.364 36.5581 729.231 38.7852 729.231 cv
43.123 729.231 li
43.123 733.731 li
cp
f
23.4443 703.506 mo
32.9443 703.506 li
32.9443 702.756 li
32.9443 700.137 30.8135 698.006 28.1943 698.006 cv
25.5752 698.006 23.4443 700.137 23.4443 702.756 cv
23.4443 703.506 li
cp
37.4443 708.006 mo
18.9443 708.006 li
18.9443 702.756 li
18.9443 697.656 23.0938 693.506 28.1943 693.506 cv
33.2949 693.506 37.4443 697.656 37.4443 702.756 cv
37.4443 708.006 li
cp
f
248.327 1044.67 mo
250.884 1044.67 li
250.884 1032.66 li
248.327 1032.66 li
248.327 1044.67 li
cp
.0980392 .0941176 .0941176 rgb
f
257.994 1042.42 mo
255.815 1042.42 li
255.815 1034.91 li
258.012 1034.91 li
260.461 1034.91 261.757 1036.55 261.757 1038.66 cv
261.757 1040.71 260.371 1042.42 257.994 1042.42 cv
cp
257.994 1032.66 mo
253.259 1032.66 li
253.259 1044.67 li
258.012 1044.67 li
261.757 1044.67 264.368 1042.3 264.368 1038.66 cv
264.368 1035.06 261.757 1032.66 257.994 1032.66 cv
cp
f
266.183 1044.67 mo
274.681 1044.67 li
274.681 1042.42 li
268.739 1042.42 li
268.739 1039.68 li
274.555 1039.68 li
274.555 1037.43 li
268.739 1037.43 li
268.739 1034.91 li
274.681 1034.91 li
274.681 1032.66 li
266.183 1032.66 li
266.183 1044.67 li
cp
f
284.869 1040.21 mo
279.305 1032.66 li
276.676 1032.66 li
276.676 1044.67 li
279.233 1044.67 li
279.233 1036.84 li
284.958 1044.67 li
287.425 1044.67 li
287.425 1032.66 li
284.869 1032.66 li
284.869 1040.21 li
cp
f
289.06 1034.91 mo
292.57 1034.91 li
292.57 1044.67 li
295.146 1044.67 li
295.146 1034.91 li
298.638 1034.91 li
298.638 1032.66 li
289.06 1032.66 li
289.06 1034.91 li
cp
f
300.273 1044.67 mo
302.83 1044.67 li
302.83 1032.66 li
300.273 1032.66 li
300.273 1044.67 li
cp
f
304.467 1034.91 mo
307.978 1034.91 li
307.978 1044.67 li
310.553 1044.67 li
310.553 1034.91 li
314.045 1034.91 li
314.045 1032.66 li
304.467 1032.66 li
304.467 1034.91 li
cp
f
323.279 1032.66 mo
320.308 1037.47 li
317.337 1032.66 li
314.42 1032.66 li
319.029 1039.76 li
319.029 1044.67 li
321.586 1044.67 li
321.586 1039.76 li
326.178 1032.66 li
323.279 1032.66 li
cp
f
226.937 912.125 mo
347.568 912.125 li
347.568 897.148 li
297.292 897.148 li
297.292 906.886 li
277.212 906.886 li
277.212 897.148 li
226.937 897.148 li
226.937 912.125 li
cp
352.068 916.625 mo
222.437 916.625 li
222.437 892.648 li
281.712 892.648 li
281.712 902.386 li
292.792 902.386 li
292.792 892.648 li
352.068 892.648 li
352.068 916.625 li
cp
.0952911 .0952911 .0952911 rgb
f
352.068 984.302 mo
222.437 984.302 li
222.437 914.375 li
226.937 914.375 li
226.937 979.802 li
347.568 979.802 li
347.568 914.375 li
352.068 914.375 li
352.068 984.302 li
cp
f
274.974 972.072 mo
270.474 972.072 li
270.474 963.417 li
270.474 961.283 269.641 959.276 268.129 957.765 cv
266.606 956.253 264.594 955.417 262.468 955.417 cv
249.79 955.417 li
247.653 955.417 245.646 956.25 244.137 957.762 cv
242.621 959.276 241.787 961.283 241.787 963.417 cv
241.787 972.072 li
237.287 972.072 li
237.287 963.417 li
237.287 960.079 238.59 956.94 240.956 954.581 cv
243.311 952.219 246.45 950.917 249.79 950.917 cv
262.468 950.917 li
265.79 950.917 268.928 952.217 271.305 954.577 cv
273.673 956.943 274.974 960.081 274.974 963.417 cv
274.974 972.072 li
cp
f
256.13 929.041 mo
252.002 929.041 248.644 932.399 248.644 936.527 cv
248.644 940.656 252.002 944.015 256.13 944.015 cv
260.256 944.015 263.612 940.656 263.612 936.527 cv
263.612 932.399 260.256 929.041 256.13 929.041 cv
cp
256.13 948.515 mo
249.521 948.515 244.144 943.137 244.144 936.527 cv
244.144 929.917 249.521 924.541 256.13 924.541 cv
262.737 924.541 268.112 929.917 268.112 936.527 cv
268.112 943.137 262.737 948.515 256.13 948.515 cv
cp
f
258.378 967.572 mo
253.878 967.572 li
253.878 972.072 li
258.378 972.072 li
258.378 967.572 li
cp
f
258.378 959.962 mo
253.878 959.962 li
253.878 964.462 li
258.378 964.462 li
258.378 959.962 li
cp
f
339.837 950.462 mo
287.983 950.462 li
287.983 945.962 li
339.837 945.962 li
339.837 950.462 li
cp
f
339.837 961.175 mo
287.983 961.175 li
287.983 956.675 li
339.837 956.675 li
339.837 961.175 li
cp
f
316.101 971.886 mo
287.983 971.886 li
287.983 967.386 li
316.101 967.386 li
316.101 971.886 li
cp
f
281.712 902.386 mo
292.792 902.386 li
292.792 888.082 li
292.792 886.601 292.216 885.21 291.171 884.166 cv
290.124 883.119 288.733 882.542 287.252 882.542 cv
285.772 882.542 284.381 883.119 283.334 884.165 cv
282.289 885.21 281.712 886.601 281.712 888.082 cv
281.712 902.386 li
cp
297.292 906.886 mo
277.212 906.886 li
277.212 888.082 li
277.212 885.399 278.257 882.877 280.153 880.982 cv
282.049 879.086 284.57 878.042 287.252 878.042 cv
289.935 878.042 292.456 879.086 294.352 880.983 cv
296.248 882.877 297.292 885.399 297.292 888.082 cv
297.292 906.886 li
cp
f
285.002 888.082 mo
285.002 889.325 286.01 890.332 287.252 890.332 cv
288.495 890.332 289.502 889.325 289.502 888.082 cv
289.502 886.838 288.495 885.832 287.252 885.832 cv
286.01 885.832 285.002 886.838 285.002 888.082 cv
cp
f
292.483 937.687 mo
335.337 937.687 li
335.337 926.605 li
292.483 926.605 li
292.483 937.687 li
cp
339.837 942.187 mo
287.983 942.187 li
287.983 922.105 li
339.837 922.105 li
339.837 942.187 li
cp
f
329.472 934.396 mo
298.348 934.396 li
298.348 929.896 li
329.472 929.896 li
329.472 934.396 li
cp
f
30.168 1041.33 mo
27.8994 1032.65 li
25.9014 1032.65 li
23.6143 1041.33 li
21.5078 1032.65 li
18.6445 1032.65 li
22.084 1044.66 li
24.8027 1044.66 li
26.8916 1036.42 li
28.998 1044.66 li
31.7168 1044.66 li
35.1377 1032.65 li
32.2744 1032.65 li
30.168 1041.33 li
cp
.0980392 .0941176 .0941176 rgb
f
41.6865 1042.61 mo
39.4541 1042.61 38.0322 1040.9 38.0322 1038.67 cv
38.0322 1036.42 39.4541 1034.72 41.6865 1034.72 cv
43.9014 1034.72 45.3242 1036.42 45.3242 1038.67 cv
45.3242 1040.9 43.9014 1042.61 41.6865 1042.61 cv
cp
41.6865 1032.46 mo
38.0498 1032.46 35.4033 1035.05 35.4033 1038.67 cv
35.4033 1042.29 38.0498 1044.88 41.6865 1044.88 cv
45.3057 1044.88 47.9531 1042.29 47.9531 1038.67 cv
47.9531 1035.05 45.3057 1032.46 41.6865 1032.46 cv
cp
f
55.0068 1038.15 mo
52.3057 1038.15 li
52.3057 1034.9 li
55.0068 1034.9 li
56.0146 1034.9 56.7891 1035.52 56.7891 1036.51 cv
56.7891 1037.53 56.0146 1038.15 55.0068 1038.15 cv
cp
59.418 1036.52 mo
59.418 1034.29 57.8691 1032.65 55.3672 1032.65 cv
49.749 1032.65 li
49.749 1044.66 li
52.3057 1044.66 li
52.3057 1040.4 li
54.1787 1040.4 li
56.5371 1044.66 li
59.4902 1044.66 li
56.7715 1040.09 li
58.0674 1039.78 59.418 1038.63 59.418 1036.52 cv
cp
f
71.2803 1032.65 mo
68.1289 1032.65 li
63.8799 1038 li
63.8799 1032.65 li
61.3232 1032.65 li
61.3232 1044.66 li
63.8799 1044.66 li
63.8799 1040.97 li
64.8164 1039.84 li
68.4531 1044.66 li
71.6035 1044.66 li
66.5088 1038.29 li
71.2803 1032.65 li
cp
f
78.0283 1038.13 mo
75.3271 1038.13 li
75.3271 1034.9 li
78.0283 1034.9 li
79.0361 1034.9 79.8105 1035.52 79.8105 1036.52 cv
79.8105 1037.51 79.0361 1038.13 78.0283 1038.13 cv
cp
78.3887 1032.65 mo
72.7705 1032.65 li
72.7705 1044.66 li
75.3271 1044.66 li
75.3271 1040.38 li
78.3887 1040.38 li
80.9814 1040.38 82.4219 1038.61 82.4219 1036.52 cv
82.4219 1034.42 80.999 1032.65 78.3887 1032.65 cv
cp
f
86.4873 1032.65 mo
83.9131 1032.65 li
83.9131 1044.66 li
91.5645 1044.66 li
91.5645 1042.41 li
86.4873 1042.41 li
86.4873 1032.65 li
cp
f
96.3877 1040.38 mo
98.2598 1035.21 li
100.133 1040.38 li
96.3877 1040.38 li
cp
96.6572 1032.65 mo
92.0303 1044.66 li
94.9287 1044.66 li
95.6855 1042.63 li
100.835 1042.63 li
101.591 1044.66 li
104.49 1044.66 li
99.8623 1032.65 li
96.6572 1032.65 li
cp
f
110.824 1034.72 mo
112.049 1034.72 113.129 1035.5 113.634 1036.47 cv
115.83 1035.39 li
114.983 1033.88 113.453 1032.46 110.824 1032.46 cv
107.205 1032.46 104.415 1034.96 104.415 1038.67 cv
104.415 1042.36 107.205 1044.88 110.824 1044.88 cv
113.453 1044.88 114.983 1043.42 115.83 1041.93 cv
113.634 1040.86 li
113.129 1041.84 112.049 1042.61 110.824 1042.61 cv
108.628 1042.61 107.044 1040.94 107.044 1038.67 cv
107.044 1036.4 108.628 1034.72 110.824 1034.72 cv
cp
f
125.855 1034.9 mo
125.855 1032.65 li
117.356 1032.65 li
117.356 1044.66 li
125.855 1044.66 li
125.855 1042.41 li
119.913 1042.41 li
119.913 1039.67 li
125.729 1039.67 li
125.729 1037.42 li
119.913 1037.42 li
119.913 1034.9 li
125.855 1034.9 li
cp
f
144.5 953.893 mo
0 953.893 li
0 939.213 li
15.25 939.213 li
15.25 943.713 li
4.5 943.713 li
4.5 949.393 li
140 949.393 li
140 943.713 li
129.25 943.713 li
129.25 939.213 li
144.5 939.213 li
144.5 953.893 li
cp
.0952911 .0952911 .0952911 rgb
f
131.5 982.336 mo
127 982.336 li
127 953.891 li
121.315 953.891 li
121.315 982.336 li
116.815 982.336 li
116.815 949.391 li
131.5 949.391 li
131.5 982.336 li
cp
f
27.6816 982.336 mo
23.1816 982.336 li
23.1816 953.891 li
17.5 953.891 li
17.5 982.336 li
13 982.336 li
13 949.391 li
27.6816 949.391 li
27.6816 982.336 li
cp
f
32.9473 930.813 mo
111.551 930.813 li
111.551 882.774 li
111.551 882.637 111.489 882.492 111.385 882.385 cv
111.271 882.277 111.129 882.258 111.036 882.258 cv
33.4639 882.258 li
33.3994 882.258 33.2349 882.273 33.1035 882.405 cv
32.9624 882.546 32.9473 882.71 32.9473 882.774 cv
32.9473 930.813 li
cp
116.051 935.313 mo
28.4473 935.313 li
28.4473 882.774 li
28.4473 881.458 28.9814 880.166 29.9136 879.231 cv
30.8423 878.295 32.1372 877.758 33.4639 877.758 cv
111.036 877.758 li
112.344 877.758 113.596 878.269 114.561 879.197 cv
115.528 880.193 116.051 881.476 116.051 882.774 cv
116.051 935.313 li
cp
f
40.6113 930.813 mo
103.893 930.813 li
103.893 889.924 li
40.6113 889.924 li
40.6113 930.813 li
cp
108.393 935.313 mo
36.1113 935.313 li
36.1113 885.424 li
108.393 885.424 li
108.393 935.313 li
cp
f
24.5 935.313 mo
24.5 937.77 li
24.5 938.149 24.6528 938.518 24.9194 938.783 cv
25.1948 939.056 25.5688 939.213 25.9443 939.213 cv
118.556 939.213 li
118.935 939.213 119.301 939.059 119.586 938.778 cv
119.947 938.424 120 937.995 120 937.77 cv
120 935.313 li
24.5 935.313 li
cp
118.556 943.713 mo
25.9443 943.713 li
24.3682 943.713 22.8784 943.097 21.7495 941.977 cv
20.6372 940.873 20 939.339 20 937.77 cv
20 930.813 li
124.5 930.813 li
124.5 937.77 li
124.5 939.377 123.875 940.875 122.741 941.987 cv
121.614 943.098 120.125 943.713 118.556 943.713 cv
cp
f
65.5 925.313 mo
61 925.313 li
61 920.813 li
65.5 920.813 li
65.5 925.313 li
cp
f
74.5 925.313 mo
70 925.313 li
70 920.813 li
74.5 920.813 li
74.5 925.313 li
cp
f
83.5 925.313 mo
79 925.313 li
79 920.813 li
83.5 920.813 li
83.5 925.313 li
cp
f
479.452 1042.61 mo
477.219 1042.61 475.797 1040.9 475.797 1038.67 cv
475.797 1036.42 477.219 1034.72 479.452 1034.72 cv
481.667 1034.72 483.089 1036.42 483.089 1038.67 cv
483.089 1040.9 481.667 1042.61 479.452 1042.61 cv
cp
479.452 1032.46 mo
475.814 1032.46 473.168 1035.05 473.168 1038.67 cv
473.168 1042.29 475.814 1044.88 479.452 1044.88 cv
483.071 1044.88 485.718 1042.29 485.718 1038.67 cv
485.718 1035.05 483.071 1032.46 479.452 1032.46 cv
cp
.0980392 .0941176 .0941176 rgb
f
487.514 1044.66 mo
490.071 1044.66 li
490.071 1039.67 li
495.887 1039.67 li
495.887 1037.42 li
490.071 1037.42 li
490.071 1034.9 li
496.013 1034.9 li
496.013 1032.65 li
487.514 1032.65 li
487.514 1044.66 li
cp
f
497.792 1044.66 mo
500.349 1044.66 li
500.349 1039.67 li
506.165 1039.67 li
506.165 1037.42 li
500.349 1037.42 li
500.349 1034.9 li
506.29 1034.9 li
506.29 1032.65 li
497.792 1032.65 li
497.792 1044.66 li
cp
f
508.069 1044.66 mo
510.626 1044.66 li
510.626 1032.65 li
508.069 1032.65 li
508.069 1044.66 li
cp
f
518.835 1034.72 mo
520.06 1034.72 521.14 1035.5 521.644 1036.47 cv
523.841 1035.39 li
522.993 1033.88 521.464 1032.46 518.835 1032.46 cv
515.216 1032.46 512.425 1034.96 512.425 1038.67 cv
512.425 1042.36 515.216 1044.88 518.835 1044.88 cv
521.464 1044.88 522.993 1043.42 523.841 1041.93 cv
521.644 1040.86 li
521.14 1041.84 520.06 1042.61 518.835 1042.61 cv
516.638 1042.61 515.054 1040.94 515.054 1038.67 cv
515.054 1036.4 516.638 1034.72 518.835 1034.72 cv
cp
f
533.866 1034.9 mo
533.866 1032.65 li
525.366 1032.65 li
525.366 1044.66 li
533.866 1044.66 li
533.866 1042.41 li
527.923 1042.41 li
527.923 1039.67 li
533.739 1039.67 li
533.739 1037.42 li
527.923 1037.42 li
527.923 1034.9 li
533.866 1034.9 li
cp
f
554.517 996.422 mo
562.517 996.422 li
562.517 948.422 li
552.517 948.422 li
552.517 898.422 li
542.517 898.422 li
542.517 888.422 li
537.017 888.422 li
537.017 918.422 li
524.517 918.422 li
524.517 936.422 li
544.517 936.422 li
544.517 956.422 li
554.517 956.422 li
554.517 996.422 li
cp
567.017 1000.92 mo
550.017 1000.92 li
550.017 960.922 li
540.017 960.922 li
540.017 940.922 li
520.017 940.922 li
520.017 913.922 li
532.517 913.922 li
532.517 883.922 li
547.017 883.922 li
547.017 893.922 li
557.017 893.922 li
557.017 943.922 li
567.017 943.922 li
567.017 1000.92 li
cp
.0952911 .0952911 .0952911 rgb
f
454.517 956.422 mo
460.017 956.422 li
460.017 936.422 li
480.017 936.422 li
480.017 928.422 li
467.517 928.422 li
467.517 918.422 li
457.517 918.422 li
457.517 908.422 li
454.517 908.422 li
454.517 956.422 li
cp
444.517 996.422 mo
450.017 996.422 li
450.017 968.422 li
444.517 968.422 li
444.517 996.422 li
cp
454.517 1000.92 mo
440.017 1000.92 li
440.017 963.922 li
450.017 963.922 li
450.017 903.922 li
462.017 903.922 li
462.017 913.922 li
472.017 913.922 li
472.017 923.922 li
484.517 923.922 li
484.517 940.922 li
464.517 940.922 li
464.517 960.922 li
454.517 960.922 li
454.517 1000.92 li
cp
f
504.767 881.172 mo
499.767 881.172 li
499.767 876.172 li
504.767 876.172 li
504.767 881.172 li
cp
f
504.767 891.172 mo
499.767 891.172 li
499.767 886.172 li
504.767 886.172 li
504.767 891.172 li
cp
f
504.767 901.172 mo
499.767 901.172 li
499.767 896.172 li
504.767 896.172 li
504.767 901.172 li
cp
f
504.767 911.172 mo
499.767 911.172 li
499.767 906.172 li
504.767 906.172 li
504.767 911.172 li
cp
f
504.767 921.172 mo
499.767 921.172 li
499.767 916.172 li
504.767 916.172 li
504.767 921.172 li
cp
f
504.767 931.172 mo
499.767 931.172 li
499.767 926.172 li
504.767 926.172 li
504.767 931.172 li
cp
f
504.767 941.172 mo
499.767 941.172 li
499.767 936.172 li
504.767 936.172 li
504.767 941.172 li
cp
f
504.767 951.172 mo
499.767 951.172 li
499.767 946.172 li
504.767 946.172 li
504.767 951.172 li
cp
f
504.767 961.172 mo
499.767 961.172 li
499.767 956.172 li
504.767 956.172 li
504.767 961.172 li
cp
f
504.767 971.172 mo
499.767 971.172 li
499.767 966.172 li
504.767 966.172 li
504.767 971.172 li
cp
f
504.767 981.172 mo
499.767 981.172 li
499.767 976.172 li
504.767 976.172 li
504.767 981.172 li
cp
f
504.767 991.172 mo
499.767 991.172 li
499.767 986.172 li
504.767 986.172 li
504.767 991.172 li
cp
f
514.767 901.172 mo
509.767 901.172 li
509.767 896.172 li
514.767 896.172 li
514.767 901.172 li
cp
f
514.767 911.172 mo
509.767 911.172 li
509.767 906.172 li
514.767 906.172 li
514.767 911.172 li
cp
f
514.767 921.172 mo
509.767 921.172 li
509.767 916.172 li
514.767 916.172 li
514.767 921.172 li
cp
f
514.767 931.172 mo
509.767 931.172 li
509.767 926.172 li
514.767 926.172 li
514.767 931.172 li
cp
f
514.767 941.172 mo
509.767 941.172 li
509.767 936.172 li
514.767 936.172 li
514.767 941.172 li
cp
f
514.767 951.172 mo
509.767 951.172 li
509.767 946.172 li
514.767 946.172 li
514.767 951.172 li
cp
f
514.767 961.172 mo
509.767 961.172 li
509.767 956.172 li
514.767 956.172 li
514.767 961.172 li
cp
f
514.767 971.172 mo
509.767 971.172 li
509.767 966.172 li
514.767 966.172 li
514.767 971.172 li
cp
f
514.767 981.172 mo
509.767 981.172 li
509.767 976.172 li
514.767 976.172 li
514.767 981.172 li
cp
f
514.767 991.172 mo
509.767 991.172 li
509.767 986.172 li
514.767 986.172 li
514.767 991.172 li
cp
f
494.767 901.172 mo
489.767 901.172 li
489.767 896.172 li
494.767 896.172 li
494.767 901.172 li
cp
f
494.767 911.172 mo
489.767 911.172 li
489.767 906.172 li
494.767 906.172 li
494.767 911.172 li
cp
f
494.767 921.172 mo
489.767 921.172 li
489.767 916.172 li
494.767 916.172 li
494.767 921.172 li
cp
f
494.767 931.172 mo
489.767 931.172 li
489.767 926.172 li
494.767 926.172 li
494.767 931.172 li
cp
f
494.767 941.172 mo
489.767 941.172 li
489.767 936.172 li
494.767 936.172 li
494.767 941.172 li
cp
f
494.767 951.172 mo
489.767 951.172 li
489.767 946.172 li
494.767 946.172 li
494.767 951.172 li
cp
f
494.767 961.172 mo
489.767 961.172 li
489.767 956.172 li
494.767 956.172 li
494.767 961.172 li
cp
f
494.767 971.172 mo
489.767 971.172 li
489.767 966.172 li
494.767 966.172 li
494.767 971.172 li
cp
f
494.767 981.172 mo
489.767 981.172 li
489.767 976.172 li
494.767 976.172 li
494.767 981.172 li
cp
f
494.767 991.172 mo
489.767 991.172 li
489.767 986.172 li
494.767 986.172 li
494.767 991.172 li
cp
f
484.517 996.422 mo
520.017 996.422 li
520.017 890.922 li
510.017 890.922 li
510.017 870.922 li
494.517 870.922 li
494.517 890.922 li
484.517 890.922 li
484.517 996.422 li
cp
524.517 1000.92 mo
480.017 1000.92 li
480.017 886.422 li
490.017 886.422 li
490.017 866.422 li
514.517 866.422 li
514.517 886.422 li
524.517 886.422 li
524.517 1000.92 li
cp
f
504.517 868.672 mo
500.017 868.672 li
500.017 861.172 li
504.517 861.172 li
504.517 868.672 li
cp
f
534.767 951.172 mo
529.767 951.172 li
529.767 946.172 li
534.767 946.172 li
534.767 951.172 li
cp
f
534.767 961.172 mo
529.767 961.172 li
529.767 956.172 li
534.767 956.172 li
534.767 961.172 li
cp
f
534.767 971.172 mo
529.767 971.172 li
529.767 966.172 li
534.767 966.172 li
534.767 971.172 li
cp
f
534.767 981.172 mo
529.767 981.172 li
529.767 976.172 li
534.767 976.172 li
534.767 981.172 li
cp
f
534.767 991.172 mo
529.767 991.172 li
529.767 986.172 li
534.767 986.172 li
534.767 991.172 li
cp
f
544.767 971.172 mo
539.767 971.172 li
539.767 966.172 li
544.767 966.172 li
544.767 971.172 li
cp
f
544.767 981.172 mo
539.767 981.172 li
539.767 976.172 li
544.767 976.172 li
544.767 981.172 li
cp
f
544.767 991.172 mo
539.767 991.172 li
539.767 986.172 li
544.767 986.172 li
544.767 991.172 li
cp
f
524.517 996.422 mo
550.017 996.422 li
550.017 960.922 li
540.017 960.922 li
540.017 940.922 li
524.517 940.922 li
524.517 996.422 li
cp
554.517 1000.92 mo
520.017 1000.92 li
520.017 936.422 li
544.517 936.422 li
544.517 956.422 li
554.517 956.422 li
554.517 1000.92 li
cp
f
469.767 951.172 mo
474.767 951.172 li
474.767 946.172 li
469.767 946.172 li
469.767 951.172 li
cp
f
469.767 961.172 mo
474.767 961.172 li
474.767 956.172 li
469.767 956.172 li
469.767 961.172 li
cp
f
469.767 971.172 mo
474.767 971.172 li
474.767 966.172 li
469.767 966.172 li
469.767 971.172 li
cp
f
469.767 981.172 mo
474.767 981.172 li
474.767 976.172 li
469.767 976.172 li
469.767 981.172 li
cp
f
469.767 991.172 mo
474.767 991.172 li
474.767 986.172 li
469.767 986.172 li
469.767 991.172 li
cp
f
459.767 971.172 mo
464.767 971.172 li
464.767 966.172 li
459.767 966.172 li
459.767 971.172 li
cp
f
459.767 981.172 mo
464.767 981.172 li
464.767 976.172 li
459.767 976.172 li
459.767 981.172 li
cp
f
459.767 991.172 mo
464.767 991.172 li
464.767 986.172 li
459.767 986.172 li
459.767 991.172 li
cp
f
454.517 996.422 mo
480.017 996.422 li
480.017 940.922 li
464.517 940.922 li
464.517 960.922 li
454.517 960.922 li
454.517 996.422 li
cp
484.517 1000.92 mo
450.017 1000.92 li
450.017 956.422 li
460.017 956.422 li
460.017 936.422 li
484.517 936.422 li
484.517 1000.92 li
cp
f
665.612 1032.66 mo
656.034 1032.66 li
656.034 1034.91 li
659.544 1034.91 li
659.544 1044.67 li
662.12 1044.67 li
662.12 1034.91 li
665.612 1034.91 li
665.612 1032.66 li
cp
.0980392 .0941176 .0941176 rgb
f
669.192 1040.39 mo
671.065 1035.22 li
672.937 1040.39 li
669.192 1040.39 li
cp
669.462 1032.66 mo
664.835 1044.67 li
667.733 1044.67 li
668.489 1042.64 li
673.64 1042.64 li
674.396 1044.67 li
677.294 1044.67 li
672.667 1032.66 li
669.462 1032.66 li
cp
f
688.364 1032.66 mo
685.214 1032.66 li
680.964 1038.01 li
680.964 1032.66 li
678.407 1032.66 li
678.407 1044.67 li
680.964 1044.67 li
680.964 1040.98 li
681.899 1039.85 li
685.538 1044.67 li
688.688 1044.67 li
683.593 1038.3 li
688.364 1032.66 li
cp
f
689.854 1044.67 mo
698.354 1044.67 li
698.354 1042.42 li
692.411 1042.42 li
692.411 1039.68 li
698.228 1039.68 li
698.228 1037.43 li
692.411 1037.43 li
692.411 1034.91 li
698.354 1034.91 li
698.354 1032.66 li
689.854 1032.66 li
689.854 1044.67 li
cp
f
708.071 1040.39 mo
709.944 1035.22 li
711.817 1040.39 li
708.071 1040.39 li
cp
708.341 1032.66 mo
703.714 1044.67 li
706.612 1044.67 li
707.37 1042.64 li
712.519 1042.64 li
713.274 1044.67 li
716.175 1044.67 li
711.546 1032.66 li
708.341 1032.66 li
cp
f
727.782 1042.42 mo
724.47 1042.42 li
724.47 1039.68 li
727.782 1039.68 li
728.772 1039.68 729.313 1040.3 729.313 1041.05 cv
729.313 1041.92 728.737 1042.42 727.782 1042.42 cv
cp
724.47 1034.91 mo
727.675 1034.91 li
728.538 1034.91 729.079 1035.43 729.079 1036.17 cv
729.079 1036.95 728.538 1037.43 727.675 1037.43 cv
724.47 1037.43 li
724.47 1034.91 li
cp
729.618 1038.48 mo
730.753 1038.24 731.69 1037.22 731.69 1035.72 cv
731.69 1034.12 730.519 1032.66 728.233 1032.66 cv
721.913 1032.66 li
721.913 1044.67 li
728.431 1044.67 li
730.735 1044.67 731.923 1043.23 731.923 1041.41 cv
731.923 1039.92 730.915 1038.68 729.618 1038.48 cv
cp
f
739.104 1038.15 mo
736.403 1038.15 li
736.403 1034.91 li
739.104 1034.91 li
740.112 1034.91 740.888 1035.52 740.888 1036.52 cv
740.888 1037.54 740.112 1038.15 739.104 1038.15 cv
cp
743.517 1036.53 mo
743.517 1034.3 741.968 1032.66 739.464 1032.66 cv
733.847 1032.66 li
733.847 1044.67 li
736.403 1044.67 li
736.403 1040.4 li
738.276 1040.4 li
740.636 1044.67 li
743.587 1044.67 li
740.868 1040.1 li
742.165 1039.79 743.517 1038.64 743.517 1036.53 cv
cp
f
745.421 1044.67 mo
753.919 1044.67 li
753.919 1042.42 li
747.978 1042.42 li
747.978 1039.68 li
753.794 1039.68 li
753.794 1037.43 li
747.978 1037.43 li
747.978 1034.91 li
753.919 1034.91 li
753.919 1032.66 li
745.421 1032.66 li
745.421 1044.67 li
cp
f
759.011 1040.39 mo
760.884 1035.22 li
762.757 1040.39 li
759.011 1040.39 li
cp
759.28 1032.66 mo
754.653 1044.67 li
757.552 1044.67 li
758.31 1042.64 li
763.458 1042.64 li
764.214 1044.67 li
767.114 1044.67 li
762.485 1032.66 li
759.28 1032.66 li
cp
f
773.411 1038.3 mo
778.183 1032.66 li
775.032 1032.66 li
770.782 1038.01 li
770.782 1032.66 li
768.226 1032.66 li
768.226 1044.67 li
770.782 1044.67 li
770.782 1040.98 li
771.72 1039.85 li
775.356 1044.67 li
778.507 1044.67 li
773.411 1038.3 li
cp
f
757.708 982.922 mo
748.708 982.922 li
748.708 978.422 li
757.708 978.422 li
758.443 978.422 759.133 978.137 759.65 977.618 cv
760.172 977.097 760.458 976.407 760.458 975.672 cv
760.458 949.672 li
760.458 948.938 760.172 948.248 759.652 947.728 cv
759.133 947.208 758.443 946.922 757.708 946.922 cv
748.708 946.922 li
748.708 942.422 li
757.708 942.422 li
759.646 942.422 761.468 943.177 762.836 944.547 cv
764.204 945.916 764.958 947.736 764.958 949.672 cv
764.958 975.672 li
764.958 977.609 764.204 979.429 762.834 980.798 cv
761.468 982.167 759.646 982.922 757.708 982.922 cv
cp
.0952911 .0952911 .0952911 rgb
f
690.958 996.922 mo
746.458 996.922 li
746.458 928.422 li
690.958 928.422 li
690.958 996.922 li
cp
750.958 1001.42 mo
686.458 1001.42 li
686.458 923.922 li
750.958 923.922 li
750.958 1001.42 li
cp
f
733.958 944.672 mo
729.458 944.672 li
729.458 926.172 li
733.958 926.172 li
733.958 944.672 li
cp
f
724.958 964.422 mo
738.458 964.422 li
738.458 946.922 li
724.958 946.922 li
724.958 964.422 li
cp
742.958 968.922 mo
720.458 968.922 li
720.458 942.422 li
742.958 942.422 li
742.958 968.922 li
cp
f
712.458 926.172 mo
707.958 926.172 li
707.958 919.172 li
707.958 917.904 707.464 916.711 706.566 915.814 cv
705.67 914.917 704.478 914.422 703.208 914.422 cv
680.833 914.422 li
678.363 914.422 676.04 913.46 674.293 911.712 cv
672.546 909.968 671.583 907.645 671.583 905.172 cv
671.583 902.703 672.545 900.379 674.293 898.632 cv
676.04 896.884 678.363 895.922 680.833 895.922 cv
692.708 895.922 li
693.978 895.922 695.17 895.428 696.065 894.532 cv
696.964 893.634 697.458 892.442 697.458 891.172 cv
697.458 889.904 696.964 888.711 696.066 887.814 cv
695.17 886.917 693.978 886.422 692.708 886.422 cv
663.958 886.422 li
661.488 886.422 659.165 885.46 657.418 883.712 cv
655.671 881.968 654.708 879.645 654.708 877.172 cv
654.708 874.703 655.67 872.379 657.418 870.632 cv
659.165 868.884 661.488 867.922 663.958 867.922 cv
707.083 867.922 li
708.353 867.922 709.545 867.428 710.44 866.532 cv
711.339 865.634 711.833 864.442 711.833 863.172 cv
716.333 863.172 li
716.333 865.645 715.37 867.968 713.622 869.713 cv
711.879 871.459 709.556 872.422 707.083 872.422 cv
663.958 872.422 li
662.689 872.422 661.497 872.917 660.6 873.814 cv
659.702 874.711 659.208 875.904 659.208 877.172 cv
659.208 878.442 659.702 879.634 660.599 880.53 cv
661.497 881.428 662.689 881.922 663.958 881.922 cv
692.708 881.922 li
695.181 881.922 697.504 882.885 699.249 884.633 cv
700.996 886.379 701.958 888.703 701.958 891.172 cv
701.958 893.645 700.995 895.968 699.247 897.713 cv
697.504 899.459 695.181 900.422 692.708 900.422 cv
680.833 900.422 li
679.564 900.422 678.372 900.917 677.475 901.814 cv
676.577 902.711 676.083 903.904 676.083 905.172 cv
676.083 906.442 676.577 907.634 677.474 908.53 cv
678.372 909.428 679.564 909.922 680.833 909.922 cv
703.208 909.922 li
705.681 909.922 708.004 910.885 709.749 912.633 cv
711.496 914.379 712.458 916.703 712.458 919.172 cv
712.458 926.172 li
cp
f
739.958 926.172 mo
735.458 926.172 li
735.458 919.172 li
735.458 917.904 734.964 916.711 734.066 915.814 cv
733.17 914.917 731.978 914.422 730.708 914.422 cv
724.333 914.422 li
721.863 914.422 719.54 913.46 717.793 911.712 cv
716.046 909.968 715.083 907.645 715.083 905.172 cv
715.083 902.703 716.045 900.379 717.793 898.632 cv
719.54 896.884 721.863 895.922 724.333 895.922 cv
764.208 895.922 li
765.478 895.922 766.67 895.428 767.565 894.532 cv
768.464 893.634 768.958 892.442 768.958 891.172 cv
768.958 889.904 768.464 888.711 767.566 887.814 cv
766.67 886.917 765.478 886.422 764.208 886.422 cv
742.458 886.422 li
739.988 886.422 737.665 885.46 735.918 883.712 cv
734.171 881.968 733.208 879.645 733.208 877.172 cv
733.208 874.703 734.17 872.379 735.918 870.632 cv
737.665 868.884 739.988 867.922 742.458 867.922 cv
751.583 867.922 li
751.583 872.422 li
742.458 872.422 li
741.189 872.422 739.997 872.917 739.1 873.814 cv
738.202 874.711 737.708 875.904 737.708 877.172 cv
737.708 878.442 738.202 879.634 739.099 880.53 cv
739.997 881.428 741.189 881.922 742.458 881.922 cv
764.208 881.922 li
766.681 881.922 769.004 882.885 770.749 884.633 cv
772.496 886.379 773.458 888.703 773.458 891.172 cv
773.458 893.645 772.495 895.968 770.747 897.713 cv
769.004 899.459 766.681 900.422 764.208 900.422 cv
724.333 900.422 li
723.064 900.422 721.872 900.917 720.975 901.814 cv
720.077 902.711 719.583 903.904 719.583 905.172 cv
719.583 906.442 720.077 907.634 720.974 908.53 cv
721.872 909.428 723.064 909.922 724.333 909.922 cv
730.708 909.922 li
733.181 909.922 735.504 910.885 737.249 912.633 cv
738.996 914.379 739.958 916.703 739.958 919.172 cv
739.958 926.172 li
cp
f
751.792 919.172 mo
747.292 919.172 li
747.292 916.703 748.254 914.379 750.002 912.632 cv
751.746 910.885 754.069 909.922 756.542 909.922 cv
770.583 909.922 li
771.852 909.922 773.044 909.428 773.941 908.531 cv
774.839 907.634 775.333 906.442 775.333 905.172 cv
779.833 905.172 li
779.833 907.645 778.87 909.968 777.122 911.713 cv
775.376 913.46 773.053 914.422 770.583 914.422 cv
756.542 914.422 li
755.272 914.422 754.08 914.917 753.185 915.813 cv
752.286 916.711 751.792 917.904 751.792 919.172 cv
cp
f
910.228 1044.65 mo
912.784 1044.65 li
912.784 1039.67 li
918.601 1039.67 li
918.601 1037.41 li
912.784 1037.41 li
912.784 1034.9 li
918.726 1034.9 li
918.726 1032.64 li
910.228 1032.64 li
910.228 1044.65 li
cp
.0980392 .0941176 .0941176 rgb
f
920.505 1044.65 mo
923.062 1044.65 li
923.062 1032.64 li
920.505 1032.64 li
920.505 1044.65 li
cp
f
927.903 1032.64 mo
925.329 1032.64 li
925.329 1044.65 li
932.981 1044.65 li
932.981 1042.4 li
927.903 1042.4 li
927.903 1032.64 li
cp
f
934.707 1044.65 mo
943.206 1044.65 li
943.206 1042.4 li
937.264 1042.4 li
937.264 1039.67 li
943.079 1039.67 li
943.079 1037.41 li
937.264 1037.41 li
937.264 1034.9 li
943.206 1034.9 li
943.206 1032.64 li
934.707 1032.64 li
934.707 1044.65 li
cp
f
947.397 1035.92 mo
947.397 1035.2 948.009 1034.73 949.09 1034.73 cv
950.313 1034.73 951.61 1035.15 952.583 1036.05 cv
954.005 1034.14 li
952.817 1033.04 951.232 1032.46 949.323 1032.46 cv
946.497 1032.46 944.769 1034.12 944.769 1036.12 cv
944.769 1040.64 951.683 1039.18 951.683 1041.27 cv
951.683 1041.97 951.017 1042.6 949.594 1042.6 cv
947.938 1042.6 946.623 1041.84 945.776 1040.96 cv
944.372 1042.96 li
945.507 1044.1 947.163 1044.87 949.485 1044.87 cv
952.709 1044.87 954.294 1043.21 954.294 1041.02 cv
954.294 1036.53 947.397 1037.81 947.397 1035.92 cv
cp
f
887.191 973.451 mo
986.14 973.451 li
987.842 973.451 989.441 972.788 990.645 971.583 cv
991.849 970.38 992.511 968.781 992.511 967.08 cv
992.511 905.906 li
889.252 905.906 li
889.252 967.08 li
889.252 969.4 888.53 971.61 887.191 973.451 cv
cp
986.14 977.951 mo
878.382 977.951 li
878.382 973.451 li
880.083 973.451 881.683 972.788 882.886 971.583 cv
884.09 970.38 884.752 968.781 884.752 967.08 cv
884.752 901.406 li
997.011 901.406 li
997.011 967.08 li
997.011 969.984 995.88 972.712 993.827 974.765 cv
991.775 976.819 989.045 977.951 986.14 977.951 cv
cp
.0952911 .0952911 .0952911 rgb
f
878.382 977.951 mo
875.477 977.951 872.746 976.819 870.693 974.763 cv
868.642 972.712 867.511 969.984 867.511 967.08 cv
867.511 891.398 li
876.132 891.398 li
876.132 884.394 li
912.959 884.394 li
912.959 891.398 li
977.52 891.398 li
977.52 895.898 li
908.459 895.898 li
908.459 888.894 li
880.632 888.894 li
880.632 895.898 li
872.011 895.898 li
872.011 967.08 li
872.011 968.781 872.673 970.38 873.876 971.582 cv
875.08 972.788 876.68 973.451 878.382 973.451 cv
878.382 977.951 li
cp
f
927.502 924.156 mo
901.502 924.156 li
901.502 918.156 li
927.502 918.156 li
927.502 924.156 li
cp
897.002 913.656 mo
897.002 928.656 li
932.002 928.656 li
932.002 913.656 li
897.002 913.656 li
cp
f
932.002 938.156 mo
897.002 938.156 li
897.002 933.656 li
932.002 933.656 li
932.002 938.156 li
cp
f
914.502 947.906 mo
897.002 947.906 li
897.002 943.406 li
914.502 943.406 li
914.502 947.906 li
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 16.0.0
%%For: (Max) ()
%%Title: (vector_410.eps)
%%CreationDate: 10/6/2015 4:23 AM
%%Canvassize: 16383
%AI9_DataStream
%Gb"-6l],;nE@(HgJDR"!(m&?!jdilOR5tQT<#)Gr*r$pMp=KViTL#n5RH&1j_.MFlkNPdD[3BY[?)6P!?"RoGq13();>ZfKaLJ<R
%q'UZ4s6cAcT>,[KX8@,@mn[k"m5I7$WTTb8C9o#RrkfiUae/L?2a;fjp%&9(HYnU0VqX,``$tAf2u<pEh=b\BSG_C&X)G_"rV".T
%hS4F1qWk=,hL4q^rRX9IH2.'U[l8g4nlPOSQT+rjlS#tspTHOM?bCdZcZ[UiT=<.<hL+kil.u4i?[fN<D`8$HB0?!.^UCK8!r/2S
%rn3onBqetIrp[aqc`W8Fs5`?mG(76&8br205Q(HPYMO[*iVgq1Dr/2+T0L>hGCR?md_C&*eP#kX/nT$9T-)`>DdL*Uji_SVpn2uj
%*(S\C++ATi9DmtB^]"S'YBe]:2bO!armA23Q68@U5oZC*qtMQ:S8ZPEeU;o?ZPU,AecGYk@i^j%P<M%p\Bp<3OD)JFH2Zi+?bH=+
%R_?3i]0H:O+6"DYHQH!u[AVdEIP]`-o97t0+)uDfl[O3OqHn_uoA<lhr;?57n%64+++EbBs0Fnp_9r%=s5N5!I.@(3hnFO1_3ufO
%2V%;Hq<mk+?eFnh"eNGQaf[b>('!qOroW>>?bQGH_t)V"hk8eTH8E#)h-YU%j^5[uokTMlj>Zo#Y?o!BRs4mbO89M/gAPWjEjOS*
%dr!!WDQPo[ViR=Sbu:OZAT8/a+g0YK+$[)_pXelkr9DP]T4Tq>oLA2>rRq',T-$GKVUWsWI#Ha!qE*`@5HMQpLC^TG`m^j`fu%0g
%#5<<<QbU><+5_PHnErsA_UnR/Do;FRNVG0`rQ9V:I,XP\'&S)umm=j'J+_)^Gk2[ero"Ce9"u=;rToG\m$E4qrnTM?rV>2T^AHk"
%IWY>[]753Vo06QrqXEpdp$:d"J,PH.bJ*oLk!tqd2h1GujX[rtI:(%M^3oP&O8k1Ig3^P`IA>]R\bp4Brt>?]S+CJtRY!LO+R.q@
%IsM"3]<=sG?BUXn5JR$+Qg_]c2AcDH(GF[[I"0%@XD@jTRt%^#]X0"IY("I+eR`U]HtA;UPBb<X>Psch:;?X+[sIl/T1l)qIf&rm
%lg"?Cm,98g2OF?\YJ:"UG@/#YqTF#tZXj%4/YDIKlh>>tqQ1h1rAS*`e'6d_HhYM,&3@UVF`d3O%m&n2btZd*T=TUPo&&oT+'sEd
%`LC5JJ,.VZ]m9:Ml[RpglUJYJgi#'-?Er$FFiWgOf$-BBj58=6@Lt\Orl12[Dj]+jopB+alcTgBrlN[55JDXCrlsbY@kOL&J,/6/
%Xg^7(pu]hVf11>(qsl7>BfEg%VjCaVN$Fri7ip9!T@j9c?3#HFPMa)2ba\L=k9KumrQEOEf\5rGRigI9nVss?5QBH?I/If]>e[cK
%r.dN3LEHN2f%E4R`R_L-?d(RTXn\5fAkkF:)LZC2i2;uU9kGKsRm6`8rr(pk>Wd-0ri":aip<-ofkt]NES<<U!mB\<^\\c6^]%O-
%s81YYpV),sFBLHtDs3'CHhYMB2_Vo@q?-TRpgP&>d2DuY%tB["q]u&Lrlr"C;si'#ZeMDL1[HpnGNM!ah#"k\q8#6Jm.6$o?1B@.
%Pmr3rT>\L$Qe0!+J+]`9^\Tedom_Jd"9,t)YDnSBWonilol()UHPtqJgm<fe=Is95a#A@Q[bC&GZej4;q`NH-[^BW^X0&eCoetQ1
%]5J5IYs&'T#Q&*d>P<L6qqUZ6qu+M5\3KYgRh+"aDgh)Lc[OIfqMY>4[ZRX_b%P9,IEZ[im`34i*)CX^-7[K9Hg\5d1%49'I)4u@
%I.Zg<r^jl`PP)12ir<e@=+2&Pqtet"D"crEjQFfPp\[/+kCn=*os$#2D,7g$rJ;kN[!$c&<d_84AmZp7m"?0Np3F$+r]JirhEH/W
%RJ%Nr=KB->2LX!>;t9\B%pftI@-f09n,XT%m.4m4>XX)0m;lp4Bch-LLX+4`+6trZlU0XO7c=l-n<!!H06@/8rtNf(U[\.Kq4g+,
%_u9Q4h>Ou.p\fQUDtiq=fLSd3gYL?7UHS=gh>Q0ch7O\NrGKAcGP/,kBMWj,I%&VIp/2FPWREo;>:6m_Xi'a(EuRn5"CB_jhV3RJ
%A(]/\D2;.1.+ngKet;f628hks[t-AQ5]n#H2H4LC'cUbaDnDTf4&hfb65jS/F14@-lgq>E0@o=VUX'T;)DTVnqlnK)Cs;'*[3t:r
%#Fc1O*;J?%8?qEoeL0\OH^d<rmP^QY26*W<=oU_=>amY70ImOn2J2sW5/Mg8+19.k2<T^:_lc3GkE?A3A:7@WDjp>r\%\<^BD9u$
%0<>\VCfk?9eS;e0>;$NQm5sY,#OD?/q^3=-a[S\'OjTm`T$<r+)aD)O5(<FZV_7lf?XE?:XP(6uY[(*^=E?F`.s-&.VWH6tH5c<k
%GFXVZ7b0mCgDJbq=q0N(qY8>Sh_r(7nOno1`mJX5gI=)unNBCMWF6ar`C=sT&cKR9oAiHF2MO.hRkIH`hX0?a2C-Y^hsMo+rfd=D
%qM4q4M7Vj6SfaHr:QllIcR4(;VqjNp.@t>_4P>gG_QnnFA1dan;q*FP5L=]eO#E^RD9P.HgHCQeS)KFZ#*3P-g!n$>EYZDOZ?Q3a
%^7O+_o0$beZ-O(b(9K/Hm<j="f'KZ]fNR;#b[r=*CJD33dTSH;g,rIR5-A>mg].2K_>MEOk-Wo+s#aNR0>jDO>>Fn%B%33N0r9NT
%a6g<r]YVtZF`,n3[ftY_*nlNao#tg"O\^_\msY]`DTQ^s*=#dVf0/+H<%POGc`PJPF6p@oM8nfJ^WY<Aml&GMi59Efk-,mH)P`q.
%Yc#&'<G^@UHdd[PZaW]-Vtg4o`Fm%B[Wmek(YHs%ifCKaF6GLDD):M:Cq>(nZbE3NqR:D#^ARQpk;U.rOVuq.>sBW!HP@=VO08Kq
%[9jC1`s!+aj<L#*7.[k8XR42q2$<QIWKL$V?@P#MVtFt%OVB>?-@8=aiQd_*:@"n+DVAbW4jZZe[#K647>81s7N:R1;I4"$,c,U]
%V*cuJC?"FHUmrJm$X[M@)7?g>m)(l2<H.UHK-t;X*Z3)b;m+Sn4k"%ofa2e^89B)7p-V%dJ%j7<4lc8WAbD7>XF<"GU?Ap&bHC8N
%9Ae-OIdpX_huh4ZNC+Y=k/(dOqA?"1ogG^Td.*5s1[3E%TNeaj@jAHpVdjd\VV-S>dW0.t0n89<]P*@<p*VmZeMLksP>BKK_fB\V
%i"UBT\h?ZXP,qO4Js:c>JqW6A$PJc#=HHu`MF@ipdK=?!XHQGei+0aAMCZ&#)K!$UG0-CG2eggud;$4irUPR6*Bm9'nuVHA_U&qp
%`&s'V8bUWIqWr+m)8)R1FjtKYqsN=<cd@*3dNd(b0RFl_]m+bg8"5M6\+Cu:e>"[PpEj.q(N<F.Vamr-AMm\M4fc<ihHfR8dC]?d
%FF7nF'^oJr@l#p$?<0944oM@om]4)M43m^C/ti'rH9Z`S]Cj^fpXS;m@HTXoR:XrNa#lHXe4JPIU8QL:TBN83i7#_0(&aB1T<:>2
%IQDdIr=hEfDtR-&<m8RNO3q<1T.gl%eE!^L]H!7ZHbAuQ>.o+Og[>#`mBmb#WTps2CJ''=5Q=rkpaL:X*%bl?b[!&Y?1DD6nQ`QX
%Li^7[Ym-blEJ@>6"KA3AX_#\NlZ.r`_=5q^)c$f8mFIhP*'m@+'2iUAL81>VHk[M9h)anR+Xi#9qCl7fTdT/7L7OXRo117lT!$>2
%rQo48^g>Z,-2^s_b)=/,q;DiJD5ApQF2up,B2%Gla'-\;r>*crO1!bkRqR_f_mbN4S>.\.<ZgP/RU']GNK?\2:h7%JA74I%6R-d`
%NcaT\joLY++d*YmKD3rX#aBEAPnX?olGdeb$O0;m&2LNImgP]8;SMV#n,)DI^A9)Ie]$@tm0[eRp&\pJm@Fn6"6a6ZSR0;*pCf1*
%mrGiufdH:1Et@G4^\iMNRJ'3bVYum+Gim5GJ&@]Mm8!>4ZVt_dbU;32AS-A=d/';lMSh/um\6oBgD(7N4Kj7@s*K`;'c@$Ra8HN&
%`F#.+H^j$PH%KBIQe.Vd&[AuQ&^0><K)1r<"H6SLSYDGZ&MSg9(hQ/j`t?Gk;ukm$)VI#7Z;"^rV7&P!BAYjqF??rgp[m^K_fn65
%pROhO-g/nVHlaI1D6otilmObbP25s@=Y-%.Qq=/&D-gXo<K=F#7]Q;#a7G6[jhC(4(nEX)kBW?U'd('BZa987j.i5ps"2Rjpf+Xe
%]3?)@l"Jn%Do:Le%>lMP-8oXVpbXrVE$!qNgVA/Ej(;lQrf<UudHfQ2D-%Ra(W,sUSi9HDO'*,2p@B@?)87-5(7n00p%Q2QDp\?I
%Z2Eins1T_$Hud/ck@#nP]I8URTbdl>Npqr.0LlE2DM;I><X;/:do-Ulk^t%g1A"@aIM28MR<eb%+!a5;J_JP#?^Lpb7[Y-0!Y6d[
%@'N6$^>%Y.c^jaAo([1<+/.Po=rWh2>Amj#\cZaMYR2E/$G0[h\m[B0ph9!EK<8I([YfJqF!'!bZrpqkm66SYm`(`9U-6oFHDI8-
%_V6A7CJ(`=I["<rfs].(D8jt@l3/#@S!$Qh[pL+gJS-m"4TiogP#CO7A/*.IZ%#qoIf"2^TD*/mTG0mhU\N5NN*L=eSXT7NdG"&6
%ipSt_k9idsr1/JKh_Ja>*Q*fm1:[*""(C(B%/+&CZT7V/rKZj8#Q::/l8@s;:"h<E':P0G2'm<<UuH1IgAJl"T?;c`IM_k<iZ7sQ
%5J?m^qS/tn!qYOErVQ6,J%5-*I0d?pkJCpCIjMb(&`U)0k0aQY)2,W?kAG_Ca0,3qT,7KHoDdZQMso+Cs)HI8hpRBDO0uUKM"?[1
%+:ld^0<Ur9dl%/FdPX\pChnEG4@7b9S/c&#1h(8p*960BG4&hhI%M2NO-19a0f*[:4PJh.)ZdSDkIo.+-WA4-<+<=FFH;^F@=-)X
%@dO]^<6h$d&e>L+bW"Ec,]hE7fkiCR.BmM9iSG!F(M7VL4`4k\'tNtoLWTSVKZT(hs/o]"7hID+`@mhSDt9C4*u!OmM=8L'pLE3l
%Ner\+hV4@FJN:[[>8GG%9=n[E5NSJd`tSJ$meD"-Wadcs.^rD#BHI)$J+G=siOSR[S(^_"ekhQZ],-.L>-mtVl:k%Feco%"UYb7M
%^].C5s,F_q)8P/0>2T@lrVXE(qQG(MS%lW3L]=p@I/ZL)olD)a[u(RNHjT%-pUg6ZMg.D;?_"=iC$G:'W$hN0:[d.iGk'o2CA;/M
%s7OW4H0q(c]moeE$ZIbDZ[AX]aj9B^^A;JX4>IUup2efXrth3qJ)R$mk5XZb?0-cHqlf[0]/B?"N%LiA/*7CPrPJiEMXkd,,NG+j
%+o]6+ajWkoh/#..oQiT9@X4G.C9GEJ\,U;;h*>@H1.-SK7fhM3Jm<2"n[po#e*%7h4?AiR2S]1"X_CND=:;N!JL*6NjQ;#kmHN1+
%Ek`LVef*,B?ME3;2S78AX7+#Ff5H"RqopOu>91V"B2WO=9^+t/f)uQ/D1\;E0FC:gpJU^15&I(Er2-9j"5%LC<k8F/oI3)Ja4n#O
%FnJr*Yh!a7-3@Sf4nW-_$`kpl[RM>;DJd.ZXX"0">G0Zmeo<MCD(`Voj#_hl>J;u6(%6;]f0/B:;Pte"]jd/9mm@`:_T/Vb=#MLs
%#D0[dXQ*LOOu-J!'Q0G-DlqJ$l3h4A5s*t6N`uVed?g^hnQTeglK@Nag;LSJ1leu[NZRUN/8[gl.;?8o/d5%]hfa&iilp55PUWuH
%NE]?:(bG><c#0GVm5>\p,7KNZUn*[7XG:0%GgU:lbRWBk2j-bjB=J)r817t-SepB0n_@m<J`_1/)(FBZaM%/Ien:.VS(E+(^?t'X
%;k1/f2[Mb=^#Mh(]!*o.@[_9\(hC(VLT?mR&0"$H/ans!@Z/L(AF]o4F?=5pd:4uLSkV@Q`ir*sB"pk)Cc5enZif]T+06L9h7>&R
%UIs<_fm-uS=&.$!PD><L4fjKeg&/Y*_e_36\pQlG5[nf,P#c1P'?=tH0UpGZ\q@\-h[7Cnh_n;mfEfBB[)'M<]#RItRFN'.)d/a'
%C=ZTn5!&lL,<g#O7:Y];KWD^L.\rTr-J`;&4=k[q5gpVbb)QO^5nfW6O\b-TqmB#-2#sgdCuS1QUquMh%=W`/nUAqD>qqUU;R9f5
%4f<Gg[&:7.[=o]@BC@SAK)A&Z@C@e#/)bAB@:iWs(/-OMaYGdgUg:!.5IW#:W'i?hLBn#%/o(NX*&u91.!+>rfMdXuRMlW5CC>OY
%G$/,V,G,#o1N'[d7S_K[Ff2)h><ua/;ml=`ebTd3C9;;&aM;:Q*VdgG.`BsoQ"Xb?l"5%%?"P/l!Yd0<%ipY"ibji].mhB=#=1Wd
%g%o+&<%3?d`:n\fM$[*%PLAHgD+Hu5V[_*\p:,,$=4%7X7lkaP]bJ&&Dq8R0^uQ!]D4T>(\qPYqgg;`!I_BNMg&O&HALack`S/[2
%[SlMDkGAVH[Fb@:q+PO\U$+0]BI;XuasY&[+?6"%ou`20I$pj#)$cGS.7!h`Y?TW%A^aPRig!#*kUE!O(uP%q)i9(2fda_jJ_!Jf
%Q#&'b4F+CO_r>(a!K3Tg5'r&WZ=!+(B&/uA)5MF->G9a.ps-K=YX'Y+?Dlam!r*1Z[dW%l32C%2XU951S;,.Y<PjKm#puZiQHnTl
%C&a[UCKKto9EcABB#dlb>_[Q[?F5u$)?p(UVDs=,)+BBoa++1uh:jtIYh^q,]57T8VWN9.mQPl3Ohf+N$Xs;Jf^>1c<?%d`eg%Od
%Aus_j-8"N;Z:uBoU-<a1LS?WAL(tFn5`I@:@LaIn:hg\P8]'!sGa]aGR&O]3=K<IOgSQDD>A_Ru._P[5^Bg$rDgLc,?eB/\B'oE;
%=i5!AQk\@k%[*Bd@F;:j_T'KX2,eJ7_Ye/:Jp<+^4YV*pf=:8FiZehoVu9Mjl&0*tA=CQJE7*I\1oX3K$#-GDrA1=.IDu6a^?pbi
%eX6qp"+D,`e/&gdqZDE9.0qoPP4Z/SB1d)M/K2?,mT<ug6M>oSZ3/nWPi,QO!Es^-0PaoO?Z+<3WL8`Z#3/F_pJ8&iE=u\3R<f\Y
%/Xf0I.o@e'VYENu$`.NRPB$ep1lRV-3r8L)7f:Q<dTUs*5@`Nm@6g6R?nu=VooOTdCZfhUBebt!^uGc$n-Vn((JRRB)N@N5hhQMs
%RC)*X[$qCa1rBg2?X"W.'RO&R]X3Wt\asJJ)eR90.luO_>D&>SJfVm!:cM0d^2DN#36sG?ESfJeg-FB(cD.:I!bt`,LL)H1CSee;
%4dN4o:am?0#_Hd%m`,6MV3@`E0Yq2?*D2)#';cD>4Tn#IR:&_4e/akGi0l_$jc2T`Vmgs8YEQ@"6I9C4>Dpb#,IYKrmi#]5PGEBg
%[>Kr`)kn?6N>!9iTfr.1Z18H<5$PY0pLK;P9iW.mE(?ng.Whb+cY?D"r4b5;eikoCrJ;^Ue'*l(67EdnU^Yi`0OoHO?]dVT@E7-U
%pC%6h#T@<,#ne')9eOaQD6mj5o$g:DOT;uFXMP+(([#5Gl'l#*eQgO%i'O^+OF7^q82K^F^aHMJa(E2IS7SZ[)[^F_XeAQeG+(YW
%f\e".'PP`\70muoS)7HSf3r8^<%MNY91*kZa%AGJP)'3>)^IAn7@Z*Z'3P'GoCXhHmBFEBO'e1r")6)Y$EJA."LQl*i6Y0ErRQcO
%W%denGnUk7V!;CpG131%*N\81:nJB9$MX/I::%[tj//(:][RqJ[M`DK>mIqZH:j02-Kf9h*Gs(oF?XohC@<4M=\&&_Z&To0e"jVs
%Un"*'BEa#r@#`;7#kVc14bW$>]6_>2F]>4\B++iHa&X/e`bJ4HW`40ZaDal$a#b83)re5L%Y9V"IBC:X3o#_%bB'DpeV,%rS""9k
%mK;1fX*'N93=u]["PG,8#qZoj`&?i!Q_]O@\;+1L@UrNXqKch1A4?la4d0pbL3!Yt#h8<:mQ_:6AS;d"MN>t)Dqh'6*'!dF&AVQ/
%&0IJ>K$CdM.pX_8[t3EK?::^,(8dbmZ3q0hQBDYb1C)(BXtk'mAm5Am]4/he1D)>Z'_FUXT6&Es)!i/Lft8`7S=2]$_\cfi-th?G
%o.HO'5V*-i%K_BT+JAN;?X[i`*F=)`[m:*`RaHHnlo(S3:hE^<O53pL0">5k%l:)be#<*4S>F+7Bc_oK#Z98rg0d$*!VErcJ0$US
%;Xhb2UE[!@@:S$F@fQ&9>`3#>_+U+kjj9U-G%QeS@2)bd*&DYJ4c`<Y[V0CbNm4;)Z1#B#H#X`2l3o1^S&]6Mb\2B4N8_KaZlJ$;
%%!ml7bZI?5BUK1;89^l`oISPr1Lm,]#V@me!Sa;J6CQk1,".!)$8%UWle"[O>'nr.+rVfiJ21ipBkJf]e#BqlK`GE+jd`I%ZohfD
%_Xa]uj4=E;Q*EH']*s:$KN6ZG#e7r'"!oXd7=kp+<rGe:1WtPYX/fj/4\K^G;)ENB'eq]eSf,qMomOA@nAUE?i)83BFGo5W>i/7k
%;aL7O/o1kV^_Iend&2r4kD&_>RV,hG)-9F!_sU/h\)9=()-k;n7^tp7`M/j$9qYtK=RL)n.VA`n3SaX>4TkjE0PHn5O!E_*MB>0t
%A,W&A5^Pe+`e,PMfO0@8a=BijG^YB(*6cU*3EDub&"Uk:^m/G)'Ae?b:2?jMNag")7LTS2,F?&Z1VIuColG9&WtsKL#J.ZJJHWtt
%b=.Q"Cmq+G$su+6Y,.US_n_/YCY02L,cBo?ZJq.ub/Y?pTBaTF`JD9-_C:4@`@.A^IZbJkrH)!7/Qa6kol6MG5!Eo%[HpTp/1O?/
%1"Z#oPAObZJk[HT>YH.$BUk0Xr*WWq94gP/Kj1Jepg.)j1Y^>IXcCG0ga%)N'hlpq1"HbS@T!5D$M9gCBGq>dhB]I_F29!D>X.Hq
%qU9='["T>('b\K$nKKXn.D]MZ,d2]g8IH-i#031aU5N:'+BXSA:W,LHZ%3pV>M\Bo=_S=UJ@Z[P#cqZ4'.e<?m/c6n7GBZ&Yh1W6
%M(fgAMQ(=Z+LFV]/F?'?]S_6/F<ng%cGLPp*/4]&Q\<\Bp`S_W3jXi@@YWBW?q0XD&](PqmTedH_KiEG;X.lC()'\>Ghg<BS:N]r
%@Y@=h$[DHJqp_jf9oW;.K";4R!X-4Ba3mYa!71f%apoPK>$VJV"9M$7&Lld-4d3aS>l&**a-ghLS!YPmF@1t%4X.V)nEr!qk??2n
%P<fbAGnI\Cj,8=ek(LK9'Xk;$CSPn[%>YdMij9J3=FhL8#o_3&`9A,c[5MDtm>0Ve_+n]6UbG[;:ABpm^CM9SF"k8r.cQVt,=$-m
%K6eG;@?;@A"8]h:$$hWs$H%YTVI8b,1+P-Hq5P,>-4_F[*E;_C$jXIOc<BN&15n5%>gm2SLlZ@cQVC,gb]<=+%6HmbO=%+uaNrL\
%T'is_J<6i=)V3SahMsQ#;JC(rGp-:"-7F3m'JSfI5s!8kd1XdK#l!6\3Ei:m"JM=KCtaNf'(Hl6><&$lo/L[F1`aU`-'*5S]69fp
%55UgS4-MuSiB%U@r/S]5"O,C]J>p(SPH.j9'^"'s51,KI_\g9'k%d;&$@\JM);)B*,e<`tTm4*+;&:Ws/iU,XTD-(+JV`&(5RPOc
%;pBH=:eT8`eTA![,(U$oJ/$R^%QbWU3;Ji]4o@L1doeLm+DlJe@>nlg@,2/UZYoJE?E5ft7Sj,E;e$NYZJsdloEd;N1MF-uA/4De
%6pmucG/,JYJ83:2%%C/AOIt4K8B4kTY%C]1OdCXl?ild:]Gn^dObNAtn7ruI2Jt:o!^%_1Gg%-A>!1"\@&3IOQ'pZE%:mA&m`LQ$
%3/-^piKdBJ;8Xs9<-Hr5LN%F3>%eB0(uc,3P@R?bi;aASWIXhb)Q"`W\6MIAooYJkj$EmjcB'=#>fZ^fcg7,<G\+T#i%e8#)f>t;
%dhJo>@$/-TmDfe8<daj[7JDOWA`CMTJh=cD^)SA5]&fM.(kH>;j@"AhMqP!&-7+f>c#o"&Lm`*<1#p'^(t0>KEGQfRQ,-6eNk6J<
%_T/EELWNlYTJ2A.+VE\R3>A]>bHH1XHZOZA-\<AeI:V'$h*[Ycs2WR>aK-m1ACCd7$k0G`<,ej0*p;@-0Nt,*(.*i3TG<cXZHA,p
%1/4?OMpRiHo`[oo@j0b9O>81R8b0o0g?^%Ci8c%HU"AduD*6!/J73t:@cMdh]!@.r!OLpCS\7!!llG&FIHg>K.h9BXWVrVqK"TIu
%kAe>lIFPCj2OGnS-=:?brT3/&TPg>GgJ:!CcD-SSGRmh"j97Q:C6][V$m;i.YikbGX7ZI2FbQ"o"ZB(*H\56W"L8n7#0D!J%dR+(
%Z>XjLOCr(]Y9=4dU8!a<6NS^W*YM=.BGdD[(dh1*)Npk<5>L3qd5DLJRXj?V5DhHaBFS5>!%r@=,L#'G<?gJF=OjG2i/D%QGZ(CX
%r4<n870ZF*1ng$K24iQOI"t)!)C&ca0VC7NOZ&haedSbbN90hYDo*]njZ"_?6>V(f`7>Q#7$d#`ne,EVLN]rSfEODJfa4J73DJg%
%;QLG(]ch0_Z_o]LcE=K*L>'/_Eu5-[3:YIm7`1ob=K+!U+Q*6Ti.teP>;QP94&^b@/O*-3r06E:N`ZS(!M0s%&-6aLBg#J6bG,&u
%3FlTpNlNs1"$dp/>2I_=#&TG33_^r/38,&X,Pe>9HU=s\/P)<+c0imLWLP"GX/*e+Lq2HND=mm,M-FO8BNH=RZ0C4_1<M[:-#-go
%@<+TNGcV_sAr>ueh57Ci]I5C5a9:.a_cBn?$jmZ%>\JC$dT.^94'ul(oF$7r3fWGd,3t1m!/U\0!01gjMRX3MHcd/m0Kg`aE/IL9
%4$M#e<N.<'/UJHimRmBXfn6,[#q6(HgrY-O7(3?GK;Yh`_N,Gei^;B)6[#m(8p&NMZGR[/1mMjnBO@d.;QOK_RYji^"L),]#A-,+
%W,^Ybqfr5Tq*k(uGTGq6[R2'OJ^<$1(UmUC`RL9"on@\85[6n=R\7f%>_e_c7K73)Ob3cElm-gTKds/F>)+8k+q'LiD0`?T<+'He
%,(iPX8r6@%qp<>O^>sBH?U=/`b:u\"X9XI)_GYB0A@KiRa,#iCCmHla"-',g+Ka+Zb8.tZTLQLg[(nh8A4qWB/(^K/\njuU_n8JU
%_+3kS6fKdq=]Zc%&?CIY\ss[N^_Ce+<rslh^I45$\LYM=:0CLHb_!0T<KdL.fsM5b:q/pH807*0X8k+E0a^Vh&/'&-.RZaRP;QQ1
%`k8_>m7(^q<dAOUPcCM2Fhg/^*%Z]q\6"lY7u%f%,6[Segt*`V$D&Q(aNImY9G@D0f(e34<07Hn&6>&:*JrQ33n)F0A>YYeRQF$"
%bKN$XOcKpCLLh.tVn_?.(\fR9S"8=PgLbLMG[-bt!(m1FCEpmcNXWR>[lC0ii6)N5_DFZ0&ba,/9?O@!mW^3N#SR_IoGMX5=LTGU
%c6DpC0UrEfZ!2L!9bm@OL.C@")%dh?>=HO=IB2J2[]DZJD9Q[,]u4ASap"plg]7)]Gdb&`n75PSZsKJj<P]aj11nG)"%`Indg_Ge
%VdQ"rN.eFol@b3E,b)"N+T`)$*4[ZRM.I"pp^hLu[M]J]4;<RHYT$h=0KKp+R^\'X4A2r^n2k+W5^+V3\nO\KmZGt<)F7$L"$R:C
%]n$/!49a(W#]df,IMK[)_(q0\(%F:P1.tKG#i.mEbbeoS\-7Q?lt;&AiFr?9MM#qN/:VGmblP@q6sP:'UENpuTSM,'21]/>-HIME
%KF"&n$70iKm0[9CehHUT8q@4$34LDKI@NblS0L+ZLMbFje2k)YVr=Ld\j,:%'H&LF=+J2Bjcoo"kt&#BSFqP#SMgrfo0-U$bU1pc
%2g5ZB]](_Cor"+fM>-E(9]jWNA&XPKVN8rW%Q&"!G!?%ROIH0DF<c;BaN;+N5;\cO*1.uk/dgjFo307=*KYO\8m(kZl4sH*7d$MC
%?DhZ&@'OnnCBlJ5k)0/)$T_Z><l/II^E;$PE,/(+je:/#0$3Y1h'7]BRp.tJ"oVUd!VtQhP*kE;o"&%[d/RUD;37M,!#"&IjtMWs
%>jFYjBKZML*S*=>87[Ys"!7d]g>ZMO:>fc+)6f5**!/kp]c04C=<VW<Rd"\<>(E,)df)eW0o6Br*V>#&#:XI%i9Zj$5gBke/ttD-
%cGRlH!O2CNBga=68oqJXq!3N[1*[#)b\k9]QQb+p5Zk,ofg_nZX;jV=(tF-Il#6r(G^mE#/.`d@H4ti;CfmC;j-&?k"2TEfQ":+/
%pZ2*a#c7`Vj8^_54UAl+6]?Q84<S2t/J4?U[-d*?l7H?<!,_.%!Tn<@,0<U\N$JHg]k_>"Y/_U#S`'HMFo)Nu;FD[jQ=Qk6Dt;5*
%D/RNKL9qTuXT6N3CDHoq[&.6To/bp%oYtB-H1$Oii&_s4L%^1m$^SKm#Fb)aCP0>AWS'IGeM3(SVe7Erd&(7mDJOPBA+pfee2'HE
%5j9Jb9PcGXTN1Io=(4lb#24dq]<1>s:dQ!]&24(o_29sc^kUS8KTMn-bldjQ%cd4e%<OOrTM*Nb71">[o)k+V5QE=)C8.nnlGr5&
%b1p^"<^9ZBdLj]q^je`dN2m?k=IZ3n3D;gMT89dknkp:\3I=1%\cD'fX2mcW/)D:-!cq`OE!?B3N.oA.HscA1#jGV]aq`&%$qk'f
%+P]^XeV.'u@pNkO4V$md&HLLX&Z\fYN"#0E,.en>hq'iM)9mR"jKQ_r%D!IgSRDc1mu[?qPa=%.g6tM54u*e4Lu"t$c$o9uJ;]V6
%rJtmroG8V+^No^WRigJDhn=@/c'LYEpOTsS5-H\^fIkDTU+has<I>Zn@2'iMXjuO$;F1Z5ju=iFB,@q25r^&J+GQJ]AG:E^78(bb
%,sTVW*@XP=$'8h1E1_>c%MbSsoFN5&^Q>tIYmUq\*&fnMOlP0WG'Oj>=4PniS0jR978rhTi-6t^Dc<"]'a?a",RA?[?4L1[$l#.L
%PJ&:_#6`-p_M19:F47E%0l]CAYhZ-H)+[YJ$7+,&bM?+ef$LqEo@'X(5*Q<qrslh,oZOOr\HX467/nGkcj0BVk'b?2"_r4HlO54J
%hV!TEKRg=J#a0B`@6-@YVYN96\bOjCm\>;$F7t'5=&RE@SSPLF*LoE2^u6`N9L,APMB9$>W%Mah/7f(!AFkCH+F%&eZFQfk,nP-i
%!aG`U>q6m^HP6o#WQ)Fa%KOpMdsY.9"p_5pO$53tN93t1XrJZY,'\=qNhe3E=1X1K!i+ukB49(EB,-11!1koSR?k6(3&eCblT@44
%__W3QM\m@FmP4mN"c]j,kE("0XRs6;Z7MT+_dVn(VEYDbO#6*fY=;fXKobo4KOZs0#7/cJ3`tfo?cN&Obo==+mh,o7%N$E!=BOHo
%,m55sL&&n$`F$/::[(/6`2<\9\b]P<JYu\_P5X]#/@\e(c'V<W)+G!'$7ZmYZ'3l@An)sTO'H.l9nB)hQeb[Vj^MBKHF`/AUE_*5
%9KGqSmV-[NgMh7(f0EU(d6L)ZSEhC&E.CI19#gI)D7.Q4=NO3>J0SdMa_f2@l'heMWX3X<]eaQ'[RA9!^heA,]dQ=i1d7E17"@%E
%T.#/=]hk#A?Am^D$Mk0^C;?j6%0bO)]]qN.H-@2Ei?;B]LJ8-.LV,Cm:/uPUcYM$QVP25'C$]9H`aSg%C#n0rHDFR0-b7S+LNjR1
%^HK[uc30:<g3lrJ!67O7D&lZGdVdl,_1uF@C\RF*3h"'$Akp2q:[A)D6&\G^5A"2h=WkD/o14lSgJs,Z"*9U4CiD;*F6F/f9n`FO
%Oa3j-NV";t*YU5B`uH.:.QWU]F<:B7>`HdC2P<RG-3_aAkdEj*@D9Xj7Xd:.R"E7\_ua>QTE?QOk7>tp['FWb]\A0,"`#-TXIMD?
%>>6"0eK.Q&G\q!Sq%fj$0nSqdjtNj612h;7QtL_C9%GeZMXOf*Wba[&L^L)$1"NDQo0>_n`ZOc'9TYVN+G:XEodngI4l),(Q"-bs
%jqIIk4,ue1[8K;n%2t671'6Dg-X;-q-M$<g)%OlYZJm:\60f;i]1#bJ*(CQM;ljee=<fWE:6N%LPCub!jN3a`a"+Id(5A3LLdQfK
%'#&#K=rg41:d67f\)@oOpd.A9H^P[)I<^5op^:;(!Y"2S&Ro4,QX-X6M\f5(0Y--+&8Q).-#4o:*[,gMO(T)aKWo\]:aR6Y,hNM-
%%m;U\10+o4!RaIH=?>'>&\uKW!R1p'XHgp1.Inb1+U:'F$Tlp;/'pI(G'kn"mt_PYP&XP'9L\8"35TG4p\SBgK.%A;KCpdH,;I6<
%XOG/#([b`<->!!1'L/nMs7";6Ws2ZgjbZkMn"h;V$qt,>+omg=eB.)5]H/p?HCuo]1$['jgHZim&+L4?_Xa4&k(2*6#X;l'[jU`*
%S)>h'`aON:jqK'XnD-JD;3(5b*BVPf[jj!`!Ad0"fuVpQL-[;FW)'91ViO[t5F?9.MTP,MJ==Ms]5m\fHm"S50EHtkF`^gWoTF+3
%_SM(!g))t^74#f9KsP&2QHWAGH<%#=UdZaaaWWq6"g_T>flqgV(_&"A38Y4.n]'ZX<$&7qO/Eu7>[Rd)Td'!GZjZp]+gf"Ar#eT:
%;;"l-&d/C2Z\F(Idu,IO)o53c<'m!!!t5HI#!LOO*jPoe7:VHl((tM;+cY7-U_ukWM5,0r3pm*($1cpQmO+]WRB$=?".Er_K>%=p
%XDCQ?B>6e\@JVUtC@r\c[dgCgeK:N*#V,d`6[BGl&ub"2:FMptIH:f(hmJh(W$XsEQ]X@1C-"C;b4PeF=W$_JRXKk=,.*(C7=ne#
%`1m<.M4?k-Vt2bEgQBdY:QRn-0fB5$p9$-"K\"eV4ifaki^Ls^[I>MH`>#WN87g>mce2"n\7p27?l0VWho*?oo/Vsm2W9<4AZd)!
%M1X]KjYd`K!0hH:<'ij-$BCWV5t+(L8B9-S\.G2?APtXV=(PV]d]^Y$bB%tUB(JV0f@:DZGm`L>LRcbX@H=!L.&PeYacq0nR@3'T
%)?VESejKQRAoYC3<*YELX?a]9E<O.^A<g/t)YaqRhsU+RV9!ZJ^.Se;QX*qY;5mgmGcD9cJs<.,hQFF-;hBN(iE3VT7H%'@W'H-)
%+\-M-ND3cS0Rn;9Z++#Y,EU7Pgp>=U3Y)U5R9krfHa*n\"BqIc):@U+BsAn=%XY3La5Ag66&K:p=XT7j@eu)S=RS@JA5Wj^;;lKV
%2)"e2lk,Z*k&m^gbBNc3D0R>(m_Z'4+]LB'a:^?`JmG:r)]_e'[$/%o.4<0>=>$),C\V%<`@B,0d&]Y[p*7qGebL_Q;l=llAX-J#
%e_KXB/6e(i6CemQp9oF1o-:4:QNdsh9ii<h!!*J>+@'rPJe_C?[-B'-Vo<NBerSQ_RC+Zsj/Z9.l"ekDA1X`K1r'=k=9t).9,2*:
%ctT`;]Io92=%Zf^:f]j0E>c__;!U4r[S]7[!L<qSkm2`A(o>.Ee*X_;'M8KL)>=k<9lW\=[Q0q7i2(>M'ZKkK-U7\?/4M5J,q=7c
%@`\Xo>#?.UH&.h4UWX9r/-Hscfe[1NE-s%$2![7.)Glc&]e4t6"-^Ia4(/0/.feD@8K*ZZ8n<o>LFHd^A'-8RM\Or%hoIdp18LUY
%9r`-_&lhHsDT(_1QQH35"?Gu\'Ej@P-!tdCkUJ5J(O7Kr\B6\+"urp6FEBE24(SqYXLB.kq!)j5^X:mKHjra!X#)/X^>!S<L,mDC
%8Q(.0)g"j1Ck]FBm"qHfh?VN9Mo4#(WVC5YR@QN$Qfctq63q_t.5us*L\#gd!IH5&8m'P]SOR,lWj6;)6VpW9'g,[G:%gf'<raP;
%jG"nFlqD^`e1dgjnHTBgZeg9QCi]l!'9e&%!LqpK+[Vp<&RpE9]iQk6gV)%!"C(gm"3)2]WKUgGP`2ZP&29m2:@8^s:+m39D[,[H
%(kT*t@VmrAOfq0u#5&3/)oH4L0"*dS1t%R*g2rB:.Kj2]^C5[+rjJ)5emYn3Z`'0*WBg_5:tX/>hO4`/+6:B#JqKgPW"Jno:)q'!
%9Y$9"=B]?WeK%tPah/icI=<":cnr8X!a$Rt#M5faYF26i7_>Rce*n2t^MqTm6-Em]L%CG(,+9'Q3Wu3a:3.kW(*)jh\lMs/e6/t8
%OS?*iKYZufTm=*WS"!m61B@,AYan$k90.6'WXsEo!$"l*2Oo&'jE$1q^F##'o6*q1`9YJg32%H>)L&T!Mo^j3K<>ib7,q]*Hc5l/
%4p6=@(KL`<+Sf.4#"nr@#EiBnaG;6![AV"jkaol3'oY9(@>LRFUi48AXN=#q!QC`HP7`43D)LG/FWX`\:(P_Tq_;<QQO7i\U&gC5
%GJn\@OA%<Y_fZHP.Q:IkB4A(V<,V>U&9$U?3.:WY(pe18(mtFE+>`3rEm+Pm+EPdmFE1I0SUjkWA!6O)^@(STW$MT4nQHLN@N8]N
%^<U4e6]-SfV0$r%>_n*%=d:a.TXOtcXFLIKR]7m=lpn.mjIBWT.d5j\#Cf#eBS0F4d1#1H&qo4C(!%$OrIjprUS6uj%N.mk';S&'
%QS);kH@TNIGrQnLM(-0;P_lEqdq-+re_^%_^]f%)f>nR-Q4_&_W/2)\.jg=TW6Ch(&P\-D;jf_7G6rm\,d&Q,4!EoTA8S9c(jd54
%9m6YnUUZ*kG/cPYks8+Xa0N:6N;GTWW_\08EKjMI"+ccmS:3lg;YPc7*ciHU]#*at%XQ_N;9W?G*oGGWBHguTd2N/,AMs8[&:]ZX
%0U<Sb`i;mu5iXo4\V!7q+m8YD1KAC(+F`%b$%CsSn'umu?V4Rk<EWU*&lC#1``h,:.f4/CPehX>=sU#Fi?;0G!-bff)0KTt,/pRa
%hPYZ#Ks+a`$1_!1m($4@#q>p4!:N^DT1Vt3b7L:\<r(;J^lTO-]HBRqjH._\f\EYT;aYOG'S=j49S=CoFD?;)mYD1Bqb1nA\hKbk
%CiQ+RG3)#cj<O+O*GP0$CjPl/)eMDbs.QUh)_^mk#3.rJqQlg/rp'1"&$J4tbg,]NIJUaoI/2plB+OIFqXnLiIS&hb5C<FuS$/F@
%IGXnca#AMJGPL]<g>h(Qn+\nW1]k@303A![bhe#7SHJ#J3HK-[,A%+V"jgbM\W7+LT!9s6j-KVcc?p%i(:]VcnM0t4;9%TYL21RK
%?F7cB_3i,%ZQ94%9Ys.E4iV\.D/^QV4&(\jk:obq8\hPJY2"Zf\-qafTCEp(>D]YjTK>Uo(DMm=4)R<N@JZS:Ne.1)[4JIj'T?o2
%M%Glf!`J235,aLf;NgfUfIbGr6$-@i'C9%MNbcuq#L@CDJY(%NF'OW\lE37ieH*-SF,]m2_aB=D\G8aDTfE;u<2;k+Em-q!9aAir
%_EcNTB9Ham6?:0Qa"ck#R3IH'&b,mI4C^>T*$DY/&0*XVKJ%R\Ic$c[)cJ`Z_/5.SOEDeHNH)G9f4W=I%1+tnIh<V%[oqY("gKd%
%4-<:.H&VpU\nI(IBE);>`qs_JeX=l'^-ZgE'pmP/KpiH?A$"-c5()!a>gE(hcl)S'U6!<IMorIYT5dhE3Lql3jG'u[PKgTBZe:&V
%(acM.Yg-h8L\lHbA_a>QUn='6]*CQPaOm""L2)=\G^?XOKuOs@V*d3kL6Lscj'+fYN:1Ic.?&6VMnd5=4M=S,$&i;0_-XnG(QViN
%d@`/4XG6<bm)=3mGT%Ch@XuSYBEWN6l\(rSK"ID.,\cg%>gSsEZGBhjFj`j;a^)PeD\qhNU>EsZkV]9-f(tX>_09?Aa+Xn;Q\ug4
%`Fs^RA:qJGHk*$dccjAWJM'5nXI0Me==5``.ZV<tKt(75=Vnh,">h1n`E0LI,4EBRb]/7HLD(KQaP"Vq/4MQO]Z&>%WBj_sXpZG?
%*(>e&K\!>s`D\)@_,q]6;\0^?O&93XMBTq!$G'[L-kK;f[UM?hF,&Fl:7$h'>fE'8n5oe($[a$>\L496$#dD_79%JsA>@e&MQr\g
%8A<FbK-_;i=KiLK.7W3&.;mF]EZllL%Ts4'@Sf0pOp4E2(`ong_hFhpH!Dp<MGa,,3s@u+^2IHo4X^]#)]8W(4$PG#oOTS"@b;F"
%oZumBV!1K]OV@3+:^/d3@dFpr(M[F1)=KSQM#j7>H(^GKCHaA``7:oSJsR;gEa@c66tVNmE$&.^@\aF4(lkSi^l>S-\i>Q:]o2@U
%M!"nL@5&<M[fXdG#`3=3&+P@7\@CN,3ar6+CY=?"(cGGO"`kh3VHYoNE"Q_iQ@b"h\M8<H4WVt0AUNS;8jnWt%fh\Z6O]Cm-4\Kk
%oaBDmAg%X^N?BBVRSX-1Cjqn=p%tM[\2h>^(l3/Z1B'AAE'l3AQDQJ<0IoKP_,AM"AeMGLC(fcP3$;l)@8u<S4r<rI9&%m"`'GRJ
%Q2ttf'+[$G^R]!ScZ66$_b@1A'0\sB5r+F%B5e@@qb@b^`=h[2jf2t5@ANoh'cVhDS@'bm&Wu#JHDVWN_&sMp?lM#]MmQhW2V\im
%<8m)X22nUuXG!5b#*JF.`aI=Q1iWV&Lk]@4^t]?i@H\Q*:7Po5^IMpA=GE;Y*eIl=.6Epb5r%.k7?uVm@2M=<f;PV:*QgVAKqVN3
%Q!>.a)YmO,>8V<Gb`AD4#!EF*K.bBbaFN9$SQH`ub*hh['s>8(`J%?[8;jT&<ahXBS48b.#qWkghA8pqOBA742(41C3oF_C;&C:G
%SD7aD@Gp9?c&5DcN1[4(5%/h7ZWuaJo+Y,0YR+qG)1tR!kEL.$&hZU_gPLTG`\s*fG_A^eX'B=kOhJrtB'1;n74b[qJTnHHm<09U
%@:VTC=Y]tIkT0q\nA^Sejtd3M)ni$e&V2X%6?SRJ"h#W,qM[QSeJ#&,jM>dU[XN0#Dp"taWIr$$fDEB(bl,cshVaCYn%p!%[0pEH
%+:SO('+;o+%Badh/sO0prl)IR(kXa^0.t-".C,g$?SJd1>@2KgVus&X.l]VRn?VO-X,9X]WaHlIo"c#&"Xgtr"aB40`=n314udIH
%'-,m_/AWJ<P2N>'JCFOMIhb0ER3EIOVR%fl@71oio'=58Xm]nOi"-)U0T)B>h8Klj6gd8N4IO<oM]3LT"#+D?)L/#EXkA&/0,GBR
%W.BLe@C:>V")ik'Q#WW)`dAMf[;uHM"Lf+mXcij*/0[jN8e-f;=9;c[)]3a#l&-IIU$:.2beTm9"?hq^"5C>ZDHsiioZ533>%!i%
%Qk@/8#5Sqo3._k^>(`N6$S*p"P_Mi\(i3aG(++PYlGh2k1K%W.Q)0*HG]V0ETEIaZVMm#M0V['Q=p6'':d&#5_$:Bc[+Q;,ciIXm
%!PBl6JAK1>@]:ag66N:m.i30u4hR9lQrW%>2\6H!hdO'%Lk)gEh1>kKl#*a^3<Z`=Cij7iL>dm@ggC.P;[_!T0KPki#k)"XJ3t.f
%^qd46OVS*S>D;Di-S.Af;&D2W!">q1P[j4_iqK5m47iIfO0JleDt,m_@/gB3J/G:b&K[p_OUlI"?]YOeZB%Nd8n$G#BBERR-dY+E
%r!SJh`ou@QD$VHGj>6<ZNW!l'RJB#Ys2Od@na@)OnSc=n;<Qs;I;\0gFtb,g:4@BKrRF@bA't:QlG[:lpD8@:.Bq$QpGWg_/hc'g
%*63FmnGZlI2/Ui_iVfU?!:q?%Kg](3i;HA$OPKF`hHup4fGV_t]?e6brM>1.F.rP,,tPOup/eo/cCCa?%A=iY>[;#maTO8YO_B5a
%VD9D_qb&9j*`U,a$kHf%^cLj9IMeY`U+O8)R,to`reg'OQ@njs01ZLMYl=2pak;gfU9HbmN%e@`R0D@!4BR*d5uaWremG5QPS8,h
%?aQ(2.)Gb\+i"fIRIumq3^R#@oTqtP$kbSb06[q7ORtm9M`V3&*MgGp,c0dXoTpA*YkQ$2RrU1j#4!pN>3)[memD$/jtF*V4B8UC
%Vu<HF&B(7?KnRtq=5%$Pjn]f:lS%7l/GiV`^Pjg$@sFmLAYr5ob'AIS5#O/]BBF"?XM+-&JuPJ($4NL`===In%G"nQ:8XTQcD84]
%7DZ*Irpm;M%a&-`Lp[q0_I(66fYPDubHR>u8=]5eYG/D[L%9F_DtIH8S]R!&626AF6unmtKC9W(88TF2Ab*a42iI)?!`IKSfR?>6
%0OBk>66JlikPC1nad)--AaHN@7)+],(#Ljq"8NGf]Ft26]a=6=VI+N*n<fg@OXl<<?AO%XCGVOC(QgBUesth<hdJC78U_g5ioXg*
%$Q!2%egZ&>Hb-U8_f+8!Yq6fA)4]m"MMsDn8'tG1.=S8JaHdh\^MJ0bXe"I<NJ67p."3&Rmq"6OniKOb@/-S6R=Pm'?_r9V?OX]l
%dEK6?I[S.UCVtkb(Jdc[-Q%;8BS;(%(k2!%U/!j-r,R8o`$L#p(E/o%a!lJj0!$!SF8Spn-/LY2=[\9pGB!IH_!K$oitp.:#2V3<
%],%I*pn`LFd[`CIM;BKXa>n^[^IqK6>PJH-(gsJUOSfI3C%i!u?QR5(:ac'55tuI[q1Y&YNSsUAfV`D3'5<QJQ/rfKU*PBQQNF8T
%_=C5"\,888r'Ha.^Y!7L[1U=3KB<tQFm?1=bqGl7)M7)f!g9hlbqB7%F?^H;8nq'47)-AG.kmOX(BRXM>_mj>M$;`[Lji>AJkTg"
%Xm_`">_mj:S(_0ad4[C%ih@J^^HcoXkN4p`IYm_5hmY9\eX;bpkEk'd][&^TPUb'+Wa-ggMt..Z2JNg'?YFll&^SUD&50lWSR;[*
%c0muK?YFn&!,A)dcS$3Z,72ZeMb4$KE8gVH=I?;Mq1ZbR0B`/-K^jU$cYm"a:H6TPY=5J5T_ScZInhYK4(s*5U9_djk*N-Vo#8n1
%#8;o]_@+[Cd948n"O/Sp<+TF`r1Ypa"EC.2"\dh<Mk/uH6VIL#T_V=,[h6=%r3B!Ee<6KT#[%Ldj#"M-hFT_KVYR'Q[U.>Y9&bmT
%U[KG6s5XeXc#/-N+$@:^QcO%6r'Kib9C4jV)?t8to))Am__$+^EHM>iKBF$P/mB-`?`*=J\-k^!ZT7&nnGGo*l]pWLpLAq>G^_YG
%7-7(I$YtM2^)__cV#!oM&hLfAPNK5#I%d4Q?EQ]2:i;lgU_"e=qs6W?]0l=/ji[-%iT>6p6cUmu,E?-HNaZLj.=SfXTu+kZjmC@l
%ji?<Fm-2[]]D%Re+Ko:!L0c7q`Ql?f+T%H"j(qpP"4Rop??#e]pG9;IOu^#?nC9NiHU22c.]"r/DtdH#FcbgaK@e_iSlpJ/jIEsX
%nAJ$\Vsi:5hjMl9GhIL!qMrfV,n:.sc9QI0o,V-H*IPT20%+r0k;tR2isV>ppYCg\bdTY<34O@P_*G$;1R0V=?#*S:^AOSf,4\1,
%)[bTAisR"7IF.cK4%;oJp`^nWRbooXDr3Z5l6O*"JKl*L*57AgkB*Qih;+M*#%,S=&/GM'Di]l"c31kSjk=?Mr4Ub1#cYJ0n(k=C
%"_[O8b/AAF<&W%<#+<<`$T=iYNU7Jo'>.gdDi;.BajnnA'DI*"XQOcgm3Ug*jh+@CMfc5t3#(T`EsngO8UJ#</IQO:fo,]X!GZSO
%m)=$VCkR.Im,c-8e'&,FGP;u-YEor>^d+ITH<KS=p#Kr&/;_8(F0aZ_+t'PM[<8HIou;17gR?hke-gR5`d`@tLNI"e*O,jlRAC^%
%1_l#H5uUN[E:c2ffS-#ce/r)fPJY=@R'/g&)[%?$Ibs$o^qn>)E'I"+S=UOM_pIBZG2B3#nfm7NlcP2K]QcKOT;d+&baEamQU<O^
%!tik0r0`jp3n[94o"q#?rW22Z,.(SOK,q&+O:!hHJ/D-3m9o%PUZ-C-VnGd?3Q6$!YX*dUb@:2\3BN6DV"W$TMhR1k3EUQ8N#'f#
%ZD_egIf@4+$]b\;_VjM:1Mo1qp\Dt36+V%+d_<L)#:H]K$h5)r&BqU#^2WWqlQS<6+^bX.3-cr\\bDMUQR3UmhDojQ6c"32S<N[l
%,NW@e07QYj?:O4Q2D1N4PVVXpS@ja:Q+eYk)3lFDs-](;0c-3>_9#@$$sm81][Nhm/sO"nFo)&&ah)rDW+8>ANP=A*P#n,^b0'6&
%U)+Bl'g(2^37LUbd$[+MOuIu:_8sg*7m,U]OdG#WN6bnmATRrj>;5V'3l5_0R?;]]Q-RIo!JrfPN4d3>(M?4oZW,m6O"CJZ00(dk
%^Cp)M@UGC'(3^!TO`Ol_]E\tgR?3c>8$(o?a=B$S2ARGhHBLJ@Kod)S.e$)`OV]lU,a)*rn'o?+(HPlqWgjZkaq+2^<YEGc7eRj[
%c=FQrVQf:&fm![se`PR8["+f4,NG&N<5HF!niC5KM`T,L]5aFqGSLZu.?%>(D6[<7k]dubb3@'hMa.fcQ_<@ZY2=hjQ^&e@?HIG_
%NQ[`7qZq'^l)1\Y[0mKuA47f6`8u+pX:5s%maL/^_@(l7)5\+)kY>M('YHT;<]`,,G2KbV#^C^jJmBHL#iUkcr_1(bXZ2tlK7.s!
%J[qVr^.WXr\R3I&61@:&&guQ?"&s,SEUT&&WaD0<pXiD3`4J+k3Pi;=H]mnc\k=`7R!>%T`ssCuAcLK&WekTU6Fk:AX-'T,`a'@Y
%Vm-MOX/!<[I(R;ubeE:aZ$R`=-,I"t)UXkCZ0fC?7=$Q,G2X&"@kOoiHj<jR6F@1$%!O=CVHn)#Pf=p$"Yji,ZL";H'Y2^9fki,i
%>n">qi;iP"+kVLQ[sdf4!l!,e?So<DpV<c=Yj42:PNF(@D;&n"FH/NZ\2*BENh.)1BE+Xt%e%biF\u%(]_7ao(Q9Bigr3E=S*p_)
%Uq.rZ!g3,/;\qcRdXkC6G'+G94.$%jOY`abd-^o.3h\0HS)*m_@BtD[TkOIrKDc#C4(hi@]'tb7DM(Y"-+-9V>f_#bqa\K!4+1b=
%T[F!KRIkf<.U=0*&[)]l?/VdBcj,[cnCIs;SU#;ZW#[_+dpqRWU5SJ[UW&tNKE,=4=EGd.+!eG862VN/>nes?O*(rgl"l5CTfYDf
%HstAj2M)dN4bD<mkT2G57@eR0d%qEi58\JUWD2th%(ZkAB+9BD6C5<[,Kpu=\leYDnI#]['Y@,1.<LW/m8;-k3\`U9=g<LMl\.]m
%*"7e:3/9,MZeU2h3HUN:Y4]r29*:1NHM!s:OD@HMm@&>Um#H>C+.,K@HJ%1KU,ukoGc/nWYd\kIP6M?ErT'3S#68Bt;;C0WSMR_L
%Er'%2a"5Mi4dT`L<<5CKk>&5:%8'kojkR@.W,krQdIQNem+]M?DNO$&$)TM*/hM<,6rYT@GDY'_emR>Bp6l?k/d$iZp$Wq.*(>gr
%.l8[*Z]@l2*_SeiX1FslDAIFK-):XSE9Hd#9Tn>Zja4n8FRIrWrPG,K3&::>S3'fKb[W9n>isJ7aD=X?5b!+s_4:r7?rW%GQaX1Z
%EDOQ?0X>(7#'DPMs4eJKJAjL@LoL-AcK.EY\sRP;C^Uj!\L^j5MS1_,;TbuQqI=SHj35&5F-p5Lk$6VpilURCqqY'Xi`lcaF;O(E
%HDYq1Vp6Ub!j6'1k>GlMHtCU"UPad6k$/=6/t]tMX))F:=6<a#FJ/M`3EOo.S/-<$;?Lab$[44+;HVK-gpn!C"Usg(V%hX4jj#1'
%!b&%ccD@1i.sJ%cM.fuQ>ibP,i%;8);]]!okMh<[V>(::/l3Do.0aiG;h'&5TYq"MVjs,r4aAcH3F>:markVV'B^S6_LZ_Nc@qMI
%4IPJB?)%9<bdg7X1%KEpc6_ouI+D]NKn-GP@*YSKp<&(LQV9qM+`$$W8<!a>_3o@i*ij_7bdiS?lrk0G0$8aG)][QhJ@iTARX&Af
%<>KF%M`I-Mh./BVn"er*CDZ,<89I",c:t-\%?`O1;?.6r_OLu_JTel"bJVs>cCE'.-g-+FBRg)oA)Q&Ibg=>I]`r]K&mWM!&#lnu
%ipr%F">+L8HFf=kHS0?L%%=<9Z?ngPSpLagm(#b-m("PndXjV@`o_t;2q<?Hk-E,J?;U.R18C_;$kB3YKi?Qm-8a.bE+ab\QT;=F
%#j,";_*MGY!DNaQLtt(./q462o>6ti8hj#Si6>hZ:n+VBgRc*Ym)5AdHH(rF"F5&C["Qd3hHWf-:McZ4&#hB,S2_<l8Keqh\Id+7
%\e+$k8n`#pk>L78f*XhJ!>Fj5k$0f'$p\INA_&g"S$E1>me^g-Qug[*MH9t&/m/asp5]rU.=7cJKfPK%L+FZu:%@RD^l(5i_iL::
%?)_lgDR"Kn&Qh0G\#=?s@=nDDS]`OHO><bUM>1S44K*<E&WH*bcD<tPS?+O0dUjd]9JGWB(Io6k'6ERS0'6EA<7A=`<C`ds8H3jA
%c@oAqbF*Dp?qPPrkOK23ZC[J*.:u?ZF0;InL3)U:clu*l?E&"&!b<?3W,hu>&P6$AbYf-(?+G"o'kYo"G:q'+$(Z*7>g<>`qjBO4
%*`"hM1IrmFNH#7W`4:ZQ\W"$YM=7)f$KL;-q&dHLB3?"l4&3/nWlRto2&A_G]sJp,7CX2nmL*[qXr,0QbhWFF?];N_p&A+1>SD;.
%j(bXqjMA3^e)cVBVXhrs$ZBuKT@6qV'i_`(?bKA!U.Q%u&Iu:c(+Q&'nQhrrnspSk>enKJ;;ajQ#cjZ13#H<p!R+hYcSW0D!j<Xr
%\VL9(@r^S(KE/tX(Q)H_cjP&Y'LOLe:MpOhL0T*rC"\1_QW1j\2hE+f+FBb5f$aX]9L%Q*k/K4d!QWmsEVBfdYB'e7i$:&OM&[=f
%+YZnfgD0oO:i,==\7OhmlXsC+Ql6ikL9ol[/&&,:;HtmaenmP0`%=E.Kggh+`&e58<Z)/GLeh:oE?Rb'1'hl>*T5Te+`8a_K(d?B
%>He,o()nl(ZR>p6&VD@==e\tMgr`bR(DSPiCpPZ>>WDao2)l9.,2Q0-)I+!1BRs2f!-IZKM-<Y*KFiaD,<0X^dNg?$LFb?#H[9,9
%7F``3c3\I3PlSS=q/6;X^^rTVhZ>!c\Q+`Kjal,N+=tTP@8(\Lq(lY#_Q?M:3V=uh?l/3IpY*XqlRd/KP0kZAc@QXm[lB/m*bWW"
%i,Z-lD9",#Csolg+M7l:/;k,6i4HrYP$HW'DUATW732P"Lb`[#_SaJa>Yj^ObRcI^?H8eOASQ_%/(6)'Y\\pT2N"JdkE[!8loB9e
%\`Hj-V(S(g<>"OB\&HP#0-n"l*bNf,$N>S#RT^/X>=<h3E\@j1jQ&jQ&_qC;%fg"mq82ka`g,Br6<#K@].GEl:gast[^]7VZJ/rU
%,AI[P5Z$4PjN=5KAm:LMeRuP'`'aT$iO$%d5/Adj<a2p4E1n(G>6p@-#YnTc@NnnrPdV\9mlar*D1eT1(iAd`*&#TNMm'og>R52o
%,d::$caN2#NGtI)e5B+gT@n$XoY^ej'p@LBh"'I178XdHie>O@jUMRFpXoC4!<"%G7Ab1q<uP<(1SN]Y`YRGt`"FW0pl=X.$]/`'
%.b7oG[abVE-u9jQcSGc0jAijIbR)o8mHri8`P<c,i_3]p699]qk(].bq,/TD7DoKZh1`LbZHbWSgpNETW!@GsPh?o"Qtr2dKGJQE
%neK]#CG@5P]$f.>m_GD0C[L%n5"KIoB(D55S@'K/+Q'k2efm'k"L[#,HM:D)M69lUT>ajc*MDG'[Fkq^Y%4puaM?Q8\8!#h];TI9
%D"*soQ@!Q$K;_i:b+blCYCoPRBPJ.DSgTh-N*G]Ui?YhLploD2[7)uK:t0)a]7ZfC`QtYm$#0M?f__D@L%!Erj0@6N;$XM*kNoS,
%#IQ1)g;`ME;fL2p9k8t=Kpu*K$FkH.9oB"JDqcjgbJm^nR@a^E/Y_t`q]<T*T/QLF:4Vu!@Jkni]qJ@ZTeGK65V$4J"ZL9p<<Y63
%;J;iU.l/asHPfjN9T'O'(ph%OgUmOV6;%[i2$FP6nq>,DU"@KGHe5G3hkOcQ1'JsUns"ZU"sY^V=n[.fUhsGc)*qtU;F)N3cRa<?
%4A0k%d>fI^Q4Uq+L=P3eZs`oR\Ca)9$R$:FTVA!kK7Yo,K!uDNo0Pj'a>ocHi1WR[&E@A:D1fd"k(SM4$l*ac$ghn?1[&D^B,`KD
%Zj>SaeSS-m6Rgu%VkB%<(C&S)"p&RbWmi/WmEQ,]Tq;L'P^sPcN[3X2aCj-!1\Y\kK6jtQfIE8$]/*;hLhD:.X^\&*J@EWq$/4)#
%:u;ZHD"lbEK64O`,UY!P1";+V3hji+D<:bkc8[nUS37-j!S%QqeO;KVkZuU0;%.I6]/ZXo'2fQ;lbYSBSB3/BAqt<7'Qg\![h-<Y
%bmsK4SSWHPN75=L,;4D@RLPFU@%&+RpAt\rg#:#5/'mSO"DQ6,cD!Xt@$q2!D,u&\+IT&[Qc1]&P=AjmZRF8<'Y,pAc=8@b"sD%F
%g\9WmAXuJ3=*e"'1*OjUm'>*`pD1:j>LPO@3OiXUF(GQ^/@$Cuq/g(K4:Cn)^@98LJafD!`A=c"10A*bHc%>P$`bgFO<bmnCbM&b
%"K1U+NAIEtLm4bmapt7nJj)))r.Rl]-r/1?MGA=_4sW[.HZ^gJ$^iR@<6-j4;C$VO_'D[(FJ$m8AAKh&mHNPk-.PO*#E<PD`5mX$
%[KH*h29B=<K,<(Y_'*RqEUd<_A9UG/HTEQciO+id0K<U0i(P>A#fS""49*PL1$pu_@:p'Q,&DLkq[t<\fopKuP@/']mcDS7$ZLOK
%@t-(4o$dC?SNmrC9_OS/OhsMD.2BT7Y<IOJdA]_\?u>Oi4Vh:k_"K>M=Cg#S([g(`4U@!"gp'C`EXt(+Nhp+5FVK^H8P`JW1UeJK
%.$,q8!lVIr/G.I:NeQ)ZJD?PO[N`5Ko$QG.PcQLq'SW4I$@a[FKq/en57>nAEcTC03+JRb1CntSHg,n&f^HftbPeu=qh*<SFmQ?j
%ie/8-]S!h:HpWo^16jE7$EZAcbL9Z]S;HniP8nk+>7A&[TM&=fq/cV34#p'b"A8(<Zji"Fr`o2jcJVK1Vh$3Bn<>\=Uc.]V-%HZX
%3M7c<c3+Yro5pic]dkpF(;!?S$BIW=g2=]YMsF)?qoDul_^G[;:?$fE@Kf_4p<CXoN>1f[D^LUg$B$5SoCLo&i[T7k*mVSCaTo?I
%,gH`:V<4&@OH<1el!Wq5"A)1_;]E1bcE?Y5Vk]5Ei::@=CteOp!V!A&@;*Ap3VNu;=,k8(;qiL_NNmqsUM;%4]RU(A;PKA4lkClS
%=P]e_O$-YQ^Qog)mmfY[2m\:1L:sYr2<aJHCtS0E*3n:]M;Bc(PEt[6SXVn5QC[N31tA7rK*4Q%hpKkt@qk!b:S]]62d-!-/+%it
%!sdUj'.E:i#g"-1ES<j_ka#\l5c:@p.6ri]5#q$"k/u.AnI,)KY=2Yj1_JL/2H<T*Mm=0`5/Q\3.(uk*"C[\a._'WRA:cE8p2/r@
%%G62^OE`T,45?#>h=iEilY?I*NpnTo^mqT:XAP/3e&#5J5+IabJOE?]gjgh,8FfU'V+&4Nkt=5]*UiaT<H3f!614fLq-6+g&`a8S
%1-CMm]ra$2U;E>q>#0%fm9><RnrT/,@4`Ua#\r4dC6=\9FW^t--tn9sn&cdoB,:JqQVETp%Y582)=uuPV+S%NjenH`67eWK8SEB=
%oeLm,'DF.+SgaH"cTnl3k/@ebWDhPC5YGa,HnJB"5;t:8/8bKg*92bULm^W?iS<6$A/]!da"^dd3Om[%na]rd0-7&T*,lGVCI`u9
%WllIkKfarD.m,"D8NS/rNt@2hc56UpJTq3q_I']a]16bKJZ9HTW<7oso!*PP2\6t''l0PRZD;/K??0R1lO8#m^([Z)YA#lA2H?lC
%8=Su/WM2AtF*`F\j]Bh]`+X+ETqg6=+*^iES.hsfOhqu7kllR[jL9fW9_'_GDTq0g!AYM4^;_jXf3VO1&7Y'EfKgq"BnU4Q"P+$o
%]C<X]Ymq3WA]3B#(#U<oRCWF'Q<4Vf&E\aYBK(`@.^D#k4"goEA7Qa4pI)/tn-q1':W<K/P#A6]bJ72upZS23A0p6.ngfOq62N0"
%N(Tg3$UW'2(9,sV<R61aL@d:6K:=;=CZS$2-Rdar`k^G")9jZd*m*MTC;JmjZSXQhh%NM"QnYcQ+ZJN!22;F90Q,"b.;a`I$?@`7
%3Tair$1b7%cV49<(sK7H70ha$IeUZIIXLS^O<\c3l5=Os.988PMu^=Ci3oTE)**F:Lg`i9XlB&)/>%NieWVS^>p%_hn0oL=c4RPi
%Yj.I7Gle(%+-Zk6D32PDb`lZJAg>Za2h(oFc6W\@i_<:$TL"g4eYG7oSP=^3%#miQ9S_5U^KO[9\B:gi;-\M19SA5@L9_VJoa&,i
%9UUV?GA63Rb^8^J]19FG@W74$4nu2l$q,_7+DVdlr3I]5:t\/i8KT'`FW?3&BWj]gqm_Gh02@LY=$#>44*6<pa'<b)oZ8,i2Q,H,
%`9j_i>ILU8&[N4lU,oDYCkG<jL=V]>#tF/b'P:;[gaIlHo@t-7qu1.XUb"rn^])$<%oe)@fNEQ?!hCWob(-CmAY*.q?!$)^VqeXQ
%&Wn8l!?M>sO&qtVq^N"`ENir"K[u\LJjZ1khs*cg`6u,2BsE1r6?2[4Yq7ptnB-/=Mf3S=,*T:IDL61qK5KKnG?HH1Bh\3UZ=qIe
%"``gr=faZ9]+(Ak9q=jo$kcV=n4`NtG5trRW8Ztp['ZS8_5Tdu%do-'`K_HYffeAB-n`d-U"hOPoY^Q&OULo%eb3QAT$9;rY<bqY
%:%qK'-hmWYgA4f2K0doq^S/^!6$oQ5+D^ALgB*TAc+)SN?4Z"8M!9\IX_P<_OTAm/*U6:8h!,s,#)h53h#pg?J4):_rYCf(DKQ=@
%'m"h,ldai-m]eb35'Gj1a:5[^VTB;NBb4_SD*8EV?0nIF4:j.Pp%tU/%SnB=$mG7QhUE7j_sU8sFis^%_Dq=O21)t&R4@#-B(8%-
%\6sA]3U.2+PZ]`V`-a@KQZt]q.OTQ_L^b'/=S<SmgY0U>Cu[-Q>ADXM(W'.Y3J\V#>n\q(U;C'>*8*"'e4E\nUc-p!1bl%HlP./i
%;VW8V]A\!$1?9"VkSZ;h.IA-2_?$h1(&ZRc(^ZmU"<?;9";9eGa^-?PnNhY'btB0_;:L/d+7K_mRg+Ig-u;J".;ao/"!\)oRmPo#
%'2KHRfGJ!;(KY$pDIV\7V=^q8noS-&AF)[*LIEIb%digcGLr79/dNXL(c$[<I#94!@a"C"Qe:U/)<YQF"C!UVWqFNZ8=0+e%m05>
%coj5>=`',(7!KP51Si85\OfiC>@@0RF'bUX<%tO;]MH.i1tng0>J'NUaKep[KF(q@<bhqmJCjb)l#r-W\tM%hEPag\`YXeaE:^#m
%MjKpI?^>lu7RqUY9guc(HM#R9i*<%N:=T8>H%^)Y2k@Pq+Yh8H:^G[\lX,[p1uR@MeV8!S;s8P36A-!WCrAi^#'6#Z>R")iaJb>Y
%Vo2ABOWdN&CWg'E2q6rsX1"7U*Q&<iUBL5J</.GEk]0A),dLL6Ke`'[Ls1t:[X$.egO+V_B=TUI:Q&:j&+_P:(*9:\NG:10]-W&'
%AQAaR<_W]W[R/EZJA=.A(thlV81B-1P3-d)!<+03F,Di"I="nQ`K=]CXNg^24C>"d@KIl!#rIR$,he9;)]"J>6A"'8I4q%=m/UDq
%GpbG#1L_`.GYk*^Qrj]0M+I\5Lb+[)5''o7=sTX7$Jg69La*Dh/W7qL'Ol`F64ZBAe->P!f9pYu=DeTp8]&&E&hX,7)Bj@q]^6BQ
%3t]fpF%*$[<`oS'&9g@W'`i-pipjpXF<V@R`-$\MV4F6Y5_W;F[9g@NH$6GKT-#C(58?H2r,r*;M0!%tB1T'Na1+3&;4^CtnKZZD
%n/h-Q\u#mt+i^AIT=0S_,\M<JZh(\<//lGK<\M8++^DhEr`A:6bJdm?\b\3TR?]I^[Fh.GNKD=C,,^OjU)JT+64ad63RVm`.52$0
%rCB56-@hJG\BC;Yg[bnHh_RPZ%NALtP(4bj9o44,J:fNuB6R>F*_`CS$Hr*2mg21`c3$?f`4+H"+.%hn_Hi)gE6kG\Jbk%%,Skb8
%ZE861p*`3l#SOE%F16n3$!_HSI9ppQJ$4XP1sgK(?.I;LeJ=MfhNVq\RMH8Nk][P4SLS"a?CB1h5L[gSd.Q0.-DLbN3%=bZa<lpV
%4)m)Nd=1C\15b[sOp5REe`eK4IB5dP;im+MDek\qaN\>6WY(<8^(FHoof0-)<]14Q%DW"?MHE5.fJ]3(X0KhXh?3mbJ;Rm7j$XfY
%&2W1a9>U:S6u@HYU0Llb!0Cd/D)"2Rn*@r[IIltu^@eXlEjR_lo.-7Hdu%B*-if(]/(retnLA(OKV4+.%jC6T+WW8L+^pcSO(3Z+
%_Il;sA$3k?KPs0!80O#rOpD]Jh/<d?Tk&$2OLN3I;7%&AP9ZSJg.<Xe;T3PAJP/CMH]LQ!lXm\]2.NO,Xo^AE)pE?rPHB.J/!73*
%&;8,uE][i14$gaV*8i+u7)>lUMZk'h-%JH?m;rPBh*Qb4F'Xh#K4I2i#U?HESOt[l)aZ#`.(/,hApA2oU?'\HH;cXce!]!!P22P>
%V._K$A)==9praf%&V]:2iT>@2-epFYq5,/LI-k]S'shbtb_EV`2)&#"b%iH'5.EL)%p+P3b\IW,B+Kr^Xi^?Gb>_8W60W?I9M\Zr
%/O1aF4/j3`>_nT;)-F+nCMhjs-uH[0J>6^/jbNdE'19B,)k=G`,3JPFs,[9rbH\$Ecui2JMN6HL^%,@%lTbZ^1\XT`fd6GNb=EDh
%[M";=&1KIHA>U&N>/W^2dl%3_UXSs/SfZ-G#*&;3A%LYi,?9FnBumeVB^SD8Wg\?*X+5OV,a=LZS#d8(\Ft=NOdR1oYLpqL2^dTJ
%LiLEhjD2PkT1?[=+F2B8bh,\r?leYnmpRC'ia!M+'Q#niI6*'H7dubq67/g\p\8^r>0r`+Gbg=Ve(lKCNjb"^4")Q=-M,q!8f!@&
%@Tb0Jpmk),\i8`^,83*<g[/e4"rt>Pf&[<>A/Jgop\LbrOdgEE;W60Q-kI';68>I'5c:>e>7p0/,s#LBFT<%t.7Z]dGps;N5QV%L
%[qo1cFe3JR"WKo`Mu`uB/YeDh<#H4\5p2bka1*ua[)4tH(G,/k3O[*KDI9fE0nO&Ei^"->7%7YgL[\;$3Mr_GE/\DF<&W\p<VuJ`
%OTFRO?eREW>Qi/$#-"RgBg:-FU(I3>@Le$b*hsA-G-Nj/Kou"\jiB1f@)][*+k/jM$-EFNPIq.4'kV#@2O/@W*/_/=Dt_-]b:rZT
%ftC8aP&n0"<eQjnBFJW^%.f"kFDZZifHa(L]/HQ.5f-E7;K[=3G/q_03>qKBU9nf"3nk+0$bB1lBrJq[_%DZB;Gc><#B=s*N`1Y;
%.L;q[aA#W#6Gg*VhVG_pOtKVU""=htZtm4R0^+F,k&E!c$pHcBBq6_1#O7O5ic_5sj>p,LDL1gs:(@KZJ\$5L)qjd9=Qm.A*5t&E
%+V>cD&(;*CIg.P%XpRbPk/hh#mCP"gabdaDn'_@F(H`beq`N0ZZ3(M;B#4^=q:8i&"A4n;geZ3.:A#X*MO$'jl!h@BfRha5ps[dZ
%EnpT_:#Qf'B9p"]AOmplX:X@b6R"#`+CO:!Nrs`g#/UjB74C$r-j?8O"`tp-2i%V]"OesMKr!nb,S;$tJ4e"PJ66pf],+["!E\Q+
%+L>a_rn]U,W1Vc`is0Nd,@"dQoanmtCSO=PhDbc"VUKf3#L4[A(][G`;+N;>,>_SAG>%5N\QJR(j&h5sZd9Qs1:b2)f@e\La(:<W
%f-p;s&k:t!j2)tB6D'F!\ae'<mY1=31"eH[3GPBnZ_Z%n&Rs\7/5FEW47+<Qe#*K#n84O)[GLjATs2>-6rra7(fX(-J:<"rQZ8q&
%rL'%+B=J,!OW+l86`DcX[[@\),Qm9HD,M(A*D66T=c>gP!Ad&m&hWr28.2+eepF5#UnB+ti'^\Bdb=&U`J9A8Q((,+32M&>N5Edd
%H.7]m=#Ega<a?D>fS5V6.:gB,5m*=\:!l!kXiKSW!Kp3tCGm?M&_"n6jX/[qAiH)=m61O&66i\UZ?ZQYjQ.=:d@4XmZ$'t_JU3%7
%+=ZJPI1$-&c3B=Chu_M.5($:W*[Kq(l7U6qnMLKu\8+#*A6r$$et1RIrZs5Oo^97$M#BS_r?ssO2BPUhlmcJ^ot7T?+D1T_0lnfU
%86GJtc\(J[XY]_(i;f8]C+VtKYTe&UT!+DSmH`MlEg-.N2&_^!UE,NC)C6YT<G&aamE1W7@.kQja]8^bED#RDELl)oa2``e-uMpa
%AIoG9`4h=oWuYs![m2?6?rB>.$2fiRR$#dQV15%=S8MD436W#)#\?eaUCr+c&<BtO%%C2BKj_rC2e,dDc'loZE;$FTl;-F(#Z^:H
%1HjgC9GTTl#eFCID\V>BTbC-*6@->e$7(+-.KS$jMsOkR+EY/'g/c=jL(H=cKQ$ht$#LS%;brK,mFRoH\q5V5bhT.Wi4a_5AFRUX
%M/2.N*\is)niB8%\],8b`[rnV)2^Spn=E$Wf'8Vk30J)pL6`-i9YP!@g8r5Yn.\Y/_/h3RA9JtG8IW'R@K$tN?R@VR8Q);tN@bL7
%8)5*bES7V""=M^-DS!g,*aA"-(MQ,;5iMWhA;r`'9C7e^_orB68Sbi"D9uunXDIFp!&t0He*`$diZV(Zs$O(S>p6o^SD=Gmc#F8E
%SXX(t)DbdNafuR>c+r=N'3E5lis*\T"@KS"BY/qdMq9pC:H;!p&IIp7,-]TXlIn)s>8?*@.Z,09iZ<bhTMeoT\AA1HahF>*W.H5!
%O?:Qd(*Ogcs'(aQ.-)Lu`d,44=OjYaZUV$kB;cD`p3jpo/)er:L6IONQ7bdsg]53Gc<Bp63FQet5>Ds69^s5A+i`;?KfmaM*gcL0
%lg`"NZtFnuOsUloR%j#kU<d3aNb--7[k=H^if'[Ag>#a>U-.GkRDmgIo,XS^NaOZiK?A[TG=LLr;n%ir?rO:d*gFH9dA^692AJGr
%.j[qED*d?RKSNC?OW8e>U2NXBD@Yl)*k,aiH8NA_<B_[V3M(m(lOF?/10hl2AOrJ"d1Y+MOH)<Z-MJ!Jm63P$c5`r0T[IY]JY)=B
%Ut$/JQ6`[bZ,P)B<L6a6?Y's9pg-$P=>Q'kX\6;?D+:DQl>=eQ.dI;dETES@O#*d%e0d[b)%>Tq(0'&+_^A]3g;.H$h,E9-VRlpj
%-gTtTa#jC0b"r`_:4]F^M0.$XEqh_H`(c(U+lp7j;DENSkurP"Y#_s>*R%C2-t3^"Y,0s,P[$rRZKE@m>$@uA-Z6ad>&0KgOZeH[
%85aV.Q7uH50Z\3l5'!\*!h]n-:VeD=5P:`NkV4lNS'n'^#K:E/S1T:VcjYZDf9WB;0akq3mr-DQ-f]X2bI&J?2QfK%_<XdG5mY'G
%![KU>jdJ>X8JGr"R0UMI^5<9YM]dl[/^h!MLHh;g?3@%`/3Ej2_mdO:HU\NZpGue"0b?DOS/?OTH9+,`HZ6!:,`aX,8>]#_Q,3W#
%S"d&/Y9CD;b9b-0#u[[,qp)*S1M'nl!9uUhH"%*<eBJuWP8skW]gaitIO#H_"6lu(A[8$B^g]cG]B]))?"#RA)#;-%#'')AItpn,
%a-'!gHP)LbY;OU=K&,bJ#hq_rK8VbK,n&eGX3u]'?hOhT%H7/Wk_^u9_\2`Y_B;)VR#/Qi+P<gQ)3H'QmR#M5q>m&7`9<pt"UW@Z
%jsPfbP>:"kM9-8l"DPn7,lg&#<E8n%:=V7.f]@Z]]?RZ,4HN,FXtMi"Idp=g.eeIkbsY38BG.)"%-%k`CD2K30:3`YcSTkc9,uN3
%QbXhW-?gXmY`AmA!)(jdl<\1^9cOBC+?k.3'>(+6AQ`U-=RIDW8M3c_M(Y+]>$-<s6Pd$C;H:b'bf(*D8obU)(>P:G4;iV@,Ed+Q
%Y_h&)5tD^)F7bN!Z!9#5mSiU1:L$;1#fO+=RBl!()?SAuDFC!8f6,S`^t9p.(RTL)UM/WA4ll.<h0MIIs1gbGZsL8G2]+sp%Jhiu
%6Np1?/A3Z#S!(I2"c@I1T-rD1,F$aG2JjHE$)@2"AN)8KTtS]CZ$$f`3Ur'>T(O12@2C2R88c?g.oWl"EPlD?G3-ba.fF"jRp<j%
%1L_`A\Lc:e0deO1,DAc*Nt-S0X<WZ0D_02MY+BdHGY*N.@\WMjCctLZAD)pqHK*VWRjV4"j/j_D$H7?l;=^G/&GI40a;+r2?._mN
%>+9,?MU*m]M^8JdM_i>NJs77GT&aQ8->KIQBNMT@=#=^c-p;\'Mq+n.Xbaq=C#6n+.c@:9:WKGF,,7+Tcgn)0'AVobC%4MEY3c.^
%`E=0h*9otFm;PH_!#gl$)S0K'HAL<KOqO%^bgYt\l)>)Tp==m>n#%t\@>Rg(o*goXWe?')_rgi3P'=%0DQ.)*"^IL208Z`inU*J&
%\!*Bjq(a>tYZuA2io_Z:3uk2&,;:44A4HB6BQ?pnUG?>MWZ?DijV8G@R@=@-mUq&f"J1W'$1YeU+]/:m%l"f7nJt[[@1P/N<"t[0
%&^k\I<GdZ5'6=8-m\*#Q.=!M6m9i%9L4%[K'<:q.3U2?MW(,F&3$,LHMNG;TFp1Q.`1(!;OqaeV&Z.$VEXeK3OEg2na8TXi+OWec
%B?_&d66?sTLCs>P%MHkLH\`nHK%MJ(7V`0]8mK?);fX.$!jQ&HPp5k[B1upAc"Tdn#:a-M-3C`_T1!"QJ`b^M5cfYT'(V,l]1I5\
%4B7)a]6p$3.[J25C]kZU9m=:T9d-SgA:VX5dW["Le@r%ROWCloBhEtl1M78IF>E_n0:[UDd8rF5'c=Mr<Q-a*p3O4s8VX$e2<hAe
%2oQaI?mn;'o=-4Mo*r@B<*!#'`QrASKH'1c*!kd*h.t]3R>^M^[OoZr=OO-sL"E\WSJWBObeaG%p`BZCJ5aQR>R,jT>K):r`G6h-
%lEZc.]Yq-*[?A(9,nUYdV<i!]16Yenb(j%q*W\GKADb,sDAdM?>p[pNe6$CX"^Ycs[C@e;9u+GkZH>TpSOhTQIUCW,S/h1cEBUhc
%RC+qIQf=ksPU(D#8HY^PKFe_4L+snj7q\Q\_$ns`feHs+;%GAoa==8*CD,ut4Et+V3R]Z"S"h*,$c+KjOTMa*b:a`cX,=a8*oELk
%g&Z'^GgYS<=]Pf)0Kj;:Vt<@iA>:V!^YVmlJ)\Oh/#H(IMKo@aXA2X2R.>9@Lk2@EK7!cPCd>%umU`/hqCGt<N6sqt`AQTGD7I/m
%"]3nZV,1,*M*\.@4>noVXKgcSc9^5BG!.Q2gd2V"Q2(mJ(32W7(!m7&T:i#JUPK[mG,-X@M*,D;5u1]egibi4GeQB^?Co]$KP;(C
%7]TuIUErYFp`ZN6<.@#R.T*ng;O:=]67rbL'KVOqO_<_m\"tE`[:'XooH9NoQsBn)i?6]oj"Q6RW&01YM!`CK6;#*mCUb3bY3W4f
%Q_^-!!=QNof^tukqCOT3"OQpMB"?;b7.coEGnK=B*+2F]&N\_08PB6ti@S=+pNi!1(Rr"1\qbP)P&nEiP$etBQ65o*IsC^?AL-8_
%)B.fh*9BXX9pI]tXT/AF2ar:MaQ+[%k>Y#4-7u,Q=-(qZj[>1W40KmWEF(r<]?-1_m>tgRmUk?4>?/DUjg-!Q$O+HO&3\*VTgM*]
%Lmp.@VoJ-jE=YW'X0t@?]I@o"abbrWOkZr%Qb&&049Lc]B@M8P+6.Je!`]4T\&Su>%)`lN*braa<NB37(7T6(<CFb'bd9$4;//hE
%HEhh,T@tK?QouNtRcb.sk=a:LhgEV]&@&_o'*O.2U>[f2XKQ7WNfLsBhN"]W2E(ejs%,R8ILQ#4-sNgc,=93DJ(0+Ek!Ogs:*0kc
%VP4:PTpOMR0\?]gX*uP5:kgSk_$2B#G0^>M];DI`Z$3&[5;dsP&2UDH6ir<#n;!;Xn_o9/81gBI).go6QcU'smbhpVU'%F0QQ).5
%8&cD45NFd+e;dsWP]A2XlN<.$_mcf25--Z=LjVs/(A9O"8T(ot-(rnZMg=u'?%3T?9a0X"`!N[L@-h;hO;B3j?i]gt3LqXOGka(G
%+]'Wg.UL%H_\lAR>>5K_ZFB&_*cs<n;no9CA'Vd`!m%p1RH9R`lEd6FNsgTQ$ksm!VS#7f/h.'ckTl$h3Mdm:3_mZFgkSb2()@rf
%E)akCbk*n%DS9e.1?'(>`Oo5Q&ts2Y2]^K(H8W67EM'[OnWMfG789rM+/2\6eV+ke=pX!eX*T/]L^-DsCHhRgMUF7CS!D_?*lF1K
%9G.^o_Mp[`_C%i-Q+K&<h5ol_.XtV)B\b[Y-om9_jPb#22.q]7G_LSFs4Mb*hDgR3?239,s$PZ\YWkNtc,97?741CpTa05lf`j>m
%"Ia(.gub7s;',;o^KP-tgOo.@Oj`'-a,*/9<`dn_C5pO`ooB`O$geWf05.56l[Bt?^gJ@bD1ZY.5X_iH2c$UXUb[]3AeA)@@IT+!
%Pu[s%SCdu)O"guB$OEHJ>@8H_PQSXN.KEJg"bIG9bZdP/YOfU;3C(#2E3p(kW!)hNi[=5!6*aA9)@frO(F*0J_+)g@9`f25Ts!V=
%:QR!W),"Gp'Jd!KpGF4V0Z%'HfW2ge2#(T]>[iBg"#;1,-%^D6m*S3&<M%9BMr@HD#)n,S5URG>a@2i]?3NW:JXe==+*^SX(eNe9
%/Spg,:D,Wc)fL,HUX'$iWi0>,)'e4T`.5XB0fTOo3lVYAEa7fu"1P%YIP3QqTQV&u,pk,cRTA^W+bQ<udYMmJ%jfSW;Rd;Uf8p4A
%#&0clJm"$&5Vn0Z=jEAM`C&,^.j6[!NGJAfW^%ecWt[`4M8G,'Sr2Dk,k(6!RDD65hA_J->.G)T6Q-`!N1>3Q2J/B"Zc<16DIF*G
%@0%Nr8O-(9L]Cb$[4u))(%`=C)1`sH&50LMZ@gO[p_#c9VGB$?.5+?Pb1Kj*&#fdB*Qg4JM(+l]"-NXRY<gH6f!cu(e-uGK3DNio
%s.r>K"PJGgDO",O&L8.pA`0Z-]8c5Z<5/!-K6J7$6sfe6pi:G%2B%"#64\p4A'QgZm6c<!d$mh?!438)mkPNak/jWuo-=>IWf!Ia
%absDUq/hM+&;]]h8[om:P">(kQjJfbWQ;q"g57RP,Gp6iA&#dpQq$0D?A6&$&9*A;$BXY+ZE.K"&Ok>)b^ff*E.N(hZ:FGWU8SF@
%1e9?cWh4TnR`:\%)PEc\FbEpGK[`\[W@IEZe.mp!AU?`*HrY7ij(X-23ZO$-%>$g+EVPL2=U.8HiTJ/On7i"C!:1/Zp9>=#-XRh+
%Rm?5")Z]2U65,Fa,DHOR6"cGpp"1'!"q;'VK7Z8%158Y"J[:l?`d#K_=3HDA:bG\!QdBN<)"k-fLNLUsTs>ku?NB,;iO;KgQ`1R@
%4uWR3@TjpMnO>SWL5f5$C5FuUal[I8q1<d7k/"cgnJ@H6TTRZ6&u\]C3Q@UDm(m[7k"KZK'P("d]`u%*115&,lc(VaEaKT:CpHJZ
%99om?'B4(gTcFm[a#p6A;%ZF"@IhMcaa/[ROT=`1ZE'>We%fri5Gh7Zc7J%JkRGpt&BUg`_t^h]!X4jJ'?6p\!nK)R$t;Y&"tYAG
%;r-Y^07qaWAB;>I$9kd2@(6PTOC=jlm(b#FHPR^=U7Sk<6$?51d=U8Eh*Bq[8pN69K5qDMR4)g#L"\7jBZ0Lr%LbD,Q1Ir$p5GA>
%MGXh]VPlu$M+0+PR.gBtUNIIB8?!G-9IHJ+dk_[e`S(<cheWES`K5UB##ec(o]?4O;E-;J42E9L82u`jC*DX`Qjb,X>/B@$I+96<
%Ra;Tin.nDc9$'5W'@Zq7&^0/OZ!mcHk9PPXARW0U=FhR5\0(Kl7t$N0=r@]65=rZni7,i5d`<hm":JUYeg+j>@IGo[Na@M75q&F"
%l+hl.JA<^i3%KY/>9u7-^mQp)/7M4mB'l_+(5\IJ&M8m+dM0M[V?m;\3q,RI\XlCo&I9S4m5tlr@G[`B8mM3a'Es#GiSI,Aln#*E
%V&?_i=4--;<P7;,0NM%^7j'."UT>jp74C>tMZtA!>/tf*CLMKCh\'KM5lX@#N_l+>A4E`PL@G&41BD#fcPVnFBk$(tlemA[XB1cP
%M4`kO*LJe-d5$XbO=.RBV.0Rg3WpuGrSpukL]]I^8`#dg6n=HkJbCBgSdl[V?-hTRj=hRZE.hmRlkZo7cmN[U65Y_)^#ZZAdc6T(
%J-TB>#]>nIUU$'D'KMEmNPW%5iF%W!&/ZSq1ckcK%9/(9@#eu04*%Y*UFpSA\pO[TloIUQ_Bob4%Qm%Al'"go!m>_]&6fGq$:*7\
%f,b%`-uuXAQro*77As.F7&-M].<hD'O<%mnp4sqm23VQPUWa6^@@.SO$7<WLJ9$WDZ;D<!6a]8X%R_Nq(7B)`jNq0@O\jnil<tl`
%2n]=QPJeG?%-q+0_+rmuOEUgaIlfo:8Y)7.R=k/AZ6g=3*";"*_99+E+rO3(@-51d7p<1A!PG%NB..g4O:aWsJn,A5WPt&D#=.EL
%B2!<h6/<cPk%M5Z>V#psAJB1gfZ@]u+Qbp3d:<A7a3Ro2`Bf+uFIs;P]MM24._dK=^Hc<;IQ<dbd-rOSj\T!fG^;k@HF]7Z;Xj7m
%:(RR^%iiJJ`@gUY:>A<U*<XG%\K&C,&Q*0B>Rl9\&G!$?jhXS9/%4>#JN.GE70bFU*&aq/j^:Q63)7IFO7FQW\E+:>Ms(CT9ZJ!)
%5gDU$o4#R(TJ.aI.Z!'f(!ptl*ClI1@$Y;EKe"[8j]IBnQB#&WAbDQ0]Q3p%:!q+G<bhpjLHZ8A7^1%oX"XTi!`^9ZX\k5'_5ua^
%m7??34D'=kkRbGkQO^IaPUFKG=.&PX33I*$.>K*:Stjs-nHET6/9`QTjm\3J>-]c9iFAJsQi]oSed_qGLk(XB3<^gt9L$KD8"aKa
%3C-Ie+B8?S%\=,dFQABmE,pp.Fd0[l_5]L$I_l@bT%W\/aQ-&;6Ecj[PG>Pt#tDSfP(T?'(ss42pH]lEn.@u5LYj!,\V!OS6.6E:
%Ep+JRTcfM"/jMQ',VOup`.CJh5T6:?.i^Rn"&$4"d)^!r6J)W7NlcI9F!]1pN7C3"CN>%#DR_rmJrsQ*&4.(D0QNhJ94\/oDGfu5
%&ePLtMW(R"Jjk\&$AL,GW4^(&Zs]#K*fc?GJjg/!'=pFV:umm7h('*u'NCcLJjbX\9[Kq$5p@[3ic[(`3)D#S+Z$3liIoM`'KM6e
%_+0U.Z-l8pj2]4^3rpP/N4,oLjAHsi@)sK'-*hEl+QW$V^ip(f\L;$H5[K@:fo6!m5Xd'%i/`MI,]aS\C>^e9.'V3ifaW)?aUZ8I
%j&#Lh@9b,.\n:YZ9VBEl@7H$8+HMj[W&+iD%OoU=q_u>3:L&]K@E2jmac'ZK28srp3Z^;[PYoI%^BCZ>!]ghd,ug4@`#OhIp_1a=
%aRHhL3=Z2.X6aeui!H-B@Kmg=C9W:KNZjjY9fp4OUJ&OG$7qQZ'>&/dCE-%HGePM,j5>d2]ENj)LQFC,10dqH>ce[4nK:D@!]1tN
%%&GrDO:iHld'U]LK23apM5G3-%_t<-GQi_Y"!J&n]c*<C2b\L*LiIN+-b<q-]8V##BE]7R`^)K#]b5^4n7PX"'Z5i]E/+GT'6J5\
%HE%[5\F="+f]$\PA%1-3A3.d9QsW$C(5G#F6B57I/"k(I?^5WM5nlR*3e8"^,T0#c7j"bk'KW=7.o+.lVE!d5#j<e#ip_Ap1($i;
%eoETe"]-3:06hktMA]T_4IHI&0(jssB]@t?_=BMd-6>]];CHO(#\#(&"A(_])*hWJ@8nJU3(V/B_8/3jG[pq7"VCt@kfJ]*%KqA4
%(a6g@Sg#pb2hkeWFO<'$!90P'ieL/^W5=<[Z$6V%G`3>g1^+DN;O'q[_Z?>k0`X0O,9p8WS03Ss:(+pm12o5:PiOZ1gi,YgY-\KU
%2B51$>mCfD+:\NG&BsV\fP<Br$jWfFT,:N;"NsUXBOh;'6r/%t$V)$M`u*eqQ,&L]Je\b\:4t/Q6A:'0(l'_7iB]/K"XlK86(]6=
%_Loem#Y[4&is=P/;8U#Z`=n>P#Rs&3@)3*Z*3ZLViEj=[-OA[;_I!Eh*%KH=IXVhN*)"k'6q#'#GE?ZOl#VN*6a[gI*#q/^O)%O_
%KCb*>6'/q!Um*R<N.Jh(A67'e<a9SD'Q?s_!V$1I_,S4a'34RoJq>@n^'W2[VX!B!BDi`D$J29p+MgpqM]EBl8Id!(JK+;%:>ruK
%6arhA)to+;(q=!5oFq\g&8ks4!]MP*Fs(`8_s@^=3'<Chb/Gde!DE/b>X'N`#4a*:0Ye&7]d_m2+M\G!b:3R<AV\PF!5,U!;XhFu
%!UAV#n12Lc9O<(dOmS&)NQi;(L0P.P,(`mX^Y'a.^u(">l9"FC&gjj?8eokEb/Oq-nj[Djc(.,;N,7b/Ah6b/iccaYJDWs5]Pj^i
%Y6+GMa)Ze*>qmlQ/-P;YPV%iM'<H,)G#&>8mK']A#DJ'Jei2PJ"P9om%>N@.Z@_ad&/>kr;]+lu&bu;AH^`?r!R60:i<e3sLae13
%!@VW@OZ!p>gBiE*"R6qJG'&lQdW\+tQNF#A%\[UQ033&++m6oPW4,2,#qfa?0].sj:S9Z\QuA(Z8F7"VDhI!G&oQ[58p."-J-jB-
%8(:BCj<HPblX`*1da48p;#2WZ[q!>\7JQS:dPDTq)jhM^5E5Hp&CuH\B*.Ph*BV=Gh&G;%.GStIpNBGj:p@VR=,L$lD]k]l4[Jdb
%m$nbtD[7FU'((2]`fY+K'3K17,q/n[6"r#k^<h6^%h^%0;cud[]p1(7h@QrC.Fs+8NU+M\>L/0lN#8QM93s0qM-(,K%4tDqQiMGZ
%YqQNV2oJ9qrj]ah_ZVrTVPe\`=F[RrbhH32*eNLU@<j)^2oO)e!tuqua::LlG_,&_?m_E3"N_VU'0f<Wi%548X:cjNhOVe[hQaA_
%?@]]?"S"+E"(Pds_@akYl7J9]j,G42R'nD.hAG.+Gn^o7Dn*E(aV;f8)A7.h!-uJr;pD`_a;_+G?m'FDFP7>NR4AkW5&PBk5i-J8
%#ZF/VR&I.qj*9VQKu'M.J;'UE\5mU^+dUR`Q6@-,0n@DFNblc+7YhJs>S.roN!i(pOl1I/5Z23)nf[uLa9:bO38V/Bm!,;<0ZU-d
%;]'G3X?g*$L@N9NRSle6n\uoAZ-NZ&50+k^FB*n^`i*+[^1A."L`%Cua9dea#43'^1W+HA6s@Se$AS)*"%j]S',YWreonU!GQRu_
%+r&"cYbj`m61MCLb@`8]2oJ@O'2q`?1%H26h%LWD+;<>(^j'@j*5YK-N&MC=bYN2jnWT>@,<4ON!<\&8GQS,/rDO\SQl':L$]I$_
%T4>I*!dS8Y'tR:5*,dCC/D#c\"^i)j+!h#7K9ZN>B1F(_0[$0#=E(ogUnD"InV5bT<:b/rnZG_E],AO+>NOKl]V1s4<tN$FTTKV4
%2k'?bbUaUf0G=jqRppV0&enXZJafh.ThP^,)ps]aq-3s5_<soQ0H%YFJoW9]S+4*F9#jjjbmrV?(#C[#=jXd35QIblh@6(bN:5T-
%]>5m4agZj/'3ZD2pd1(SYrY"@[#W5`3,Q^m'QT'KXoP?Gh2hf1U0C<R];qiW3/2_^Ri^PJ12JlbMbhisUNQai1Xn>:24tmD4VMEd
%(6N6K+,0'i(cYqQ9oWop#n!eBG1.rTa\gMA]*W<"F(&7RD25>0N/C#J/-%;R4F_t9%:mThB?4s95d_YalpcSWI<WbM,\'<05^)0H
%@!)O%lime37@c\eK4u8N-&(^*oF1p`&BJaV&jmY"OPQ9[Jq;U,faV($"H4[ph7-"?EB8\p,<9fj'cB&KjoAZfmD]8='KRS6h3^[,
%Gi'bnABph\cu,XU<Qu,_)hVlSUl%IMYsK/Ars<F!4C8dn1-t<)0O+<Q61)[HOjQV.&3[XgVSM"9r(rYO#4C&e>f#e36=BHQ%bhFl
%$=%/pDBrW4NPK]^Kh@5^\D:iX,BRrZ@&oH9-b.uG\3bX'_<j_"$:@nu[i6`H>Z$I7N>)G%(m2FeN'Tplgl7k%68'L+"+^eu9TZlk
%\d_,1#]_jQ%ZKMocr7L8giqgs.fYmGl6p3tH'SU:\Jt2]_:e7th&(UdHj>570g_G6#Qo8qL$le`gl5ifc:'JrAdZpcgi!$b!dto*
%].)t$;)0^B*l4Pk2$57T6)+1Q\D8Pt&s,<[GJg^`0Ve\mP?EQ;@YYLB0TJuDE>:=o^sAVQGE]!O1"qHcG?_1>_mnN5B^rgsG,'&S
%$J7rMdPb*gjoi.4KgkR?Mo#j_0;e56J@e*uT^5o4Ifu2R-,_!F2o=BRFuFR"DR:rnD%=SQL'*2H;8qq2;/.M?\D<N1L64cRgPl@[
%.B\MI]2A4@U';:dDBu!U.(J)$0sTb^YA4T"7KJJ$85=d=GCqE/Z3piGgEKl.(0;2a&9&Et:N$<iNT>n`8P,N`$E4j"DP0hYr<0VL
%aJgkd#2qld/jZ2Hh*aQ,gBcRD?V4>="LoCuUh'C2ghq'[$:J?Ym7*EjVJ$9P2h4"5*u.1]i.'aAlc@miE$PZC;ZTIJ'$(p!3sA2S
%)I^7/C=r*2D\!Bb["q#[;s9qA>pi20mnq0o,cjS+--!Nb!d5roPcf8e!*Nse\rO3R.)R)rr,.\&,$.5KC<;\fY$g'XR"0='.YDj[
%Iea_2)rRtLKl+cncB5FtZl+G>.o<_Q5(Vs!,(Xk!`0%D.dLA_e/hX"4h$@-.31K+r"VWi[PCh-j"KGB[!d)?CaK`kfh9\7GJ-\>_
%0mrU@nD%0HV[5CCT\rYK8-\5]bSL<`*O3-eNB*+!%dc&C5V"$'F(`\kPp7tA&Fip2/iO=CB.9LK!"@#%gtbi<Zg!$jkT^7a)>"dR
%-oV\kb]&0USQKK$88bZ:+r\!WEbDr%"!TZhefihY!-0G9TIb?C!7H`B%hgp?Ub[lhL'k`ZYTC$!EAmreeL"DR8MgO(iWd"J'lIMt
%%)jE_!-)L^.b=B)*,]`4P8/UV\7'NbT&Ts-)_6Tng-N64Ud>Fn2[fsJN[>=m3%SI+K"qggNSHc!\:K0^rJ83?!.bKlNEMMiGP(:-
%T+8T;-(G-c4,XbFJ@:_)9TZ^aWflqC)0e5aYm?'4/lF->!kV_NLYQ[O8t)K+DF6BmbYuT"KGTmV.-)gCd_m#C]1AmD"E:sY`jYqc
%6Ws_@#R,,cE5hA#R)!Q?_ZiUsgBP>1h<>?VXhRZ9[QBbJ[K.I?b"uRL>@HR:"D>=Rrfk37K2/Ej$`/Mar'&^clnI0Z-65X9H5J.H
%#FKAXYQR/%f6E$h/4B@JQu/L,a,o+Vf)aUTlmFLAnBTJJ+Y_Y.0Q;Z;CkH2M7q2V+h'Rsi/IJeC"2dPCODTY9-j#7]F([br`468s
%2I[dC`[ds]P#f`5:I)@.="uXe6+6<.TYF;g[ZNmY_'@#Z((-=0ODu:O7&kK'+PZ4Fe#>r>mh94Nc&[Z-2?DK#1'V1na>TG4II<3N
%BPsWW+!\ibg;>VM8O0^mS,#,_A/ilLn\@gP[UBUno279N]7MRNgN:srf9>E!@)l-`MQr-TS3^-GBG09JC*$r&)o^G6$GjY9`&?c0
%,%$a'Cr8pq_G25^i><1YQ9]8=6qAJ@'8Z$.s(YL:S6+5<"_*s/4UV#+3lL_WAr(:Tn;NAkJ_1/67^u/([Lk+oF`Tk$[KqB.Vuq^4
%!0P.>Fs[LLE.TMM8eAEc]T?$E).=JmR526!#htHALYukJYmj9?"EVobk`q#b:%>V75#-t;TZR6Y\7>OSh]YL9c3.Dlm757B"^W/8
%7i8$FnCgEiX6A8*NV#dN9?"V!UKl`bnN3]knHc<m-;d,tU&6u^aO[<bg9h1rq>d`/fgKMP&q')08V:&gD9OVQ"Jaf#[@tqXq+C0'
%Jfmn^<XH-Vk"Ni&YVm&TCC74fQ7Qs*e]r2n7T=5$NMmORRp31K%1B$k+;Wrm4+Yo,>[pG>[<%WJEX("t5W5tM%=$T'&ZBY`34bM4
%oY[mN"a1>OcH)Y5U1j]T)WFa&RWe72]jNO2"ApC>FbeC?>187h[%X)m7QZHfG(QHJ==B-1NPQ;GY/gkaQnA`p#_q7`3efNq;4qo+
%+LJslLdi1Hcjg\p2Z_8pN4DPhM!4.-oEF<u!hUJg`C*GZZQ[hVnq%`B)Zomkq-1Y@K7lQbYd5K8#uOh.3ZG-3nMjD8"'k#n!h0Yp
%ab4]NW7d:uK*3qKe1/\JSKMMHPqp-7!?^=&cnm,Cf+<d-cn?VKG3&Q77E^]rIX1]*_JN&AZF/VR+D%=bJXS4oAOGYh3]SQIfe<`4
%6H(Y3;(AUS8i@r^;6?l2,Wc>oKn*]d%Ubi\A[gcO&Q)%C6oM\7BGV86Cj;L+6Y9hEC?-qY.6oeIr)ga;n?HDHGesV*)a^h;6D+bN
%fN$E`!QV??atGM.G"iq^4CVefO>KGs$8a[!@A4o4OKfBQdgMlAk\#fn7Y6P(f`@eNfKbP%l`f%*?pPV=J]/BHLn\?G?lGIT-_T*<
%9/R+^`NFf6.[\jg/FOf/2Rmu[?Tb;(5bK#@:)d1\cW-i',W:h5jroi=(9r]V>*(&T^j%OH9PbhQ6qIq`CrG3tS.WTU[T_EtJr)Y_
%aIq0N+^?Q!`O;'G!2lLB#W.-[-_T,UrsfJ(6l"hr![<:4:i$g^;;`!^Cih_uF!n3El]Pkh)nofaC_/T8f*1T@fX2nkKjnKnciDX(
%(.`8'0J$^EpZO#E#bg-J!3q+53:@.CYi0Ze-(D\YA*PaPCCq#f18M<c>a*u!`"ah>"N9esDCQ(rJeN^+"V#hJi/M^.W)\N!dBHKE
%KAZe3_a\^IUtKoZCG`%(4?.t%j5>=K=P,$l#Hk-gr?Sp'"Uc7uKH-F,X2T(qbm9&`.4eG4R)-"Hjr#\91)RGt-=GKq8]$;r0Pn7r
%=IqgpYX/6qPcQZm@0;oI578;d:a"8)TjZM$Z89GlO9>sn*MQRA(,eE_:haKm_T!A$E>'m>*#gXuL;LB&@Rd#p1&V8Ynd'r/eA0$[
%#iH+>aGh#D)qcC3i(TfJ;&g>+CXPO#V7.rf2Gbg%@02.BH8J[?&hIjW3J!bgQ"^rJ:l8J._FDMuL")g#5oHQ<(P0FM2_u3r)kjL`
%&;,3T!elW&'p\`*0Pgle$iJci7Xg/)THkBZ_aZ>k;@*MdG1[,\g&qg'@p[OU`aIFin-j`9W&S*/7.(Wo)r.@(#n2Ls&M$hX9;&M_
%%5$9:$6-6%d<m-7f]Zted0d`JaRjr"`b'-ciN+5?#L=>tZS3"MkaZaP-:ld&bpEj,7`#@tPS=.L_?MLng".QIfRt2D?&-;:fL<B5
%%#'ZTbX@pc@8f:%p)OL0^r-fO3([PLaJX4`KoJ!95t8&F>%Cc/&h%SG64)t+KYf'+V=>Q5)eVDA((>m+Ftn^_)549cb[3t=fP!LE
%_(cW^;UEE?J\hUH5qOi+2R]@q@45sYgbPUFLVcO"LnJVgCD<KO$eHXmDjM(`B\3ETiNV8kaC$5@f4]c1i.;ON)`18E&8FQ[HC;QW
%&!RY9]9<C.)c]33-"&]K3PJEKCs/1m'H.3i!>s3,5hP;@j:Wk(iY/;V77Uegi5\5CMf>oJ'hR(d,7ZVciU`'`[Us&7TAX*e)cW4Q
%5hHc\%<[=-#b,WV>e5OR%Uf#\>U@#b@3^H*5rUV&@AEE#!Aaia)t0Lh)iUVN!f87UKFNTfNa4rf7S=U#PY@1CdE[E<%0D6C'RJ^D
%$6'9c"Yi>Pj"?uH?(eFL"]+6_)%%>,$'a1*J\jk^Z+t&"Pjee#iQMII85!rmA35L^`n1qP'ek_$3.^i?/8R/X?jZT7(,h6da'GsS
%Ob0&K=P-0\nB)%Q2YMq=7"U,P7Mm\>/m-b>V_NH#$6(:!a#-08fZ%#_$AFIG$NdpWTs-U]TWmt^X/U7jCg=I/dg?dIOQjsq'K/c9
%ZqI'rYmlG(9q\_QN*@W*fS"-ECraE4(e?."18b"YCo:]XDbohE+uZ3(f]Wof/6[6OCc%+Rb>U*2b\bAh8\qn@M$&lgVdS/UG1hFM
%-"9:3;3`h$_X:A-qnf@'>cetVjdHtS*qTnHGnUum*,L]%C_mG2%GQjWU_EtoEKRd\#^0[`Mdg'A[R_nOG%$o!.0=[$USFPcF(0X>
%^FjO0-h,^kXaK0L#d[X<Y7'OB9X1cED[n##)#G5t96:5`%08(p%A+bM$P9Qe?UN0X1-5N#G+9I5_7^$s+`0"$20b]dl(HYl_lA.h
%o@e2uO@!7UTlP-X63mT8SIP$.IL`X$62r+DCFF4T=lDE].Q[3XG7>u>LtO:tf)e46E7\D'KMTst+lE`%%YAh_&^MSQ#h1`i;m"t_
%q^>>i_d%Pfi%-;.kh._&"lpRaj5_%eN,-L]^p;[GEU=Y8A--`[7.g*Y_R5_,77"EfD]%'sScE"_qG25ShAX$FU_WArJg;;:?TnM"
%%[H#&"ksrTL=LK]lQi1&'4bnJ(ki"B)PUaR;GU]&U%/;GEe8%s=<gX=C\Skn<"#Q\FGtCX$)BG3>#Y]]-_qDH^2p[a>!i95*l&)R
%2&&'h1G<^u&8$R`V4^tD0-%s[$(*S"BngYI5_I>^GpPH$n-^!TR_W$Xd`=fZYsp#P/u`5\_oK",blkp&$oj^8JP!e2@hAm\)WCi>
%(D?-9ehCG4c"?lg%&/Sh[n$$+L5/aFL[H'@B?VfL2$Pf=E\!jP'gjP[[HPuf5fLrB6*=7]!!05tJk7r<XiAdKSobLm8UDdCUK2_-
%.[Zl06d-uCM#pii(s7Z,.%&PI+b_8)eVI?1RL:?@7tC[S^hP!Ba_6Q5%91Qe(V"2[Z9bO`TN/n==bX&&rUu>l8?f*[UdJg!JZ;0u
%qC5<!\4k9+-TKWV'82]I@&cAF#Ye0r]bYNsOD;j)+\YhSW(-,5N$92qWYOVe+KBuXcQ]t(JUl]1'81*R,ln.A)?B_t(C344ij2G=
%W?J*u&hc6O$(Bh*7GuZJn`?<L;`b:)'PM6#$V,)(`>fPbU/#[,_,lRkL>Yr3!D=OH/@C[FW=r7r-3k(nJV$c)3F@_:*KbiR6;g>7
%Oolmc4<3R9(-lUohrq>8i)*"coeW<)<rt0(LGYc'K=)$qlOu,?MU#>9:b_1MFl4!m3`AZ;$5@W09ktmmK=he^?Yoh<k*XgN%Wt&X
%N2c<B;=n7$-jk)_kiGeUC;=Ar=rDoX?!%UO"DY3_YM`2tba-+AB.5gVkgN;TmAB*rM6]]6pbW4U.eY^1*7gd\dEs06R;f_4a\po.
%3$4GbpH%_!AA]Q+KtpI$iFWOR/e)hhdY9gHZtJ>i0W1I4#m*,HRJ`#OXbbGfnWtZu']gdjLEb?8kF:<$Mb@<9E75f0/ni]GD%3q+
%9cM:u#]9f^RK?^!mpOUPSu%fX!Lq)Z<$N*:cbb36Bo&/i5bY37Ji::pYePO]!*D&9W=EUjJUMkP2D*R#MDZCp_kg/%VSO<>E1DkD
%%:C>YAX\1IUZB6dE2EXk"Q^JOR0G2REkX<O1_;FOkiu#eC]nC0BlNuZ7$g/4K=b(i'_ThD.(R?6Vh`W#jJWJ,%0`fO]r:GK`A3Yi
%'+r&>\dg>u/K#h2f[<%(4;#DqY#:]WTVV[$(NX49aO8UZAOuogL3,8X%<=9""8W-JYgT@e+`2dq/t=AbB[HhIJ_1;C;!H3N(J7Dl
%J#\ma8shk9$WRe8_0M*L6j4qV!g?KFT&<1-5VZDtQs)&9`Y+_^s)eI.(91h8,8>;Q*D/@#3m.Xt)Bu88i(LsTPp8f+$'$hRU]TR!
%a\&sc6'9G*6m[rB3O1_hJftR/?W;]H+JaopE=`7e\46mfX;KA3Ea"Vk80bsKNZa>$EZ8'[Ul3$"0n+6'U2Y]+NV2I5>_.q?9MBJq
%1O:m2QD2]h_4r0.'\@AW*Nf*I!Zd9aQfsH>jQOHoePkC>aO[(0ZWRqJWRS&c7K^,>Cp*6*d7ADoK1=naMGq`4!96On[L$Jd*U@8<
%LI6H,"@Zq<BM:[5E<S!6&CJjZ-?.?D><iKEN#%DRC]+TBFCE6pJVjZ$3$g"0;D\e1-9hZk(5QqKM2"<)C9PE@=&2-';j_7.K:"bL
%.+)$mJHR6Em&4D^(\&"D7!'UHR)2,sGF7AW6gu]o:bt9lTXDUF.dD'b%,Ns0LPG!q`!-r+GgksY%?4fh\ZR&BK*r(G>T"@sIRc(d
%`eD]-WX4]id,5clS4ZSmP_K4S";DcECl"]D_1YRGEr$I`)Y@ja*>MCa,tq./4-a6J'4XN]-8DI><g0Ea'H66U;"8'sCETl4=kcfI
%6_uKf.4@%2F%'D/oZ)O>jAJL$#)14)fsU^/5q<$l:'%%SH&Gq+&FUVN:gfg/5m&MfK$4Q?1nZg*W;m-Tc2p['J3bOmnPUoOeFKp4
%=O7=(lhq/)1l?;(FsLbKN"lX;Fm"ujJ=o3S7^s@>o=uea$3L_?6u&?e5Qaat(3C9*BS9oq^4S\S8k,`I>kZl##kV>241G4hh#@?F
%^\K7,^3Rja+X$pGa]Gr1hm@sk\$8,C`:V*n+5=75J,/SdY?p/E$N9A^h5cmg[BGYkEH?2M]mRC^T6t;fT7?We=a^7mLEF1Gs%X`2
%c/LtB:]K0_^F[7]bJeu2O'+S^+8Yuk%mP="'>ULtq#@LJ&lY[/>:,rD&e.jl3LbDD,EY3>_k[(>r<on75XdI?Q0%37d#oNK4[Y/Y
%+S[dBh/iboU##X"'XTDWZoa8d6h_'R4+5HuoFVt2Qpa@0ZOn?!XE!jr9Mje8;4$K@Uo<'.[+ikheFn2r\%Wlh`S1'q:HtTa^c,9`
%0:lE:f1H;.+F^%O+WafbJ=V9rL@%i=3nr*/R=#1ZgURI_P6q.%)2'VPM2jkt7!.pG+qZ&%kXu;&HmH9iQj6%*?rs/?`$U`7+Cc?"
%%DK)2-Zm_3KjI]?Dp0hRk8p4uNFUNS"+Xo\Gq0Mphl_\$5a\=K-p/M@.$(r(!,%!R$s0)Cp_@CeUhO#<n-cK,ETdF$.Z!;9n%cAA
%,in=%D3HWR&<dZ,-8Eeag@r#A@KE`i59[B!;te#X?TY\F\Y"o_"Ut/Z.!"U)inbhAJi7TqoGZeBprqV&H.S<#6i&N]gr;jkp<Mn`
%2gII,V8;MH,5NL!LXq<A6TZ;X*Pj!iQcs[p2)mK=dkM-q9^+"q'st-dW);+lU>aS8f(6C1'fZthVa>LB)o!)j$ZcA&rAS#<Da=dt
%B:;!@GABe:ji1"\jW9qpPm&.@Sr4YhQ*H=dcMEM)U'GgrP6k"ZT?2+16/SMWCjX#e]I5UKkb4WK@X'.!fG's&^p9YrPaE4*a)F'n
%-o0F!,6ATO),pdeU<t-[UP-o^E[]@"Nq<r)1UNTr0H_XhDL-u_g\?JN/8;Vr!T_"2TfXds-KNTQ-(5-[(T?`;`+8\:_)^M?MY*94
%>O^RA#p&&!l%jrlaeOA,Urs*B/K9I'NdCPm3p7pPaKksl@qXN.<]cgj-3i_PK"l3HAGZ7_Z3^a+9_;"Y*kJ+_DS6B+)r^##GOe?b
%SM+O]\mk*iFXo_T&%q03FN622B4H4@gGiZ?YOp;Y!l8sQ,FIq@/Tb(U0%hRe/;TYpXX8^-]"g^%]]mkgWUu9T0S%3-3=A.fnOW01
%!"i-<KQG#QBFiW.)$9k?E47`.@AuhS/$nHO</3]s6+RiC#AJmQF07V<oJBE0J`"4Z_aF&4=k0$R/f7ST4b2>&E=Ab_()pK=bgem>
%a:!u1q(eN@9MBtS:f8KldEqPp!-b0lp+P[`%Yk/frL*);oUN3%@^M&Q@iL3ZqC!Q5L#HQ[qbh@n)6i%T+_%[unKI7QM2f2(0i@q#
%1p0gs1T,s5a"50gUt_0>NEeeV#Y2.iasJg1\\DH5I3SeA:4M#e8E3P.+^&KV16/;\D.NiuE06)qpnqs)i$*k@ON\Q!YU.IKLGWi\
%g`a_^#V3a@=67(h6f;Unjf"0>aNFc+D]H[6Y]du(q%L!sc=4Hq%omFWZ#]%OTS>m@0QC+Lh$DDlgsRGp##D^Pj#<Qh)qdV5rmFc$
%7r%uIgce[Y9S.+CgX=Eh)0='8r<B?nar)^.Sb']V0ZK!+8jh!WBW60P+VGsn(;)=iA,,Ec>(onP+sZe=%r=*l\HbiEON(/$Dj0OA
%\2&X*qUV[E(lX212l#,;gVMfsN:X)/%h2c0DB:6K9Xdb".P&!80=#YH'%Vf1UI08.(!7XFnlk9ImZ&eC#pR<;=#E(E31^@=Q)E&_
%/*fp9N5JYAOcUE^L^j=3/)qNY98^U/!XN,DTV5POFMUgG6siA2_:OR$3]R0Te+F,%LnKooDKh=6p,2V(*#L5?_V\CiEE:p3WY/A[
%0tsA^,qkM=oG+L*nB4j8AO0"+*h<nrW`$,=&[NDtd9K+jKRMoVPNO;72<0Z@3#rbV>t!3:TJ2Zt1cLQM*[ZI/d4c^o0nh0s;22>6
%bOhM94P$NO?W@/1)8i!'=]I7SCM(-#k9tPN`n-iBp:SKL_tO1%-hA"0cKf@`<-gAe=""=f!:B"Co7QB29@kX+qp=Y4=J(<,!M1rF
%Lnl;;\hXlP9-XnP'j_1pqqc@'TD<5RjI,,_b0Icd^+47iaOX@#b"6nm_j<mERa?D;XOhbu1nb+KTS!F#(YSs8$6_.e0Q7KnNHrso
%MDW?>=<o48KU>o*K/i0V%&&"3^s`*e+N)=-AnY=F/So5j@S(,J_K70NPRJ,?8="U'i2psdL^6MVEJs_^,>>j'4abG\d"A[K9[GV8
%VX80KpF?DR:opS17uf2JlnmHD/\P\C;u,(`rNf?Z29KEA=_HX/`Z]A/\YkpUCc[cdJc0.%eKWoV,m$4F,]9D#PAs>#+-kHX$A3;.
%_SH1\-nLg4Z.VEFX^b)Q`#q5$k?(\\rXN'r.VR>7EB#1`SD)pO`QI`S]cG*hZC6--O&Wfl^g+1D6<f*]bk[YhqN*,'>U3JbMRL5#
%3a>URXFb,lN_I1"1f[c23m8aIm<Pq#N-#Kb';?rtJ4Hn?<#u,5jHN1"G,D4N)tY-'[O`Us;BCF3H'p6'@,TcdC6$M?^FE5B/rt+U
%!`U3.N.Z=lrLhkQH("j_3u"36>q0kXhDbQ`"s%L28urtf>Lp#;2S-Xp`Lt?(CtRXsYS3pUnFTre;HstQKBIXB'qX'<=9d_4>u`64
%oa_<N,IA^QO\HH+/Erj+f*IK69aQI`bJYT`3u!.9f1%G(cL[3.%-0*%cYj@3:.:9X;aBQ0(MJ[\16J=X*hfS]Ah)"\e!W1@&dFnL
%bOgaQ4;0l.OcnhjgIdV=6kJsG:"._7X0iS;ehos`H,4%6X="JBWXDfRh!LcC)V9=2/4"mbUW=im&XBm4=']%eWSAgr5>'TY\#!!A
%Snb"bOq:W+e*t_.HHk5/a6lAE"E$`i@F&(/K3fW#Tk37T-G!(eIF:N+>n"<--+C=sq42N)]5#"qIJTTr>3ZTLUgJYK?24l6<D*kD
%+<g9U?"'AN[e(eOOW`RA&YnOYLMNS2rX&qL.6Ij.`u(4^.W-LEfk6EJUG+5Wp3`lI)V)V3VD`_JOj5j[9Vr9iV,='!7-uK4-9<"f
%q[,:SXBu=mF$WMmdILiQH<-)B/h#-n/Gq+=O#+lMOdOX_(r`6QoMV3nT]0pdT(N[Q<I0Zs27/0?q[I&a@09J9aNR^@JA#5=SW+M<
%9YWuS<OcX\BNIN0((n<@Nr>kHB7iREKR"aG(An5*-:IL61ZRJA%j="U>9o10]4IHm(Ga`)MfF@.hSgTc3J!9:`-r\^G#*rr'a(s;
%\:LmZ+<t]C7jT@cq[G^SQU7QGQGXBcQ'SZ"*BetAjS^m.@j!#FO^S>HZJ@7agUj_'jVJ['3^o:s[Zu^V3^MV.i]@]bC;dc">RX:o
%.l3fr+Attr!)MmJT+:WW[B><*\itl=<f4f<%F-?2aB_(B,]>!QFgTr64n)%!3bHn0::4^lnKnl7OQ]+o,T1aB&GkD>_-)Xd_q.6L
%8X3e/k>m8#O;gcP(^/YqUEWJL!?,EcSOhZOEr^3iC'MMPqXpmr=\?Y<!Z?T$_%R]F&6C3PX,h8CQ.[I8H!W!a'P4fLS0AOH@Yn2J
%O[WZr8Dj^jl-.>VfK,+]UbRdh)oePgK=_o;r[&s?]U;ome_-[V#)H<P3@kG$6j'^,6o93HJ?GmZ)[*AM[=foJ#-NqNNT3iYf'065
%.gL/8`SZAu<c6-G`(%hUO.U=S[_L"9_]T:t]C@']!hF1\^dlJp!lQW"JBUJ+XB+W*#<Wht!,>d@CpJM]+*ED5-D/]^#]r)"3'g0\
%_/Z<TQ(G*"kX$!B=&3OSX#'9FHgo_k.tpNqdQ!HG]0:tu@CNh"J=0ho[oC%ppe[\FX,KnL85Z-#fY=Wejj]l68E[sN#1<ErV^hid
%a(@1]VKOU(I"_6Z_2XjrZEOU3IitapKSd^2LOH9jpdnog2Du=rU3L_"XH-d0?IWAU)DmNa!m*O1nm7B"QAChFI=9#eH&+TG`[G4<
%d<G2dY3=HkP-qRD0a*Kd_-#QRZ]LrO!.gFVhiWY5/Tf=$,*B/BR:o1NMDArm\fsPcl4T0\>C]i1@j7E4i.]']GJb!'!#Z)-)qu`_
%g^r:0TbG0C,2WA+i^W5d&n@1JHkHpKNO'A2[F1G[eKD>_`XG7q@f["6>)+/r@oE[UJ[\1PKKO<9e3LLEeUn[C9)kWQJkR98)nrZp
%3kpd>;+3fUs$dn8i!.(D&"#RMSfSFSYD"U//gJT1#sD.C-!&3bNJ8'Qm+f_B*Pe7L:5([Qdk+o37#]g]JC,\m.a_dPC5mK0JY#t-
%b@Kp''7)S->e6H$PO'8Jp/,LZ5XDd8HbYRC(_NZ#E8//<aj`hHe-H6SQTQ([A&T_J?:6U`9*Ac16m8^K@k;Wa-,@+.WcIe(97Fp7
%7D;;(9Z55dK4KY6$ir4?<ZhE<USQc:2BC,RU3@a-W.ThL!o=nIQB6"Hpl(rBPeSrOl!daT!3=5iK/Ht].+/a)FmVIob![kM1SH&7
%&DmgJ@gc$i$D2;5]#[%tl=9;9ZYpfr5c[SsF218>!*13Dd%TENm=GV35VH7M+o4@IKJ"='6;eI/?'I.+B,ZSn<6D\fQ`O[!e8^Z*
%$PdZT*c_hJ`b)St;7BU"e;JkhkghdF#K$cF3d`E6=ICGsgdH;3F9LT)Dfb',^'Y$:Kb@7Q@pip<_ZWeOnu@K8db%t<#Wfgj?A2)(
%5U+2^H*!iWa&^)%&MDFO>Oe(H\.#\g9>=sO4oV\58B+>ZC%UB"0satLP)+ju,.s@'Zj/>?5ZB^K63%0EQ4J(K[Z*^!Q#/>($.)>o
%7kA#USB9C`(i_i[XQ[f,`JtB"Q>Q(6(Zd?rW"r^hCQM'eAKlo#,nU]N(dp7MN\R2^/<(=L(hi9sK]$,]U:eU)I*((ESkOH[+rq;p
%G\1O?3Q`p>C2f<Il:TS!JP*"ks(F%sk=/Q@ic>Vu,K)(W5p4o5X:1.?&RC\]4pFe'!"tr5Z)#/M4+3<P,B<o*8cac1OZ9VE2Q;[j
%'r#?+i?R*K^`ZOo(Fe\b9IDC*?r<qt#L<Va!q_[=a&j//Yj&N,/#F)`!/$iH:Zce3,L6]@6pO6[Rma4Z%aMmsZWOcCE/f$K]_GY2
%BpWM-m0.MSF/Q+E5Ybu69OC)6Wj^Z\!rJit["%^Oj-dP1d'N-*lZe1_,tSZ(b2lLEe/jKITpF[sW*@0q<]U3Li/qEc)1("(@\\-0
%OlI6+FGqMO0B3\G3P9-,i.gJF7Cd8M!K>5sdn)c8JP?Lp<iZ@:HfR2.JUU(gLng>;_/qntgmD]nFJn!i7&^tjFKBV9Cqs]+lH=pl
%kfTg)g>Y@.jJLeVk!skfYe$RM0Z[2ikLh^6,qM5giC,IY#.?l!\.`pUQs4U:Qqj2=)#2<ljV^^%W$c%FZ8`]'dt\L1@uRQR;gK38
%Au6+uS4Ag;`QHC4asd\&R/RLrW^K,XaRJ9+X&jQmX?7b_(b@HmVcVG_A-0hWL"feoK[X*"I,rM>6q5H#q(-Cc%OY!Om_gj"XLf-C
%65nnR'E^1bEl;_V]`FKJ,K'Y&X\9-Y0B7/"%Hf_b:ZZ/@Cr[rJ^+&*&M3u6&>hOnhK<[]`V^,.#csG?=-MgUf8WAF\=:YuiapYGG
%<*0?N8A#S_Yu:WD-daFHCV;'/bZ5q?#1^[Z:1@dl&o8*NW:<$%h#pP+2MctIS9pH?.]046-E2Z4rDCiX9A4nB>\/&@)$\[<,ir).
%bpfP*^B'Y)Q2M$+B2'KN+:YaLpjmRb6-CXE@g.W2>dXY?L$_2b1_-Ornj<[2Pu3oRf?t);F/<`\6/-^J$q'a:.u&B@S^b-cGflSN
%RAHY@#5e^_^JH0uBUk<H3%J>`GrW;=g95!Z<Y>d$!%_)\(5YW!Ln^Mn$=HinL0"TP!HhUHU\?f]lIQZ)3k^0O@U-F3Li=Qf+m.E=
%%F1CnNLMu143@1)Lbj)2\+-KA6/c;`/H@V1PIRmjJL-Jt&[HqhaDM,V'kGs!=nN*lA<eHJ-ib3jI2,351MPZt!";M;KVC'BOQ&ZY
%fXZ+JqO@XUL>GsiOX+C,+sj##J\/>,s(`.U#2i\1Ls-JpLu#(j+:-j\jG>3-S.Y.^FiX,,X<YF@WPf;T&Xi;<8ciHGCQi]aKF($r
%GpC$,Fftm-4""qfR0[S.6Z\LULl,c;71cL<j@R_jnj\go(9i%iSr"qm.$Anbh=JM')erR/pl#s#7&\Bt9;T/KEs<X%]`VO_JbF,D
%10)XDU3Ms]%AK@0!1!8(#t*.7,n4UBfEX=#-afQ.^0]W%PNdYG*b#mc0CbJGEQ7bRQV9,L26!.s;oopE6*_DUEbgXQo`k?:1<i=/
%-ANXn$0]N7[`qXE'gQAA\_M#q^eT"ei0ERJ6mq8p'gGlt`(aE*^i3alJ'5/:QD+)D',_MeBr)&sX+HjIG_"iZ%U0>A=cl/<`-Eg4
%a35]7^h"st^+s=G$))%>%KNqN&,;SKdAZR%BO^I_FP0(r<"K^(n_?*kW?PDQj[^!pC<p/oPZa`P(TWZRP3rH@,H;jKjDK(P!$/r+
%,'T,?)Ms8sPB^C\PIh/!QE"bgU)hnF;S,2&E8V:=Tg_;L!3[fMPbn4)q+a@B8(PUBmSr6b/lg]XEgS'QG\[PI*YC:0%6Ug6=pH]r
%csEjD0XT_N&!8)^U)68%>8D%Mk!taZ.N(gN@jacHF%RR54cbs$M,b5-l"8=Kd.GhS+a`'gc3FN>]N*@]E(k,Fliao2<J(Sci-S!M
%]HhQ`Wk"N?QZ1`!,mYsZ'K0Y20%e@L1f!BS.Km0B.>XHSaD+[pA7F^35e#+QqneAs4K./=X8u0RmK8_!cln43'4R^#ne?V(&KYIB
%.BjKncm3)"WV;K33>^MgB0&%RliBe:*X%/@ZEi[679YS;DZe[7Fb-ZWDj9nQJcSX%6^1!(W.#%<kg^]*P:0is/0(GFbnq<"ZYf?2
%aT_,+&a\/+0S0:(B0mC8!>nEDLR_4;o&0EZ--B.+^\2J'N5]Q8,m$VOpc[^SQ_;VI:S=iTa$c2M%[Dkh`"k2O_=q^Z<)#WQ[e,OS
%p"WGd$j#n58e4,V&ps;UBG;kZX_)pFVa:\P1]VA/d13KAc@d7%AFWX>2[7I"8hbBG&q2L*,"E3Mgp86P%?GtlaRSY8=>ekZ,$'.3
%)8/Ca&-Ikih`IpEL5k7\r!6pd)+1s0(;KtVn^&I04Khm`nE6=k&i=Y3E?n0F+^75g5^OR@L;r$gb(b55&%cL7Rl,5@jZke".L'@D
%6p3q"(lk5R^h]jW^a.15jd0DNP?o/#a>$j?VPi.1m@&kp]uHCY$s=7g;toBdKf$kJ-]t3WON(kY9J,G&lpSr.^#4N\:C.XD'k0C'
%EQE:SUloocP9_>1d8O<>V5LGN^'oibkE.BR<)=Vf95[J3lE;j@;AM!u>C-oL!Db&71Sk>5ED#:P6B:L[`DMd4TV^fLQnJ0"U^e/1
%:lNPc-(3XgNXcXga#D-:nAlW#PNmpYb=b5jQL'l'#nhUhq".t<Xp/4tl\gh%S9ELmD1J3'^tiaWC>jK"HjGXf-Vc:-[4Je(O"H9Y
%8ac@R"L6.km/V9C_#g(WKOs&k=9R]K[HJ,A?j?2TZK,LCl-C;7H'%)V5h+iH;W(l(O=;KSgQ3`X&IJB(6D$B2iu1pjZ6X:fBV'V<
%+XX4,-3AcG\r3;W=LhieWB+!QPl8[OdX^C.C%@X)Tj!j0T,#M:#!fpKiJ`>_IVR9_AOh?O.XRoF3q:gsC8q(:&b/9\7ZMXf#-4"c
%>%eqf[O\VBJ/rAn`Qsu5)I/=;2T(1o\eZc.H,1eaXPj9NK6CYQ6OiZ1_2<e''b\1_gnC)m[EZ4Q3'_=,?(+'+khG/Mo+WX/7*R)F
%iOg+RE_lOS&fN@A*NnH"BM2;\2bog^/HO4m"$6PF6))sCeB-l2N>,5:M&>p2#EBD:66DYKW(HfgMqBX^:6'Qp9M`HFjSEG^`p@.9
%N>g?c7V+$SJquS2d;rEui<V!sbguG.N:N.%q=?`jP-HBbk`Y!L[>0&&HuP7rcfbKs'\1c5Kl"%:MXKMZ]JuS=/<RJsp`:>4on?mH
%!?bQ?a$>bnD5J?5L@_"akc/opiqA"j/4P2^;dAe-B1^lD59q2#9i9i&+EhBP#%PKr_/`cqIKj'qC(Ut+g85]K3BNW9QE)0<gEOHY
%9,`EtUHIG=L;A[!d[6@8GDrh*n,p'A-4TA5".g+Q6W3$KlI_92BSUkG%<Vaj5718@>m+&jNdJ:"4-B+:Bk]<D$BrZX.]eLPE$f_b
%#]b[_1C:;M?Enc(D%MPMYBkR>d)E@%LW>2m%&6O1*@6g)W_Wm6C39YSQ$<4aLpG!cCdsK4a4LL2nJsShhdbm'r&e@_3IRYVLVt\"
%A\*d3ChO0#_GPV];+]iFJX0:W*B]!]h^(qgnT\/=0Ql$7@64a\-$N/ZHO!+n.c"st,On]V]o+r>#pMoei+%G4H,Mo)RcXM=Ko*+>
%&BHte.i9pB;li.ad<U;QZ5aB234D2dXC^T=a;r)@QB*G),09!c@P/q5*,@=p(bcA'`Z$@qh1EC15us-O@Yd;:#BpY%kt;Mu(LLk,
%Qc=r_2.?F`\TM543hRiFX9ljr1SK$YO@0l;U5qB@ocO8e+j/E5XDq(F6Rb<#Qc@%u3b5K5nLYPLV":Pf-pl+K`fBRFVp[r`bDlT)
%g+rpSHO:iL&s!_aAWW*C0c!BFj!7?^)TtJR(sK9&Xgs,5"]<c'p.F#":J!md])Lm*?8ookN,K<KYZX].kRTM7"O#6A\=@jUM7GRd
%CINTsa,O5qEuL5..(ZF&OQ>4,a[o_V$=oag^1@q/]4$&P,m;5EdF.a,(I'1UE,GtO'6Yc=VoRTsNN75e6:o+eE/u`<7#[XE%Yl;<
%4k0J0G]"KM8skp'I=*XVnj"X)B9<C@WgFs]7u3SZjOOI,1rpr4M?/jB:$*"<*`.-=kS<[iX0H^V=oBD/@mc7AJ@XStFUs98GEof7
%*i_Q*Z(u%K1X\-(0BG7A9+`V<o2l[U^JJO#VIq)FP`\2pTlX%>6XB9D@_ek@d'FN'BMh%uMPOH%!3"0n=;aBrRZ&Q9Ne#lIbhI!&
%5f]<XoPI(i?-H0PniDRW(5mB*(#^TN$n@.75YsKP"M-'BR=d_SW7h\f/WV35a*4"7kh/()Eq#:5,!:72*/D`4U1#BNI6`PfObrXn
%KVXaR=Kk:L58&#j?RRh#:.cWV^+WHfb#9.F`fi`![]T`a14tQ:"j(8`*,O`;6FhEZlf]?WH".D3i_8RToN)VjEDh=%c8(GK\?AF[
%_QOPNML("d1Ifb@8<%MgIo*j'=b@>f]bOk3`F?B50VIPp'FYFfaJSH[Xet`PoF!Z7"_p%Hd$1=Q5Wp,<i`qNJ^l/[^Y`/,Z`%44T
%LJn;SasBA;RQmE$1q2d70WK$c1dsk[5&*?HZFp>P3C(!2_oulH>XL/9e-X<4#msMK9,Ebk>+X1;M3tt]Dkjc_C)!X*0@+ZhW++-i
%)2\c*.\jk.LYdXq)lH)p"a!*^P#Se^[(T[47nd$*8jm&DJ=HpO6J"?]PUaB#Wj3BDa[;Vd,kfPfoc'rXRdk-SB\OF1.s;4jGDSI^
%_@);/&5+_RqIt>(lt-FI?kP_g#Sg,I.R4+c6(",0Z*Y,9E)D&1<rb)L7?J9n8Do$h2Rs)A6Ot?!:?)N6#oSIro_QG/)3'GS/V]S#
%CYk0o(Nb>PP+?&!eU/,K,*i4ki0;TD!#B(ll%1SB\/KeJ@piauH:I_Z;1fi"V?,EtE[fH$-U2a*b$IQI2r\ar#?W#lal>]mZ4XFc
%`eL.KZ"4\hNDmV=a<9kXG[;-;fQf?X(_]od%ihhn/)ap`ooWSH@*=^hoiMH1KV@q?V5!^o^:2365(jU!BGS=99lmNjL3=u0RoMA0
%U.YA,'ljfr:+>dt%.LVUeMRg<"oEYNE=gCKo#1X(e[s3";^cr^@3,#H_/*CSIlrW=QkuU0\K%:O'n'']&i9u2S>1>jSG!?<3GH,T
%eC:HNPk,rYaMEL=j9%i\C,>t1d84AZjD0PY8'ZPiY3?-`E2m-!['M%IUJJQqgbK$X?j)#G8Nk'&*GE$:@GZq$/2CN9DPAhB_GMV8
%2T.b/f2t@bSAaWdW$O0DQH]-rTLfn4"#U`_LBKFKY>uC"AGPk:d*.p)UY!:Wa/@&ikn9,_f*K2t6i4G(&HI9NKHEbQ$)g]r!]a3?
%ULqV+7N3.$C_FH78YgN<r@QSD\-%BBM'u\n7'QOddT.6i/91$&BHe=YLu(bZ,aoIT#H)8PfkF,q`*b_72?GCqEg^A_?n.6G%>[Ss
%GhDD:7%R\]LJZZjpeJ(bDrScG"O$u]rFej(]J..BFH$/3IOcpU$1SW'C=^$cCJ4+^Eg@AYV))Q*ns8r*;^`kn2'n,8+n0L!2>2?T
%TsT02A0?iW4HjDNSC<V-?QtdWL74&`Vj1];;MQA^Ef`sJ/E_+%oH$lRnHqPJ6*F:A!iHg,6uS%X/<IAuSf*h$WeT2I?3%Y;<\eBH
%8n1[e1eS(FeI3jTUZ3)s5$CZuO6$,r*fS6>M1jD8TdQ-M^iR[^)mq]F'7PJ:nhI?9^i;Y"aq@r/cj?COYTaZ^2-/tk44srLHXeM.
%WW>(pc4-$8@3_TO<$n^$.1)3K9,f"tGmS`@XJ')H+us7up]kAbfZ=<W;YCT[q6>T\(ajp10SE!4:cnsEF^kD"NhK);'UniR.+,']
%Jd)OmC/?=)cFU5",m#s0)&e?P6KG6Q@G+:[bFkI-99tM?e.INS[9"ml7msD50m>Mj,.V&o`JeP!fa:S_h[gM&$J;XJ;'@@k<$Duj
%=&G,3)MdONnl94GH#Y"r80dYf^7Co!7L?FqKNitQRcY`#''H#AC%"GK)@pX5edK)I'"0.r"8#3FUt'-,;E*_1AW-_]Jd/47lV<?\
%+[h10)<_WhPH\^)1W2jaj[:(=*?r$^W?l6I(OZpbd6qU8J4[ZtCs=4slqCC67].Ap:J<"_h#V<(,UZ5U4HuGce-J3u?Eq>qkV3En
%5\@j^]/-/$-kBSBCmj4h>S'jiA[TnLK9Z[D8SBZL%$q-q`o:2G*_?fH'cr>HPh^hb'I;CBa+adgenXQ:_jJ4bd6>UhOS/R-1:YJu
%,-*<3.C;V]!.8I:oiG9o:lAWCi2`8CI"3PE]IZTD5SUDH*pm<2#EOj<=TnljTk!8)5"@:oZ8-$bC(DNbjj",?'r7N\j!QApeNA@n
%\7#eH6^=-SY%B/bb:$6F%&DI1"%UXY2kefEO([ja@pkGIN0htb?!fJe,*@ngFR/eWGAO;i4Uj.8oUQ/[<ol?D8M"jZTd\AcC@8B)
%m[%IpJJh4XYrPV]asRr:d&_tr!8X[ubi.>j%$YQPp-D&?`dYIM\sn+KLE.KYd)h$jN*['US9-2&Ts,?%*sZ/L!dY:ajHW`6lkiA\
%A:])jSI[O:Yc1=H5DX"Fr-GeS6cDMQ*b9jZ=+dH]BX+LhI%A2LAI2;R<Nlg#@J$XI&<TpEd]cTAM\a@T'AU*qX0D:!7bO^VDQk?5
%b1WQ_Tn%P68gk`c)%p\4B@^d9*!3ZA_MXI3#2uZ#+;g(Oa5qupNLq$e6)H\uB0qqUOFG#ofBk=r98P&tACs5nDY$0QIZ#Q6qsJ+a
%3TOR):Vpd&)@!.?#C+fqI<Rti[<[?Y^*>*ANDo<`QR<c4!0kk(DhYB-:6"mr;IF&NX=fO`kjM3e\a$sAPRAn^b(n#8@PU[&F2q[P
%PGHj4E]nY:1im#E@\Hlb,+d%ihN.bnNdhsP/lm&`*P;7^Ud`oR>&fBID^c`QnbQ3U93)X+TjN2iM@EF:\:X9lMO62CnV)5I`64>M
%(%>Dj^)q4<i-$*.m)MdN5fBmi<eRchqY6dk]3l>',BQU%_,"2Q_l851H4:^LoXJ69]l<Zjgak5JgG-qu#Kck/V2g47W^.#XPpOX*
%PlQN$<(W0^kHuJ'.e$E7n1@GuG-1OjF>;?lY!=jT!e;Xs;[G:Nc2/ZY1O)>3%['B@^"E1O>AX4`)O[;4`T[4D?:PP<YEc1$.\-<+
%7.G;CY%n0YW3LBOUR`e'_G^uZ8hb();JenO?:n+%k,>MEp/%:+UTa62=WP9Zbd]Qfl1kd6#[?^#C/?QU&sPP(2$42M4AW5rTF)rK
%,C\\GT';`<J17ZUL3&`\)Lb6uKN*p+WQ.^5;)0C/D;`fW;%Ous&tUOh>`I_UKFY.=*Q.,tk,F_.?A]j:=X4!++(Sgp";W_JDs-L;
%.8'Mgn*rGAO[_9]IVp'k63om^Rh]KZoda&$V%X_P%L`oLAjl2]IU1*%d%!e4GlTuAZ'YkHoD0=#N<fDJMC59-XJtt<2ZOL21s$pX
%FjH8AN's!Y5$5*3VEn$Amfr\];X(6$?,tr[Jn&'aApn?@e4+;NJb5gG&&Cjl8oddjb.VE9Us/QM.VDCpAEnj[JaUHVN)lHT[if48
%1?!$NUPQcQ;a8mS2D2GelD^^Ck[KJ3RMAB=>d<:6M*5o+-ZPCDi#JP.TOHc!.6pj.CLg%u%UJn?QO5dDj+s*Z)XbSdC24LHF)r8C
%n&b0r&D!",ji%FZ#rinWmlSR5RSO*rXJ_g999p\)_:8[<Q?_&7^_!Z.iH0TL//h.I@L#jH<!Xi__apklWfXno,+IjLkt.f$K7Kn&
%ZIpsjf,>4JBb-C>N2K!MG6;+g4V]j^Z9?5!kS<FaoW]2Z>jpil`8]8sJC/Ot@k,klS.;W'?AX:8![TTXd;$rVVc=pSWSF7'HS"Io
%)0^Z:+j#7XaQT$#lu^0P*IH?L2[1iV7R8_/S`]Q+?R4mYp"D"&-^OrnJ-?8>a'OC'A1K3?I;5<cC3]mAL:Ue+-ic25U%V+rSC;/5
%524L]hls-=J5gdO>0*G'!mY%8'&B&t30PC]>;\]K1Dq\HV\)e>VYG:6$46o-#(el]P,F/nQV@SJX&;nkA?:i-Tj*3bP&cUKjK]J^
%8n`1$%nE_>!UgQ`h1@i4k#qN"EW%0/SH51$!PKCJV&4@><NhQ.let7F(`lO\dA?-l1'/:u3d,T2!3^0J3$![(=sZ8?%a_nO_XW^o
%H@at2^/jB_-.gl8/,aQH:^A$V"9KYZ_\?OA`.HPR;`Ybb(_.Z;,Bi[H@Y*7L8=Hjdjs,rr'9*Qu("F^IM.dls;[bk`"<\2h3kZC-
%F);Db_sCG#f'*?\(ce!h:`31D>dtt7&UX;c<A?,R'?!:-7?)3Ne/1D3%uHU>:jXedC8K9T*?=phQHS2`>OP!>2RV:I<T"BcarT_M
%ld%kY[/0JR*`K?"dTH%Bam8"3L3od09h#3k<k_>,$J:>EYqEHL/(-F>/X+699^1hL/Y#YuS>q='aHXbPX@tn.Vd$lQ/8e=BR&6'^
%L.F6p:$H,1G=fVa1*sQ&D<XO)_&EPi/X2-7/TgNj(<dmGRb03":Y=ZBeBh,BC#no/*Cq5lpAh:UJ2X-9DftU?-]@HnC[L;G56"i4
%o&lL?O7-DgI/_CdrVc<TL8g6#5@32?ko]rck2uSfq/h2K"k+82Ie'18Hk&3spV2+N_(5Ge=kJGEJ%kplIf%Ibe,M>[08m(0Eq/&e
%@hqkpLVEes9ej[r(AP*!rYo<gAU4W'7!-AUmb@!n6YDUsg2Aq>`F$*(@Id>Yq-\k2Z0=a_.R1Cpf#@r\G],tHTf<R0%Ml8WJGe;s
%pC8?u(JmH$qq(["d*GbW"otCQ32TEGrb4&q[(ht$:E)THn3Dh`JHq!SJ/D,3T""s2n_(_en:*;\\A2XNd"KT<Y)Oj-[?6%qX84dc
%CBJ;GoWrbIT_KO4\m]G8S:`qt6c`NTP@8>OohXU%IH/[69]/a`i@s"ZSoC4A2$ODgS_N1in;$:FHZs_)lX.@e=MVFf\Vqcc5am^S
%j-8,5l+=KoH,ImSkEcj3gMf/7rV^$IrZ-$mG`N3.fWAIATL4<%UOu7lDf2G.][tL^l,0QCgIgqlq_%;[moXHT:"2UX$^kmDi17$/
%hq)B@$&@j&k%SY)%m8iYAdCc-E$_5`1l$4mi]o_4U#Tb8adcS9mI]W]XitAj]moLcc;/bqa<X+1BgOF;XC7coXjEtY&uT*s\<!1;
%?)`f>ff0\;+gV?1s7!O<q(-[jMR)uop->PfFUf"Q=0(_V*O!l$T.:PG<j#R;)^q7Q^_EJ`#Tg1M/_>"F*W*DDpP;*-SMOGJWBT=G
%bFO;NKuj_9JY\6J(sft:ENP07QG))T5+<+O`+Rb"&o=J<XjCKL%2Ze@;4#n_@8!BBqtG!'&)[7;o3L1@okEq2!//l3e*V6:oRan?
%:2;@#o]s0(%,:!pA_XZ;)n4p9j4ekof#N%6g:;**S#pH4fja&coGMH<061to#jYiDrRsQk/b];0i1_GKDgbk0r&4CnZ5XTgL#L_(
%k:_Sgg*4jchQ`'bCu@i_2D]f]_(R*`ZhC=kQEq@bf++QAdVuB0^&3t.@?Wes]feJAed]eVm>(K97o)>Ir9jQBbDZ8@gRIfHh\Q4m
%[#Y5S+>qiaI'WP>]DK4`Ri`Fg5CWP+`PnnDDf>*jU%'Lg5=*cEi*Ueai*KE`j*E:n8)DWe@:NB&`it6<%[V.uiSBO`2)!adf.I-t
%a]Gr1hm>&KDr:<Q&_$7b*<5Tg#@G0[^KEpRr9jUaoe2Y5XfDsspf)`tM1#0uQY0[]5$d0odlG/):S04&rq6-QVZ$$^)rTQ6&$PDf
%06+F;WUA&5gKZkU]R"n5V"J\b:]GTZhu<u^])V0:'*%a32<LZB6,uGZT3o:k<khm']mmbm)*IoNWXXL5rFrG_o6biZj7E-cZ]U!S
%Ra1:2s1>qRIsh.Yk%Pdtj4dqu4L\sJd/J$+H2hp)"=L<q29X>Gp>khG(XLF"fJcUpo')*96).^[B$U5LD8mQEg[?S-4,Mu3IaoOs
%1sUO0M>+4AIX$"C]X_.YGpVZQDd3_<HoG8U@cElTo#(:Hj^7GAs6isWq4'7PdXG8]F)RZ'c)^060CI/9?Huu:A)gk>l/q]Oqoekp
%D,9RR[?oP6n!@+^ju-qeX3&3NHLo)CQ7lTNc$?.^iCmjiD9V]r@t+$]]DVPqR)UiBf<>)nDp%1d[bE]cJ>(Mr:=nUPS#:9'@X30H
%IsX+a0"pMP-M6-]X1O;O?gl9I4MSOrZUM3DB]o-Oo_/.#mE<]MH.V.@N<85!2\4iq0:'p"T,gqB]pm5CQ.o)7/f[m%UFN_`4Rq+\
%H'@?n^:M"*q/DS/)2=:Ve`CE4NMA+MeE)_%gejD"l>fC#mK)Woi?@H+ZR0`I\m3^)*\W"L?@DSGr9<T%&&N2Va?9N?BAOmT[_>*>
%$nC6)p3G=mFl;B[dk@"O?ZPq^%&%r_^8lPXE:mu#96J$Jo3]gN]mP*NIe.g]m.OY$SoNPWcJa=MpKN9!3eml&rH7#$a51m@gLni=
%0(3.g)\2YGIuSM2aBO)sdN_0O?//cBhYkJJcaW3lPBZ/uX#[USDRVE!gWZ&-MrhpYX7Nqfs8(aKApH2qe?+42B+pe"^XLr,QhTZ]
%28B-Q?-R:WSBf;ZGL+PfQJYu<cT@8Qk!u$B022NYb1Ei**N=Mj6f0h?g6Ac6T/Wso5A)Od5Bj%fg3M0"G83*_R`2nhJ_ufQn]gI_
%c2H<XUX5Xih_;e)\)E;-L4^1dhU4#qoF1*R_fC,KGK#X"cHEJ2*+6dmnC';SHJApB[&]rZB+EZ)+Hng=]iJNinoNsOpNmBkSrfRf
%pk$-^_qk4AnGM_FrqZ6XIZ@5"TO,V3kV(hUmHOV>o?46_M<!W@QqHl&=F(K(VW5k]h2b32ab,h$k$PKN\KC9_'ZVVoG9oc4A!G<J
%g$CcBk7<c]EI)tYp%WF8r9"JAf_u+2brUN)DoJ8%LPHnjA5?g5Fl/`S]mM^#W_(*6D<THlX7J>Hjoa,X*_NBaN&geWQ#'gjnhuGS
%Vc*!Nh2CI*=1:E>@+fn*L)en!hQsJB^qAN&$J)r:jiG+69sXBnLkhOd#e09SH\T;sE:3H^cBm5G"[ConfE[c\5O2kIqcu.%,fTr2
%m[k*GHHbg?\a;h/rss1XQ\0R.Ak_>`*hEH=./81EM>$T;q9@1TlFZ0.nm\1C\c.^s*OTfuQuCl2Id8*/eblkp-]Qo!DK`mWdh:ds
%L&DM^H4Zgs%l96riOh')-?CT=bnl^"?X0.//?bC!pKsN,363K1qRgr0_hWRMRZ<Vn0T3p(O*:*SRjX.ZcB1YoiEkE?^#sAkCheaC
%j5)N7j">W4.3o"Fq)Tk-hu%?B?L7RVR$6<POE_j'/0BXglXroR?/PL,]5>l+`_/J,]XjOJ$?igEBk#i_5?]&#W6lSX,IQ:V<+^*)
%@8cs`?f;FM34Y=J]:.g*mELTbG7K>3?G4?e5FL3OGZW@O1QLGC3QOP:C0/lo>GA8W@tU@:]tD,XH.M\&dli/JTAA=0cf'$!ChJN>
%L'Dla8,p3Wh&O_DIQ@FF`ark9_Ys;d9Tap1mV5?qQT*+Z)9FZNk>rI,hTj5o(n0klZT,_1]Um)ps7F#pn,S!l*gIU=__DecrQjH^
%+[r-LREV@l092/Cqdc=iFgC`>Y!;-EJTGf$Nj0up\%RSd\TgZM.!$_V-r8/D(1kCt*+MkF?1XPZ)B;:!at0Eos03s_6MS*98?jRa
%-?CT=bqTuFcZG^:"J@m$=HlrIC@?H'6]+=#1RUVhEJGTn12AQ:rH:<Q=Hn`!'T4_Z15Bo9hkc\%&7]HemH%PkNEtu6@>!afMXW[p
%`8Q8G*6q$df2:mT":kjSnFOCXq#W9ZT'X80Y]#FSa's-YqUml:fn1fhr0A`e8&"[THn?B7g5I=;o!K]L47]e3i+mhVCQtU(p9;KC
%-#Dk/Wu\b)+.K;OKs_.3X<"k*OfSGS\_?6ZHEmYQp:`-#N$\7#?*X^s!'FS_\%bE.G`?;d_=8EaYL2FT7'h\*!r-HWhp.,<)qs^P
%)Z.G%Gl$RnfB(OA=6I=]fg3pD^7FAtjn8"AfS)ZpDn3N+\pS[HZb>kj,cp=No)/KF=Vr&EgKdP@!TDJ>M(]o9Bf=4P%mXjqS3qNh
%V:j7t*Zu*<b85\_o&_D"?6kckgnKN$baF0EmGDO'rqBRm\c)P@m15-LP8:Gc%HM@;?hR2NH<<''rXFbQDW5_M'cK<(+T?Z8q'1Xa
%+,5\_mk^-919*_7,0dbTqp(feDQdF&^20h8f<;XQWIL&&m?/'Ob3TV$$d:<urNsh81i<LSg6htM`Z2G_PU:GW3u"5ub[F^(dprr;
%^ZR<6&c$-rDoc-T`d@_4T&3i15JLO]c["L\l>:p\8*-E#aS,hOp`LX"6Zb`/jk_%P0[MQ'n*'d7qLA7gs18Bk_0nDg8,r&*s*OD<
%*rWiDs6lg*3r4=JF<un%8WVd1G36-!P2t$R];Lss4h$atID/4Dn'U=qemco5+m8FLZWAfHVmeVPKtNgp`n!>YX2FYco'5N6QT%_1
%lLN!YpT;9,$NT+T0uMNPlqC$Bb8J$`M1e',]ecWr"tP1GpT04ZF/Lm4^?<.Ihd9R$h@JgIRQ[F@KhT`07gn"t6M><hhAL8#d7h!P
%B!Pq:hP6M*BI8'RHHKkbhCY'QT/A';q,r'V/q:P4m,uRHX6':mGKZnVh;4^[D"VQcm:X%]gmMTq>[FhqB%i`/[QA!^A]C7cs*8ng
%l@)sB_$L@2Q9."RHuY!tLbfT"FrHk@"Xt@&/FskBZ+"f(o,#T.-CNZfq:?EWm[7WC>5u[h0#<K.+JX>mX4[8=FslWm;e$o&:$cOW
%g2$;Bgk20[IdA"P4W7XeL6n[ojaBhoBQuNU?N0>u3Z;<7_skNT(,EP,'aF%Y8&NLkCS428bM*k?FsgNWS2d.S0d(nbb0rX\O<.Rt
%m=U%ZGUjO-BQ2TMB0'k5M)bP:8$IjKR)?Xj:!B$C^4T/(%n,1P=7O*.9t\ME*]oP8n%Ulth!2d<5)t!6d#O1IIL%D"r]!(E,c8'#
%8raGCr]_e9o/7X%Ql["Edp)2)&Uio"^9jqNqM2m9qX41Te(\5i7;<lI<rNNWWFK!.hM;:>T?]Wq:up(CPtJ=/Y)_)'3Ga$I-?Js)
%hlk)WF0F>2cX&6miATICT?^uhLN_jq`]=#1Fb&AU]+7gXfXIDsW5Z'')VThmctkBX^%m?\EqsfXg_RBReU(s-SB3m#c3o9QL-'ar
%s'XRP4,3Oda_W$O39(:iOl:L4_U"^i*$P=5UE*ht1kBbU@iUS*F7=@3nc8"nF67GKA*g=pHY@X&BZE*d1%oHsNcpAV*TKEO(k3N2
%q>PbB`776L1I&K5^UQMCqWdcp::rT8mZ$P+h="lH([j>PB/^F/-St7-IQ2hfr6*pes1MUm>g1Rt<nd"WDKCo)DI-Uuh%&SnZVmdC
%`k.\hc0]`LQhM<Nbe"Mr!OVb$jjgHC9j7#P9$ORh*Xp9aSB3m8[XSDuRWVGN%Q$"t_]Q^?2U-%K^j1sm4PR>XkL_o'"KZ6[\(>]R
%+#_m09P+u%]"ad\\)6Uk(.YI%3VR-;Q*`X5ceH5>]e@:Lhd>4<nER$eMhc*_4JJHaREP$If4Lug#@a]]]-OSTTlc;(iunSRc'lj2
%i+l/5pVMaBT>2i/1=$I[k\JHeh"-W23E(1T!FPS>'$Cd0SR>4:__oEZLsA"aid#Eg@>Td*p$e]!Nk4$"4+,Q>rp@2WW6H?j\YD'l
%3h)m&p[?_rAdFnsD/MS8n?B=2#8eLo:1caA*2knW@qJ5Rm\nDOe[_G9[k`r<3d4Qd*f`8t+-JZDCGJD&DVrsSs15mlqW$E-*9Om-
%]%eP-!49:^PBbaVgd<Sq0LOeZ!]'++j^Mg'rIL2a4*Y"e,<k6%=5j4"-$D8YLVpd]%7%pNN6t^$Uo$37s7+"Wq8H.%/VnNGir%g,
%rjVopA_MQXs4c'D.lFfje[_/PNr<ARdEMD+au0#'*5$p:7DB?\k%Ni2f*cYa%X,qD?6\Iml,2LtLKuQO#5SSVf0$a[_0XsZ["Qt*
%m-;CbnpFK,q\9nOJ+PcS1/;f]"1t#Zlj?tS?(B4Rj!LmP26.Vb4>1't4ZgD\cCNOnq,)_AQ_lLLhX84m9CjY>5B*9Z1]qN,H.@A5
%Bc\>LmYjU2)=6G^T9n05B"9k.jf[`u:X9M)H/=n_oYi-!#\W`KZ@@1m"$n8Q`_ZJ?8olfVY>g2Ro<0fbDjI`j\b2$MZ+qT:I1(=C
%r?Fg`odJPm!CaW0WYYQIi[jh`W?-bf_[q]c1=80*aEPi=%U(8A"t8rNmJa4oS`:Z81j6W(mGXs[D8shN7_:]f1PCm_[e]SDEsVY+
%LM[ScP<&F:T#7(rjJO$4,kLDpqu8.;hd,)'^L#28;fGR:j$O2@^:LuWk598#?0:oAmP.'j5*#L`V!S!=3+i`ur]%Wg<cWR1p]!N>
%^5[pJ2BJRrq,hHP?\P*G_`J?@5Mk]S%e<"M5Ra9?<E8r?"3_g%]cA":d2ToK%Tm=)E+#F+o@D_+^l3p(iHAZ)T1qO!jit-N+6Ql^
%Bm9nBC[W@I^U?qQHqd#X!HSQ@kP=[kGAY+J`5@au*\,+Kqp1)QjW-C,N/U7_AFdD=aa!Fh:bpn"Q"_Vpq>0!5&%g$>J&!0?^Lqm'
%^fU*b6L<PqrnMjd!3QGaEIWJ"BY]BD7.>AHZhHu7c7+*fORi%R;)>Ka&+(,Q]KlGB)#!^MQ?Rhh]\B.YA)DJ)rqqO3]6b+?8[k)G
%\A/FNhmqmi8a@C<PJ=cA\bPk@fuQNAA1)Y2((^A2rUkEZG(%U$_e3SBG8_HQ.LtABr;H']k2ip0Pn`r]beJ:*rmC#9hh(#WaO,+p
%Ft6-+9cojJ#=I?3^UcI@35>4#*^_L9:Pe+Z)SoVn62Kg:^KL0hcSnY-(_Y7@OIgiBHh0tt"X.V%1&^Y5a30tB0->Z4eI1UHs7kDg
%f0A%sJ^`r8rVc-.-Qeerk9#.\(>o/_i<QPMr8@U%"`sSC-ssm,,[TX1hr)!DCd7l:U]%L&B(>!B^]2>*T!f-CrtbUd^?\XVet7V!
%j!)P-:?(8:Le9Zp8ueqVCeq>O')^%I0dkZ(JIkHN^Jjt7;1.Su0ZBTml4uajhOHuD(]BhS^tnMDOE.cbM32IUVcJY6@VYp$3td/=
%bnM/ifgtB!lM\lT=4XVKoF)N1$Q=cahf1fQ\<@PAi@[dm"c.?09;G6/DHF;YTX4m00fp`1&n]b1d$KmC-dIrbi_4&"[k[`uV!lCB
%P[gsV`b7;Ic:HG&938bUpiX[hPi2V%CYAQ0qu[r<O8j2%=7PP7a1Lr@QVHOIPY^cY4K<?Blju\\(s]cS1%:gD19MY.<#/0CmkhSI
%oC&l\XlHk@)?0*p`S:%`G])D`G+ih:;NDp//,tY@5H(\uM8NV+?g$bBgTa'_2fTdJIHrg3&%B,Wj"[#CWpqKT33_GJ52C8+f.Y$2
%b'8iI<fWcD*kh)1%L6ikoS37JiP;T<lKOmFCd56;(-V-5[PfR/O%SZk[<cNb[amHT34,mXHhGa'm2HjbEbO3qrTHfd>OJD@fgeiT
%,.38n7DQH_qX*kOM?<2'O,K(R6g2:!da.LPVLE`38K_^6Sc%g0jjX79Ud1B0Sj\%hLXt@ka7JEk*P.pC/e@qO:RXE8q"FDrde(jE
%@(Q.!X37Cl?@DIaX`k&dJ9U`T=7G'2JZJS9-]@HnCOH'UaklZI2gOqK>GuPNnrCKE(E>&NT)48O"nsPAh65VgkVi?&g^kRbn@LpT
%e'$b,oW$:,rM&6=__o9fLJ-'BPY9HFI(K9*e@2q//hB$a=Qn>Z!<_!(3cDYL>Ph^<(u+mm^DKn39io67m&4.AdFI,UG49XhYHRuk
%%d=H54$)m#[1fcn7TR%nlD]Yaj`e2uGI)<>?h:lka]68K*.XU$H1^EA7d\>9[1`jB]+Y4Kn%id7khAWKmCaUfL9%M?3B";$-?3kh
%GD!Q5WU7:(nW/7=R?Q^%nSkX@Yb>\(_;!BZ!d!@aWu:otPK@Cb&)X#>@L%9NI6ZXiI](Er\G9.^le_ULa0kRhC$V>i5YoLGbO`?(
%kGo,M?$uX'h\&"X)slRCXX?!f10%=j4pe(Q3ujH'icBZ&Zgf<:Fp;?4/2^q["^U,.Ot9q7Td@m36\e"en%BRW7-@<3l[1GOXc6`M
%H\FeYm3<TSnjJ3B=6@]#R:M^JI_PW@Vb]-(`L_aQ*;t3CChUHp^A#R4(`1;KG[c)@Gl-7'WjO,3%uh%+4.!s0K/#4](G;[n]Zk):
%@b=k3qUP!3\'']a];KM)F==U,b(bk-$7@hjm^mX&:-\d5?[7Z]Is-0_/]eKE4PT+KHMbVNale/S:YMJUK0i[9qFIK](tRjHVsDOj
%hQWM#*0XDHad#*lM2q;PK,NG/7H8&%)]SBrG#MUqB]D?*@e=LbOI5gZCW,Rt-Xt2WMm:\2k;L,nk1XF9+PK\g:EnK$NF!0Y=]luh
%P,f.B4+KjQfge6#5^*MFF)'#R*Du%O\4FQr>[X;0Na!jr4V+YLFW5=6^0M.SZG*DW0hC=R-`(t!+C[8$k*D3Gq*MKaK&[U"Klg^N
%c7<`tgGI\O/m3uZ[REJk)ee?,[=_hWLZLh<^j=u*YS\u(h0OuPhh]CpbQ:5/AHQC?Ru#]27*f?FH4'5MQftr!)c7fRE@s#Of$%#]
%B`cJW*#7X8iJf`]=08p=Y];35DF^IuJr;N,TCoO63fe3t:DT!V_Lh5mlP?c2DU:;bg%D+YbDFK8IX`WX&.d!Nc=o?K\\6W/NWHT(
%p=KS)O03Ki,Zj+2ag>"-^h=;58Z6SqcXj`]'Em(UCE`Qdnj)B5On`VcC4p1=*t7=l#Zr7@^uF9Q)\_;p"?>dOG<=5Z2.Btl)cp9X
%2=LpNan:,%=O9$QE0VBSp)bK)iuJfHpL<QC1$T@,g#J>SYcsrGJX#Cs\$[a)T-KkhR[CU.#)%4Nr2.^q9H+'IC.F;@OiE\P,g&4R
%B3jp&`mi)r,(q;%.`:c\-g9Im'O`t<UE+=Yj-+&KM2@'AoRl%=JY`fiqim!*llt3*Cr@^aGu#Y9_!:&X%nc0_05Q!,r4/u#UV`L)
%HWQ2N<QgA-+j3.rL2'l`1T$DN-FmE)RSa6VJ_)0`)Y-RSn[.$;8%cjGIO7-_P2[^E"$&6qcQ0LDD"*7s<Gi1i-G*AnXW&/(%<!*O
%=/2l>"!J-Z/?Ce=[;]WFoK$&`GQbj<e/;plQC1ff;GUqu`Wa'j#+p\ET%E<a?Sl+@1V^Ag9PfJfQEi5]QfSdcq^Y=mkcpr!q[oon
%Mf!<;ft#X=52EmI,cH?hnfPdg5p"CN*;S+BZhX62fN+2Y_rAiM`I6-u3`C$6;JlkMjRJ!uDbCu3O&3H&/.*>oG4+VJFmV<'b!Z>m
%%3,41P&o9.4/me^gG\#m<)fGP21C4qCps,=[-bXLU)nj$d&-]i\/iZtE/LdX2p=(_cU*G^2n/0KBr,f5.4&uoP_`Apd>j(@>jIXc
%K+NPg72nSRQT0g[oOJ<q2_[g:9SXa$]P"KhRoj26+j3O4QD#mrB=ScGm<!L&[K>=*c6A"X2m1M\/5cG#O"pGBC4"K11eT[Q,$-eU
%4D^BM<j!=u/Mr_Lp]t=e&b1k"$+LmBY%V8UDcDo&oMoW(3KuJV`#9#M3SI#5%,;2QH.p5OW[to/:%=K!gK$6LU:8%eG)E@*XY\]2
%VQL"oRr1(sq65CVAaQjEj&iIWS/?c.Gri/>Xt,O@nOB8o1p0R.+b5O6n.mrlG'JoaIl6^E+?&a?i7bQ?2R[U_;c0&'\&8HqHK&5b
%9A1CRJg&qp$`XAJR57=`ELe`EQ,XRJDfGhQKPkI`P?hNW+K(^Tc.Qoq$g\h:*pna@4e)S8\O(XLr4:8*-CWXe84"-mnd$mJn\cG8
%)gic4aq(/kLc7fi\*]]<B)Nl[-fD6(q-9.;KaNubU>FtuCW*ZjCnpPDE7!,EOVid"DV^^tWdK=:*&W2Tg+jroB7'Pseb?/I=X(Q4
%dgN?QIq=/6EN"R<]s_LVE9TW?D/?qnk6g8[d&&`QAV-]PaFV;9Y*0%?$Bqk=P^pW3C;iitAs?3*8mqP5\[K!.OU$05mG,^Bf(SGJ
%jNY(=WkP#1YZ^qMYC/P1CE&mZho3#tHu8'B3(u73RDf=t!55sh\p4&Kr5E\rNA23Drp3\02Ckuo48K_?H\LqHHF*d=^lrsoG8YZT
%$(A`Yg+27Sq.iBD%#4Z$7+TrIfet@?"2BN-+p(F7mJJ@&W/#P")p>mU1Wlm;>T8k?2f?sI,pj[B&q-GlPQomO2O2bb\"UoWbh6L+
%U2s@R@))e"%[3=5F@U^4@)H!7$Rg@7U6e219->#"$h2+oU3!'5L;YDL<*=u72NN.t4@Ou0S/Vu.;&.SoceZHl,/\L!0'?dd>(80b
%eW0Q"d(@C1G'fUi(qTTN0_%KJTiCPJ*?/3l2FqYY0YK)HMaG;_n7m1_frEV0\;\!HQr&#diI.Ge[qQSNo';OR&+m@gj]4V'jSM9)
%9,#3GY'-JX;\Vf-ZDPVtYt`X;3tGMf5&e',+:iQaV?1C1ChZ:1:U^Ep2=NZH@V$8m?guWej%r;b"50.Kk#DS"8p=3s&ePB9&^1Fc
%Kn;3m+%]*.G>ECRekof=[<qQbkANWO5k3c!"pUQ#O)7F\-af_Y`a104nfuZ%@G<oYkRk@+RnVu#c#cEJ!nLY>^H-TGgKe^K_%`"'
%2gr'T$;G5Oldo25Ut!QRolklPj1/N4iK2Ik!h$\Qo7Xf_0UhOo_?O36+FkGr:oA5X<i/,+OGG-`IM2`%^Z<D-S1__f&Pq?S:>3-l
%&=]I#7,Oi?[MfYEBAuk+kGjA9+]g])c4cOqMng6%].f);m'[B]"?o&k/PbDNnC^:>8AZ\j&fk;Tp3!M;\Fj+o&&5:6>H9#T:uas@
%*"]H9;k$Q,Y?WA>^$@0q1D^Oo?;Gnr\rpi!iJlHiBc/UR\6b1P-k"bT-Mna$^&m^ZfL+Tb\<(ZIgMr3\/>/OfA4aqZ)k5ad(X)sD
%#.$&jcGjeuCqBoUV3%S5[a2C7L,\ICIdc=Mh[?nF6r,mW;OH=F=.?;W-qf[(l&@:NYk(mnBY,o-GH3kEV7#Sdkd:(C#bau/E"Qp!
%Y`%ldDpJOlJ1ejL9l)B1K@fWjL1[*"1o?kl_[HCc7QFZ5<<A?ipn_s@>FuL,7Pl?@PC(2;6&s0&+)Z/n9t%jFr12aAGj`%mLet1/
%TOD+-rOpXSD0LF0imInpDkV#]4&O!eqsSO%RN4Igs1\F(rq!b`q)3FHg8Gp:2]2&6\:uMCUh])$2PJDQ9tQ#IN/U`*6ZGEdYeDQP
%^F[6j$T>f6$17,u.u'cDr-"sP7<.p,bNWs#ng3`"8K,=tJiU4rq;jtWlCfXkS8C=ZgR8$V99E!Jl>PJKj_IU'(`@jt`^E$j?k_o1
%48Q]VKO5d\dbeqK]XhH59BP'%-+j*e6*O3N7.ArMLnYt%dI]A4\`"+AJS;Vo5<A;gE-1.QTU+'aW9*?*%eqI,HZ*Di+54'Z*oqnJ
%4kTghrq=UeX7l"cJ,%p_`I0g^k`fF:^3fPDq;TThS+@_gGDiZnShBIqH.*iOo[hR`X/jDc.D:e3rk5GPV[L7aEIY:h(+]``Y.&6Y
%EU.-2$#<lEOgXVVO7nF6Im1W1&%#j:ohAZFkEFJpcd2&4DU5L%Nu!4J[QcD5\39Mii6BpDamUjcIVu8P=e+t2[[!JfiU>Q_GJ/c9
%<pC@:9C<1G^V`t0J*DFb9'Ya*q)c?`NWSP[ICjFt\0dn.!?o=0q:jfeG7RW-0-;QZk"P\YDq:da$H$(4V_mU5(F%&":D`R4/DI'1
%N-hgNGOSm6AD>(S@FNb0SH-(VcRhK=qNi[]Tf]jZpIqUf+c*+s%q&HC_e[3"cY!gQEHQ53pn#7026-:-M/6q1e>N?0k4Y,\r!cu1
%O8nhBkN.oBIeUtDe$%Jq-j?e;?U$3Oaeu%QEM^<$r)>`hQT#:eneY%I_\\<er+YcC^:QVEpur50H[Ph`nm_0X]A&sDYQ'^%?`q,W
%j2QRPacfs;-i9,Hnf/J#`K1P^AYaNH@bft\%i-5tI;.8;qf55s>C?:lq;)"hH(EgK4FM?t^MQTHs"M[j%I<fCq5[EaO-e$Ss1H#?
%qC0rh`b"M;o)Ee*T'^OYb1Z:]g"5?c5co&FF[2_6,uJ-K_C/>C1(5J3R)H5LlOV<[J*X7(..m.ngiI9rqq1VF\bDa)KgMJ0-ies6
%:-l$0-e[R15OsP-9kuce4.@]-m%#&2RP\T.diV`iH"u\JgF:"a]>>!cr<:UJcUioig+pR#;)ZL3K*XE]_UQ,]:&ZVXYsV%)>+Em2
%5KNMojY'@WrO5G]A.d('O*3J]'cGh:$NJ$E;QYa#:2C,_ZhPW;oj][#5IsLe?!I#bnC?RdUX.Y_^"V2nhi?:3S]ln&1NV.g]QU8)
%`'.V6>O"u_,:iPZ7[rMjpbn_REZ&Y4me`%eX%?L1-CW/i1=2q'qWFp6,FWGE):-p[cM*TbHCaR$.SJ^UImS2?&-)WIce&&iFQMm#
%>jur%T2f'qXD_YF,MbZ?Q7X])UP$@Y?7sPu]c:mB$8TfF9_\]ojk0!E<[\Z35MFuNqa^Fu@QUOu<0O'"#G][a-s>YS>OmIn7,H(p
%%;cOrbl>3lb;W.P,:V,WgZDQ"nIOaEE4stl05TBTI):Y,Od1J<<W3:V?$;90_^E!3Z&hELX_DPVZn:PekJK[J65ZjGV?B-F'c,6m
%K3DN,Wm`p8[lds);fgEbMLs(9CF_[h_q0*g5#1S:4c,I6==XdN%#;ll$tXIb<jhUb$^0*3FO:Z]d]0IOWH?7QDOVQM#K^6#^c2^(
%#%gesKIp!/=[EanQQ/8h16/jWSYj7A+OPfGa&qRrBf6H5i3,Za>itZsU7#_a,081h7Vm(8j&@DTCeVr8g(mNmS1cPeOugD-XM?1X
%Ssun:8<]RTdW&:L9k,0JL>4u4n3=!\/D*4hJ/CqF@i>0XBj-!^[cI<5V"l=;%F.tp4ApgZEJcc#%!?>PZ-'!iGs]Z`1$JNDkG^8O
%jW_iMHRT_N%aAdOajB#_9\N%C2V,iAEHE]%f>(Qd._N)lHhAgURZ:ptrIU4:e$Y%-b*EJHYE0N$Lb:Ku-+1B#2T]<<Pq%U%VX_$\
%3J6b(YremM4F##s@&jY:XBBlWS(UD[g>KOPhs$7P=jtP:^FG6]"I1HFK@Cf$`,$rOYD-YHN]Tk0$*DEm7B8-I/7i\L0Q3i*=X9,:
%;%%H2'V!.Q*G5jJq!#GkUS2I=*il*^mT(X%%sKPGMQgKp/;QAS7^O#F'h'*[%JD4Fk#5\_'b&j4(^u#+C=2D/-.lq#./]B#P8Jkn
%aDo8KZn1JnUN)6)jUD\_ifBDD?cVU-r)k4\\=ppKa4;:jYc=56V5XeKR\PQf;*QC"+mR)N%ga'g>#6aJXU8Zo$qfqW>:Wl^E2[eb
%U-V3nPAQ:$',_!,:.Z%IZ"m'<<Qkc+!4t-WN5V#Rb@q*fM66>lY_j7;Gdu;\B]g]P2mQGr%trNa7E2p$A!=j:P-d.-6X9fZ^,cYu
%JlC"=dqF'.bY-e03R:)%]DHSB?*KKVc9+Kl$CATA'OI)BVPipP0A'."AB#.E3/<;e`mIHC<&0/lgatr9Vof&WM_N4H_1nRo@jBHO
%m<-EXQJo5nSEX5.kCuK]OrBa0_ZQ+Db*>/r\P.[(oSedE'pMFNJL8@=W%`_`V;W"k.r/<\=-BrC%3XWQ&1"m>ZG@'8SY#r*A?s,K
%%%?P0ac3$!=7"oX4m_k$a@okt9TGuj52]KH)sI-r&F8`I2IMnB[B5ZaD(X>Ci=cZnCW/lgEnDaNqCT5<)@PA(Yl5o)b46[4G.,Vq
%[OPFBnjY0Z8b4%i<84btGENVn&Hd\EjOd#qUb.=Ic8/L"7*;qdATZEKA'0e)eJ-d-_SQMsM6$8i[[VK(M2UOKALqP(B"@Z;alT*$
%M:U`Fl[$OuE*@cpb:-WOkrkst])]uRTe7kkF!<8HVGU4[5UGZ&VZ9*9:U+fUdQg`?DBT?!Eg3i.CGDD<9kIEqBq=k*`T\DO@>3l(
%pOb(3MsUeVN(Z(YI]1N]iD/q&DbQ!`Y+5E3RoqXUe%uEZjh:&@WJ0BMUJkmFOpM0ab>YTnrd!f'TqHcs3@:H6kLbEO$tG9=WGjJ>
%9<'HtHJ-.NZ`S3seYr:f*e!X5bisJA^rOoD19'iGAnTMU=^/Ki,so^QZ[)*'TN76r;9Oe7Fm](jPT%f[L6[CucI=HIMVft;F`<@6
%/]Pb,/&3)5R4bn^YVMC[*@=p;?;tAGXL2m(C%9a9Cc"][Eg_I6IU;aZDsF$E3.j8o>RfF+Z$#+[j8Y6=@(T:`g5;@;s7'D?Hkm\H
%TRTBc<E\pP<RKNQVet]PmR"4!_Htl4m/Gu-ei]D+8>qe*-A0UX99mDni/atBR9i1C3mX*=r0+Vopc$E-U""^L4hH$9<,JK3^r^G5
%0KaF45<S=b9e`c]khjcM'XhPQ5h;V@qb$HX-.@1pY]"*j5O$BmQ/28!es<D9"g&38GZcn!bHh8)D;3>XSnK^>0Y8r[1gi.a=lqDn
%o2e^Z/fhFXDSeVE=YdlI#3H$aG?eQ6VJ7Ee`lFM:7tk_'R:rmFeGUUO)]:<9T\>*+$BfT[bLE7!DnuAR&oN"es*n-TZ6s20eb!cM
%nbHDug4[hs?]3)<[gnI^plu31NsCN;oRBI+23@\7P!^EJ*LfggP3i.f$i8[b?q9Vfem-*/p=>:K7_;.uX%042q:bp5GJP.n)%_.D
%St&T<GN<%!_>br>s$a=h9)KM"l[)S1?2T$1ddH)G5?8:)n!oiSOUC-(;mRSOD@Y.qr-r$PCKnCieEkYVhP@G&dT<3=V_"#fLeAQ!
%n[E2umb[BrM*.cmp>5YldDhRml&5OB.`K.TL_Fi>?Mo,X^>?^eR59h]Zh3\cp!3U'7cF%_B/^2HqtEp-Zu_e()LFPq"7u9EWhQs5
%=0]/e3KsrsferGP@beUWrCO[%Bn$&*%HYLPJ,BcJqu6[iIY`'0s(hJFD<jKRB=46M4e^R/f\/=]EMe2/-3"b343rkJ4@Q0Un&K,-
%qi<PdQr*EndDDAu?6]hLeXkL5;d\<k2ZEWD1b:Snb.r._766nqqR\T-T*:\9T!^^b0CK<>Rn(d7[_AB*#+q;$s6+C]=0TN*bl;`D
%^\@JA/82cp>O\mR3a1>^O6aQ2RJ(!"k59rAS"*(5<,%(B5?-gS8#$OWiYtVij-.m1f(%&8bL,;*p9?\6'WRRLR-.BkC.%F>nc%%d
%2@dRkNXhqX+,g\"7oO0mRoc;pfn\tEPL8?MWL'Z@8#(^=s5[*KWZLn+R3eIf4$M@_5!&'UPq-7$^Z"JGpZ'fmUT*F'qoAS_=ER>1
%Bmm,\WuE"?XI+R0e\e"bdr;h3GLS4R]"R21DXC0B`r=Q)@E(V!HeSe1LLqW'boRtoKf8Y\+j6d22bs>,V:G;]alN?8?>.Z<Z<JTP
%eYCOA)U@,8%uuuoVtO3dWUC>+G)j%5Pt9s.OETmpO$;s7OqOtu8_%]q;";>5<LBLXKi\eFf(N,T2Q!F<HO!IQ<IR'qN5Y7,B-m8B
%O)pksn3I=Xi+?sd\S/.64LM9QiRG`,LYO(&UG(o?FFJB,O4D-L;4`']PrtoRrYS?Q'K`_4Z$!Fb[^EekUojlXg+I=4XfZKU*:4hd
%+!q(WNV8]XM=ba_IpUg_f0<;1q"aaLi,F1a-cC!TkpmENr/[UEAn?uM\hatO%8(;&/]ipSY@s<J6^COA2Yom42ROD2&<2S7XkhCS
%&]q&NW)Z8fGE920BXk5AnTlK?K5@3QOo%09E9VUogNV-d@[dKn^J;'XS[nUIB`#X2&Ucju>@63@<BT=DrA/dK9hc]M4BtG"lJG[I
%Z:3;,qU-aM6U%GtfJ,\=<G/kifGDT/:o^MRk`=-b.>6<^\+Vg*bP(-a8A2d%#_LH&\(($t#Ai+3r^"4mK7``;Fa(Mpht8r*?M!pj
%(`hsQ6QrU2Dl$TG:X(*L\/Gu!ZYk:W>j.ZPnm[L#YtlB5>-d*6XV7T]q.^1L'7'S7L[3SoBjLPaiq$6$]e]EM%(6&q=n2.;T,W+)
%N1Z+h9PkV[ZP[@qrm>#s'^)/fo1l,g-7UlRp6jCq=,C6rPDZJ1>G/BfbK,Whl]%k)>ZWM@ZHp*cGSX?e*HcO>U%E'Y&t3HtQP;Vh
%?tm.X&sGXp'Ub`KQ!(71O57K/[&:?U--)4^-23`qorY`;](PsWg40L4DK#EOfN0-kB']o\-D^ajD9+!FV\D5j\[B1AK)+(;LYZtU
%A8Dbd7sfWAp#Mk.9u)lQ[3`Q3\i"\`.fhq#g08p6]=BksArtIE4c-/GXeVFeR-??3,IU42huCF^F0Gl+?uL+-+:DWH6;9#GZ[2-4
%E3+GZfMh@]LEeQum"r[.Wih3N8IlFTYo*-0V5L?2U[>mPcshD/IFh72`EbL30KYuprW]ZtD=='eMuAW6WQO'g/D8XOqtgW$ge!*p
%6EXYPI:OGs3fj^6+=!&I9IQ3[lM@oD8o<tB-lm,fZZrpA7sk-2F!sHf<;e36.>8F@]L#dj2KNACmE_bcK<7A$fCc`4mj<d=]T2Zf
%bU/Z;?"?9\7`43KoQ!1-ji7.fMt&jt'MGhg3o'SGgUE@4[AI^lfQ8<30"JI%[66QD_::n-9W&fPZp2R"]R;Kd8JW>[7Fq3VWS<IF
%%QLF.-lStp2*$=M\a[GT@.+)%iG+E<f.FO)hS>2cKE$m'_VS`a\Xm9-V;grrP;U]%o"2Y^2R1mXXaEThg8P8U32NI,lhfH&J"C&>
%UsSu+iJG->KoWUMPBb0%<`4]iYO8#K*3S3k%H'6]`/-HK1rC_b)"'mh;ID+(k#r4Q'?ZKX+)N%;+Z(UIM%_OFGdr>G>BI``HWm-9
%K>%64b.nD>,1kn_EX1m\ii2SpEj2uuE-P7cVU!)Y1JC^C8@Rol_Kqe6K@ckX3C@L<hjn(UF4*"-2Kt2d)r%8m5:NshYdq5iU?P%U
%_rJ-Y-Hj-[3i(mbZ%p%;CKp(PQJPA$*:/^"Y9*42nWQRRYsFuIi@-g@Ji*/eSjI9U#JJ[7^j\@8"V6*aP-[A68QmN"3^OfsQhZL0
%kbZl[<qk;Hs4AEh&Jo&_YLp[Y0@'ZW^7sN^h#>$>DL,8*\\>e;"XRDr8l;&H:9G>j^"%3>4e^rnrq]2%LJ&VYeGWW]j7mFfJ^0%K
%GTaAR4$:E>_8S<nGLoVg(+J<R&Vha;M7N!<mV^\832,!(.u*^;m6t<+4a8iOH95<"RbskDmDdYR/$IenHiE9pe/uZ*Q.ZZCFkZ`Y
%F"""!elZ-d60'am&li2oq=?uZ/=,)ObVsrCkuhA"0;`ksV2A-Zk?Is@g3u4HfGsRLI'rgkkQri?[e@1#Z^n>>5I3E.gASR1GXOpa
%369"Drc%Vp'M`I?V'4n2'^imGpK)Qk;>+^I(7&2R$U2PdrfKU@dP0XT]sXhPnrjQ.eTIpeP%h284co)<_5lDMfAE%OnhQV]2?3/S
%;_=)92E:`S7<AL^V2s6s^7DucBD()?8*-R[2s4c_Q?Rf5rk<aIdF,QE="_g;XUYgof[gWLmJ5KmYF"]@1&#Ss5@&^nF)\cu0.dr8
%RZ"^2kHjMoiV/&p2mNfIGJ4Kgc.p";IlMNE\@=uXbhO)-47K'f*R0"^n7"@uf8O%\Db]+n?Pj2(Iik_,\FH.?X;@0ThQB'o+"dEi
%H-UfIH"2#1Dg4gAE:i2e4a[0QBu+&!488XGARo(NfZYD=ohrCu\"!&[(EYldY07F59WhB^]D[$;ma%`U1Udl"44b9d>Wc?(ZFmG6
%eZc]P^3tEQ]Wh5-D*>?kZi0=ck1l#mq&f9b4H[^o9+1(]nCPn?qj61I+_(:erlb$hHh>pd?OIB'*hJk5g&-;-p=7FZ]>DLueW"(=
%VZ$J9p%?;slG]%a+6Mm[]<`<s9@r?uhY;8BB)_AeV>8O/[<lg5Sc<\BI=:c9rn=rt\2jI1<Ti&;ebW\>_RJ9(?QO(.D-sr*q<#Nd
%:WKfZ=-nB0!EWq%4ShoQ2>5=bcSMo>l^)gu:HuC2X5<Y/]iE[n%QDSaKCt#qoq/_b5]V;3dGZ%->^^ls^FcdOgKX9Y<iM;S-du.7
%hAFLSf?\Z:%I]&gBBC;m4o]]q7U%$Ua25`TpADUMIdbJQ]5KSkhCdC)IqH:dFtZaWmb)C=d4HI->PhkGU:N;Xo;]Lg'_KYi0Zu\Q
%J$O$/p$SZQF4WVrTGi_1^+^9S6IfU^^HFFO+4os5h0"5'ICo8Vb0SsIr$KpNpVfMJi-3lIHhS:o'FXZM:HLm]VsiKqq#0Fnm`iO%
%d<dcQq.ckXgnV[%kK#u=Abm]FN=9=I\[dEt/FJ5>iI,3#f\b:n<u-8"^9DnKnZTp^e]Sckm+UbAG98A`]f3RoA,U*7q1\JhZR\HN
%'pu*f^HYL9D1#H5p[.s"OHM#1U9.dO7V^3Ai8B1T[.enTS$*Sd=JS?/p$23skO6'K?34]<B(9YcrQUjXpLn:'i8DXkF8O)6qqOh=
%[<5lV#Husn5.B-mkt3aK\e_sqQ#nWL;)NR#:ENqH>1h-`Z:EG^qU]br-%t^>[Cqti.n@A!Xuna+*g^K:2jNTTn%UqD#AaQ%mFP`]
%[O\B<QgJJNb,,';o0;Tb%uY5Vh.mCnK7b,rkkXkA^kkT-Lh!qWqt3h33d:>\[j;I9a+K)$^XoO3$:q?YYC>k$Spg<Dm`EoTk+a9H
%+0TN4c#;s]B1pt-&'K%KG5?&$DNBP$+6FWGS=f4'6.HMgULstX5;/%qXqu:jCs$Scp=m9#I_4^ml)u$rbPT&V[I*WKk%R=4G950F
%B7B/cbHgBFq=/`Mp&)]4Z!DQC[kI-qR!s;q9(q?BoV2qXI')9jO\I@jf8IO^b=>nuG%P*0HaIa-C\l2:&D4Yn^s9)Fg&!u)B'&":
%dUMh-*E@1THFESt87[5?`no0Rl&raYN]R0L?!RF*l]SH&#Klb?R-@6c0+Z0*:1'T@\\3JeQ[?"6J5"p5;nr6MD(tk^rMs5(7Tjh?
%i9STZIHfG_nCL:(9Hi"?/Sr^=rfTq]0:/!=?9S%8)aXaRG=4g!>3l+O<<*2O-8U_Zr#/;1bBo.+<n=0?O>#J=&:\o_qRpTInuoC'
%DTqImDf*2?5i^.`aNDB[`t*&?h-I+bnupi;n(2`Zr5t4kMf[X6Z2sgf@iVFiF+<MER<c,^X+('+aif)!bNmjPd^]aD`RP?'k4@^1
%i=,^s8"-#FB;;lhp[]>*k3iQA*`\DQ,XiTgJ'PkscL[D#TD$g>G_'5"q=@G#4Kpgh21,)[;I/*`GZfFmYePu<G@@1B*lp[HCC[24
%7RBu^.SOR#"SV;<0CEckYk+B1@OBG?+uCgoTV^(KYQY'0!5$.u@PpiS.jZn*="F<K(E,iY8d3?Zh8-;MOS_nD;Ae2G+EtTXGnG`!
%MFAG`\Z8pJHgomKrHm\Pkk#!Xe*.;:#kEkk\KNN(<$KfHY5"V_.TF)$R@n<C%_^JlGUIZm0[5*$G"Jh+5Fn\EWlH!!",2N(>u=t?
%Rd4-5;-q`"<ZXP5,1EgI./^/BY+6_/eH@U%G?Pp'E]^+;5@nIkI`oKLC@uug#GBM7UhfEfjlO>j`b`t_\J&(m*mBG=Wb]ilbED+]
%<SWIg':"<K%MaLF"7^_derUge`opc.7d^p;[(E"9k45?cnuL+30Bn)8f%RhUCm$gY]lXor41dTOEqB0<E]>00GNOt>PrFbJQY,gd
%-WRL#EVV,AV7L-$a)_+;in^H77k<2'mUXYi?!i!NmX_"bDI-.'L@Q%ib:$X+$B91\3&NNC?WW/p]VPeVj#MISI);p+-SDmn4!02M
%ZfTL@O*HqO2X*7U+/kW?mnm+=hRp+-(*;B5ATTeN?UqFUG@/%TI<G1$BCYifes5mZmA66EikAc@]Y#/LB2ZXbO"7tWT?Y\FB@"SC
%>s!mZBUK4r/8_HY5jCGsY@#T+T,t[NG][ol>9AFLlG;Y=Z]F"XJ.M$lH[YGIo&6q&Jb'2'G)iHj:P5mY(nA7G3-efG/r*e;J6H6n
%r]GM>Ykd;JeZGt:+3C?cr&$.QGZjt<n`86K`2+)HUK:)c;:.@+LqfF-[^>Q$gTU3Q^Y;t:2Kpd&-eJ)r:1Cd.Xfc#Km")d<d;<nF
%m]5a$OVAM`;>]7Yn?CM2i8EJ/pR>7Q9+<PsHf)nqHZj]6a7]2u\$k^!hfes`MCMc/r$:YO/B--pCmsdIk7>'1W7LN%U'sE:IA`it
%P=]PM9D:j1j#D;_?lKK7\3*=6#)^t)kNMFu2/2+Id^QFSg4eY_od6fp(Q5@s2G^o+?_"b)WO%>!R^VE1rq9f0oC_cfZJ%qZ`RTr:
%)2c(s`K\`,&c6VCda(MFX'YYnq:bY@`SKQm`Pm"unLAMP`e@V=RsKMXB^Wk2)/@FnSYn(OE;]^pm#.dFhCL6`h=*WsS_q&DeN],H
%SnGs]C\r)th$m*n++Br&k'qb>GPh6Mjf`%)IXN862\$nTrHrXV*<52kEU_gS<9DBZcXQ`Ur#l1OZJ-<[gDT.<V\&WY(`1#_Yc%3p
%lDgBWoi)I]rP=EXpYW(OnhmMu1NsnTs,E>35L-+DT?Y)RhY<Z<B)80fH$ujWIc*tg^2dJ;TQlt(")Q]i+,@nle*RMuYuJu7<MHa=
%\G122?^nUtqXQlTeV\,=[l^)"c[VQmH+j'GC:LsJ/Ua':M4Fl1K<=Qr3Y5*A?J=/(Uc3QI]&JLMVKTsf>UDbXP=KXof\&n*CM*5(
%e7#F<_(biuKjM@eI/D4;6M7%^Idd6uCZ?\d&.MHXLM@[P%DVmMOeQd^fgj'jK9mN9B5Ts4rF_M(<pX`t]CRYD81Jk*s4?,Y_QA$+
%B"UYfO)Fn5IJF)0*]i_T(T*``I61_CjtGk?T&%;kQFJ/8c.oYcncOaGjl,4lCN`WN@8Zop;"hd%?d6g^\%fB>Cd(tu5'-VWOsVLK
%>F,'O)WK,2`UDZ.D]^ZQ24qLTfbI]9+0AH`I^l^<g4)"k+2aZlRe+=PKuY]>IZ*mNDmkEO2"TP<YkU*1rOfAFZ@DrFif1W!a0X=?
%m)R*<kM''"?Bg@[I_YZAXD@];I<b)BS(X(c%)ue(F.E3@=(Vq[[`>`#?f(X,Hg=>28\P,s)YupK4Yf5rh]f`O?6cr@e*Ej6GCJ?4
%elpl+[6m+UrS5W#qs1$P"8_>.[TVAb50+hY\`#7-B)$'j(Ok1F]!BpomJN9R%3H@J7[S54o[B:NgH4(8.F$0Lp>51Lmq;(T\+t:/
%>WM3k.U"bap9%+@`C4Z_ComRR0Cn)a6IpUq]JMjY5A+%5<qElhk'W@-2h#Vggj\s+Rla=`Rk\4.h2U[lG9:Pg/3K>K\MEbl>X?XW
%c>QEA3LmXnFE,jf\*oXGT?b3^+5B?OkF;>9f)!F@L[-Ucc^D8]d9,je3Id&9PO-9:Pt1S(m=S2-8'XDD*B>6bHYi.5^+d10nGW8t
%;r?FRb`e6tFY/ahG7`7^7siUrO*@d6\G-e2IWof!eqa4R/Jm94PtMp"/U]d3knUVqqPV:c^E9S!fQ(5mb=@J+F4[Qk27K2_00dab
%XB[fQW6G3qJaUkg[@D+C`?b?\r%p]4*h6T+TD_Htj30kY#F?3DXAg@e./^M<B,=W]lh9H7epNtATk;S]'8p7)=N+J/lHS-(/&?(t
%FkY!-q`e`]hV6(/dG4G5G,^8:B^Y'FUITCfrGSk]9RegacdZ"Ys!:XI$pJYg59E(cjiQMR*e8EG&+eg+"A#N.<I(0:&0KUsj*':L
%Hb+=lrUZf;a7&U/<U9;;V]-!_47/#<a+JWK6:V".cgT7"Mb2e&p7kMQ2XGjJq7ZcLn+VO\p<iTNg9n&@mI8lHh5/flh;:2Hg//ce
%!&asu5FoR^C#SUB]=5_6.pfm"\[7`B?<Oj&qsl]'X)G2g7'L^T:+slKS$Nq*X+c>0gD@n(dJ!14,b<77@9<aBO!"@U5Z_SDh7[h+
%r;G&;G4_%\IWoYngpJ(]X`Ik0UUHg-<.:V4Ge[*tbA11^ao\qVWPA5qYF1<>/NbD94%iWrm``+(5!;'D[.+"8X/1aOL@!.=dJ'&L
%mXp@KdWn@T=7j+L,B1)?Faee*rcp2=pZCCKIl/WsBc05!:K2)6*$9"[J'OK5F0?C`*3O^E:!($<apr?;i(fpWI.R<tC0hA4MQ<3s
%]eo<'O#F5HIQY7:j4Q<'ZoVpBZM'&BiJ@XZ`9fe[%KcL-=BL!Zr+Yudo&kalk3'!!Ho,+)9I_`;Jc-8=l=;!jc9,5H4Ss,".ITEH
%@rLVceJjge,BJuJ)Dg-\B6e.>Y.nuRGkTO#h,YPs\6gfC\a`m/kDsDIT$$dd2OCR/?>am]Zc^#WF<3Y_cb<T;hin:U@=S/<\+<hq
%]5jQV*pin6__]Rs>g;$omV715`O"a6YDus+itG+/YjcUEl]C86\K,.!gFdo$Ej;2%'g0*V(P/ab-QBtprI+)SNMbOD[D'/ZpYb0_
%j]4"IrOfZ:mGVu)44c-b3BLoCnk&76I7N,,V9T*`W2TeWelGHuRpW->+'e\3meF\t@?P54qYS+jG>"9_pIB;eG`J(VZliFCG:p1B
%V'0n@=PTMFrV,J2$P,1&*%a:aEb,RSW=NS'Bm+iGLHVNRUIu-Dq5PNFHaUnt*VMM&cGMe)^B*`61&Kta=.1qsGB.Pj*uuG7%mM](
%m0jB[)KK'5=)L8$Z?EnQm7X\d9e4-<r!0?#e"\o\)dpUB,VE[n5LNg,m`NE/V>^#Zkjd'mdb!m&XgFP!0/pUDNuVK,Dh#=s$9Ll3
%]7!Uah(?`?0WVPBo&[PCJ,B#lCpSM6KQ@F[kWN1!2fj6:h/<[^++=-r0Y7/C\(GE#,5>b`g>:U49Ch>5]tO.+dTJfT[k4_r*^!R$
%HM%$qd`gh#9"Ld1H+Z+Hj4=adBssVDq4jVjD_*PkBN@;KY-#p^?2.`3g?MeG@)T_V$59n9/CuJ3g`8BQJ?@&k+!9tN>+0k'Z[_ko
%iUL4m9sjUqhS*5sT3qQ-E,FplH@<8-*%cWlI(1"[RU"ngNVupOR&a8#S"#&f&2dU&$RS2erh3Zop>FNM_XT0qDn[>QjRUQLV;9fP
%1o%3YSbm]qmS2lQF@^j.A,#85AKr6#&^0Bo^A)QJ]"3Q92N&N`(VVEKkmFM^GER./HTh7HDtqT6qfVS0?<BS=F-l>*(N4\m4%J0D
%4#*PSntOh4dh[U[n(4s;$Z#3#059(pHa*GIli&h$Qsgh+OFHC9(Km7TF+/2p]KLN0i''.hpW6f-r\__YKog'>ilVk?lE5R6I,btO
%g"/0K0'65KFoC=]NJ0mc2Da.n.D2;-2nq7`H%oG4337%BLkijo[&$D;^@*[jmX;gpJYq;>\$Q!R%ALuqbK#860=-^(>]$2Bi(1]G
%`V&9K^,4.WPUgTrj3aEoY;b=nm^=GR>$9YH9][^sDtDk9/7$7:HBU$'#jg=-ftCaJ[r>m=ftupSpZIaBmq<&G5?`L,,`3^ICqh+M
%prUtGjblbBG/ChI<`!]f$l0mi5@<ZT[uW-mY-6[6i+!(3Mu+"@q<\f@s!o)"]1ItZF$4U-bK])#Q218,X\:Ze+b&b>lKmBoBIRsL
%<6?_tG@p8jIQ^d$5$Z2G5(ET;+>3.uHfgWl7],5A"qAMQ]@>u]93kf6Zom-)8"BkI0"#W!IC/\'Y2"F)TiaF$F7.V?h2TqmmJ"'p
%`9[T]^Rr^4\'BE7N,`q;gA8",m)%"QT(8q'o@J"d1@4p.Mh0Jqb6YR`bfg$-0-1ZuO5qm3cBC%)6bN![iV)t"T?H+RR/1GJg[uRt
%`0&%%$VOi.%^pPPi:-R\b!'225'iUO,8`WSlc].;#A5YNVf.'U`5TpIGKk*aEE$:ehOR*-4ZMuk6,LZ8Fb'M7b)as/BPR3J1j/G#
%2!(n'9c]7SOG!:Hl5r5[]2OKcJ"R`]GGie`=8=r8><#hK[<dWNit5(Z6tA"EqN)$4^CTG<K^bU\a&Dlio]b6#e7`>"^G$TnoK/WQ
%gtJ%^VNctnR%fH?JR*$=eBo<CXcK?fpce34eFonipF"C[XR>OqDllY6R)@tW+(4m&mK-`SMo;E'=!($'R(2#-N!sPD:*&g&`!^%,
%$+bsZ!&5/Kon0CF;bjk":0Ca`4F0(mHa>U+`u02.Epmi3r]ER$E/FE">]?Er\`C=p?eIc#'M1,.-g<9u=;($Sm?s5\(b`$cTZ\=f
%3a*iYF`7Zq>ZB,O+Z7:-d;q;V%a4BiO&X!R#O0"Si#-mI\%B-Kj'Ze<Zp:088MnKZ1RquVgj*k8_i(8Wo;hbOP\"WPi^Jg@O;-_c
%eJ)`U/]k-DRJ4itSFYT0A9R5Ln6\=AmI%:[`k<hqVu!(\5#P3q^3R:X*CJuX++"5Wc_rt-lLTC9jKRC='5%Q\M[eFB*kIs4`JGIB
%lj:'N+0>H%+0QMEhV(+]bN16R[!FQ4q/O'R[_',YI?s-Cjd0(H3L\5IqT5V@,ZaP#aJ(_t9iQM9cfq&]jB`k1TkjCGO'Y/.c6<7g
%+q@Bp[D"/$HMSo`8QqpR1rn:1LV)k/OLqMKiPX+XlhiUdT0"Wu_$!2IH$W6"B6O!]C&QYqP1eog[$H.&<qYXtR`6(d<,D]3Vkef'
%M]Eh-<BQ>]"=)bNS;5/p0Y=dfa$45/U'l:5.;3o'?uKoTBXmp%kb+Etl/^.R[n.sV1`_fj%6`CNAKs?(IK,al[)`'1VT4H2e@f(U
%>N$@L)92FX3Nc*u1T@UuL<QW#hqp_LiDsB">+jd7Y#^$Q`iduS98:Gb41odURhNaF%6["t-='[@/e?k)Zl$0CV;J*Ao3oJg]j^VU
%o]IaHI5jR%[or9Y<tCNCG,JuTX5<@5]P2BuYG0t7gqTm;=a6IZX+pJUX1Fk=,<l@H;HX#@Y5S74?/a41q:2J'0!DlYrVQ._^OE[X
%lYn<OPtK6j4o7jj?\dEK@.YrjeDdrqhu2Tms6Z3RcTPcD(\6.PXg?6o$Z;fRkuP9]]KheYLX@l&`B*qe(SA%ZZ`6>TmF9B9Z\,,i
%g8Q*IMa:WG%6'3R*L'Q9VhT^r434u)"Lu\I6"r,"E0X@+aQK-#B*B>lWuYFSo"6Bk8m?b.E"$Uh2D<6.+otG2gB*GINY)S:g75/\
%<)#O,b&L8j]_V$rG3p,M["'>X*Y3%fI$n'37k@AM#Ia86A!jJ5Dqu=.bE8mZVHCej8PZDZk7MUq0Bs<A&hU+u>>M6P"3-tbje->Q
%3\>(O'qWt(,Sd1l=)_P(OAlZ-Du2SR-gQSC\/pl&eVU.@A>RNc/8]HV>Ot3i.@,c:_Bl0Wac_W/o7=_V_b'5*PI;2.e!)129%#&K
%-R9FmLaKui;+35sBY<^VRVT)mV',m"Be@mde)V\iKf8j:(XZqf"%`q8g.aT+X->Br,onhEm1dL&T[]E`@)Sl+H2cNmWW(MoTZ##\
%P@2b9WhLPegHeiDL,H26<N:nIs$UFfH=0.FWaIpHQQm/q&T`(f"$E)o)FQUep-OjLSS)f]cY5EZ;q0)N.QF@*YJFIZLg]ZDX)':o
%'qUiB(q6UnQ*"kj(9IgY<B?C^OLl8=IoA"f7VZRGN4.-f%PQ'mL)Jk/Uk-XIi%`h!d^C&ig+cU?ZKOb'9G]KrX]:JP<"-hP1hk(%
%Zp-3L7>4Qs(k#7\Y.GBQ'6dG"lt;$]APL'JW%_t*?01MG#WH:'7A*&IC=6NY]XO^X;g+<eohChi/I&=7:>)ZT0D>Oko/;rhX_j%G
%92"kk/k'LFT]pU_Ra`0TMO[kB(#5U*:uPi#Xd-h';`&c$JOtf'Pr6-$HHqhXrDZXP-Z]s&VHL/<M.jC='R56m;*-S4n8<'7L5KE5
%hV\WC)pp('j^N*PS.'t=^+PPUGnQW@Ru6nBR+fTa/IN.X[\u&2^ik5uO$*s0)?$KOj@,2lOdH-\VK^^O0Zf2gE'&4(lI<GTh@JWQ
%SW-VRCKKO&jjq[X2%=gP-m#5\`XIg.J_?JU.5?[@$W4D"6J*8&_Pot(imDc\AS7`j>#okP\AF=a%6ns(@[VV[WZ'hYPMn,'DXdjW
%4rO&^\hNEE-5&cX%11do<Np)tG\FGQ/KchnMI#0ue^c[f?n4q22eSluKeb!gGu77T"tF;j1rPJ5,`[(H=ECQP4(q@.!j2c+-&Juc
%/4ed,XkB0gl0$WW-+F5'CRO2a:BK-'TBCIaRBVQUn(&J*B\cAm9jUjl8K)_??3H.r2g79/5?rJBh*<;CC%B:88a8e_bmUZVW&\Do
%;Z3_*0;`0moS12Q\98iSY,7lb=["1mW'^kc&*MH[[)g>/@'Z@U:CQ=!;aX*#j?(htd4e%]:l0IfA2#D>00O@49kA@\V9"d)FL%f%
%0QNHJKKOUk@dO7UY?MRb@;ic4'3*-a"rXm\?E<K*#q3<$6Nr@:"O8a5>6W20D_+hcAMt=SA=k\+5D0L=\m%@c'$a^Al*;a_S9njh
%dODi9SmniMk53o`fBM!)k['=pf:<tPYN6,sKtOT!N&dlQ9?+!hEgiP4Ec#pu_NrRD.\%uMZg:.J,=YbA#&]`9<j\p0;bT'`Vd2lt
%8"EJIY/a=I(d4DQ\qWl+E-UuA9.FWaG?W0!UbU\G8"tKkU3-njK1ToQ<2!$o77l'=*AuI62V+\Vhg3H1%/.=Wn^Ks:-gb;sVVPQ?
%#I/n^"*22&.7Dlqn5,r]9l8O)2L%e7Es9+2jC?Rm@boY.@m*GE2r9+@G,%t7RT<rU47h&@)jsQjGA>+S$1Q;uZo(j_.7!!8G+Wg`
%O"#:dPjtP;;Z`q,iB"oma+UfO4OC+ZL,Pr4gUbK[@Pe@IV#*9k"UUu>V4tD4\8q-eCu[%TQm&DlLg<rjcbV!G)1]%uoUX\<LS(e?
%7^I!Da6$YMUU4iJ4m\pe:#31F!a>m"'7n[h3NMoa/bI+N<SecqQSg<VqC!k_i-uT"M%%#f^*ABZN]$?J%pQOsc'0H0oknY\%9,18
%eS]W]QsrnFgoYtVKZWD5AJI<H:kPi<d?<XG,&=&tgH@I`(@)F/K7ZO1anMj*3h\egCl6qTj@U1#hC&aI;q]OeDZ(Kf*YcJ,8W->s
%=k$7r/M5b93e9g*n;dBn11gk3o!YsjaIRj-$6>@G\)L/F+fVS`%H=3Wh;\6OfG<Kg/G$O+263Jqbq7(ARU2-bkPIWb&L?PENfJD;
%LVLoE1'n,+P;0IQ[.*+$Ng=0!A4&Cigopl3Se*DDAX]Tok=HqASGRVS/AS&a7bfjJ=a:a!)IGLj">n1(<LYq`iK.VT?=C+i\iJJ=
%85OUkB&`<#=N:nsGSnG@<GDjp&$AP2CKnVGQR]hml)]l:).3H]YV2hdR-%dJR^,Vl`"5Ai/N.l4D-Llk/0c4/QeKgpCkCCg=KtK`
%XqA@j$>2]a40qq2<])_hA+M;_j34od7;9RC&#DMl`kJGV_iiQ9'&+QQF%nJ^9,$KG>/Z)n`Z!K\0Fhc`(6,:,aA#U(aYHV*ZARt/
%b.D&.QnQcj:tC4FY=)Kues0g>a_Ngi#'?e@=[gM+2\>0Vp%LM39`EQB8eJg)[0>Q&FglsQ-Hpu?(@iK1'JMr5(c<TTHF8Y66`1Vb
%[R?u&Kom9RUtLl0?tPqnq%s,B5B7S@E>WRj!>D0S@>`KXcc%T;(*tAC4g2p/WZ$`X8]%NGOofE%d4hi,<SWOS4Wh<j>'875RTCNc
%J;*+tQO#dL\tLF0cFV+FUGQU@7Hl7cD.tAm(h.dDV9k8Q!@lCkcpZDNMu1nYg'l#qZ#*"%Bms`a]]i6K(uSu[PogI&.W4T@Ph)Xa
%$iQ2$#*@sQZMAYPCrfLu^*hB8k@8XoF$!?IN*._843?hhd[!@m#71`qT`cN:2PZ->HO9=kp+?us1%Turj1F4&/)8^I_=G/i3AA;k
%YS#oKeI)WR4??/5)SteX8tBX0ighilDV.N4$CH,8d:Cnm^belLXXRte`[Cg:3upabT4"'O'XY*K'L:uAAmdll@BC]OZ6WSjiF@,Q
%JBF`=Kd)NR`oM^e`""2]/`mn1lX2#LC#r@C]Hg]DGtTBJ]H)]6-#.#c8YP2`;]jOh1QD5t]IQl$1&tkR%&-@rJm]W2p8Z'eoE?1%
%F36t9Miar?U#6FjVE'T_T@PrQejkJG0/Rf4)&-X,T-@NOXHS2mZsj5=[[D8iL6Dlk.r-Xu67r:#Zc4X`V!E'$,AIM\[fj`DBq-Bk
%pSsB[?Xm]CGoWAI/nsD^NBFDgE%oe:6U>S2ZTsob4!7jtN)^5`N]G*LcDXIEkbU.r1`kpaQ%H;]##r(+4QIAfA&H[AXahcd&2hr(
%`Yl_e)?^laK_O4@6>mDSjDH)cOZT9\h-UbJ#YUn/aAo!HDC(2Ue'Sg>iS,>\+^P_,Zu!j/3jj%i'VtCXU0o\$;37kHb9GkV(_"0:
%rnua*m;9g$"%_9Em6Fm5n-S1V.8)0E8::rl(-/qJ!gR`a!Km(:iE'usR3J'ZQ3E'sWFYY;6?%<Pq@;I(BL<qCUPEP<d\@n(Re3ka
%oN6^]g7mYQX&hZe'NR=F3_WB:I^K[0TRGoI:k)gpBK[5%(oVEW!aE@2rn^@gj*Wg^c!".F`>j#bBlXkQkY?^('DF_,YD/]P`creN
%./Vj<(kETR7hZ6rFJq&^ldF(UXHS6ek=@3l^>AYl64R$^<G-;pU[c&QgSfp[e_5$#@#$Ad:t!RDd]fWX25SC)%T1b;A:@Eh.aV1Y
%U4Jf.A?Sh74PmOBnSkN`Xb<O6^@0ZS%jnAG2"Um>hbnZ!W$LV-Ea9+"afutV/F*A`Sm$fSQkeo:/s$IP3S$*rK/5\bG-j)J+&m37
%)VomBQ&C]Y:0*Hg1SCG:,.5cr8j!Se(FQ9C4_7VIn/TNKAgjMEZN8H<459$toRl<&[LElNFUQBL$p+pRb(U-oflDi8B/Ko&WC7"1
%=]g($)1QOKYU<@GjUZ0@&.ANnCH8"]#TuU"&_03a,cA%r%tE$LDXE>laOp$eM#:h\mq/&`_Z\LJ2H&a/'noAe-q.XX'uDGrkV,:9
%UE1iUUM5G9h)=?CeZu<DGgciAP*iC2*RMat#o*6`e?r1=<+S$@VFZ%jXcQR%et\+E0<-Fr'pAG_U*r)<H8M`8?[5V5mR7kE9j+)[
%CqQ^s$5mXEK%GEn-X\)GK(s)7k:#ttFgC!hoC1h/]>ci2?K]_I^GZ8a)B"H-&"^@hUI*P-[WSK1$Hs4F8!>/h6ROO-nV^#Xj?]t,
%]HA]>Q-:,CVNkpt<'lXI5==sAj\-b$FZtan&>dXI&t"BaRHia-`b.ldMRm>"![.rMp(#I5B-VA4i(d<\cIJ+;A8Fn&0>m+9!a?J,
%__e$"AG;Su9:O&[HeHiQQK*p;&p^eX*,@OoSGBU,iD3pg/=h$S]!.c8LI\6Wn?r_jLuu&q@_(*$`H#,Z240U8OV:mUMS9$n(?MD?
%iRlS(s"/Eu3Qa?8HZCm/38OeK,E.XJ'n8gcPaKFEjtcb""q8h*2(_(QFUM4[B_O4E`Lc,RX]osK[;\lV1IAugQ9;8^#LJ@F]!d+h
%/amA\BAM"5.16_"cKXG.=0j<o1rt98XVH5r]Z,h\<c:FhHufeWTGoDjU87KA<UM;Z3-7LMAV^'Y[)f7_R>PtITjWj'&!LO;]o_NJ
%;$7!*'+/I%8*n`ei2C?lj7:"r?Do!j_Et_\R>]^UEPWo@7qd@MAb!r*6O(rm7O1qU1ec^bcCpF_N]e:Ec:;G[]uO`cC_.(-*:"?C
%SJpOD)A_"/Mk2%h*7A?2ETUb;iW:slfXJ,kFTK$O(V+7:b%@H,5ht@_6V0_c?!A&p/``s9,(_s/HEguOJQ7PmAm+@l/t0pea@-;[
%,)>q9'3"B<^9#,,\<b+`k.E7c(aFA.=dDkuE_]fC[4M&QFu-[6<Td-FXW0//Jku[@A#lVlRO\nk=S-V]\Jho^)0nX20oFbki?ud!
%D'c,=2JU0/6o6[B)9PQk"j(j1=?/$?<`V4B<_su#Jd&OD*F80[P;C-[aQ>E[`!C%nH5FUF&L!S2A^SW5c()b-&(e88o-3iaYZQkT
%_Ib30?1MSVL09A+3-O:m=-HE,=K#jqaQo?hAXN=)),B5:Q4dYG#JGkD8l+Gf2Pu#qMKbRoS/7qBH['Xa-i;B"HiSkL-sFOI;P:\q
%-[p,*X7h\efs2t32JEX&P#n(3P1E>s`)Oh2,t=I&"-BB3kPS@,)%DN?0aGo]"9>CEKLmCo1#L0JQTHX"A_al=JeOGs9liedN]=73
%)g^#EkbSYp&8#KR"919[=RNWU5R_H59aD&Y@j`mLQCnCBPbD?V4b[jmQ+"OPYt>ct]!63$*36%S#Jl1Io$W*4ngRIk67"XDPpmEW
%;(.%?clbUA":^tLPAdcM(p[aji$K2ucm_GDI<-RYioJ4A"%-mT>X%F0hO!AQIVd1N&uZstC44od)pf#jR1.WRCNN>6&4i"oN<k<#
%l-.>K%3P)b@1d<a]Mb$I*d2+q-D2?,#?o8]%=gmlqM`1&`AY\3A-_^#$3e-Y8e!?:;@;.3M';WC7)<:oC_?G;A`t^'8!7*0Dlh-`
%nsYIMSo/&D7JI6\!pc9_\fE4b<Qg7dI[qq2gtN$:;fY0%+(L;>%I=hglO9gVN':J8(2Y?:k((P-X+_@YhaB'93HT"eO\FW!0\MOf
%p\(>c\O-a/MUVrDlbiDI4Nl]NNuW^9$l)(fP+86TVj;V_f]$KTRh<lfAaUI9B<H<nG&iEAQn3HL[*TqJK?cV"c9&",1pHb^!6u$b
%Z33K!<d]Y<eoIR=rIm.R7sp+qb7I[hLN.9B.<BB6iuDBAU6AO?gqEu^)Z2T2b6>J><nZn[&Pac!%+/IcP!_o&O=qAuN'f7?Cj>h5
%9B>Jqfo`YhOiX>AJ@3VS`+_Y(g(Ym:_X]DdMa_&T1"<EPM??@JUGL_l9QKAWpM6gmXWn?S:i+g.P7TLXh:*L94mq:U$ba?\9Wjmb
%[)nl=k<9__[59ZR21'b!,+24ZOEehH@^;?1!j2<VZ>ol!_,005(HC66\)-Qu%6"p`.!,A-_+7W#WYUlX_38O"Uf:Y9NoCn:?LFU%
%398C5-OLYLL(_r"`LW>FlDF*SKott1HuQ(u5GG(ZJda0n.o%W2mO1S#bnRu=,#Ys"NG6&QC1RdqnXk_PD^lhsaYMP.lEE5i<^%Cu
%&IH;'DA/P\GiR)T@-c),=XCLf($S;H*?P]d9[8i5M!W==ZB;uAk@t@af1`![Q>==>,k&N*_::6h\&8CC/WJjm#e&sOq-FQ%fP+*$
%5quiSWT?GIg.lEba&R\%ZP/MHj^:r<M_1`qn4#0W!!r<lYYZM;KS*<mq:p9%%VY7^1k&1Ca2:Ws<(TMOBO24kAe,#DB3`=kK3maF
%<jkm<4"WP"p,?$4X^M`s=+-Lk9'8!*eme6M`SglB^l%SKbmQg$El0t&Hs"LmkRHF<i\OcjSAULjc4M#Nc7$4:H)8OQGhk+3a.O5/
%cBPXS@'!PmK=S&q)Jl4),.Z8H&ECT&X)Cnk>*s-t!YT5nG/4F,g.^'a#3T#uY/)8:SAjNJ,b.6Jg``m'BD&LucV3S4Ns/9;ol0,*
%c6k7?:`f/EiE6Ym^_>_<LNoPBc?Xc?i_DkZ%(EGLLQHcMPbd,\-?CVrCM'jk$NoGKk8)fXd\9?o_XXe/[I3N**u%147rC$?OBpt:
%4jKbm"#<Q.R:DE4("P1NJun0I/NW/T]D9r7=!jtMHnNQ=<oW"E@kDKKIk"lfj<b[$U8^*,H,L=630`'7T)8,@)6OYl^-C_kNHssN
%dE*D@RU%E&LI9*D&tYj9TFqs3WF1G9*]OZdNrQSi"d!Y2)o!msk*PrH$hk3=Us[FUF#iQINT\NkV@u?L2:e>S,63)eDQu%<SJ+#c
%R>\.i%'oc?,Jiugb/m>UKQW'OE(Et=LZ0^-ibgchQI^%IP7KS&TJ!OnT?.BEe;kX2bk2&ii7q0\j)$1NK;1=Ia8lHA.gW_A75&Z/
%AC7.bk95`6a2m)60Fl.=_`%c-&%8PN$*I06P9LfMPTZEr_us#TS2\f7I[$^QG9Eg"`B>nO1i=q"aj#'f/3%6EoDT#"GCj"l4l=Fm
%N45.Z2+TsAo`R9k:felPgT5.;#eatu&.rZ]FcU$9:@86r/Rf"i:AhA+,%0XDK&OMCCH3sl7+8+`fp56,B$(gu5AslfS,bB]N'et9
%K?+oP/M+..Y@Wr-#N#$A7OWB\%^WQ`9hD]L7g'E)T]0)YVqR(LrWHEV4:<D3>)C.JcV)0Y.%q*12kuO:(A@tPXW3gRL#7e?&1):j
%B:MIFp;WS@kV0Z]*C5*RA7DQ:$ul;Hc#,!JW3N+Y[^B8s3JH"9Q;p&^"3MmR!49g&2c>RX\gHNfbm1VmkV(U`nNt+Cp)Y:8#3^mu
%pA_:ZR/_JAKF2U9Q<[Z?\^NUZ)$#)U;5*M,@T?XC[5SDNf+@WLrFiis#RY_?D\S8-qGLpA6U.U*YR)K__Srt4AGGh/eObr9d=cV7
%d#W?#`2ZuB`P+<5=?>n.+VN.T%4mu/qCr$4UQV3[?X#apCBJX6X>a:M9#JLJifUDp<2_.'rKPa=PL6$>+MaIbP<br[lMH#eWeKT9
%%o!0Hg=q[3qMo/_\2,;GKl$)(l<hbV6H!=H]C"I[O(]`[*!`6T2%`8F2j:WOX]sS?ag<TZ-.Njbq!6$.JYqVYZGi\AhT\J%dA.A"
%/Vb<-ka6=Dkp]\<nBLqn<IJ'oQJ\"aRc.g872Nr>_"a\*L%sYnXE2T6&O<YED7:014.,&nnUe!?*'NWuj"XX5>2n,IS5QK.-aPW[
%'NNA*ciaPeQ=s7N@5!=CQpE:S5HSqfQ1mU1^;OT;XP4gCdU!X`,W$59inmHn&]LnC+d[,_6dqF*YfJ8W9o=BVi?>S&*t<)QC'm^2
%2Jppj']Z=rV)?/9ZXX*3_T$+bFHcjKEd6u9U,>8.VG!WU\N^_VL%Eb/NUs2N"_Xn33_5tp'tJpuc`IgZL$7!Q2]Ym9Vk?um(U*Y;
%7>BRSEjsM,QbN,.QdK6!OqhZk>QE,+cRM4@cNPogh.<gP1P2-4GBl\kQ`u:kfrRdQ@_'dN2fM(sRm.gkA3Z-iNG'bt:Gb(,37B5I
%3f(Ns+#U6=;NRb\@p1U23DKc_Mi8">1SK1POdn74kPc5!,'juNq\IS=9MWQjh50)Q"Sk`BbLf079OoJ8Xs*39Fsr/Ngb'%-/j63X
%,m8qM\$Y^rMWA#_N'[og6gN0?@4I@Za<j_?4@Cr]4JB/o<E;`TSI@XG[U4cG.eSBjP;!s,-.ZTIDp]b$g5J`Z&QN_"XV%/Gc"&[-
%"c1/u<BCeODLqf$+'!30ii<Sa#'jm#5MC5q>(gk[Nj!tmFk]V%B!F!if+Yr!NX5'>Fs<q6qPNpT6^K+->/"U@U*bhC73SBs=mKru
%p7k2(O:#IP>`OZ\MlcU6=_UipbV-EiZrs(pGA<*#U?_tu1aik?aCXrL@+64qI6SWm8+Y8dVK21nm705V<Tc(E;Y1:\]^WBP'TniQ
%?e`5bKI3DrKtK,R;<8J@GpC@JPG3k]A8O+/9iq[\kXR]e6&c_=8^qKFUPY)k*JVd84_V^&pS9./RR68V0)]J3OE#`)'=-icHV8%%
%Q?.8d_5Lmce`)7L:!d=+d`UF?kcQC"!QCSXaAGH-><f-&F)G-OBDtE%)6>rGWu:OXmjaT?A/1,?CgC"HRlj\VEkJD\4BYs&nQ4=;
%[LnW6ebUgPJpj#tb6]dm)imHhFP3qQU>qLF5G:$ggQ=k'WfK92p)L4P4&f/B7jE^^Bp<6E%B4@[5SfgRcs_MEGE?7#;!:CaKlPA&
%_u9G#*MujjUcNT(JeqS8hNLHb)Wf^=NU0#9(@u'9X0en/+'#^oV5\F4`UQhqmB*^f1hG1nLoOl[YtbZ[I408i>/tigXWQ*$`B-?:
%qX4GnXrOnZVm=4&E@46181oc6%<O<Gb<etCpXH(Yf[D#1do8Jr-_f7Ej9o#4$hB?h+fIQTrOo/,X2c9oWOchmOoq5&fb&_!][T9A
%_ZWC^\+HslmXPsI6dqU(&8UT%<Ggd6"q"PTGV7>]=f(X(%QDdd_Z[o,N!&,']jUbc1Vq7n[h$s!*15;W=AJ>8+km7AcdTI!(5Gqd
%ld<'tll2ptlRDS&MF'h9f"b00?(Frd-pU1CpI,GfB\KH+3_0hhimIrB+/UWf`H5B#VULu?1f,%_dN,>q6CigU_8u$If4l;C!?Gnh
%B4IqmY&rLtf8FAN+iMb(_u*'d>*ZKp=u[4LR]LVrMmIbX)SomR?+OTFi@]7_P%.R3fLsh1'bfP^gj"O]NsHiE)66TdkVALO*S7=C
%s3)P.?eh^h>4f#eg,-=SaP1C^7;`GPT^&\KBYB!s1ANo`,(u,4`>[NKX@!CeTadXm:FMI(4-H5aD3K>eiXGSNX7R@Gg7f62CM;]_
%X\W*d@q?ci>+`%K8&`IS6p2#XDiA\hBfH9N4+Er$GN>YF9>DKrJ_,Wp1$^aBU]!`9d7oH<d8X.(Xp\8D;=NDarK=#dCI*rKgdPa1
%!ANDAh6+^<X3KI\>i!K3N5kW<@4nC[RF5rUE,$Pgl4MIUl6m=/'dKEN&][s3_kEX@`>+W7T[>m?ll=0-i2g7@:)$5iTcn73)U8M^
%;'RSO:!PKC_g1%KD(;'`<S=Y1W]*rBc>*Qi5p@XI@@Qd!GZ#=<@B,7oUZ\r+h;B-CU^'DO=:S=f3&2lIBYKNm^OoiklPO)A70abN
%*-C\n:+:r3>%Qgi_2sIE6S[/j;<6U\&HlhlKW#$H6B-OX<A$*/QUqa(=%riu,L)9)W?p0L:rmq@iUDuGa&0c-P-"O)L7B3Y+#/`b
%7&(L:V)*9<B+8P]7+?p\27_)A@lb`ihf)=l+)p9S4\uW!_C1BFLC-]`!n(N"eZrL<)7b<508Puq-AQFq=1r96T]HhnrF!KBpq@j#
%NJ2%b\M&pm68Z)i??]:S5SMRs69j1\L,D[HPaPLl[\ZsU\/a!I&aY5%h;5qMjO/-=N(s&Pm@*4X-[eW:<'8Adi##sq@m4p4G=9s3
%P#X3<0;9qXg#1Y4C!4V3Lh));-[_Nh`^$F#^)pA+=n1$tVLn=)m705Yg*3-RVXp0M?DDE'D_jQfj^0<!?aU/:nf7b%9>8@t7T8JA
%6(BfS0j@BuhdU&;"tJbtVi'8P:R=PB*CZ3X)\XBQI#C*3I%i0fL'KLeUU!K9hnl4orWE:t%3iKUW$S7$f2*WN(<i(2CUllfL?'rl
%R*-STTit?@EkN'-g#KoT*;^3][,o\OFZt*MQ6`#678bfMP@l,^D:,Z+3A/lT<jSZ?6u"Y\ep'#=1/PTYnMQN:V9sWl/c58/<&4J=
%noCC+Q#"kZ!9]9l&>tG1Xb^X>En":3al;\eO8>tSN.7hRD2W3`'&'PE/M`:M]^PrONt+%)dsAPl,DCSG;t-KJ-N8lRjf[/mf':YV
%7WC=Fne,a*6T'RS;(<XhjFJJmaL2<s'VSus%MR?jk!f^VW1jiV:rH^N%f/)A[:Y:oXAq,:;WpUc"W_k\@rr/tYXs,@>)uV?.6:/L
%WX;i!)r*J6$+5m+T!hB\220+S5ACk2Sf6mRrP@*>a8.fhBg3iQ=&4nNTpiiC59i'@hTl3sqjI&iN:gj;W[XI;TA-6HTA-6HT:<9m
%8,L]bo^ul^W[U?]qU)bIBD^?rIJmu>Spof`o&DmeO.%,b(AjkCqYIa=HMY1nX1fYB8'<W^G%*ZPA^SuQ!DWDn;I=NmF;!="o]RR-
%m-2n(BN\$oB6K$*OO[VTfXJFb"3ROB4;ukEJElP/lq]kk"iXV/C:fK%]8,HdT?n@"Z%-Z^[WFHCP"0$aRQM>f!lhi6!Nc`Z@aLm;
%(0u+87P:JeUlrY:lhE5c\KhE9ZiW2H>c[M(iQ&1ni$MTN7oZZ^1o_UaM+uE3%<jRQF[ide]5&>5N@NEY8pMF$3U/`PF,]_[4kmX5
%XB0E)fc>dqEf[/:Af\dMrFgSP#O=d%DRC9[ch"+(qb\Y%`E+.MkZMS;5MB8!+bbO'?.!(7:2sZiiaG<=hghn,`\86BCG<'8$=PX4
%5^^-pM1]gEcaIOe*6c)V@9%h.18=q[o"%5d,A'IO:_t9V0>HJCTGRp^W/H<tEaaZqKV4VTO[2u$1rIANFF-A/9M6]:_mB\T0MDl.
%^Y,H07(r#Bj'3pZ:(JCrHQ(*3__e0C&5a5Pe)Wh#O(lIWH<QXGO`8f-FMn[9]R+r;\P?VL=3QbX'P@bqAhB/R;NLM9mO:+i[pDnJ
%!O8=KKURL%[2O2c"_s_C4fq^]EQ+,f`fUdTR,hg:DGO]r;RO@oM1u^C$8(A"V'bB:7+WB)M)W!!Z:PD3mP-1[/jd/+L^"&.\^6;?
%p9'Hp\%l./4Sa<87AFb4"o4s==@=ZnS5EGc.cEM$Wh_A5GN*TSe`Mh^@!,8C78Rj&+B)6<kBR;$G.aOg&S1;i6W8m%L0a%QZ$sFk
%c&tEq@D>5ihX.fE84dS4&otC^4+uhl>?!E<G)HF^[%P1c.'C2JE#uK]Ob9rWZUI6$ZULX,ZUI`4h"5PKhkqPUNLjCjE;IDMoK*\o
%m#H59>">UJAgQ5@s)b),9:'KATn'UGo'Sg#JhPO*:-?(BhkB<aG2p2]Qj#)l`XM'K%hnU6Kt"Qtfg?o8=E$mLPdR+U6(V+8IVMa9
%)c>E>_`&@C!f3eP@/Sb'rFdC@^f`nUH!%</pJ6t"MM;ti,1>GpJI1<)I6ZG*Bqi%ES#SPSiAO0ehe!EeO$*6+eP<H*Pbh?XT3hZ1
%3"*9#PI\hJ5!ONFL("$HQsEK]6)mt>HM.D#eVHt)[70U*l'[F<lY>fuE*L0uS2([)8B[]+YB%e8U<*-:.+G9ZW=&+g(l`Q?ME2oX
%+>&A)#507Od"kG$j"+3[V7S[L(nZ?D'?N4=fJ[4hBCTY)f=-cRU<0&>]"A8JLTSB[%$$+KjKn#PGAS2EKST*+ogXHm0l>Q0GF9L6
%42tEj#dXKH(#W[:>=&i94q/%c]rH's5s`T3K+06s\;50;*>IRN/k-?0ncf+Uc=an3OAiQuC%A'--4*`g3<cC.,?h]\ToaM"dU^iZ
%2cmE;+nLNjl7*&>q*Z\A_>q,iiAS"c1ThkF84<"'&tWZd3'$RcVqNT3!cX5?rH6C7.RHF+=6bm*:a5[b2Y-i?!?.,:_tEc6#0=0r
%q%tDJ"N%X-S3H(_D1tt4f(F(YMNd8W#[le.h#lUW6R%_[Qi7arHaU-m_@LDO@u?6IGi=80Umu'J']YO/2(9("qE2dn*q1R>o!=R7
%Hfg2Ac_q%oBKg,gE\K@k3#W16as@.1.+V@\M8uI'%"RIb?oag`ZFi_NDau#'8_S%eYe1nS0N9Gi8lmC9!heZA0UkY:_ONE->*jN:
%gMRPHpNCbN9[f(X],J5&\No]OS6lG32:(&!*GUfl!uQ<97\`H$GG5#[V(QI.7i4"E\t"Jq.:_HS0MZ<8[-h=AL%#.A`jS@"?"=R5
%j:&IKB*@`940lqM=W:WX6-WG.dWfg%)XFEge6Cp-S:=hJ`bC#Q#\f#F'?IS*^/nbn(ljk]jWnL"oE#t?,3cg]kYS%24;Ea#dqD+b
%mpg=R--g=c_n:9\PNR0Z@rL(A&hqr=l53it1rd+s06pWf%cX'FMH^sgTchI]a>Gh[6u"7$WKs)\8^%A;C0B.h:+*O\.AVVW0!7s.
%+,`M\*St"?LP:#AS"de'9b]FYBLmgl:F>OZja:4"=$0%.-mOn]6F':D*8=mJ_2UlYf3J2(:1MH2TQs\53E5C(@Tb!q\d&pi[uu$]
%\B0l^,?N=N'k^io]^S42a[q1$O-0pC+"T*W.nBtl>_K"k-tU4UA42,W,[5u)*=.n%$&U-h\WFN%LuKEZPN=D%H\F;*8BT']!]e^j
%2:KV=)S$8H#.SO?3[.JjeU.uM!lA`s!@ciO5R>U<&FU#A[4J-D3+sr5mI[-E5`5EY5N/GL/S>Q*DW%6.(iIVY_/*>\,1L+&e*,qV
%>N4(R"sNW[E'Dt`f^r>cJ3[`&aMdF2`G#JF7KUkIE7h@U[.W)<BPNPmZ6n@[F&5G3;9YB7S8(Ek.\(,0PLp$d9X`f&Wa<rE+tN)f
%Yb+j5`\!r_GZ5s4U_8.4N#+Ch9I3S(<\<@BL'%MWWGnD)8JWWVWU<fc(Y>leL1<+EUQMl6=*:,R=1(q9,gL./KlZ`u_l(S[*R>nV
%>.cdpOUO:T/ogTdic@Sd&[RCK_bQ3]S8G5;Xi@L1l0nZsK,m'aG'l82#*bBXR"BT>NH&k_pdDEX_cie*m$d&_:V`B"l>DB(BKh\]
%gq`6<@.YjX/XQ+PNbj/Trl)(f<<:V@@/R_\9tSr8)]TmAeI^nT0G7fT&,^sX#s/d`"kE?1DqP#4DJ&n6qj@<F6&WWt'kX[RDB*`s
%I?%nDFI8_kfVFZuX>k2*-5)Pa.O%0&7$/rqNaGe2Fb/Eo;\5ioP\2EiRTiA$YK2!DH8nuqRHiD@87'.RaUotID#ual:s?.tXZGiA
%crQ=A7TB!184m+BHJP`[](b5NNZS@`%/"Q\j/Mqf>(_YfLil3#pdq,>klQRY`ZjZA*&O1=EdI#4(bjtMe-%Tu5)[!>THB+:<.%D*
%UWTS0p7nY$3WOsEIMHM\e7st(fJu^G<4d?/;\[ouY_7XrHrpOiq`*VQ#;u'S6V;nlCefPCK#la)G+(54XGSmqf:k/mZmO*SpM=[6
%2M`Ko(>5?$J+Cm*-p-dl0H?/#F/h@ZKh=a6\?*_"`t?j]!sQuESYF]K(`t=117dtL*RPKJ8<'!m#"oNLH%pW)=-c,MW[n0K!+qaX
%1DpB/eZ'MAQ(WAc0\9>moB%WUC;"Ld7%GW3EZEmC%/"SB/-/crFkbGc":6h^GIf<!\mm]UnRPIQ-.^V-VJ;$"Rls6@.YERTogMh9
%*%CNTl**Yb?-+u642pB9G9ke?ml!lCVoGaYBYn$7*k[kj_FPg12KV'g@n$G/Qgud/"B=t(>LAN.[^ejPB/ZYe&,Nc!U7+X5:ARaO
%204ns"B;?#_L$,[&QFquJkL?KAeM+UNUV?LVFKLR"=C<P-U/c5CqhP)bjSLSqsBDSJ%#:'5X7uToPV/]o$\e4KS&^W%AIq0G[S=^
%r*TgP",c/3-o%XP%J9o2QGI#HPP55J5o`&PO:./Q=.u5%81l`oVnHi)WO^I*./aU-.S(e'e`;nM01)Wp,$.;q<QT%!64OmRD3lb)
%%9i,Y#piTUNP48l[=,_"dD0-8(Rib#hK8M'n);j=X48uB6^"hYq8il^C+eI]"_eQ+O]B:LY<]1rj6C*]J4fQF=tJ=ENcE"+?>YOt
%k:TX?D<P\L^U>DNB_Xb^"A?]I*b[&=OpWD+\/(!IGp$_=-".EXjR0j7=>1(D;!XC];=YOs,.2Gr&u?Vt'_`@mc/lfE?HLYT4"6W?
%o/pi9EM!SP_?>#\S$am92EuDOOg2r:dY/\6BJLa23:Y@CdMI$@lTqsFISV)ZS@i34b7=e&:_4!_.b(kNf\=R4I&jt1$>J(OA8p\?
%Xs/bD3B_4Qe,7d0eYf8Vc*/n][qZ"*(m7iD!Eth#fHn:?*=K_tFN?mAf;h`o?mHPW1#CdDiIT.Q=,=/$DmTZ^/b30:"Y,KW_MDkO
%40OM[*nop6je6h=mOadr@mT23k`A`)(.LPPJ!!oJ`-?(0"/Njp_sK.B%HaAnA!1,.Ve0Ko"_244@G"4sk`^9[3i-\h5tRUJ*N!MD
%cq'iPN>+@;J*q4oj5n:hbe6aC.+1$M(N8hM-JuU,U.=6@j&$d,0P0[qG3BFl,8mZQGWbR"U-%okA&UM]V.9mKHjHV^pO_:O1+n64
%7kFGJ.p`N3HsgTGY-0OC\([Q^E3Bjscs_f$4/XP"UQt7:a)rV]S2_s-$O*XXO_`knFqm)I7=<$0b8I\XrNMW'lp3X0Ab\qj;hc@S
%$gk0te.ZEW'gYQPf,4,3K0mDfGW+oblRHFN_Qr"Mpp,il@tG1(PTTP>PW#+`.LPU+%!gl&32t_c#tK9HdW=e*XDku!L))hu(2^%'
%1u+S'j)j<j7:*!'=m'gjS"GUM)X*LB]gZ%mJa8RfEgAE3]""j6FWQk[.90GT'.k=`8Ik[VAY0Gn9[QP*(`fIfqU%iBdkf5ri1O*&
%'FaB8@9f(/jI1.paSTa"[ZFPr(pA566t%?_@h6"g",!_,;]5!2:.N0eUBj$(4li]'?\IRIIGcZ>.:[9DFMjR4^Gq2NIkdQ*H.R)'
%S<q-<n-9c+E(&B4<OmG\8>0,qf5`)cF)UdE@te04)(%3eB^=56!Guk+>blO_,+N.C&3LNZ.D\GmL#Toh>VZOE?<d]SHWm@7@ed@P
%EYkh=FO3+\!?Op<KdAY-i`kNZf-h^1;A]Bo%pS#<1!Wj98@;$_Gfma_Jq`?`LZb7=`lO"dn1gh+Ij[[e4@n*ib5;<hPSj^X]/%9X
%m^sRhMMN_k5VfJlT7dpll<qt2!i$IJ@F2leT,0[M7RFH#6ctD,;YXoF(I_BBU)&tV>LdUJ(M>FJ"Jj>$63O.m6EXSePL'LE-4SER
%TYB#+2L2]>TE/W((^e,9d;:JX*mn"$[R=SbQQD`n@PeACgY,-mE<[Z^Qr5,-"i?%:il=\^VO.YOnu@fK53KSq'2Sh<g]KNn_?<gE
%0Cgt$<E^8EgQ0A:,$@Ko7ir]7"H/&=G7r8[qh30gOsCGIbqRWPr0T`]'SOcK3M3n2jU>t4h^me>4\fg),dN@#V_'P7OKD,q;cJ#g
%frVtKkBa/!?/sO06*]pk&`g2tb_p#p%M86kT<(uq9D>q@f>20q'NE8F)uOP<nZG$B6++*TDP+5RK.S"YacG4g+,[!irm/-RpaI!8
%1FgP!H+)#t4(qnfhobA%-l;WgYh<7p[?,>9e_3Ld3l&%s#KO=O#qH<W;D`2e._$2fgkIBa4P6)]bY6"46%INTp=qa0+H@4:Cbh,I
%%TZ.gjHc+6b?ku\N+Eu`;JOanA5Hdi-[#d)XY[[5UdltB@cU#]oS?LT*1WP[Td_=?C2?pJBYC>cRutPj</o/Df*#'4c.La!1``h\
%&o8K$'p.T&)]FZTYJcVigntJu60"o0,Hdd%jWkD,*8$f%$3OW3@SuK(A6koAeFeS$oRaeWY-kZe!$^s]E/qYK\e7r?P'QGd5b!EV
%Idn+l@E]uNq*+B"O%-kUSi!`BQ*r;+mD0`CEEgXgg^YlA+\og"F"-h85T!Xb,=.Tbs%cLY-7gIiipH#+<W#7&dIhFtGo\@n!<Mjo
%p9pOlMO*2JA)#RLmVqg[25A(l*iC]NP;]"r/]&A5#ahr3_%eH3@ZRI&;sVmNp4LK]%HkKs"DX&eY56O:!8?2%$a&\\QfoXV(L\"f
%$Ijahp\ec7)1n$Z33?B]rP'>-+a52!Pg_"@EXjGAd)K;Ua:#$k\;Q?mC)'VDeP7Q.IVr!4W_'#*93+et6U:k-F%%V]Wm1SKhBJrG
%K(5]f=&sD'VUHPW'U9sX0/octZTV%VAHHR+"I.rE/fBpNK?")O8+Yf7F\0n)cP<I3V9=c9WC83I779:gO^)S=G\c@4V\[-&1Hi[#
%&ldQ?(B+d3[qN0bnY0,g[hDW8bsW]Jq)G<b'6)mkXGZ$):"ps45[FD7]0`UY`-bm]37i1a=YB.6l5*N6MunbQ/?;[ocOTXBrMUnO
%PBiG]Z#dg#M32%L:i<>LTa"/[NHN2"p\h$7d(acBdf/_`eqMY&gUU(S^nCs*7#H@B_tX,.,-\&tjGll$/6pq4Z;uND%@0O=i`d;7
%mme+D',(<&0j&l7(NJ6-OE\a-"fEs1Hgm.Q;bQCR>YQV,'aHK`PbiF01ZuPn1qBV+>.`O/#Y4LZ'm<+<JS^YtbCdE0L_Q-(A!Pr[
%PN)uZU=bX!&Eg<63Ln'f"IUun_EKK@I#MhD2G0+)+sFbb$d6t?/$lGqFi"s?,Li!s(j-L2-/Oanc,EW)1kE+VdBj/i\m2`)_B&LO
%(J[21p_#`1K";bA+o!TI)BC.Q14FR,;WpUc"h1RuLYa18Nf0_KH8M`8*g]AAKmluukZAd_3]:cDZc3MU(L2%G54ei8W8S3.?l&S8
%5"pAF"rNr%FL7T%@f&o<Km]VSPQqY9d0UKFo3P7AhR+pEhu>NNLRm=Ok;6AE[g!lo->55:MEihn^(7?b`DB(\Ln!YaBP.f;3_W@]
%e0BNN:jjFl,"cor6**KF#fH+oM.3lFRL`KB7Y8b\RYHH1]O+OF<U1GiF^+E#Pfp-gm%N\b8F'SA=-Y5?MLZli/!HKo]PjP_lVdC+
%9:nGn1q_Qmk0a#6C]PP'BSi:=1*e(s:-o\LnSJ,QpDj@*oA/^pFeSU/eu%cD.l;Q+GgnU?"N;+;W[C)p@\_Fg.(n<'Qc=f(Z!X.H
%$15#/Y#2Z8!-34RXCQY2VtLMfV?3ksl`"F0+RlSC$R-?&6i(SX>(71=JTu9;Z;\93E.Y#(.?o#aVA(W&8e8rs-u>$HV:6N=er]hZ
%;QhlA\oZo@rFiJf_dg':qa5aIruQ'9+QaMP^>1^Se82OU3bAFA*k"29!aCEBYEGV+&uh7G&u_jlr:cu#<N`kh@G0B#RU<Sb;:iI[
%3jBQV.P<]/@TH5*p%LF*>SRo<`NJ4#+&*O=nb!^Z?F=)b[(_cKDf@;6W(Vi=ecs;T^K`?I,\oCb07cTW=24MgOQ.X-JJUjE]cP&"
%LlsXpE4mb-GF/IbJXh<k]b(\^7WP1?j6]k4C!BX_:ZGm>[e-KK)<DXEi!VcrdNjp?7R1MkN!E;a3E[aX9F8T'.9oKF=:?PnZ\2A4
%&lD'HEu1g02N0T'-g)3c#5&QWV'%Y(./[9!8XB:SY[?DN+/";!M#&0Pj?gW%HF8@S54a+PLinF[pj$le;Y<L90GqocArO3#.u<1W
%.7d1!;7:=oE7(Dk/ThjX89#Bld&E.tms2lO<"Pit0oaT"C><T"Ba#oa1noQ55V9EQXKbVg/?KHD'l2KTE%cQ.<1>%[Lpj91U<3sT
%1"nM>&T]f=HgC-[Mr7=q_W$:h%_t!Jl%<Ckn%2E[0L9[YVp9(_[t-k1W[KjUMYE_NIT-t5XA9OCfl:jIKanb1(Rl=GK.76,W1r2d
%%@6_tKtb19`R_)4%t"S'R%Qm-9A;ct;WpUc"W`?UB:.cig"+65IRbr0PG5qt7=LT)FAec'9p3NhURFLMfBrdKig6s(6KG3i<>9iD
%+fbm`.MRQONZcU]e6RVS'K;`+d*0Q@&\+%rc*b2.M"fb?<F.(e>o8d;=g;@F-P02r\m"9Dq:<[h)o65VJjT!P/`k*=7*C[u"a=oF
%?rT"o)#$Lk'h>ui:'3V3#%5b@kJrlT60s#37T18hV<:#D3A-Je,cV"EQ'JtASgXro86:d?iN?d?[2%X'?@,kcddg]YVIeQ7GHSAg
%q(XU)O^*9NEr-DMU1%ph>2(LI\D+:S,#s[Jf17On]P0CT*3T2%]^S0cJ47Gh``Bfb#,P^&F.!3X#aOo8%E$6MVc7^X17q+WJO>h8
%BM'r-\%#Wpmhp0Mj>16TXD8<K)->A"FEggV6UAq:K7]qHJ4:H3Ko1JH"<u!_1*e=rf/S>%rY_lJaeIkX>;4-ZCJ#BXeWdEbl1?#[
%:rgniJG>qS?ftD>.Sph4TC+ItjN6CZ,&bbna;oeUTBh`!G=/ps\GOSMjSG7IBiGD76kN:lA\\s167tg,c3dW+VfT"58c66h't=s?
%Q)oVnL.^2VXnrT#[378EQ$]5gILb$hSC`oSa\$O`>#PZ<$L&A>5#_`haTW5]P(r$QL_QY=TMS/eT/Jlm*K-.AQ"i=u*b92JnI?!C
%Y'hDBE*n_'7JEQTI6m#mF<Jk)s/g:-\dk(FA&&63^s(Hn]gAK,K?S1LgGr!+_&+4jFX8Ha]!XT7JsRXdVY*R`"AKT+cGOAG"\k@h
%Z5q]K6kqLDU,1QX16%^##,nJW7cRZO;pZpQ@[YVTOYfa<1()(d1o-S::j:2_PB.0*E8GZa&rBT1f'3^t*QbQbLHH$VjPhUnVUMc;
%X!"h!WDV=f<n.'HZ)UiA1a>kTbSRN,GqWVY"#Ye2=sFs<Mpu2\``fF/5+8I\oKf@Kc6ADjA7RRY2KLaOAJ%bR4fla#9k;LKghfN\
%+7"sTpk!0V=XN2RPXm$nT#!rM2Iii%4j.>GOi`Nm<B@XRU@'Qb1:^A,X(+pr8s:E$C,34W7o\#A5t+W'$"Oh_qTo>aA%,!d6S#:M
%MrIodSQ[+I]mG24,u#V^d,JJ=1eAbd$\r_%_u4$!*XO9tij@XS5;_O6j/Q.Ye$p<U[R*p>B]7C!#F$/N2u0!F;+Ng0X$CkI=4;3F
%oWT@\#P,WLVUm([=R[&`:4P$M9%_d/c8p`W'UX8cjo"4.1ocZ"WZOqZKLjA-c`-7*0lghaEXl*SVSIGp&G`GV9V`J)7gp,d$)hTD
%@HE?VM5Y/oCdUG@J%Q$n#><oSelElL^MIbpeOP)SXN\'%=-0^I)AP?9W-MmUW`<(A$.Ls+M(2'q]f_DrW$t-b)UZ?,U_Xk'hHE'+
%'iWNF,6;<*jP&m?K;qB[<=LC[,3mF[,3OrrjsjP_Ufl`Z_R^ktW6/%Z!D;X:BOENUMp3)SDm]A^=iP*S'7UNg5S[c6dM8d:MK(<I
%9`i4H?<'uYR%=IJ;DW+\(()Gh13c:$A)8H/R>p+uUD!ihV)C5\.j>Cd$ATB8I:Nd)a+Ego71>"?U'NfnNhh9ta#`lAZ.5Ml9UQT:
%S&^Y[6<'cn%F"eNh7[+?-G+.9G]1CtTl0uX_!IYU8tVID3uK0.!YS0^f7S_-Vk!g%gMlKsjPQ"68P)QTWp[RH#FroP\`g``H:Wme
%,`8>;8T"+Xfi=Uie0pb3W-`I.lE4IWOKXq7O<>=X5_iN=E^TZ%<A[?H1GtK%U8::(=p%qr1""i=UGY+%m-,mi[=3Nr&hhgCj?*k'
%q'04_0BgBR54H&G0IZ9bVD-HZ_=))f4iZ6)O"+]kH82G)9YE$K_B*7qn"Eo?Pn=8/j:FR'B'1!&>1!8IrE:W9;5/Re!_tm=IPF3#
%.XunB.$L5:p?9Xq.MV_L%qFID:+25O$@?l+fFR*:m#>Yk6KP0]]bk;iRM>JZ<j0[DldRF69sgW2UPf<c$@?li=2S#f8Or`mccCt-
%r4U&_?"V?SYX`ncQ?8u&hIeD!cJMhg;=<89YX^X#rmbm)4gZCdWJ^.,VD9:UW"`2Pkd@(TLY\"/Z:4!m^Q\/Z+.u<$Tf&G1.(9V)
%Nb^:KPk#2YO7t&"pniClN>;g+Pp_U`/g*K[a[#`NgnKgO09;B7M_YH@`Z97(&]u[m'i'8I*hahdlL>q/#mb^ED)-C4epoKC=7fZm
%SoD`CYXaNO`p$']:nCRkAUBXir)qmbpOX?6FIC5Q,mr'SM_19e44:*oeqC4G4;5"X+un,6\#h`:k%#,La*?J;6t]OYVXT2_]PQB5
%2gFJ^j,UmiCCWURjL4k1[HV[XY&U.pI*j_;2`f<pFT)8Hjk@)cebfp;0rroP+jq!IN$f1sCSXo"p[k3i7cMH&*^g4FIZ;s.a-4Sp
%QgWogNk#Pq&Cp1Cif8VhhrC#/ZMefsXtB#!\uktZ=M+nIrA!H589pFT*e3#(&t`X6Lf<tBQ<DL^\"5aPI?C-;J*uha1RDj/@ls%#
%#?4Kr.P)iiIsuh5M9J,m2&Bgi&nd@A(8q5tT=pW]dZ$iZ"hlG#PHqgp,c;'SFRXTa>f1AcDPNDIXQ(nk%]2[+dupuWrh(<0PH**0
%_S750R(-;6Rpp0YBnUWMX)d0>`ii+I]tS$U-juql&)KT;J3:*Np9_He&4S6IUk;iRV@[_#Sru(2_q,5;.-=M<L9F"Nmc%\_.Z>k4
%IBn)J+Yln=m3HC6R^/6$hI3fIHUj49:E'!01D+m[-JT/pXpA:@Eds(W_9mG.rT9\f`%_BP"J2YXEE>GO/'#.,>TS^apc^h&P2DB"
%NE`]g;X7u"8-S'+6ZNU_Ik@cgkd@'rP'UTg]#0TML8/+@[WVMPPfe?;#p75Ln,lYYDYs&4QFC6f7lOfej\qdWCjO]g`P\L6R]39F
%-fL&p1KW.XY8'MAO?=n2rXkUgrhkr&L+dN)8)1jj*8@Y^-$9#?SUGe'lb>^K[@k#ukpV[=JVhCUgCI*`1o;5<N\3F?b?.7^M&2On
%X??$g9FA<]49rIgCqGr#.$Jn,-]K(kCph/]SfM*^B"1k,URuJoU`h'&&s*G<<mDplif@)")(*TP)LHR'2\nG0U`WX)I1dXkaqKgA
%;hnL[p+R)@Nn0e>#oUZk(cJtf))1P`6(bnq6#lbs(*#R=/JF"X\LC\6K=*mRiiktG2pq'@6/pTs?HfOK&$\pXi;.P]n5.p@%DESp
%C30k"S]2^^'(`Msqsmhg+=*'d9+"2?W!,;k!H"l@iTg[i."0V(8`U&H6pqnjflBgMQ7KdFSqt%p2m/<Dm`?3?hDSUFB(A@N"^\_<
%$RUT)6`Qu]<r?Z<KK2X%J2^Wa=1oplYNBOGoK]S`74/"KlNnt1W98aj)db?b%hK=&)9;5RZ<3?(?D&]H-7k=VK2+cO-aDNs9sZin
%C&[e,=qf`o=k%@Fctc))EUn55egX)S@7@d43h(jhk'TQdW)!N=qLh:.+[0g&B%-#_EIdP?,Z-utTFus1?qq\J=S@Dg7o<Ai*#*<>
%.[Q],<A#DXh%.kU-AlF%&VWA/"ir:MU9&4<a*X%s/C=l4lVBIfAaBmJ:[r#"@j5;_6HhA&%j&('2ds;3YcVU7H60q?U!Sh9W(1tt
%+"ceQY$WKObVGu=MjAAP>kh$8U"frj_4,u5oorXUOM(d2MOUsNqiL5g'R04Je$;8G%6c5].*5D\k,oK'L!n\bl$@mXE39ua8,aPI
%+iFC$W',ALl)+h\WoHoc3qTC+*YH,\q&PX4AH]T#_Vh+.6W"jCo$`H4kX4IK5n1rii.E5V*W"8^#Ar;pDKMQmOQ=XppU+\Rljs&/
%QOAg])R@Hd/6W1:`EY:T#`ja,dZ:Km@/A5[$E?@t)Z:)L$mp:X=,Eo9d=%t0Vs-^WZ@Iio[SpJ$!k6^N:g-Lga\D'5]n!JQ+>[-A
%p[s6e\WRMT/P,15[;(Wj/=F3-UUS>Yg8$dj%rH83\E3UF3_eDkjip3%/Ku<uPZ1ql`=XBIs5$@Od"a">Yh<7qJ#60WXG>'>>_5^5
%6rD%C#>DBXj$&@h99M^1H*'\Kl^XakQ/[%d-Ubh-&AK4fIhtq[-rjc.B<hrR)&$l\&=Onu7(Q5+gXW@J$W8g)>U7*5MKMN/8dWb7
%b)ZfC.6+ua&d6]TAH2Q=Z08)ID:0/@Tiq%7g>nK7!?^$%)/f7aWjZREUcfAAT[!7`Y_W:sfIb9:FQU;>Q4LWYE;<a&9H)kC4DI"V
%!bHKW><#;Hc$WoiC1A?]W8p>A5'O`^V(d3*(5n11r/=`K]CcO^HECl-\B/N_^o3K@aFsEFn#fRV`BsrH1<Z+-P>H2][@hJPi>i7[
%ERmfu9ns9ORiWto"<:/_5('$%md4(&"Sp_?6M#"<UXhkCdKMq=kn#8/@j>8K\`JlL'D/MNh#he>$92eN2MS.pE@5fonWp.6Lgr,Y
%ci1H-+!(a>$RFp)R8Ch]plu.O,]c:Dk)<I[M+N0]7@ngV'g(%HLG1(UJp;1s[A)HQT:qIc[sgT+e\F5:ZnL;ohSHDZ`G!2jN+-!&
%C.TR&%7O5_[$+RP4kcZ)'d`:?]I"Pd/g!PK$@=.Wmq-\6+l\+,l[@uoB=9bY"d(?o&arF*$NFCk6X>*FH7^Nd\lt+1KX(@qTi_gd
%Kun1m'"@$:M7TujW:uXeX*tMU<ZArM_Cj+pH7^NXg`&j"p*`f5[f2ucXk/Q+TdrKpnf2)8PJSB3'GcGfW1t]V,X'Li7IAHMXVCJB
%jdHHY-TBn:T7o3/KMW`&8R[[o&*^9@TD17?/Q,(1jktu%$QA?$pch-&Jh@9b5H>`=!R8sUG-a(]3[j>lU@:kfh8]h;EFFZ^TdtF@
%.$L5:p?9X1a(m7eb7*pTU9*RdTS_&^@?97^b"H5o'.M5jDFL`4A^ZdZ*ka;HZNGJSZS4d:m1m;MPY"XXHh>=^*C1t<eB/=-RMELO
%PY"XXHh><3fE9?O?U0iZ]s/M!diC[1Ji@"W%q0'kG@YS)A]g4R*aKZ_CjjZl?"Y=m'"[s!J,'n;DtCp%H@5P_]1D*+lg%#.16N"?
%^:GH0A4<[*ojiYJ$@A!ca@qXVL@s1RS1'Sm'_^b5n6auBX^:H\6)F)72*F*L3KOAC?FMNLIR<#?#_nB#j)=/RBRmsfSU3l)97n\[
%dHT-<Q>KLiC!7'*_:?jTQ$#thPBS[[7Q&bd$O(+[g'SP^B[YLQX!i$."?=89BX$4.$O%frWW#Zdd4f>j@UtNUhZgIGq>9!79.1<V
%4#ian^>]TuTp)"7WP"u_F@9Puda1k7[cep-dGmB9)q#WUbqb_mIFPiC=s<:9(:Xe#]9b[l#d_R^]qFPf[4<kHK*Lfsh]bjsP\bS1
%\IGk]HaNOLGIgm#KH\\1W-sE).<gt=U!sJR!bj"+(Nc@$q@L'IU.^\?bP!>]ph%Lr;CJU+O\r#"8r0F&\M"9K:CObEOEYs9GXPCf
%c'(dB_DYL9O!lBZ[8GTHW9**ZI41+GX8AJ?"DBb9&c8]pabE/;8EOu[<mRPjSP+n(&Z$AkF7D@J"OEjS],Ak#<<c/podW`XNs&.k
%ir[*bLt:jKeX_Q5oc+\4FVGE\iX>V0%?48h,JjoN<O@)<&Z#/p\kkb$A%L8(hqH>:GTFKEbNIl-6sG](-[,5F6KgTd?:PEae=;q5
%7u#rE4KT\=4Z->m(!=1L)pM<bUK!SH2jJ]Ai)D"B=![=<!tCD*f%cQ(8KFTRN=OXS7mblkIBB^I8/fPbjMiLd0Cp4k5>O"pMkh"#
%7q4T5*r=Y-kIQ%sMDD>1#.[<7-u)H`q<^T;-AfeQ@8FU".^O]t_pOHmQc/j1$9B:*gG78]*]RJ`RLG,:1L`Xo/Yit%F_u;-3?9V)
%3hlEMoI;<""_&WK<3MIPg)/_&,(-Q`f-n.4Noc#d]8j?A7@'bbdakhfL.We1m6n=Emie@`@_AI5;jX[%jC7&`X\k/cOC]<d[.g"t
%"o)jqqeU:CS;!*e.HsrmNP:`99]OlC9Apdjr)+_a]r2S7]nX\`d"-58UfsUA"3J+t?@-e]I_`Q<[qpfV[J4g-aP_d07%#l0[bK*4
%8#J?N$>6@&*M)=,;qRkP+]HRm-jt:nG`T!s<lk6e&fXuP4RJ_MQYL#T[f?\F@5\Gt$>-uFA7S7NlL"!P!RPG3lqqZ;m)0rND6,b@
%n\?8YIoG.^<Q6PsM(\23fZ&:$gK@jG(/6X8dh9f^+<lP0^^Yo%,&3#;;=!W&1n::rkc\9'V->_eJ/"DJ;Q\WS"[tHr2F=BW@m_T!
%H8S!H,7::@!12Q49tN?@O$\PYm>/5;6bRXG?JG`/Bb%robZ6WUfAL7`+SOd,USig9151P2k&=rK&]t'CO3ctZb)B46][f\VWlBH>
%lS>Eb9B!-.hg^,="bnr_53m*A1;?u/@o7n49&tIcmF"nU7]G@rL+_&]5apF&'0i%\dkH/G4#;(D9)8%^C1p"8;0`Ga_B<q4B=2cQ
%0.=E5X(H.\)Fc4o:`S[o'lAF[9K")h5seYI74eWKd/Ug<,kS$`#3WYXh_TT4F,,<=1MX;WK'44BVq0l*[.YElrfms%hB]#dGrC#p
%VWVG39%H4tKr;SVmrthcTB;mcBJT3X48O`2S*5SZ:C77)(aT=QGHU1j?4/53eVrgiYXaPeN*?3n4i8)+@Z^4E+DqXYle-d>d7_ZL
%\)k.5MC1Sk^E-IX!V_cdAM*lUJ_s3:\+0<pMG_LDlG%kkM2/CO+OdHg&OgIlD0J#urVi_k'@M^@4.YrP%mS#WKbVXl>9:>+:O0$G
%#a#cA]W>`moMSXpOUVj4Pn$3@!BFGlpOSh:3mOZo(bC:CH2l<lAH@>B&<e<ZZGd+?(Alm:3RO5!_%<l[;:Tn0=7'bLdTlKMCJ)tO
%N7<KQiK;noK0FCu9dg470BWbk'+0"c]gqE?!(j,f[,fSd-9r#PdjC^`S_&E]a4`!=#1_+eT`H0>o`FZ3W!Yn<Tcm-g=u\WrEDnMc
%C!<8HX]-qb$]LMX<P-gNd#h<]3dRcqjlOTPnH/-CGX^_V!!N`UPfB4S6IDC;99\=+`8^l:"-/DX$UG>>`^K?M9it)0qH-4TL7iTV
%1B#?k8*dD;2l#jMocZ<>RSB@?d%VF!*3,.s;c/N*@6]"oLl?@Q2/p^T".<.HnGXLi*_?l=K,94a=%F*^&,g?8K8.l^bBgQ"kAp64
%OlE[X`NLU1?JG`El14<;kecbr`uq"[+0/Vj\uNY>A95J[ia6G5pYZmB=!pQ['ck?S`+.?AU=]]Udl`P49eIko1!XBp*rQO/WR$5A
%l23eLk?UkQpk$q!AQ76l-k=20+NT/5:b$m=4`IY)eDF<fiO'u_r-;q2@rW8M%#K,jA!(Y!YH?#C($H0,(#WHBiP*\Ob2&[(p?9+D
%r4-_!qMcl#EY9b?YQVN@K+^a7oNG+t@)C2ig!J90mMl)-s,V[$ja[5is7DBPjmW3BbJ4%;s7pm=nGC!"YJ:+L^\JDTqksJlTDn^P
%r;PT$q-W3`^OH.Hhu.Kec+*dB?\8K)5'e$nY'5Os5D[/t?$c6+,(G=Wrp576j_B,uno@P()#92p,EHgAk8:t,Kk3V<@tmqKb`L1m
%-h\?uAXJJu_\dS+#pn"f@?97^ef@+?%"0lVPY'K!TIWAT9R\b@kDg^Z7%,Ojd?S-cW/#YO2@Rc04j$fjSoi#+qGV,i/k_e)hU,?P
%EBX$Fknc1kBK@r>3mA'>ofJ^n61^#31W-3@b`GZ9e*.Z*^M#YaS3"n'$2$BNIR3R`VDH,he'*nM^XME`1r!]b1G$-]B@QBlq?>,n
%7SUqhNMiXtFOg$AFuoSRVADs>L/Y"<+e`eOdk>B\d<&t[Fda0\l?55eJu0>YB80?_R3A8AVpd;4HI6hH3-CZ-''aX$rIUm_9kT2l
%2roq/SPHqml-H<m1%$m3UT:94A#Id/BRJ3LAiOq%)%q8^FSZ0#0:L/pVbT$86B@[4^S(*ce!]1EBkBp"Z.%qR1qmWa1RpMN$jf(?
%3rOZM(JSOsAN/\/*]opA6/un7oH+:3DY-)GS\?a@jk608ea+lV(/OP:e2`M82l@8^N[@i`:89DPp5UI#1RupM):ITGgM+#`mgSNB
%iLEB]O="&b:89Ce@lPh:1RupM):ITGgM+#`=,)4kdJ'jD<(Gi<LPGioh55sYitf-sJPm1CWX,a(Y-G1mbj"?!TX_IP*=^grZq%IS
%O?H`AK#Q"e.+5!W\&jVg8q[g_>`h4\&W3*Ed08Y*khB>oHhYC_>36R5()0R4\pLRM6F9%Pk]s>)]mEs?s#P#OV&<`^<#+UXHlZLI
%0=G;fkq9P1aqT/^AKLCrP_KF%.E0,ggCa_B*Qf)Y24`M7SjRH/=5_JkIP[BnoNG'Ra;X98YXaPeU+OSCC`.sZ_m!^^U&,cdi.'PK
%\`lXc7#ti.)7B5D5fm5@M<G!&FZq'h#_`7+7&0T"n#INkamE]f&eY89,doR7r+6H?:9LL"V@[-_)U9DZ.j;])ob)ReNC<K70p3ej
%#m!earPb&`6WC'I/VT"6!&HH!J/QlK@-L2+Q5p)_^l6J[i"\Zp0H-J,KB"F)-\%(/6]8!uP[j?7q(QPhpCRUg3Ho5J1PGk-_ged5
%3i7Z5j'1^.>71N;]d?1+P*.e&Zpf#C/HMa\r99R+?jr-%U<YH#L1V8VUDA!j3b;a8)s,Nkc_^hP6PrF+@DI->SaslWTdY]KGZlN+
%_u[cRk@:rFQlZKk,(CbN/CTO[7[:oh3>N,XEPVAFOgD$VK_JA[-k7(IQ&DihLPTS'CO\BtE#47@#V;_d#>F35ZmT3%QJ'(LiTNal
%"6TU.3+/&sN!!Z8=s,MW]'CN!#q7E??c>H@OUj,`$OHn^KLIR[%0@kK@rNMn@-Z/'pnM"89j?M<W^m"+28Z>ff7Hm_;tA2Y...P?
%\0LkK*lT/ZWS&#s?!EOB@()<X?Vt^nUp*@g^YcEXZ<IEU+WcJ?c?G!VV3"'Xqi9i$3b)eg+ZefDd2>$h'_^`!^>bGq;&7.;nK(s\
%C1hhg(cTj=3*3$LSfNbdQ6.M;U.\p1hP*YO1#J]u)&dL^$sIa%;=!W&1n::5l)te,g+7lb9\!?h.AJ0NfrYG&?d$Q`;U`WH:XJGC
%JJMO[,YuJo?+ObEN/*V.p19)8r4\oHmuA\QA"u-\D*gPreD0*(a4cdiM<NM$&U@:WP9\0DIV9aB6Wlnl6Dj4nhZsC>Eo+X4cS/:4
%h=h/hqk/]8(4ao!6bW-0*%V^!,Y*s%rQoT"#'(*L'_c;0\LfL[Apd)9r-'b:]b222:Ct0&FRHji:6[VXEnd@)cu,$-",Yp=IU>oh
%>et3Da$)1SDVV%l8%EW9=CL8LPZGqA8UFfA=t,<F*i7!TPf#Jgr#j115%YESY>KZk^=6chJmJg7(#B\M-qroTJAuZK0G9(&)Tmm$
%U6b1DC>$)X%l,BTHUg-.1.8Qn6`J1SeB@[R:194C@A&*,H&kkHerCkjl3R-EFED)=TPet`2gL<R?5X+]RM9)T1*`c1bP!?nm'dt$
%=24@(Vs$@>\<;N/ErQH:4l&bB0>VS-;BDiO/&RCM%,hoW..@uu$K$0l?2"!"j'.jY`EJn9$&I[ZAf\Q%NUWoiFAUVb9VK(V&fr#@
%rO/N3cF#5LVEGs5(l`BucaIp&H^#t,]9OP7YGfe7OL"-B7$laBpDpj21D1dHqE-(KI3qNuC<Nd+)nJf])7K:,,`#A+.9<e)HPs#<
%?42W,clJYkp*`dgC89"./Tf&"XY3t:4*iJ,8n`?h;V7a4iPr*:<gjsp6W]#H*6XQ<*h=!o@l4G"6>VTk/bIc,@uPh+01KHjUV;bK
%Z/;9LiS3o.-Y8;9NF>>\[2I'K;]_aD-rF(a@TuGP1X(MY$]8e8TTf!`,ml.i<j:6n<j7Fd.M:nsH;cNo6e0462hm'i%'cK:FAgbd
%PJYJHR3CZPL)jP;L-QtF.I>GR@:^9eK%t_*d?S.HVfI+IisRmsr:,W'rg`fKp%ag.Pl7kimrcZ&53m"9l-B/9'ZI@_-+*HUo&LYa
%!Bm%_":nQH%i;!Ak(q+#_(CEq`4&,/D'SF;AoR\[DtnbM9TC7T95&8%,WE@*kV&2HVSDi"Yt+s%eAU3-l-[nljD>'-+dU,9nT#bj
%02)lT]sbC)?\@FKPqmLJLZjlrN&itN=;hhn%BPf?gUcq=mjq.;n9!VO/3e>S>ZC2$Z/.VD"g5AQh*I98^*gH?GX6MEG;/\p6qe_n
%D*N77N]u0n'=]1Fn=&bF%7XsmI!8s18k7DUKq)n+8!>8H&2YS>o(e<kUFK3pUH#:MEc9VH>spDn]LQ<KJ-G$@cd^F/i:c1-MV@CL
%!e69.g?8r;l7YQX#?TV_HDGXaMi"b+V=Nbs5R&VIAYW]?O\+sF#/.+Lr>]J<]>(p&Ud+=E(lBh0dF>MgF9`>#h&[DOAAfuePJV%7
%c$4M,I2EK5$)>nD?S`TOOa%,YI["UFo#l9$bKtW[b@j][Of2u(SkYe_`e%B]IO<8/i]Sci96ng,p"%?DZD^XqkpZ9,R-6j;V&j6n
%M?h9R1g@CYM#u6.j:XqbfQ@XbOL"bB+I#Gn$@?lc;l(MVjF*]$fO.hRk%5o;RPaZk4h<H[%c^Al;-Y69>#;Fojcb"WI;>84,?rOI
%?i;Vl#.f3:-Ip#W:FPt3*K2k`n;9E*ULL9KcPBG^'ol*7;XjlfYOD0523'*O;-MT;JLVBX^8#aT#DIVl]gq7sc4p!9<8!6NY+<1F
%oaMW]"DD#?)RV>!gQGT1+LL4$8dH6(iqt.%SXLi60p_6d)Q*shXXLJ=@-MA=[*8\8*VH=6cINR(Y>8.pk5qF*cB)H49hGOc6Rm\&
%(A(eWd>u_9-<8nDNnuB$q&%jlF\'QD,Y)VfhA,C=LI]_,5d(?.$rYHJ'oYU6Bj#BoLF_4gE#oOd[`&tM(%do@L9E%a?!0u`9^;R#
%iHdo;#Af63Ehs2n0OeI.'/='Q5+ic@hU"bZ7:4aME(3<tS:0MPDeDu<3)a2+8o(HZKG@YOHl:1(q!AV'3eo2[%%.en[W3X3&pbWo
%Sm`Ugd>D>H$01MI-qTiSe52c@6^e!)Z?N,He)"e?/`Ua7J^g;W^Q*IkLml5qC?gn<Vn\De%0DV`%kLM/51IO7Z8YbLQ=_V9hqq6I
%?s87aRC&4hUFS6VZpmAXABaEAokZOC7llEH#XMD3)`_duL6,D!jXZ*3.s=OA:'1e,B`"T+haACX?4IPtG`F_%6Zj:*VK_Ut);.-2
%,o/.r`'eIZl;0s'aEF/cGATVfA=q_qgO]$6VqI5L&X'H7E^WP])8n8iEQU$5nMmB>81'#=Or8tBOt3tH>#&PYQEG)oWE=JCKX=Hn
%Z9.I4ZrkJ'">g8O<+fQ.gMt9)<n'H.k[#4&dm,Q7R-I#aU1)a;Mb@YR&%"m%7p0(l9=dHO0;uIbB0ekR8Pns5T[pHp&DI]:&[Z4T
%#Po"roAm?+:a:Y':38=2;B)0Op@a-GDZ80j,$pC#;-fT'ED[s*IR-e,.*[o`Lh/;;"Qa&V-??"1kN>k`oVm:iAi#b7_kQBlLtmZN
%0;6(1PMGBAZbQC]34]S>:.)T<Ib7(@-si^>gO``>MQCJ^KlJ[Yp*`f5V?[ecd"7u*:?-)I6l7T@[@k1#:C;H5..m=3rR\!3\1\h2
%n6hDCesHrUAYlT%o_UdD"GYd@8Qh=))!,I?e(\WSCFPrpRM(h"((=H:ectlpPiGujXeP!-"<8I`L3B:d"479e`pbCMeP+_P2:^7P
%N/i<Y_9o#jZ'q:/%JSP^p;1apTOtQ6i[M'^4Wd_[e.PCu*]7)sD1!?oVICts.u^::OLje?[RP#5=pET=8Xj2;BZT:6]]gia#g$'`
%nqa6hp>^^-[Q!GHE5&6b7:bS5A]a_Ld[4^qi)FE8%VZ("*)7H%%X4dXT/IC_T25<Mc(pD5GB:U#5oqnc]rGC%ABFeSQD7-dr]Cog
%4HH\ZH8#m5l]hO3@6Hn]X>t'c]^#ek_*2]e[&-!7g,/Qnh1o*@$nk`6%dVFgI&]hk2%Hmqm`S'Ue]@l*7ScI36_?DAKP6rI6*!OO
%-k9+f&j'p%1d\jH-k;'PpHl;bNfhb3"#Gqi[QQ\+`a6.J7:C+<mo)\He2Y-;ek$65gsBk!KP4!)Q,PW*[%6joT0:\>+]?Nt\\gB]
%qfEM>UX@\8K1UEiZdd2h<Pr1$0^$k/Jn8Z\$rZ@h8%u^G2!2C%IY1)Do=tWe@Z#X'_LN5U>(b'&ge&[%q!&V)_`h=]]YHAh2%CG<
%(1g@g^?e_^$KaUC*@%(ZBn'JeVLl9?mW_5<0d2Zh8e5d20T-5GF6P,b[kN_sLqLN%:<su!]cXp]oBRXG-:B]Q0Y^!J)Oi*qdd*U(
%_n$*^.hIaK8h[8P%XlUk913qY";kn&gVsfCCrP#Z.QqWNOpRhYZ',AE1^dg#W8Oe3'Su%Y&h=kVp'^:9V>S`pU3%BMrd-_)pd6Ng
%aL<UXBlmjp3BS3O=Y,]=/f\F>"6r,f0>c\gR\h1a>2'gSUYOh*BWY^ZFW+nh:+RA$6+)-\\t0N4(T\JOpltscSfnQ&p.'0%lSR0W
%H)@nXF-DD4BXcB=0YFhppAP3K\f'"4pa+pb+J.J<\*_bgZ+$L[JgPiEF0-]o@&!29<oF_+"F5qP#7]XK4DYK[\Hp(s([E69rQG$V
%@7A\q="q-5OHgPh3p#^<r#e]Q=8S-1NkeK#?%W@EY*Tabm8*RX:^QGL6nX8G7(B>[nrb-8)=Gjfiacr6'ulFC\K5!h4PR=.<G9Pd
%$o.]XeVFA`Q7S4<.K^YChe(RtpT[!Z,jG'uCPSi5VcD?-[_cmr9er_)>!kcS8H",Zr+Ote_`h/bJFTSeLs9oBF*V`9%QZurjUQ*,
%OXKDVdec8s"26*FDdK:ZRON'hrX56b<Dd`c62j2"PlaYId8frST04k_>!oZt62n7UA;4??'g3Ca-QN$#>o\Z0L^,3\:I6r(.m"bc
%gmB@\!)'_j)2,"*U&cTl#gt-S?72V0EYd4qT-F2+;FLtk;b.Oeoj==L!=_MLA2Hmp#WV6%68FU3L%(h>SAooKV]If#P.+X)$Q?Q/
%/Q\#.^clUulPe'@6Lf"I!(kjt)g9lF#Ni!F'5)*k38EWY!in9kUe6k@79*V2GCOr7'`+sVDMO1,e)8#*D)AP/FluQTe4Ac%SEd)K
%0eok5_4NX*"p]Rf[4#>2C'6WslmE_l[qZMK=S:_C2u&Uh6VcL9S3BJk&P3g-E>M265\ITTHB(9/'IRG(o`.![W*h[4Z(SQ>d.n/A
%e''n4)#Pr*40OLo8^u5j*Yg5c6$.U*g()Z`otD>5_Ml&%'*c*-FU7XDmUCF2ePLr4'4_$I+$dLV]dpo*a$f+=Uf6k"oidpb=rAqH
%%"[\,_/a!!*L5l9lG7pY:eQ]S=Q%]SJjk.V/K/s-@Fs<G53B[E-ndNQiPbkn\18T6oako:Mgk<&'4JE<Ie#+7_IDM>.JG=6WDd!*
%V2#_eR`B^tC$jVs@?\T9p-l+3[#R3Vg@I>m'BTmEqt!Z+j%_!5n79&G.(=.7G:AAf)u#1@;B^:D4%Q7'\3IU;N-hmge<!qUI<K0>
%GCk*jM9#an.,Aaq$VG<m`gs?1LD(`h:*dli5J-F$mY1AhGTUbWd`FB,3nP,.@BIA_q;0KF'E:jG4,d:`2Go[oC3I2:1u,ed2;G_O
%FD:4inH)K)l>L@UJE3\AQ4=cjMSHE,FEXNug#CV1"6"&eGn:Nsj:r/L4;l;$`X>Cr788,]8K-+C(\f=&A4SW?+N'E%DKn2V6R[47
%4E5DgCU(kJ'It17e!Ek.g"6a0LI,KJ8"'i^*0C$*7#%VWZ)Dh7<l5SMj&$1gPA!oV>e1fENN>R-nu$>k%q.1T)'d%_i*gk^HWAh*
%)kI1piCR]A49>8(ZABgh0M/7W=@49W[ou-oE\e\nh$NG0;P8s(f`o2#Cq8;kkYJW]^>#1qG'/sDZNZ?2Eb8Q-*"6+Acinpa@EKXL
%h8pMeSHO/KPBF%_SK%8"r08ll\WefnqFDiUY$"c$2.M3@"jUu</H[%^?=5*8&*rEVZQ!=p@KGX,^(r[EDUCIIDdau5M_`Xp-<VC/
%=#rDb+7OE*QX9Y*?9:r4.=84/caE,]^VR*Yo:BaSF3T(&Dt#:/[-*nO>go;B)uRi9m^^>#f=34.#/>0fH`gf'2=/H"_67+i4kFc$
%p"Ya\K3u1c4]fD]lM'Asi)d(!cdhEn\iojJpm(0MkBcL**ddHrn/Kul?^pV8D9D`EkS7F6r]GnsDt3]&,g3&i)>[8=>tMkSn&IS`
%gc]gW:$,hri[jVA]dHSgf8h\%U7brl9qq98J,RuKp%eF0huD$;s/4c5gKjNj@pV/A4/%pgc.Xgqr!Hd5L96=EUgD$bLqLNI,'ke"
%S&k`PH,8SQb5Qcq73WK6C)9J=7^@i0YId`l38rF=c%=6D_^&<eAPW)ITo,8OIf4'h3Dj_tHGG$bH4[LN8\aW[H]l43_4#U[^sYc5
%S-.nMDcAF8!J[QKp/rD"!(k3YYcm=C:^[:*bUC#C_aLFFp>[^m)2_\6S6\St5.aH!:EKo`n%bBkFfOK@Gq[T3/87Z(nKPAi!CN)l
%R9!,5UBDk*20C$4YrbdH,.&G%,ZHA.L:h\l#J>g1+8<,(+X+fm(ZP040RMRiaN7q/BH(5&CZ@%t?M9Dj:7+UE)Chs$1M](g<Z"FG
%GmT8"0n*lZ#?umBRH7JlTn^9&K"\$dS+&:CBd-I&+k3I:,mhc5>2E"PrRfqd4E=Y0&/Lgoq,35&Z=oWd79`6uYknD<gq>VBk."=)
%],R/S`5u3`l"JSekca3?oUpP3T45;Gf9KLC,#%L*(4(%kE?4I?5Rtuh4@([1n^_`sS=TrJUflj.Fb:8+f%l>*WOI=Z"q:C=/K2gJ
%icodFK`[-cARC]9`^;K*#QlWLh)F2T;+o+7DB"]7Z7)[O)DP/3]'LH:\F0J)JMc/+;2M&?'O5`hMY&VMDu/9"E+?sWOgT*3?T344
%4"$.,GS8\_"8"I#4nFqFZ>;\q+[9Z!O6)P<i(ZtaU;e(oWYR?j3kTc1Z!X&4lkkP#P/fXTpU03$$;QG=J'gW?UUf^GU)e=-*j@"1
%'894Kfnn1_+qLm45"W'j_+lMKW]^VnQ(Vo5'fS3YEgt6)/4+VSokiKNc#LNlRgFhm-!$<-+oW\X6Y['fqc,9q9=5C6l6o(-10=/D
%/$Z*hNMnA&>G00$)tn:#KJ6_(=Uu$m5FKE.3K>';U@X*Y:_,.pY"e:BSRRuG&kIAG'7DG*ZhHKo\t"0*MrqJ;e+rN<j)2njE@9VP
%fCQGp8h>S4%kPmT_*!ug43Zn/j;T)-nM@?;-d*<n=H:0+O,t42--O5mW%H[JQ\dlaN:j:06GS^qC%Bu&b;?^Eg?[?dQL*X_>Kn+&
%o'sLKk3Q0F8JBBo!J\XZ[h_OjSD:mIZu9;9=O+1\nO0CE/G<;`,EW]/j4WDGGQt/,BeU-EJL;'&,,ZJe>I&"Ob/2g^UB+^\fZaL/
%'7#-VOoIES2kPo_Oj`LR-P&98c8\koNh/!"ci`&KiQqWsEn,sN<KmdN/+M3V0]+a(BaF#mb^7d]V5UZFq";,sF?+s0Cl:TOpo0IO
%TCa0%[IpVE++](Z"Q:[<:4E,*co.TPTRN<Yi%rr-%'CT`Y.\uL]?pe8TKtSM=5d)52LajC9e*DN6H/dcU^(NmJga10n>RX%SXU6]
%0`)/3&u88E*ppGnI/IFa0LQP@.#&"g:l*mHgP6E?O8Hk"Nhc_u)M%U278HV`E["GH?@n+oVD^>Wl`t[<f`pM73dlfsIDmf!-=hKI
%fnn^#8["4NPRrq3%snl&a*I0/#(78,Np?cb@VRZt69a`fp\YTcI1,*"PR'%1B_"R%F[LU^Y]j4dR1kuA23:1WV"CnuUIc]IceM<\
%[:fM!&_JERoE16d[4O-SOZtC_`*BLcg4AS.H/mBsY<:[0S4.52lXc?p1-sLi,Fs#@.Z[7g0BCh3YG=!1?I"ShQi=qabgH>GoO6+Q
%Otsi]'8H(&@6uC1_k`053NN@:hM7@2o)3tCK;Umd!@7-78Mfm%4"SN(CtlNJ#s7?<>alb2_D:n:oXT]M;0uKp#5`1Veb,CcI9@b:
%&>G25e;#=ehr'N+!QsHjL:'s?@#:4'$rY\tGu?Bu5MhS4$u7,?(g*Q5g]DCNc^"_oKlZMr_AYq*H4%2.2o081iR#'Lp_1Y^Ep"rF
%"I_JQiYc+>3J",+>;/o:r.n-73G<EgbjFN(elA$qcEugYBNf.&K9BIR'?!NrTg<N7,1jkkpsNOSM4X/J&b_o`%A)VtRX>G/%4#u-
%)k6h)()CeQWO>?mf\=->nE?##5rPIb%'_VnM@HLYdP""kml&t$\H)ku,-XLHHl/s%nfUHL,)qF_",U:O`hpL,?W2IWfk9&mMPV\<
%L[72ZVja<JFO<mn+DH+_liJEqjb[HSotA;N/Z6'rUZDkddFpGULj'1.j_o,`'Z-EX7&^hjVa&bq!Bqd(djk-cjk(qhWU86%*I/1)
%YTl!gK,nYol=\ife;Y8#TF`[TCl9LE`SScLKbnh^&(IgH39;j+]*51CbF0Xt=#7ue]&-T=l<0dU=ZIK/56Sp(<C/mr2Rr19eXdn&
%&ULbq,X'$aMQ.F1i"LDLQPBr8n@Xs%HpdOM<=dpG05>N@AV#@KAd^[T6\i75.3)XiZB5a&;g9j]7U0,S^=SIQDKL!f*"V3X0L;L(
%c&'0!*^m>cjQS$87H<VrXeX9qWF-c%-#:W"aYR`c_!jL-=D^/ic,Ki2n%#@\(1=f,*[KBT]R]ol^2(0*Qn9t=\+)d9('$`L?GN8S
%1k")&pf,^:$l]^.C?Y1p@_/8Kgi3NoOL,2;R.Bh(@1UkCM9!t"nHeM/Sod=@+Uo*GTjcq8BI4d(S:0DY*\BR:PHDPpQ$boq!WLHH
%K5F_8;Nag*jfjGo(*DXC%6T%'SK?b6^]QasESp##XK:Z0qLIMY,.uP<GU\+6A$&jX$r%\%cu.sM:8sMfdCi=+o]PWmLt(6B:bLfe
%djI\E2Ia15<S=.SB]gPH*QUnIr;@!akOWB;(7RtYm-#44>K5boVT4bj<IBCH&MFo'4;W!^pas@/0&jFVp#AM8E03%ji,RYg$)Q`%
%2Z.id4'L>pnbtuY7u7f'45FX3!1$WtodY9I^$Vlqkk\E"*tmQj]LbD1<\8+^lijTOK[N[l!X':@(,jc`[,3F%^5*FjX#Qf]N"`J1
%N'CN@b;^t",RqRQ2>m*YQ6k%f!BdZ4@".7-cBVpagrf])F-0+V/[np+P_FY_qb+FrIC..u2;HZ>1Zk(_[If54$bLsF]?$%$*oK)!
%,"fW3aGqVnAk0ftHRN<97.%J39j)Hn7Yru4r>8tG`orp^P:jShkRK0t1L,pE-g%%V*cB1a#;n[DHKYa7q'"MpZ*,]]a:3r#*/p>m
%Oi[4'S+tDU:CS9cNa?gG,P@AXN?jqVDBoO3G9b5?De\!m\bAO_SCV1J7&iCu8(ZRV%'^3Fg>.`VDN=0Q&Th;l(?F(pYRBFe$4\A?
%GaiuC(QA!HIf4lDXXQl4ECfQ^gm^PPl5Rf-8t-JkGX9C@op!8%Bio8u../T"\Zi@j*9r>'i)5&s6O(&W_Cm?8'j*06Tdg#$K!!<<
%q&R?fNU*B$L,I)j8(;85k/r($RJmSIE3Z4,?oiV9.(*')b^d$OOgFFX*dC4p%W]<YTMXYXlQ*PRX.&d%cn7uG$anfd4.D5[<8Lag
%0[q^:,<LH*b^km1-Y=A:Zq"JU7c2mKJW>ER9*,G5&u473o*3_4jit.%?$8-!'.DB*V_A?f)Dl/pV=B6Xs%U1:[H=0@0r]qBU1dY&
%WZaee2bXoL*3GolPa@P.T:h?(`o'447ttVKF"T)5AE@!%cq\"<.h3:JQ&fPIbHYqAIaapM@4$`;L>*fHc:%,;^8'+Z/=i3E'A*05
%=?+]k?QcQ>(T2XN&TKk-7jug(2!+-VE/c=&S4smJ#<."&U14L2M2os@H\LG(Je;c*#S(r5qcZk_hrHMfY`U(tIS^9L;&0H_/tiD7
%iA0g1$[Qm<ctr#9\ZLhE_r/W>EVVUHiZ-;hc@Lj4E>*lC8-=QM/[%hbRKG`N*cOTNMj)6o":]5p'me$mi[5a0=sM*EIlr?7@8>^!
%NZNB9>1#@0RDL#9'Y`hJY1XqAL2G7ZZ?Io0#pn"f@?7Q"9.sG_0Z9a=;^+Yu+e_;m..#?8i?)9@ri^fo[<]2'8Dm#iGb.$ZNmMQ1
%Ojs*;&(q=O.BEWn%-N^,6UHVd;:qWo_^TP:3/<G1&k\sV_B)u"ra2iA7]KK>pHXq:U[(lNLdS4e=mf.]YY(9#:0B?iM)+<e@?97^
%:.[.W.8+84;'nFTm*V*W]7b/UrEP:B\k3gkW6]$fNtR.H_TZuAOr9G<bAQ"dUGmp+'$P=;Or9G<bAQ"dUFX5HFtriohnBs+O_'.@
%]?C.oR/XSu*ObqDA6!VnoNKUO("j,FEtP3o#g]c&Hi)'3oeYFNCI&uM-2n`-$?N\"?iK=4L6l`o/tP+qL)oN8lpMjQCf&cZr\6o$
%$tJ*JS>]Y)_hR-6Xt`=Fc4.[$bOF.=S.t[qs)iDDcQDiS#F)e\6l35geK5e`R%!O^f!kV8[/sG?Q,&<oq:m&VO2Ed+0c=%O5q-4a
%MtnkRlI@S1BK;L,^\eI+-*'or?\hm(bGNOKOb<XJ)&B#878(E+n6/*"JhXgDJ6kTT-cunIfB1k.maFS;B#"SXOq)6dZdG8d/!BGV
%@Q8)'+L>R&anciR]c^NEjG8_6"=%M/DBGt^_hocNkii6.7DEDN6+1Y;0OL+,g"))$a<RTTk0tt\r:0]2SGbKI&k!T83oW>L,kZo/
%>VOW`U.Xj>ZinLjT@ke5V=@#Qep>Z35q)F+[&!@Ji:?cuY!'@PC(>W1)X>*2#M7m3KprsT[!hK/!S4U6LKLjHQ23ltP,&bi4f4:V
%W+Z$.T$Ok9^a$6i:ldOE4K=dZ1Z&CC1<lYC)u(e7CGSt0\XgAnZX)-ElmOcqKdYfeQ&Do#i_t/mL>($_bn+UrSOI>2:Gh?J+39/s
%H'q(fHC#:@L(Ed--S=.3Dk\LVgi;L=es_SWNcRK\Q4a%]OVEGA;m-A,eK&cN1^.X$o!U!Y&JhRJW5%^pSdHZ6r4CaN8JJ4--PM:X
%HEDuB*Q30(:snq8$l7)>_UL-5%C7qU@r:5LIC!XtC.aY^JUXfOGDQ&Pm19EG$p=H77e;Fb1/uD/`afXT(`9NU37dhaSpcjof2N76
%Yb%uRD%W^9Vop9f'Zo5./R!jk!l!G:3i]!@G[Dm207?#LB2:hhpNX)Jmfl'E5/;/"hUVYZ<*gtNeDe1-6@k#8j48H+'TKio5eKoU
%.F8P*s5YCn&Yhg%MN<]5=NNUWJi>!P>CN<"m&2ConR6Ec!UJEq&h]"_ab`gu-Pq9U9n[Fpm2N+%-3?W\.Ql,gU"56fQ_0e8#\>I_
%R[6R&X/p#l(n+Ta#jk3?U`.[EPDG<gP))BH8-GpQb,H6*hU;P,B0ILOZg.WGp)tJJeUGW"LP1gH3M*]j6ticNj<DIMISE66MKR03
%K\#c,nX51=Oq/iCrX]klWM`eF'pkS]Ko")n(6V^$%\esZl$Xun3E($@?Yo$@#i-j>Z>8XDXtikCJWmkjS1>X5XEp2Y-Uu:MGbf,"
%7<p1#"SNsT+OC%**C[^ij#Ke8o>fmrZI9AtLiaMKjGe,IR<bOJQf7KiN*p_8Dc*CY4TricXL640Sk6p:L"W!P%2aCGg(%mX_?p04
%@?30tqd\`@p[_N?L8C?3PBAJ.g6N3#4TiA775>E"9t6S+(?FBI*[dbN1[:9Qik(eLMZ(QAMp[K"pI9TCfRj%uH[f+h&.WgYne$"^
%UgiD/V<"Eq*@,nU(q+!AJei;'>iZ)&$r?XG0e"p\@.6!@c?tq*@X^4(3(Qc"GVZ:9,@\=gRuVseJ;h68\=i.Xq?.VN!(k&,kol5E
%0gn_[e08h!>1JQ@bgi@^4\]S2W%l#UMD;%A`0-L$Dr7AAqf)#h1lA.hi7-_"VQd,=^JS))>#=:DcI3jHIY8>fhr79IhOJ0%9#ZZ(
%nsY8RB.OHt">4K=q#)8iX]SJoXi/tGQ&sQB13t[t9@G#f"b4$e`G.9?H+?OFM[(Eq]\H2F=/J8k$Z;:]*%R"0/QXVHlo2:V%?sqk
%6!t*"L?/bn`D2bA>-7oNJ0erA9_Tut^*XCX1M3@kOdX_q8i4*,JqYms8JjWU)aYOO-H&Ra[DkpMUBf,Jnq&b!8dgq)^*S6&:\H6t
%YojUrEgUNI@Ye2pLkmQ5=GXN:$n:ecTc8V(5qInMp')-ilc#X*pE^3`ooauQ=gI,$TYj5lejOe'RM>JZT5r&r80FR9H-&CH3QZoZ
%XB>Yej_7WFUYA3F'p4_EX]cSpCAeUD3YPd7W'OjQrb1+SPnlrmYc_1YZ(fo?Ghj8d/Q%_I(>Q&s."Z!ZC#)*B+8ZML>6Et5C(T$L
%^L>qbJ=%T8?e-gi23B-HSFof'I;'gWk06<7=u3/N"_i"RFUO&X,R1]0,fEH9+C`Kl2/X$G4a;.8f<+jM>.5b]F^RRPb'5HF"L/pn
%g(t[%es@W@9'[66WQM7SqJbZ<+@d"5-+#UmaB:/;S\;428?l'7J8!b*p6HH,(6hn!8R[\ZJa:m*?/W"1.qO_3jI!tkgX0e&H-)Hg
%p*`cT-V%\e1A]$rdTl35>">b">u%YW_B(!14E>PPXAs29ert,EY8-^D,mo!@;Y[]%mDP)eDu-!O8X_*pd=pPopr2VBIoD8E"FH8&
%0+&RkRQIdE_29,r6U?M(_m,O<l-Lf,M`\XZFhg1/Q-Eh\bI/UZdqY;O__Q!^&Z"nV/DikFAaoi8JchKJrCAV_OZTRlHRg`Qd2&^d
%1a-R+Z]dj&If%JaErIhc'Jb=hKgfdu:K3o"[aotI50MVBQ?@o$P<oIL:!3_(aSgCu]TtgHB=@F2X9,-b:Th]m?6>F01>W^;L>^P7
%QE"$^[2+O[.7T1gM>Z/=LVX]=$E,0R`Kfu'Ua0YJlrS1YI&cBZTt5W,LW,@:H7\TfP9IRfN7s>L8fXVP?WaB$:#SS=e74>_>=VrT
%Y!Xe1e76/+7qWO^1%a:"6"M>)cZdlQ'Y[H.K%m$l*.oZPTLmuIX:<p:j%0T#G72-t/;/.DHh@@h)^4>,[HtmWUL;&/mq</Cf>+%T
%p1,DNU\YRr10[cd-msClL^"MaX.OENmVSe9)>m4c.I![d<AQ4i+K6ViKT*EO31Jf3>7.FIC#u0Y^TjN2R#Ka'9E\3o9B)YI/U9NA
%*cEcAm1d`31-7P578PB<H5G'6]j?!mL`/kQ#%lXdO7FOopB^fMndu8pXM25/`72"^=IN!cWQ@M$hj3BWEJZ5\6JY1gSmk"lcAdu>
%a=d@\HdT[+CS^h!Ert0!b71<c!))Y1hdJ8shdJ9DeX&kGX=9Vc:BRqZ%F[1.8r]Q0c,p@coRu3i9?a=$&<aF%3=Y*?Sj$T#@LJ0/
%[^NY5&UE#$GV7EG&pn@!MOLbM?P!E<S?4M:H<L*cNt7@AaKGF,W?FRubYFc<129SoM;24]-XU3WB*7=PUDs06+n\pn)JYREP)[+3
%</m8#PdcAZ65Yk,HQ=tu2FUl'B#!](G]PrReKZ"L6S*nAb$.7"j-/7<iJ/o8:5!_cQMb,CZ344ATLBCG=_<uHfqEJLOKu4%LPZ0)
%FIp6s5uED1CJe!A?;RNG%^O-#h\%8.%=?1SmJ;e1c)Qsop$G8i]F7;TWl87doO9YPl?,U:QR>'dN"3/_2\`=&4hr8H'j=$BWFFmL
%GhBq45!cMeDY2GY@_%'`BZ7)JDcJ0s"`Zqn<G6+3%V2Pd",1P[[#bmtBP2KoU"]-s`=mPPRZU2B.4k[>"8X5V=dG#`jL.RHgMc`R
%TkHu^beurMi17Huqq=lmkd@&iNscDf'_WqPOEl1r,.Mhenr&cA7otFae9,k2fV:iCAQZX;J6%CF>o=hbBLdpO(*s<;["DA+1.<;C
%i/jaq17EpK%VD!RJmtCN^6V+D`YfY/*Ka;3E`s;.$:a"05ie#L$q1P[DhgO,P0%#_G/f:@&J6P(#r1=oNWr7!UDqPYP0]-elC)hu
%raLG)1Lp`JVcpc6<=_.oEN:FD3j:TZ'"PFa*Of'l8>P2r\9ECX7#<jC'3_1dd*]X#DKOplhe<l)o;dpQIhqE\Zj23A(niAe#:]mt
%U;"(A/;Q`pa6GOFe+bk!RUG7'Of;DK0T/o+7ii$XRO&c55Y0(H;n.B&O;]j;+JS*UYWGCAbLpK]1cS7eoq!'3@48">T%]IbYs?NW
%U9MD,=K%eG'Z!^K%u#pB;F3_DAGTk[72h'GT;eAf[?FIO+:tnN"8+!@CmN[K>USfA7Fc>;-Io#KZ<g.#8#LeK"@j5e,A>h57.]rM
%5lq/YYB&r+LI@<IlAX%"9<j(&AK&#[>*O0&dQ'&^#IuISNN@"m@dN!okuOG,_u*f<6BWV.Wc<>_7oWa\h*49a%C6b^K.?b,N]i3D
%o63"Y/5q`D[.-N[m:L!!67$oh`%to<W!JBIbkCm1CY#KTB)&jJR?nkIEgks@]KW5F"S27nN.k2kFhcjVj$Qg#g9Ul$Jg@G/*OiEX
%WE_5iN&<t"X,25`\#IERA=Z4_:"%g0`&'DG6+Q](%cPn;gY/N^Q:.A$F,9,jM[UZDii19_4#&t%kF.VW[SuX*))YK'MobKSBpU*p
%XiQ>3I-H`V#,lq2Qa(9mS]*4UP>\Ic:m,pio!DS(.aXF+;>P2mC12E^0'L!UZHX`a!.Vu.15*0Q5."M>VU*^unZ+Tl>+s!F%S^:h
%"^+pTI>b[;e7hl-VS=C$CD/Hc[u)lJ$:_(6f]%WW(32N6DU>@C+?+08pn,NtI]HIK:aR?Se"rrHFU2>sUGt1*ng6GRkfn2F!$A/0
%daX9@E`K=3)_.gMSQ9oND<QapqR40]*mQj9D3&!P%$\NGnKjcN$5;N-+CE,>Lc`t=FD_R`LWU:!S$2i%nuHY=:h%^pN>iq@C_Luf
%S3-,Jk`:?gVDDCf7:DtLZ01m0\#O>c[7AR:P+*,7:#j>m9j'R,p6HWo<==CMN4`CUb\s[*J[oGN^$X.9n1)3[EI[$q)je"RUQ?2O
%'RQKGn$?UXH:-H$'TnsLdO$r'gd])gXX'3SV`Ran_sG;_[BA?8`+/W6j3<[b8_\7[[G#"neH<:T-l<Q:F1&.^5&/6O)k-Q8g7V93
%i]jsKTX!0cLS!lZ28NXH2R'/.hV7b8kR$I>UUuW"8o,o;U;5b`4n-$pdhFn\ZeWf[?7Q@!MJcA;5\afc,P%\^JNo@0oISG)/Je>E
%m+_^8M;On3I8+k[&<<,\U`c6:1p_oKg-'^LY,;OM^6CJ`%CFXLo0`:1%SLU&:m2=d4jRRW%MUC+4-OS1Q_=-aEIV[5.K!?5jb)o4
%TNK5\J_7ZkRd&<j:Fq(Spos#/d@^-Sba8[Z@"MMKneWM#rNn-Ol-MlZ;X>pJI9<mHS2bWPR1]96kOUj8]Lfn8]\,BsUJ%&_7nJoY
%JI'KVAU/gc+od,-^#F<)ke+V#GT3#sKo6s4Dsof+BPU]5%4\i2C/>Rt(N`n`:rDuLc19QF4\GZY<jQsSFE:YKe2--KSJC;c9j9p[
%".t$l6]g*\S.`fY-uQP`Aa6,3`>PUo?A^g+L+r8IWY;PKR-6;?W9m[T90Jt)[A_.5?9%C]m8l>BTJaL&`uaje'/-)bBZ[78Wf!63
%G?'UMQqd\cee)JdTX;T&SZGgY(b0idrj:h-5$?r/_pkbFRq@0>\_o'MTD,mg1=;&Tc:@4=Bgo3?4gadLm#1R*oED&J9*G2DLd6Rk
%o@^-,8d)j[IqWIEZ,F@4jUNp0&fqb+[BVe%Nt(uIVZ?E=rI-Y=$W<2&.1%(Q&REt,POI4[]V=#0_Ju,Z,Q*U!U&]pmq]?mg"1%hf
%(_YP=@T\>7j9_T946<>h\=[l@'j^H3hsPd[AJWHp-oD*SO<O\aegPBY[cJ79M$^CR+)4d@#]rlO=kr0c!aTXN;\Y!SB*$JpB@32c
%ECdBZBX'_N!?bEB=#u)!ZNQ[!53s8qU=Y:>2hm3QBU-4WPjErLU+.bA&pKYG<8,d,XQ/_;SgL0R22K]e"^"2G;Z_]$W:eMk'h8.1
%#l4h3nukEdap`oXLG)1#_PJtY(O9g`IQ"bT8#./k?u2Sl]"XQX(Y5jg;M5:rfqf]?kp+<tTVFOKZ'q@S)X=7rUh>AYm.42ld$?3>
%FDfODE=5?oM.qa`dV2>:h=BNlG`s+5`-.lMH'@%M_kXR!QJtraAj@'"b];Q#$.Un&OJL9,KWlj/L^3o5q'I]'Np]V&`Y2,"o-$Y:
%O7D12XX6&[=;2G9c(!d++!-tYhgt(o(/qP1=XVW-=6+KY9@i(9</US`q%H/uA(3u4aRsO#^8)l4q\B?tfdC^\-96[6mmKYJ-b7oi
%7t4)r\5cHnS30'=/6o81c8oZ,^^s.KU,Jr<Xq*\)C?gVV:o=FlNXsko(p*%o*'l-8M=q-KEjH^Grbcf\(:HFK.u:99ipn"o%r7`+
%Q,XLY#j^p^qim_[`kjEtnd;,EREt!4gage]EWd!/M2p^mEha/kcLM</XeHOU+K4j5<fja#8*sfYU(^s4%'WP'8S]jce0J3`OJa=\
%)f0ueHeG)YNZ]+V7!nMP\^?1FB0UjW7sds&7Wo;)0o4CfmAZ,Kp(Y.]*@2&>FAc3M31"ds41[1hIRj5<9eQp9]OTUAPp,-@Sto`?
%]OrW9*Y3u-]iHt+8ACk[KjfJ%Yqk\0aq,.q:XUn0AVRs'f4NU?oa6ChUkH)Z>*jD9M$C,[A'A,!rJ!3<(3aD%:a/$RT?/Y,?oO5$
%,0.g"%*F;5b(-3HE0q)eZ6QD9g!S?C*5A'LV6M.iP+&+?%1NJ,Rpkqba[j`s?m*NYn?EYc7Jl4(cBFG[4mSNT_"Gc8nmsXm0I%TK
%H>K:GA?n+#C>Q-A)+8ZjZKmI5N$Qg_O5uP%6-DisK?Hi`K63:@/Ee?(D/nNXP3IrQd@b92LM(9-paO,H\J;;l;-s0lKoc2i<T.Ds
%q#[4YZK4dppH$.6YMh<+:cReBH,G1e"%edKC$(JC"6=0-T.hAJVHLP3'$uE;N`[hQVS'hBd-H\Oe/+T\"#TDn,=l!"6ikk+:1K)M
%"OKOG:Dg6-)Cs;C5cUJE"mcaK9oA\&\.Z!iAABK]Q1<#-mt5lOO6b^1IAhp%DPSU/^.ea=@Oms58*?(?R(upp@d'raVlCei9'U59
%q_!8U?7HodScPk4p7r=?Vp6VgTp@3>Od="s@?*qMDA+Pu\P]Z5a"D`o>)jZB+JY1GP*!hhY)d0hZ3VF9DU&'GD`!3N)j2-XH3a9^
%(rZZI\:Fh3DB9i?D378)bFjmH@94>.7`o2B<]o!8)S7CmE>e$+]Z"Dn:"=s^d&*?*#>&^\Rj_mN,h<'Ta8eSj+slD%OM5^sk=c.;
%Z#s0,A/90^4"ocL1G-nR3I*[VZ-5"IH>/e-81:.2#oG]6XCL,=fGijL\,-6T>L$7gA0'&d$W'#i#6!taQ6+_:lp-o3m3$k@@'Sk%
%Bc0M?Eap5s^beYS^u/rLbO^rKQs*DH&Z<`,c/O`"bXH:g+&8q)-W*g*$fekaX4F'gkd@)2EbntgK`u>ZWB>\K-qsPDS0]nOj[MA<
%>+>XnWg6/-ldk2?Ag2,ViBGjiD63VD*A`p;)teutm0u4l>1qoIDS+nhcq\"<;3Te%f$"ipc:?lZU>6!/)Z51(%*@heS^+BnR5j9f
%o^0u$<)97DaS]OQ8bf`IoqnH]A?]:-0Y1iZ[@k7ZD@mfZ^'S[pX[>u_g]9W0T+6kXlB$)f\#QqLQljTX%<;RhhiDWt00YoVnQ2J:
%[k)+_bKt#j\R1"6]-WCG'F'nn"LKc<qdn.;?d`f:r,=Q-O<]SXokaHs#G&4Q.,iONQHOrFJ.9&0k6Zoo%=,uW;8f!3'e,6!+_2li
%<a/SC.]V^.cF$%UFe*Y'Ec"C.9X>&"8OOt$(RIXXSio]0Lf'YFB_`5rcY<UFBZ`Q1rn2E9Q.MffI@WXq9TtL7eV#4!ToVXRZl!Xj
%:3V3oj0rpN$0Rsa.s`cq.41fJ6X3*G0Ss3'o*>G-H&64O3J8RHFJIt,@K]E5gpEQ1I_<n1^Wu'j!aj>j6+L'MgAJab7PuFf/E1!\
%klq=>P,@m1B[A$fG5Z`qr"#04J$t0@5>B#_'8I?K&`qAHWMo]".k>>lj+OTNNg=q[>)Bo-6t@a/M:_N8?%.Xklq!usnM^hAL5DQ7
%M>>FE*#7)eJRK8Uf'@,7;H706(=gq3r6)iW@+VGP9p31q].SJ-'heBZp,&rraoP)\jN7:PY8cgbhoMpT$XDBe"oE8Ugr+;L][DC/
%%iNr"S"SEFOh"W,*_[(d.L9%")n7:mn82b1kqOLfF15G\I-'g9)K2!.V!WftO'q%.FQl*P"X]@P"8=K",^'(i?54P^_NVm"=IS)A
%UoNlI>H,6"N^liM(Oc?;Z:tTkH:QG`J^]so,9Ma$>sH?f,9IH="EQZ'1G<_9A+)R$bD4<Y7IQ?n^r=>j&Bp,"c#\.8rX(;H&3+\o
%`fo>Wl*Gpo0G-U3E-R\HlDsX=XZuC$gtG:QP:%P-n4eh&H:r.W<]M@i$gtT1?O:$W;tOu+*G-Kt!pao9,++ip%=E_FE^]V6^Fo:^
%L?+/gmrLF'+D+/`#=$._aRo+<8j_[<Z%d@qJmn(1Or[,RS6))7^rtd:URRau$lATsESbKJfmm_<n3f+nqNTdDfU/ujjEH8`/*_):
%9gRrkZXtE,^995b$B\-0k$+)8P-6PQRB>5=ZZW#Y+0lYa/*2>FoEaQ/:]6-$f)jt%5c66;ChquN5#9FaB?OhnDSEnSKH'XecfXa2
%Ug"k5+b98NNOW1_D8<Vh$Vj<^hcObnLYFd50a4sTM#ra_#3:MeRo\[GO_koapC",APo<#J&Tl!tb"VTA_2#ZZ\tK9b"WaU(B(H?f
%XI8V2Q;O`fj<2?n@T6JdOTu]0F?!\'<Lk%I)S@R;(nlaoZ]"uP+'QT:T!FB#oWhqf;A4DMW9/>*k;nr3^RuK^.:UM9HO`'lSeY'!
%@cjP[\<iB:l.JMF9GhFSUJl1\Y.K,a%tQKn/9aXGe:ae=p)A*gXs'e<GoYO7b7sP^7<YG`*kl;i/LXceC60UUP:<\h/%ajNqY87K
%?n!%0f$E_f(gAH46E+36.TbUHI[m0!>%/Zu7`CYLFLZj'mA,N>l&.#$H0uAgSiC+_QQ/FF8E]Ee;/Xo3Z(_K)UKsZ+WTkpP_+kI8
%1^S=BD@_q3Vhck1!$cg\2X"'CW$NnTLX&fk:N?jUirukL1;Vh6?+7qH^U-[-15Si'ns1L7a18O#'J?#tR^#:."D;iu0ZB!'lb."e
%IHn?I)$0P+f@+&"M@7FER;d'l;7,1r]"JWaj]ZACjlpno+W"EkrsiZorWupjR$L/fncDT2hgXQ"i1Ju]C-Lpr8KGN(ac5)S$h$5P
%7"3^_hr]ccfC6*\*s*7k/K_.i#USkc@J!`#5J'K$p?8=AD>=9O/B_16$p2$UCs1;\;519b-NtrMGNs9M'bJQ!jk.tG,Jl&oas:<O
%8`Nl?8,R)$-uLT@n%[!XCYO0<&('(tom1Q1+LispgQ$8_0",I=F%XskE\M@:K^1P+aUN5*302cRni0JAV!T490?QF#r#"$lOst0q
%M#4Kqq1W.:6t:\Mek>1V#Qo@"6`hVZN6X+(^&E76@E0;"Z.Qhk3fAF-PsO2de@)<I'c*$)#/P2%koS-El.R%t8=6eV7adH5ho(M7
%6ZE[X![)uZW^?8\<9),=q,#>;Kj(fMEh.SRr@P1Ecb))r%lM$FN")3CO#aYee$=EYEo@oC/A:L20VM4cC;laVjO.l^r&9N6'_t_k
%JIecorNg<o,FKBW_UZRg5]bd5jF"jGY(E%j8)rqllG=Zen*B//G(%,\>&Di8>c-JBf"(j)FBnl6_-nYH(=t]A'ZMuHCc;,UT8%nI
%hFZI?_K[b(BLE1:UH^3o;51j]`/l9lS/Al[l#k['F[J_O.`'^D_ZoH]&UAqaaT!7+l>`_(V.?$9E!Dm0^^7J58M\YmMZmf20=rkG
%km9F%P;S0s:A,app,.6?V5=K&XVuf%L7Gs+a6Y!/>),tp18uqpljnmldS5DD5<c6=0D>[[USm6q>T88?G*4Q?f#ahcY4]4,JQmHr
%/AIE>o+oA"3uc"Vj"!-)p%AL01_qWk[6u,F>-sqK;p8#26>#)Z*cN@UjRamm]2s.E%?cZEk)B"G'#iOpB?rg,JNj#MY!1H)qXIO^
%HA883frecq-Bi?b$&28VJVBa#!\CtnZ`sG3b2ZFm/CfFu6R3F6HR"s:kfgBjT?m//GkJ8d'D,&aoV!WM(bh[_UIC\I]gN-nF+1qh
%HL?FDmOCmabl^Pk0NDWg[naM%(LmUJ<I[2@*3/pblCe`/E4j)^)(eD`e)kJsCD1fp5j[V<`e38>$:mK`bEnd88DOg\B@d.))2lFE
%hf&HJpte^Zh,IN3%7X,Fm74DQjUD!bD]9E4X>>%FW#LJDg)18iCY#?boC.\d72kYM#?N+aUV>MgL>5FVSS48S9L^.Sg2+_QPm7JE
%Gm#LS4dsUI^\"d79Z+OsO8CSYrT7p9=_LnWll?S):/&8DAZ;lH1iCJlnk-F`/9c[@B!JsmhhN%\p8E/YQgIR.+]^X=f8/MiQaUCn
%g)KCJ%IS$WM],:*d*ur&SLdN&0!*NLf3,[;8*174e=imR%pQR\MVe5"F+?h9%+h1W^;b4[c!E\7K/)X3_nj4LRA;`Vdsd`'B2Eo`
%JOV]43:F3M5SM?dMSS&C5/s5QA8/QWQ/rDOVNi<,]$jknX!NX,f`qm?]u--Ib;Pa:oF/iOb2FDGrVK%ef7obP3nV`$'AKD?(F`IJ
%a'=PbgH2fdkjMT:[:blJ)KpIs-6!lPi:g.L\9:<)rUmcln!Rs#^^/Dr2%f+dknu<8J8Xo1no3OT^9>%&cai+\OE?fu51FfYKt_;E
%;hpi1jpqMM2&_ZC`@^@02O9S.B\4.0MBt6902/ShF3L-?5&TNXPe)LJ0nb*/4\,#JMhP\%+\S*7).8"2?-!hmRuO`_dBn85<ARpp
%%$gusGDmZ,["OQ(#Xu76e<nuH0:K,o%Q+\,[[N3o_;K.H&^5!Md`R@B&^5<MLqLO93hWCZo";dpF#8]+*7BmURkJt00/,!3)jssC
%X7UaBN7oA1\O2NGl5Xo>^GDAK[DGXenlf9nI,<^L^VVB/d,?re^;3C]"s#4XjVp==Ga'+qZ=K=@aIRg3WUlj0[K"4^RL4?GjH3.1
%#%%`H3\t$S=qR)[GTkMT55l+J=H6-e2Xgl^,2^m7&:>t:*ar'J2u$QaDE9,RIs.(7Kh,Eo2UWe:RnaE?JT!^Jj,uT9("G^M9dSNm
%d>W(1#:s,n0'r)8_K[801^VG/j7-&0Oi!fc#%O.!R[#,@9NEgX`T2J_+El82)6cM88dr8dWOJ(H,cj?QZD?lWd"h%gAn__,QM[H,
%^p*/6i@'GgSMJ@-U,c,Z9h3^"=g7A]>5CedI#K?teR2eu11p+PfF*tWN=r^:i^1p8P<&=]DnkT,[DF3\)gqA2!WG2Ck2f/Pp@%V:
%6RHAL55")oZgfJO/#n[uQ@0m5jb%"3)YTjZiI*6c]bK#^:D63)CDgB=&#C7L;+V]POgL`1P^KE.rifRJ/1>T\?N*#u,2^N7=r\=O
%QjAJ+SF>`L/?n<7mKDR9VJf$oj9=D#HI6E)qkuS,I!$D$#pVpVGVG6rp]nLI4oZMJM!!RaSY&ragJo:lcND2XfPcc."N<c\?(__n
%`7(=So==S`dq1G\ZI19/fM,k"D+bn>V$e'G^^c*c@$X]^44akqM;7'#LKKegnOFMb_V65e9#Q25+RbujiR&N#Qq07G"$#6VTYKn]
%fnku8KQ&/\_;.$F#"qo#YYtWYZ&;9F)dpq9:56m>_,(#T>A*i2).1J.#JJjW2?485a$*N-@<4^UPNYG6LEVHuUbEWs(!_*9DJca0
%DfV)CdG?4<4anFEN9nW7Y6bT\44@-0EsCE_8>+=Tf:"]&G`A)/n?p,aFGu$g^i=)/9M_m5Fa;/q?m\Z;?JldSdquY46*]B@0U!k.
%0C[-W?grO/2dSnsHV!n/GrLqKBW@rkOoaZ9rM_(i#]AtR]U5rcM?Oqha9Atu&#S"*aip98e-Ug:?!M8Q&dn"P^#L"V)4ShfmEHo6
%ZTHL)PAcrj9NN[bbKJGOY]S-[c0!/WLr;&7^%GL+fcbZM4:g!L;#kLI?BK,rJI)rU&t.Zk+&O!5GkQAgU80U)&^KC&KffoDi?#-S
%L?U7[!YT+WnfrCNV&(=/n2s?r8<3Lp^VDQ!(UuO[0QlQJ(/L8un$i;VEC50L$Q8)e`j8Buj6h1p@-T-RH%Dri-t73\DGh>6N`((-
%i*64Y)oIASn,LK'\b;Y'-;R$9i#>a&@rqtAoKaf@1@lZI:'LhnPb;J_-Y.fIC\T5<+]D`I<[VEEN2G+qQqg1Kd$)@P2lK<TDPUeh
%=-cX%P>I%3VR/[2L,*L-81$;s6/p,sk%s/SOuh&tOA!?d$Z_BXF?qPM1`td&pV(J5&C"c2+bIWbrTC(b'9&"dEkt9hKUNQpTf<8T
%W?8]`V.+LRog1FX)MmC95DE=QM9$&um`'nsO0PeS:g+0%R=nlRmU03)LrLL4F^QGTXU"FrQmX,O8r?,#f6.G!<s1h?r.(sS7^2*,
%b>7(bE;D"'%O0?%>JJ%8i&\I@#5\_ij/6iCf_l4j;=u/75'm$G6l9TGV!hQqHc"A9,78n8a%p,.iDb:64+[isC_$c&Z_,.?LXSgG
%IgR"Wr:)S17<S>PUn_"=?Sjd/?E/Gl*eNo;A&.c8n4@A;e=XRYZL4W0,krA8H%UD5\=^W#0oqsC4&(a#r]E'+AAc<k82:f?=mt>(
%(b]`s>gkFLPHHU`$KlmG7oJJ-%K)8q<rM'VnB%p7)-e4Drm1QCj>TUX'BjPD*-i7e8N7>EmhriWYb*T_H%@c<^>Zi:4]f,UlLs;r
%i)d(1cdhKpqE=X5pm(0UkBcR,SpU$Hn13+pk8O&!_k-cFr5pnb\]-ea\0q:\^N*%qY%c3>mE*,ZY?^[jCYj-WHh)+E/(_)i>4u4E
%T)9Q*b-gZJeihWr-iXCcEHV/damI\,[pOepiE*2Z[E7gf-F[?8?K$V(DfP=+gp:5*E*Mg:Jej`BP4n4oL3>dmn(09<J*sk=Hh)+E
%/(_#g)YRFRT)9Q*au/Ut`]_q`-iXCcE_Un`C!S[(ahPZq>k=P&hK-qgno+"Jf<XRCp0>e4r#>RV[I1TV4kI7mrs$5X?.Q8PITa].
%hNEAB?b*a2=1@AXp>k,h5C=IZraC&>[s2PH0hb;M+trF8(])=ckBcR,SpU$Hn13+pk8O&!_k-cFr5pnb\]-ea\0q:\^N*%qY%c3>
%mE*,ZY?^[jCYj-WHh)+E/(_)i>4u4ET)9Q*b-gZJeihWr-iXCcEF%/#8Uag_(uCF*KjVC%4]f,UlLs;ri'2#uS!U8<]NT]UId9"'
%Vh$("_YFkT<^KaJ\49U5q.K3B>=4Dpp=>=lPoVICI!*rjp_1/<6:9qG7op>dcesedD`Bqlm,HW\XSa\`6a$Z!N06J8NtR0(\2+U:
%9e(MM/FSS)]Jn-'a:#XU3VlD%F"MaAAP`:7IcXc->jItsh33>@hmb:s>2C32H#K3-OVdeXX4q]<H`h6^rXJkENO-2<NNsXcZ6,(;
%+,p_HP=s_m7bNhlfoJVYO2cqJPH3GZFaL9/:]:h&A%.ie%YM3W[(g55)mV]kD9?JFaNr%qqgBTnr_qSWo%h\/hJ<@Fd%[W=LO7a?
%ZJ0:L`<@UME-j*W6eaHJ4mgB2f<XRCp>k,h=0?\l[I1TV4o%&3NU*kc9_-A1_!mZf/,[Q?mCBek=19RW#63X4o<BAH[iZ'g+,sbp
%)B7BWQX`5uDEf%W58qRk1cD_5>hu!PgN.Lano+">D>^$P9@*L;B&6hs^K`l"MVC\9_qi2aQ20&OoR;/c]%hQ03U_h)n<NfV4P]X+
%PaoH1^JgXUHn?j&lJ:R7AmE)OR'I*p%\E.X1A<J6qCP6/Poc?_).k)B^__5i!'FRhQSuOi^5M-F@CFH@[DCZf%?/'>l)R$]9J,**
%!VYoE*e;87f@i;F,2UJ[h;RC0E8KD^r+u'a@t2n!HKLf*Tr0=i%LJRnmV']sC+N8&M8-du7-5ISI4MEGZjQ6N/?QD4,6,I+j']4:
%jb>DF2T"u]_gp]74G1Wp`=c"S]E`1DoNXfj]8P7do5"bY4u<^_e]pZsp2[TkT=N!,*_.2Who2;+.e*;a]$Q#$Jiu$)OXHM/n>#oJ
%MiVuY$To*lUXEPpQ@Jf9SdG0.+tkWE.;n&bk#%o!^VDK+.8[S;.'"[\CsdY?nM/lTN-W.Q&OdE3I0(``M4OGC]91BqM'U"tf-a5(
%#CK4g9riPG8t9kcOmHRa`n]GR/b:`l7\%4h^`AOt0;ee+ZEoR+)H'WG]Q3fd7M;+-gWEEUp$.LYkL?<C$g'ral2i&7gH<C"b7J=T
%F$UBT>:?Hd7qpuF"<1W]"LEpSbVdFf+U.*r3L4YO]4Ql!4EY56B[j&)?q.7V'1/.[.&d7`m%*Jk2bLosc%Qb'C2*^ql/60\FIsJR
%)h!/!0X0P,.NfP]%)$(Yo6ooM#E2'pD+ZE+D9=Kd%K!ZCQ"Kcf$asA!3mm,%WVM#?!NeTqdo+(O(e/94S/@!^[1]=91TZZWQBUJ+
%?Jm%'K0[iT/<=E1HLS2-+K5<TVf044DS)ulP[Tfe.8:m\Gh]@n"\QlN=[+aU\@/]RHRTGZ=d;Vs.GJ0:ABo4am(S^[O1t%$;.&aN
%8B"'kQrED4e;NQ:I8q_8j`__>Xt0_j[qn^c:13_P#gFlnp,j#-o$f4]1&0TqROh-ciS7@JcT-Z]o].Yr9QPq'4#P"NVtIX=a:@lS
%+_\"3F^XK/_)4]nDrVRhS5Zq%D%-#PWDj_q"eN%(7&!h;D_TFL-Lq46JM%De_lUSYmsF\<'5rYa-0LS2iYBF&lU1&:[bN+DgDraD
%hf.JU;&.q0Vq]#[@3AO)a1V)]&[CQ_UM@rSfsH[461QLDh8N6r^";>>>oYsX'+aK]3uW/RYO1C)CbIS"_84/tQ(s4Iqj--$iF_J<
%AT1i/$nksta*sO,(g[>(M7gW7GW54c9=:jUGP1-f,0,Kr9A_rDIQNZ#O2qhEcp4Qs4F8uJmeeIj4lGW1ce.?5#fFb6[SF>)p'j/,
%*'nXr6_>VAX^\3[Z<r-_q>=$:c!R</Qn^YPG[3#,9DsXGS&%X#dVn^m3,520alpgMq3&'2C&3U>Kel/7dV/T1RQ>;)W0;apG&kZ6
%?lt=!#.t9X0DROn?"(*6'45sn,"%(P^QJtt5ZF+P7A%1N4n2CAP0*V4[C`P>1C^AUqS_4dMH]EUQDRJ+4Cilri&6*<KBcitMD(-L
%6J@ZHBncl]84B@9RdUaIr((1nQUCdrW]J>=Y'FOb.Mc-Eg0qJ&b#%l\hr&:$q5"6,H%DASpX5aop%\,M1Q#<+i"PEI/L&bMR#0$W
%!h6h@YcYoA\oD!cA's2lCP=3HLl&d[7-%oMNq"^,iHDc-3?^J3XY=HR'7#.ca;C(&[2F*33pUD)p`"U_0MbUkncBJe9nA>Z6G+6e
%S@ic<riRX&SaZpqE=[h:c2)%`29Z]o+OM?m6/iPs@P&fI/UB'#SCEf]<)\ko6q+&."@tRUg2s:%2Ke@RrCSf2"n'+(6YdeQ$;Gqi
%M&Q/Da0@Uk[#OoAp#f&sK=;L8._TRlrtEpGg7hH+g=4lDn84\8`S<Qt'!./RRqXDf"[Q2-]X%6.o.gX<fh+Bp8$6q$:&@r=hTV"(
%lpH1hI0oAH3.kJF3@BM=#$'aps!KRBQSqh*Nbl`S9lc.MKj`1f]N@8uRM=c.)i&ah7p*#Y`PHLKm?eTY*Kl\sl\,\#G0F!u;mh8S
%dR05.gDto'gfuBYM?tnN3Lhc,A@Z`UG^sN69Sd4D5GiTD:tV@!9!tF29q?bYUtWZ;3Q8h=1[R/<$Ii6R3sKK=2%AXaNC::<lGi$\
%Xhb3boQibElB)bKcpYKm%'S4Gk>;T@$_UZ8M`P)gE,6p+nn/]rlV/bb*QuUAR7^/O<#'sDS\iug7BZju71ir`Mb@8%P"#qfPQa[J
%>K@]b_kM_'^/h$CR^iYI[2!3ZTPd_>T]0ZU%;KDeRQlS#K*H[&<Q$flB@(C"a"]H[)%mBA`rK2iY!2(+joAnm*s>(I,EkeJD;fqY
%Ahdi]/uS]]2cGpIaT.@XW5bu419oU1dG`8\ToWcYJ9`/]WjRZT&b%e^bu0Rr,U]UWaW*bO+kOUG<P_%n;`!,a@#Pn`$"NoGbn-%!
%?*U&ZC']$AiXSmGAim8Xb(m;^aA?na5rs2D?TKb89C=6_-O!=j>5SS+WR-a8Yd[ZsZ<O2\TPD!g<+*!t<8F*;hb+I.&B8C5@JDYg
%+d1KL6plX>Q@)%4P-,tX:>CtfL/<B(j5"pHNla=;2rY<S[YpVK#6h.Lp5?kuX+nQTa8S>-k,olsh4'-i"\*/2R3lB05XQBH[%KO`
%)"X:Br+BNsP]LbaSe(C9\D&s]pDn)&2pF02)uBgG!*B%Ef<Kr;lNBEDNIB8l]jkR0^d!=XDc5.aJSa3h,[YiN2j0bP[;Y!]^=tT*
%Oo>qTll2Y.fJga;m2Kg%Y]$I!_`FKOPC94OUka@sO`]r%hn[,D<r3*8POiMG<887mp'm[BZYpUq/l)jkp'jmcp5SWlfJh;PZZ!?,
%h)aM4Z[GcMhQqV4V8(bD"mrhQ2^fo]Z#>NcFfpII;s'ktp'kN=IkfaG)kjdo2hUd4hi($"qe#J3)CVB4Mg\O9e\0ToKW^(hs4m6>
%q-%^+^*F_*2LTR:5<"!i35'8,A\(g[VU$(eNSqP81WdAq$hrh]5FP05roaf.fq^:.l*GQ\VD"rpg[mqff1d>>`phdU.o&499ckuT
%J(sT3N+Ng@IFD8\l_^l@+.GI%dl)XB:#E7CeKf&L?/G5Fn[7.2I4S[59g:MaA@(O\!RcDF7tShZVU$)4\chb%T1Fu:?ar<ZI;7rt
%oVk&bbGMH6VGFf;Du,jepIua!j_`I"@@2b]l(__TIFG+mH>NG:dAF\3g25<B[AOu`5PVAt0?4O9DK'7AYc:hn8';HtB16"#'=MH%
%Wl[`0^UUVTjC:P.<Jp/(]3q>H@osC=4\RK-(c!NsmC+YC@gFe^;FtkeG!1!=+BU+t?<!m0ZKfbf\KTU_H6,$?]"t)d88NOUX-Lt$
%O./1/[5)A?mM<H]LV%gU?*Zl$h2Gd!O<MR5,=AE<7J+t(lU_-:pTa%Lm&:4(<Tg0FB$Qq4.&&\YZKn#kjlseA7\N!e<uq;CQ\r\M
%b8t="YGp=\])u4#r(Kl<X%b=/Mp<:O:3s&:"#ur-mZY^"gkNkL:^NCp(L(f;m_PVt-K%)$iRFcD6E5F(Ko^s"A0%2lVF(WB0+8&M
%4aL`jQTh`8;m_,aE9SE(p]htZQf]DT\DK-,E&afPB`@)iL(dp.C4U:q6Q6gJ<S2E]fd+EN(+?hEPk%23oVW`dT]QD)rF$m'0WP_n
%nHE:<:GR14mj!de;ShZ)GeJ.sI`IqSEE)s,^`7!lRt-IeD&<1TcH+Y9&1B?IAq#Y=`Vskn5@$(cqPoB!a@/"mL,YUeCEC<#+iuUF
%HlZi;YoLn&i?]3>'Pi,u?R2_F$B#4h%1D"8`#g4shP0cr'Q"#e<jYj6K]<3^RO2;JG+G5/cB^PJWL]2L+M;C,19DMP,@XLCW<l@H
%ELs!^phAcPMGL^BgYS5cKuFnBO?Ia8Y\Wm4)h@RtHmt_MP$X-kp\i)OMo_<OE'7f9T<.%o,Mo,HT/K"ZN[P\A(`/i.+;mIfP.>r@
%Ru)_`>tTZeM[`iI&p=+er3B>[c^0RfHR_O=4FQTW4kgaCg7_5`+(hu7_B$@.0VV\TS@_F&i+aV)!6\K>Cu!6[pPY!<YF=TZ$l(;A
%%L3.%,Tt]*W4HbGUgJ%ec3iR2V)TJe_K!PPC5juKE)WH=+g6-go>$PjAAF8-[[nu9JT2&m';PONPI)A&CttJ!)82;b3Al&VJa)KV
%?k?aa"j^?F@AD@OMct:dI_QC1%=r<g@p<^51'DHGIW]70NZi@SkuD,:#c-FJ7!O`C6iGmpN]mXT87TI1l*XutBZCG"Y1_)R301n-
%gXV^B?E:E+eQV$T-_qVfV?KdTR]Hi+2iV$\3NCeI?k2%E,O/u/.2Zcc<G*>h*)^+m!p=$Bf:N4WV'Wc/6(%_B:+(W_IKZDaZL7u5
%Y-Q(KIZG-[#J[R0>'Rr)4<JAaS7084#]C_TK<IeBkPPF,Tn670I=f2kMfLL8<X!ctZ)TE=KZO]TU?4LM8/l&oMn(6mk@'o[];=rU
%F^b1Mar&ega*M79dPcO!'[1)44@[<?qPuj"4.Y\kr^Gq"@86SnYAJEGIsp8,%1e#/U@X*Q*@bj@/Pgq%&0CV[8*SZ!i"ZdX!m*=K
%)i(HEDSs'GGLf<Y4`I:iL/0l15H-;UrH/5AlJKS\qqqD/hd!qnn%\nC?[c_)^\SJUqqL$.VgnX#J,-:_s2VnPMnf4/^\`M0s5eHS
%pNM,e:VZe)hu?(@e!IiJa5?p+J,9%lr;Du^p7MBarrmurN?A)!J+[a[rVuk`J+<O>Nat]i~>
%AI9_PrivateDataEnd
