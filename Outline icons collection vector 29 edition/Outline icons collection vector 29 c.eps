%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: vector_411.eps
%%Creator: Adobe Illustrator(R) 16.0
%%For: Max
%%CreationDate: 10/6/2015
%%BoundingBox: 0 0 1007 1046
%%HiResBoundingBox: 0 0 1006.8389 1045.9673
%%CropBox: 0 0 1006.8389 1045.9673
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 16.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 16.0.0 x682 R agm 4.6676 ct 5.2591%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.3-c011 66.145661, 2012/02/06-14:56:27        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Basic RGB</rdf:li>
            </rdf:Alt>
         </dc:title>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:CreatorTool>Adobe Illustrator CS6 (Windows)</xmp:CreatorTool>
         <xmp:CreateDate>2015-10-06T12:44:41+03:00</xmp:CreateDate>
         <xmp:ModifyDate>2015-10-06T12:44:41+03:00</xmp:ModifyDate>
         <xmp:MetadataDate>2015-10-06T12:44:41+03:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>248</xmpGImg:width>
                  <xmpGImg:height>256</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEBLAEsAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABABLAAAAAEA&#xA;AQEsAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgBAAD4AwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9L+ZPMWl+XdFutY1SQx2&#xA;dqtW4jk7sxCpHGv7TuxCqvcnFXhnmL83fOd5LNILsaDZxSmBrW2eziEci0Jhn1K9WdHuVqOcNrA/&#xA;CtGNa4qhtJ/N3znYym4j1ZdSs4mC3EF/NZXluhZgvGa9sYrO4syzEKsk9sYq9WGKvc/J/m3TvNGk&#xA;fX7RJIJYpGt76xnHGe2uI6c4ZV8RWoI2IoRiqd4q7FXYqxrzv54s/K9rbj0Gv9Vv2dNN02N1jaUx&#xA;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&#xA;JWjAMOLBgGopVf/Z</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#">
         <xmpMM:OriginalDocumentID>uuid:9E3E5C9A8C81DB118734DB58FDDE4BA7</xmpMM:OriginalDocumentID>
         <xmpMM:DocumentID>xmp.did:47831BD7736BE5118671ECE021D48F9D</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:47831BD7736BE5118671ECE021D48F9D</xmpMM:InstanceID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:46831BD7736BE5118671ECE021D48F9D</stRef:instanceID>
            <stRef:documentID>xmp.did:46831BD7736BE5118671ECE021D48F9D</stRef:documentID>
            <stRef:originalDocumentID>uuid:9E3E5C9A8C81DB118734DB58FDDE4BA7</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:3F831BD7736BE5118671ECE021D48F9D</stEvt:instanceID>
                  <stEvt:when>2015-10-05T18:14:57+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:47831BD7736BE5118671ECE021D48F9D</stEvt:instanceID>
                  <stEvt:when>2015-10-06T12:44:41+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/">
         <illustrator:StartupProfile>Basic RGB</illustrator:StartupProfile>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>1175.000000</stDim:w>
            <stDim:h>1175.000000</stDim:h>
            <stDim:unit>Points</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>White</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Black</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Red</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Yellow</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Green</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Cyan</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Blue</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Magenta</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=193 G=39 B=45</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>193</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>45</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=28 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>28</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=241 G=90 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>241</xmpG:red>
                           <xmpG:green>90</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=247 G=147 B=30</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>247</xmpG:red>
                           <xmpG:green>147</xmpG:green>
                           <xmpG:blue>30</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=251 G=176 B=59</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>251</xmpG:red>
                           <xmpG:green>176</xmpG:green>
                           <xmpG:blue>59</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=252 G=238 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>252</xmpG:red>
                           <xmpG:green>238</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=217 G=224 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>217</xmpG:red>
                           <xmpG:green>224</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=198 B=63</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>198</xmpG:green>
                           <xmpG:blue>63</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=57 G=181 B=74</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>57</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>74</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=146 B=69</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>146</xmpG:green>
                           <xmpG:blue>69</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=104 B=55</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>104</xmpG:green>
                           <xmpG:blue>55</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=34 G=181 B=115</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>34</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>115</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=169 B=157</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>169</xmpG:green>
                           <xmpG:blue>157</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=41 G=171 B=226</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>41</xmpG:red>
                           <xmpG:green>171</xmpG:green>
                           <xmpG:blue>226</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=113 B=188</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>113</xmpG:green>
                           <xmpG:blue>188</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=46 G=49 B=146</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>46</xmpG:red>
                           <xmpG:green>49</xmpG:green>
                           <xmpG:blue>146</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=27 G=20 B=100</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>27</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>100</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=45 B=145</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>45</xmpG:green>
                           <xmpG:blue>145</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=147 G=39 B=143</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>147</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>143</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=158 G=0 B=93</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>158</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>93</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=212 G=20 B=90</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>212</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>90</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=30 B=121</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>30</xmpG:green>
                           <xmpG:blue>121</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=199 G=178 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>199</xmpG:red>
                           <xmpG:green>178</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=134 B=117</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>134</xmpG:green>
                           <xmpG:blue>117</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=115 G=99 B=87</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>115</xmpG:red>
                           <xmpG:green>99</xmpG:green>
                           <xmpG:blue>87</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=83 G=71 B=65</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>83</xmpG:red>
                           <xmpG:green>71</xmpG:green>
                           <xmpG:blue>65</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=198 G=156 B=109</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>198</xmpG:red>
                           <xmpG:green>156</xmpG:green>
                           <xmpG:blue>109</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=166 G=124 B=82</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>166</xmpG:red>
                           <xmpG:green>124</xmpG:green>
                           <xmpG:blue>82</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=98 B=57</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>98</xmpG:green>
                           <xmpG:blue>57</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=117 G=76 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>117</xmpG:red>
                           <xmpG:green>76</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=96 G=56 B=19</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>96</xmpG:red>
                           <xmpG:green>56</xmpG:green>
                           <xmpG:blue>19</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=66 G=33 B=11</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>66</xmpG:red>
                           <xmpG:green>33</xmpG:green>
                           <xmpG:blue>11</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Cold</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=56 M=0 Y=20 K=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>101</xmpG:red>
                           <xmpG:green>200</xmpG:green>
                           <xmpG:blue>208</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=51 M=43 Y=0 K=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>131</xmpG:red>
                           <xmpG:green>139</xmpG:green>
                           <xmpG:blue>197</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=26 M=41 Y=0 K=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>186</xmpG:red>
                           <xmpG:green>155</xmpG:green>
                           <xmpG:blue>201</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Grays</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=0 B=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=26 G=26 B=26</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>26</xmpG:red>
                           <xmpG:green>26</xmpG:green>
                           <xmpG:blue>26</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=51 G=51 B=51</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>51</xmpG:red>
                           <xmpG:green>51</xmpG:green>
                           <xmpG:blue>51</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=77 G=77 B=77</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>77</xmpG:red>
                           <xmpG:green>77</xmpG:green>
                           <xmpG:blue>77</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=102 B=102</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>102</xmpG:green>
                           <xmpG:blue>102</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=128 G=128 B=128</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>128</xmpG:red>
                           <xmpG:green>128</xmpG:green>
                           <xmpG:blue>128</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=153 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>153</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=179 G=179 B=179</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>179</xmpG:red>
                           <xmpG:green>179</xmpG:green>
                           <xmpG:blue>179</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=204 G=204 B=204</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>204</xmpG:red>
                           <xmpG:green>204</xmpG:green>
                           <xmpG:blue>204</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=230 G=230 B=230</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>230</xmpG:red>
                           <xmpG:green>230</xmpG:green>
                           <xmpG:blue>230</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=242 G=242 B=242</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>242</xmpG:red>
                           <xmpG:green>242</xmpG:green>
                           <xmpG:blue>242</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <pdf:Producer>Adobe PDF library 10.01</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -1045.97 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 1045.97 li
1006.84 1045.97 li
1006.84 0 li
cp
clp
28.3247 185.75 mo
30.8813 185.75 li
30.8813 173.74 li
28.3247 173.74 li
28.3247 185.75 li
cp
false sop
/0 
[/DeviceRGB] /CSA add_res
.0980392 .0941176 .0941176 rgb
f
37.9917 183.5 mo
35.813 183.5 li
35.813 175.991 li
38.0098 175.991 li
40.4585 175.991 41.7549 177.629 41.7549 179.736 cv
41.7549 181.789 40.3682 183.5 37.9917 183.5 cv
cp
37.9917 173.74 mo
33.2563 173.74 li
33.2563 185.75 li
38.0098 185.75 li
41.7549 185.75 44.3657 183.373 44.3657 179.736 cv
44.3657 176.135 41.7549 173.74 37.9917 173.74 cv
cp
f
46.1802 185.75 mo
54.6787 185.75 li
54.6787 183.5 li
48.7368 183.5 li
48.7368 180.763 li
54.5527 180.763 li
54.5527 178.512 li
48.7368 178.512 li
48.7368 175.991 li
54.6787 175.991 li
54.6787 173.74 li
46.1802 173.74 li
46.1802 185.75 li
cp
f
64.8662 181.285 mo
59.3022 173.74 li
56.6738 173.74 li
56.6738 185.75 li
59.2305 185.75 li
59.2305 177.917 li
64.9561 185.75 li
67.4229 185.75 li
67.4229 173.74 li
64.8662 173.74 li
64.8662 181.285 li
cp
f
69.0571 175.991 mo
72.5679 175.991 li
72.5679 185.75 li
75.1431 185.75 li
75.1431 175.991 li
78.6357 175.991 li
78.6357 173.74 li
69.0571 173.74 li
69.0571 175.991 li
cp
f
80.271 185.75 mo
82.8276 185.75 li
82.8276 173.74 li
80.271 173.74 li
80.271 185.75 li
cp
f
84.4644 175.991 mo
87.9751 175.991 li
87.9751 185.75 li
90.5503 185.75 li
90.5503 175.991 li
94.043 175.991 li
94.043 173.74 li
84.4644 173.74 li
84.4644 175.991 li
cp
f
103.276 173.74 mo
100.306 178.548 li
97.3345 173.74 li
94.4175 173.74 li
99.0269 180.834 li
99.0269 185.75 li
101.584 185.75 li
101.584 180.834 li
106.175 173.74 li
103.276 173.74 li
cp
f
26.4238 108.253 mo
25.3354 108.253 24.3789 107.462 24.2041 106.353 cv
24.0107 105.125 24.8496 103.974 26.0767 103.78 cv
48.6304 100.23 65 81.0503 65 58.1748 cv
65 56.9321 66.0073 55.9248 67.25 55.9248 cv
68.4927 55.9248 69.5 56.9321 69.5 58.1748 cv
69.5 83.2793 51.5322 104.329 26.7769 108.226 cv
26.6582 108.244 26.54 108.253 26.4238 108.253 cv
cp
f
110.594 91.397 mo
110.354 91.397 110.111 91.3584 109.872 91.2773 cv
108.695 90.8784 108.064 89.6011 108.463 88.4243 cv
111.756 78.7056 113.426 68.5283 113.426 58.1748 cv
113.426 32.7139 92.7114 12 67.25 12 cv
41.7886 12 21.0742 32.7139 21.0742 58.1748 cv
21.0742 59.4175 20.0669 60.4248 18.8242 60.4248 cv
17.5815 60.4248 16.5742 59.4175 16.5742 58.1748 cv
16.5742 30.2324 39.3071 7.5 67.25 7.5 cv
95.1929 7.5 117.926 30.2324 117.926 58.1748 cv
117.926 69.0205 116.176 79.6836 112.725 89.8687 cv
112.407 90.8062 111.532 91.397 110.594 91.397 cv
cp
f
31.7109 117.097 mo
30.6841 117.097 29.7563 116.39 29.519 115.346 cv
29.2432 114.134 30.002 112.929 31.2139 112.653 cv
56.4019 106.921 74.6836 84.0093 74.6836 58.1748 cv
74.6836 54.0767 71.3491 50.7422 67.25 50.7422 cv
63.1489 50.7422 59.8125 54.0767 59.8125 58.1748 cv
59.8125 79.354 43.9302 96.8887 22.8691 98.9629 cv
21.626 99.0791 20.5308 98.1807 20.4092 96.9443 cv
20.2876 95.7075 21.1914 94.6064 22.4277 94.4844 cv
41.1753 92.6382 55.3125 77.0288 55.3125 58.1748 cv
55.3125 51.5952 60.6675 46.2422 67.25 46.2422 cv
73.8301 46.2422 79.1836 51.5952 79.1836 58.1748 cv
79.1836 86.0903 59.4292 110.847 32.2124 117.041 cv
32.0439 117.079 31.876 117.097 31.7109 117.097 cv
cp
f
71.0078 137 mo
70.4321 137 69.856 136.78 69.417 136.341 cv
68.5044 135.428 67.6333 134.505 66.8164 133.586 cv
65.248 134.589 63.6973 135.513 62.1167 136.386 cv
61.0288 136.988 59.6592 136.593 59.0591 135.505 cv
58.458 134.417 58.8525 133.049 59.9399 132.448 cv
61.9683 131.327 63.9463 130.118 65.9878 128.75 cv
66.9956 128.075 68.355 128.32 69.0645 129.302 cv
69.1328 129.397 69.2114 129.481 69.2876 129.567 cv
70.3188 130.787 71.4199 131.98 72.5986 133.159 cv
73.4775 134.038 73.4775 135.462 72.5986 136.341 cv
72.1597 136.78 71.5835 137 71.0078 137 cv
cp
f
91.4883 128.794 mo
91.0449 128.794 90.6021 128.663 90.2329 128.418 cv
83.5679 123.987 78.1372 117.901 74.5293 110.817 cv
73.4194 108.641 72.4849 106.368 71.7344 104.024 cv
63.1245 113.983 52.0449 121.235 39.4458 125.116 cv
38.2593 125.481 36.9985 124.816 36.6328 123.628 cv
36.2671 122.44 36.9331 121.181 38.1206 120.815 cv
51.2402 116.774 62.6016 108.823 70.9761 97.8198 cv
71.5078 97.1206 72.3955 96.7949 73.2554 96.9863 cv
74.1128 97.1772 74.7808 97.8496 74.9658 98.708 cv
75.7256 102.228 76.9277 105.614 78.5386 108.774 cv
81.7866 115.151 86.6719 120.633 92.6685 124.633 cv
93.3071 125.031 93.7334 125.738 93.7334 126.544 cv
93.7334 127.787 92.731 128.794 91.4883 128.794 cv
cp
f
104.779 114.148 mo
104.442 114.148 104.101 114.072 103.778 113.912 cv
94.6079 109.344 88.9111 100.161 88.9111 89.9443 cv
88.9111 87.689 89.1987 85.437 89.7651 83.25 cv
89.7813 83.1885 89.7998 83.1274 89.8208 83.0674 cv
91.5239 78.2305 92.7256 73.2124 93.3936 68.1519 cv
93.8325 64.9385 94.0547 61.5854 94.0547 58.1748 cv
94.0547 43.395 82.0303 31.3711 67.25 31.3711 cv
52.4697 31.3711 40.4453 43.395 40.4453 58.1748 cv
40.4453 69.9946 30.8374 79.689 19.0273 79.7861 cv
19.021 79.7861 19.0146 79.7861 19.0083 79.7861 cv
17.7744 79.7861 16.769 78.791 16.7588 77.5547 cv
16.7485 76.312 17.7476 75.2964 18.9902 75.2861 cv
28.3394 75.2095 35.9453 67.5332 35.9453 58.1748 cv
35.9453 40.9141 49.9888 26.8711 67.25 26.8711 cv
84.5112 26.8711 98.5547 40.9141 98.5547 58.1748 cv
98.5547 61.7886 98.3188 65.3467 97.8535 68.751 cv
97.1504 74.0767 95.8867 79.3677 94.0981 84.4688 cv
93.6421 86.2588 93.4111 88.1006 93.4111 89.9443 cv
93.4111 98.4419 98.1523 106.082 105.784 109.883 cv
106.896 110.438 107.349 111.788 106.795 112.9 cv
106.402 113.691 105.606 114.148 104.779 114.148 cv
cp
f
98.874 121.985 mo
98.4995 121.985 98.1196 121.891 97.7705 121.694 cv
86.3296 115.239 79.2227 103.074 79.2227 89.9443 cv
79.2227 86.8022 79.6338 83.6602 80.4443 80.6035 cv
80.4653 80.5044 80.4922 80.4072 80.5259 80.314 cv
81.5571 77.4404 82.4058 74.4106 83.0479 71.3086 cv
83.9253 67.0044 84.3711 62.5835 84.3711 58.1748 cv
84.3711 48.7373 76.6904 41.0596 67.25 41.0596 cv
57.8076 41.0596 50.126 48.7373 50.126 58.1748 cv
50.126 74.9292 37.0293 88.6631 20.3096 89.4409 cv
19.0918 89.5024 18.0156 88.5396 17.9575 87.2979 cv
17.8999 86.0566 18.8594 85.0034 20.1006 84.9458 cv
34.4141 84.2798 45.626 72.5205 45.626 58.1748 cv
45.626 46.2563 55.3267 36.5596 67.25 36.5596 cv
79.1719 36.5596 88.8711 46.2563 88.8711 58.1748 cv
88.8711 62.8848 88.395 67.6084 87.4556 72.2144 cv
86.7793 75.481 85.8896 78.6699 84.8086 81.7017 cv
84.0879 84.3994 83.7227 87.1724 83.7227 89.9443 cv
83.7227 101.453 89.9526 112.117 99.9814 117.775 cv
101.064 118.385 101.446 119.758 100.835 120.84 cv
100.422 121.573 99.6592 121.985 98.874 121.985 cv
cp
f
109.33 105.589 mo
109.007 105.589 108.679 105.52 108.368 105.373 cv
102.431 102.562 98.5938 96.5059 98.5938 89.9443 cv
98.5938 88.6201 98.7524 87.2886 99.0654 85.9878 cv
99.0796 85.9272 99.0967 85.8677 99.1162 85.8091 cv
99.1538 85.6938 99.1978 85.5776 99.2427 85.4624 cv
100.597 81.4995 101.649 77.4326 102.371 73.3745 cv
103.17 69.0034 103.619 64.5459 103.708 60.1143 cv
103.733 59.4463 103.742 58.8154 103.742 58.1748 cv
103.742 38.0527 87.3721 21.6826 67.25 21.6826 cv
47.1279 21.6826 30.7578 38.0527 30.7578 58.1748 cv
30.7578 64.666 25.478 70.0195 18.9878 70.1084 cv
17.7129 70.0854 16.7241 69.1313 16.707 67.8892 cv
16.6904 66.6465 17.6836 65.6255 18.9263 65.6084 cv
22.9688 65.5532 26.2578 62.2188 26.2578 58.1748 cv
26.2578 35.5718 44.647 17.1826 67.25 17.1826 cv
89.853 17.1826 108.242 35.5718 108.242 58.1748 cv
108.242 58.874 108.232 59.5635 108.206 60.2466 cv
108.113 64.876 107.64 69.5762 106.799 74.1733 cv
106.037 78.4629 104.92 82.7705 103.484 86.9663 cv
103.473 86.998 103.461 87.0298 103.449 87.0615 cv
103.413 87.1567 li
103.201 88.0762 103.094 89.0137 103.094 89.9443 cv
103.094 94.7754 105.92 99.2349 110.294 101.305 cv
111.417 101.837 111.896 103.178 111.365 104.302 cv
110.98 105.114 110.172 105.589 109.33 105.589 cv
cp
f
82.2798 134.111 mo
81.7866 134.111 81.2905 133.95 80.8755 133.618 cv
78.0933 131.392 75.5327 128.908 73.2651 126.236 cv
71.6382 124.326 70.145 122.321 68.8091 120.253 cv
62.8071 125.1 56.1709 129.035 49.0474 131.968 cv
48.7754 132.08 48.4844 132.138 48.1904 132.138 cv
46.9478 132.138 45.9355 131.13 45.9355 129.888 cv
45.9355 128.901 46.5674 128.063 47.4502 127.759 cv
54.894 124.679 61.7729 120.438 67.897 115.153 cv
68.4043 114.715 69.0811 114.528 69.7417 114.638 cv
70.4028 114.75 70.9795 115.15 71.3149 115.73 cv
72.8408 118.369 74.6504 120.923 76.6934 123.321 cv
78.7773 125.777 81.1299 128.058 83.687 130.104 cv
84.6572 130.881 84.8145 132.297 84.0381 133.267 cv
83.5938 133.822 82.9399 134.111 82.2798 134.111 cv
cp
f
202.434 181.275 mo
196.87 173.731 li
194.242 173.731 li
194.242 185.741 li
196.798 185.741 li
196.798 177.908 li
202.524 185.741 li
204.991 185.741 li
204.991 173.731 li
202.434 173.731 li
202.434 181.275 li
cp
f
207.363 185.741 mo
215.862 185.741 li
215.862 183.49 li
209.92 183.49 li
209.92 180.753 li
215.736 180.753 li
215.736 178.502 li
209.92 178.502 li
209.92 175.982 li
215.862 175.982 li
215.862 173.731 li
207.363 173.731 li
207.363 185.741 li
cp
f
217.119 175.982 mo
220.63 175.982 li
220.63 185.741 li
223.205 185.741 li
223.205 175.982 li
226.697 175.982 li
226.697 173.731 li
217.119 173.731 li
217.119 175.982 li
cp
f
238.686 182.41 mo
236.417 173.731 li
234.418 173.731 li
232.131 182.41 li
230.025 173.731 li
227.162 173.731 li
230.601 185.741 li
233.32 185.741 li
235.409 177.494 li
237.515 185.741 li
240.234 185.741 li
243.655 173.731 li
240.792 173.731 li
238.686 182.41 li
cp
f
250.204 183.688 mo
247.972 183.688 246.549 181.978 246.549 179.745 cv
246.549 177.494 247.972 175.802 250.204 175.802 cv
252.419 175.802 253.841 177.494 253.841 179.745 cv
253.841 181.978 252.419 183.688 250.204 183.688 cv
cp
250.204 173.533 mo
246.567 173.533 243.92 176.126 243.92 179.745 cv
243.92 183.364 246.567 185.957 250.204 185.957 cv
253.823 185.957 256.47 183.364 256.47 179.745 cv
256.47 176.126 253.823 173.533 250.204 173.533 cv
cp
f
263.524 179.223 mo
260.823 179.223 li
260.823 175.982 li
263.524 175.982 li
264.532 175.982 265.307 176.594 265.307 177.584 cv
265.307 178.61 264.532 179.223 263.524 179.223 cv
cp
267.936 177.603 mo
267.936 175.37 266.387 173.731 263.884 173.731 cv
258.267 173.731 li
258.267 185.741 li
260.823 185.741 li
260.823 181.474 li
262.696 181.474 li
265.055 185.741 li
268.007 185.741 li
265.289 181.167 li
266.585 180.861 267.936 179.709 267.936 177.603 cv
cp
f
279.797 173.731 mo
276.646 173.731 li
272.397 179.079 li
272.397 173.731 li
269.84 173.731 li
269.84 185.741 li
272.397 185.741 li
272.397 182.05 li
273.333 180.915 li
276.97 185.741 li
280.121 185.741 li
275.026 179.367 li
279.797 173.731 li
cp
f
288.11 177.008 mo
288.11 176.288 288.723 175.82 289.803 175.82 cv
291.027 175.82 292.324 176.234 293.296 177.134 cv
294.719 175.226 li
293.53 174.127 291.946 173.551 290.037 173.551 cv
287.21 173.551 285.482 175.208 285.482 177.206 cv
285.482 181.726 292.396 180.267 292.396 182.355 cv
292.396 183.058 291.729 183.688 290.307 183.688 cv
288.651 183.688 287.336 182.932 286.49 182.05 cv
285.086 184.048 li
286.22 185.183 287.876 185.957 290.199 185.957 cv
293.422 185.957 295.007 184.3 295.007 182.104 cv
295.007 177.62 288.11 178.898 288.11 177.008 cv
cp
f
296.714 185.741 mo
305.212 185.741 li
305.212 183.49 li
299.271 183.49 li
299.271 180.753 li
305.086 180.753 li
305.086 178.502 li
299.271 178.502 li
299.271 175.982 li
305.212 175.982 li
305.212 173.731 li
296.714 173.731 li
296.714 185.741 li
cp
f
313.041 175.802 mo
314.266 175.802 315.346 176.576 315.85 177.548 cv
318.047 176.468 li
317.2 174.956 315.67 173.533 313.041 173.533 cv
309.422 173.533 306.631 176.036 306.631 179.745 cv
306.631 183.436 309.422 185.957 313.041 185.957 cv
315.67 185.957 317.2 184.499 318.047 183.004 cv
315.85 181.941 li
315.346 182.914 314.266 183.688 313.041 183.688 cv
310.845 183.688 309.26 182.014 309.26 179.745 cv
309.26 177.476 310.845 175.802 313.041 175.802 cv
cp
f
327.802 180.861 mo
327.802 182.536 326.847 183.688 324.993 183.688 cv
323.138 183.688 322.166 182.536 322.166 180.861 cv
322.166 173.731 li
319.573 173.731 li
319.573 180.933 li
319.573 183.904 321.338 185.957 324.993 185.957 cv
328.648 185.957 330.412 183.904 330.412 180.933 cv
330.412 173.731 li
327.802 173.731 li
327.802 180.861 li
cp
f
338.042 179.223 mo
335.342 179.223 li
335.342 175.982 li
338.042 175.982 li
339.051 175.982 339.825 176.594 339.825 177.584 cv
339.825 178.61 339.051 179.223 338.042 179.223 cv
cp
342.454 177.603 mo
342.454 175.37 340.905 173.731 338.403 173.731 cv
332.785 173.731 li
332.785 185.741 li
335.342 185.741 li
335.342 181.474 li
337.214 181.474 li
339.573 185.741 li
342.526 185.741 li
339.807 181.167 li
341.104 180.861 342.454 179.709 342.454 177.603 cv
cp
f
344.359 185.741 mo
346.916 185.741 li
346.916 173.731 li
344.359 173.731 li
344.359 185.741 li
cp
f
348.552 175.982 mo
352.063 175.982 li
352.063 185.741 li
354.638 185.741 li
354.638 175.982 li
358.131 175.982 li
358.131 173.731 li
348.552 173.731 li
348.552 175.982 li
cp
f
367.364 173.731 mo
364.394 178.539 li
361.422 173.731 li
358.506 173.731 li
363.115 180.825 li
363.115 185.741 li
365.672 185.741 li
365.672 180.825 li
370.263 173.731 li
367.364 173.731 li
cp
f
324.643 96.6035 mo
316.862 96.6035 li
316.862 92.1035 li
324.643 92.1035 li
337.248 92.1035 347.502 81.8584 347.502 69.2656 cv
347.502 56.6597 337.248 46.4043 324.643 46.4043 cv
323.816 46.4043 322.927 46.4609 321.924 46.5767 cv
319.942 46.8066 li
319.478 44.8662 li
315.339 27.5928 300.031 15.5293 282.251 15.5293 cv
264.479 15.5293 249.167 27.5938 245.015 44.8677 cv
244.548 46.8096 li
242.565 46.5762 li
241.58 46.4604 240.697 46.4043 239.865 46.4043 cv
227.259 46.4043 217.002 56.6597 217.002 69.2656 cv
217.002 81.8584 227.259 92.1035 239.865 92.1035 cv
247.646 92.1035 li
247.646 96.6035 li
239.865 96.6035 li
224.777 96.6035 212.502 84.3398 212.502 69.2656 cv
212.502 54.1787 224.777 41.9043 239.865 41.9043 cv
240.28 41.9043 240.702 41.9155 241.136 41.938 cv
246.404 23.6436 263.042 11.0293 282.251 11.0293 cv
301.469 11.0293 318.104 23.6436 323.359 41.939 cv
323.8 41.9155 324.226 41.9043 324.643 41.9043 cv
339.729 41.9043 352.002 54.1787 352.002 69.2656 cv
352.002 84.3398 339.729 96.6035 324.643 96.6035 cv
cp
.0952911 .0952911 .0952911 rgb
f
255.112 47.2935 mo
250.737 46.2417 li
254.251 31.624 267.21 21.415 282.251 21.415 cv
282.251 25.915 li
269.298 25.915 258.138 34.7061 255.112 47.2935 cv
cp
f
258.541 128.971 mo
305.964 128.971 li
305.964 94.0088 li
258.541 94.0088 li
258.541 128.971 li
cp
310.464 133.471 mo
254.041 133.471 li
254.041 89.5088 li
310.464 89.5088 li
310.464 133.471 li
cp
f
282.252 106.276 mo
280.63 106.276 279.31 107.597 279.31 109.22 cv
279.31 110.843 280.63 112.163 282.252 112.163 cv
283.875 112.163 285.195 110.843 285.195 109.22 cv
285.195 107.597 283.875 106.276 282.252 106.276 cv
cp
282.252 116.663 mo
278.148 116.663 274.81 113.324 274.81 109.22 cv
274.81 105.115 278.148 101.776 282.252 101.776 cv
286.356 101.776 289.695 105.115 289.695 109.22 cv
289.695 113.324 286.356 116.663 282.252 116.663 cv
cp
f
284.502 123.106 mo
280.002 123.106 li
280.002 114.413 li
284.502 114.413 li
284.502 123.106 li
cp
f
300.079 91.7588 mo
295.579 91.7588 li
295.579 81.373 li
295.579 77.813 294.192 74.4663 291.676 71.9492 cv
289.159 69.4326 285.813 68.0469 282.252 68.0469 cv
278.692 68.0469 275.346 69.4326 272.829 71.9492 cv
270.313 74.4658 268.926 77.8125 268.926 81.373 cv
268.926 91.7588 li
264.426 91.7588 li
264.426 81.373 li
264.426 76.6104 266.28 72.1338 269.647 68.7671 cv
273.014 65.4009 277.49 63.5469 282.252 63.5469 cv
287.015 63.5469 291.491 65.4009 294.857 68.7676 cv
298.225 72.1343 300.079 76.6108 300.079 81.373 cv
300.079 91.7588 li
cp
f
432.882 181.456 mo
434.754 176.289 li
436.627 181.456 li
432.882 181.456 li
cp
433.151 173.731 mo
428.524 185.741 li
431.423 185.741 li
432.18 183.707 li
437.329 183.707 li
438.085 185.741 li
440.984 185.741 li
436.356 173.731 li
433.151 173.731 li
cp
.0980392 .0941176 .0941176 rgb
f
447.318 175.802 mo
448.543 175.802 449.623 176.577 450.128 177.548 cv
452.324 176.468 li
451.478 174.956 449.947 173.534 447.318 173.534 cv
443.699 173.534 440.909 176.036 440.909 179.746 cv
440.909 183.436 443.699 185.957 447.318 185.957 cv
449.947 185.957 451.478 184.499 452.324 183.004 cv
450.128 181.942 li
449.623 182.915 448.543 183.688 447.318 183.688 cv
445.122 183.688 443.538 182.014 443.538 179.746 cv
443.538 177.476 445.122 175.802 447.318 175.802 cv
cp
f
459.685 175.802 mo
460.909 175.802 461.989 176.577 462.493 177.548 cv
464.69 176.468 li
463.844 174.956 462.313 173.534 459.685 173.534 cv
456.065 173.534 453.274 176.036 453.274 179.746 cv
453.274 183.436 456.065 185.957 459.685 185.957 cv
462.313 185.957 463.844 184.499 464.69 183.004 cv
462.493 181.942 li
461.989 182.915 460.909 183.688 459.685 183.688 cv
457.488 183.688 455.903 182.014 455.903 179.746 cv
455.903 177.476 457.488 175.802 459.685 175.802 cv
cp
f
466.217 185.741 mo
474.715 185.741 li
474.715 183.491 li
468.773 183.491 li
468.773 180.753 li
474.589 180.753 li
474.589 178.502 li
468.773 178.502 li
468.773 175.982 li
474.715 175.982 li
474.715 173.731 li
466.217 173.731 li
466.217 185.741 li
cp
f
478.907 177.008 mo
478.907 176.289 479.519 175.82 480.6 175.82 cv
481.823 175.82 483.12 176.234 484.093 177.134 cv
485.515 175.226 li
484.326 174.127 482.742 173.551 480.833 173.551 cv
478.007 173.551 476.278 175.208 476.278 177.207 cv
476.278 181.726 483.192 180.267 483.192 182.356 cv
483.192 183.058 482.525 183.688 481.104 183.688 cv
479.447 183.688 478.133 182.932 477.286 182.05 cv
475.882 184.048 li
477.017 185.183 478.673 185.957 480.995 185.957 cv
484.219 185.957 485.803 184.3 485.803 182.104 cv
485.803 177.621 478.907 178.899 478.907 177.008 cv
cp
f
489.707 177.008 mo
489.707 176.289 490.318 175.82 491.399 175.82 cv
492.623 175.82 493.92 176.234 494.893 177.134 cv
496.314 175.226 li
495.126 174.127 493.542 173.551 491.633 173.551 cv
488.807 173.551 487.078 175.208 487.078 177.207 cv
487.078 181.726 493.992 180.267 493.992 182.356 cv
493.992 183.058 493.325 183.688 491.903 183.688 cv
490.247 183.688 488.933 182.932 488.086 182.05 cv
486.682 184.048 li
487.816 185.183 489.473 185.957 491.795 185.957 cv
495.019 185.957 496.603 184.3 496.603 182.104 cv
496.603 177.621 489.707 178.899 489.707 177.008 cv
cp
f
507.672 183.491 mo
505.492 183.491 li
505.492 175.982 li
507.689 175.982 li
510.139 175.982 511.435 177.621 511.435 179.727 cv
511.435 181.78 510.048 183.491 507.672 183.491 cv
cp
507.672 173.731 mo
502.936 173.731 li
502.936 185.741 li
507.689 185.741 li
511.435 185.741 514.045 183.364 514.045 179.727 cv
514.045 176.126 511.435 173.731 507.672 173.731 cv
cp
f
515.859 185.741 mo
524.358 185.741 li
524.358 183.491 li
518.416 183.491 li
518.416 180.753 li
524.232 180.753 li
524.232 178.502 li
518.416 178.502 li
518.416 175.982 li
524.358 175.982 li
524.358 173.731 li
515.859 173.731 li
515.859 185.741 li
cp
f
534.546 181.276 mo
528.982 173.731 li
526.354 173.731 li
526.354 185.741 li
528.91 185.741 li
528.91 177.909 li
534.636 185.741 li
537.103 185.741 li
537.103 173.731 li
534.546 173.731 li
534.546 181.276 li
cp
f
539.475 185.741 mo
542.031 185.741 li
542.031 173.731 li
539.475 173.731 li
539.475 185.741 li
cp
f
544.406 185.741 mo
552.905 185.741 li
552.905 183.491 li
546.963 183.491 li
546.963 180.753 li
552.779 180.753 li
552.779 178.502 li
546.963 178.502 li
546.963 175.982 li
552.905 175.982 li
552.905 173.731 li
544.406 173.731 li
544.406 185.741 li
cp
f
559.636 183.491 mo
557.457 183.491 li
557.457 175.982 li
559.654 175.982 li
562.103 175.982 563.398 177.621 563.398 179.727 cv
563.398 181.78 562.012 183.491 559.636 183.491 cv
cp
559.636 173.731 mo
554.9 173.731 li
554.9 185.741 li
559.654 185.741 li
563.398 185.741 566.01 183.364 566.01 179.727 cv
566.01 176.126 563.398 173.731 559.636 173.731 cv
cp
f
497.267 15.748 mo
470.938 15.748 449.517 37.1685 449.517 63.498 cv
449.517 89.8276 470.938 111.248 497.267 111.248 cv
523.597 111.248 545.017 89.8276 545.017 63.498 cv
545.017 37.1685 523.597 15.748 497.267 15.748 cv
cp
497.267 115.748 mo
468.457 115.748 445.017 92.3086 445.017 63.498 cv
445.017 34.6875 468.457 11.248 497.267 11.248 cv
526.077 11.248 549.517 34.6875 549.517 63.498 cv
549.517 92.3086 526.077 115.748 497.267 115.748 cv
cp
.0952911 .0952911 .0952911 rgb
f
506.653 14.0137 mo
502.153 14.0137 li
502.153 9.38672 li
502.153 8.08057 501.645 6.85303 500.72 5.93018 cv
499.794 5.00879 498.566 4.5 497.267 4.5 cv
495.963 4.5 494.737 5.00732 493.815 5.92871 cv
492.89 6.85352 492.38 8.08105 492.38 9.38672 cv
492.38 14.0137 li
487.88 14.0137 li
487.88 9.38672 li
487.88 6.87793 488.858 4.51953 490.635 2.74561 cv
492.405 .975586 494.761 0 497.267 0 cv
499.765 0 502.119 .974121 503.896 2.74316 cv
505.675 4.51855 506.653 6.87695 506.653 9.38672 cv
506.653 14.0137 li
cp
f
492.38 142.25 mo
487.88 142.25 li
487.88 112.982 li
492.38 112.982 li
492.38 142.25 li
cp
f
506.653 142.25 mo
502.153 142.25 li
502.153 112.982 li
506.653 112.982 li
506.653 142.25 li
cp
f
497.267 33.248 mo
480.587 33.248 467.017 46.8184 467.017 63.498 cv
467.017 80.1777 480.587 93.748 497.267 93.748 cv
513.946 93.748 527.517 80.1777 527.517 63.498 cv
527.517 46.8184 513.946 33.248 497.267 33.248 cv
cp
497.267 98.248 mo
478.106 98.248 462.517 82.6592 462.517 63.498 cv
462.517 44.3369 478.106 28.748 497.267 28.748 cv
516.428 28.748 532.017 44.3369 532.017 63.498 cv
532.017 82.6592 516.428 98.248 497.267 98.248 cv
cp
f
518.658 88.0698 mo
472.695 42.1079 li
475.877 38.9263 li
521.84 84.8882 li
518.658 88.0698 li
cp
f
667.218 179.232 mo
664.517 179.232 li
664.517 175.991 li
667.218 175.991 li
668.226 175.991 669.001 176.604 669.001 177.594 cv
669.001 178.62 668.226 179.232 667.218 179.232 cv
cp
671.63 177.611 mo
671.63 175.379 670.081 173.74 667.577 173.74 cv
661.96 173.74 li
661.96 185.75 li
664.517 185.75 li
664.517 181.483 li
666.39 181.483 li
668.749 185.75 li
671.7 185.75 li
668.981 181.177 li
670.278 180.871 671.63 179.718 671.63 177.611 cv
cp
.0980392 .0941176 .0941176 rgb
f
673.534 185.75 mo
682.032 185.75 li
682.032 183.5 li
676.091 183.5 li
676.091 180.763 li
681.907 180.763 li
681.907 178.512 li
676.091 178.512 li
676.091 175.991 li
682.032 175.991 li
682.032 173.74 li
673.534 173.74 li
673.534 185.75 li
cp
f
686.495 173.74 mo
683.919 173.74 li
683.919 185.75 li
691.571 185.75 li
691.571 183.5 li
686.495 183.5 li
686.495 173.74 li
cp
f
693.298 185.75 mo
695.854 185.75 li
695.854 173.74 li
693.298 173.74 li
693.298 185.75 li
cp
f
701.325 181.465 mo
703.198 176.297 li
705.071 181.465 li
701.325 181.465 li
cp
701.597 173.74 mo
696.97 185.75 li
699.868 185.75 li
700.624 183.715 li
705.772 183.715 li
706.53 185.75 li
709.429 185.75 li
704.802 173.74 li
701.597 173.74 li
cp
f
716.411 183.5 mo
713.099 183.5 li
713.099 180.763 li
716.411 180.763 li
717.401 180.763 717.94 181.375 717.94 182.131 cv
717.94 182.995 717.364 183.5 716.411 183.5 cv
cp
713.099 175.991 mo
716.304 175.991 li
717.167 175.991 717.708 176.513 717.708 177.251 cv
717.708 178.026 717.167 178.512 716.304 178.512 cv
713.099 178.512 li
713.099 175.991 li
cp
718.247 179.556 mo
719.382 179.322 720.317 178.296 720.317 176.801 cv
720.317 175.199 719.147 173.74 716.86 173.74 cv
710.542 173.74 li
710.542 185.75 li
717.06 185.75 li
719.364 185.75 720.552 184.31 720.552 182.491 cv
720.552 180.997 719.544 179.754 718.247 179.556 cv
cp
f
722.476 185.75 mo
725.032 185.75 li
725.032 173.74 li
722.476 173.74 li
722.476 185.75 li
cp
f
729.874 173.74 mo
727.3 173.74 li
727.3 185.75 li
734.95 185.75 li
734.95 183.5 li
729.874 183.5 li
729.874 173.74 li
cp
f
736.677 185.75 mo
739.233 185.75 li
739.233 173.74 li
736.677 173.74 li
736.677 185.75 li
cp
f
740.87 175.991 mo
744.382 175.991 li
744.382 185.75 li
746.956 185.75 li
746.956 175.991 li
750.448 175.991 li
750.448 173.74 li
740.87 173.74 li
740.87 175.991 li
cp
f
759.683 173.74 mo
756.712 178.548 li
753.741 173.74 li
750.823 173.74 li
755.433 180.834 li
755.433 185.75 li
757.989 185.75 li
757.989 180.834 li
762.581 173.74 li
759.683 173.74 li
cp
f
662.532 36.4907 mo
662.532 64.1699 li
662.532 95.8677 682.488 124.177 712.272 134.864 cv
742.055 124.179 762.009 95.8696 762.009 64.1699 cv
762.009 36.4907 li
747.633 35.3945 736.123 23.8804 735.026 9.5 cv
689.527 9.5 li
688.431 23.8804 676.915 35.3945 662.532 36.4907 cv
cp
712.272 139.632 mo
711.534 139.375 li
679.533 128.267 658.032 98.0439 658.032 64.1699 cv
658.032 32.0762 li
660.282 32.0762 li
673.974 32.0762 685.112 20.939 685.112 7.25 cv
685.112 5 li
739.441 5 li
739.441 7.25 li
739.441 20.939 750.574 32.0762 764.259 32.0762 cv
766.509 32.0762 li
766.509 64.1699 li
766.509 98.0459 745.01 128.269 713.011 139.375 cv
712.272 139.632 li
cp
.0952911 .0952911 .0952911 rgb
f
671.532 43.8926 mo
671.532 64.1699 li
671.532 91.0713 687.492 114.935 712.272 125.217 cv
737.051 114.937 753.009 91.0732 753.009 64.1699 cv
753.009 43.8916 li
740.868 40.1621 731.352 30.6426 727.625 18.5 cv
696.928 18.5 li
693.199 30.644 683.678 40.1641 671.532 43.8926 cv
cp
712.272 130.069 mo
711.438 129.736 li
684.463 118.959 667.032 93.2231 667.032 64.1699 cv
667.032 40.4463 li
668.721 40.0112 li
680.651 36.937 689.973 27.6172 693.047 15.6885 cv
693.481 14 li
731.071 14 li
731.506 15.6885 li
734.579 27.6157 743.896 36.9355 755.82 40.0107 cv
757.509 40.4463 li
757.509 64.1699 li
757.509 93.2256 740.08 118.961 713.107 129.736 cv
712.272 130.069 li
cp
f
709.509 79.1304 mo
699.442 69.0625 li
702.624 65.8809 li
709.509 72.7661 li
721.918 60.3574 li
725.1 63.5391 li
709.509 79.1304 li
cp
f
712.271 50.1982 mo
701.932 50.1982 693.521 58.6094 693.521 68.9482 cv
693.521 79.2871 701.932 87.6982 712.271 87.6982 cv
722.609 87.6982 731.021 79.2871 731.021 68.9482 cv
731.021 58.6094 722.609 50.1982 712.271 50.1982 cv
cp
712.271 92.1982 mo
699.45 92.1982 689.021 81.7686 689.021 68.9482 cv
689.021 56.1279 699.45 45.6982 712.271 45.6982 cv
725.091 45.6982 735.521 56.1279 735.521 68.9482 cv
735.521 81.7686 725.091 92.1982 712.271 92.1982 cv
cp
f
888.3 396.471 mo
890.173 391.304 li
892.045 396.471 li
888.3 396.471 li
cp
888.569 388.747 mo
883.942 400.756 li
886.841 400.756 li
887.598 398.722 li
892.747 398.722 li
893.503 400.756 li
896.402 400.756 li
891.774 388.747 li
888.569 388.747 li
cp
.0980392 .0941176 .0941176 rgb
f
902.737 390.817 mo
903.962 390.817 905.042 391.592 905.546 392.564 cv
907.742 391.483 li
906.896 389.971 905.366 388.549 902.737 388.549 cv
899.118 388.549 896.327 391.051 896.327 394.761 cv
896.327 398.452 899.118 400.973 902.737 400.973 cv
905.366 400.973 906.896 399.514 907.742 398.02 cv
905.546 396.957 li
905.042 397.93 903.962 398.704 902.737 398.704 cv
900.54 398.704 898.956 397.029 898.956 394.761 cv
898.956 392.492 900.54 390.817 902.737 390.817 cv
cp
f
915.103 390.817 mo
916.327 390.817 917.407 391.592 917.911 392.564 cv
920.108 391.483 li
919.262 389.971 917.731 388.549 915.103 388.549 cv
911.483 388.549 908.692 391.051 908.692 394.761 cv
908.692 398.452 911.483 400.973 915.103 400.973 cv
917.731 400.973 919.262 399.514 920.108 398.02 cv
917.911 396.957 li
917.407 397.93 916.327 398.704 915.103 398.704 cv
912.906 398.704 911.321 397.029 911.321 394.761 cv
911.321 392.492 912.906 390.817 915.103 390.817 cv
cp
f
927.343 398.704 mo
925.11 398.704 923.688 396.993 923.688 394.761 cv
923.688 392.51 925.11 390.817 927.343 390.817 cv
929.558 390.817 930.979 392.51 930.979 394.761 cv
930.979 396.993 929.558 398.704 927.343 398.704 cv
cp
927.343 388.549 mo
923.705 388.549 921.059 391.142 921.059 394.761 cv
921.059 398.38 923.705 400.973 927.343 400.973 cv
930.962 400.973 933.608 398.38 933.608 394.761 cv
933.608 391.142 930.962 388.549 927.343 388.549 cv
cp
f
943.634 395.877 mo
943.634 397.551 942.679 398.704 940.824 398.704 cv
938.97 398.704 937.997 397.551 937.997 395.877 cv
937.997 388.747 li
935.405 388.747 li
935.405 395.949 li
935.405 398.92 937.169 400.973 940.824 400.973 cv
944.479 400.973 946.244 398.92 946.244 395.949 cv
946.244 388.747 li
943.634 388.747 li
943.634 395.877 li
cp
f
956.81 396.291 mo
951.245 388.747 li
948.616 388.747 li
948.616 400.756 li
951.173 400.756 li
951.173 392.924 li
956.899 400.756 li
959.366 400.756 li
959.366 388.747 li
956.81 388.747 li
956.81 396.291 li
cp
f
961 388.747 mo
961 390.998 li
964.511 390.998 li
964.511 400.756 li
967.086 400.756 li
967.086 390.998 li
970.579 390.998 li
970.579 388.747 li
961 388.747 li
cp
f
936.907 256.165 mo
935.314 256.165 934.019 257.46 934.019 259.053 cv
934.019 260.646 935.314 261.942 936.907 261.942 cv
938.501 261.942 939.797 260.646 939.797 259.053 cv
939.797 257.46 938.501 256.165 936.907 256.165 cv
cp
936.907 266.442 mo
932.833 266.442 929.519 263.127 929.519 259.053 cv
929.519 254.979 932.833 251.665 936.907 251.665 cv
940.981 251.665 944.297 254.979 944.297 259.053 cv
944.297 263.127 940.981 266.442 936.907 266.442 cv
cp
.0952911 .0952911 .0952911 rgb
f
957.346 256.165 mo
955.753 256.165 954.457 257.46 954.457 259.053 cv
954.457 260.646 955.753 261.942 957.346 261.942 cv
958.938 261.942 960.234 260.646 960.234 259.053 cv
960.234 257.46 958.938 256.165 957.346 256.165 cv
cp
957.346 266.442 mo
953.271 266.442 949.957 263.127 949.957 259.053 cv
949.957 254.979 953.271 251.665 957.346 251.665 cv
961.42 251.665 964.734 254.979 964.734 259.053 cv
964.734 263.127 961.42 266.442 957.346 266.442 cv
cp
f
936.907 237.834 mo
935.314 237.834 934.019 239.13 934.019 240.723 cv
934.019 242.316 935.314 243.612 936.907 243.612 cv
938.501 243.612 939.797 242.316 939.797 240.723 cv
939.797 239.13 938.501 237.834 936.907 237.834 cv
cp
936.907 248.112 mo
932.833 248.112 929.519 244.797 929.519 240.723 cv
929.519 236.649 932.833 233.334 936.907 233.334 cv
940.981 233.334 944.297 236.649 944.297 240.723 cv
944.297 244.797 940.981 248.112 936.907 248.112 cv
cp
f
957.346 237.833 mo
955.753 237.833 954.457 239.13 954.457 240.723 cv
954.457 242.316 955.753 243.612 957.346 243.612 cv
958.938 243.612 960.234 242.316 960.234 240.723 cv
960.234 239.13 958.938 237.833 957.346 237.833 cv
cp
957.346 248.112 mo
953.271 248.112 949.957 244.797 949.957 240.723 cv
949.957 236.648 953.271 233.333 957.346 233.333 cv
961.42 233.333 964.734 236.648 964.734 240.723 cv
964.734 244.797 961.42 248.112 957.346 248.112 cv
cp
f
916.47 219.503 mo
914.877 219.503 913.581 220.799 913.581 222.392 cv
913.581 223.985 914.877 225.282 916.47 225.282 cv
918.063 225.282 919.359 223.985 919.359 222.392 cv
919.359 220.799 918.063 219.503 916.47 219.503 cv
cp
916.47 229.782 mo
912.396 229.782 909.081 226.467 909.081 222.392 cv
909.081 218.318 912.396 215.003 916.47 215.003 cv
920.544 215.003 923.859 218.318 923.859 222.392 cv
923.859 226.467 920.544 229.782 916.47 229.782 cv
cp
f
936.907 219.503 mo
935.314 219.503 934.019 220.799 934.019 222.392 cv
934.019 223.985 935.314 225.282 936.907 225.282 cv
938.501 225.282 939.797 223.985 939.797 222.392 cv
939.797 220.799 938.501 219.503 936.907 219.503 cv
cp
936.907 229.782 mo
932.833 229.782 929.519 226.467 929.519 222.392 cv
929.519 218.318 932.833 215.003 936.907 215.003 cv
940.981 215.003 944.297 218.318 944.297 222.392 cv
944.297 226.467 940.981 229.782 936.907 229.782 cv
cp
f
957.346 219.503 mo
955.753 219.503 954.457 220.799 954.457 222.392 cv
954.457 223.985 955.753 225.282 957.346 225.282 cv
958.938 225.282 960.234 223.985 960.234 222.392 cv
960.234 220.799 958.938 219.503 957.346 219.503 cv
cp
957.346 229.782 mo
953.271 229.782 949.957 226.467 949.957 222.392 cv
949.957 218.318 953.271 215.003 957.346 215.003 cv
961.42 215.003 964.734 218.318 964.734 222.392 cv
964.734 226.467 961.42 229.782 957.346 229.782 cv
cp
f
966.406 331.992 mo
961.906 331.992 li
961.906 279.186 li
961.906 277.971 961.43 276.823 960.563 275.953 cv
959.702 275.092 958.56 274.616 957.351 274.616 cv
956.132 274.616 954.988 275.091 954.13 275.953 cv
953.25 276.828 952.771 277.973 952.771 279.186 cv
952.771 279.187 952.771 279.189 952.771 279.191 cv
952.771 280.434 951.763 281.441 950.521 281.441 cv
949.278 281.441 948.271 280.434 948.271 279.191 cv
948.271 277.968 947.796 276.818 946.936 275.953 cv
946.077 275.091 944.933 274.616 943.716 274.616 cv
942.504 274.616 941.363 275.091 940.504 275.954 cv
939.627 276.825 939.148 277.972 939.148 279.191 cv
939.148 280.434 938.141 281.441 936.898 281.441 cv
935.657 281.441 934.65 280.436 934.648 279.194 cv
934.648 279.193 934.648 279.192 934.648 279.191 cv
934.648 277.96 934.177 276.812 933.319 275.953 cv
932.458 275.092 931.312 274.616 930.095 274.616 cv
928.882 274.616 927.733 275.093 926.863 275.959 cv
926.007 276.817 925.532 277.965 925.532 279.186 cv
925.532 280.429 924.524 281.436 923.282 281.436 cv
922.04 281.436 921.032 280.429 921.032 279.186 cv
921.032 240.72 li
921.032 239.5 920.558 238.356 919.694 237.499 cv
918.832 236.634 917.688 236.162 916.468 236.162 cv
915.249 236.162 914.104 236.635 913.243 237.495 cv
912.383 238.35 911.911 239.494 911.911 240.72 cv
911.911 304.636 li
911.911 305.491 911.427 306.271 910.661 306.651 cv
909.897 307.033 908.982 306.946 908.301 306.429 cv
902.692 302.172 896.005 299.922 888.962 299.922 cv
886.449 299.922 884.405 301.969 884.405 304.485 cv
884.405 307 886.449 309.047 888.962 309.047 cv
901.616 309.047 911.911 319.34 911.911 331.992 cv
907.411 331.992 li
907.411 321.821 899.135 313.547 888.962 313.547 cv
883.968 313.547 879.905 309.482 879.905 304.485 cv
879.905 299.488 883.968 295.422 888.962 295.422 cv
895.534 295.422 901.834 297.14 907.411 300.422 cv
907.411 240.72 li
907.411 238.287 908.354 236.01 910.067 234.307 cv
911.774 232.603 914.049 231.662 916.468 231.662 cv
918.894 231.662 921.168 232.604 922.874 234.314 cv
924.585 236.015 925.532 238.292 925.532 240.72 cv
925.532 271.348 li
926.907 270.543 928.47 270.116 930.095 270.116 cv
932.512 270.116 934.788 271.059 936.503 272.771 cv
936.645 272.913 936.78 273.059 936.911 273.208 cv
937.043 273.058 937.182 272.912 937.324 272.77 cv
939.026 271.061 941.299 270.116 943.716 270.116 cv
946.138 270.116 948.414 271.061 950.124 272.778 cv
950.265 272.919 950.4 273.064 950.531 273.213 cv
950.665 273.062 950.804 272.914 950.949 272.77 cv
952.65 271.062 954.927 270.116 957.351 270.116 cv
959.761 270.116 962.033 271.06 963.749 272.774 cv
965.464 274.497 966.406 276.772 966.406 279.186 cv
966.406 331.992 li
cp
f
974.616 357.252 mo
970.116 357.252 li
970.116 334.242 li
903.699 334.242 li
903.699 357.252 li
899.199 357.252 li
899.199 329.742 li
974.616 329.742 li
974.616 357.252 li
cp
f
35.7856 388.747 mo
33.2104 388.747 li
33.2104 400.756 li
40.8628 400.756 li
40.8628 398.506 li
35.7856 398.506 li
35.7856 388.747 li
cp
.0980392 .0941176 .0941176 rgb
f
47.8105 398.704 mo
45.5781 398.704 44.1558 396.994 44.1558 394.761 cv
44.1558 392.51 45.5781 390.818 47.8105 390.818 cv
50.0254 390.818 51.4478 392.51 51.4478 394.761 cv
51.4478 396.994 50.0254 398.704 47.8105 398.704 cv
cp
47.8105 388.549 mo
44.1733 388.549 41.5269 391.142 41.5269 394.761 cv
41.5269 398.379 44.1733 400.972 47.8105 400.972 cv
51.4297 400.972 54.0767 398.379 54.0767 394.761 cv
54.0767 391.142 51.4297 388.549 47.8105 388.549 cv
cp
f
61.7065 390.818 mo
62.9312 390.818 64.0112 391.592 64.5156 392.564 cv
66.7124 391.484 li
65.8657 389.971 64.3354 388.549 61.7065 388.549 cv
58.0874 388.549 55.2969 391.051 55.2969 394.761 cv
55.2969 398.452 58.0874 400.972 61.7065 400.972 cv
64.3354 400.972 65.8657 399.514 66.7124 398.02 cv
64.5156 396.958 li
64.0112 397.93 62.9312 398.704 61.7065 398.704 cv
59.5103 398.704 57.9253 397.03 57.9253 394.761 cv
57.9253 392.492 59.5103 390.818 61.7065 390.818 cv
cp
f
78.1958 388.747 mo
75.0444 388.747 li
70.7954 394.094 li
70.7954 388.747 li
68.2388 388.747 li
68.2388 400.756 li
70.7954 400.756 li
70.7954 397.066 li
71.7319 395.931 li
75.3687 400.756 li
78.5195 400.756 li
73.4243 394.382 li
78.1958 388.747 li
cp
f
79.6865 400.756 mo
88.1851 400.756 li
88.1851 398.506 li
82.2432 398.506 li
82.2432 395.769 li
88.0591 395.769 li
88.0591 393.518 li
82.2432 393.518 li
82.2432 390.998 li
88.1851 390.998 li
88.1851 388.747 li
79.6865 388.747 li
79.6865 400.756 li
cp
f
94.9155 398.506 mo
92.7368 398.506 li
92.7368 390.998 li
94.9336 390.998 li
97.3823 390.998 98.6787 392.636 98.6787 394.743 cv
98.6787 396.795 97.292 398.506 94.9155 398.506 cv
cp
94.9155 388.747 mo
90.1802 388.747 li
90.1802 400.756 li
94.9336 400.756 li
98.6787 400.756 101.29 398.379 101.29 394.743 cv
101.29 391.142 98.6787 388.747 94.9155 388.747 cv
cp
f
25.4238 347.503 mo
109.076 347.503 li
109.076 273.646 li
25.4238 273.646 li
25.4238 347.503 li
cp
113.576 352.003 mo
20.9238 352.003 li
20.9238 269.146 li
113.576 269.146 li
113.576 352.003 li
cp
.0952911 .0952911 .0952911 rgb
f
67.252 300.581 mo
64.8169 300.581 62.8359 302.562 62.8359 304.997 cv
62.8359 307.431 64.8169 309.41 67.252 309.41 cv
69.6841 309.41 71.6631 307.431 71.6631 304.997 cv
71.6631 302.562 69.6841 300.581 67.252 300.581 cv
cp
67.252 313.91 mo
62.3354 313.91 58.3359 309.912 58.3359 304.997 cv
58.3359 300.081 62.3354 296.081 67.252 296.081 cv
72.1655 296.081 76.1631 300.081 76.1631 304.997 cv
76.1631 309.912 72.1655 313.91 67.252 313.91 cv
cp
f
69.502 322.817 mo
65.002 322.817 li
65.002 311.66 li
69.502 311.66 li
69.502 322.817 li
cp
f
111.326 288.337 mo
23.1738 288.337 li
23.1738 283.837 li
111.326 283.837 li
111.326 288.337 li
cp
f
111.326 337.312 mo
23.1738 337.312 li
23.1738 332.812 li
111.326 332.812 li
111.326 337.312 li
cp
f
89.4834 269.146 mo
92.9834 269.146 li
92.9834 252.737 li
92.9834 245.863 90.3066 239.4 85.4463 234.539 cv
80.5854 229.679 74.123 227.003 67.25 227.003 cv
60.377 227.003 53.9146 229.679 49.0537 234.54 cv
44.1934 239.399 41.5166 245.862 41.5166 252.737 cv
41.5166 269.146 li
45.0166 269.146 li
45.0166 252.737 li
45.0166 246.797 47.3291 241.213 51.5283 237.014 cv
55.7285 232.815 61.3115 230.503 67.25 230.503 cv
73.1885 230.503 78.7715 232.815 82.9717 237.014 cv
87.1709 241.213 89.4834 246.797 89.4834 252.737 cv
89.4834 269.146 li
cp
97.4834 273.646 mo
84.9834 273.646 li
84.9834 252.737 li
84.9834 248 83.1392 243.545 79.79 240.196 cv
76.4399 236.848 71.9863 235.003 67.25 235.003 cv
62.5137 235.003 58.0601 236.848 54.71 240.197 cv
51.3608 243.545 49.5166 247.999 49.5166 252.737 cv
49.5166 273.646 li
37.0166 273.646 li
37.0166 252.737 li
37.0166 244.66 40.1616 237.066 45.8721 231.357 cv
51.583 225.647 59.1748 222.503 67.25 222.503 cv
75.3252 222.503 82.917 225.647 88.6279 231.357 cv
94.3384 237.068 97.4834 244.661 97.4834 252.737 cv
97.4834 273.646 li
cp
f
243.329 395.877 mo
243.329 397.551 242.374 398.704 240.52 398.704 cv
238.665 398.704 237.693 397.551 237.693 395.877 cv
237.693 388.747 li
235.101 388.747 li
235.101 395.949 li
235.101 398.92 236.865 400.972 240.52 400.972 cv
244.175 400.972 245.939 398.92 245.939 395.949 cv
245.939 388.747 li
243.329 388.747 li
243.329 395.877 li
cp
.0980392 .0941176 .0941176 rgb
f
256.505 396.292 mo
250.941 388.747 li
248.313 388.747 li
248.313 400.756 li
250.869 400.756 li
250.869 392.924 li
256.595 400.756 li
259.062 400.756 li
259.062 388.747 li
256.505 388.747 li
256.505 396.292 li
cp
f
263.9 388.747 mo
261.326 388.747 li
261.326 400.756 li
268.978 400.756 li
268.978 398.506 li
263.9 398.506 li
263.9 388.747 li
cp
f
275.926 398.704 mo
273.693 398.704 272.271 396.994 272.271 394.761 cv
272.271 392.51 273.693 390.818 275.926 390.818 cv
278.141 390.818 279.563 392.51 279.563 394.761 cv
279.563 396.994 278.141 398.704 275.926 398.704 cv
cp
275.926 388.549 mo
272.288 388.549 269.642 391.142 269.642 394.761 cv
269.642 398.379 272.288 400.972 275.926 400.972 cv
279.545 400.972 282.191 398.379 282.191 394.761 cv
282.191 391.142 279.545 388.549 275.926 388.549 cv
cp
f
289.821 390.818 mo
291.046 390.818 292.126 391.592 292.631 392.564 cv
294.827 391.484 li
293.98 389.971 292.45 388.549 289.821 388.549 cv
286.202 388.549 283.412 391.051 283.412 394.761 cv
283.412 398.452 286.202 400.972 289.821 400.972 cv
292.45 400.972 293.98 399.514 294.827 398.02 cv
292.631 396.958 li
292.126 397.93 291.046 398.704 289.821 398.704 cv
287.625 398.704 286.041 397.03 286.041 394.761 cv
286.041 392.492 287.625 390.818 289.821 390.818 cv
cp
f
306.311 388.747 mo
303.16 388.747 li
298.91 394.094 li
298.91 388.747 li
296.354 388.747 li
296.354 400.756 li
298.91 400.756 li
298.91 397.066 li
299.847 395.931 li
303.483 400.756 li
306.635 400.756 li
301.539 394.382 li
306.311 388.747 li
cp
f
307.802 400.756 mo
316.3 400.756 li
316.3 398.506 li
310.358 398.506 li
310.358 395.769 li
316.174 395.769 li
316.174 393.518 li
310.358 393.518 li
310.358 390.998 li
316.3 390.998 li
316.3 388.747 li
307.802 388.747 li
307.802 400.756 li
cp
f
323.03 398.506 mo
320.852 398.506 li
320.852 390.998 li
323.049 390.998 li
325.497 390.998 326.794 392.636 326.794 394.743 cv
326.794 396.795 325.407 398.506 323.03 398.506 cv
cp
323.03 388.747 mo
318.295 388.747 li
318.295 400.756 li
323.049 400.756 li
326.794 400.756 329.404 398.379 329.404 394.743 cv
329.404 391.142 326.794 388.747 323.03 388.747 cv
cp
f
224.489 347.503 mo
308.142 347.503 li
308.142 273.646 li
224.489 273.646 li
224.489 347.503 li
cp
312.642 352.003 mo
219.989 352.003 li
219.989 269.146 li
312.642 269.146 li
312.642 352.003 li
cp
.0952911 .0952911 .0952911 rgb
f
266.317 300.581 mo
263.882 300.581 261.901 302.562 261.901 304.997 cv
261.901 307.431 263.882 309.41 266.317 309.41 cv
268.75 309.41 270.729 307.431 270.729 304.997 cv
270.729 302.562 268.75 300.581 266.317 300.581 cv
cp
266.317 313.91 mo
261.401 313.91 257.401 309.912 257.401 304.997 cv
257.401 300.081 261.401 296.081 266.317 296.081 cv
271.231 296.081 275.229 300.081 275.229 304.997 cv
275.229 309.912 271.231 313.91 266.317 313.91 cv
cp
f
268.567 322.817 mo
264.067 322.817 li
264.067 311.66 li
268.567 311.66 li
268.567 322.817 li
cp
f
310.392 288.337 mo
222.239 288.337 li
222.239 283.837 li
310.392 283.837 li
310.392 288.337 li
cp
f
310.392 337.312 mo
222.239 337.312 li
222.239 332.812 li
310.392 332.812 li
310.392 337.312 li
cp
f
336.516 269.146 mo
340.016 269.146 li
340.016 252.737 li
340.016 245.863 337.339 239.4 332.479 234.539 cv
327.618 229.679 321.155 227.003 314.282 227.003 cv
307.409 227.003 300.947 229.679 296.086 234.54 cv
291.226 239.399 288.549 245.862 288.549 252.737 cv
288.549 269.146 li
292.049 269.146 li
292.049 252.737 li
292.049 246.797 294.361 241.213 298.561 237.014 cv
302.761 232.815 308.344 230.503 314.282 230.503 cv
320.221 230.503 325.804 232.815 330.004 237.014 cv
334.203 241.213 336.516 246.797 336.516 252.737 cv
336.516 269.146 li
cp
344.516 273.646 mo
332.016 273.646 li
332.016 252.737 li
332.016 248 330.171 243.545 326.822 240.196 cv
323.472 236.848 319.019 235.003 314.282 235.003 cv
309.546 235.003 305.092 236.848 301.742 240.197 cv
298.393 243.545 296.549 247.999 296.549 252.737 cv
296.549 273.646 li
284.049 273.646 li
284.049 252.737 li
284.049 244.66 287.194 237.066 292.904 231.357 cv
298.615 225.647 306.207 222.503 314.282 222.503 cv
322.357 222.503 329.949 225.647 335.66 231.357 cv
341.371 237.068 344.516 244.661 344.516 252.737 cv
344.516 273.646 li
cp
f
468.965 388.747 mo
466.858 397.425 li
464.59 388.747 li
462.591 388.747 li
460.304 397.425 li
458.197 388.747 li
455.335 388.747 li
458.773 400.756 li
461.492 400.756 li
463.581 392.51 li
465.688 400.756 li
468.406 400.756 li
471.827 388.747 li
468.965 388.747 li
cp
.0980392 .0941176 .0941176 rgb
f
475.334 396.471 mo
477.206 391.304 li
479.079 396.471 li
475.334 396.471 li
cp
475.604 388.747 mo
470.977 400.756 li
473.875 400.756 li
474.632 398.722 li
479.781 398.722 li
480.537 400.756 li
483.437 400.756 li
478.809 388.747 li
475.604 388.747 li
cp
f
482.659 390.998 mo
486.17 390.998 li
486.17 400.756 li
488.745 400.756 li
488.745 390.998 li
492.237 390.998 li
492.237 388.747 li
482.659 388.747 li
482.659 390.998 li
cp
f
499.274 390.818 mo
500.499 390.818 501.579 391.592 502.084 392.564 cv
504.28 391.484 li
503.434 389.971 501.903 388.549 499.274 388.549 cv
495.655 388.549 492.865 391.051 492.865 394.761 cv
492.865 398.452 495.655 400.972 499.274 400.972 cv
501.903 400.972 503.434 399.514 504.28 398.02 cv
502.084 396.958 li
501.579 397.93 500.499 398.704 499.274 398.704 cv
497.078 398.704 495.493 397.03 495.493 394.761 cv
495.493 392.492 497.078 390.818 499.274 390.818 cv
cp
f
514.035 393.464 mo
508.363 393.464 li
508.363 388.747 li
505.807 388.747 li
505.807 400.756 li
508.363 400.756 li
508.363 395.697 li
514.035 395.697 li
514.035 400.756 li
516.61 400.756 li
516.61 388.747 li
514.035 388.747 li
514.035 393.464 li
cp
f
518.964 400.756 mo
527.463 400.756 li
527.463 398.506 li
521.521 398.506 li
521.521 395.769 li
527.337 395.769 li
527.337 393.518 li
521.521 393.518 li
521.521 390.998 li
527.463 390.998 li
527.463 388.747 li
518.964 388.747 li
518.964 400.756 li
cp
f
534.716 394.239 mo
532.015 394.239 li
532.015 390.998 li
534.716 390.998 li
535.724 390.998 536.498 391.61 536.498 392.6 cv
536.498 393.626 535.724 394.239 534.716 394.239 cv
cp
536.479 396.183 mo
537.776 395.877 539.127 394.725 539.127 392.618 cv
539.127 390.385 537.578 388.747 535.075 388.747 cv
529.458 388.747 li
529.458 400.756 li
532.015 400.756 li
532.015 396.49 li
533.888 396.49 li
536.246 400.756 li
539.198 400.756 li
536.479 396.183 li
cp
f
438.009 289.502 mo
430.767 289.502 li
430.767 285.002 li
438.009 285.002 li
438.009 289.502 li
cp
.0952911 .0952911 .0952911 rgb
f
433.616 306.639 mo
432.451 302.292 li
439.445 300.417 li
440.61 304.764 li
433.616 306.639 li
cp
f
440.801 322.451 mo
438.552 318.554 li
444.824 314.935 li
447.073 318.832 li
440.801 322.451 li
cp
f
451.837 335.867 mo
448.654 332.685 li
453.774 327.564 li
456.957 330.746 li
451.837 335.867 li
cp
f
465.967 345.969 mo
462.07 343.72 li
465.689 337.448 li
469.587 339.697 li
465.967 345.969 li
cp
f
482.23 352.069 mo
477.884 350.905 li
479.757 343.911 li
484.104 345.075 li
482.23 352.069 li
cp
f
499.519 353.752 mo
495.018 353.752 li
495.018 346.512 li
499.519 346.512 li
499.519 353.752 li
cp
f
512.309 352.07 mo
510.432 345.076 li
514.777 343.91 li
516.654 350.904 li
512.309 352.07 li
cp
f
528.57 345.968 mo
524.949 339.698 li
528.846 337.447 li
532.467 343.717 li
528.57 345.968 li
cp
f
542.699 335.865 mo
537.582 330.746 li
540.764 327.564 li
545.881 332.683 li
542.699 335.865 li
cp
f
553.733 322.451 mo
547.464 318.83 li
549.714 314.933 li
555.983 318.554 li
553.733 322.451 li
cp
f
560.921 306.637 mo
553.927 304.764 li
555.091 300.417 li
562.085 302.29 li
560.921 306.637 li
cp
f
563.767 289.502 mo
556.526 289.502 li
556.526 285.002 li
563.767 285.002 li
563.767 289.502 li
cp
f
555.091 274.088 mo
553.927 269.741 li
560.921 267.868 li
562.085 272.215 li
555.091 274.088 li
cp
f
549.712 259.572 mo
547.462 255.675 li
553.733 252.054 li
555.983 255.951 li
549.712 259.572 li
cp
f
540.762 246.941 mo
537.58 243.759 li
542.699 238.638 li
545.881 241.82 li
540.762 246.941 li
cp
f
528.847 237.057 mo
524.948 234.808 li
528.567 228.536 li
532.466 230.785 li
528.847 237.057 li
cp
f
514.777 230.595 mo
510.432 229.43 li
512.307 222.436 li
516.652 223.601 li
514.777 230.595 li
cp
f
495.018 227.995 mo
495.017 220.754 li
499.517 220.753 li
499.519 227.994 li
495.018 227.995 li
cp
f
479.758 230.595 mo
477.883 223.602 li
482.229 222.437 li
484.104 229.43 li
479.758 230.595 li
cp
f
465.691 237.058 mo
462.069 230.788 li
465.966 228.537 li
469.587 234.807 li
465.691 237.058 li
cp
f
453.776 246.941 mo
448.654 241.822 li
451.835 238.64 li
456.957 243.759 li
453.776 246.941 li
cp
f
444.824 259.572 mo
438.552 255.951 li
440.802 252.054 li
447.074 255.675 li
444.824 259.572 li
cp
f
439.447 274.088 mo
432.452 272.215 li
433.616 267.868 li
440.611 269.741 li
439.447 274.088 li
cp
f
497.267 266.504 mo
485.825 266.504 476.517 275.812 476.517 287.252 cv
476.517 298.695 485.825 308.004 497.267 308.004 cv
508.708 308.004 518.017 298.695 518.017 287.252 cv
518.017 275.812 508.708 266.504 497.267 266.504 cv
cp
497.267 312.504 mo
483.344 312.504 472.017 301.176 472.017 287.252 cv
472.017 273.331 483.344 262.004 497.267 262.004 cv
511.189 262.004 522.517 273.331 522.517 287.252 cv
522.517 301.176 511.189 312.504 497.267 312.504 cv
cp
f
497.268 283.754 mo
495.337 283.754 493.767 285.324 493.767 287.252 cv
493.767 289.182 495.337 290.752 497.268 290.752 cv
499.197 290.752 500.767 289.182 500.767 287.252 cv
500.767 285.324 499.197 283.754 497.268 283.754 cv
cp
497.268 295.252 mo
492.856 295.252 489.267 291.664 489.267 287.252 cv
489.267 282.842 492.856 279.254 497.268 279.254 cv
501.679 279.254 505.267 282.842 505.267 287.252 cv
505.267 291.664 501.679 295.252 497.268 295.252 cv
cp
f
448.157 287.252 mo
458.564 304.323 477.26 314.874 497.267 314.874 cv
517.275 314.874 535.971 304.323 546.376 287.252 cv
535.971 270.183 517.275 259.633 497.267 259.633 cv
477.26 259.633 458.564 270.183 448.157 287.252 cv
cp
497.267 319.374 mo
475.222 319.374 454.655 307.497 443.593 288.379 cv
442.941 287.252 li
443.593 286.125 li
454.656 267.009 475.223 255.133 497.267 255.133 cv
519.313 255.133 539.879 267.009 550.94 286.125 cv
551.593 287.252 li
550.94 288.379 li
539.88 307.497 519.313 319.374 497.267 319.374 cv
cp
f
483.944 287.252 mo
479.444 287.252 li
479.444 282.492 481.298 278.016 484.665 274.65 cv
487.846 277.832 li
485.33 280.348 483.944 283.694 483.944 287.252 cv
cp
f
680.015 392.015 mo
680.015 391.295 680.627 390.827 681.708 390.827 cv
682.932 390.827 684.228 391.241 685.2 392.141 cv
686.623 390.232 li
685.435 389.134 683.851 388.558 681.941 388.558 cv
679.114 388.558 677.386 390.214 677.386 392.213 cv
677.386 396.732 684.3 395.274 684.3 397.363 cv
684.3 398.065 683.634 398.695 682.212 398.695 cv
680.556 398.695 679.241 397.939 678.395 397.057 cv
676.99 399.055 li
678.124 400.189 679.78 400.963 682.104 400.963 cv
685.327 400.963 686.911 399.307 686.911 397.11 cv
686.911 392.627 680.015 393.906 680.015 392.015 cv
cp
.0980392 .0941176 .0941176 rgb
f
696.847 393.456 mo
691.175 393.456 li
691.175 388.738 li
688.618 388.738 li
688.618 400.748 li
691.175 400.748 li
691.175 395.688 li
696.847 395.688 li
696.847 400.748 li
699.421 400.748 li
699.421 388.738 li
696.847 388.738 li
696.847 393.456 li
cp
f
701.776 400.748 mo
710.274 400.748 li
710.274 398.497 li
704.333 398.497 li
704.333 395.76 li
710.148 395.76 li
710.148 393.509 li
704.333 393.509 li
704.333 390.989 li
710.274 390.989 li
710.274 388.738 li
701.776 388.738 li
701.776 400.748 li
cp
f
717.526 394.229 mo
714.826 394.229 li
714.826 390.989 li
717.526 390.989 li
718.535 390.989 719.31 391.601 719.31 392.591 cv
719.31 393.618 718.535 394.229 717.526 394.229 cv
cp
721.938 392.609 mo
721.938 390.376 720.39 388.738 717.888 388.738 cv
712.27 388.738 li
712.27 400.748 li
714.826 400.748 li
714.826 396.48 li
716.698 396.48 li
719.058 400.748 li
722.011 400.748 li
719.292 396.174 li
720.588 395.868 721.938 394.716 721.938 392.609 cv
cp
f
723.843 400.748 mo
726.399 400.748 li
726.399 388.738 li
723.843 388.738 li
723.843 400.748 li
cp
f
728.774 400.748 mo
731.331 400.748 li
731.331 395.76 li
737.147 395.76 li
737.147 393.509 li
731.331 393.509 li
731.331 390.989 li
737.273 390.989 li
737.273 388.738 li
728.774 388.738 li
728.774 400.748 li
cp
f
747.552 390.989 mo
747.552 388.738 li
739.053 388.738 li
739.053 400.748 li
741.609 400.748 li
741.609 395.76 li
747.425 395.76 li
747.425 393.509 li
741.609 393.509 li
741.609 390.989 li
747.552 390.989 li
cp
f
712.271 264.271 mo
699.598 264.271 689.288 274.581 689.288 287.252 cv
689.288 299.925 699.598 310.235 712.271 310.235 cv
724.943 310.235 735.253 299.925 735.253 287.252 cv
735.253 274.581 724.943 264.271 712.271 264.271 cv
cp
712.271 314.735 mo
697.116 314.735 684.788 302.406 684.788 287.252 cv
684.788 272.099 697.116 259.771 712.271 259.771 cv
727.425 259.771 739.753 272.099 739.753 287.252 cv
739.753 302.406 727.425 314.735 712.271 314.735 cv
cp
.0952911 .0952911 .0952911 rgb
f
712.271 291.969 mo
717.935 294.946 li
716.853 288.64 li
721.436 284.173 li
715.104 283.253 li
712.271 277.513 li
709.437 283.253 li
703.105 284.173 li
707.688 288.64 li
706.606 294.946 li
712.271 291.969 li
cp
723.911 303.171 mo
712.271 297.053 li
700.63 303.171 li
702.853 290.211 li
693.436 281.031 li
706.448 279.14 li
712.271 267.348 li
718.093 279.14 li
731.105 281.031 li
721.688 290.211 li
723.911 303.171 li
cp
f
757.422 311.688 mo
743.311 287.252 li
757.422 262.818 li
761.318 265.068 li
748.508 287.252 li
761.318 309.438 li
757.422 311.688 li
cp
f
706.963 340.818 mo
694.151 318.643 li
668.53 318.643 li
668.53 314.143 li
696.749 314.143 li
710.859 338.567 li
706.963 340.818 li
cp
f
696.749 260.363 mo
668.53 260.363 li
668.53 255.863 li
694.151 255.863 li
706.963 233.688 li
710.859 235.938 li
696.749 260.363 li
cp
f
667.119 311.688 mo
663.223 309.438 li
676.032 287.252 li
663.223 265.068 li
667.119 262.818 li
681.228 287.252 li
667.119 311.688 li
cp
f
717.578 340.818 mo
713.682 338.567 li
727.792 314.143 li
756.011 314.143 li
756.011 318.643 li
730.39 318.643 li
717.578 340.818 li
cp
f
756.011 260.363 mo
727.792 260.363 li
713.682 235.938 li
717.578 233.688 li
730.39 255.863 li
756.011 255.863 li
756.011 260.363 li
cp
f
712.271 224.503 mo
709.801 224.503 707.792 226.512 707.792 228.981 cv
707.792 231.45 709.801 233.459 712.271 233.459 cv
714.74 233.459 716.749 231.45 716.749 228.981 cv
716.749 226.512 714.74 224.503 712.271 224.503 cv
cp
712.271 237.959 mo
707.319 237.959 703.292 233.932 703.292 228.981 cv
703.292 224.031 707.319 220.003 712.271 220.003 cv
717.222 220.003 721.249 224.031 721.249 228.981 cv
721.249 233.932 717.222 237.959 712.271 237.959 cv
cp
f
712.271 341.045 mo
709.801 341.045 707.792 343.055 707.792 345.524 cv
707.792 347.993 709.801 350.002 712.271 350.002 cv
714.74 350.002 716.749 347.993 716.749 345.524 cv
716.749 343.055 714.74 341.045 712.271 341.045 cv
cp
712.271 354.502 mo
707.319 354.502 703.292 350.475 703.292 345.524 cv
703.292 340.573 707.319 336.545 712.271 336.545 cv
717.222 336.545 721.249 340.573 721.249 345.524 cv
721.249 350.475 717.222 354.502 712.271 354.502 cv
cp
f
762.742 311.909 mo
761.144 311.909 759.654 312.768 758.855 314.15 cv
757.622 316.287 758.358 319.031 760.497 320.266 cv
761.178 320.659 761.949 320.867 762.729 320.867 cv
764.327 320.867 765.815 320.009 766.613 318.627 cv
767.847 316.489 767.111 313.745 764.973 312.509 cv
764.293 312.117 763.521 311.909 762.742 311.909 cv
cp
762.729 325.367 mo
761.16 325.367 759.61 324.951 758.246 324.163 cv
753.959 321.687 752.484 316.186 754.959 311.899 cv
756.56 309.129 759.542 307.409 762.742 307.409 cv
764.311 307.409 765.86 307.825 767.224 308.612 cv
771.511 311.089 772.984 316.591 770.51 320.877 cv
768.911 323.647 765.93 325.367 762.729 325.367 cv
cp
f
762.729 253.639 mo
761.949 253.639 761.178 253.847 760.497 254.24 cv
759.462 254.838 758.721 255.804 758.411 256.959 cv
758.102 258.114 758.26 259.321 758.857 260.356 cv
759.655 261.737 761.145 262.596 762.742 262.596 cv
763.521 262.596 764.293 262.388 764.974 261.995 cv
767.111 260.761 767.848 258.016 766.614 255.877 cv
765.816 254.498 764.327 253.639 762.729 253.639 cv
cp
762.742 267.096 mo
759.542 267.096 756.56 265.375 754.961 262.606 cv
752.485 258.32 753.96 252.818 758.247 250.343 cv
759.61 249.556 761.16 249.139 762.729 249.139 cv
765.93 249.139 768.911 250.859 770.512 253.627 cv
772.984 257.917 771.51 263.418 767.224 265.893 cv
765.86 266.68 764.311 267.096 762.742 267.096 cv
cp
f
661.812 253.639 mo
660.214 253.639 658.726 254.497 657.928 255.878 cv
657.33 256.914 657.171 258.121 657.48 259.276 cv
657.79 260.432 658.531 261.397 659.567 261.995 cv
660.248 262.388 661.02 262.596 661.799 262.596 cv
663.396 262.596 664.886 261.737 665.684 260.356 cv
666.281 259.321 666.439 258.114 666.13 256.959 cv
665.82 255.804 665.079 254.838 664.044 254.24 cv
663.362 253.847 662.591 253.639 661.812 253.639 cv
cp
661.799 267.096 mo
660.23 267.096 658.681 266.68 657.317 265.893 cv
655.24 264.694 653.755 262.758 653.134 260.441 cv
652.514 258.125 652.832 255.706 654.031 253.628 cv
655.63 250.859 658.611 249.139 661.812 249.139 cv
663.38 249.139 664.931 249.555 666.295 250.343 cv
668.37 251.542 669.855 253.478 670.477 255.794 cv
671.098 258.11 670.779 260.53 669.58 262.606 cv
667.981 265.375 664.999 267.096 661.799 267.096 cv
cp
f
661.799 311.911 mo
661.02 311.911 660.248 312.119 659.567 312.512 cv
658.531 313.109 657.79 314.075 657.48 315.23 cv
657.171 316.385 657.33 317.592 657.928 318.627 cv
658.726 320.009 660.214 320.867 661.813 320.867 cv
662.592 320.867 663.364 320.659 664.046 320.266 cv
665.081 319.668 665.821 318.703 666.131 317.548 cv
666.44 316.393 666.281 315.187 665.684 314.151 cv
664.885 312.77 663.396 311.911 661.799 311.911 cv
cp
661.813 325.367 mo
658.611 325.367 655.63 323.647 654.031 320.877 cv
652.832 318.801 652.514 316.382 653.134 314.066 cv
653.755 311.749 655.24 309.813 657.317 308.614 cv
658.681 307.827 660.23 307.411 661.799 307.411 cv
664.998 307.411 667.979 309.131 669.58 311.9 cv
670.779 313.977 671.098 316.396 670.478 318.712 cv
669.857 321.029 668.372 322.965 666.296 324.163 cv
664.932 324.951 663.381 325.367 661.813 325.367 cv
cp
f
663.545 1041.47 mo
665.417 1036.3 li
667.29 1041.47 li
663.545 1041.47 li
cp
663.815 1033.74 mo
659.188 1045.75 li
662.087 1045.75 li
662.843 1043.72 li
667.992 1043.72 li
668.749 1045.75 li
671.647 1045.75 li
667.021 1033.74 li
663.815 1033.74 li
cp
.0980392 .0941176 .0941176 rgb
f
674.831 1037.02 mo
674.831 1036.3 675.442 1035.83 676.523 1035.83 cv
677.747 1035.83 679.044 1036.24 680.017 1037.14 cv
681.438 1035.24 li
680.251 1034.14 678.666 1033.56 676.757 1033.56 cv
673.931 1033.56 672.202 1035.22 672.202 1037.22 cv
672.202 1041.74 679.116 1040.28 679.116 1042.37 cv
679.116 1043.07 678.45 1043.7 677.027 1043.7 cv
675.371 1043.7 674.057 1042.94 673.21 1042.06 cv
671.806 1044.06 li
672.94 1045.19 674.597 1045.97 676.919 1045.97 cv
680.143 1045.97 681.728 1044.31 681.728 1042.11 cv
681.728 1037.63 674.831 1038.91 674.831 1037.02 cv
cp
f
685.631 1037.02 mo
685.631 1036.3 686.243 1035.83 687.323 1035.83 cv
688.548 1035.83 689.844 1036.24 690.816 1037.14 cv
692.239 1035.24 li
691.05 1034.14 689.466 1033.56 687.558 1033.56 cv
684.73 1033.56 683.002 1035.22 683.002 1037.22 cv
683.002 1041.74 689.916 1040.28 689.916 1042.37 cv
689.916 1043.07 689.249 1043.7 687.827 1043.7 cv
686.171 1043.7 684.856 1042.94 684.011 1042.06 cv
682.605 1044.06 li
683.74 1045.19 685.396 1045.97 687.72 1045.97 cv
690.942 1045.97 692.526 1044.31 692.526 1042.11 cv
692.526 1037.63 685.631 1038.91 685.631 1037.02 cv
cp
f
694.233 1045.75 mo
696.79 1045.75 li
696.79 1033.74 li
694.233 1033.74 li
694.233 1045.75 li
cp
f
701.362 1037.02 mo
701.362 1036.3 701.974 1035.83 703.055 1035.83 cv
704.278 1035.83 705.575 1036.24 706.548 1037.14 cv
707.97 1035.24 li
706.782 1034.14 705.197 1033.56 703.288 1033.56 cv
700.462 1033.56 698.733 1035.22 698.733 1037.22 cv
698.733 1041.74 705.647 1040.28 705.647 1042.37 cv
705.647 1043.07 704.981 1043.7 703.559 1043.7 cv
701.902 1043.7 700.588 1042.94 699.741 1042.06 cv
698.337 1044.06 li
699.472 1045.19 701.128 1045.97 703.45 1045.97 cv
706.674 1045.97 708.259 1044.31 708.259 1042.11 cv
708.259 1037.63 701.362 1038.91 701.362 1037.02 cv
cp
f
718.572 1033.74 mo
708.993 1033.74 li
708.993 1035.99 li
712.505 1035.99 li
712.505 1045.75 li
715.079 1045.75 li
715.079 1035.99 li
718.572 1035.99 li
718.572 1033.74 li
cp
f
722.152 1041.47 mo
724.024 1036.3 li
725.897 1041.47 li
722.152 1041.47 li
cp
722.423 1033.74 mo
717.795 1045.75 li
720.694 1045.75 li
721.45 1043.72 li
726.6 1043.72 li
727.356 1045.75 li
730.255 1045.75 li
725.628 1033.74 li
722.423 1033.74 li
cp
f
739.56 1041.29 mo
733.996 1033.74 li
731.368 1033.74 li
731.368 1045.75 li
733.925 1045.75 li
733.925 1037.92 li
739.649 1045.75 li
742.116 1045.75 li
742.116 1033.74 li
739.56 1033.74 li
739.56 1041.29 li
cp
f
750.323 1035.81 mo
751.548 1035.81 752.628 1036.59 753.132 1037.56 cv
755.328 1036.48 li
754.481 1034.97 752.952 1033.54 750.323 1033.54 cv
746.704 1033.54 743.913 1036.05 743.913 1039.76 cv
743.913 1043.45 746.704 1045.97 750.323 1045.97 cv
752.952 1045.97 754.481 1044.51 755.328 1043.01 cv
753.132 1041.95 li
752.628 1042.92 751.548 1043.7 750.323 1043.7 cv
748.126 1043.7 746.542 1042.02 746.542 1039.76 cv
746.542 1037.49 748.126 1035.81 750.323 1035.81 cv
cp
f
765.354 1035.99 mo
765.354 1033.74 li
756.854 1033.74 li
756.854 1045.75 li
765.354 1045.75 li
765.354 1043.5 li
759.411 1043.5 li
759.411 1040.76 li
765.228 1040.76 li
765.228 1038.51 li
759.411 1038.51 li
759.411 1035.99 li
765.354 1035.99 li
cp
f
696.797 900.787 mo
687.229 877.687 li
691.387 875.964 li
700.955 899.064 li
696.797 900.787 li
cp
.0952911 .0952911 .0952911 rgb
f
679.07 920.944 mo
655.971 911.379 li
657.691 907.221 li
680.791 916.786 li
679.07 920.944 li
cp
f
745.474 920.949 mo
743.751 916.792 li
766.845 907.218 li
768.567 911.375 li
745.474 920.949 li
cp
f
727.75 900.786 mo
723.592 899.065 li
733.156 875.965 li
737.314 877.686 li
727.75 900.786 li
cp
f
733.156 988.559 mo
723.592 965.459 li
727.75 963.739 li
737.314 986.838 li
733.156 988.559 li
cp
f
766.843 957.301 mo
743.745 947.728 li
745.468 943.572 li
768.565 953.145 li
766.843 957.301 li
cp
f
691.382 988.558 mo
687.225 986.835 li
696.796 963.74 li
700.953 965.462 li
691.382 988.558 li
cp
f
657.692 957.303 mo
655.97 953.147 li
679.067 943.572 li
680.79 947.728 li
657.692 957.303 li
cp
f
712.266 899.514 mo
703.521 899.514 695.299 902.921 689.116 909.108 cv
682.928 915.291 679.52 923.514 679.519 932.263 cv
679.518 941.013 682.923 949.235 689.108 955.415 cv
695.294 961.603 703.517 965.01 712.263 965.01 cv
721.011 965.01 729.236 961.602 735.426 955.415 cv
741.613 949.233 745.021 941.01 745.021 932.262 cv
745.021 923.514 741.613 915.292 735.427 909.111 cv
729.237 902.921 721.012 899.514 712.266 899.514 cv
cp
712.263 969.51 mo
702.314 969.51 692.962 965.634 685.927 958.597 cv
678.892 951.569 675.017 942.215 675.019 932.263 cv
675.02 922.311 678.896 912.958 685.935 905.925 cv
692.966 898.889 702.318 895.014 712.266 895.014 cv
722.214 895.014 731.569 898.89 738.607 905.928 cv
745.645 912.959 749.521 922.312 749.521 932.262 cv
749.521 942.213 745.645 951.566 738.606 958.597 cv
731.568 965.634 722.212 969.51 712.263 969.51 cv
cp
712.27 874.514 mo
696.845 874.514 682.343 880.521 671.436 891.426 cv
648.921 913.945 648.92 950.583 671.434 973.096 cv
682.34 984 696.841 990.006 712.267 990.007 cv
712.268 990.007 712.27 990.007 712.271 990.007 cv
727.694 990.008 742.195 984.001 753.105 973.095 cv
775.621 950.578 775.622 913.942 753.109 891.427 cv
742.199 880.521 727.695 874.514 712.27 874.514 cv
cp
712.271 994.507 mo
712.269 994.507 712.269 994.507 712.267 994.507 cv
695.639 994.506 680.008 988.033 668.252 976.278 cv
643.983 952.009 643.984 912.518 668.254 888.245 cv
680.011 876.489 695.643 870.014 712.27 870.014 cv
728.896 870.014 744.53 876.489 756.291 888.246 cv
780.559 912.514 780.558 952.005 756.287 976.277 cv
744.527 988.033 728.895 994.507 712.271 994.507 cv
cp
f
668.254 891.426 mo
662.912 886.083 li
666.094 882.901 li
671.436 888.245 li
668.254 891.426 li
cp
f
758.446 981.623 mo
753.104 976.277 li
756.288 973.095 li
761.63 978.441 li
758.446 981.623 li
cp
f
666.094 981.623 mo
662.912 978.441 li
668.256 973.095 li
671.438 976.277 li
666.094 981.623 li
cp
f
756.287 891.426 mo
753.105 888.245 li
758.447 882.901 li
761.629 886.083 li
756.287 891.426 li
cp
f
712.271 989.983 mo
717.346 989.983 722.135 990.628 725.755 991.8 cv
727.692 992.427 li
728.89 992.814 730.165 993.011 731.486 993.01 cv
736.687 993.01 741.679 990.078 743.909 985.713 cv
744.837 983.896 li
748.396 976.935 756.951 968.38 763.909 964.825 cv
765.72 963.899 li
771.287 961.056 774.362 953.632 772.437 947.687 cv
771.81 945.745 li
769.4 938.311 769.4 926.211 771.81 918.776 cv
772.437 916.837 li
774.362 910.89 771.287 903.466 765.721 900.625 cv
763.908 899.697 li
756.951 896.142 748.396 887.587 744.838 880.627 cv
743.909 878.809 li
741.679 874.445 736.687 871.512 731.486 871.512 cv
730.165 871.512 728.889 871.708 727.692 872.095 cv
725.755 872.722 li
722.135 873.894 717.346 874.54 712.271 874.54 cv
707.195 874.54 702.406 873.894 698.786 872.722 cv
696.848 872.095 li
695.65 871.708 694.375 871.512 693.055 871.512 cv
687.854 871.512 682.862 874.445 680.633 878.81 cv
679.705 880.626 li
676.147 887.587 667.592 896.142 660.634 899.698 cv
658.82 900.625 li
653.254 903.466 650.179 910.89 652.104 916.835 cv
652.732 918.777 li
655.141 926.211 655.141 938.311 652.732 945.747 cv
652.104 947.686 li
650.179 953.632 653.254 961.056 658.82 963.898 cv
660.634 964.825 li
667.592 968.38 676.147 976.935 679.705 983.895 cv
680.633 985.712 li
682.862 990.078 687.854 993.011 693.054 993.01 cv
694.375 993.01 695.651 992.814 696.848 992.427 cv
698.786 991.8 li
702.406 990.628 707.195 989.983 712.271 989.983 cv
cp
731.486 997.51 mo
729.694 997.511 727.952 997.241 726.308 996.708 cv
724.37 996.082 li
721.23 995.066 716.82 994.483 712.271 994.483 cv
707.721 994.483 703.311 995.066 700.171 996.082 cv
698.232 996.708 li
696.589 997.241 694.847 997.51 693.055 997.51 cv
686.207 997.511 679.604 993.592 676.625 987.759 cv
675.697 985.943 li
672.56 979.804 664.724 971.968 658.587 968.833 cv
656.773 967.906 li
649.229 964.053 645.213 954.361 647.823 946.3 cv
648.451 944.361 li
650.576 937.801 650.576 926.721 648.451 920.163 cv
647.823 918.221 li
645.213 910.162 649.229 900.469 656.773 896.617 cv
658.587 895.69 li
664.724 892.554 672.56 884.718 675.697 878.579 cv
676.625 876.763 li
679.604 870.93 686.207 867.012 693.055 867.012 cv
694.846 867.012 696.588 867.282 698.232 867.814 cv
700.171 868.441 li
703.311 869.457 707.721 870.04 712.271 870.04 cv
716.82 870.04 721.23 869.457 724.37 868.441 cv
726.308 867.814 li
727.952 867.282 729.694 867.012 731.486 867.012 cv
738.333 867.012 744.937 870.93 747.917 876.762 cv
748.845 878.58 li
751.983 884.718 759.819 892.554 765.956 895.69 cv
767.769 896.618 li
775.313 900.469 779.328 910.162 776.718 918.222 cv
776.091 920.161 li
773.965 926.721 773.965 937.801 776.091 944.36 cv
776.718 946.302 li
779.328 954.361 775.313 964.053 767.768 967.906 cv
765.957 968.832 li
759.819 971.968 751.983 979.804 748.844 985.944 cv
747.917 987.76 li
744.937 993.592 738.333 997.51 731.486 997.51 cv
cp
f
44.8223 611.495 mo
46.6943 606.327 li
48.5674 611.495 li
44.8223 611.495 li
cp
45.0918 603.77 mo
40.4648 615.78 li
43.3633 615.78 li
44.1201 613.745 li
49.2695 613.745 li
50.0254 615.78 li
52.9248 615.78 li
48.2969 603.77 li
45.0918 603.77 li
cp
.0980392 .0941176 .0941176 rgb
f
56.5039 603.77 mo
53.9297 603.77 li
53.9297 615.78 li
61.5811 615.78 li
61.5811 613.53 li
56.5039 613.53 li
56.5039 603.77 li
cp
f
63.3076 615.78 mo
71.8057 615.78 li
71.8057 613.53 li
65.8643 613.53 li
65.8643 610.792 li
71.6797 610.792 li
71.6797 608.542 li
65.8643 608.542 li
65.8643 606.021 li
71.8057 606.021 li
71.8057 603.77 li
63.3076 603.77 li
63.3076 615.78 li
cp
f
79.0586 609.262 mo
76.3574 609.262 li
76.3574 606.021 li
79.0586 606.021 li
80.0664 606.021 80.8408 606.633 80.8408 607.624 cv
80.8408 608.65 80.0664 609.262 79.0586 609.262 cv
cp
83.4697 607.641 mo
83.4697 605.409 81.9209 603.77 79.4189 603.77 cv
73.8008 603.77 li
73.8008 615.78 li
76.3574 615.78 li
76.3574 611.512 li
78.2305 611.512 li
80.5889 615.78 li
83.542 615.78 li
80.8232 611.207 li
82.1191 610.901 83.4697 609.749 83.4697 607.641 cv
cp
f
84.457 603.77 mo
84.457 606.021 li
87.9678 606.021 li
87.9678 615.78 li
90.543 615.78 li
90.543 606.021 li
94.0352 606.021 li
94.0352 603.77 li
84.457 603.77 li
cp
f
64.7754 438.753 mo
64.5811 434.257 li
66.1743 434.188 67.7871 434.187 69.3833 434.254 cv
69.1938 438.75 li
67.7261 438.689 66.2422 438.691 64.7754 438.753 cv
cp
77.9424 439.88 mo
76.5146 439.567 75.0522 439.313 73.5947 439.125 cv
74.1699 434.662 li
75.7573 434.867 77.3506 435.143 78.9063 435.484 cv
77.9424 439.88 li
cp
56.0327 439.895 mo
55.064 435.5 li
56.6201 435.157 58.2124 434.878 59.7969 434.672 cv
60.3779 439.134 li
58.9233 439.324 57.4614 439.58 56.0327 439.895 cv
cp
86.355 442.516 mo
84.9971 441.955 83.6016 441.449 82.2075 441.012 cv
83.5532 436.718 li
85.0723 437.194 86.5933 437.745 88.0728 438.356 cv
86.355 442.516 li
cp
47.6274 442.541 mo
45.9028 438.385 li
47.3809 437.771 48.9009 437.218 50.4214 436.74 cv
51.771 441.033 li
50.3774 441.471 48.9834 441.979 47.6274 442.541 cv
cp
94.1689 446.588 mo
92.9307 445.798 91.6455 445.055 90.3501 444.379 cv
92.4302 440.389 li
93.8418 441.125 95.2412 441.934 96.5898 442.795 cv
94.1689 446.588 li
cp
39.8179 446.625 mo
37.3892 442.836 li
38.7368 441.973 40.1357 441.161 41.5483 440.422 cv
43.6323 444.411 li
42.3374 445.087 41.0537 445.833 39.8179 446.625 cv
cp
101.156 451.963 mo
100.074 450.97 98.9375 450.015 97.7788 449.124 cv
100.522 445.557 li
101.783 446.527 103.02 447.566 104.198 448.647 cv
101.156 451.963 li
cp
32.8325 452.014 mo
29.7866 448.701 li
30.9629 447.619 32.1987 446.577 33.4595 445.604 cv
36.2085 449.167 li
35.0503 450.061 33.9146 451.019 32.8325 452.014 cv
cp
107.126 458.462 mo
106.234 457.304 105.278 456.168 104.282 455.084 cv
107.597 452.041 li
108.679 453.219 109.72 454.456 110.691 455.715 cv
107.126 458.462 li
cp
26.8711 458.521 mo
23.3037 455.777 li
24.2739 454.516 25.3135 453.278 26.3936 452.1 cv
29.7109 455.141 li
28.7178 456.224 27.7622 457.361 26.8711 458.521 cv
cp
111.879 465.887 mo
111.201 464.59 110.456 463.306 109.666 462.071 cv
113.456 459.645 li
114.317 460.991 115.128 462.39 115.867 463.803 cv
111.879 465.887 li
cp
22.1284 465.951 mo
18.1372 463.872 li
18.8735 462.458 19.6831 461.058 20.5435 459.71 cv
24.3364 462.131 li
23.5469 463.369 22.8037 464.654 22.1284 465.951 cv
cp
115.254 474.027 mo
114.814 472.629 114.307 471.234 113.747 469.883 cv
117.904 468.159 li
118.515 469.633 119.067 471.153 119.547 472.678 cv
115.254 474.027 li
cp
18.7637 474.095 mo
14.4688 472.751 li
14.9453 471.229 15.4961 469.708 16.1064 468.23 cv
20.2656 469.948 li
19.7061 471.303 19.2007 472.699 18.7637 474.095 cv
cp
117.149 482.637 mo
116.96 481.182 116.705 479.719 116.391 478.29 cv
120.785 477.323 li
121.128 478.88 121.406 480.473 121.612 482.057 cv
117.149 482.637 li
cp
16.8789 482.708 mo
12.416 482.133 li
12.6201 480.546 12.896 478.953 13.2368 477.397 cv
17.6323 478.359 li
17.3198 479.787 17.0664 481.25 16.8789 482.708 cv
cp
.0952911 .0952911 .0952911 rgb
f
122.077 491.4 mo
117.577 491.4 li
117.577 486.9 li
122.077 486.9 li
122.077 491.4 li
cp
.0980392 .0941176 .0941176 rgb
f
16.4609 491.4 mo
11.9609 491.4 li
11.9609 486.9 li
16.4609 486.9 li
16.4609 491.4 li
cp
f
30.4609 548.65 mo
103.577 548.65 li
103.577 489.265 li
103.577 479.499 99.7759 470.317 92.8745 463.41 cv
85.9663 456.507 76.7842 452.705 67.021 452.705 cv
57.2563 452.705 48.0757 456.507 41.1699 463.411 cv
34.2642 470.318 30.4609 479.5 30.4609 489.265 cv
30.4609 548.65 li
cp
108.077 553.15 mo
25.9609 553.15 li
25.9609 489.265 li
25.9609 478.298 30.2324 467.986 37.9878 460.229 cv
45.7441 452.475 56.0547 448.205 67.021 448.205 cv
77.9854 448.205 88.2974 452.475 96.0566 460.228 cv
103.808 467.986 108.077 478.297 108.077 489.265 cv
108.077 553.15 li
cp
.0952911 .0952911 .0952911 rgb
f
48.916 471.156 mo
45.7334 467.976 li
51.4136 462.292 58.9736 459.162 67.021 459.162 cv
67.021 463.662 li
60.1763 463.662 53.7466 466.323 48.916 471.156 cv
cp
f
41.4199 489.265 mo
36.9199 489.265 li
36.9199 483.521 38.5352 477.947 41.5913 473.143 cv
45.3882 475.559 li
42.792 479.639 41.4199 484.379 41.4199 489.265 cv
cp
f
19.0454 568.74 mo
114.994 568.74 li
114.994 562.314 li
114.994 559.866 114.041 557.565 112.312 555.834 cv
110.583 554.103 108.28 553.15 105.827 553.15 cv
28.2109 553.15 li
25.7642 553.15 23.4629 554.103 21.7314 555.834 cv
19.999 557.566 19.0454 559.867 19.0454 562.314 cv
19.0454 568.74 li
cp
119.494 573.24 mo
14.5454 573.24 li
14.5454 562.314 li
14.5454 558.665 15.9678 555.233 18.5503 552.652 cv
21.1309 550.072 24.562 548.65 28.2109 548.65 cv
105.827 548.65 li
109.483 548.65 112.917 550.072 115.495 552.654 cv
118.073 555.233 119.494 558.665 119.494 562.314 cv
119.494 573.24 li
cp
f
126.607 573.24 mo
7.89307 573.24 li
7.89307 568.74 li
126.607 568.74 li
126.607 573.24 li
cp
f
69.271 550.9 mo
64.771 550.9 li
64.771 518.939 li
69.271 518.939 li
69.271 550.9 li
cp
f
67.021 496.535 mo
61.4629 496.535 56.9409 501.056 56.9409 506.613 cv
56.9409 512.169 61.4629 516.689 67.021 516.689 cv
72.5767 516.689 77.0962 512.169 77.0962 506.613 cv
77.0962 501.056 72.5767 496.535 67.021 496.535 cv
cp
67.021 521.189 mo
58.9814 521.189 52.4409 514.65 52.4409 506.613 cv
52.4409 498.574 58.9814 492.035 67.021 492.035 cv
75.0576 492.035 81.5962 498.574 81.5962 506.613 cv
81.5962 514.65 75.0576 521.189 67.021 521.189 cv
cp
f
258.385 609.261 mo
255.684 609.261 li
255.684 606.021 li
258.385 606.021 li
259.393 606.021 260.167 606.632 260.167 607.624 cv
260.167 608.65 259.393 609.261 258.385 609.261 cv
cp
262.796 607.642 mo
262.796 605.409 261.247 603.77 258.745 603.77 cv
253.127 603.77 li
253.127 615.78 li
255.684 615.78 li
255.684 611.513 li
257.557 611.513 li
259.915 615.78 li
262.868 615.78 li
260.149 611.207 li
261.445 610.9 262.796 609.748 262.796 607.642 cv
cp
0 0 0 rgb
f
267.798 611.495 mo
269.67 606.328 li
271.543 611.495 li
267.798 611.495 li
cp
268.067 603.77 mo
263.44 615.78 li
266.339 615.78 li
267.096 613.746 li
272.245 613.746 li
273.001 615.78 li
275.9 615.78 li
271.272 603.77 li
268.067 603.77 li
cp
f
281.748 613.529 mo
279.569 613.529 li
279.569 606.021 li
281.767 606.021 li
284.215 606.021 285.512 607.66 285.512 609.766 cv
285.512 611.818 284.125 613.529 281.748 613.529 cv
cp
281.748 603.77 mo
277.013 603.77 li
277.013 615.78 li
281.767 615.78 li
285.512 615.78 288.122 613.404 288.122 609.766 cv
288.122 606.166 285.512 603.77 281.748 603.77 cv
cp
f
292.422 611.495 mo
294.294 606.328 li
296.167 611.495 li
292.422 611.495 li
cp
292.691 603.77 mo
288.064 615.78 li
290.963 615.78 li
291.72 613.746 li
296.869 613.746 li
297.625 615.78 li
300.524 615.78 li
295.896 603.77 li
292.691 603.77 li
cp
f
306.895 609.261 mo
304.193 609.261 li
304.193 606.021 li
306.895 606.021 li
307.902 606.021 308.677 606.632 308.677 607.624 cv
308.677 608.65 307.902 609.261 306.895 609.261 cv
cp
308.659 611.207 mo
309.955 610.9 311.306 609.748 311.306 607.642 cv
311.306 605.409 309.757 603.77 307.255 603.77 cv
301.637 603.77 li
301.637 615.78 li
304.193 615.78 li
304.193 611.513 li
306.066 611.513 li
308.425 615.78 li
311.378 615.78 li
308.659 611.207 li
cp
f
282.252 443.013 mo
249.582 443.013 223.002 469.593 223.002 502.263 cv
223.002 534.934 249.582 561.514 282.252 561.514 cv
314.923 561.514 341.502 534.934 341.502 502.263 cv
341.502 469.593 314.923 443.013 282.252 443.013 cv
cp
282.252 566.014 mo
247.101 566.014 218.502 537.416 218.502 502.263 cv
218.502 467.111 247.101 438.513 282.252 438.513 cv
317.404 438.513 346.002 467.111 346.002 502.263 cv
346.002 537.416 317.404 566.014 282.252 566.014 cv
cp
.0952911 .0952911 .0952911 rgb
f
282.252 451.173 mo
254.081 451.173 231.162 474.092 231.162 502.263 cv
231.162 530.435 254.081 553.354 282.252 553.354 cv
310.424 553.354 333.343 530.435 333.343 502.263 cv
333.343 474.092 310.424 451.173 282.252 451.173 cv
cp
282.252 557.854 mo
251.6 557.854 226.662 532.917 226.662 502.263 cv
226.662 471.611 251.6 446.673 282.252 446.673 cv
312.905 446.673 337.843 471.611 337.843 502.263 cv
337.843 532.917 312.905 557.854 282.252 557.854 cv
cp
f
282.252 497.24 mo
279.483 497.24 277.229 499.493 277.229 502.263 cv
277.229 505.033 279.483 507.286 282.252 507.286 cv
285.023 507.286 287.277 505.033 287.277 502.263 cv
287.277 499.493 285.023 497.24 282.252 497.24 cv
cp
282.252 511.786 mo
277.001 511.786 272.729 507.514 272.729 502.263 cv
272.729 497.012 277.001 492.74 282.252 492.74 cv
287.504 492.74 291.777 497.012 291.777 502.263 cv
291.777 507.514 287.504 511.786 282.252 511.786 cv
cp
f
284.502 494.99 mo
280.002 494.99 li
280.002 440.763 li
284.502 440.763 li
284.502 494.99 li
cp
f
284.502 564.16 mo
280.002 564.16 li
280.002 508.396 li
284.502 508.396 li
284.502 564.16 li
cp
f
274.979 504.513 mo
220.752 504.513 li
220.752 500.013 li
274.979 500.013 li
274.979 504.513 li
cp
f
282.252 542.497 mo
260.067 542.497 242.018 524.448 242.018 502.263 cv
242.018 480.078 260.067 462.028 282.252 462.028 cv
282.252 466.528 li
262.548 466.528 246.518 482.559 246.518 502.263 cv
246.518 521.967 262.548 537.997 282.252 537.997 cv
301.202 537.997 316.753 523.173 317.917 504.513 cv
289.525 504.513 li
289.525 500.013 li
322.487 500.013 li
322.487 502.263 li
322.487 524.448 304.438 542.497 282.252 542.497 cv
cp
f
282.253 527.143 mo
268.535 527.143 257.374 515.982 257.374 502.263 cv
257.374 488.545 268.535 477.384 282.253 477.384 cv
282.253 481.884 li
271.016 481.884 261.874 491.026 261.874 502.263 cv
261.874 513.5 271.016 522.643 282.253 522.643 cv
293.49 522.643 302.632 513.5 302.632 502.263 cv
307.132 502.263 li
307.132 515.982 295.971 527.143 282.253 527.143 cv
cp
f
282.252 497.24 mo
279.483 497.24 277.229 499.493 277.229 502.263 cv
277.229 505.033 279.483 507.286 282.252 507.286 cv
285.023 507.286 287.277 505.033 287.277 502.263 cv
287.277 499.493 285.023 497.24 282.252 497.24 cv
cp
282.252 511.786 mo
277.001 511.786 272.729 507.514 272.729 502.263 cv
272.729 497.012 277.001 492.74 282.252 492.74 cv
287.504 492.74 291.777 497.012 291.777 502.263 cv
291.777 507.514 287.504 511.786 282.252 511.786 cv
cp
f
318.315 478.202 mo
318.315 480.523 316.434 482.404 314.113 482.404 cv
311.792 482.404 309.911 480.523 309.911 478.202 cv
309.911 475.881 311.792 474 314.113 474 cv
316.434 474 318.315 475.881 318.315 478.202 cv
cp
f
243.162 519.635 mo
243.162 520.799 242.221 521.735 241.061 521.735 cv
239.9 521.735 238.959 520.799 238.959 519.635 cv
238.959 518.474 239.9 517.535 241.061 517.535 cv
242.221 517.535 243.162 518.474 243.162 519.635 cv
cp
f
265.55 479.729 mo
265.55 481.471 264.14 482.881 262.398 482.881 cv
260.657 482.881 259.246 481.471 259.246 479.729 cv
259.246 477.989 260.657 476.578 262.398 476.578 cv
264.14 476.578 265.55 477.989 265.55 479.729 cv
cp
f
295.837 486.14 mo
295.837 487.01 295.132 487.715 294.261 487.715 cv
293.391 487.715 292.686 487.01 292.686 486.14 cv
292.686 485.269 293.391 484.564 294.261 484.564 cv
295.132 484.564 295.837 485.269 295.837 486.14 cv
cp
f
298.448 545.279 mo
298.448 547.02 297.038 548.428 295.297 548.428 cv
293.555 548.428 292.145 547.02 292.145 545.279 cv
292.145 543.539 293.555 542.125 295.297 542.125 cv
297.038 542.125 298.448 543.539 298.448 545.279 cv
cp
f
453.167 611.486 mo
455.04 606.318 li
456.913 611.486 li
453.167 611.486 li
cp
453.438 603.761 mo
448.81 615.771 li
451.709 615.771 li
452.465 613.736 li
457.615 613.736 li
458.371 615.771 li
461.27 615.771 li
456.643 603.761 li
453.438 603.761 li
cp
.0980392 .0941176 .0941176 rgb
f
460.493 606.011 mo
464.003 606.011 li
464.003 615.771 li
466.579 615.771 li
466.579 606.011 li
470.071 606.011 li
470.071 603.761 li
460.493 603.761 li
460.493 606.011 li
cp
f
470.968 606.011 mo
474.479 606.011 li
474.479 615.771 li
477.054 615.771 li
477.054 606.011 li
480.547 606.011 li
480.547 603.761 li
470.968 603.761 li
470.968 606.011 li
cp
f
482.182 615.771 mo
490.681 615.771 li
490.681 613.521 li
484.739 613.521 li
484.739 610.783 li
490.555 610.783 li
490.555 608.533 li
484.739 608.533 li
484.739 606.011 li
490.681 606.011 li
490.681 603.761 li
482.182 603.761 li
482.182 615.771 li
cp
f
500.868 611.306 mo
495.304 603.761 li
492.676 603.761 li
492.676 615.771 li
495.232 615.771 li
495.232 607.939 li
500.958 615.771 li
503.425 615.771 li
503.425 603.761 li
500.868 603.761 li
500.868 611.306 li
cp
f
505.059 606.011 mo
508.57 606.011 li
508.57 615.771 li
511.145 615.771 li
511.145 606.011 li
514.638 606.011 li
514.638 603.761 li
505.059 603.761 li
505.059 606.011 li
cp
f
516.273 615.771 mo
518.83 615.771 li
518.83 603.761 li
516.273 603.761 li
516.273 615.771 li
cp
f
526.912 613.718 mo
524.68 613.718 523.258 612.007 523.258 609.775 cv
523.258 607.525 524.68 605.832 526.912 605.832 cv
529.127 605.832 530.549 607.525 530.549 609.775 cv
530.549 612.007 529.127 613.718 526.912 613.718 cv
cp
526.912 603.564 mo
523.275 603.564 520.629 606.156 520.629 609.775 cv
520.629 613.394 523.275 615.986 526.912 615.986 cv
530.531 615.986 533.178 613.394 533.178 609.775 cv
533.178 606.156 530.531 603.564 526.912 603.564 cv
cp
f
543.167 603.761 mo
543.167 611.306 li
537.604 603.761 li
534.975 603.761 li
534.975 615.771 li
537.531 615.771 li
537.531 607.939 li
543.257 615.771 li
545.724 615.771 li
545.724 603.761 li
543.167 603.761 li
cp
f
517.165 561.188 mo
477.37 561.188 li
477.37 548.006 li
481.87 548.006 li
481.87 556.688 li
512.665 556.688 li
512.665 548.006 li
517.165 548.006 li
517.165 561.188 li
cp
.0952911 .0952911 .0952911 rgb
f
524.985 561.188 mo
469.548 561.188 li
469.548 556.688 li
524.985 556.688 li
524.985 561.188 li
cp
f
439.517 524.639 mo
555.017 524.639 li
555.017 449.833 li
555.017 449.306 554.809 448.806 554.43 448.426 cv
554.059 448.053 553.563 447.848 553.032 447.848 cv
441.503 447.848 li
440.973 447.848 440.473 448.056 440.095 448.432 cv
439.725 448.804 439.517 449.304 439.517 449.833 cv
439.517 524.639 li
cp
559.517 529.139 mo
435.017 529.139 li
435.017 449.833 li
435.017 448.107 435.689 446.48 436.911 445.252 cv
438.146 444.021 439.774 443.348 441.503 443.348 cv
553.032 443.348 li
554.769 443.348 556.397 444.024 557.619 445.251 cv
558.843 446.48 559.517 448.107 559.517 449.833 cv
559.517 529.139 li
cp
f
447.517 516.639 mo
547.017 516.639 li
547.017 455.848 li
447.517 455.848 li
447.517 516.639 li
cp
551.517 521.139 mo
443.017 521.139 li
443.017 451.348 li
551.517 451.348 li
551.517 521.139 li
cp
f
474.029 507.495 mo
520.504 507.495 li
497.267 467.245 li
474.029 507.495 li
cp
528.299 511.995 mo
466.235 511.995 li
497.267 458.245 li
528.299 511.995 li
cp
f
499.517 494.973 mo
495.017 494.973 li
495.017 478.745 li
499.517 478.745 li
499.517 494.973 li
cp
f
499.517 503.745 mo
495.017 503.745 li
495.017 499.358 li
499.517 499.358 li
499.517 503.745 li
cp
f
439.517 529.139 mo
439.517 536.77 li
439.517 537.302 439.723 537.799 440.097 538.171 cv
440.472 538.549 440.967 538.752 441.501 538.752 cv
553.032 538.752 li
553.566 538.752 554.062 538.549 554.428 538.181 cv
554.811 537.799 555.017 537.301 555.017 536.77 cv
555.017 529.139 li
439.517 529.139 li
cp
553.032 543.252 mo
441.501 543.252 li
439.758 543.252 438.128 542.577 436.912 541.35 cv
435.694 540.138 435.017 538.508 435.017 536.77 cv
435.017 524.639 li
559.517 524.639 li
559.517 536.77 li
559.517 538.505 558.841 540.134 557.613 541.359 cv
556.404 542.578 554.774 543.252 553.032 543.252 cv
cp
f
706.009 603.77 mo
702.856 603.77 li
698.608 609.118 li
698.608 603.77 li
696.052 603.77 li
696.052 615.78 li
698.608 615.78 li
698.608 612.088 li
699.544 610.955 li
703.181 615.78 li
706.331 615.78 li
701.237 609.406 li
706.009 603.77 li
cp
.0980392 .0941176 .0941176 rgb
f
707.499 615.78 mo
715.997 615.78 li
715.997 613.53 li
710.056 613.53 li
710.056 610.792 li
715.872 610.792 li
715.872 608.542 li
710.056 608.542 li
710.056 606.021 li
715.997 606.021 li
715.997 603.77 li
707.499 603.77 li
707.499 615.78 li
cp
f
725.591 603.77 mo
722.62 608.578 li
719.649 603.77 li
716.731 603.77 li
721.341 610.864 li
721.341 615.78 li
723.897 615.78 li
723.897 610.864 li
728.489 603.77 li
725.591 603.77 li
cp
f
712.271 492.455 mo
703.861 492.455 697.021 499.296 697.021 507.705 cv
697.021 516.113 703.861 522.955 712.271 522.955 cv
720.68 522.955 727.521 516.113 727.521 507.705 cv
727.521 499.296 720.68 492.455 712.271 492.455 cv
cp
712.271 527.455 mo
701.38 527.455 692.521 518.595 692.521 507.705 cv
692.521 496.814 701.38 487.955 712.271 487.955 cv
723.161 487.955 732.021 496.814 732.021 507.705 cv
732.021 518.595 723.161 527.455 712.271 527.455 cv
cp
.0952911 .0952911 .0952911 rgb
f
766.397 565.013 mo
668.871 467.489 li
672.053 464.307 li
766.397 558.65 li
775.68 549.37 li
778.861 552.551 li
766.397 565.013 li
cp
f
753.278 548.713 mo
750.097 545.532 li
760.97 534.659 li
764.151 537.84 li
753.278 548.713 li
cp
f
760.634 556.069 mo
757.452 552.887 li
762.888 547.45 li
766.069 550.631 li
760.634 556.069 li
cp
f
668.544 444.955 mo
666.366 444.955 664.319 445.803 662.779 447.342 cv
651.907 458.213 li
650.368 459.753 649.521 461.801 649.521 463.978 cv
649.521 466.155 650.368 468.203 651.908 469.743 cv
653.446 471.283 655.493 472.13 657.671 472.13 cv
659.849 472.13 661.896 471.282 663.436 469.743 cv
674.309 458.87 li
675.848 457.329 676.696 455.282 676.696 453.105 cv
676.695 450.929 675.848 448.882 674.308 447.342 cv
672.769 445.803 670.722 444.955 668.544 444.955 cv
cp
657.671 476.63 mo
654.291 476.63 651.114 475.314 648.725 472.924 cv
646.336 470.534 645.021 467.357 645.021 463.978 cv
645.021 460.599 646.336 457.422 648.725 455.032 cv
659.598 444.161 li
661.987 441.771 665.164 440.455 668.544 440.455 cv
671.924 440.455 675.101 441.771 677.49 444.161 cv
679.879 446.55 681.195 449.727 681.196 453.104 cv
681.196 456.483 679.88 459.66 677.491 462.051 cv
666.617 472.924 li
664.228 475.314 661.051 476.63 657.671 476.63 cv
cp
f
658.142 565.013 mo
645.68 552.551 li
648.861 549.37 li
658.142 558.65 li
752.486 464.305 li
755.668 467.487 li
658.142 565.013 li
cp
f
671.262 548.713 mo
660.389 537.84 li
663.57 534.659 li
674.443 545.532 li
671.262 548.713 li
cp
f
663.906 556.069 mo
658.471 550.631 li
661.652 547.45 li
667.088 552.887 li
663.906 556.069 li
cp
f
755.995 444.955 mo
753.818 444.955 751.771 445.803 750.231 447.342 cv
748.692 448.88 747.845 450.927 747.844 453.106 cv
747.844 455.282 748.691 457.33 750.231 458.87 cv
761.104 469.743 li
762.644 471.283 764.69 472.13 766.869 472.13 cv
769.046 472.13 771.093 471.282 772.633 469.743 cv
774.173 468.203 775.021 466.155 775.021 463.978 cv
775.021 461.801 774.173 459.753 772.633 458.213 cv
761.76 447.343 li
760.221 445.802 758.174 444.955 755.995 444.955 cv
cp
766.869 476.63 mo
763.488 476.63 760.312 475.314 757.922 472.924 cv
747.05 462.051 li
744.66 459.662 743.344 456.484 743.344 453.105 cv
743.345 449.723 744.661 446.546 747.051 444.16 cv
749.439 441.771 752.616 440.455 755.995 440.455 cv
759.376 440.455 762.553 441.771 764.942 444.161 cv
775.814 455.031 li
778.204 457.421 779.521 460.599 779.521 463.978 cv
779.521 467.357 778.204 470.535 775.814 472.924 cv
773.425 475.314 770.248 476.63 766.869 476.63 cv
cp
f
730.541 480.522 mo
729.359 479.727 728.114 479.001 726.839 478.367 cv
728.845 474.338 li
730.295 475.061 731.711 475.885 733.055 476.79 cv
730.541 480.522 li
cp
f
694.169 480.404 mo
691.679 476.656 li
693.029 475.758 694.45 474.943 695.9 474.233 cv
697.879 478.275 li
696.604 478.899 695.356 479.615 694.169 480.404 cv
cp
f
722.888 476.714 mo
721.541 476.252 720.15 475.875 718.755 475.594 cv
719.644 471.183 li
721.231 471.503 722.814 471.932 724.349 472.458 cv
722.888 476.714 li
cp
f
701.839 476.651 mo
700.409 472.384 li
701.945 471.869 703.53 471.452 705.12 471.143 cv
705.978 475.561 li
704.581 475.832 703.188 476.199 701.839 476.651 cv
cp
f
714.513 475.028 mo
713.123 474.934 711.73 474.929 710.329 475.012 cv
709.937 470.528 li
710.001 470.524 li
711.722 470.421 713.235 470.433 714.813 470.538 cv
714.513 475.028 li
cp
f
685.089 489.434 mo
684.293 490.616 683.567 491.861 682.933 493.136 cv
678.904 491.13 li
679.626 489.68 680.451 488.264 681.356 486.92 cv
685.089 489.434 li
cp
f
684.97 525.806 mo
681.222 528.296 li
680.324 526.946 679.509 525.525 678.8 524.075 cv
682.841 522.096 li
683.465 523.371 684.181 524.619 684.97 525.806 cv
cp
f
681.28 497.087 mo
680.817 498.434 680.441 499.825 680.16 501.22 cv
675.749 500.332 li
676.069 498.744 676.497 497.161 677.023 495.626 cv
681.28 497.087 li
cp
f
681.217 518.136 mo
676.95 519.566 li
676.435 518.03 676.018 516.445 675.709 514.855 cv
680.127 513.998 li
680.397 515.394 680.765 516.787 681.217 518.136 cv
cp
f
679.594 505.462 mo
679.5 506.852 679.495 508.245 679.578 509.646 cv
675.094 510.039 li
675.09 509.974 li
674.987 508.253 674.999 506.74 675.104 505.162 cv
679.594 505.462 li
cp
f
694 534.886 mo
695.182 535.682 696.427 536.408 697.702 537.042 cv
695.696 541.071 li
694.246 540.349 692.83 539.524 691.486 538.619 cv
694 534.886 li
cp
f
730.372 535.005 mo
732.862 538.753 li
731.512 539.651 730.091 540.466 728.641 541.175 cv
726.662 537.134 li
727.937 536.51 729.185 535.794 730.372 535.005 cv
cp
f
701.653 538.695 mo
703 539.158 704.391 539.534 705.786 539.815 cv
704.897 544.226 li
703.31 543.906 701.727 543.478 700.192 542.952 cv
701.653 538.695 li
cp
f
722.702 538.758 mo
724.132 543.025 li
722.596 543.541 721.011 543.958 719.421 544.266 cv
718.563 539.848 li
719.96 539.578 721.353 539.21 722.702 538.758 cv
cp
f
710.028 540.381 mo
711.418 540.475 712.811 540.48 714.212 540.397 cv
714.604 544.881 li
714.54 544.885 li
712.819 544.988 711.306 544.976 709.728 544.872 cv
710.028 540.381 li
cp
f
739.452 525.975 mo
740.248 524.793 740.974 523.548 741.608 522.273 cv
745.637 524.279 li
744.915 525.729 744.09 527.145 743.185 528.489 cv
739.452 525.975 li
cp
f
739.571 489.603 mo
743.319 487.113 li
744.217 488.463 745.032 489.884 745.741 491.334 cv
741.7 493.313 li
741.076 492.039 740.36 490.791 739.571 489.603 cv
cp
f
743.261 518.322 mo
743.724 516.975 744.1 515.584 744.381 514.189 cv
748.792 515.078 li
748.472 516.666 748.044 518.249 747.518 519.783 cv
743.261 518.322 li
cp
f
743.324 497.273 mo
747.591 495.843 li
748.106 497.379 748.523 498.964 748.832 500.554 cv
744.414 501.412 li
744.144 500.015 743.776 498.623 743.324 497.273 cv
cp
f
744.947 509.947 mo
745.041 508.557 745.046 507.165 744.963 505.763 cv
749.447 505.371 li
749.451 505.435 li
749.554 507.156 749.542 508.669 749.438 510.248 cv
744.947 509.947 li
cp
f
886.192 615.78 mo
888.749 615.78 li
888.749 610.792 li
894.565 610.792 li
894.565 608.542 li
888.749 608.542 li
888.749 606.021 li
894.692 606.021 li
894.692 603.77 li
886.192 603.77 li
886.192 615.78 li
cp
.0980392 .0941176 .0941176 rgb
f
896.472 615.78 mo
899.028 615.78 li
899.028 603.77 li
896.472 603.77 li
896.472 615.78 li
cp
f
906.659 609.261 mo
903.96 609.261 li
903.96 606.021 li
906.659 606.021 li
907.669 606.021 908.442 606.632 908.442 607.624 cv
908.442 608.65 907.669 609.261 906.659 609.261 cv
cp
911.071 607.642 mo
911.071 605.409 909.522 603.77 907.021 603.77 cv
901.403 603.77 li
901.403 615.78 li
903.96 615.78 li
903.96 611.513 li
905.831 611.513 li
908.19 615.78 li
911.144 615.78 li
908.425 611.207 li
909.722 610.9 911.071 609.748 911.071 607.642 cv
cp
f
912.976 615.78 mo
921.476 615.78 li
921.476 613.529 li
915.532 613.529 li
915.532 610.792 li
921.349 610.792 li
921.349 608.542 li
915.532 608.542 li
915.532 606.021 li
921.476 606.021 li
921.476 603.77 li
912.976 603.77 li
912.976 615.78 li
cp
f
935.929 603.77 mo
933.823 612.449 li
931.554 603.77 li
929.556 603.77 li
927.269 612.449 li
925.163 603.77 li
922.3 603.77 li
925.739 615.78 li
928.458 615.78 li
930.546 607.533 li
932.653 615.78 li
935.372 615.78 li
938.792 603.77 li
935.929 603.77 li
cp
f
942.298 611.495 mo
944.171 606.328 li
946.044 611.495 li
942.298 611.495 li
cp
942.569 603.77 mo
937.942 615.78 li
940.841 615.78 li
941.597 613.746 li
946.745 613.746 li
947.503 615.78 li
950.401 615.78 li
945.774 603.77 li
942.569 603.77 li
cp
f
953.981 603.77 mo
951.405 603.77 li
951.405 615.78 li
959.058 615.78 li
959.058 613.529 li
953.981 613.529 li
953.981 603.77 li
cp
f
963.251 613.529 mo
963.251 603.77 li
960.677 603.77 li
960.677 615.78 li
968.327 615.78 li
968.327 613.529 li
963.251 613.529 li
cp
f
967.214 521.165 mo
967.101 521.307 li
967.054 521.366 li
966.88 521.559 966.722 521.764 966.575 521.984 cv
966.563 522.002 966.552 522.02 966.54 522.038 cv
965.984 522.897 965.69 523.893 965.69 524.916 cv
965.69 525.071 965.697 525.225 965.71 525.376 cv
902.788 525.376 li
902.517 525.376 902.318 525.356 902.205 525.339 cv
901.817 525.282 901.46 525.18 901.121 525.031 cv
900.73 524.859 900.376 524.631 900.064 524.359 cv
901.286 523.236 902.054 521.624 902.054 519.835 cv
902.054 518.657 901.72 517.519 901.088 516.539 cv
900.884 516.215 900.65 515.912 900.391 515.634 cv
900.261 515.472 900.129 515.309 900.004 515.141 cv
899.99 515.123 899.978 515.104 899.963 515.086 cv
896.478 510.519 894.636 505.059 894.636 499.298 cv
894.636 497.011 894.932 494.757 895.508 492.585 cv
897.719 494.34 900.507 495.392 903.519 495.392 cv
910.65 495.392 916.452 489.59 916.452 482.458 cv
916.452 481.411 916.331 480.384 916.091 479.404 cv
916.072 479.315 916.051 479.227 916.026 479.14 cv
915.866 478.559 915.686 478.027 915.475 477.52 cv
914.735 475.193 914.231 472.789 913.977 470.373 cv
913.844 469.103 913.776 467.824 913.776 466.572 cv
913.776 461.287 914.936 456.142 917.105 451.461 cv
918.966 461.315 925.64 471.153 936.102 478.247 cv
936.57 478.585 937.063 478.975 937.64 479.465 cv
943.456 484.43 946.792 491.659 946.792 499.298 cv
946.792 499.83 946.751 500.367 946.66 501.042 cv
946.417 502.849 947.288 504.625 948.866 505.538 cv
949.566 505.943 950.345 506.143 951.119 506.143 cv
952.092 506.143 953.06 505.829 953.864 505.209 cv
956.361 503.289 958.389 501.062 959.899 498.681 cv
959.896 499.234 959.869 499.735 959.813 500.239 cv
959.704 501.277 959.494 502.287 959.19 503.243 cv
959.085 503.511 958.987 503.797 958.894 504.112 cv
958.857 504.232 958.827 504.353 958.802 504.474 cv
958.651 505.132 958.575 505.796 958.575 506.451 cv
958.575 511.227 962.463 515.113 967.241 515.113 cv
967.971 515.113 968.681 515.021 969.36 514.848 cv
969.343 517.147 968.602 519.329 967.214 521.165 cv
cp
971.808 524.916 mo
971.808 525.363 971.444 525.724 970.999 525.724 cv
970.556 525.724 970.19 525.363 970.19 524.916 cv
970.19 524.759 970.237 524.607 970.319 524.48 cv
970.358 524.421 970.399 524.371 970.454 524.318 cv
970.563 524.185 970.663 524.054 970.771 523.921 cv
972.704 521.382 973.86 518.208 973.86 514.767 cv
973.86 511.728 972.96 508.892 971.409 506.525 cv
971.374 508.789 969.526 510.613 967.241 510.613 cv
964.942 510.613 963.075 508.748 963.075 506.451 cv
963.075 506.089 963.124 505.738 963.206 505.404 cv
963.21 505.402 963.21 505.402 963.206 505.398 cv
963.267 505.195 963.333 504.996 963.413 504.802 cv
963.413 504.798 963.413 504.796 963.417 504.796 cv
963.849 503.488 964.14 502.121 964.288 500.71 cv
964.366 500.017 964.399 499.314 964.399 498.601 cv
964.399 492.521 961.687 487.074 957.399 483.406 cv
960.175 488.845 958.026 496.33 951.12 501.643 cv
951.221 500.897 951.292 500.13 951.292 499.298 cv
951.292 489.983 947.128 481.648 940.562 476.042 cv
939.946 475.52 939.323 475.019 938.677 474.556 cv
922.698 463.75 917.505 447.466 923.446 435.822 cv
914.774 443.247 909.276 454.269 909.276 466.572 cv
909.276 468.019 909.354 469.441 909.501 470.841 cv
909.802 473.697 910.399 476.46 911.259 479.11 cv
911.267 479.11 911.267 479.117 911.267 479.124 cv
911.437 479.513 911.573 479.917 911.688 480.335 cv
911.683 480.341 911.683 480.341 911.688 480.349 cv
911.864 481.019 911.952 481.732 911.952 482.458 cv
911.952 487.111 908.181 490.892 903.519 490.892 cv
898.913 490.892 895.167 487.197 895.089 482.617 cv
891.954 487.41 890.136 493.144 890.136 499.298 cv
890.136 506.255 892.468 512.681 896.386 517.816 cv
896.591 518.093 896.81 518.361 897.022 518.626 cv
897.124 518.72 897.22 518.837 897.294 518.958 cv
897.464 519.214 897.554 519.509 897.554 519.835 cv
897.554 520.736 896.819 521.474 895.927 521.474 cv
895.015 521.474 894.284 520.736 894.284 519.835 cv
894.284 519.792 894.284 519.753 894.288 519.708 cv
894.198 520.208 894.149 520.724 894.149 521.236 cv
894.149 524.779 896.265 527.81 899.308 529.15 cv
900.009 529.457 900.755 529.673 901.546 529.791 cv
901.944 529.849 902.366 529.876 902.788 529.876 cv
905.108 529.876 966.456 529.876 967.608 529.876 cv
967.815 529.876 968.021 529.861 968.22 529.837 cv
968.61 529.783 968.983 529.669 969.327 529.523 cv
970.831 528.861 971.874 527.355 971.874 525.611 cv
971.874 525.357 971.849 525.103 971.808 524.853 cv
971.808 524.875 971.808 524.9 971.808 524.916 cv
cp
.0952911 .0952911 .0952911 rgb
f
941.599 521.391 mo
941.493 521.528 li
941.47 521.559 li
941.371 521.667 941.291 521.766 941.228 521.847 cv
941.104 521.997 940.992 522.155 940.89 522.32 cv
940.371 523.158 940.097 524.123 940.097 525.109 cv
940.097 525.199 940.099 525.288 940.104 525.376 cv
911.477 525.376 li
911.39 525.152 911.286 524.934 911.167 524.724 cv
911.009 524.445 910.821 524.184 910.607 523.945 cv
910.607 523.945 910.606 523.944 910.606 523.944 cv
910.596 523.93 910.586 523.917 910.586 523.917 cv
910.544 523.861 910.5 523.801 910.457 523.737 cv
912.997 523.143 914.991 521.112 915.532 518.551 cv
915.608 518.605 915.685 518.658 915.762 518.71 cv
915.805 518.743 915.848 518.777 915.891 518.812 cv
915.938 518.859 915.988 518.906 916.038 518.953 cv
916.888 519.739 917.985 520.151 919.097 520.151 cv
919.74 520.151 920.389 520.013 920.997 519.729 cv
922.654 518.958 923.679 517.259 923.591 515.433 cv
923.587 515.368 923.583 515.305 923.578 515.237 cv
923.611 512.346 924.889 509.617 927.079 507.746 cv
927.301 507.558 927.489 507.408 927.651 507.289 cv
930.497 505.354 932.808 503.021 934.512 500.488 cv
934.5 500.789 934.479 501.062 934.45 501.313 cv
934.447 501.333 934.445 501.354 934.443 501.375 cv
934.343 502.337 934.139 503.311 933.836 504.269 cv
933.737 504.529 933.648 504.8 933.561 505.105 cv
933.529 505.214 933.502 505.324 933.479 505.434 cv
933.334 506.076 933.261 506.721 933.261 507.353 cv
933.261 512.045 937.075 515.863 941.765 515.863 cv
942.4 515.863 943.021 515.791 943.62 515.656 cv
943.558 517.755 942.855 519.742 941.599 521.391 cv
cp
946.151 525.109 mo
946.151 525.533 945.802 525.882 945.372 525.882 cv
944.944 525.882 944.597 525.533 944.597 525.109 cv
944.597 524.955 944.64 524.812 944.716 524.689 cv
944.759 524.636 944.798 524.582 944.851 524.535 cv
944.958 524.41 945.052 524.281 945.153 524.15 cv
947.013 521.71 948.124 518.656 948.124 515.353 cv
948.124 512.435 947.261 509.708 945.769 507.431 cv
945.726 509.609 943.952 511.363 941.765 511.363 cv
939.548 511.363 937.761 509.566 937.761 507.353 cv
937.761 507.007 937.808 506.675 937.886 506.353 cv
937.888 506.351 937.888 506.351 937.886 506.347 cv
937.942 506.15 938.003 505.962 938.079 505.773 cv
938.079 505.771 938.079 505.767 938.081 505.767 cv
938.489 504.509 938.778 503.195 938.919 501.839 cv
938.997 501.176 939.024 500.5 939.024 499.812 cv
939.024 493.968 936.419 488.732 932.302 485.209 cv
935.122 490.74 932.659 498.474 925.065 503.605 cv
924.765 503.822 924.464 504.064 924.173 504.31 cv
921.054 506.974 919.077 510.933 919.077 515.353 cv
919.077 515.458 919.091 515.55 919.096 515.651 cv
919.017 515.578 918.944 515.499 918.862 515.429 cv
918.692 515.291 918.524 515.154 918.356 515.033 cv
914.062 512.132 912.673 507.759 914.269 504.636 cv
911.94 506.625 910.468 509.585 910.468 512.886 cv
910.468 513.275 910.481 513.658 910.524 514.031 cv
910.606 514.798 910.767 515.544 910.999 516.253 cv
911.001 516.253 911.001 516.255 911.001 516.255 cv
911.042 516.365 911.079 516.47 911.112 516.583 cv
911.11 516.585 911.11 516.585 911.112 516.585 cv
911.153 516.765 911.179 516.953 911.179 517.15 cv
911.179 518.396 910.173 519.414 908.917 519.414 cv
907.683 519.414 906.677 518.427 906.657 517.193 cv
905.813 518.48 905.325 520.023 905.325 521.669 cv
905.325 523.537 905.954 525.261 907.005 526.642 cv
907.06 526.714 907.114 526.789 907.175 526.855 cv
907.202 526.886 907.224 526.916 907.253 526.945 cv
907.294 527.017 907.317 527.095 907.317 527.183 cv
907.317 527.425 907.12 527.619 906.882 527.619 cv
906.638 527.619 906.438 527.425 906.438 527.183 cv
906.438 527.173 906.438 527.16 906.438 527.15 cv
906.413 527.285 906.401 527.421 906.401 527.56 cv
906.401 528.509 906.968 529.324 907.788 529.683 cv
907.976 529.765 908.171 529.826 908.39 529.855 cv
908.495 529.869 908.61 529.876 908.722 529.876 cv
909.347 529.876 941.005 529.876 942.114 529.876 cv
942.308 529.876 942.515 529.863 942.696 529.839 cv
943.083 529.785 943.433 529.673 943.767 529.533 cv
945.208 528.898 946.218 527.455 946.218 525.773 cv
946.218 525.525 946.194 525.287 946.151 525.048 cv
946.151 525.066 946.151 525.089 946.151 525.109 cv
cp
f
881.571 566.464 mo
904.466 566.464 li
904.466 557.271 li
881.571 557.271 li
881.571 566.464 li
cp
908.966 570.964 mo
877.071 570.964 li
877.071 552.771 li
908.966 552.771 li
908.966 570.964 li
cp
f
908.966 566.464 mo
931.856 566.464 li
931.856 557.271 li
908.966 557.271 li
908.966 566.464 li
cp
936.356 570.964 mo
904.466 570.964 li
904.466 552.771 li
936.356 552.771 li
936.356 570.964 li
cp
f
936.356 566.464 mo
959.245 566.464 li
959.245 557.271 li
936.356 557.271 li
936.356 566.464 li
cp
963.745 570.964 mo
931.856 570.964 li
931.856 552.771 li
963.745 552.771 li
963.745 570.964 li
cp
f
963.745 566.464 mo
986.642 566.464 li
986.642 557.271 li
963.745 557.271 li
963.745 566.464 li
cp
991.142 570.964 mo
959.245 570.964 li
959.245 552.771 li
991.142 552.771 li
991.142 570.964 li
cp
f
881.571 539.076 mo
904.466 539.076 li
904.466 529.876 li
881.571 529.876 li
881.571 539.076 li
cp
908.966 543.576 mo
877.071 543.576 li
877.071 525.376 li
908.966 525.376 li
908.966 543.576 li
cp
f
908.966 539.076 mo
931.856 539.076 li
931.856 529.876 li
908.966 529.876 li
908.966 539.076 li
cp
936.356 543.576 mo
904.466 543.576 li
904.466 525.376 li
936.356 525.376 li
936.356 543.576 li
cp
f
936.356 539.076 mo
959.245 539.076 li
959.245 529.876 li
936.356 529.876 li
936.356 539.076 li
cp
963.745 543.576 mo
931.856 543.576 li
931.856 525.376 li
963.745 525.376 li
963.745 543.576 li
cp
f
963.745 539.076 mo
986.642 539.076 li
986.642 529.876 li
963.745 529.876 li
963.745 539.076 li
cp
991.142 543.576 mo
959.245 543.576 li
959.245 525.376 li
991.142 525.376 li
991.142 543.576 li
cp
f
867.88 552.771 mo
890.767 552.771 li
890.767 543.576 li
867.88 543.576 li
867.88 552.771 li
cp
895.267 557.271 mo
863.38 557.271 li
863.38 539.076 li
895.267 539.076 li
895.267 557.271 li
cp
f
895.267 552.771 mo
918.161 552.771 li
918.161 543.576 li
895.267 543.576 li
895.267 552.771 li
cp
922.661 557.271 mo
890.767 557.271 li
890.767 539.076 li
922.661 539.076 li
922.661 557.271 li
cp
f
922.661 552.771 mo
945.55 552.771 li
945.55 543.576 li
922.661 543.576 li
922.661 552.771 li
cp
950.05 557.271 mo
918.161 557.271 li
918.161 539.076 li
950.05 539.076 li
950.05 557.271 li
cp
f
950.05 552.771 mo
972.938 552.771 li
972.938 543.576 li
950.05 543.576 li
950.05 552.771 li
cp
977.438 557.271 mo
945.55 557.271 li
945.55 539.076 li
977.438 539.076 li
977.438 557.271 li
cp
f
17.2817 830.763 mo
19.8384 830.763 li
19.8384 818.753 li
17.2817 818.753 li
17.2817 830.763 li
cp
.0980392 .0941176 .0941176 rgb
f
30.4058 826.297 mo
24.8423 818.753 li
22.2134 818.753 li
22.2134 830.763 li
24.77 830.763 li
24.77 822.93 li
30.4956 830.763 li
32.9624 830.763 li
32.9624 818.753 li
30.4058 818.753 li
30.4058 826.297 li
cp
f
37.5317 822.031 mo
37.5317 821.311 38.1436 820.842 39.2241 820.842 cv
40.4482 820.842 41.7446 821.256 42.7173 822.157 cv
44.1396 820.249 li
42.9512 819.15 41.3667 818.574 39.458 818.574 cv
36.6313 818.574 34.9028 820.23 34.9028 822.229 cv
34.9028 826.749 41.8169 825.29 41.8169 827.378 cv
41.8169 828.081 41.1504 828.71 39.728 828.71 cv
38.0718 828.71 36.7573 827.955 35.9111 827.073 cv
34.5063 829.071 li
35.6411 830.206 37.2974 830.979 39.6201 830.979 cv
42.8433 830.979 44.4277 829.323 44.4277 827.125 cv
44.4277 822.643 37.5317 823.921 37.5317 822.031 cv
cp
f
54.3633 825.883 mo
54.3633 827.558 53.4087 828.71 51.5542 828.71 cv
49.6997 828.71 48.7275 827.558 48.7275 825.883 cv
48.7275 818.753 li
46.1348 818.753 li
46.1348 825.956 li
46.1348 828.926 47.8989 830.979 51.5542 830.979 cv
55.2095 830.979 56.9741 828.926 56.9741 825.956 cv
56.9741 818.753 li
54.3633 818.753 li
54.3633 825.883 li
cp
f
64.604 824.245 mo
61.9033 824.245 li
61.9033 821.004 li
64.604 821.004 li
65.6123 821.004 66.3867 821.617 66.3867 822.607 cv
66.3867 823.633 65.6123 824.245 64.604 824.245 cv
cp
69.0156 822.625 mo
69.0156 820.392 67.4668 818.753 64.9644 818.753 cv
59.3467 818.753 li
59.3467 830.763 li
61.9033 830.763 li
61.9033 826.497 li
63.7759 826.497 li
66.1348 830.763 li
69.0874 830.763 li
66.3687 826.19 li
67.665 825.883 69.0156 824.731 69.0156 822.625 cv
cp
f
74.0171 826.478 mo
75.8896 821.311 li
77.7622 826.478 li
74.0171 826.478 li
cp
74.2871 818.753 mo
69.6597 830.763 li
72.5586 830.763 li
73.3149 828.729 li
78.4644 828.729 li
79.2207 830.763 li
82.1196 830.763 li
77.4922 818.753 li
74.2871 818.753 li
cp
f
91.4248 826.297 mo
85.8608 818.753 li
83.2324 818.753 li
83.2324 830.763 li
85.7891 830.763 li
85.7891 822.93 li
91.5146 830.763 li
93.9814 830.763 li
93.9814 818.753 li
91.4248 818.753 li
91.4248 826.297 li
cp
f
102.188 820.825 mo
103.412 820.825 104.492 821.598 104.997 822.571 cv
107.193 821.491 li
106.347 819.978 104.816 818.555 102.188 818.555 cv
98.5684 818.555 95.7778 821.058 95.7778 824.768 cv
95.7778 828.458 98.5684 830.979 102.188 830.979 cv
104.816 830.979 106.347 829.521 107.193 828.026 cv
104.997 826.963 li
104.492 827.936 103.412 828.71 102.188 828.71 cv
99.9907 828.71 98.4067 827.036 98.4067 824.768 cv
98.4067 822.499 99.9907 820.825 102.188 820.825 cv
cp
f
117.218 821.004 mo
117.218 818.753 li
108.72 818.753 li
108.72 830.763 li
117.218 830.763 li
117.218 828.512 li
111.276 828.512 li
111.276 825.776 li
117.092 825.776 li
117.092 823.525 li
111.276 823.525 li
111.276 821.004 li
117.218 821.004 li
cp
f
82.25 789.521 mo
77.6431 789.521 73.3115 787.727 70.0527 784.469 cv
66.7944 781.21 65 776.878 65 772.271 cv
65 715.931 li
69.5 715.931 li
69.5 772.271 li
69.5 775.676 70.8262 778.878 73.2349 781.288 cv
75.6431 783.695 78.8447 785.021 82.25 785.021 cv
85.6553 785.021 88.8569 783.695 91.2656 781.288 cv
93.6738 778.878 95 775.676 95 772.271 cv
99.5 772.271 li
99.5 776.878 97.7056 781.21 94.4478 784.469 cv
91.1885 787.727 86.8569 789.521 82.25 789.521 cv
cp
.0952911 .0952911 .0952911 rgb
f
14.6958 710.666 mo
25.9458 710.666 36.1353 716.329 42.0654 725.663 cv
48.2031 718.101 57.3779 713.681 67.25 713.681 cv
77.1221 713.681 86.2974 718.1 92.436 725.661 cv
98.3667 716.329 108.553 710.666 119.799 710.666 cv
121.474 710.666 123.146 710.794 124.796 711.05 cv
121.963 681.554 97.2241 658.853 67.25 658.853 cv
37.2734 658.853 12.5342 681.554 9.70361 711.05 cv
11.3535 710.794 13.0239 710.666 14.6958 710.666 cv
cp
41.5625 734.393 mo
39.8057 730.818 li
35.0615 721.164 25.4399 715.166 14.6958 715.166 cv
12.3716 715.166 10.0527 715.455 7.80225 716.024 cv
4.86182 716.769 li
5.00244 713.739 li
6.54736 680.438 33.8896 654.353 67.25 654.353 cv
100.608 654.353 127.95 680.438 129.498 713.739 cv
129.638 716.769 li
126.697 716.024 li
124.448 715.455 122.127 715.166 119.799 715.166 cv
109.06 715.166 99.4409 721.163 94.6958 730.816 cv
92.9395 734.39 li
90.7847 731.042 li
85.6025 722.989 76.8047 718.181 67.25 718.181 cv
57.6953 718.181 48.8979 722.99 43.7173 731.042 cv
41.5625 734.393 li
cp
f
94.9258 729.826 mo
90.4258 729.826 li
90.4258 687.372 78.4424 658.853 67.25 658.853 cv
56.0576 658.853 44.0742 687.372 44.0742 729.826 cv
39.5742 729.826 li
39.5742 710.023 42.2632 691.373 47.1455 677.311 cv
52.2866 662.506 59.4263 654.353 67.25 654.353 cv
75.0737 654.353 82.2134 662.506 87.3545 677.311 cv
92.2368 691.373 94.9258 710.023 94.9258 729.826 cv
cp
f
69.5 656.603 mo
65 656.603 li
65 647.271 li
69.5 647.271 li
69.5 656.603 li
cp
f
188.817 825.883 mo
188.817 827.558 187.863 828.71 186.008 828.71 cv
184.154 828.71 183.182 827.558 183.182 825.883 cv
183.182 818.753 li
180.589 818.753 li
180.589 825.956 li
180.589 828.926 182.354 830.979 186.008 830.979 cv
189.664 830.979 191.428 828.926 191.428 825.956 cv
191.428 818.753 li
188.817 818.753 li
188.817 825.883 li
cp
.0980392 .0941176 .0941176 rgb
f
201.993 826.297 mo
196.43 818.753 li
193.801 818.753 li
193.801 830.763 li
196.357 830.763 li
196.357 822.93 li
202.083 830.763 li
204.55 830.763 li
204.55 818.753 li
201.993 818.753 li
201.993 826.297 li
cp
f
211.658 828.512 mo
209.479 828.512 li
209.479 821.004 li
211.676 821.004 li
214.125 821.004 215.421 822.643 215.421 824.75 cv
215.421 826.801 214.034 828.512 211.658 828.512 cv
cp
211.658 818.753 mo
206.922 818.753 li
206.922 830.763 li
211.676 830.763 li
215.421 830.763 218.032 828.387 218.032 824.75 cv
218.032 821.149 215.421 818.753 211.658 818.753 cv
cp
f
219.846 830.763 mo
228.345 830.763 li
228.345 828.512 li
222.403 828.512 li
222.403 825.776 li
228.219 825.776 li
228.219 823.525 li
222.403 823.525 li
222.403 821.004 li
228.345 821.004 li
228.345 818.753 li
219.846 818.753 li
219.846 830.763 li
cp
f
235.597 824.245 mo
232.896 824.245 li
232.896 821.004 li
235.597 821.004 li
236.605 821.004 237.38 821.616 237.38 822.607 cv
237.38 823.633 236.605 824.245 235.597 824.245 cv
cp
240.009 822.625 mo
240.009 820.392 238.46 818.753 235.958 818.753 cv
230.34 818.753 li
230.34 830.763 li
232.896 830.763 li
232.896 826.497 li
234.769 826.497 li
237.128 830.763 li
240.081 830.763 li
237.362 826.19 li
238.658 825.883 240.009 824.731 240.009 822.625 cv
cp
f
252.373 820.825 mo
253.598 820.825 254.678 821.598 255.182 822.571 cv
257.379 821.491 li
256.532 819.978 255.002 818.555 252.373 818.555 cv
248.754 818.555 245.963 821.058 245.963 824.768 cv
245.963 828.458 248.754 830.979 252.373 830.979 cv
255.002 830.979 256.532 829.521 257.379 828.026 cv
255.182 826.963 li
254.678 827.936 253.598 828.71 252.373 828.71 cv
250.177 828.71 248.592 827.036 248.592 824.768 cv
248.592 822.499 250.177 820.825 252.373 820.825 cv
cp
f
264.613 828.71 mo
262.38 828.71 260.958 827 260.958 824.768 cv
260.958 822.516 262.38 820.825 264.613 820.825 cv
266.828 820.825 268.25 822.516 268.25 824.768 cv
268.25 827 266.828 828.71 264.613 828.71 cv
cp
264.613 818.555 mo
260.976 818.555 258.329 821.149 258.329 824.768 cv
258.329 828.387 260.976 830.979 264.613 830.979 cv
268.232 830.979 270.879 828.387 270.879 824.768 cv
270.879 821.149 268.232 818.555 264.613 818.555 cv
cp
f
280.868 826.297 mo
275.304 818.753 li
272.675 818.753 li
272.675 830.763 li
275.232 830.763 li
275.232 822.93 li
280.958 830.763 li
283.424 830.763 li
283.424 818.753 li
280.868 818.753 li
280.868 826.297 li
cp
f
287.993 822.031 mo
287.993 821.311 288.605 820.842 289.686 820.842 cv
290.91 820.842 292.207 821.256 293.179 822.157 cv
294.602 820.249 li
293.413 819.15 291.829 818.574 289.92 818.574 cv
287.093 818.574 285.365 820.23 285.365 822.229 cv
285.365 826.749 292.279 825.29 292.279 827.377 cv
292.279 828.081 291.612 828.71 290.19 828.71 cv
288.534 828.71 287.219 827.954 286.373 827.073 cv
284.969 829.071 li
286.103 830.206 287.759 830.979 290.082 830.979 cv
293.305 830.979 294.89 829.323 294.89 827.125 cv
294.89 822.643 287.993 823.92 287.993 822.031 cv
cp
f
295.625 821.004 mo
299.136 821.004 li
299.136 830.763 li
301.71 830.763 li
301.71 821.004 li
305.203 821.004 li
305.203 818.753 li
295.625 818.753 li
295.625 821.004 li
cp
f
312.096 824.245 mo
309.395 824.245 li
309.395 821.004 li
312.096 821.004 li
313.104 821.004 313.878 821.616 313.878 822.607 cv
313.878 823.633 313.104 824.245 312.096 824.245 cv
cp
316.507 822.625 mo
316.507 820.392 314.958 818.753 312.456 818.753 cv
306.838 818.753 li
306.838 830.763 li
309.395 830.763 li
309.395 826.497 li
311.268 826.497 li
313.626 830.763 li
316.579 830.763 li
313.86 826.19 li
315.157 825.883 316.507 824.731 316.507 822.625 cv
cp
f
326.641 825.883 mo
326.641 827.558 325.686 828.71 323.832 828.71 cv
321.977 828.71 321.005 827.558 321.005 825.883 cv
321.005 818.753 li
318.412 818.753 li
318.412 825.956 li
318.412 828.926 320.177 830.979 323.832 830.979 cv
327.487 830.979 329.251 828.926 329.251 825.956 cv
329.251 818.753 li
326.641 818.753 li
326.641 825.883 li
cp
f
337.458 820.825 mo
338.682 820.825 339.762 821.598 340.267 822.571 cv
342.463 821.491 li
341.617 819.978 340.086 818.555 337.458 818.555 cv
333.838 818.555 331.048 821.058 331.048 824.768 cv
331.048 828.458 333.838 830.979 337.458 830.979 cv
340.086 830.979 341.617 829.521 342.463 828.026 cv
340.267 826.963 li
339.762 827.936 338.682 828.71 337.458 828.71 cv
335.261 828.71 333.677 827.036 333.677 824.768 cv
333.677 822.499 335.261 820.825 337.458 820.825 cv
cp
f
343.251 821.004 mo
346.763 821.004 li
346.763 830.763 li
349.337 830.763 li
349.337 821.004 li
352.83 821.004 li
352.83 818.753 li
343.251 818.753 li
343.251 821.004 li
cp
f
354.465 830.763 mo
357.022 830.763 li
357.022 818.753 li
354.465 818.753 li
354.465 830.763 li
cp
f
365.104 828.71 mo
362.872 828.71 361.449 827 361.449 824.768 cv
361.449 822.516 362.872 820.825 365.104 820.825 cv
367.319 820.825 368.742 822.516 368.742 824.768 cv
368.742 827 367.319 828.71 365.104 828.71 cv
cp
365.104 818.555 mo
361.467 818.555 358.821 821.149 358.821 824.768 cv
358.821 828.387 361.467 830.979 365.104 830.979 cv
368.724 830.979 371.371 828.387 371.371 824.768 cv
371.371 821.149 368.724 818.555 365.104 818.555 cv
cp
f
381.359 818.753 mo
381.359 826.297 li
375.796 818.753 li
373.167 818.753 li
373.167 830.763 li
375.724 830.763 li
375.724 822.93 li
381.449 830.763 li
383.916 830.763 li
383.916 818.753 li
381.359 818.753 li
cp
f
316.646 752.078 mo
247.859 752.078 li
247.859 747.578 li
316.646 747.578 li
316.646 752.078 li
cp
.0952911 .0952911 .0952911 rgb
f
305.467 703.299 mo
259.038 703.299 li
259.038 698.799 li
305.467 698.799 li
305.467 703.299 li
cp
f
309.592 721.299 mo
254.913 721.299 li
254.913 716.799 li
309.592 716.799 li
309.592 721.299 li
cp
f
298.414 672.521 mo
266.091 672.521 li
266.091 668.021 li
298.414 668.021 li
298.414 672.521 li
cp
f
246.558 765.578 mo
317.947 765.578 li
292.496 654.521 li
272.009 654.521 li
246.558 765.578 li
cp
323.594 770.078 mo
240.911 770.078 li
268.424 650.021 li
296.081 650.021 li
323.594 770.078 li
cp
f
226.724 780.021 mo
337.781 780.021 li
337.781 770.078 li
226.724 770.078 li
226.724 780.021 li
cp
342.281 784.521 mo
222.224 784.521 li
222.224 765.578 li
342.281 765.578 li
342.281 784.521 li
cp
f
229.479 708.447 mo
223.03 708.447 li
223.03 703.947 li
229.479 703.947 li
229.479 708.447 li
cp
f
225.628 723.697 mo
224.466 719.349 li
230.694 717.685 li
231.856 722.033 li
225.628 723.697 li
cp
f
232.091 737.756 mo
229.84 733.86 li
235.423 730.635 li
237.674 734.532 li
232.091 737.756 li
cp
f
332.422 737.757 mo
326.834 734.533 li
329.083 730.634 li
334.671 733.859 li
332.422 737.757 li
cp
f
338.876 723.697 mo
332.646 722.033 li
333.807 717.685 li
340.038 719.349 li
338.876 723.697 li
cp
f
341.475 708.445 mo
335.03 708.445 li
335.03 703.945 li
341.475 703.945 li
341.475 708.445 li
cp
f
333.809 694.711 mo
332.644 690.366 li
338.875 688.696 li
340.04 693.042 li
333.809 694.711 li
cp
f
329.082 681.757 mo
326.833 677.859 li
332.422 674.636 li
334.67 678.535 li
329.082 681.757 li
cp
f
235.425 681.756 mo
229.841 678.534 li
232.09 674.637 li
237.674 677.86 li
235.425 681.756 li
cp
f
230.695 694.711 mo
224.465 693.042 li
225.63 688.696 li
231.86 690.366 li
230.695 694.711 li
cp
f
465.657 1043.5 mo
463.479 1043.5 li
463.479 1035.99 li
465.675 1035.99 li
468.124 1035.99 469.42 1037.63 469.42 1039.74 cv
469.42 1041.79 468.034 1043.5 465.657 1043.5 cv
cp
465.657 1033.74 mo
460.922 1033.74 li
460.922 1045.75 li
465.675 1045.75 li
469.42 1045.75 472.031 1043.37 472.031 1039.74 cv
472.031 1036.14 469.42 1033.74 465.657 1033.74 cv
cp
.0980392 .0941176 .0941176 rgb
f
476.331 1041.47 mo
478.203 1036.3 li
480.076 1041.47 li
476.331 1041.47 li
cp
476.601 1033.74 mo
471.973 1045.75 li
474.872 1045.75 li
475.628 1043.72 li
480.778 1043.72 li
481.534 1045.75 li
484.433 1045.75 li
479.806 1033.74 li
476.601 1033.74 li
cp
f
493.738 1041.29 mo
488.174 1033.74 li
485.546 1033.74 li
485.546 1045.75 li
488.103 1045.75 li
488.103 1037.92 li
493.828 1045.75 li
496.295 1045.75 li
496.295 1033.74 li
493.738 1033.74 li
493.738 1041.29 li
cp
f
503.871 1041.34 mo
507.04 1041.34 li
507.04 1042.78 li
506.554 1043.23 505.563 1043.7 504.501 1043.7 cv
502.304 1043.7 500.72 1042.02 500.72 1039.76 cv
500.72 1037.49 502.304 1035.81 504.501 1035.81 cv
505.761 1035.81 506.788 1036.53 507.347 1037.38 cv
509.452 1036.23 li
508.552 1034.8 506.985 1033.54 504.501 1033.54 cv
500.972 1033.54 498.091 1035.96 498.091 1039.76 cv
498.091 1043.54 500.972 1045.97 504.501 1045.97 cv
506.661 1045.97 508.372 1045.08 509.597 1043.72 cv
509.597 1039.11 li
503.871 1039.11 li
503.871 1041.34 li
cp
f
511.628 1045.75 mo
520.126 1045.75 li
520.126 1043.5 li
514.185 1043.5 li
514.185 1040.76 li
520 1040.76 li
520 1038.51 li
514.185 1038.51 li
514.185 1035.99 li
520.126 1035.99 li
520.126 1033.74 li
511.628 1033.74 li
511.628 1045.75 li
cp
f
527.378 1039.23 mo
524.678 1039.23 li
524.678 1035.99 li
527.378 1035.99 li
528.387 1035.99 529.161 1036.6 529.161 1037.59 cv
529.161 1038.62 528.387 1039.23 527.378 1039.23 cv
cp
529.144 1041.18 mo
530.439 1040.87 531.79 1039.72 531.79 1037.61 cv
531.79 1035.38 530.241 1033.74 527.739 1033.74 cv
522.121 1033.74 li
522.121 1045.75 li
524.678 1045.75 li
524.678 1041.48 li
526.55 1041.48 li
528.909 1045.75 li
531.862 1045.75 li
529.144 1041.18 li
cp
f
473.374 900.64 mo
473.374 915.66 li
471.798 916.155 li
453.834 921.8 441.765 938.255 441.765 957.103 cv
441.765 980.762 461.014 1000.01 484.673 1000.01 cv
508.337 1000.01 527.589 980.762 527.589 957.103 cv
527.589 938.253 515.517 921.797 497.549 916.154 cv
495.973 915.659 li
495.973 900.64 li
473.374 900.64 li
cp
484.673 1004.51 mo
458.532 1004.51 437.265 983.244 437.265 957.103 cv
437.265 936.835 449.897 919.072 468.874 912.386 cv
468.874 896.14 li
500.473 896.14 li
500.473 912.385 li
519.453 919.069 532.089 936.833 532.089 957.103 cv
532.089 983.244 510.818 1004.51 484.673 1004.51 cv
cp
.0952911 .0952911 .0952911 rgb
f
456.763 957.101 mo
452.263 957.101 li
452.263 948.452 455.637 940.316 461.762 934.192 cv
464.944 937.374 li
459.668 942.648 456.763 949.654 456.763 957.101 cv
cp
f
537.519 900.64 mo
529.839 900.64 li
526.834 900.64 524 899.468 521.859 897.339 cv
519.729 895.214 518.556 892.382 518.556 889.361 cv
518.556 880.328 li
518.556 876.101 516.911 872.131 513.925 869.148 cv
510.932 866.158 506.959 864.511 502.739 864.511 cv
498.521 864.511 494.546 866.159 491.549 869.149 cv
488.566 872.13 486.923 876.101 486.923 880.328 cv
486.923 898.39 li
482.423 898.39 li
482.423 880.328 li
482.423 874.899 484.535 869.797 488.369 865.965 cv
492.217 862.125 497.32 860.011 502.739 860.011 cv
508.16 860.011 513.262 862.125 517.104 865.964 cv
520.942 869.797 523.056 874.899 523.056 880.328 cv
523.056 889.361 li
523.056 891.177 523.759 892.878 525.034 894.15 cv
526.324 895.433 528.031 896.14 529.839 896.14 cv
537.519 896.14 li
537.519 900.64 li
cp
f
543.11 888.625 mo
541.969 887.97 540.734 887.525 539.44 887.303 cv
540.202 882.868 li
542.018 883.179 543.75 883.804 545.351 884.723 cv
543.11 888.625 li
cp
531.868 888.659 mo
529.604 884.77 li
531.2 883.841 532.928 883.207 534.741 882.884 cv
535.528 887.316 li
534.237 887.544 533.006 887.997 531.868 888.659 cv
cp
548.08 894.502 mo
547.627 893.272 546.965 892.137 546.112 891.129 cv
549.548 888.223 li
550.74 889.632 551.667 891.221 552.303 892.946 cv
548.08 894.502 li
cp
552.323 903.775 mo
548.095 902.238 li
548.542 901.006 548.769 899.712 548.769 898.39 cv
553.269 898.335 li
553.269 898.39 li
553.269 900.238 552.95 902.049 552.323 903.775 cv
cp
545.403 912.028 mo
543.147 908.133 li
544.285 907.475 545.292 906.628 546.141 905.618 cv
549.586 908.512 li
548.401 909.923 546.994 911.106 545.403 912.028 cv
cp
529.658 912.042 mo
528.066 911.124 526.656 909.944 525.468 908.534 cv
528.909 905.633 li
529.76 906.643 530.768 907.487 531.906 908.143 cv
529.658 912.042 li
cp
537.519 914.14 mo
536.606 914.14 535.692 914.062 534.803 913.907 cv
535.574 909.473 li
536.852 909.697 538.202 909.695 539.483 909.469 cv
540.265 913.901 li
539.364 914.06 538.44 914.14 537.519 914.14 cv
cp
f
680.501 828.513 mo
678.323 828.513 li
678.323 821.003 li
680.52 821.003 li
682.968 821.003 684.265 822.642 684.265 824.75 cv
684.265 826.802 682.878 828.513 680.501 828.513 cv
cp
680.501 818.753 mo
675.767 818.753 li
675.767 830.763 li
680.52 830.763 li
684.265 830.763 686.876 828.386 686.876 824.75 cv
686.876 821.148 684.265 818.753 680.501 818.753 cv
cp
.0980392 .0941176 .0941176 rgb
f
688.69 830.763 mo
697.188 830.763 li
697.188 828.513 li
691.247 828.513 li
691.247 825.775 li
697.063 825.775 li
697.063 823.525 li
691.247 823.525 li
691.247 821.003 li
697.188 821.003 li
697.188 818.753 li
688.69 818.753 li
688.69 830.763 li
cp
f
704.44 824.226 mo
701.74 824.226 li
701.74 821.003 li
704.44 821.003 li
705.449 821.003 706.224 821.617 706.224 822.625 cv
706.224 823.615 705.449 824.226 704.44 824.226 cv
cp
704.802 818.753 mo
699.184 818.753 li
699.184 830.763 li
701.74 830.763 li
701.74 826.478 li
704.802 826.478 li
707.394 826.478 708.835 824.712 708.835 822.625 cv
708.835 820.517 707.412 818.753 704.802 818.753 cv
cp
f
716.142 828.71 mo
713.909 828.71 712.485 827 712.485 824.767 cv
712.485 822.517 713.909 820.824 716.142 820.824 cv
718.356 820.824 719.778 822.517 719.778 824.767 cv
719.778 827 718.356 828.71 716.142 828.71 cv
cp
716.142 818.556 mo
712.504 818.556 709.857 821.148 709.857 824.767 cv
709.857 828.386 712.504 830.978 716.142 830.978 cv
719.761 830.978 722.407 828.386 722.407 824.767 cv
722.407 821.148 719.761 818.556 716.142 818.556 cv
cp
f
726.399 822.031 mo
726.399 821.31 727.013 820.841 728.093 820.841 cv
729.317 820.841 730.613 821.255 731.585 822.156 cv
733.009 820.248 li
731.819 819.15 730.235 818.574 728.327 818.574 cv
725.5 818.574 723.771 820.23 723.771 822.228 cv
723.771 826.748 730.686 825.289 730.686 827.378 cv
730.686 828.08 730.019 828.71 728.597 828.71 cv
726.94 828.71 725.626 827.955 724.78 827.072 cv
723.376 829.07 li
724.51 830.205 726.166 830.978 728.489 830.978 cv
731.712 830.978 733.296 829.322 733.296 827.126 cv
733.296 822.642 726.399 823.921 726.399 822.031 cv
cp
f
735.003 830.763 mo
737.56 830.763 li
737.56 818.753 li
735.003 818.753 li
735.003 830.763 li
cp
f
739.196 818.753 mo
739.196 821.003 li
742.708 821.003 li
742.708 830.763 li
745.282 830.763 li
745.282 821.003 li
748.775 821.003 li
748.775 818.753 li
739.196 818.753 li
cp
f
685.115 783.131 mo
661.91 783.131 li
661.91 773.771 li
666.631 773.771 li
666.631 778.411 li
680.395 778.411 li
680.395 773.771 li
685.115 773.771 li
685.115 783.131 li
cp
.0952911 .0952911 .0952911 rgb
f
762.631 783.131 mo
739.426 783.131 li
739.426 773.771 li
744.146 773.771 li
744.146 778.411 li
757.91 778.411 li
757.91 773.771 li
762.631 773.771 li
762.631 783.131 li
cp
f
654.521 771.521 mo
770.021 771.521 li
770.021 656.021 li
654.521 656.021 li
654.521 771.521 li
cp
774.521 776.021 mo
650.021 776.021 li
650.021 651.521 li
774.521 651.521 li
774.521 776.021 li
cp
f
664.271 680.939 mo
652.271 680.939 li
652.271 676.439 li
664.271 676.439 li
664.271 680.939 li
cp
f
664.271 751.105 mo
652.271 751.105 li
652.271 746.605 li
664.271 746.605 li
664.271 751.105 li
cp
f
666.521 759.521 mo
758.021 759.521 li
758.021 668.021 li
666.521 668.021 li
666.521 759.521 li
cp
762.521 764.021 mo
662.021 764.021 li
662.021 663.521 li
762.521 663.521 li
762.521 764.021 li
cp
f
712.271 693.521 mo
701.104 693.521 692.021 702.605 692.021 713.771 cv
692.021 724.937 701.104 734.021 712.271 734.021 cv
723.437 734.021 732.521 724.937 732.521 713.771 cv
732.521 702.605 723.437 693.521 712.271 693.521 cv
cp
712.271 738.521 mo
698.623 738.521 687.521 727.418 687.521 713.771 cv
687.521 700.124 698.623 689.021 712.271 689.021 cv
725.918 689.021 737.021 700.124 737.021 713.771 cv
737.021 727.418 725.918 738.521 712.271 738.521 cv
cp
f
700.771 716.021 mo
689.771 716.021 li
689.771 711.521 li
700.771 711.521 li
700.771 716.021 li
cp
f
712.271 702.521 mo
706.067 702.521 701.021 707.568 701.021 713.771 cv
701.021 719.974 706.067 725.021 712.271 725.021 cv
718.474 725.021 723.521 719.974 723.521 713.771 cv
723.521 707.568 718.474 702.521 712.271 702.521 cv
cp
712.271 729.521 mo
703.586 729.521 696.521 722.456 696.521 713.771 cv
696.521 705.086 703.586 698.021 712.271 698.021 cv
720.955 698.021 728.021 705.086 728.021 713.771 cv
728.021 722.456 720.955 729.521 712.271 729.521 cv
cp
f
749.771 727.271 mo
745.271 727.271 li
745.271 700.271 li
749.771 700.271 li
749.771 727.271 li
cp
f
865.882 822.031 mo
865.882 821.31 866.493 820.841 867.573 820.841 cv
868.798 820.841 870.095 821.255 871.067 822.156 cv
872.489 820.248 li
871.3 819.15 869.716 818.574 867.808 818.574 cv
864.981 818.574 863.253 820.23 863.253 822.228 cv
863.253 826.748 870.167 825.289 870.167 827.378 cv
870.167 828.08 869.499 828.71 868.077 828.71 cv
866.421 828.71 865.106 827.955 864.261 827.072 cv
862.856 829.07 li
863.991 830.205 865.647 830.978 867.97 830.978 cv
871.192 830.978 872.776 829.322 872.776 827.126 cv
872.776 822.642 865.882 823.921 865.882 822.031 cv
cp
.0980392 .0941176 .0941176 rgb
f
882.712 825.884 mo
882.712 827.558 881.759 828.71 879.903 828.71 cv
878.05 828.71 877.077 827.558 877.077 825.884 cv
877.077 818.753 li
874.483 818.753 li
874.483 825.955 li
874.483 828.927 876.249 830.978 879.903 830.978 cv
883.56 830.978 885.323 828.927 885.323 825.955 cv
885.323 818.753 li
882.712 818.753 li
882.712 825.884 li
cp
f
892.954 824.246 mo
890.253 824.246 li
890.253 821.003 li
892.954 821.003 li
893.962 821.003 894.735 821.617 894.735 822.607 cv
894.735 823.632 893.962 824.246 892.954 824.246 cv
cp
897.364 822.625 mo
897.364 820.392 895.815 818.753 893.313 818.753 cv
887.696 818.753 li
887.696 830.763 li
890.253 830.763 li
890.253 826.496 li
892.126 826.496 li
894.483 830.763 li
897.437 830.763 li
894.718 826.189 li
896.015 825.884 897.364 824.732 897.364 822.625 cv
cp
f
904.06 827.972 mo
900.728 818.753 li
897.829 818.753 li
902.456 830.763 li
905.661 830.763 li
910.29 818.753 li
907.39 818.753 li
904.06 827.972 li
cp
f
911.401 830.763 mo
919.901 830.763 li
919.901 828.513 li
913.958 828.513 li
913.958 825.775 li
919.774 825.775 li
919.774 823.525 li
913.958 823.525 li
913.958 821.003 li
919.901 821.003 li
919.901 818.753 li
911.401 818.753 li
911.401 830.763 li
cp
f
921.896 830.763 mo
924.452 830.763 li
924.452 818.753 li
921.896 818.753 li
921.896 830.763 li
cp
f
929.294 818.753 mo
926.72 818.753 li
926.72 830.763 li
934.372 830.763 li
934.372 828.513 li
929.294 828.513 li
929.294 818.753 li
cp
f
938.563 818.753 mo
935.989 818.753 li
935.989 830.763 li
943.642 830.763 li
943.642 828.513 li
938.563 828.513 li
938.563 818.753 li
cp
f
948.464 826.478 mo
950.337 821.31 li
952.21 826.478 li
948.464 826.478 li
cp
948.733 818.753 mo
944.106 830.763 li
947.005 830.763 li
947.763 828.728 li
952.911 828.728 li
953.667 830.763 li
956.567 830.763 li
951.938 818.753 li
948.733 818.753 li
cp
f
965.872 826.298 mo
960.308 818.753 li
957.679 818.753 li
957.679 830.763 li
960.235 830.763 li
960.235 822.931 li
965.962 830.763 li
968.429 830.763 li
968.429 818.753 li
965.872 818.753 li
965.872 826.298 li
cp
f
976.634 820.824 mo
977.858 820.824 978.938 821.599 979.444 822.57 cv
981.64 821.49 li
980.794 819.978 979.263 818.556 976.634 818.556 cv
973.015 818.556 970.226 821.058 970.226 824.767 cv
970.226 828.458 973.015 830.978 976.634 830.978 cv
979.263 830.978 980.794 829.521 981.64 828.027 cv
979.444 826.964 li
978.938 827.937 977.858 828.71 976.634 828.71 cv
974.438 828.71 972.854 827.037 972.854 824.767 cv
972.854 822.498 974.438 820.824 976.634 820.824 cv
cp
f
991.665 821.003 mo
991.665 818.753 li
983.167 818.753 li
983.167 830.763 li
991.665 830.763 li
991.665 828.513 li
985.724 828.513 li
985.724 825.775 li
991.54 825.775 li
991.54 823.525 li
985.724 823.525 li
985.724 821.003 li
991.665 821.003 li
cp
f
943.179 733.127 mo
926.783 716.737 li
929.965 713.555 li
946.36 729.946 li
943.179 733.127 li
cp
.0952911 .0952911 .0952911 rgb
f
984.925 739.07 mo
957.519 739.07 li
957.519 734.57 li
984.925 734.57 li
984.925 739.07 li
cp
f
950.054 731.597 mo
947.176 731.597 944.832 733.941 944.831 736.821 cv
944.831 739.7 947.174 742.042 950.054 742.042 cv
952.929 742.042 955.269 739.7 955.269 736.82 cv
955.269 733.94 952.929 731.597 950.054 731.597 cv
cp
950.054 746.542 mo
944.692 746.542 940.331 742.181 940.331 736.82 cv
940.334 731.458 944.695 727.097 950.054 727.097 cv
955.41 727.097 959.769 731.458 959.769 736.82 cv
959.769 742.181 955.41 746.542 950.054 746.542 cv
cp
f
992.284 716.166 mo
991.021 716.166 989.835 716.656 988.945 717.545 cv
988.052 718.438 987.56 719.623 987.56 720.882 cv
987.56 752.757 li
987.56 754.016 988.052 755.203 988.945 756.096 cv
989.833 756.982 991.02 757.473 992.285 757.476 cv
995.011 757.474 li
995.009 716.166 li
992.284 716.166 li
cp
992.284 761.976 mo
992.277 761.976 li
989.813 761.97 987.501 761.013 985.765 759.279 cv
984.02 757.535 983.06 755.218 983.06 752.757 cv
983.06 720.882 li
983.06 718.419 984.021 716.104 985.765 714.363 cv
987.503 712.624 989.819 711.666 992.284 711.666 cv
999.509 711.666 li
999.511 761.97 li
992.284 761.976 li
cp
f
999.509 771.677 mo
995.009 771.677 li
995.009 701.964 li
999.509 701.964 li
999.509 771.677 li
cp
f
978.351 717.396 mo
872.442 717.396 li
872.442 680.296 li
876.942 680.296 li
876.942 712.896 li
973.851 712.896 li
973.851 697.722 li
978.351 697.722 li
978.351 717.396 li
cp
f
893.049 695.472 mo
978.497 695.472 li
978.497 665.115 li
862.692 665.115 li
893.049 695.472 li
cp
982.997 699.972 mo
891.186 699.972 li
851.829 660.615 li
982.997 660.615 li
982.997 699.972 li
cp
f
867.476 710.937 mo
862.976 710.937 li
862.976 688.029 li
867.476 688.029 li
867.476 710.937 li
cp
f
885.006 181.447 mo
886.878 176.279 li
888.751 181.447 li
885.006 181.447 li
cp
885.276 173.722 mo
880.649 185.732 li
883.548 185.732 li
884.304 183.697 li
889.453 183.697 li
890.21 185.732 li
893.108 185.732 li
888.481 173.722 li
885.276 173.722 li
cp
.0980392 .0941176 .0941176 rgb
f
902.413 181.267 mo
896.851 173.722 li
894.222 173.722 li
894.222 185.732 li
896.778 185.732 li
896.778 177.899 li
902.503 185.732 li
904.97 185.732 li
904.97 173.722 li
902.413 173.722 li
902.413 181.267 li
cp
f
906.604 175.973 mo
910.116 175.973 li
910.116 185.732 li
912.69 185.732 li
912.69 175.973 li
916.183 175.973 li
916.183 173.722 li
906.604 173.722 li
906.604 175.973 li
cp
f
917.818 185.732 mo
920.375 185.732 li
920.375 173.722 li
917.818 173.722 li
917.818 185.732 li
cp
f
927.72 182.941 mo
924.388 173.722 li
921.489 173.722 li
926.116 185.732 li
929.321 185.732 li
933.949 173.722 li
931.05 173.722 li
927.72 182.941 li
cp
f
935.062 185.732 mo
937.618 185.732 li
937.618 173.722 li
935.062 173.722 li
935.062 185.732 li
cp
f
945.251 179.214 mo
942.55 179.214 li
942.55 175.973 li
945.251 175.973 li
946.259 175.973 947.034 176.585 947.034 177.576 cv
947.034 178.602 946.259 179.214 945.251 179.214 cv
cp
949.663 177.593 mo
949.663 175.361 948.114 173.722 945.611 173.722 cv
939.993 173.722 li
939.993 185.732 li
942.55 185.732 li
942.55 181.465 li
944.423 181.465 li
946.782 185.732 li
949.734 185.732 li
947.016 181.159 li
948.312 180.853 949.663 179.7 949.663 177.593 cv
cp
f
959.796 180.853 mo
959.796 182.527 958.841 183.679 956.987 183.679 cv
955.132 183.679 954.16 182.527 954.16 180.853 cv
954.16 173.722 li
951.567 173.722 li
951.567 180.924 li
951.567 183.896 953.331 185.948 956.987 185.948 cv
960.642 185.948 962.407 183.896 962.407 180.924 cv
962.407 173.722 li
959.796 173.722 li
959.796 180.853 li
cp
f
966.976 177 mo
966.976 176.279 967.588 175.811 968.669 175.811 cv
969.893 175.811 971.188 176.225 972.161 177.125 cv
973.584 175.217 li
972.396 174.119 970.812 173.542 968.902 173.542 cv
966.075 173.542 964.347 175.199 964.347 177.197 cv
964.347 181.717 971.261 180.258 971.261 182.347 cv
971.261 183.049 970.595 183.679 969.173 183.679 cv
967.517 183.679 966.202 182.923 965.355 182.041 cv
963.95 184.04 li
965.085 185.174 966.741 185.948 969.064 185.948 cv
972.288 185.948 973.872 184.292 973.872 182.095 cv
973.872 177.611 966.976 178.89 966.976 177 cv
cp
f
927.261 55.5059 mo
918.187 55.5059 910.804 62.8887 910.804 71.9629 cv
910.804 81.0371 918.187 88.4199 927.261 88.4199 cv
936.335 88.4199 943.718 81.0371 943.718 71.9629 cv
943.718 62.8887 936.335 55.5059 927.261 55.5059 cv
cp
927.261 92.9199 mo
915.705 92.9199 906.304 83.5186 906.304 71.9629 cv
906.304 60.4072 915.705 51.0059 927.261 51.0059 cv
938.816 51.0059 948.218 60.4072 948.218 71.9629 cv
948.218 83.5186 938.816 92.9199 927.261 92.9199 cv
cp
.0952911 .0952911 .0952911 rgb
f
927.261 62.4355 mo
925.469 62.4355 924.011 63.8936 924.011 65.6855 cv
924.011 67.4775 925.469 68.9355 927.261 68.9355 cv
929.053 68.9355 930.511 67.4775 930.511 65.6855 cv
930.511 63.8936 929.053 62.4355 927.261 62.4355 cv
cp
927.261 73.4355 mo
922.987 73.4355 919.511 69.959 919.511 65.6855 cv
919.511 61.4121 922.987 57.9355 927.261 57.9355 cv
931.534 57.9355 935.011 61.4121 935.011 65.6855 cv
935.011 69.959 931.534 73.4355 927.261 73.4355 cv
cp
f
929.511 77.8105 mo
929.511 79.0537 928.503 80.0605 927.261 80.0605 cv
926.019 80.0605 925.011 79.0537 925.011 77.8105 cv
925.011 76.5674 926.019 75.5605 927.261 75.5605 cv
928.503 75.5605 929.511 76.5674 929.511 77.8105 cv
cp
f
976.28 111.971 mo
971.78 111.971 li
971.78 94.1636 961.206 78.1079 944.842 71.0669 cv
946.621 66.9331 li
964.639 74.686 976.28 92.3643 976.28 111.971 cv
cp
f
882.741 111.971 mo
878.241 111.971 li
878.241 92.3584 889.884 74.6768 907.902 66.9233 cv
909.682 71.0571 li
893.315 78.0986 882.741 94.1582 882.741 111.971 cv
cp
f
927.261 36.7969 mo
923.344 36.7969 920.157 39.9834 920.157 43.9004 cv
920.157 47.8184 923.344 51.0059 927.261 51.0059 cv
931.178 51.0059 934.364 47.8184 934.364 43.9004 cv
934.364 39.9834 931.178 36.7969 927.261 36.7969 cv
cp
927.261 55.5059 mo
920.862 55.5059 915.657 50.2998 915.657 43.9004 cv
915.657 37.502 920.862 32.2969 927.261 32.2969 cv
933.659 32.2969 938.864 37.502 938.864 43.9004 cv
938.864 50.2998 933.659 55.5059 927.261 55.5059 cv
cp
f
927.261 36.7969 mo
923.263 36.7969 920.011 33.5444 920.011 29.5469 cv
920.011 27.9487 920.522 26.4336 921.49 25.166 cv
925.066 27.8965 li
924.703 28.373 924.511 28.9438 924.511 29.5469 cv
924.511 31.0635 925.744 32.2969 927.261 32.2969 cv
928.777 32.2969 930.011 31.0635 930.011 29.5469 cv
930.011 28.9434 929.818 28.3721 929.455 27.894 cv
933.035 25.1685 li
934.001 26.4365 934.511 27.9507 934.511 29.5469 cv
934.511 33.5444 931.259 36.7969 927.261 36.7969 cv
cp
f
913.955 144.331 mo
900.782 138.908 892.271 126.207 892.271 111.971 cv
892.271 98.8892 899.479 87.0015 911.081 80.9468 cv
913.163 84.936 li
903.052 90.2129 896.771 100.572 896.771 111.971 cv
896.771 124.375 904.188 135.444 915.668 140.169 cv
913.955 144.331 li
cp
f
940.57 144.33 mo
938.854 140.17 li
950.333 135.435 957.751 124.366 957.751 111.971 cv
957.751 100.572 951.471 90.2129 941.36 84.936 cv
943.442 80.9468 li
955.044 87.002 962.251 98.8896 962.251 111.971 cv
962.251 126.195 953.74 138.897 940.57 144.33 cv
cp
f
937.262 46.939 mo
935.861 42.6626 li
947.202 38.9487 954.821 28.4229 954.821 16.4707 cv
959.321 16.4707 li
959.321 30.3735 950.456 42.6182 937.262 46.939 cv
cp
f
917.262 46.939 mo
904.067 42.6182 895.202 30.3735 895.202 16.4707 cv
899.702 16.4707 li
899.702 28.4229 907.321 38.9487 918.662 42.6626 cv
917.262 46.939 li
cp
f
941.285 61.0078 mo
939.936 56.7148 li
957.583 51.1626 969.44 34.9897 969.44 16.4707 cv
969.44 11.8433 968.696 7.30176 967.229 2.97217 cv
971.491 1.52783 li
973.116 6.32324 973.94 11.3511 973.94 16.4707 cv
973.94 36.9644 960.817 54.8623 941.285 61.0078 cv
cp
f
913.235 61.0078 mo
893.704 54.8618 880.581 36.9639 880.581 16.4707 cv
880.581 11.3569 881.405 6.33008 883.03 1.52881 cv
887.292 2.97119 li
885.825 7.30664 885.081 11.8486 885.081 16.4707 cv
885.081 34.9893 896.938 51.1621 914.587 56.7148 cv
913.235 61.0078 li
cp
f
483.667 822.021 mo
483.667 821.302 484.279 820.833 485.359 820.833 cv
486.584 820.833 487.88 821.248 488.853 822.148 cv
490.275 820.24 li
489.087 819.14 487.502 818.564 485.594 818.564 cv
482.767 818.564 481.038 820.22 481.038 822.22 cv
481.038 826.74 487.952 825.281 487.952 827.369 cv
487.952 828.072 487.286 828.701 485.863 828.701 cv
484.207 828.701 482.893 827.945 482.047 827.064 cv
480.643 829.062 li
481.776 830.197 483.433 830.97 485.756 830.97 cv
488.979 830.97 490.563 829.314 490.563 827.117 cv
490.563 822.634 483.667 823.912 483.667 822.021 cv
cp
0 0 0 rgb
f
497.528 824.218 mo
494.827 824.218 li
494.827 820.996 li
497.528 820.996 li
498.536 820.996 499.311 821.607 499.311 822.615 cv
499.311 823.607 498.536 824.218 497.528 824.218 cv
cp
497.888 818.744 mo
492.271 818.744 li
492.271 830.753 li
494.827 830.753 li
494.827 826.468 li
497.888 826.468 li
500.481 826.468 501.921 824.705 501.921 822.615 cv
501.921 820.509 500.499 818.744 497.888 818.744 cv
cp
f
510.993 818.744 mo
508.022 823.552 li
505.051 818.744 li
502.134 818.744 li
506.743 825.839 li
506.743 830.753 li
509.3 830.753 li
509.3 825.839 li
513.892 818.744 li
510.993 818.744 li
cp
f
463.455 697.371 mo
531.079 697.371 li
516.488 650.282 li
497.267 658.127 li
478.045 650.282 li
463.455 697.371 li
cp
537.185 701.871 mo
457.349 701.871 li
475.2 644.26 li
497.267 653.266 li
519.334 644.26 li
537.185 701.871 li
cp
.0980392 .0941176 .0941176 rgb
f
463.084 701.871 mo
497.267 710.571 li
531.451 701.871 li
463.084 701.871 li
cp
497.267 715.213 mo
496.712 715.073 li
445.25 701.975 li
445.25 697.371 li
549.286 697.371 li
549.286 701.975 li
497.267 715.213 li
cp
f
530.021 688.599 mo
464.514 688.599 li
464.514 684.099 li
530.021 684.099 li
530.021 688.599 li
cp
f
478.318 720.9 mo
473.247 720.9 469.122 725.025 469.122 730.095 cv
469.122 735.166 473.247 739.291 478.318 739.291 cv
483.389 739.291 487.514 735.166 487.514 730.095 cv
487.514 725.025 483.389 720.9 478.318 720.9 cv
cp
478.318 743.791 mo
470.766 743.791 464.622 737.647 464.622 730.095 cv
464.622 722.543 470.766 716.4 478.318 716.4 cv
485.87 716.4 492.014 722.543 492.014 730.095 cv
492.014 737.647 485.87 743.791 478.318 743.791 cv
cp
f
476.122 730.095 mo
471.622 730.095 li
471.622 726.404 474.625 723.4 478.318 723.4 cv
478.318 727.9 li
477.107 727.9 476.122 728.884 476.122 730.095 cv
cp
f
516.218 720.9 mo
511.146 720.9 507.021 725.025 507.021 730.095 cv
507.021 735.166 511.146 739.291 516.218 739.291 cv
521.287 739.291 525.411 735.166 525.411 730.095 cv
525.411 725.025 521.287 720.9 516.218 720.9 cv
cp
516.218 743.791 mo
508.665 743.791 502.521 737.647 502.521 730.095 cv
502.521 722.543 508.665 716.4 516.218 716.4 cv
523.769 716.4 529.911 722.543 529.911 730.095 cv
529.911 737.647 523.769 743.791 516.218 743.791 cv
cp
f
514.021 730.095 mo
509.521 730.095 li
509.521 726.404 512.524 723.4 516.218 723.4 cv
516.218 727.9 li
515.006 727.9 514.021 728.884 514.021 730.095 cv
cp
f
507.021 730.095 mo
502.521 730.095 li
502.521 727.2 500.164 724.843 497.267 724.843 cv
494.371 724.843 492.014 727.2 492.014 730.095 cv
487.514 730.095 li
487.514 724.718 491.889 720.343 497.267 720.343 cv
502.646 720.343 507.021 724.718 507.021 730.095 cv
cp
f
533.767 732.345 mo
527.661 732.345 li
527.661 727.845 li
533.767 727.845 li
533.767 732.345 li
cp
f
466.872 732.345 mo
460.767 732.345 li
460.767 727.845 li
466.872 727.845 li
466.872 732.345 li
cp
f
511.304 788.766 mo
507.94 785.776 li
548.124 740.567 li
540.503 727.611 li
544.382 725.33 li
553.663 741.108 li
511.304 788.766 li
cp
f
545.266 788.854 mo
525.557 769.145 li
528.738 765.963 li
548.447 785.672 li
545.266 788.854 li
cp
f
483.23 788.766 mo
440.87 741.108 li
450.154 725.33 li
454.033 727.611 li
446.41 740.567 li
486.593 785.776 li
483.23 788.766 li
cp
f
449.268 788.854 mo
446.086 785.672 li
465.795 765.963 li
468.977 769.145 li
449.268 788.854 li
cp
f
209.471 1039.23 mo
206.771 1039.23 li
206.771 1035.99 li
209.471 1035.99 li
210.479 1035.99 211.254 1036.6 211.254 1037.59 cv
211.254 1038.62 210.479 1039.23 209.471 1039.23 cv
cp
213.883 1037.61 mo
213.883 1035.38 212.334 1033.74 209.831 1033.74 cv
204.214 1033.74 li
204.214 1045.75 li
206.771 1045.75 li
206.771 1041.48 li
208.643 1041.48 li
211.002 1045.75 li
213.954 1045.75 li
211.235 1041.18 li
212.532 1040.87 213.883 1039.72 213.883 1037.61 cv
cp
f
215.787 1045.75 mo
224.286 1045.75 li
224.286 1043.5 li
218.344 1043.5 li
218.344 1040.76 li
224.16 1040.76 li
224.16 1038.51 li
218.344 1038.51 li
218.344 1035.99 li
224.286 1035.99 li
224.286 1033.74 li
215.787 1033.74 li
215.787 1045.75 li
cp
f
228.478 1037.02 mo
228.478 1036.3 229.09 1035.83 230.17 1035.83 cv
231.395 1035.83 232.69 1036.24 233.663 1037.14 cv
235.086 1035.23 li
233.897 1034.14 232.313 1033.56 230.404 1033.56 cv
227.577 1033.56 225.849 1035.22 225.849 1037.22 cv
225.849 1041.73 232.763 1040.28 232.763 1042.37 cv
232.763 1043.07 232.097 1043.7 230.674 1043.7 cv
229.018 1043.7 227.703 1042.94 226.857 1042.06 cv
225.452 1044.06 li
226.587 1045.19 228.243 1045.97 230.566 1045.97 cv
233.789 1045.97 235.374 1044.31 235.374 1042.11 cv
235.374 1037.63 228.478 1038.91 228.478 1037.02 cv
cp
f
236.108 1035.99 mo
239.619 1035.99 li
239.619 1045.75 li
242.194 1045.75 li
242.194 1035.99 li
245.688 1035.99 li
245.688 1033.74 li
236.108 1033.74 li
236.108 1035.99 li
cp
f
252.58 1039.23 mo
249.879 1039.23 li
249.879 1035.99 li
252.58 1035.99 li
253.588 1035.99 254.362 1036.6 254.362 1037.59 cv
254.362 1038.62 253.588 1039.23 252.58 1039.23 cv
cp
256.991 1037.61 mo
256.991 1035.38 255.442 1033.74 252.94 1033.74 cv
247.322 1033.74 li
247.322 1045.75 li
249.879 1045.75 li
249.879 1041.48 li
251.752 1041.48 li
254.11 1045.75 li
257.063 1045.75 li
254.345 1041.18 li
255.641 1040.87 256.991 1039.72 256.991 1037.61 cv
cp
f
258.896 1045.75 mo
261.453 1045.75 li
261.453 1033.74 li
258.896 1033.74 li
258.896 1045.75 li
cp
f
269.661 1035.81 mo
270.886 1035.81 271.966 1036.59 272.471 1037.56 cv
274.667 1036.48 li
273.82 1034.97 272.29 1033.54 269.661 1033.54 cv
266.042 1033.54 263.252 1036.05 263.252 1039.75 cv
263.252 1043.45 266.042 1045.97 269.661 1045.97 cv
272.29 1045.97 273.82 1044.51 274.667 1043.01 cv
272.471 1041.95 li
271.966 1042.92 270.886 1043.7 269.661 1043.7 cv
267.465 1043.7 265.88 1042.02 265.88 1039.75 cv
265.88 1037.49 267.465 1035.81 269.661 1035.81 cv
cp
f
275.455 1035.99 mo
278.966 1035.99 li
278.966 1045.75 li
281.541 1045.75 li
281.541 1035.99 li
285.034 1035.99 li
285.034 1033.74 li
275.455 1033.74 li
275.455 1035.99 li
cp
f
286.669 1045.75 mo
295.168 1045.75 li
295.168 1043.5 li
289.226 1043.5 li
289.226 1040.76 li
295.042 1040.76 li
295.042 1038.51 li
289.226 1038.51 li
289.226 1035.99 li
295.168 1035.99 li
295.168 1033.74 li
286.669 1033.74 li
286.669 1045.75 li
cp
f
301.898 1043.5 mo
299.72 1043.5 li
299.72 1035.99 li
301.916 1035.99 li
304.365 1035.99 305.661 1037.63 305.661 1039.74 cv
305.661 1041.79 304.274 1043.5 301.898 1043.5 cv
cp
301.898 1033.74 mo
297.163 1033.74 li
297.163 1045.75 li
301.916 1045.75 li
305.661 1045.75 308.272 1043.37 308.272 1039.74 cv
308.272 1036.14 305.661 1033.74 301.898 1033.74 cv
cp
f
317.81 1041.47 mo
319.682 1036.3 li
321.555 1041.47 li
317.81 1041.47 li
cp
318.079 1033.74 mo
313.452 1045.75 li
316.351 1045.75 li
317.107 1043.72 li
322.257 1043.72 li
323.013 1045.75 li
325.912 1045.75 li
321.284 1033.74 li
318.079 1033.74 li
cp
f
332.282 1039.23 mo
329.581 1039.23 li
329.581 1035.99 li
332.282 1035.99 li
333.29 1035.99 334.064 1036.6 334.064 1037.59 cv
334.064 1038.62 333.29 1039.23 332.282 1039.23 cv
cp
336.693 1037.61 mo
336.693 1035.38 335.145 1033.74 332.643 1033.74 cv
327.024 1033.74 li
327.024 1045.75 li
329.581 1045.75 li
329.581 1041.48 li
331.454 1041.48 li
333.813 1045.75 li
336.766 1045.75 li
334.047 1041.18 li
335.343 1040.87 336.693 1039.72 336.693 1037.61 cv
cp
f
338.599 1045.75 mo
347.097 1045.75 li
347.097 1043.5 li
341.155 1043.5 li
341.155 1040.76 li
346.971 1040.76 li
346.971 1038.51 li
341.155 1038.51 li
341.155 1035.99 li
347.097 1035.99 li
347.097 1033.74 li
338.599 1033.74 li
338.599 1045.75 li
cp
f
352.188 1041.47 mo
354.062 1036.3 li
355.934 1041.47 li
352.188 1041.47 li
cp
355.664 1033.74 mo
352.459 1033.74 li
347.831 1045.75 li
350.73 1045.75 li
351.486 1043.72 li
356.636 1043.72 li
357.393 1045.75 li
360.291 1045.75 li
355.664 1033.74 li
cp
f
288.55 887.446 mo
287.139 887.25 285.697 887.118 284.265 887.055 cv
284.461 882.559 li
286.035 882.628 287.62 882.773 289.171 882.989 cv
288.55 887.446 li
cp
275.673 887.486 mo
275.025 883.033 li
276.579 882.807 278.163 882.652 279.732 882.574 cv
279.958 887.068 li
278.529 887.14 277.087 887.28 275.673 887.486 cv
cp
296.913 889.438 mo
295.56 888.976 294.168 888.574 292.779 888.242 cv
293.823 883.865 li
295.351 884.229 296.88 884.671 298.368 885.18 cv
296.913 889.438 li
cp
267.326 889.531 mo
265.841 885.283 li
267.324 884.765 268.851 884.312 270.38 883.938 cv
271.45 888.309 li
270.061 888.649 268.673 889.06 267.326 889.531 cv
cp
304.741 892.987 mo
303.503 892.276 302.215 891.616 300.912 891.026 cv
302.769 886.926 li
304.203 887.577 305.621 888.302 306.982 889.084 cv
304.741 892.987 li
cp
259.519 893.127 mo
257.255 889.239 li
258.617 888.446 260.029 887.711 261.454 887.055 cv
263.335 891.143 li
262.041 891.739 260.757 892.407 259.519 893.127 cv
cp
311.761 897.957 mo
310.679 897.024 309.538 896.132 308.369 895.304 cv
310.969 891.632 li
312.254 892.542 313.508 893.522 314.697 894.546 cv
311.761 897.957 li
cp
252.531 898.141 mo
249.574 894.749 li
250.76 893.714 252.008 892.726 253.283 891.812 cv
255.906 895.468 li
254.746 896.3 253.611 897.2 252.531 898.141 cv
cp
317.72 904.159 mo
316.83 903.038 315.877 901.947 314.887 900.917 cv
318.132 897.799 li
319.22 898.931 320.267 900.129 321.245 901.362 cv
317.72 904.159 li
cp
246.61 904.38 mo
243.067 901.607 li
244.034 900.373 245.074 899.167 246.158 898.023 cv
249.423 901.121 li
248.436 902.161 247.49 903.257 246.61 904.38 cv
cp
.0952911 .0952911 .0952911 rgb
f
275.955 977.077 mo
277.366 977.273 278.808 977.405 280.24 977.467 cv
280.044 981.963 li
278.47 981.894 276.885 981.75 275.333 981.534 cv
275.955 977.077 li
cp
288.832 977.037 mo
289.479 981.49 li
287.926 981.715 286.342 981.871 284.772 981.949 cv
284.547 977.455 li
285.976 977.382 287.418 977.243 288.832 977.037 cv
cp
267.592 975.084 mo
268.945 975.546 270.336 975.949 271.726 976.281 cv
270.682 980.658 li
269.154 980.293 267.625 979.851 266.137 979.342 cv
267.592 975.084 li
cp
297.179 974.992 mo
298.664 979.24 li
297.181 979.757 295.654 980.21 294.125 980.584 cv
293.055 976.213 li
294.444 975.874 295.832 975.462 297.179 974.992 cv
cp
259.764 971.536 mo
261.001 972.247 262.29 972.907 263.593 973.497 cv
261.736 977.596 li
260.302 976.946 258.884 976.22 257.522 975.438 cv
259.764 971.536 li
cp
304.986 971.395 mo
307.25 975.284 li
305.888 976.077 304.476 976.811 303.051 977.467 cv
301.169 973.379 li
302.464 972.784 303.748 972.116 304.986 971.395 cv
cp
252.744 966.566 mo
253.826 967.499 254.967 968.39 256.136 969.218 cv
253.536 972.89 li
252.251 971.981 250.997 971 249.808 969.976 cv
252.744 966.566 li
cp
311.974 966.381 mo
314.931 969.774 li
313.745 970.808 312.497 971.796 311.222 972.71 cv
308.599 969.054 li
309.759 968.222 310.894 967.323 311.974 966.381 cv
cp
246.785 960.364 mo
247.675 961.485 248.628 962.576 249.618 963.606 cv
246.373 966.723 li
245.285 965.591 244.238 964.393 243.26 963.161 cv
246.785 960.364 li
cp
317.895 960.142 mo
321.438 962.916 li
320.471 964.15 319.431 965.356 318.347 966.5 cv
315.082 963.402 li
316.069 962.362 317.015 961.265 317.895 960.142 cv
cp
f
216.838 972.559 mo
213.657 969.377 li
268.536 914.499 li
271.717 917.68 li
216.838 972.559 li
cp
f
252.363 933.852 mo
213.656 895.145 li
216.837 891.963 li
255.544 930.67 li
252.363 933.852 li
cp
f
258.234 950.028 mo
255.052 946.846 li
287.402 914.497 li
290.583 917.678 li
258.234 950.028 li
cp
f
277.103 950.028 mo
273.921 946.846 li
306.271 914.497 li
309.453 917.678 li
277.103 950.028 li
cp
f
295.97 950.024 mo
292.789 946.842 li
347.667 891.963 li
350.849 895.145 li
295.97 950.024 li
cp
f
347.667 972.559 mo
308.959 933.852 li
312.141 930.67 li
350.849 969.377 li
347.667 972.559 li
cp
f
32.3916 1045.75 mo
34.9482 1045.75 li
34.9482 1033.74 li
32.3916 1033.74 li
32.3916 1045.75 li
cp
.0980392 .0941176 .0941176 rgb
f
42.0586 1043.5 mo
39.8799 1043.5 li
39.8799 1035.99 li
42.0771 1035.99 li
44.5254 1035.99 45.8223 1037.63 45.8223 1039.74 cv
45.8223 1041.79 44.4355 1043.5 42.0586 1043.5 cv
cp
42.0586 1033.74 mo
37.3232 1033.74 li
37.3232 1045.75 li
42.0771 1045.75 li
45.8223 1045.75 48.4326 1043.37 48.4326 1039.74 cv
48.4326 1036.14 45.8223 1033.74 42.0586 1033.74 cv
cp
f
60.707 1035.81 mo
61.9316 1035.81 63.0117 1036.59 63.5156 1037.56 cv
65.7129 1036.48 li
64.8662 1034.97 63.3359 1033.54 60.707 1033.54 cv
57.0879 1033.54 54.2969 1036.05 54.2969 1039.76 cv
54.2969 1043.45 57.0879 1045.97 60.707 1045.97 cv
63.3359 1045.97 64.8662 1044.51 65.7129 1043.01 cv
63.5156 1041.95 li
63.0117 1042.92 61.9316 1043.7 60.707 1043.7 cv
58.5107 1043.7 56.9258 1042.02 56.9258 1039.76 cv
56.9258 1037.49 58.5107 1035.81 60.707 1035.81 cv
cp
f
70.21 1041.47 mo
72.082 1036.3 li
73.9551 1041.47 li
70.21 1041.47 li
cp
70.4795 1033.74 mo
65.8525 1045.75 li
68.751 1045.75 li
69.5078 1043.72 li
74.6572 1043.72 li
75.4131 1045.75 li
78.3125 1045.75 li
73.6846 1033.74 li
70.4795 1033.74 li
cp
f
84.6826 1039.23 mo
81.9814 1039.23 li
81.9814 1035.99 li
84.6826 1035.99 li
85.6904 1035.99 86.4648 1036.6 86.4648 1037.59 cv
86.4648 1038.62 85.6904 1039.23 84.6826 1039.23 cv
cp
89.0938 1037.61 mo
89.0938 1035.38 87.5449 1033.74 85.043 1033.74 cv
79.4248 1033.74 li
79.4248 1045.75 li
81.9814 1045.75 li
81.9814 1041.48 li
83.8545 1041.48 li
86.2129 1045.75 li
89.166 1045.75 li
86.4473 1041.18 li
87.7432 1040.87 89.0938 1039.72 89.0938 1037.61 cv
cp
f
95.7344 1043.5 mo
93.5557 1043.5 li
93.5557 1035.99 li
95.752 1035.99 li
98.2012 1035.99 99.4971 1037.63 99.4971 1039.74 cv
99.4971 1041.79 98.1104 1043.5 95.7344 1043.5 cv
cp
95.7344 1033.74 mo
90.999 1033.74 li
90.999 1045.75 li
95.752 1045.75 li
99.4971 1045.75 102.108 1043.37 102.108 1039.74 cv
102.108 1036.14 99.4971 1033.74 95.7344 1033.74 cv
cp
f
4.5 981.011 mo
130 981.011 li
130 916.511 li
4.5 916.511 li
4.5 981.011 li
cp
134.5 985.511 mo
0 985.511 li
0 912.011 li
134.5 912.011 li
134.5 985.511 li
cp
.0952911 .0952911 .0952911 rgb
f
55.25 966.761 mo
18.75 966.761 li
18.75 930.261 li
55.25 930.261 li
55.25 966.761 li
cp
14.25 925.761 mo
14.25 971.261 li
59.75 971.261 li
59.75 925.761 li
14.25 925.761 li
cp
f
52.2734 971.261 mo
47.7734 971.261 li
47.7734 965.568 li
47.7734 964.14 47.2168 962.798 46.2065 961.789 cv
45.1899 960.779 43.8433 960.22 42.4209 960.22 cv
31.5771 960.22 li
30.1479 960.22 28.8057 960.776 27.7979 961.787 cv
26.7832 962.798 26.2266 964.14 26.2266 965.568 cv
26.2266 971.261 li
21.7266 971.261 li
21.7266 965.568 li
21.7266 962.937 22.7524 960.463 24.6157 958.604 cv
26.4707 956.746 28.9438 955.72 31.5771 955.72 cv
42.4209 955.72 li
45.0396 955.72 47.5117 956.743 49.3823 958.6 cv
51.2485 960.465 52.2734 962.938 52.2734 965.568 cv
52.2734 971.261 li
cp
f
37 938.778 mo
34.0513 938.778 31.6523 941.177 31.6523 944.125 cv
31.6523 947.076 34.0513 949.476 37 949.476 cv
39.9478 949.476 42.3457 947.076 42.3457 944.125 cv
42.3457 941.177 39.9478 938.778 37 938.778 cv
cp
37 953.976 mo
31.5698 953.976 27.1523 949.557 27.1523 944.125 cv
27.1523 938.696 31.5698 934.278 37 934.278 cv
42.4287 934.278 46.8457 938.696 46.8457 944.125 cv
46.8457 949.557 42.4287 953.976 37 953.976 cv
cp
f
134.5 916.511 mo
0 916.511 li
0 896.011 li
59.25 896.011 li
59.25 900.511 li
4.5 900.511 li
4.5 912.011 li
130 912.011 li
130 900.511 li
75.25 900.511 li
75.25 896.011 li
134.5 896.011 li
134.5 916.511 li
cp
f
120.5 950.761 mo
71.75 950.761 li
71.75 946.261 li
120.5 946.261 li
120.5 950.761 li
cp
f
120.5 961.011 mo
71.75 961.011 li
71.75 956.511 li
120.5 956.511 li
120.5 961.011 li
cp
f
96.125 971.261 mo
71.75 971.261 li
71.75 966.761 li
96.125 966.761 li
96.125 971.261 li
cp
f
76.25 936.011 mo
116 936.011 li
116 930.261 li
76.25 930.261 li
76.25 936.011 li
cp
120.5 940.511 mo
71.75 940.511 li
71.75 925.761 li
120.5 925.761 li
120.5 940.511 li
cp
f
61.5 904.011 mo
73 904.011 li
73 889.261 li
73 887.725 72.4023 886.282 71.3169 885.197 cv
70.23 884.11 68.7856 883.511 67.25 883.511 cv
65.7144 883.511 64.27 884.11 63.1836 885.196 cv
62.0977 886.282 61.5 887.725 61.5 889.261 cv
61.5 904.011 li
cp
77.5 908.511 mo
57 908.511 li
57 889.261 li
57 886.522 58.0664 883.949 60.0024 882.013 cv
61.938 880.078 64.5122 879.011 67.25 879.011 cv
69.9878 879.011 72.562 880.078 74.498 882.014 cv
76.4336 883.949 77.5 886.522 77.5 889.261 cv
77.5 908.511 li
cp
f
65 889.261 mo
65 890.504 66.0068 891.511 67.25 891.511 cv
68.4932 891.511 69.5 890.504 69.5 889.261 cv
69.5 888.018 68.4932 887.011 67.25 887.011 cv
66.0068 887.011 65 888.018 65 889.261 cv
cp
f
852.418 1043.5 mo
850.239 1043.5 li
850.239 1035.99 li
852.436 1035.99 li
854.885 1035.99 856.181 1037.63 856.181 1039.74 cv
856.181 1041.79 854.794 1043.5 852.418 1043.5 cv
cp
852.418 1033.74 mo
847.683 1033.74 li
847.683 1045.75 li
852.436 1045.75 li
856.181 1045.75 858.792 1043.37 858.792 1039.74 cv
858.792 1036.14 856.181 1033.74 852.418 1033.74 cv
cp
.0980392 .0941176 .0941176 rgb
f
863.091 1041.47 mo
864.964 1036.3 li
866.836 1041.47 li
863.091 1041.47 li
cp
863.361 1033.74 mo
858.734 1045.75 li
861.633 1045.75 li
862.389 1043.72 li
867.538 1043.72 li
868.295 1045.75 li
871.193 1045.75 li
866.566 1033.74 li
863.361 1033.74 li
cp
f
879.995 1033.74 mo
870.416 1033.74 li
870.416 1035.99 li
873.928 1035.99 li
873.928 1045.75 li
876.502 1045.75 li
876.502 1035.99 li
879.995 1035.99 li
879.995 1033.74 li
cp
f
883.575 1041.47 mo
885.447 1036.3 li
887.32 1041.47 li
883.575 1041.47 li
cp
883.845 1033.74 mo
879.218 1045.75 li
882.116 1045.75 li
882.873 1043.72 li
888.022 1043.72 li
888.778 1045.75 li
891.678 1045.75 li
887.05 1033.74 li
883.845 1033.74 li
cp
f
902.673 1039.22 mo
899.973 1039.22 li
899.973 1035.99 li
902.673 1035.99 li
903.682 1035.99 904.456 1036.6 904.456 1037.61 cv
904.456 1038.6 903.682 1039.22 902.673 1039.22 cv
cp
903.033 1033.74 mo
897.416 1033.74 li
897.416 1045.75 li
899.973 1045.75 li
899.973 1041.47 li
903.033 1041.47 li
905.626 1041.47 907.066 1039.7 907.066 1037.61 cv
907.066 1035.51 905.645 1033.74 903.033 1033.74 cv
cp
f
913.923 1039.23 mo
911.223 1039.23 li
911.223 1035.99 li
913.923 1035.99 li
914.932 1035.99 915.706 1036.6 915.706 1037.6 cv
915.706 1038.62 914.932 1039.23 913.923 1039.23 cv
cp
918.335 1037.61 mo
918.335 1035.38 916.786 1033.74 914.283 1033.74 cv
908.666 1033.74 li
908.666 1045.75 li
911.223 1045.75 li
911.223 1041.48 li
913.095 1041.48 li
915.454 1045.75 li
918.406 1045.75 li
915.688 1041.18 li
916.984 1040.87 918.335 1039.72 918.335 1037.61 cv
cp
f
925.947 1043.7 mo
923.715 1043.7 922.293 1041.99 922.293 1039.76 cv
922.293 1037.5 923.715 1035.81 925.947 1035.81 cv
928.162 1035.81 929.585 1037.5 929.585 1039.76 cv
929.585 1041.99 928.162 1043.7 925.947 1043.7 cv
cp
925.947 1033.54 mo
922.311 1033.54 919.664 1036.14 919.664 1039.76 cv
919.664 1043.37 922.311 1045.97 925.947 1045.97 cv
929.566 1045.97 932.214 1043.37 932.214 1039.76 cv
932.214 1036.14 929.566 1033.54 925.947 1033.54 cv
cp
f
932.84 1035.99 mo
936.351 1035.99 li
936.351 1045.75 li
938.926 1045.75 li
938.926 1035.99 li
942.418 1035.99 li
942.418 1033.74 li
932.84 1033.74 li
932.84 1035.99 li
cp
f
944.054 1045.75 mo
952.552 1045.75 li
952.552 1043.5 li
946.61 1043.5 li
946.61 1040.76 li
952.426 1040.76 li
952.426 1038.51 li
946.61 1038.51 li
946.61 1035.99 li
952.552 1035.99 li
952.552 1033.74 li
944.054 1033.74 li
944.054 1045.75 li
cp
f
960.381 1035.81 mo
961.605 1035.81 962.686 1036.59 963.189 1037.56 cv
965.387 1036.48 li
964.54 1034.97 963.01 1033.54 960.381 1033.54 cv
956.762 1033.54 953.971 1036.05 953.971 1039.76 cv
953.971 1043.45 956.762 1045.97 960.381 1045.97 cv
963.01 1045.97 964.54 1044.51 965.387 1043.01 cv
963.189 1041.95 li
962.686 1042.92 961.605 1043.7 960.381 1043.7 cv
958.185 1043.7 956.6 1042.02 956.6 1039.76 cv
956.6 1037.49 958.185 1035.81 960.381 1035.81 cv
cp
f
966.175 1035.99 mo
969.686 1035.99 li
969.686 1045.75 li
972.261 1045.75 li
972.261 1035.99 li
975.753 1035.99 li
975.753 1033.74 li
966.175 1033.74 li
966.175 1035.99 li
cp
f
977.389 1045.75 mo
979.945 1045.75 li
979.945 1033.74 li
977.389 1033.74 li
977.389 1045.75 li
cp
f
988.027 1043.7 mo
985.795 1043.7 984.373 1041.99 984.373 1039.76 cv
984.373 1037.5 985.795 1035.81 988.027 1035.81 cv
990.242 1035.81 991.665 1037.5 991.665 1039.76 cv
991.665 1041.99 990.242 1043.7 988.027 1043.7 cv
cp
988.027 1033.54 mo
984.391 1033.54 981.744 1036.14 981.744 1039.76 cv
981.744 1043.37 984.391 1045.97 988.027 1045.97 cv
991.646 1045.97 994.294 1043.37 994.294 1039.76 cv
994.294 1036.14 991.646 1033.54 988.027 1033.54 cv
cp
f
1004.28 1033.74 mo
1004.28 1041.29 li
998.719 1033.74 li
996.09 1033.74 li
996.09 1045.75 li
998.646 1045.75 li
998.646 1037.92 li
1004.37 1045.75 li
1006.84 1045.75 li
1006.84 1033.74 li
1004.28 1033.74 li
cp
f
930.052 880.256 mo
924.468 880.256 li
924.468 875.756 li
930.052 875.756 li
930.052 880.256 li
cp
.0952911 .0952911 .0952911 rgb
f
936.752 988.766 mo
917.768 988.766 li
917.768 984.266 li
936.752 984.266 li
936.752 988.766 li
cp
f
893.122 872.011 mo
887.929 872.011 883.703 876.236 883.703 881.429 cv
883.703 983.111 li
883.703 988.294 887.929 992.511 893.122 992.511 cv
961.404 992.511 li
966.596 992.511 970.818 988.294 970.818 983.111 cv
970.818 881.429 li
970.818 876.236 966.596 872.011 961.404 872.011 cv
893.122 872.011 li
cp
961.404 997.011 mo
893.122 997.011 li
885.447 997.011 879.203 990.776 879.203 983.111 cv
879.203 881.429 li
879.203 873.754 885.447 867.511 893.122 867.511 cv
961.404 867.511 li
969.076 867.511 975.318 873.754 975.318 881.429 cv
975.318 983.111 li
975.318 990.776 969.076 997.011 961.404 997.011 cv
cp
f
893.78 976.021 mo
960.742 976.021 li
960.742 888.501 li
893.78 888.501 li
893.78 976.021 li
cp
965.242 980.521 mo
889.28 980.521 li
889.28 884.001 li
965.242 884.001 li
965.242 980.521 li
cp
f
927.262 913.011 mo
916.647 913.011 908.012 921.647 908.012 932.261 cv
908.012 942.875 916.647 951.511 927.262 951.511 cv
937.876 951.511 946.512 942.875 946.512 932.261 cv
946.512 921.647 937.876 913.011 927.262 913.011 cv
cp
927.262 956.011 mo
914.166 956.011 903.512 945.357 903.512 932.261 cv
903.512 919.166 914.166 908.511 927.262 908.511 cv
940.357 908.511 951.012 919.166 951.012 932.261 cv
951.012 945.357 940.357 956.011 927.262 956.011 cv
cp
f
924.499 942.444 mo
914.434 932.375 li
917.615 929.194 li
924.499 936.079 li
936.908 923.67 li
940.09 926.852 li
924.499 942.444 li
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 16.0.0
%%For: (Max) ()
%%Title: (vector_411.eps)
%%CreationDate: 10/6/2015 12:44 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb"-6H]K8jE@(Ir!.BY%a+1P/C0/,!1Nb>dk\bQj^$nCNm'SL*`IR)I1=n>CJA\Xqm\dg>cABWBC/XV]*kO<ar./DYU+>PpR?@#!
%EUlp)jSmsoDa/aCp/h"Wrnj@)Um>qJP#BUb.IEW'R+i.$n0`_Vhqn;/p".M#]^<*Q*h@3'fV^T@dse<5G.XZ_U[<t`YJ0i'p"L!A
%HiNNal`\'PGk]1hpL!smk2FoFhqn:mb?rq@?JbTEYJ9klh7qh%J+<*[5?jVh5B!/W^%p[\e%>?]^AMrVhej-oce/#2^U@0d!rP`;
%s6S(H1sms_J,!E\BBR:nJ+E1q]0BZNV#:/S++F4c=)YhPnG_O)2t,W&cQD2o]0G1ql<h4'lD8r<-aST8c]@FZ2_SM;o&Vf;I*a`h
%Nhbs]%mReE.K8q`?[i7$f5.kLKb?V>J+P=P-&BlCn-VsHIJab-c8Xj^l8h0,faD%0lN$7Hg?dGE)l/NI!6L:HPB__0oD6Y6^3KJ4
%2*5erG('9%5K#k]mWh'skfg0s2m_m15KU&(&P&b5rg,RIs7N9Ks6]L&cX4H]^:Sali>6G35O0O5)iamm07NoF(U)`rmFsQAlnr@s
%VI'1-^AIj$(O#^rJu:8.Z7A^H`IIiB^NoYS=0Fj@W-n?Y2gFdU]bt&Pm]XA#nh4>KqDC`Fnr*G==0LN\c+F"l>Q%.]2L(_)^esuG
%.@^!rrE%-9hM.$L>'"db+#do'V[eYYi-[Lg>c4?8IV+6%YM[+jeXO$4c$5r2?YKK+cecG4r"u"`]8$=D'A\\th\gqB`pGX2q!e,s
%4A!\f4oFDUTPq;hq$UI(na5KMn%M2NI#Y?(2T4M,kl9YuYPblM(]M]Tn]b/7//3L*=7<6,S$tBI%tF(MqVCr5B4$$r^\kG4n%SV_
%cen`mh%,#)UV"k0rT!45s7,s9LNi3hO$CDTl[Sh>p>s=R5N3s$q4%+3?eII+q`<m5jdWH&r,8+PT(DpH)u\@AnuM`h9Dng,g=m#n
%AT=5*d`8iso(n8g?_'s),VS&(Ie.b:hgb<9:B%RQ?G:j`reA0ikPgAus'i`gBs6k_q]Yi;VmW5iQ+\G$i\Ab3nQQJ_rT[TmlK*eN
%1A1M?mH7i[Zg6q`S!WX!SFRK2rph/gIIZIc0@pNVP4eFU]Xn]XhnT-U\%9iYhgGAu2h1Geh&"+iciO-HUQaSb:n)qn(Kguml2p\&
%J%m@\Gko;pDgqBYj]DKSk1-BTs,#X:$iPggheEk=i`lH4'sGAU(]1_]^SgD9+F<t`N@DX"0Wfij0u*M8QQKQ4PGsmuI/id9S(I\[
%>X\>co$(BCHZ+B'c'o6IO8aJ"j]=.gDLV+O0>E)U7m<K(4O2\FZN]@$!;tn*^O9g`2tq7:8,V';Q_2$t[HFGH5J$mS)ge@[r+eCc
%n[#?<q<%\J+9(1?Ie\Q_[d@c^[_?VRP4G2KnLqGsS9FfeqUW[%:G^=cbZ:Z$J+D:kqo^FuGj5G0;9a$Roh@9OMq`9B[LK.MEr"DW
%IYRa'J(O#d^/rpomp@&?(9dZqFN'lcqr74:(Z0W=!I\s8YnP[ON;rd15KK=BP'o+ck$7\\p1a6RmF1kKp6kh?o::<trSRMM@%S8/
%H,RbKplqDnL;0'Ninq]'lefRoqG[?"I2`.^^H_VsJ):"Q7`U#/I6[:M3!86TN,i"fb<pP+:GphmS*aB`m<-o]n*5OR*pZbZ>-a@B
%f%Su,S*dB7[tj\0SppHeIC"\\qnDfQmW\R,raLB4TDI-`*U:&A^A$#f^ZuF/7=Q<38G5Zu0\9t00ur+[*tRCO4O),W;42UbF.[l@
%GrP3T$f6*eX`*+i:\kNmXH/nas'OZ-jeqXTYE(ikAp:s`IdZQDcd.5l?J+F<+$8N3p;DmAT6TIYp7<>m/O%lMAmZp7XMKfBq`NS&
%IidrtDkB,g9`#6Im&dt*GP\&eVrI<c+1s#q_:V?Qi=.n3g#paH3/RXigZQjGdm!J[+$)WuIB;VYY7H=/)hgNS_*bMh4j<lRrDVK1
%O2C?!jc=S#&,5hmGPC]Xh"U^E^>7E<@O!nhDg,!$O*97gGP?<*GOo_-ot11*h:9,HUHRFMo4cq5Z%mY0:7]tHh)`*kC)rmYRbN(m
%+n3?doA0\i*5dNNDF:5R5fkol[f4bum6s/0HQ,N)##r'?AOFE@=Ku;#qR5_([mT91,G^GK5BlF7^HN1oo4!+h5PdM$UCe.mAfiqb
%RuR6VVtOZ7qd?a=[UF6Pg+4s+VES.4hqJPXFgp%7Y#.pTanl%Rk1[1&LKRb6[k[K(pC[C/s6+mdg?[OuDV4dJj*\/KS#fDCohDbV
%lIK%cqX!)8mY1>mP7?ho]iqO^GO+@!]mXP,ra<G>GlM;a,h[u%2DSIKNb:-rs2NB'RZAQJor/=Ka+r8/05EJL)/Ns8%+a3nq$LD6
%P%hJ6Vk-@?gDqXdVNJP8N,=OABl=I@]DD<J)W*Han*s&2m`*XkA(sI2VXZf>[AdRRe\t""Z4[&P7e>\3Xu;"n;k#F6IGXAOO#A9Q
%HGA95HMf/hH1VX?eJ!)MdlfoRn"1pkp7+qP9M`9KCf3CK'R6o,s+Fqm;omhfUJ4TI%K8WY4ZqGSHF,F$B^bA/4PC3n[!2#L#*qu#
%Hn&20X<W)4TAf+XS\;`BXXa$iil\"'`MT300>h+CX>./Lpc>aL9#+V/Xcp-C9Wg8aeqK0#=TA(Z^M,BOEiD&N2pX_7QM\kpVpUfo
%h6%VQVJAli+SKfem3?O'FF'K^[f:3\2j9$jU7",bRUG3?iUjaS6\\f#>AM9qp4hlSnJ<YjS>#+HB=&ZUX\GO0])(mD>1_T-=WG)b
%XkOiHNC.4Jo,/)pjeLJ6g\7QY[:W4*:3Z7*T8WGs@r1ZR`D<_+3Q3(UgZHjmbhL\[*]pP(SQ^G3KCs0?^4#h=ld'KujWZLj@Cgn[
%I.esB`#i:b-#115g5cUg(<AuuI>R*'V-2Q>.;K.S7oL_)rk8;QHr'(cQm*t[mS3D<<5Y7WKq6dnU#!*'?@&9(1hdor[#,3-ToCtW
%Ml")3.S37s:eQRQEn/+Sj%26oKGM;G7Pedlhq<d-p8UCD/I#"roK4gne#-HKn(Q3&JCt6OO/R/F2YKL&++M#M[r([4NjAN'5up2g
%A'smONFc18\#&P,6biDuA+5%]RDtq[6??Ql%Xec6JU4%h;s="tWL7jC?I5h-bd!:7ZdZ1i1Xk^,$u%^[VO0SgD-jS>1]%h+Rq`kJ
%S&m&@k$beZEc?oJ38GAs/4oP5f7K6:gOb+?L^Oi]UKEUe8W#qCbL-K0B<7:m[,>K4_29bM65j^OST`,J75nr2h9fuJVu?1<p)Q=m
%Yk"meiPNqSrkppZV+LC0^A@26obkE6n9*6%chm.eVU*Y:T@+t1HSBdg*kcfBm73Y*q7#uBSCF;eL\E-#eJE1*fr%?D_IYT/M`n,T
%p"j!Bld<?C@W[!6EYRtNlXM_,Na>aN+$KS%^@&&:-TfWN*%mo\gj222rO_aQ^%^(;RUPA>G*upm=3!EbpXDdlJ"ijj:S6jMMVut(
%4Vdp[]q;GjKml(/9)TGeol'M'oN'2UR#fX%:S0<Qc.(gU`4R(V*dbQl=B`C]o\8g4G3u[RS>ke_Dehsok<JuNchJr1p)GYuCWp'@
%KUqXC%Im]4gPBpaJ?]<LTQ,]`Fp+e?c0`cA8(Zi>;hO&.(H.j!RbFl*ml5oj&144(Sd\+Pg%ZsR0"Q2X"%,lj5P8I!+@8lT_[JUY
%QfjK+c95I&62RA'C4O"%d7X2C/<gs+NUjt/I+h2$K]\<"REh2D[uRk`=8FMC/KS]<q_lh;HOo!`hK"Xbcs(pk^M7qo]k`9hWe)G,
%h'3"H0,PV<@rS5J%lFlZ,S-$MYTCHdIRKj)H`3__=Ah)493s;[Eefa5omUQ+UmCS"?[^g5htPYCWNRrBc>I9Fo<9#r4)XeO&=NLD
%7bR$+*.L33o)(,Bh8qj38"P&eTDI[<lcc_33]$0D]YZI;-N+n/b\q^*?_![%F(RVp<\H8pPD7ZWA5jP/q/[@#rSGhE\E8)8S,M5[
%1on\'\2s&-J1:KWm+g>0s3;;U'"PZp/<>VKh25;u%hR7J'HgfEo'$k%A;GaJ9Z8\1ME-\fk,/7d^XL94$'K-,1Ffg"fff6#Z(p'a
%V7EL"7if<R_r#YZm@Tn=qt#)dpp\M*B!\8b/4k$L-Y0Ju#%8jHT!Wcsfi:&\;AcCu>9(s)O32lR.i=gj\$K@O]Ad=EHe(6].mA:F
%qet0Aj&=J4m;?3GVPA;2]a]T12CP/5R+SLJiR?_L^j1I*D$06\NLQ25q`i[.U=ZlBgTE5L09$(0kKO\*A(F&%rVQmhL2TSfL$'(O
%rOl##)moTU/:[NJ^[Ht!T,b,rGo4^,01mEXkXE=S,Q+89bRoH;>9TAh'nXiRoTTD3qHsT3%/gj1T>WjAAmTuM#K[O'TXJt"(Zp71
%;.dh:^k7M/=R;0bn$`#OF([Y>4?f;(8#Wntect9PesdJamJr^VX?m0%_G43hDV.Vd52*U@@&qnMX^WBugrD8[D&1fM]?_^o]CBF%
%BMUIj*bf<$nFmQp2'piY5>&3JI(.@!D8jt@l3/#@S!$Qh[pL+gJS-m"h#kl]P#CO7A/*.IZ%#qoIeu%Oc[3)q:l;$E;>fW77P6[D
%:/1VbB^L"[q"p*Fq8q#JJ*3Kl[g^r=a7/)t$nd"L5hNOSKDjEjCsIE$J)rcg63!k/H;/b=/+"18$*TTR2'm<<UuH1IgAJl"T?;c`
%IOG!LiZ7sQ5J?m^qS/u1!qYOErVQ6,J%5-*I0d?pkJCpCIjMb(&`U)0k0aQY)2,W?kAG_Ca3OJ<T,7KHoDdZQMso+Cs)HI8hpRBD
%O0uUKM"?[1+:ld^0<Ur9dl%/FdPX\pChnEG4@7b9S/c&#1h(8p*960BG4&hhI%M2NO-19a0f*[:4PK18)ZdSDkIo.+-WA4-<+<=F
%FH;^F@=-)X@dO]^<6h$d&e>L+bW"Ec,]hE7fkiCR.BmM9iSG!F(M7VL4`4k\'tNtoLWTSVKZT(hs/o]"7hID+`@mhSDt9C4*u!Om
%M=8L'pLE3lNer\+hV4@FJN:[[>8GG%9=n[E5NSJda+f'XGPjO'eZl>bQ.mc"1_9T#^\O5JnD*j>:$nl!CT'h>h$_)6XkE;^od6S^
%CBLR"<q#\<hu>5+s$g@I(uXk4Xmc;GIf<\$rDu)8c!T?*_uJM055ud1r>Z'\V;fEP?UFV:okscg,$m5%([#je>'`=8l3T]Pe%>>r
%?G(Q;HN'9"IspoeT)7YGn)(hU!^$nj>!>m@jCe3??i@=E4L,]Lp2efXrti';^[TQqo)J?AcLO;_rR^nSh3r\!`YMI\'lsYcraCF]
%7<uG'On$Vp&HCY&A@'^%2k*Q$^"uMR=T2&<2-8b6g]'1.DBQ/4R3BAaUOZ-45qY+"fWL7h1jXd2Nt0`sbtgQACRW]Tp4cbB^lk07
%Eq@(YHb-V9gi#Zn[23UkYPW0.S"43Gg%SsBlaK$drFV;KXcDA,1[,Bq%nJ'7^F!X(D\M2BLJ]`T^6c.OF0gj(o:(og%UcmT>3QZY
%d\d3o+&CKdf@arI_cjf$Ym>mMG1V)G0!KOSZb>GYcdqgEfh-j8ndRF&fK*n^^WcqLF*oA)J'5<u\Dl2eijpKp/9OS5fIJ;Jq`Z8[
%/UTBl33u3PH6DEUauZ]U/kOO&:#SRRHu#:=:gYmq%bg^uF5.rFLqX"eK`0J.EV25:[<H(cB,\hI!>nc/cGS(2lk0a/lfqAeQhtVY
%QQfW$2Pa$?V/>"Vil5B*[qU#$R^UsMllBMBlm(n^Zt)>t.`RAf"(HH+T)9n&"Fc(uE/oT,L?!_+*YQf$(*7.<LUB\;G!k\_=1(5U
%,hp!*VYRZiO%s];hVTR\_=rs;[HYPpJVIl.6]fE+=Z9D@)^%%pDHksJ?\p?mK9F=]f[B/c.7TBC#eN%gE#HPg4du<j]sHCN`SD$:
%Du=#3Okm-t69M9d4dV]E2LX]:*'SWrg"4K;\<kGNCcopBo;^7u]G3tRmShQV9[Rh7jpeX'*Nq!G;td>4D"MQH"c83mbXWWMql"j(
%Up[;4OP._?S6*&Rg@Eo?(`;dg6RWj_cR)oQrDk*'/2ufOHfnhJgAm]9184%_^_enZfbaJ6Y1TpPg?f(5m):=.KMEH`^=hGrpDV@:
%:"'hU=XH!F`nomcDOkrpG.4pLj6>njL7OF@Lb?p&`I(=g)H<(A(:OIrb^-S=blhaI.bN)9P>YASR$9r@JdnV8JP?W]ZR*b!GRF.D
%U0Z5@K@J`]^3;Xjc\%?U!F@Q7\!0?WeTuA9VCl)hb8dBo5q$5kLMjN/Cb*TBD*o?=_jN!mfJ/Y)Akune*bD8&a+OH39(kWm929Ia
%8F7uqauK\m5nDZF@/!VLJ==FNID$:-VE?3%`LC^866+7)kq9U(3:X'5"0Njh3l`9K?+`,^1L"7-L[MTGlt5'?5TT9RQZTpt2*u/1
%Ru/s9f!/\$GY>JCmFLHt$TPQGof2b@C5S_K0J$lai&]"B_MKBp2qrZ?aYl=Ve"VeRb30P4rg)`Llf#-`WD`9-UEoJr9gFYUHeOIt
%5B^r[hsE\pV9hgm(GkKlgDe&i@,h9GTG]q?LJ"jZn>^*VS<OneFtR!mq82Zm=,119:,]d\_oW&N)%LN@]8^f$a%TYOltU3gae2YN
%L91b/Wc"-Jjf3%pS(VRin!cuS)dd3t<'FQAHA>h6Q!,(0rG8>jL8>bVM.XeY!FXa<3]+'H/u-$q!UQ]GI')g#G\iMXb%1ri"sMXe
%RPe(aV:4!?]RS.-[gPl5e@0"Y4:4N*m)BN(Bn?dE.ZT#t>NWjD4slrP.);"!ZT%A16'*d!c$Ze*G$JpSVMK&r0iP%?oY^SN9S1"C
%[O6N4O0P1^k7;2Y<l;kOkZ2bdXM'?W_a4VJ%o_%Q_&WpTX(;Xt+Zf82i)*b>]'G98/4_\rV+f>Sb=9Q0O)O!O\W(<$Ro0pJ<jhd:
%9GRG^s7q)t'3j"T%snD-)5Pau'U\b"Ja=fk35q'Q[C7rg2m=&,?S-K'0mFi<5A/XMDL>(G.bk$+]5a4O>e[r-UlA;/)po)6Rps^9
%@S,T*_HJ^;1Dj:PO"sb1<+o"rLPuI1n[;07&STTH:,_>"druc$4'SPhoYQ's\sL<b1-r`ebdcs^q^C(Ao@D?!/t7F4'r^%&RX?cW
%Qo6c>mlJ/np#%T>c*(e>'m=8F*GW?t5.W3:Zo32D)-(b@nP3nf/[MSCGa!"SAs*ID*"P?o1q!.jfh4aqdtC6'\_4?@[!/pQVdfdC
%<OP7JQ)_7?+4"iJ<bA:p%6Xj11gP<8s1?_$dNY(:0]`e@_he[u$.BpsTVtO<->)NQ96kJNSbmFt+N<0k4S6\9=p-!^1nj;rc(ZGk
%_d;dMA#>HcFt+oqluG#GT[Pm:@2%@CmhdPc@HR/u2trof0sdio@iXnbQ!B$'2=4O`$CUo1m;21-bG@F#Uh6(k0i08E@ucf4RK7#:
%O7"MR-m7l$3r>MbV?]E)9JAclU:SJ.=j8jO/R4lNBf?Yi(RnEl@.L$4<h-ngnQa<b9a*-`4#lS;Lc"]u#(/`VIXFkWOg?SrB1&B;
%W\kLUadW$2NX\1H9nCl3<.mM<Zh_jGE#iPF7)^oN[5;DaF0)aT/VuGP[6\hC?,RT_4b8m52I@O>ed`Y3G5Ghg16D3GWj$eN6U7[]
%!Y3HXh/=so";OD_C,[lP9WB_"?oK[[[t@[#-gFV3=Q/,^m54-UhJPrRpIia3D4BKqg3K?lTr7N<c/dYS\`96e&tSdQZ.ch1Ct=aH
%J#q[ceheg/#:V$6*a6B&(g*Og!Wr>RC(DK!gs2L1=WNbVa;KU1kHPbWK!F10.93B0$tQlFki3ZnU^_<I4GU^Aa1bU4,ouDCg?CUp
%iT`ajQHdZ4IJ3d0k1)N6h409**.hu?["K2&.:O6<j%IhB/)3KC8MMtN@XUDH6SbD>`h#c4I`&]!-j8gZ-?l*fQ86)eFGc.'+`A<Q
%OQ""&?\&4>!f-R7e/*L\X'Ot9_f-Ri*T9G/$>a,Xl7T^<:gtlq&2nU&D!WW--Yg(I^qD7QN%bnWP<hM76hEAdI=]5;&XL\"_TJha
%A2B/V#)70LjY6//.1a@;T].)%a9_p:YOE:hVT[r'=1\n[(t+B"K4)/#AV)\<,(&[rdWNG"G^Yr6D4O/@O8CIKL.LnQ9Lai\maDC#
%i<c1/jT5"Xl&pWgp,4BE)\k9.XY'62Dp5U+Q4c<%#uqK&BkqAT#T#s=`QU%mB@c\,1hV`Df&513l4s3Q.palt_4])X!k3G3ULcpT
%$Y'Us`CnAd0#=4$fZK.aKSl(`OGe3NW_N4sY@(rne.n[27QY!>Zq<kF4A(8TYYO0%-1<n/,M]CaCfq>ZPB&pV[-k<-PK`:@?&:mu
%Y39oO<\l=gR%COpC=;l7JQ?>5O5MXCi##l;p)F,do#[%(G:JLR(W*<NSX*oS&%P_Bbt>U7h?K`gnF.o:E\om7U.+DFEf].:*='EW
%YgqqQanN?[S(=HgoL:HL$9Q$<)dLafO1"/*pL0M'>94Y`8k$Yc91`"\!tusI$ngWG,@%"W@aWHM-;^sp=mg2o.VA`n3SaX>4TkjE
%0PHn5O!E_*MB>0tA,W&A_#&`%N!Dq#Z,$\POB7T]nb<Z.31-&03EDub%lNHFi(C;P$*V/VVnK)NNag")7LTS2,F?&Z1VIuColG9&
%UD@*n#J.ZJJHWttb=.Q"Cmq+G$t%d,cD?Fc_n_/YA(V?D,cBo?ZJq.ub/Y?p2t^aF@`7.Qi=s2)@MDW?5=pdqI_$s+(9EYFqD_5^
%+7D/I>kTEH()81SR-T4MaYpC=_'Y:e/g_'M1`BmQ58]^KP1bq$i>*mG5$-=^bdOlUX5c)T2p'lW"k3'5N&AMCQrH>?!r_7)RRY2r
%2[QVF>VJ])f2"G`I^bdOD'=X#KgbH74:"VI8oRu\am3:cBd#gui)oSUFHHr;#SnXi'/:%jCgb<N<d4@4<a#SCT^IOB!p^`Q"H+;W
%p4..rU2??#=DSh,7$nB[`RH_h&6bi?Q?K*0?:DY(3YLG#k@'>s%`<q$9>Z$EHk:@<[B*l%Qm"=.QkB7*6nmqq44e_@E*fWUPe,PT
%`C*]=DR]-dB4+KK(h$>3"<Kbm4uM\G;e,Mf6!]-d!<V/2@qd8k!-eV#apoPK>$VJV"9M$7&Lld-4d3aS>l&**7nYen9h^aq\tR*N
%*YDaOG]akrF00)raWLl1]EfRGn\r3mF2D9-$<pZ#[8Ar>#/hI2ij:YcYQ?nN'/ZH,Lsn)OC[Zdn[3L!1#!8Y!OhsN245iORs#t7@
%cGB"eX,'EoNW?WS%I.YtKgB=L%Hn$1,ih7g.h!MCRt@oOafNRfkGqKCQopb_FAUXT0HB_,3GYV3__C5+ED;L>,!N<k]kgjRAsSpq
%0%^aCK/@Qo6@QqOo5pmi!eb)Yd'1fuG!"\'8>X.fjG@9(R@roS:r'"k"mIkI7S@Qa&amI;EjSNd#XUJtfsD]j-/peL[W""bk&K7j
%Bf_8K8fmH?Y1e<tq<W$?m7[k@K^V0FniIIs&27/f!N,!o-<IP;<L@Eopd@Wl$tB]9R'-h4.JRc&AseF//1KD&kYU'in>H^/2OBn9
%jNi21fg*L;&0Q[:R&T5Z6E$_p]kY.08s)AlCHr5B5)5\gH^t#Vj;rcBbGc3c&4kP^Go.cp-<QU$d&`^"R+H)3YRsh7j4"p"YcKgo
%$@RL7rsTf_(0SUkL1j+Xf+.S/&5\@SJ72@`)Y,[g)<kg'kA"%o+*ec,%jmqea/^@G'j2r'LL8ed[;hC=(>pMW^glN"d,JJO!@+^:
%XNVYCHU0QkkH=/RL/Z/g)K$u])`>iK9kB[iEX6;:WeK#cNZfHP0M080'b90;SdMD<bqL0#_W<8!Z]Cn%*#BeiG(q91juT(eH"PsP
%^ao#-!10B/g2KVCS>Ktb!K6:bCd3[,\)Q^L/%RX'.h`/b(2O$>o&U]kdj=`._$Jg8-7@e_>0JnD2^sS_Dm!lO6-O/OM&?Q\adC(u
%NoM(q<>k^fjL?[++M9kKFI;FF%1:SJ)A3X2S3m<M\,;[BZo@`'ck,Q*mN^3;llOl6q*11Z7V5rR+IbP#A71KnVLh`Hni6++K@'ak
%Yn07W#-G,2PZ;>FP\K\>>D1!YX=m-@)@HR9J<W&S8s8'9dq0]4!@JBY$GD1lCu\Y>!Xo/>'-#QXes/r\#adJ.m-MR!@.+AFlq<ru
%=`F`08aRnM''+aiDoW#spJJERD(ng09tngOqTI@26/=Xn[\%pe[%ih9GRmh"j97Q:C6][V$m;i.YikbGX7ZI2FbQ"o"ZB(*H\56W
%"L8n7#0D!J%dR+JADcV!+j\0D?UGHR77A@WLBLM84X?b<cnI_?0nuJ41aGTWIPg&Ad5DLJRXj?V5DhHaBFUL)!%r@=,L#'G<?gJF
%=OjG2i/D%QGZ(CXr4<n870ZF*1ng$K24iQOI"t)!?:N#!?pJH&,&KLKXVkLO(sDI<rX+RBQK+pF#dO%3'3e++&Qt^GS!O\%5.$52
%`\uIpaA*iucY6SGO^a"Umi/Rp3I>L.jQnqb`R$]Lo,Pc$'MeSuW6oQ4&6:7h.gS,M+ZNr`_\S5_i6Kh[_j_aI.=Om2:Icr=i;h2\
%.#7l5e?kgIiT3pegDht';TJ0mm/\=?<\<cS14qJU#G!1T0H=p:LlqVbrAc$'jqaadrFU7dqG^4NMcJ2B:;gDaCg0&Q<8prH#hg#L
%BmfUC2&YKrRh@S4Y;!L/@Q[\M$8]YE?#ETn$!n;^.qA]tc/Dl0!"92JKj8<E$u%4*jIHgj.Ja4a4>l01NlX7+(I0/E%"P+A^*51_
%e"6,a4%t]l!1[LtaGpeDd]-7[?S-UE0()@0!SN+%N!Up;RG>o9"[og'pOg)[B#9TDgu;&]#X`dClq2BK7'a]Mcnq#'_J!;VRSp5!
%Aq\7iK)h3QjhRt\'/cq>IQ^IL,/4E@(luQSdrq[B/atcir8Mn#WL+S;YJ)]O)2KdL>SC(^MX)tfXm!M/+EEQOJXlq)W_eE"6gHFZ
%;e,q"].FQe&f$e&T#fh&]Md`&pcc@N,%#@OZEGDGJ`R^q1"LtDB47c!7'^%[9?2jMlYMkCZic;a&0S+(Qcg/]l(CMW:UIo#A7S>e
%Q7LR\^:J,QD8X"V(VrW.k!S,^:K^aBLCgM>9tHi5B##+#_cHmi(r&J%(V)'4b"c)</Bi^PKiO<<bh9B4:f+Yifgm0b>ulIoTbrJ1
%$4)JK3u&qa^<'\c6,pRFj69$G$<DFh9U)QPfQFtmaW)j`g:14JPXgKCb9I/\eD/Y"?4*8MNl]CM78+Bo>LrT.@8r?pZk-9'*?C!l
%3BGXDD),&5-I&)+a(=BRLWDu?cbm&FrmTcqh[B>tR*ACoN,>o3&3MR?7Xub6m^82;F[lXB\6BqN0CWNW"(<)l^Bj_qb9^`NF*B_]
%,D:o/.Jf"5+0=3./8(+A*>hP)in1@q]qu-`'uQeed>Wkjm&_IAKtc)X<jB=TXaBA@7RQJf(2Hf#E#%=9\ECi;[<70NX5^#L&tQ*2
%rg8d%)kJ'@!XP02Ll=M$itPlHKFMQAHn6GoKTufT@$p)tD8Asu;[C0oQkQjO?s)?a3$a46i(AUKT`E]W4d>&2MKOX1&`X,-6]obj
%6^htTS;q1a/S,If5X>&J!a+q+5a*>3#rh`]"="&m8:FUXk7G`d7Bn%Y'0S(>P%ikj&8nhH)&@q($%OE6b$D:MXXQ.5jN8'S"m1bu
%FE)pS?5qAsK#*luRlh6+D!EI6e7lBBK[!Z;^m?PT*l-^lVNgc$N.<lXFs[aSiXJfOi+ed:S"f.rQ]k6V]MUio*%ieG'YmI6H;/8-
%*<LB;3&o.ZKFp#0>`7Cm0gtMgpH6uu>4*`/\$IlY3s1KX6T4B7;SoH'6nXa'+:hB!J!=gR0EF2E=6>8b1P>joKYp5%^"'9NSCIY.
%8"kTihl1K:!,H[/HI](LAe#T'Qa(_l12!cRJ%;3S-=S9;LALdU[=_[^E\%`l2K_TOL[H3D`8'/%#qbB(g'Pjh*gX`,kE=HQ15,WK
%bD_#e0*<?%9l:H)aMkOs"H:o1YgQsnduHi9Qne)]+JC@sVX"A62O=F`3PZfrK[[7.jFn<M-_m*d2Q[/(\KgL&A/pfsJCm.`k]2d%
%-3;DP)%Yfp&FC[AZ`5$X4q<+f\!do"!%H1K#32lpp;r75">IFoqcnkllN1M&,%MXdDQn-m4^_4k5,?(B38si+L9a'`E9L"!0!Jc<
%cAkPLb7=aQ#um3*38B_XX!*iC#a,:o%.kYF@gt-o)Y8KDn[(\l,1*crG19_Yo)[S#V#nluj@#0'!#S91I!XDmgg#n'KKI$9[HdH#
%Ybd.B+t^o1kMG9l"5DUs>7>3n$sE[rh:F1XS7t^6R-/b73U)OXK_!n5!Pin?#Rg#+5o2)!fafps$.]</4&WD5aJr_iO&""tLnRP^
%3o&<Y7)nXL9W2TY>_(6k5+1&46p[m3-*G1TF:>Mads#$Foq@$mGT^Ao*.eo8hLH'Ckm8M#<LX6eE?<-c\Jj[H0L;%oAVq,q2!,#e
%YCHUR37UE(+k;XoGEo_f1p);.'W!%A5Crij-l?#'%'VWc\T4'n)EnaEhrLUd]Q<e('QaB,k?!e*TNAcfF9LaA#2fmm1)UI`A,*dr
%LChnGKTn!O#oJuH^d5K$JuTKfR)V2=Y'M'm]cmH^6R,X.r"p=.2aqmQm(TZC+u>\`jN1hmjVr<TjE?7ud(Vm0"&b`)E+s)/$2DS8
%4<es@.Q.+N:B3"Bf(D8Aq9r\uGlQpnYASf2It.4XeMgk7r7qVGq"q_Db[J+?-]#W1?<6T-LkS]V=LM7sB1`IR0Uq+$(nP$[+pR"^
%i.)YjL6CAr5nkmsS!X%,^NQCqM'kQ_NPU$LPrVfgQIA3WFT4\e-H@_ib]2G!cps+3QeUV)Y[(79&(+''-]4ebTtp2-]&';:_^c.=
%W^m]ZOLuRAj;9;X_G0`mE#]E7QO"Q0XQ?<j'k60M-t0Y^O"ufml4cdfYEleuiiSnoL\muHK7#'Z5lMdSH0CT+&T\CJ&rHTVEhEs6
%ER"BDE=14^/Ctb;]"G?WG6e4ZjU`^+>/GC.%]9&:a'AQ/9(u2uU,dQa^agktr6D_&T+9/>]tiSU[S/r]WJVb%D5](#>qBOl]O^Vc
%9H\R_r3El0N?o-WT)tM_eQj[F6[KJ*&#mRY(CgGn9@J;f*X2kNQ&e*^<fH0;p9#A[8g8M&k`2Gi)HXM*jT=Jm+jRrpDpBgB)#ud/
%`%io[6Z?p`Ki^>s>Ji68FGgtSBC7MWZNZ>pDs*4.ENJfH\[!cXN5K)j8u=f[;3*QuQ`ikaNeNPeZ@l^HRKj,HnN9qAG@/A'g#as#
%\aL.:[LO-!$s6WhGY8<'_@#mi)iDCNFe7$6MMP%3r,_PA'EV(<F=$h9@9@KR5+44"<&0CJN"f5F/7U'6s38PK4<M,P:7D;V;_G\a
%.*BN7](L$e$V!W[:7--nADP_oE4=fiN37`Ag<i/R31T:Z"E8l]f1O&+XL?jE4KRTi/\mLUjQ&5\j7LRsI+8?ZdG>a"e%8#jO2,RY
%[_4(Xa##uM!CVGnJtFH?JA"dFHX;V;XpY"6JSN!#PRRdMaC.OXpn-hS@lQS=/+Ki8!W.skVV8!V:O'K@?"Y(u]U?b\7Vj'q5EeS9
%h5j+Mp"mcD*]V*5d/WK)`c3>e>gVo6M?Z$mRVhApdZeq@%LPB&;dR)FF6R?VT:%\G4$BhNQj5>uOo1ShAS-Mc#0nGR8o.QXp'o57
%f!<-FJBjiU\24fgImrLjAi8"d4*Q!Pe;cOOfMlr4kG]L#0V"-CE&O@ZZ6fb%,j;[(HXXY+\jh--Ase1g>JpSNZ_.CJA*4BMgU+8*
%'YN1T5m;$EV6$1LQs39&p[p_CJFV:5cLWJY6Xp8Z43_27:M!ktW%cQiUm.rn*YmSC%TV2&'G)!Uj^P;]UZ[2c;N*j$"dpJf)aFZd
%+R3+:!IMBu&Ltgt@Eg1f#Bh)H<-q7A\Me+\0$"<O_jk]E24;OT_e1q_B?H+,8-a(BGhjsWio;_U&=[-?'>tfW;0J,0opI(Y&gC,c
%*'KmUQ+&Hc"@X:K/<oWaMq@5jEe=-:J\2GQE5<>7)VWBIM!;hKF2;59OqM.N7un2p;nVI#rE-^gRXiK`:PW%^.k+Ug!V6T=6[iiC
%0G;7^jZo5YN07R)$p=0tUrc_%Qior%0js6Nb=2IV_Zr"G\?K!`&#@:14GOp?#VYOH9<CJVLtM7&JA3<u&4jfH!AG7j]ANsu$/G!)
%D%<:2`"(A)"HLD?Vm9&6mp<M^+deMUf22Cd6N=qb"0<DKnWYCn<P4Z]5Vk*NM2;4+RSbHAbOBc+39Yq-*6"j@,A[I1Qp&ATg^;5G
%G*rS="![Z-&_ru!he[nN+;fkG?C4ZQ@)-t"5t!`e0fjKbF13Vo0**jtLY9blZ%bOoLo=+H*2eip+?u60aGS+(l%#5CDnC&baF#+n
%3\USj4*>XKnaqts`koQK>M9oW@RVT[5_ZOM-'lbU(OB)^TVP"+/BK&#klnD$=kS"HB,D(.cT#8AOn$HQ6W>,2/W[L`_H^IQn"Crp
%`3]pQ-6]b2MYnSh#>s/Q3"c>toi=FGi9<ZCJ;mq`2_(NFOoYai1P6aLR>3?0>L?QKR>$=K?qB=`2/*8YFlFh*X,d'B@=l-NJGVp:
%?fiiRi.,ECpn09j(b6Ph_qD5T8XR4"Z<BE4Kl-bQ;>#]X*.gdIfoR7DScgN(`Y1rmH!Rr^d<@1>$`Zd\mUbI>Q(!`YNcKOJDAIsh
%Z">($[0Wn.7Zefp2t8<3>p<q.e#AnXIll*3oEeFZ-cX.+aPJf:O3eel[0N*i<kKi+W>;'nX-c5^*iZ4Zq)Q&9!&k?_%h,4BlC0b8
%E^!"a`[730Us.?k02XDcZJ7nn$@ic7QV%NS;8JC$.]=b/%-]`T+"*ehThL?anu@Xa7/HTI_t'=(M:oO>`HCi@FIkgD_]`["AJf]*
%4GkS3GVUS;>\9l.Z,T%$O>W.#KisqK$5HY&,qBOH6l^dI.p6GKWs6:+fXEq*7O`B5]^M#8_.ArLGuQ70h4En!R38?*W2H\6`fqU=
%5r]X_H;QYd'IqJgA]PHg=6$>7;4,,1buic'it4gq!:JNQ5IJC\>,Kn]mp<'s!J)"7Ak'/<GZsG>U;NQPdkQ*l9p"?P8(PdlNgP9*
%4OuU?':Df%8Q7[>H-M9H!II53Z$G0*cgkB@?Q1'.WOji7D$\Z$!O>,<MdTUBH(uUAO*39;2!*fn(!C00EXcs;<NOUg"jL3r@Qso'
%=e3=%3-C+&>unLI<Qtu6_Qq/E/_"M)BQ*5"3'WQeE+s8ie9&Z<#S=5E$N_St+BX1P8?7c6H!8u-DuI0cQ!*E>4hceRP.kNK9#dSt
%6j%7eO+e]J4B-<4$8mI\k&krS^JaV`LU$uENlrglJm.QOfLGf^"]u[>VBbkM@?_8Z:RCAk;(*$$ADC6728pR:gZE`%JsX'&;\\C"
%S,`^DYSacmQ`09,M'WDZBglTHj<7umN%RceYn1m(B?uf._"!t+d]@U#1nZJ+H<ggF"t"cKGJXE=<rfg_P;F?>Q,jk\%TCMF`fsJ.
%(+Hb)^6*DiAOo2=RT/1G-*!!ph2'BA00]HJ#]eoB-jUZ*9"sRecrFCs0(MsmEKt<5%<,jKl0)rDG01j;=\gu@n^[$TI\XRup_oHu
%=(t>:ICJ*W%<IaePGA=7D9t:_ZPDUPZR:V7H65i,/e1Z=VW+XVB6O.0>af;`$6dom]A++[*R<t."mhq5.:GrgeVqQR<+XI1L7k8Q
%.X8=lS*YV-Y5h0UaUL`kfpVJKW*rM^i\qM*B>"I-f]Eb!-7/t)!]E1J6A.aV,K'lRHEUZK[X4hu$+B\e#)k>D;CBLm-lHZ9+^ddC
%S_PH[SR*KQh[J@o0a)1s`7ena,%$1s%I+H>2MT?!?#4S0BV["3[-8WS<!^DDIMi45r,!tIXM\ZEf:lGPU]q]q5[d0@G\\LVIuk>)
%$P&36TLS8Y3H5'!1$(l&?tm%.W]Rj)PBfZQqYW#STP8A:"gC5r&$AQL?SbC]N-7uOVr9AsIc7$cK9jhE$LNtQ,+9'Q3Wu3aR^j,/
%$]]Je?)oM(lE&SWaEuVI6K!%Dd(ES<btTqV)$'O[fM3Qq,osTN<=$6H!0/IP)pUQ$ni9-t?^""$GrmDSicScDS5>:ZNP!oL7:\m*
%6!&nAU@Bq&4lUcN*s-B4Kp@3'83U(f_%Hb)JYX(^1*T=amAY(3\gMN;"XD?8(a<W*l'nq)CGM&u5]J3kA40d%>>;YOh$4_0dmGt.
%Ia$C-V#oJZBL$+f)=a7$,h#EEE1V]Xapf-IR2@IXPoDk.`7qdS:7o6/`[k@<7]*s*a:*BK*-4@^aBUM4S_Os%BAh=DR&'\8YPW,@
%[=hpN*X`$QN5H%G=$+-28?n8_PRb0T'<s5IX&:8MoN%W?'sO?&;fuZ:rJ22US.g:b$@4]0_&q#1g)u]&1rD>+"CX8i"gS8W5N0:u
%CZmg66\Z6I"DL`MV2LUs*[$k@*mVfA@YufgAYL[KFIK@K[J,(pE.OV926m@9AHX_0C*Ef[Lrn[+.Wad#`%+9IWQZC,]7e!>&m#e'
%SWIt:Z8U3BN'.Z+VE4gr;-ZKp46)jhoUmSg@p*)+`dJh<eL/0-3(g75JO%Cq:-TqDWI)H,O#[b;?"%ku#JFo8-tY+^O72=<1_I%;
%kR@RQZ5WXdLqcCg(s@jlA+``^5iXo4\V!7q+m8YD1KAC(+F`%b$%CsSn'umu?V4Rk<EWU*&lC#1``h-EPl8(1b2>BZ/X"T4n.;T^
%J32KDN&n<JO^cjAmo-oM_H3nk"F6tSp09/1";QG*JG1G3:Sk#*AVa,>X*e[`?q?;'?BCjIE_'jiD!oo;WM)9^$:/F`&g<#^S_cR\
%GJjX2I3pm[?'rrF[Q)Vd]CI(Bnr\-cN\l'"2EguS%5T/ls%mA*N@4T+KCPR`rRoM(J+`["LY&/JAhEp[T0D`t?bUg_fu(G*If7s3
%?]t9\cecG6k,[ZHT/T"2n]ftk*IdpRp@rjm4+9pCNBlsfbE`&DZSs%<kC@hkc5^*0Lfo:C!VBK,mc+A,BC(QQ\0XAG1EXN3"`EEq
%Hjmc;Pd,IoiS*"N([Wr)0]qlMXN(;aPOQpjO7=67)k=tD:/g2sH-A`5#oGS<R<oJbGN#+U1VR@,.oA2?FN94!K#1B$`si;19]$N:
%1!ngWQGn!*K$d:8&RnX?5jEa9#M&?I8eU"g]*5bkLlQ7jK&$g\E=EiKi&RqocuV3\Nb_Khh3I053oJS'NY0$C\4P'f2d^8P1rmCa
%MH%Z"NgY^,l!QM@(e>S(9QH(_81s_r3(A<K;Zr47,!I-1B+2h2"/IgbK&\2Hcp_lsn,"n]@g_B]\;bJHZ>KfQ0s9+$qMa+;+lPo`
%04JGL2@KGl+?"sa-dmi-YAo(r(Tm5qm,*`OGTRF&3cc4W="'*0iptg8:p[uON-3jtLCa9>bP==43o`D"o[0%F;;$-S1QEq:V_^en
%gi.FHZ5NCE2S5%g_^&7mf"$b:E1\e^N-k5\oJ;\NpY\OQ)4M;W:egEr:G:;2ckrOZF9j85E0>W^Hn.aHnNDj^Ke_;cpfe0HdgH>L
%^_kW<m.Ca9n^s*>%JjPXC,iE5?As5dVf<k5#+,gZ7W90M:)F<^\;RmgOs]Y7"hhGm)r/D;-_5pXgr0ZpG2Y&#lA\Jj??<\lX^AUM
%HmeW.>e%Rm\[Xq2N7X,PCetq;cbYk?RCRQ'cm=L+27(+)lbpbI`=Y)A&/Ru#lf&_8JB#L@prYKpjB\.23GoDfE8k=F3W$=n@W_4Y
%><G'1)RRKA\fc%8;7%`FB`6(V4B2G(N5aa="_$rn(tF>D(d^p!TIWK^!\s@U/&luoB=M5a\kHAl.`OT$`u<<1i;3f%4Y[[IGgicH
%U1+TV)o^*$N9(aCnqEqX/@"]aJu,tO1&;)IEH;>K$V>>ZaC:5FKAloq1cUB/n::HU/el:Lj(cD,N4NY,.2[s4I1r+66!9$!a8eKY
%q2#EN04WBC_leNdIqC&T9ii6kS9S+i18p$AA&nAT:_U1\GgF3"%/?(5"0HrWo5W_8Y$SLM]YpJ)lRGsY14qE9qm`pE,@s]jE(guM
%DM5^R`CZ$W?$t6o4=:CBK9;P3'k%#/86i3?LbF.o`>*%4&L6dNb8tK<Ydp2OQjXcdh5XV0M`CU>'NE#sNO^;%l&]L.j!4"o,%;79
%!.Z=5@aJpFEL7NA?bhs`$ZV8C":6g3KHdY\lUR_Oh]F/`blOu`5`@4Un_]ag)f#2R1nFGt=V3D"Q=<lQPF,'EP=V=`!BH>SUE[JF
%\[[Dlg9.nR*$c/))%ahEnSiRDgNeNn0*_k>bg\+#iIc4h,h%Ql#3R\Smj)=?/-4X2Y'O\"7f"3+YsC@n=c:-5&IGVDB=_Lc$t@$[
%[UJd@8Ga-4_[V_p'qQIO_oTF,8dMG*&/jqG$s#MY'0!^\BGbn'bg#&`L5o^-`+atrHZ[8]A[mTZ+ZP4=Z@hB_'Z1A[<4Q9PL*?23
%NHtrhU&9OM(g<bBab=/uOe:17K`NR>r!7%Gd*mM,ke\m0$n-#GM1ku6S1-*tiTg;<>\JhJ[+OYQ'aEs>Bgeql^]Fr+IGkkEM'^;M
%K2S)>"7F_XKu!f4aaGKM#&^Tn]Ej55pt=B\'?9c'bEYg^:GLr7RrDDi0t;naVR.k;E%)^[:*bcT[],M1,@$,_b(W;%ft/eQFq3M;
%_ubi;GW5NT/pH7c7eS'n,m/+>mU7dTD]B'p5%>/4d7_Uo&I;kq<*-V9?n69"ce*kI4jj*l*XpY/lN_Y'VL7Zo3Z+B1]cYJ7gu&%f
%%Gn&_0!)lk]+FZCdU:ulZ&gNbi(A4P65^3k?`Y3)0mHXeiZ\f&,&=d\"XAr7ogK[U3hX'oK!Q[.0+0G=Wp%s*$KaW#+&'LLE7-76
%E0lSg4Mdu]KC]j8_=@K@&feb2$(d"a3;kN*=5gKX.=tE)3m4607Wbm`^J6oCqL7Q3%Um]dUW<c)?0o?jj=]N/PF:dK\:Hq)!.uVs
%JN#X>R_8t"EabYn)AkFJ<f72?n4&dL)-:Q\bZAde4#cY)E*9Ht3]Z]L,2uS)jM7^M-.!sJJRO>!^8QT#RVqN8$k,a"cnd[:Y`0Ue
%`l/<ZO1[TM"h**A)%g[rTH@U&,?TMj2&KN-YQEjMdVt$]K8o6Q_?A4Rh&-!57LC]XZ?1$eDpI#PPe[R^P]:7;7[+fgWuqNLWb6)n
%pjf&t2B*kW3aaKuJ2[WN0UN\Z//:T?#XjqujT<`ALR1p?Zg+%P#/UE!4"Stk&TIHF>OVV;h(<dsLS-PZNQs)j0\fKo)_AdLeO"@.
%N"2d3_E/PDi"-(r0Q8RQUdY=.[mKeO',DXn-k)Rf!!ZI)at`[@nU"/rSb[bna4Q"C[s4HjYl=b*5Rc2B#`hs@aG2bL01Z3mfgd:m
%V(h;M1\39d'54$]re8>o@ru\d2M;^ipe:TYA%s!MB"h'Z^[_7hr4@VWr7eGte@BgRT:<BH*K5f]PFnCkJ$m\G=L>iBH84+4r<6S<
%$7p8XrCt7pbDZ*2a"^p4]YE)k9cJ4[G^h.h^c]\b+]28eG^gA7,kq4qpD54eG/hpMp\>W4^Qe520!rBm":9;!ree28RF@Co+k-U]
%Wse;JRG\6('(%>U.ROiU^LXY;6"PGZn/rJKXOI1.LZ/%Tg+rSW=fr.uYK20.3EUe,JAa,FlS!aQS1XOZ$Hp?1#_Vf:=g5$QKCtQO
%6q)E1rC*_Y3AG1F`Of"L-!5XS"IOd&Zi2^K7nB\ErfUr\5p@]TjmE-XP$U\/E<TdUKCfthUf:W]rplinp0LjN;\!EU@/VBFMd3[+
%qF_.8r.Xj29a+aBg0[GX5n)IS86EQFV>V]IY)`UhrZWu;ZEM7EbP38;L1f4IB'M4VSG/B/,:2AtB$TPSg'd@&Qn!ug^u/@JKp%PF
%@/\(4AD/L$9_phT'\kb40+[C9T_ucc=A*W\r'``(*?9IA%""t6`$p3+-q`6"."CFPQQD+#1HCUA#_.u&8C"PknGOOLWQjJ99R\tn
%B$pQD5\g-'g[E2n`XB(Z#Xleu>ecC_\PiC#N4nn:ka1hMigV9@+Q%a?=/'%c2aP0ooZJj,*n/S%E^eC%$dnERD5OZ;+qho2R^;qO
%407R#aY.0ngq8Sbi<5+Y3lNad:UbLYpe@56[KXQ%KC^'aOg2pk-lU8b`@pm&fs67iQZ&HmCT$shbJJ0M'Yb(:pTbWbq&Lel0`4i,
%beOJ$Y>RWf08<iqBP(QZ^Wb\f[Gf!lMn>kR'+DW,1r;R#%)7$";5^!'I^qZHiY"QI$]WK#itT7U0<?*TF8Spn-/LY2=[\9pGB!IH
%_!K$oitp.:#2V3<],%I*pn`LFd[`CIM;BKXa>n^[^IqK6>PJH-(gsJUOSfI3C"E`U?QR5(:ac'55tuI[q1Y&YNSsUAfV`D3'5<QJ
%Q/rfKU*PBQQNF8T_=C5"\,888r'Ha.^Y!7L[1U=3KB<tQFm?1=bqGl7)M7)f!g9hlbqB7%F?^H;8ntORLjjUn<a[u90*JA$\Ie^[
%'+6ok&H/Ua"I[R#>2M8#\.JUR2mp=MU0h_)`'lhFIY$c:cHU\Ir=\EJ^2IFBW\Z:icS*%SGb981.93*6<4bPW(Zc6>D:B^-^X2lc
%,+b(g+I7]83l):3Rbrhu^<lf+!7X,RSmT,YO!H^20.I.t_hI7i@U[!&k8+b<^7=AQ'#k//4MPUt5N+H64;XtDKB<u[s#Iaum\'Bp
%K?>)?RU<5Kaqm,a*_[\g$84NV6tZPT&i@@:W62iIq8LMg'?#Ue(GL9806Wdk$o%c&KB>*Mha[61o?/n_:eQC@,@i5/NmmpSGUMUs
%RHBi6g3Q'V.uE/<N4t@srf]tT27j/)J+3An>U$Yro*`6)/@G*IC)G1nb4A7T%(G0j`RtRE%\@#5\85GqI[S%pi[te!cK:)W_=K0C
%Y?.<&>`Tcji;)Ic&Xb#k0!$'gpiZZ*OQo2%9!J4K:R]b,n:cH4Hasdf6FhB9P<t?>mB[&Bmge0[Pq1$2KU^H\%NWFqO#VRh4,0#G
%VYK8UKF/q[Pd`aKQQLj`Z_o=gn(q,4J\7$!)1%j`(HW#6KBu\%O0`]6$rBH]H,8kehp:)l9BP$D_cQ"Dm0/V(X-CoZ^>3S(f0Q.#
%%UNNBH=lgZO`UBQbnE%pSA&LnIqM7.iFVc"kW:]KPW0Xj3!7EZcZaUkFR]+c]L^o`SaY2fN%]"]h01db1>hL:i8F/0#6Uq4cW%X>
%Fff40q=8m4MoZ^NDCC;KO"Z/'oKhMqmhddqierUPBn"AR^4#UsW0@!##**M%E;218T$rtAGB[gH(jn(<5Zf!7^-+B'3"u(=Q><+(
%nb6K_,Gam^^3@nT(7a').21#^;qYi:%5NRJ(Ml]<)quqi-@!SRhA1/cP,kQ`-gh0$=O6BWgIoU4b'BPd([5DrE@B6Kjq^S(P4iqV
%>8H.SZPW9:"4Z7(fo,aKfEh5qfZT`bVjS4lmd;k8?S<k\J:Tc1os33ZlH._*=V?L0k%)0G8PWO(C[4lrlAb2L[l(RaW#,(IN;rZr
%%dCpS4(8_b1J9C*BIXqnK;P0Ai95;UYmWoPWB\2V-\[P`0OKI*2[Df(r4KqhJ:jI1i-pu43B]#$LS;[?m(?9%j@.?%f9I;!Gk#m'
%5?%/+R5=Gd08F)F#9o`?q(jVkFL%HFjb5q^qub5=7;01(#<Q%5+VeZo!AU<Fg;1p)8&a_9:OAL]F,K'!@=nP5QGr8BEcrEg8F;h1
%(CM6`F0P5P(bMJ%A5VIXr;;84(EOBUKu(mSHeNS+n+2fEK66)5V1!n"%Sg>u(?.,n+II(%I,X-lejXQK6GO:;E:QoBEpke3024:[
%]Q<Y,L4]<B3@F8c7`rWS?iHF_]St?+D-T&G.:q5j3I)@S.t(:a1+Gegr\GoT@kKH\Js2P&)*GSlH)FRe>UXmfkk+b)P'?_f;9=^b
%)L]L2-*K5GPa19+6n][a.sAGGE2],MTeh0$-#WqTJruC2O1;e0,;6r9(n\XcbNK#_[UA0-FG/?>1F)?D/"Mfh!toZ+(jV0Z0@#Nh
%B;raL*a8n>??0S`IO4&$`4d_-/FF"2,3QZGGn1sX1EeD[O''e^OB5t/D(J"[oH\j^$R%/1<8a)I,;3f580k+mhl2T6/p+`k<B29`
%PooAGX<`hPN9iV?S]Q*o9OZ>*ZgeApX3J%PBE:DG7`Hr%WIfh"jE\\$(3Q)!GN1flnL>Hu;AcU/g1%NLdIAuNQ.)"Z(P*WP01!W?
%>e^F]0.TQ`]TVeG)j`ANp(?(FdSF.;CDS$uaGNSJM9G3k=;rg(h5A5GKGOVM1/',0d@J'0.!U)TX`e=7mCmL7&FfD]"hQs#&AfUP
%r0`!M>B)pc#5dfu"*7+nI@';nF2*n,K&DJ*,u2/^#,p80inbt+<513Wm]i[ELj+'_F+SOYpE\dQFI-AL1%@$2Nu^iub5Sf*<>4-4
%KlWMa=!M)8N4UW;:Lb")<_%F@pi_JtR!mBL@eWDY8qLmr1nlQdA(u\^MY()6mD:+#a';l]p^X\-Kk_D()"(Ye9Y9($.?-d'$Y%b7
%A_BLp-uu:QZJ/2\\eoSk_ZB'$6Egi+Du8PG"am5U^1_Nfmt"DY@Fo@T-I"u^gU,f#WK#a/\2*BENh.)1BE+Xt%e%biF\u%(]_7ao
%(Q9Bigr3E=S*p_)Uq.rZ!g3,/;\qcRdXkC6G'+G94.$%jOu&jcd-^o.3h\0HS)*m_@BtD[TkOIrKDc##4(hi@]'tb7DM(Y"-+-9V
%>f_#bqa\K!4+1b=T[F!KRIkf<.U=0*&[)]l?/VdBcj,[cnCIs;SU#;ZW#[_+dpqRWU5SJ[TuEbLKE*&I=EGd.+!eG862VN/>nes?
%O*(rgl"l5CTfYDfHstAj2M)dN4bD<mkT2G57@eR0d%qEi58\JUWD2th%(ZkAB+9BD6C5<[,Kpu=\leYDnI#]['Y@,1.<LW7m8;-k
%3\`U9=g<LMl\.]m*"7e:3/9,MZeU2h3HUN:Y4]r29*:1NHM!s:OD@HMm@&>Um#H>C+.,K@HJ%1KU,ukoGc/nWYd\kIP6M?ErT'3S
%#68Bt;;C0WSMR_LEr'%J@i"7ET$+FaWdl56F/RXX"spFHEc,,'e@@&dB_c`mp?c=02op'$"Oic%QPR4Q,,u?1]>X(jCG>2\Hd.6F
%QN>">qKIu'NZpsJ'cIePfgcLZa&5asW\.t^S&Lpk$0csmgpq6P8J9ghHu>=8cCMS]?at.p7jd,EF6BQfH-F6ub?S3cRI,h:BQL@6
%\8renN,!@qdT.,2m]#so7MZEOT[$!qT0%Z0YS[TZ1%cU;\\+n>(NXJOD'=KkQN[anYnuP-8ibF'Ir)9&S2lpN%^YK<S4hU54Lna0
%^Dj1=S-oAdm_YJecP6-Ae@@tS^m,>n>cNaFYKXP!<:St"3>Vdfb@`Nl.be+gPrY06*U*K1c;jR$Vo>3be,Wk@KfbVP.BI9'mT^%]
%!X<kO;@79UEp"'NJM:&Bk>G-pQ+L&B7'nIc/ol8ai@VA*;]]!okMh<[V>(::/l3Do.0aiG;h)=!TYq"MVjs,r4aAcH3F>:markVV
%'B^S6_LZ_Nc@qMI4IPJB?)%9<bdg7X1%KEpc6_ouI+D]NKn-GP@*YSKp<&(LQV9qM+`$$W8<!a>_3oAtNn$=+k1i@0FtJV4(ZiH_
%%1_bD^g5k1brd`D.Z:a#`LP-KDR(1fG>`FP[0q%.Uq3'PkGH\?#0E9S.=d1t@EsRk5eCFLj^ENEcCE'6-g-+FBRg)oA)Q&Ibg=>I
%]`r]K&mWM!&#lnuiq/1H">+L8HFf=kHS0?L%%=<9Z?ngPSpLagm(#b-m("PndXjV@`o_t;2q<?Hk-E,J?;U.R18C_;$kB3YKi?Qm
%-8a.bE+ab\QT;=F#j,";_*MGY!DNaQLtt(./q462o>6ti8hj#Si6>hZ:n+VBgRc*Ym)5AdHH(rF"F5&C["Qd3hHWf-:McZ4&#hB,
%S2_<l8Keqh\Id+7\e+$k8n`#pk>L78f*XhJ!>Fj5k$5W<(kBo%bH,X#2e<;[h=oU:0^#12's@u,>d>Jom2mi4;t`Ps$Zdr*$s?9t
%Rc<"gJ/<>\L*&AS\l.]Xgg]pf,-Z<lDc,[q_?B[g3gXJ)+_=L5'(O!FGu3Zj+rK(NS4ed)3E^"?V9MVEQse2c/rhI_-g'21>g0``
%WMXTJX,b-q,5p8M3>Z.a/n`I`J19$fSBF8fbBddGV3jC\bdjHS)pY916AmBPGbr\3$BTPkT[!^?73l"J1J:T@FQLeZ<1'jQ\8tdo
%9'DM'ic57mg!AHaoQ\e-S3]1JClD#++jN6Hc=Or=8ULbK;&DO,ao;Xt5Kg?'hJo:7<CM@?XLU%Ul(nPt0#GR5G@*=NGJu6OAaV/N
%q-qPgWrKgHk*iN4*`lhT+:k>\S1]$(2O.p`>^1nu\P6_1<D_d<Ie?<uM^h:t76''(>H!A;`HRHeb'.0JEWIZq7=c-6,-6OaiaAD_
%"Yb.W4k&IY#eYJfj<=f<NQ%$<&craT>ps^o5qh"V;@L,25.N8@(io-eV.CHp>Z)$cg^&@6JF%iq=Eb#:0`?qDR2aU/"<;1j`8)s-
%^!7'$JWn%--ZWH7L;6b7D-IS05d?k9j-H5TXe0<I@;9?J):",_Xn]?189)I"=L[gZ'=SYV()A2K&FU`(=CiTd+?jpZ`.\o9a<8F?
%H%9O7KXdjl$ed*QDSZM[=_tT=c(YUt7LYI<Ar0j)E%>S;>ZA3AZ-BSAE8g_Ye_j,SMg.`TBQ-g^UBOh8!RSMu,\f?E&4-ZVNo7]A
%UIeK%%p<`&p@Q4PMlKMFS.jhD.fk*YoA9V:JK]36^BI"PF/pDub6,/'5Zj-*_O0C"nn66%KNjjRF6ZuZ_(OHrm^8)lem%4t-)48a
%SHU5dDpa<h*bWW"i,Z-lD9",#Csolg+M7l:/;k,6i4HrQP$HW'DXe&nM`_3$&7s:%KSPbL\=V>'R3>rF]oGO(bLHN)=/K1-@G(e2
%D%onRcRgsPfQ6ISF3C[:8mO!WX!6+dDMsj$?V#'c4NsP7'`8!$274>:[ts`Ej^&dAaiT\-,.Q_U*WX!co7cXMN%;RnKW%u_G$@db
%TYMnqD/lE5A@K`38(8G*JY9H*ad#A!bdJo#X3Z$-M2;5(_J*jQI=bV_XL<?]^kH)cD';<Q+ZO=)MMY_h:tgL,]_?NEZji%a@'mms
%E4e0*/\V9:E?V^..tOf@I(!U1CkVDeTU(2PqoiZ1U*g_lWK78'jH^UK/W-P^&MI+l/9a@H^;o@h!pBlO/Ma/L^XCaYT*bH;1q*/h
%,*lWA`HP;5>Y&[P<O)8WYcU*>6t+iKI\&:H,-Tu`A59q3BQ"-*/I!h)&81iC'@IJO1,l;)ba1A9/L!qDkq;&)PBHT`i3'2`76RSb
%U!1N$`a%9:-a\\FPHUq1>DkdEe!7@bE!Q*D=DJ.3o0HQ<23X)Kk,\a>"SqJVZ519u+K4E$d(?2Z:NX!rqCK)/mJn7TX3Fr^FX=)r
%5mH2+`Du4`fL8e5@Y<i;[G6,8*^mD><u+N4I3i.X6;re5pH5_1@bbuo#UcSt`htrZW%G;pJtb1#g)UU0/:ML08l,oba5.Uq/UWVV
%*KS07M`Rdg4_L\#5,`Uddl)+DR=^nDCEb8S0ANp$:r(n.DH[/kIG8YU>;k%6bPXKDBbA#pg%Pcdrj9eNEWW%t%-'Rbm1#VD$%3tp
%"^1po.(EuDW[ar]O[:"h?C>NdfYbK3@To"P_jCm>g?&Qp(KsujW%!7qP:'%9%)#sOhn+>cp`;#FQRO=sOf&<j1`0pubd,hN+`6h.
%c3R$pP6r3_G\4dei`WR>NHQReY_3Rj2lm5HU':FT_o3*8=pVBH";U=r*>G$#(;-27S/3AQ7*aaZ":m*LJ/C4<CE"N'2(pMfA#P26
%=D3KeRR&U]4kk5?TLAj!Wc!I+*D-VC3sBJK^G+#h0F2@(;l']'Cj0KY$iMVQUC=66E$Q;S5sDopT=JT%(t>nJ_cFT9gRX2\69GY2
%C_[nk!k_6N9$kk,L\b=ZB=mVE*2Kps+ZVhCMkOJ,k_M!H[?^WI3ofRGEqUWG"]R.b<>XaJU3B&\7kqrun)BS[:.SA5XUF%QE$h3M
%RiT6%;UEYuha77X2ET\mG-]d50M^f"NP+VGC,SVGJn]B:h[:igAqqTqXus&.';RoM4,XGoJn5_![TW.bK4L:b>Sb@2)i_KYAl5@V
%.<8jaS]=cO$p]uj\*q-db;u!FY4T#-A3uY4fO^tImk&Q_^.mMCk2;OGcBT9kZH.Wrk0o/uEA-+nq8+X$"N$'t(AGaNa^CB&m1$*1
%0<DGb6'?ITo6mSh,<07qF.=[j8#.u4;0FA4'D/Oaj"GM[5]M[a<ckVlnf^:3gT+8h?-$QmVa?ukO<W@6%jkE\V#,O/,R\4HD,1Ct
%/?)+m3+uj7,=X::Z5o$VY=TMQ*PA=7%LuVTLl:^g+hJu9gs\P4$a5g8L;>%F"D8A#6RW`'h>(t)M.t:e$p/OO&n/\qgm:9Oc(:Fm
%SchDZF>$]*=b,hm*rB`hP+U#ikQJ21@BtY6Nt`p=9W@g/GkM_kLe^qO!GeG`m'5Ks"L_s*a!/,b\o?hmm6P--iJp>nPC'MoFY*Kk
%Y+nf]97"`)R^iUt5_2o)2aC&@bsGbhi`LFW$HSc`@k3.h.3EIJJs+XfS>$S%?/a,+XfsT*j(CXr92:LM(2)uTCZaRdDD-Fa)>i5L
%A%=f?F+7#tVN)Z4>b#aXO`tbGN_]q$8>_Q(=eShcIsH>jLbl<-AWe9VEJYjj%<T^l24k@dF=5+CRR!k.S$o"&d%BVFe/A2+lnn4M
%"J/MGN78''U',FE3X6?F_jTHAD4Xole%7rqA[2+HU$u/0WU0mP\@A,p[?%s'3/gasiZo"Y/65#YA`%kTgdpCqqIUA.XKZpqA:>TT
%>[0_$c,2Qo,P_=`T#=c_UXZsI'G@\X0HJBNO<?":e?j5-iTpm^FZS6d">2?.cDFl#&HEng)i!JoQZM%lGh'>&3jgP[fbj$F3N=tM
%c3l$#/gWQXaA.kLJCRrZnCXM$n8#QHoR7KrEAMsoC"UV?:kS12b_GMfaUu]:RHV>94DFUtg:7O^DV5>G8Q-(53_1scp`496D_-lQ
%m6h9`J!6]>37AB40Q=fZ2M'kJN0*C'(T1QWMCp@?$ZnF9,6`mCe#1@E>HU(o'YeUjpfb&d6kciMDGp^]]dSftm3CCMK$k$R9Fus#
%Y(Bl59d]'J@,GSaf74;I#`6T;A;>MpU\fN%Ge;\EX<Tic-nsh"(i,A3Fgj%?\IW?6?Q`3F#o@!l$^*X%F(nK*@/A;I8&tKaG#d=+
%CsY6DBg.kZC]o#M[gWeBBl@c\ZD_a)^=JM&Fo.J5Qoq1@;-42s,_DIDVcomlG9$t+0FA_ljL]G'8'Ad,n$4B_cll5;3+LfmVc65g
%Z2F6W=GV\&,7,r+<%kSu1NEFmieaC*Gn3;iDdM57SN=0L"LN:%`of[2p%&QgR)LXBQ"/Tg!&8O#2k7KAJkUfup,HZB-jTKM-XOM;
%i5Gf+LBF]qII0S0;0D_&Tl>d+Aq`a.-u!<>oasO\fGR&l/.aI"<VW=)D>2*\2c-o6Q9&tE-QfseHNV)->-TE3.nbbsjs<M%Zd+)6
%kW@aLpmTbag8:lm&o!QCSLTMlS^S7R1V\fb+\%)?$m!%Ts1l;LkF>XKNtfm,8h]s<-GLi(AWg\WE+:6P$]r1ap,.R2]_8oLKFi3C
%_[]$'9d<VQ+g>k:h1[f-PBCQ3-mRk,XT0G?bg[)P[D[)NJhTD76b>Wp;NXDsm(=UZP*("mh@mGo_)KU94W+bY8P5\f/d#GqT;-c,
%OHkWSb-)ra#OS]'0e/"i/I4'e=eoNI=5<ro):Hjt%W8/>XHaadSY0qg(^#+$AMh`OGU/WBW<J4GbgP.>FAFa$@D]r8K\Vdsk8YP=
%_RLn%VmI%n.EJn"kEqHi,fmU/4u;j:?nfVf(*.q/ptZ/kq=2#i6]T*iX(T5mUfd.B@0F*2!OkK<cc@gD64?55C_aDaAGHobXe'>`
%mJ=VYLJIpWGE0HbJ5rM#bS(hDq4J_sC4cX9A#:em0H5Rt]_N5FE%Wki(/Kep":_*dX<uJ;msHEPb0ZM$b&hlfpo@tKMQ<iT(<+6o
%c:!IjCaaWb=HB,U_j"k[E0k2)bIkkZ^O)b<+U4iHg4TD4_*GY0#\<<(Q%-5Q&h7*6-KtUXXH!Ap#jjK?BHJ&\lUB8NGblXVZpU1i
%G0EtL7\AHJCifG)9&/iL^1GJK&2@Bt/?70V`AX*ZCM8.LQXH'77:AYs_2V@63R<-4ZL;/?6HW3Eq!0lOq*5*cNh*Q_-dZ"ZW!q=#
%/bA&OloHA83p!5MMMMs$%.G)^HoqHNfN2JmMh<&),IHm'&KCksq,U:S+dTiR98`rV'8ihdMf$;hJQM9W=aZ,X&=JI\G2$MR)Jo:7
%\]\1H9k13lQ:5;DD\,Xpb[T*7ghli!BrWJm0h>F:_j9XRmJso.:rD*tBPBsOJl@Gt*8D--MCUd<Z?sUc:gBI86b.&+k_Jo++rB\)
%WpRua4Ial#O$QP9:"N4\-hmWYgA4f2K0doq^S/^!6$oQ5+D^ALgB*TAc+)SN?4Z"8M!9\IX_P<_OTAm/*U6:8h!,s,#)h6*DLsBZ
%5U)[@IgaFO\%2a1ME/GQokJCQpK3r*+$8s)jG$njdpr]81^L@:[[m`f0)!a3*f-/9qL)9RLJ8'e6O<XX2`6<^Ye*h5S[(Jb0Fn(l
%c2QSn9U5#QZhU,'>d-5j*;'RPb,cFf@_N_a90=:sQ'4?@`!2*(/:3>rD/Ea/[W*+d/[aj7$XkO=*5mi"Y)*u$;;nTZNpIR$l6NDr
%;Od$!R[DX5Fc,)o.;k1<h/GJ")0-!foSa`EPkGS)i;csT$JmTj7RCc.!QQPlJHU7@ZIaqBI*gd#lQm+E.-eUm&,6:E9`r3n'Xf:"
%Pd\N(JIr%H73QQoM'n69C^`"YMlX'H2_jmW;L6r,GrdQN1A2m&_]f^ALN[slh/t'<$\AWkL.ku=mp\kGfJ:/%&psR"j1L>&?n6t2
%[9gB]kn5*5@HSX9\q`a:X,V+b#S5rI6e\&mRq.5c"D0k]k;@QO"TtgCqm6`%UMZI-[7fD4/;po/R*_+CC[GL@n@Ciu]%nUDDWje]
%S1kJ0nV*b[gcR(Jip!?/Q_iNKd8A_D;j$O#*^-kQ37hiB'=C&(*oS'Z:$6C_8<!-U'Z,"[qNms4%CeAl[GdV.'Y5?e&E1P.)t=NF
%_&OaDQ\!X31+MDE.Ij8d11\kF[eti#6X=$1C.g#/1#,SZ8jFJe10d77QXd$AOhHW'N.LF`A;9HZc#YMkjr8+rbAADM>.e<kR$Yq"
%n0hj]</]G_/J2eKX83@3C*La('p9=:"NE18aJR*J8eL-G1md5&n/!gJ;lmh$gRE47N[3@jD=5I*q.cpe$(-5gcn%ADBKIte=?IW1
%$$sqj]kIDQ"*>:=S^7YfLn0di6%qp@@O\*!-345mZ:)"ob\?Uu,2q$QkQZE'*,uO.=aY+]&0q)dH3b.]2P>i9>0=Zi\N,m"$0ub+
%[/@7DK]'i@[SIn36p,\>'ql+@AJ+E!h#.dc"L'V=`t*OFM+D_%f*u>VG(-Fm'k/35HJsJ;fu;6aI[Grh;ufAYgBBhgc@+B<+g%=U
%j6e0]Gq'9DO'I=THcWh_RPI-_(mhsdg*V-.SDBUWcJt4qBFoYq]`8RuDul=&?_(CS(Pf-RlJ!Fm<l-!1@Y9Cn68%;SS3jfFC'<5s
%5tJfR8B5#3^`[%X,6]r2!Q9r8?!7kZcRU8hcNNJlCg]+G!CnK*'%b,'#@TmCm\o,*QqBd]QKsI#'7=>]#D-KB:UR/c/e`/WWtsUO
%Sp+$6oa.lo/GKoi>Ns;t;1a<0,\"aUD@L@p\Ddqn4QFB[?4WN>T^``.WhK6e/MJch.%d_#/J^=mY9'2p<PU:N18@_'d`_U9p"U6.
%UBUu`.Jtm@-B;OsEAUA:I]Fn8`HbBRK/;]UF;2MSetJ9Va@M&p[7`pKAi!lGLrX)a#V;0cS7`Qe)[)o?huHYDX<AX42k(&QZ-*WK
%"9P*DMI`TZ+Uq8()/nT8i-I_aGCW>\>[!9jOCc:G0g2Q*lc#6>oC5;aoraHu]PWDc=#;Y/'t<a2!"ctJZG/3T<QJ>M5n@`Q6ImeV
%3ad2"_D3\aa8UaFpPKm0>`Y2(DaDN:+cc_g#SPP@D[pWXA8Un!\&H9_ZkWb.,Fg:<8LF72`GY*p913`GO$j3<B"<UQA#CHP!]$&\
%b]<E@Xa4h7OgLGdKZKj-4(V;O6,N:7i$C-H_5],G"WQqWJ4;<]F9Z726A*3t?&nZ3A3Y5C,HXV08i&.?67QFm[H*!Q\8PEBjNu1u
%;S7OWQJ>l2h3n49d9P\N]N\8&QU-cZ$H[k9c0q<$\7;c69fk'(g=NhaB%r?6%<6#q@&W(Mk>G!%E,Au(Xq%k`CCG2q%ucROanXe`
%WLi+$dbu%2SuQO0J5UE2;E6)7&1>A2@)2oi[;g8^[/!#gNgdMC+8.ci%.-)mE9<1:R+Ii*6OHX@a&eOXY)D::FPI)hQ00&k#;W6K
%\SpKK0$1"o7^>"f.oFq-O](4)AkFeT73&ZlD$/]Z3dmX]l-X<Xcrc>gVCR,.UoNo5%2i4RboKAD<O:"b'lX\=KQ?X(PBA&Lf=hb<
%16[@V'cT11k!Zid1!Vb5Hk"`uo*G*n,Yo>/)>iXuXM`lV4Y-_A]PGEMU.m#J:T*^&#l`7UaJ;i)*ZsfU$X2!oO0hc(\m*.pna9oU
%%S@)=ah7>!Op*(b=I.)@IO>edm]UY:OU3%YmImr*"-25clZ*1Z15rKsH[XAtaN_7]WUOY9'Sm'.TpX>$TMn^nXbcY(&fn6\3WKJu
%PTulm4;A,b+FsR79=?C23_u*DJdiq@`W-&-Q;L1DWf.2?+;":nA)*Lkg>SU5$^Q(F*8BQ`\$&u^(r<O]nK<WZU.mAo6hm[M*7NA^
%3(C5^.[tB6e\41FA3bG-QaTUC(I>?b6#*Drg7(,q'Oorob[F>t@oPeM/p9^m0Tr$3**MD)X>nfbKN`%Q6+J+\P4r@n_Q:u%VK0tR
%6a?@Zc+Y$()<UoG]2pIIE\9;lM@_Q_NBtgQ@3.+jY&-uTRmbA<e`P?`86BV$Wc!m9mPm3b-_oNePh'\AB=l!#5rXZJ%<XWh321Ce
%$7]<O+R[P"EN2i9"lU.(\VWpL8=4SH]/t45dNscr+=.)VFtK$q#(?$1H(7M1K?k$T>"s_55b/NXh!W[V>R,#q75%ucahbbR:mXsq
%,?l2n$b\HPUU[3E,f6>F@2^?ecbN!,<?^V\4Sb#AIJ3mi3RN'FI<m$pK#^6)T1@'V42?AX-<r6hDqu.!TL=(CrT#N'WUDfH[%*gc
%(\>&M(<!AlT<;Lej5uD@$E"G!Zb28H6NTP^Ka>F8&m6@X!@*)D*8#&>+RGb#PVVif;?.&)5SmmWK306_0\m@I8:$k%'%%9kW3hKi
%LdcO&Ha/8;E2=T\15j0;msS,qHIM!n5Ci&;i?GV3L\MTk)_EQ3`]4ShS^-gdE&M^U!0C*86?3)DJ^WPm>>hBE`NhuSa'/D4L!EMV
%aT_ZeSR(W)>kXP/NDe(K@8q\1/f`k#oI7><)fL_s?<AiqPAT?EUK3g@90+(++U0"3il%@tdnV)NI>T]fhhE"GleRU8$4AsgAE=km
%6'YsakQc?Q)0_P'T8?-aL0IIk\Ih+]PR9coRgC6,16?D$-:JO#Tu?Dd`Fso>0I$]KdA"s=Zk3(E]iV4!$Au+k:4tJSXj*G?I(2.=
%\LFnG;q`&3.*R(%8$1uu<<IqreO<>hD+GP-6:QnQ1bad@'WklpH>K/n+R*E!AeX/C0s.NMDPBj6G([?SmK7uXB]M$R2NIih]R439
%H?0KUeuij>:p2Pn,j!h2[kL),D"'Cb/oWH)_`--/6#t8Qm]pX@?W/),]65tqk2jNqm?rt$?h0pcn"'o<fFN)UNtN.>o>UpPXs,c/
%pFD.0@cm+j1T(;*KJi5q4ICTOC:V@p#KX8KCI(jM'nM#3I'.R;^V3u&2bD>$UHobVg*,^^;*q!IAVP!PXuo8\B$[`FCmE?_Vo2mS
%f.#!fHlP+ui[/eJ"qe[=ljNX!g7cN6$\Y5W-7'q-_#JWc1GV"roWOS"l#sIg_^r'L;"c_*.M9/jnX-/oYW2km#^/mc1H))^XQ_89
%BCFQJrZn(q:ur0CdmMF)A:_(@TF4fi7U[>R3mi$lUt;*;5k=*7&jW"pa<#L.6C04"D3[4u#_=d%pu]>Qd&,bVo`WsrIbd#c.nIb-
%b`1lnmL,CM#&da'>T6K3Lp7YVf.ec$23r2=DM`qc;!]'Sk9L\H<lZc.OlY8/BUNh[j?$u3SX%h?T&SuXGco#Rbc\i0M;aaGbb"t2
%bCkU18SXKaYslM$W-]a3/j%XLi.Th87CUq%@uFXm+q9>..%J&5XKdOlWVnPsQl4j.Bao9l%6=rUPqCi5!6;lfg)X$i4N,A>In5m'
%/&W6SZQ%ku3N`CeF&Pb+@g7lQ3O[qE)-G[1ip(c5ggI[R@&PskD3n(?nJWe;.4;)J,2q?Y"L^?]?+WR6X!1e:7<&E$>_A+I<%<e2
%2u$`&fsam"<DZ(!E[MaJ+p:=4J#i,FKcGcl30.\]X#bE4eqeJ@$oMM>^<_%5-%$WOE,tKqdR=J+)aN'&=j(,#-d5<L7oOEO'G#3r
%@a(BCa:g_tECp27*e,_.HNklFBgNDf.I+&eq@&,;=@S6glU$IOc:AkNc$e[ras5c6=cBICh_@1P#W;cJW;K_?B*@'KFUJK[2?fT6
%5mdH'SVi\H;t1O1;W7i.(3H]NGR,$(ajJ-XqPL(Ik()=LEGK0e8+TAOj[7I_j%0N\Y.u/1_f`%bL'63FD^%7FdLdk^jPE2&h'],L
%RH&,iW&.^pT]`p)Bf/>A,mip1Cb[bieYO#<=':4f^=UXBekBUIlOrYSRuqEmqR^?CQ$%`C3-%a[7nY<nogr"\"p6lu"P*58n-N0e
%FthWLpJeYdl0^g^aZB:C0i%eO1=QG[;kU/;ONq!'%Y"_F\1)DGKREMj.V92G?-@07frFbSK/oqM7I9!W[Bt:BP,h/\p)M"U95F4`
%`$IB6CCRTtZH&%H8]i[.&gf+8"rWHK7rD<l!*"OC.JP1OV]HNP4_@0';0irGTK)>-ZR,)GR_eLfg+lYNAq>4$rJd6'AA#*m\J?IE
%`jLUVGdS5&KV6L>5XNq#Y1]#*7'VK1GlZ(IX/J:t#bjl:,#'S.pqteK2,GdJZK%!,Hok$3BCp^tY;9c&"0lp_M37P4VmH!%#H'%B
%nd*-gA@b0*.GPKB.I%iB)M5T->Z0@G+EcDGn(^m3.J*0::tN8$'2&>'0'6Q5lnG+#252Pn,C'P:865sIP80&W(,J#+<O]0q$DS3O
%a=h-[LjO@@4,f=cQ:/UIMkF$uY&QoElsAjEfH-b.>g*L-=WlU-PqG2rZ<-7*#hKSU=*+ceQG?90"p'n&9`0kM_/AqkL^\QJ(V3r"
%&(%+!7Mj#n86GjH59V;>FS\I#9RcIX83=7/!T7+\Wm[Ni<82M'QNp"I2U@EQ5UJY(^8N@Vih`kZmK$+QM3c60,Xr^j`ZH\^-4Xm"
%0KE%'C%+$H33<'2JOdjVmR1r#*sW8VQE'E'^![Ua3"?E`I.eI+G"_/EZHCItgdg^o>b%5r>qFa<YQ0lB/8-K.WfD_!M]W"cj<hek
%\1ojd1ApK/,j.-q'=0iSO=5S@kT@EG\RPQnVr2-X\;9D]LhYa&A^=41"K';rLc@K!l_roqYt7J>0_;qHdDEG@aQ$dBon[G`JU+,,
%]l7=s0T$tkoOWi6$CYR/H<ktX-%#:l'^ZSu:Ui&I.')*>g,^2d7dUf1DI0tBH^g:0m3i0ZiYcl%lT_tt/k@CQgk\6sVJJWZL<Zmg
%b)bR^qTj1@\V?5Y`(k8m=fT)D:0>;%$C<4`*Vtq$7i2ip=Ib"L4mR.YOp4"d7-X="HC?J.Z5L(C`3Z>1-WQAjXXIlj`HtT^ntIKC
%pDrM>('T:qfM2?KRq?JocRoN^,m34dQ=<fZ8rcYBEjQPp[F9K0X'2MRR^II+*]iW+C0%?8`+"fbmpf61Yj'fhd?I=8'W:(r?Bo5V
%HX.F>?7<gYh&j!`M^+0J4_V&?NlVJk_bj&o[k'oXEI18TU9^&0g-$QAQ!r+tRLnQYe5@9P#\>s@:hd+*8E`9S^:u"?f?3BE.[F#K
%V5a0O\EXpWf1g3Gl)BatF7KjbALB*ZDBcd3JZ:R/o)VHqPRiNr#B_sT1KIHAd"<pRQnZ_=/3%W6"*>dWFAthf#9F2.&nlQHWE>)I
%\4R'SQq=*J\0QuoQ92'\>:cA5)\@*%,r/$5F4"e/j2!J2b8-XFh4Mhe2[i)3_Nr.1n?&AiGme4c^f3_7ab:j/@<ru'W\PmPTQq')
%kH9-t?PWkjNPotj/.j3#@1dJrOalF7J]ti`3)V&YNT+KU<`#a5<P1=<8)bj,lVUM.68*f-A-UeYVIXnD!qpLUO;n'gjFnIb^+BZ0
%>%f'&%gf\6KK$`E.eMKWbH+[J9MT+Cn<2LIf*g=I_R`&<=I^^d=0bKf\$[Wi_fde08Pj9d%&/eXB#!Vb1U&q:MMIi+6Pll)GQu#k
%2]!d^OArD14a-7jR,\2U"mC=T2^MkGJL?f,WX?1ZbGJ"DU#*S9JA0pSQCXGSpl8h<ZHRtJNTsSi9q0akd/hEA/9$RJ;4n(PQ0cD2
%+P=&$>Zb"=G*8LNH[3k/4I]5!RCcK4nM!tc^4n6rH)7WjGST<Pi$1S^m@3R10o+@\+tZ?FKf?BSX3A0k[j@jW\CXMW\`foFjDElM
%<IMj.6(]4]K<(PGCX[ATDAkl6;E(.'+KA0B&V4@-1Qla"-;#0"J3B,;,K:Vo&0lb-_Fh'[_*5tna-DuI%?n%W$=^[lpdI#;!*3V*
%-"Cmo0f[kH]9>KATPY_\RQN"A$3:L2a0"NhSk+HL<+Y.BF"6KO*'#Xje4E[qYMb/c.>es@?Hs$8OL/neD]k,NB[tVGCm7nk`ClaV
%3bYt3#+WC:=*LbH8ir^\MM`T48<o(Q-AI:5<d`@VLmuDe-\d=Z-j$t8^EMB!mRL1VSRCso=unKtB^oY(\h]YoA(D^n["ZJ9f-?+7
%qnqCO=^=Rc-GaN*.[DhnioGV3@[]p^gLI,oji\ch3L))TikS0[A%<A#7\4U(C1:3_(1BN?JdI=fA\\ie@U1o&EsRFk6YMJ3^3hQ/
%,V6?XMkT7DhTC=>b'=W(Ye,lh:O9/#@Zs%WNR)1%)uW/mT=LR1Tl.gM[Zhc*_el!`7.:cE_DQhH-OFt$W@OuqLj(L4#95,u7\O8d
%O\bJ%G<]2!,0m*[JZcjeDFDuRM'Lja&.ik\'KCnBD?=lSQ%WYqEa!PWBFS6B"DP153[,U-'h#['*6HeB3VMNOp-#`^j\&iBlS5\A
%5YM1*K1m(B'P)d).HAf4Fq9IG8E*d['lrG*R?L6<A.4:L?<+bi<KuG[R%u^:SeLo:Y6tr@!f4BMG'IO?XuPuK4+=A:^$<#XI"JFD
%)X_78I1_B8CF[nnh8?p?MZdM_I!B@s4'\:/9fmjr.JlHMihB*X,]8Em_o/jpmWCKM#.&Y<[VjaQ'EnC_%Ft5.i00pP[I0%\!V?=g
%%u-M`&`Pm#/0p^B)LR<HDTBS$-[;ikWVf(#\eG;eW0Gsu(G,!CRY&T:R9$t7!-KDr=;cqu(gl23/Q(NF&J't,3n6".P!q!e0jIu"
%g$hE8<.-DY-C^'T1"^usE<`?^_r<*+;@_7_)RkK??*F.0g6<fP3L*b"cWDI'd@-DP@V[UYeUr#C<<P2pPg9ph`!1asLCHOUPjjD.
%cqicQ<!;a\B*(Gn;ufn1LgPlmV?42p()1=udFCDDCpKsf;0U'NHh.E&Eu-XU,I,d37r]Rd#'h(76mbTQL$2fA$lmYd'X_sR6eldR
%MQOE"UL5Z)4J:W2Ne*S^Et[8Sea-hb/NAZ6Y-'$:h:?I)XLIk;Ej+IdD9_&d_(CP5>h)&,VlHa)1J5"c^'.R1pbEElN2"pOo'[<i
%AU66b[j+"i-bl#o(3G3KH";V)NaO>\F!/(teMU>*Zj>$iF2h$s)G/&ghu>ofDq5ljENKW+)t8@@)[#eh8?R6j^9ZrJa?K4r4#u'2
%`eH`W/W8@'F=>R)If3>`XEo5T?9(opS*i7UaMmH0)HX'2=b,#g395`KllE'TPd"D+VndRD1C[U`".98r'1$IKFNX_0K&sXjH4;!^
%3D;,bYhBV?:F)pH&m424-5_5k;6X4h#Yj.Wl[YWJn-r=tW%ot:Uu5b>1/`Fh(J`$PZF,7YD%K/_YkJntJ_(6lNKVk3cs"+"iT^_-
%MCrWVE!lqo72LH*7)@/N''lEVR>&2T+`W/Ik%__="nnk1-`c5>.hih^.=j&_bY)E+-5*9J6mc+HIkiff$q(:\al#Q>&dA"Z#bh^f
%Ck;T$HRd!*,3N`M_o."e^mWo$j&7"I*oKsc%1C5o+m1-U"GViN=a8=KFtf-?69cBu*@:?)WG)IBX6;&g=UEK_;L],nm$*T$N8o44
%JMrb0NPN&Y4>8H[$[i`5>*K8\3V:F6^'lV8U/kA&OU5i/duRB1)G+21n>Sqm:=Su:r!jorLG-m\*WklgE-0LMD)`K_Y[D#&e75j?
%b>b&r*a!UoK@gS?#f0.8HD3e1n;=9+$*1"t`rO0d$iu)b\fI(WN0_;HnB!J7U.It&=TV[Ec3enh4^dJMVR]Dpd3KWl">G-2Eiu^^
%23FVN#iNpHlD"&,<I,q3-HpJ1Pe)kt\JQ^sB-#iGFLS"8V9^'mdqC-"iig7dS("^kkXuV988K8eNi?n<l8+.NI(BKSI3<j&Og$]=
%<ZR_Y$$]9H"T;&$j:]\7;r!'lCpusP"_!Q^K(m/VG_AUV((S_mKHV6g4U`A.r=-b'.SoO`jLp7t1IP/lC_)bA%BGF9_KK>t%*4,1
%S7@dHMZ4AZ<CiuQMP4#Je3h_B^')mb%Ag$Ke2ebKAtht!M>*[G@&,7+$SpnGU(\A>)[+UJ:]tSGr.0gEB-bb`&:+XI-`2Z#'@6_e
%DkOIuV9h@#g?@>q8r)1%=;M[?J1MNl<'UaNX,O!t^<eQIE:=k^liED,N+*-ajU=#d1WHt/7\kZWR2W_k?K8u&O+fTi6Z*<t'g_a!
%(_7%iAHKJ;NO\Sj)'BR@$?:q^g;,IZZl2h8eCdGPDo9m;[)4[1p.^L\W!i]dPV/.bPu>d[mY#!ZNa"8OE^QWFH\1ZCa9@n2K0ra"
%L?XluZ7ogQ/Q,`W9L,*ZT0!JKY^e^q0ia6k:eD1\:F8Za1Q7+m@-<YX]i:U.NYD7DKu.kB+nnBCLgGa*5+NP1hou]\W+;DP5(+!H
%No=IZ.uH)i&N$*E7`TifZlU>Wecet@RB6J,<@EJ.'4kPV7X<^op])*&`!m$YUN2>0r7:3=$@c$tUB)6sCIlQ8;$/B!NY+W'ShG1n
%d'9^CT7XLa`3`F$C-XXF2%iY@E\YM>f1-mabA]sD`OKA<q6ZccTh$W`"pk0>,If1W"B7.DiejHh(FYQcE@K`N4ukmFM.BQn+Xb*:
%#iX,;2HT"@m]b,mL(JpF+C\5@mWk=ip4nK,(=.dO'/2Kqq-,EYe!7lZr$]S`^t1[5Mo=/g=:"ap$6B2F7]qtF7R8;%!1U;A0f'2a
%O(iS*3j]Da$!g..%Km">AgtZ$+Z.k%_3kAMN8\7Y;joLXDj@_$b^>Ib;7)Rb#j*j9&>7F%0+uJ$<!nFH&.raAE>T2W(7eFadSHSc
%!+ZN47LEa?6+nkpYa)q[0!DD:%1e2uMCL[h0prtl7:@W;iL*k+&7O!J[Y%clbDZ1^-rU0C5C.L+_CQuhEih6Qf*@iQ+M2s>TL;Kf
%'.7&j(T_/\_X'kl,ZjEL]Le-L@5NKsaXnn]'7eRU@#=(ha+?PrTKu0?^5O4=R61h`0:DBQcku1s-;PtDiK/a<6q^stQrSZ#C!.1,
%E;\oG^Fb`mYClm<kRpC)X5k+_PpE9KWMF29[WMi\A))gS&2Bj2&\r7V1+WQL<!1m;PO0H7OYbMK.gT_<0kq@[EJS\o$)1+cCiU+i
%XrE)I8r-=E_A9lZ(k>,=Rm"U+1A!+aST5to*Sj>uqh0Ug.+>Fk*20C#,eFt+IR":YI!A[G&T.`9CM]/nU?EJp(#!jS)M,07I&eKI
%mUD!*nig"`'A:"^*>"hgk+H0chhh\_o$2s%,G=ke!Lc[H`"^N;XDa1XWGq!-3-P^9N[5L`J2.-]pQ[khMId:UrR<nrR=g$Kka<)0
%F%B%XSch%R17(%3MIR.]*k=*t]054a&a1X<Qm9CA/dhh;#6K`/,D\@/c;H8))Z69*XFTDd9&`kH?/bV`,$XQ[_;']u=+N#[ZGOT0
%44;O"V;./aQNq\c.!U$q(tL-ZH)G]B2JVOp:sR/D!<.e13YUFl!/,rcIg%G8?7K*_r<<VI=\C>-E-^BGBuMY/1IB$"12_B%-[EW^
%LDX>c57h<c`\7O9rh5l!'-74/3@Ron'JHD8Q:'ps](?04*2>#h=b/-E;LG`k`,[9,kIf`<j)8Xh<fXOj4'4N8JP\+R<=WAi&Ps.>
%o#PL(MGt't/Y?iL.L5&i1UKN)kXE7.YT9W(0uguFPc)B<D'MS3'J].u`J0F,5QbN,;h6?PBACjsFZBjPqo$8a=CSRZ3-[goP_@.-
%5e1G%.6]`n4Yt4eJg(5ho(R:rCe1?HB/G7)A!F0l"9o98bsCh47VMA:Q5;t:Du(#kh%Z4r[=q.*iZ4@*oSgYCc5=/(q?VY5&1T^<
%cM5[*>bVRoN^/apkBI79Oh>]8l7!j$8aIQ84E:GM!$,5$aC-,ldVXS*?4.Lb<\SPf[e$">JVI^:%RO9]'=;u$"aUlA*/fI]U,[df
%",0u0'/4HbP.-^4=O9tT=8`^^E[4I8CmdQM-.\psM]DA.KL?V-E_r1N"Zh2YY?^@!OiX5h$FLNmE\(jTG.e1p3KXo_POZM@64"'g
%@JpT^Hqp?UJW'juJjbWa?;_Y*7eYI@&:%ioIDm@ri_T\D%Z)TrFaF98LSk9h9-D;E.8pB?=sV7."<[q!3ai2A*)%WGPMf:?LZ(XP
%V:Nk.W!c@D+9ipC_Uf(R.\YENZaXEG4UqfT3g9bm]L5)_;;cFb@E-s7$1<&t6<jjZ*ihhD$p1U@jqH87a?cY]3Y(p2BXJK"EPO6$
%\f;sWGSJ&f5`S?hk>fTC+:):bLB@]U&>^'si4)a='teMpdDTkT&T/Ro,*l/8_,QoVI4JF[@-Yf(28L19:DDqC#h1heXQc#/_Q)[3
%SH+WS8TGK;n\A`b`>OGqd)^d8*G-:=,/Hl.I:I<ur^"LR(h=Tl=[;E*aFq68apURqUGFsY4i>o`bQC0^a8dn(WZgeqi/<4PPHpo"
%?6"V["=Tn8Mn@J;V's99+$7FW?]uMBc'BU'5rQOVnd2T]j8g!9eDag9?&&9WN%5C4!:nJCXLKCp.&o9':`ZI\@>.p*6;B5R6"`ML
%?\&oHmmE@;JASRWUPULOio#=&j!.OId&Q0K6o]1c2`sMB#EKC]^C`0i5gkf^M1\/,,?Z?aifVIc$6'JM)M,jn8e)7>hGM39,H*&I
%3"S>N<X`sj&59nG+V+#VO`@re'Eb4j`d%Rrmt;9;>`qAf5!4_A;p`ElU_'=NG^,IQA:bg3nDoE,^sNu:\JjH13?3*D&2'2u_a11G
%V\.sD,PlGW:$Ah?0WO=tBK-!3+@q)lL<%)9ZO(/%;!%YoTQ2/WL:TVp/+=m3_E1p\_RMSF&BCaQLAVjhDuao&A;LmJ*#usXF?p6E
%JdEtniP>ltr.l"-,[NuK_SI0]pqD\"mc?$lJ:p:'!9+.i7X3j9FbL+q!ZjQl#knu2+pd.(TsjO`K)jk4ZBc^Z3^1'+C`?$>,NKfD
%eYqEan1fAsHh&/HGJ"35$k=V\KSa7K$k=YsEmD)PJchZrPN!%-&"j6+!qr1`MY@f!4L+KPL^#_:7k[!jf5OWt<lG%FN]LM5Lu:jF
%(^U`.YhsC,#L43u*=^f.:JAU?%D/=3=Q"pQ'0?o<6/f9TJV+eO=(&i&RA<e77KF$%\sMFQ.If3U2gKuU?I7n1!VZ]tDE(j$&\onY
%FJ]&rQ/.RSs,@@^#QKNc1&bYQg,k=2=6sjA`pb_D@]0tQ]Rp(+#!iFl:6\i;EPIbmJc/WLTRKs#FpOBm=sInP"<(l_9<U6`JQ`Z#
%4(/-e<heN#4&(/=\8OBn'=@4c@0'd[@,IVn@76VnI2fP?18oC-TS5QX>`>o$$-sd)NqI6CSCX#AXD``iQl)F3@,I$\n&O)0N:m]o
%%eL$&d(Ve>8IQ"m6#2FdTig2I!5p6]hk7<NP=1MH/'>@9-j=f#9acETK(BF37n,bW/V6N4+_uZ)L7EPk`L4MhK*4VXO2-,^"Qu+j
%$]e;f1PGm(:qf)eN`$uAYo-XsbL)W1XosL-:EdFm,;pse[s+(.T`EucbUEI)`:o"j(5tEjG]3''5q_BX!2iTNSg1bSP<sqSmHqD]
%ZpK*A!JThGZF=?,U]>a/pct!U#E1?sCa5FbH@mb?&YKP)K6d'Bk)4MH#e?GI@LDD&<5J3]L^d%_(//XO-^NJ4<WlmM:mG2S@X1_e
%;F#/6JL\YBd+aJ4;=M4A:'1%-"jS&6^d0e?bnIqiMsXp/^,#9k/8l!@)kjnfNXcqo+F-=t#XZH;6oP*%iH-G<hPd(AJXQ^[6*Og`
%0L>9t<(?G=PqDY1jLlmrG>T@t';H/"5i,IYWH9+u%.V6B702u!pdWK&QiMELh8N$a5i0kLTJHbm)toh;[Z*Q/8At]6J`EWVNaU.;
%M#d-eP?S(YL>taj.f-tLF^5j))h0LL(2X7,r(Or7MW5/NS5-9sa`raF<1\,@4,u6dA74PWi-8a:-p!@k`u>&B1*_tn!OtBA88#s4
%`f4HJ)s)c67_PG2G[k7niYjV32oa@3=uqU$2R/3h52c#u"p(U%$B-o5h'2PE_g"Pm&:m5E@(\4-T<O_$`nM]c18[o&N&M_Q![4/N
%G[mtdb8nP@#RD3>.,KV7($Z-`\$]I)92W>F?Ab8?K&VcPcY2R7^j#sLYW`61)e7t@I[X]XOaq(nK&_i_`3^H!nO<j&-ks]@-tqt>
%icrAZ&8PKX]HR7odfgK-)^D<.PrdoLA,0]H<b*c^ZP`Kd)9<bu*!eMc!dTE$%aDtEj'<l5m4+&Re5iB6T*'spNKVu>+Pta#a,]*f
%rD^C\i*?MG>QDFaS;1]g_=32I@'J?!_]+c3n59OFGI7ir.L=meIa#mr$K)A:=/phn!8\9O6V6-nhi1JoT#tbjphm&"N]G=8h@0Sh
%87h:.pfq3SmuH357_qX0'i^RIlA37mK%u@9i<c?'7./'/48,P5;p91a0SSqL/Dq5u@Z&rH4lsR9e0EW<#T&h9]<PIcU)"cW)lT@%
%[aD5Yh2plh0Y=TG4G3MZA@KOn#tnuI>Y@UaBEb`3?C=?ERZ?&q@!eIQdpd/UKV`'U,f4$lE!bV$'?k>:;dMFNFs@$foa#(e&d7R5
%6Zs[l1U7.h)nuES'*r,-:oGf-"L8t?gF+L"A2gB(+NT+!G/KO]icp.C`gdVLbSJE?aMK'-1r8Ou7A>ai&[WM!R3S]Pcs\^8kR(u^
%-?,X)0`g[]1`F@1-8?Zb#*j^^,DE.4NhG2F<(eB7%,-[UU(I<":qP]^U-OkJC,^k"_RBke2`?VR0$8n3fp+AtmRH/jWa%;u\&RG8
%DDr+.UMkA/DP0nc.`6ES!E3k=[MpYp;Ja;=7M?l;PC!=7Q-;>+m7+u.o",3G2l]jp_BQMG5RHM/@bbjs&-0V(geD;f11K<^m#2R'
%$+Uu\<.JJ1gl9j$0Y0T4]1I!M/8p97arTZZ,Bm)^a2CtJ.>,aK/0N$iW94H3G":u?n8m_R#i(COl?#H3\/Ql=(Im>#,dVPEP$'J;
%Lp#`\j*)."_hd&A62ut.C"_t]%RmN<5j8Xhbs0277er0sr#*!`QApJ>"h:&G,+K9-KK+O&K^t,'TKrg3rWKa#9I5PC:)(4mC-<KT
%m3Y2YpDp^^NAFSM:AU<cWKK(c\D8PaP-8.*??giPKm*UR%135Lk=YOpd$uL-(3-qum`r,E\`7k.AXR:S0Q&fh34+JkDRYU'6[?W;
%`j@IZ$kh?5/-nge9oRhdU-BDNR,E-4)+@!1m3[^I*OgB$CD\l8@*D)\)AK\#>`k7V.)=XSiBjcYU.Boe]81]X'B!aR8'FY!qJ8u!
%]`<6YKu37*^th7NK`O%:(Wp\'$3fiE$9I!4i,8<fW]DKBh;BM(is4UfK1f&a&j'ng\jS8A945@4j8o(T+E@Sa'0f_lmKS:g3Ja(1
%86V6C`jjhR8=Is4gC7-"Q7mW4J3]br%,.7=%qY2j6"5>)6?X_b:!tRIf$tJ=4)q*=`Tm`L3lBNk[#I?hp,M&UPDg6e19+/DVEAi%
%lW1k*XLhCKXLmuFY8H$pO$tL6,?B#KSGf/+#]*gu]&iYm9XbW@UcTraU_Su/5iQa&0nng\^iIHJ7/n^'\5Ak4KPho/S\bu3)a6cP
%<<hZAhD#7'n@=J9UHa=mc;Hf"d('/\LMB753&b6Z&0U1mc&HD\Ja@SoT0WN^&K-uu>K3idJ[p>ff2?RuJIje6!?D>O:_r-[Nlmne
%&,\d:.3Qj-cVQm;JUh0`'27i415eJ>K8gVna9@_gb:ObH\H/uGiPl%_4%THa_;b`]<m5fU^i:Ta@E^H*!'Z22J-CnD&]h%3_;\4a
%)))a`fR9`<)e3A+(AS)h)adQ/`ZO5[K+jiX!"?aSX,HWj-RdbP+hZA9_OVqe=tmHp5aZOJJ`+OV!Rh_cDHLZ7"p2RL";L2mr+uH?
%<;:=SWXQG5Diaj=n80c9/D/][S6,j"Xk[?:]F@]&Pip9+gR3sg.%GIC8sp@Fm?0Hi?COsC'GY^/_@^:L6>e$\W$FVO:C312cA:4D
%6<tpggI3g1"`PF/3m^5BGh[a!NmG]JDS$fF3""@tkhYGtB<Z7OI=el_W=60Dpc)0+)ACa1)fI&_gK!a@"D/Tp;AE=_,m<9&\UItB
%f`j4r5[r6\=J7^iCnl_2nCbLp1PB6]g6]Tk"!p$`m&%?(d&(D>J_>d%Q<k)QfrfmW)['^k'I,^Y'9MT>8VCbSODPsS0!^"D,6U=F
%8F2p0!s0jq>sPh1"/.DT3>Igd;QbELZAlJR\KMBeNQ2/"K`\Q>'Z(1u6+4$pW6BjPlQ@EM`Cg9c?C.0W<2t8:+PURY6o;.Ta>T29
%&48^kaXl[tLX\e7,Lu`06+5/^L6513Z45R4hn^GiJ;/mcAqI8sCI";SK!F,HAAQoqX'W?.7(34ZN[e(gD5?(uU7+T9#es=0-tD![
%`\pX!-C,g`0u"M"aol/mAkEYY!jN3TOC5<r@N-RZ$Ak6;Cj5\VUFP37U?4*?gB?h>a@Ff)[KeQTCh&$/FS#mX2Gc*ED1]!OE#GUD
%$c9>@piAnF+D_1:'LoMe6.go*9S$#lY`7UqPTn<WgT\qe\NN72L0QkE:D8P$86R7*Hd5-b<5`L.Y7:#A;B,[:"q\TkqmZ>13RVsq
%kh9]76>eFFg1W^f+:WnR7S6oSf-Y7.:L[EUp4XCG!j@U@8bIm0G\o3m)B&tEh\eei7`Eu^7<$TYJ8N@S6:7$rCR7^5[)-TgG*+!d
%m>e=YKmq*EMD#PEJYKVGTX?Rg6;E'=JV[Q0E4*#_Gmg]sQ<Q2?C4g7hV;U%^Op,Z(0XUqd&>.V^Uitl=@u@4UZ_W[=TJceUTab\N
%dtW`FKi>n:c&A><L<V-NCOgFp#)s3h)^*N>Y<pUCP8ENgK4uQd)L8>EP]kKD5)c9Hr<tC68URlY'Q(cT@;KchVSI.>7^0[M;4'g,
%">A.WZlt5,NJdk3%K8[N\d3n2OI3]fJ2Ul\<=2)]?RML"+BK?Rm#WYCC'pRBTjEs"bim^kfT4/3!hLDX'OlZb%H0m7as,3c=P\tW
%M1Qi-3enI&CrfC!PRBt*NW^7GOP-:-@@$9`0cR'U!QGH@&8-]o3<?gJ81]@A)<%kGkFX/+G3&5;_oE=+Ese27"d]?@)\ik4Hl4=O
%6=8*]3Pigl8Pg-OL<5HR=^=k0+i0+P?&]u[;:$`p,TCh*lQe$n/I.5j3Z90IiMAiPL`g6Gl]`8B)e2ekBAlPcZ9dQl!mZCY%E$'s
%0(@L)P#W%pAO+;=U?2bAG)]CKOg20,i]uE6)]OC)0oB&*YlP@K%2jbVNKBQ7#c1$U>Dt?N>jTTC#_g5%Jp^jZ`C:(?_Is3+[eN*%
%'cR5'd.B9u`@b;n@5'*Q'qA4=`3*Qp+!Io*`C'I\8\G**eKAkcW&f4,1=[PQOc21/J],!Q:!D":/85=.K:-+V"1]UJJm`%4rYFLP
%#U["1g,9U<m%HoR`<H\.@L4Hk[@@4V"iWs(&_oGK`CBlO?sk@^0TQbV+fp3'UUZ*]LO`j/di"c>J]1r^1qVT5*Q)?=aC2S2E(@mM
%'d5%@',uH+Yl:pn@Y9>B)'ca`7tF#5rDiuU%0X^s7u2p0T0k9b":cALLY5jhB\8RnXTdaRm$8ft?st9&L<"C7Ba>9?#ja*UfRjEI
%KYp9],*\+BN@GqO(C1j9RStNW[NetN;3g(U)%7Ghk<m;,7c?IKA^0Hea]0clfLR1Hcn&<ONY?;"0PjEkTh<32L5e"8=Lj[4Ya$sE
%_hLr":5j^3__oF($jq^unlMJpSIl8LaAht<^p&@kTl(5A_a]cZ+g-SG?kDN5[8O65!TJ]'.h`UT[_Rll?t&*JO9%*N[ac!H!elWu
%0?B;H-u>[`/uCo7B0\b#`),+-%P\-"!elWnW8M!G(1J`+?'2@B6;\1*-u@D.Yo8p9@9^q^oG"<!UB$$Hg^4`R.b65J%YYA70I=F=
%'K3LiYqXi:KoLg(`&ePZCt,Pblj&/O,8a_EkB8QM6S&<caY4PiK$fiU-tp!*:(Z#(@+Z=fK!mTB_a]5jkj(XUnKK,sO&4Ke535LH
%-u=]ATe]mTKahm4d3_]BLi&"2'7n"i5:_ap&?\<rpEMRSH\2Z<'koaSh?]U)Og%.7Uf0*9_FA<!@/r(r2TV\i#RD,&=<Yc"2M&^l
%go0L!'K3r`dY23[CntGcg&qbPi^'p>:tPmtL1nV!$L:)D]b;f1[)i\2HH"AXb?C&o@A=T1=RRIK2E<7HmnhXr"%'5"-u?,G0ndUR
%KahSl;M)bTq\]j'Ts0Z22Ppcp2NS5[OeK"a*N]T7@:SJd&Y1ut2C_0!FX("`&7ntR-7O8QPV>D@*lnbF%:;C*)aV#(',1TdN,[FB
%Bp+$D)`lBi":fdON,[F?/9'7?&lL+Y_dUaYSYBOs`\aC93'[keL^!ms7R&5d5j8lQ8?FF(&eb70-E:4%K8m$)ap&f)YUL!QGD*4Y
%,Q%9>#92Ejauf^AVAO*I,:l+4A1QWe'kDLg]3!r@i>i1C+]Jo^Tc"+TSPKNY+[F\)(F@dC/6*BT1_D!L+=)'q$5,7#aq14VJqT,,
%-3S/s-u>^+$V+%G8>%Ae&IKJ$!WD3`KoI^0.X0-6fO.IIgsucG2F<3'7Y@Rk+)h^&/tbR8MW5u:.24\[SiE^"JS`./`4',_U\P'd
%^e_2=JW)SVMM7$(gap:Y7LFlO:9^t-7uSQ'/8R/[@$,QI_F?VHaX^3?-ilE4$,X\?`\LF?D"LmBfYn,Mh8o_PNR(s+[6nB_\eUi<
%TWiu@B25,(JO6&9!elVN0P"r#KoKWu14d:hFMhQL(,j/t;H];?m13\g%:aa3HES!e)$RoIO-!l!\q=FdBcL6HJmi/,1PS[4`\g:,
%M!R2,_a_&W%b)s?,D(uVKF&97V_Zm@<^#GWj`i3*[".nDDrAd-\<u8`HX(3q:`+$$DQFtW.+jB7bY:C-':W8A"$<bV=s:*Xj'57i
%YR;Bj'ucUTq`Fe"OWui:^Fj3])a?fZ`JT(L31jf?I1:IC(pV'4f6CVr'Bj3;E'\:7"Sl5OL_]_(K$KJ2$(/*[eDLZ$2%U(.P@:Z2
%o41Gu]ga)EodcE]Nq7r=neqe!MrPF:#RK[2Gjk-CLa<Q-%fp!(OV>qGf.g=RTgub28C9]H?@f^(!%N]7p/3#\Jp%S(?XRmcXD<c>
%"sHC-XoY/0"m=T0OZFBBg.MT^6+KJ2Q74=,fAIMo`u&;k6f%p2eJ=*Zc^6'nLhe--VcOG4]n@jB_DQSUYb(Rli#:$nWpB0*i7/sP
%J<(<gfjOdL$+P,V%&Y`1en?nA^-c*P#t:C->D'sE%(Ok"-%h;*!c&71+)mGX<9qI@JV%(Ck7F=j0Wh$Y[/3Q?XWc2g1,qB>SNub:
%Wu]P*!XS;r:@P?Ya<@.#J[:(b)gj:Bbo1ug.%X2LXAMPFP_0&VF9]f:_6J`%YR&VZ`Yt(2-6e7'.Zn[A"iD6BL37A\(tN*1d1d*b
%+q>TN-j\B8+6^4rE!NV%q%@@!j&]_%9dI>6R_LO=U_5k5f>os^:;NtcO<K]i$%8uoC/LouLTUh2Ap+N%[/pL;E-2de_?k*;QH&Hj
%H_=-f1V"C2g'^fp"LT.W:@Umict^?m7f5ZjXH!]<1kD_tbSni5(pQ+/%%%#q!s)(b;nQk<@KsQ^<<J<l>5\T+)SXHGI'r:LLFboH
%<=L,m6IQ9@27h1:JZ?OtK(_CEW<S_4]Q=3Rm5[RJMGiiLGU%i?6RE.KRPI>i@`Mmkfn`M--r0nA%0Utmfd-n,$tktN<-p&#+99pl
%k_Hf9n>R.pI0*1R.<Ul"a[o%M$m.#%VfmnMmf]-68_B\$;hJ:6E\f3-Qj=FLJkHQe@XKp6QPp-3!eFaYS^^9&TMd^/J:In>PWHn]
%@SH'Cr+d%13[0n1&?4XI5S(4%;T&<"O6$M*3^U!A#sH$9Qmk%k)3#Q9<G5L,TM\d4`nH,u;$X6+Y?9;B;IW_#W7u)k$gAMhNNi=q
%$P529bYE/V$gM+nKdVkS#NJ-JW!bpFYC]RQ-4ADI&.Ij@HCuBWMa`'uJ!slU'Ri)9_$NT'G*6`%7A!>>:"$kU3N,i\VpXV1#!Is+
%(<OmUbKWhKi_IDeYai;VEMjs!%^@DbFrCiLCG9jEO<]oHe3Tuq$Whp?m6jPXaD&lZB<5r=S;*!;7(K3D:Ot\D\ZS'Pm'^8+id-9I
%k&>H/RuV/tYT7Q6@/`E1.q$g?fTLXfRg/I8`RG7I1^9`oTkJfh#/!Pqb`i)7<D=17l#hRUh(&ZERL)c45ar8MgJb=j_1kmil0&s:
%I0)88p'?91A>Eo>$_]'!$oAtN%sEO\%?M_]`sBmG@"FF2Pu4E0OL[e]O.p,/3+GX7itirO"C`;)V,EtbL[IRP2.ep5KYAX#A`.5M
%==rr0KpOEXTo>@p#en]/E9V,Z+>Lj$"tJbl#e"i?dOYGO%5>D]4#90gY*LS2$Eu@_UQKDTS&$2n-TH[B/qj[I$`nI/9G'^O#&"Oc
%<g\D0B84,sC?#.i`KXE?"B&F%MC8qZH`SMC37/;)N10AA:Ds:la[3qq@Mq%hd%pQB,FGi7'h]I=Y\WK"dTOq"-:lPr@3#JX)BPmu
%3MK5eUk'X'(^EW5Wl5@'FI"%!JW.m:h5M%rBgDHf,0U05?)3@1+@sC5;Li;sO=l[EOp")i#sNJ7Bf).1\,mdY">5W&UC.ll'DuOF
%5G-pBHo,5?P1,rKUEQuYI@^ig%5FZgQ4rUu`?u>_BLKU'G8qht(IkHs!_5Vd()<7^RRfuGD?Vp:\;b!>I7K8dWq.5f)F%;n@R^G:
%2o;mq+J\7)0,$;bic?=m1':!U!htT'GgV%tL,Ll>Mh]jc8l/s'BO"j/=2:O<6f&/L1t]_q8XY^8@6cRC.8[B:KI]eS$jop["X^g,
%$::?$7)L%`j?Z(gY*',;+OO[h*@&.OIomhf$b=:l%U-B['H\6FG6rkinY#uc%2Ml>T6"E0`X+[_6mj*8W)1="?3b.W%'.]s"W84`
%=:"*4^sMR4JnZtmF>d#kE.ioLcWK.*H30s#$ihWId,8G%r6,HoFGc=3VjPi(B-ZiCJ3kbpJdU>5$k&UC4%_5a5s;ZF4=-ZI:u?e\
%-aQtYM-\6WNX?dVKs=B=T`Lc9nm\=X%eM*73[-C/<0#5+h%pK')2N8>#S"p\j?eQFmsooiirfi15]IBH<m[K?`JI1j0GnmI@.F=,
%3cTtB@R6cTQYjcp7T`g^=.l3`N3fr;6&T?V8C4:sVn<'6%=0qLe]=0a:(^DABHSEqqZI'@E4W9HX.V^&,YReN"F=''3dKnof1nW)
%h\t7[p&F4Ks.B>95Q13H1[YPU&I;1I]".g;%J6f_p!G"]5?\!<^1I)_LECp:')u"rDbk9>?bOh#55rUqp"@mdfckk8TildBi<Nub
%r@]7AE0($i6:.0\J$u!K\']Y-KZ0:9s8F+HGh,(NrO3ktnAlu-:L!>g>lc7K9Nehu4C'6OWiU8&q=mE'J,Ga*ol^-JA.*pFAfrSH
%d1;lr5tlW[(frulC&GR,#4P!lq$AK`=b:=2)N0C=!O&X\dQVE-qM5Vf9Hp5-fn^1Lf%Be?.O]A2X@r14;cIWSg3)R"C3r.K>Mm`Z
%@XS7Dj3O\0n4m!]P:%a*Q.!K2L``TmMMDr^J>_=s@=+6)::Kk:.UN2hG:l2\A-.6L#-l?RU1;gh&KO!,8Al>\qU,F-+,R-3l2f9g
%=;GU)Z&.R'aOisLK5\u[#p$BeU"<9))m`2m\VCE+j-Xu.!$^)qhMVL@\1=77&Ed^[$;Un)b+ihc!*UNX!u@g?IYX=4Bpt?(r'Dr$
%*.!.2$6hN/Obmu15n\Kegpi3.<JX5&/$g'?\C12<lsg(DLd0m1Jpl2kGl-f^[mKP=,X<@PrY%nq\uN8k8<9ECS-lq6\L'N3pHn_!
%ji60K#Q\5Vo<?trVlSY7l6pi]ZhTC@M_#uS.5m4RA/KImdhLUqj)s#4i/C@M@'ik/Vnb7=\gkTeR?r_achptmis&NA>WA;^;$q7>
%;S4j1&7ee09#OdSL7f4)ShIdb,lMcDVPeG>:7'*)*&LG[O4DD"`_gCI7KYr0]#2Vm-X>#/3M)o;dPnTd@3XPD)Dh$4O&[nsOoW.P
%:H^tscq$c&MiD4+)7UC6D35cgVPIIsJqVP8&D9oIk9W,&BcfikM2o,Mbrci)'koHIoKW2k`c(3r8]-f&+9u3Zh-$F1@@,Opd8YqB
%5`H:$-HcXrSKhF@8<4*8#$9Z\cnWn3c8\@X4:Kk0\uu\%Z>j^@YZJP<LY_#3H%-r]lr;`kC54Uj`#tUQnD%lM:;;BX2Sq`%M4Ucj
%K6NR4Xg]Hb,HT^GhruZiFQSf:!/m88fBiS:54H]6cm)>?SrMi#D?G`d^=#gW$3\f9O'qD%Q-`g%$Y>g_YomK_[%7h`klMM1rME4G
%-dk@o)$-=+jt6p@`$<+I"%5gA&GFeCVY<nmOYHil"a=aG't0Qa\2&uV9m-4ESu!s2HOsHW8E\,?6*Csp'DNm/2EXBZO]BY/k(40l
%e-"n7)olnQCpC66:0m8)K,i:+PrI/,aM\DK&g\i58.FAt#'20'D?#cjm;PT-gn3gp8^Ahi+\')r34<hZXcFZh>o6?![P.;CScT9p
%)'T9cC`buOR+QX7'?O'#D/5EFbcN&@0ak6Gl#gQN,G1'!_GOF5nd3NUmLL/\hM<G7Zer2:dPt3O9GZ?]N$Bfb>8]^K>U4Y8r[F=#
%\4@2D,WtWD8<fc7JuKn"*jX%L0G7'2<S#oH"b%=oNnV"#gh`YR`Z^i_9383W567DE/Cr#.:t\kb.n:XICKTX$@oqd*N=\V%/PT\`
%n8rk5IcK\&O%fuA026S6VUduKm6g!O,hTNR/cCWU1"XX]Dnt5/I'GHW3A4&.UTK=XlpLP5&KQdNdtO37*hn]H.MbQ:iR?h&'ip`[
%%,0;qnC867-8Ylm)FqKU9un.1arJFu>H=?*YTW6'N:)dEB7p(9cEH(fZuuV`HRALGiB'WKCLZ*d^.oS.=#t=V"s"b:*N3cY$'J@^
%2fa=O+b:1*s1@.@M8f!QHk;,Iam1Ob%)Z(kP)pN_8.PUI/&N:O9,"LRXTOAd\tGa#Oa"WW8OQoS0#?_.M)mRP=mLYD(IV@s8bY<h
%.f1.^)bpg-2rUqjdPrb($WW$6ZP_TIWo=g%E;GSq;tt41:1(hHAM-FTX@g$17"g(l]b7l5**I]Uqbr^AB--a,NFOpcefS0ee2d;Q
%qLMZbh*bk(Qk[\u_h>,0'XA9?3QBc('9"F5=K>>K<@MHi%!./9<Sp%VRUn.EUYM.Rhf(^3,:CeG?O7^D9Md9&YIh&:l-TW>U*,Df
%e$dI2Z4/A@X@O=!05P(12Gfo+&ORgdRIcc%fH)#HRB;9"!5%\O2eH'_JFo8kn]K.liPmBl5Qo\=@`h8'5S]+s>&/j6,-/1Z'i$06
%'Bi[%'Sc=3!(0<$3=L9;?"KULZQbA`=Vck9#9d[pjrj"OqI'f_9+R=6PQD^uSlJ2%dV<4F)\Pdn_\cEti`,/m.?&AZBEd6#Q\gOn
%,THKfDa37TbM'kc>R<PQbPVK["K0tf7X`0Pi$H>D$[h%!<l.nDXjYX5f!gp*4^:5kAQtolGa>c3/Z]pYl'6h2aiL>83?:(ep/,Z/
%IaB@eKgAU,$8NL^7/ddtXf=bpB-n#q0S[FGRMQ>QK\8Ce(C^Kk&.q.I!fM)Da9kgZUNWcW)3O&ZkKFc)bOb=K(dlD[p0fjWoqDM+
%aeB8^PADoZB_q3clC>/BBLQ=_q@Mk@9l\U6kd6@D^q;X,>LkjZ,$"#U0UdrB%-J:uWZQafZ;(fqa2ock/@(Qj.e<jU8+nNm<0JXl
%ki6Ku'Ed5N.Q]CorMiiQ\2r'Cb#!5j1CbJ;on."7eS.@;lqhYI+B"?fiSHBm-3cV->rT$++DtN&hU]3N!7>`;Qjp\))K+PV$7K!g
%d:?Z?GgJBUiJA##V%=-k<LlIJIk]Yi;.M4o(D0(s8S#H/Q`;P(#!0LLOGBbA>S5O-$9umQ6Pr>VGtg"CEYtA1B*`=P;$J3[J^C5H
%:`3bR+pUq,6Cgor<LA*0;fV@V%(bc5q&(,s/p[^H-.(,mPpAMK0]qWMkptiFFpYM@8gK>/?pJ<&P6T:^Kdo]*[u/mSL7T':Ol-g#
%15o='HS30=f2d,G]SQW=_R9eiWDp.*R]'sIK\G*94SPCQ1Uk]8q\0A\hU-T#S!M6jil@9_l'dWCU,!H\/<*iD#E?igX';4pcF_SW
%[FU0uIS_[LF^IG_rit0-pReQ+HpA)HM;R\-]6(W\+8Lcs1!#224\%nF#sIf[5\s3S.0)NNaE1@#)j/50M[ZhD@Bm*#'E-@XVIm'B
%aeOl<2K`JXD3-E1.X*"s?Wf)1aU$RF\=mR6;S]%8C0HL\D_obHqI"A1TdF2"GYrdW6,&DuU_^otc6]-Miq*Nl%j^hLYGeGKF%iU1
%75Wq@(n2!Sd/-.A^6/Nsm7QVZdg0Ib-=X'n2iC$*',%VWq/(6?:dmF7*<P?L'/?`T(J$M/U9C+.(Z0QFg%!]=knMc%S(>-Yfu@0R
%',5pL`^RuUKNoerks,5r9"_/@dnS7"7*5`P@1taQ&W,=^kZGS5EegrjSY/`cKU)#i&^2NjT*cT+)ju`a)MjO#O-q'HNBJeuW.s*t
%I`9$!0kD`Rb=bM66;NSC=cJ>jM.g\e"/Y9`jcE:'R9pI!3]40u,e?0onPY85b7/>;\AqlD%jZ*?b^QqS\@qB'LcT-In4p?'[IbdY
%6BLD"3fLKsEB8igH?SeI,5CYmd!\gjQp&%r;'t?nB(CO?+Ds%dp1.$D+Wf6l'J<5g&=]_t&:CNc^]'K%<Qm+X0j'`)Oi%HEAJVlV
%(qX%@?R!;KQ-r#sNf1(i&g9f3Lntbf$:`eRIZKW:bUe[c",TSfZP9rY$p$M\CdH9a@Yhn%RDj0:/_XohB_@e2+ot(g&Dp,KUPAs8
%WiWF)!..P3GTsWTg'H2%%]*j05'p>#\Ib/J`U/@3=)Q3G`2:W+:S2Ik[(j``bTIg8]C7![!hISg^dcE$!lQX=JBUJ+/77\]);M>@
%!51#D2H`8i002LNPM^&%!4ik@X<8g$hmgg19$c'!F<QP*X!b:Of9plX4a?@F<C.s3Bq.cY>p$u+YZ"gl^eD#I<N=oMn!AjU.UNl7
%;Uk1?p@RZo3OPb&@OKg1WddCF.q9EOB/NG]G&Iq>KQiaPNgXRdE!T5`0a:g>0[X".lW[SGY`lqQDJUlp7.K?+=WbO@]Vs4D'nRfT
%GbO^Yn+Bdq$#Z`)&)R$1o+6l+ND[JXU@0F<>MjC(ZF4m:KV2a8(u;fD&or41@+)@X445O[K^Lj6,Z7qm'.rHQ;'q8j=+k6U>69+Y
%,7po&9Opd;4E:/aDAY_W+<s0eA,E(i)krfMFCKGZj@]Jmh.Xu#@]\!FQQMo<[R.E'g2csl_MhZqEC:1b,1S_r0HHS(pP?aV8gPaS
%<uEgXR\VNd09I*QkuoMAoJ+&<4):P-$[Ego`3Zj)UnIdI0Keh)!EA.1!TEN?kb@2`i/@s@J6bXbW_g&8&M&3PZM4X.@hqobWq0cE
%[fI'c\2erD8Vp%r=WU]jrd:@dQH_0&qG2g:NBEFX-g;m<a,PL@Nen$46,_]0n(D\?,N:TcDB.:VRJPR!g7U_,&gmf2=>@q#(D4m0
%$j##_;2FP<(lMUE"0dfil<F5Vicc%J'+S\camb9Q,U5]c#H3B^p'C.+-2!;-.<riI]`BtWT^eTR5K?ABA=kkGU?F)g0+;U&(`!Uc
%CU3R45&0MZ8B[*1mm+8%7/iQPTd/V0h[*2enCqKC8dP9)Oo*DRa54(6pGc]9<b^n\@O"`$.hDaSd."Sh6,WhtQRlb\]cO(<(\^<@
%EJ]K(b)s^h%7JDojicUUf!,5Y3=5&+._8Fe3J^jK1HL#a>:UZX`B"9HCRp_X@0;!"5*A=89G19AU7u<^!qE>#3HIi#Kn=G7M("B=
%0JN91!iReu<P`oolnAZ4+CQIt67,&B&S$\\etVjqTM'APJd6U>/FG8!R,N+$l$'5.`ud2Xd$P,(NBS=AGSVf%'%'O9KNH?Op)k+i
%#SBSqIfbEKA,/5gB%g?2;OKG\ScHG\9uQU&bF.]*J/B*p]!@c0<T(qpI+e3'E`)PiN9]:h*<q@r:F:,;=VBs1M*[BsmM,hMaO3%Z
%Sm5.T$"+L5C%<)gnfqoTGVJCLM0)4[qO*U;k:!eBBu3;VW[gqJ#HG*#oh36\&G/F/6fN.t6mKXMY!J_UiKmY>V*b`s79Q5V(d.Hk
%\:B<&OofjojA"cra>%?V!@7)$,/p:FUGgh*Ln7UuO)/t@@n7>1Ui98:R]tk)-)u\@4<HBcekbiVA!L062Ue+sQsR!<%!KJtRFbT#
%4KF2J#9@Al&uQKj49rLC@c56e2VNfRibFIh8n1`k!dTp=>Lln!7l1a"YFmLJgC7,5S^T.A5C0Hn9HFu5g%H/(]LSra(^NN@oI+3a
%&&kP>>DY^LY!PEB=(NZkX%&VaV`c<6G=)m@ec@#:=O-Rp0X7"_dmb'jR%@3?)lNDEa;brm#.bV%%1=:ZWsiZg$p(_HISQoaUR5W/
%F?`=OR!?VmV[iJiW>J$FXE9#85T=2*F[MgDj],>UEM*PW;f?7A,JPI*DGap]A?5\#ll(ot+J5kNUDOmu?3P#!R3g(9.X)J1>XBG0
%bX?p&&t/!@(m:spZ$mNUOH)'4p/L9ZN0p#bhf'K27Ma*T#XiH^=A42M/6/R?"(ZXoi74m@&6>A86VNeKQ.)uU%89=b/.p8j-d9js
%+\'bQ8S$?;4_4($E):NU\0m:nB'#S>'&"2CpDD6YPq?$(Y7;[>)'Kb\E+NL?W>R',76pU;bS51G+TX@@[;X3t@j:%m12HTWpL%g!
%-RouG_uTcrMs0?W=p:a9OpI)hI>B;F?4g+k:IJhf+n8/ma$'NKU-u*lXS&$X@9\S=*)mjb3Jj.Q9$f`JUB^Jrp(BXhfH;Z4F7'LK
%WL0[ufq]8Cq+!GY/8G?tE0[iIHm/H95F$fQP_g:b'\.,P<Gc;sK!8DlaSn\>XZQXBSnV0qM<J'`@9?Uu6%WRXX::/AC9ROT!chid
%2E.RL"rt5&381$b]a0E;Hg);555A[QK4-lRda6cId?=YbKZ)arOq9HFb"J7iYEQ%-g^!5uYq7K*&KP6qWj7T%UgQUH:I-9]WdM^"
%K8P5+Y,]mm*JsM.9@2tr)TnLg3GThUYu%'[A,eC\CU,cd[?rn:6o4n1N_Wh<?<'$7LWfc'J2(gP2mtoSA<JoO((_;8Q/JXE%%AfK
%5!r.i<P5,XG/-RJPakOGEK:2U/A)S%[W'0LA\aj:a/j2?i+D2,`B[!=L*Y2&g)[\-.rR]?dFWn\b=Rk"+pbGX2&$2PI"jc27"d@j
%4gaXEhM$-Kf/sZC@3$Q`^-qc^9Ost4:4u(E:`18C/JO1T"+#,c*^2=leuI<`Vu[MGMa`O`<]/Bj!:/a?Ag8lmoO^6#<Cfu?p2%A4
%Krm>a['0uX$[[_PSXg<j.;ngS5n?G'5o31e]j.@,<HX*GXsJ=KGUX;+GGZSsP)_,.F<cH'YgGS4#rVH'lZSakYDi/dZS6b5gT62q
%`b2elMI!8SXf\0ed:a&Rjk*L<CXhRW5^%Q"U@_0@71URDf]=YGB.P\_BI@i:aTd@1l8$.beN8R^<(SUcZq.0d[#b:U`5MYLB8s<O
%WcV!H<=Ggk*^m^LEe**lP$84k=QojZZQ]e/M:5K*W0p#hJCRPZI:_h9JjRkX*Ir1X*q30@U/<Z#(%Hh(fS(/:=@'I\`3YZ3VM`$C
%<@,aSW'-h/:p,Y$@B9[W8GWu2N@9CAX1Qae"*=fOMqgZH\Ki@I:?&7@9YMln@&i?t8mb.OghmoV-4X:U/AQ53'n@/JQ+'^U,q#_6
%lH#^Ph49G9a/+Xu>>@$AF<?%\I#4d>ESuK23'2@oK6D$aS"Vu8H\`Zi'?)q_h6NCe20HM&YfTGA*BQB`RTBPnms2^=AZU2$c8UY&
%K=7_m%b^Hf9:@:(kH2mHKd1CajX\[eXr:JG!<,>@jX%[B<6a%u$&,.1.j7Ru_lu_g2IJeZdQ"LqW"9T6VjM?3+4"\6Eb':T*^J?(
%XSfqAYWSlEUq-S$dd[E>/'oGqdh>'D?/`fB$R[^"-Wgon:1!-^;stlFdV_i!LUj[Y%o>pk/g.*YPssktdSeSb)p$%"lYDK-Tk"lS
%N-4,$U1CDpoi"7NBN;ND8.oCLU,"dgN0,hKpI;odgu3-)_4HXB-&>?>.Wc7;J>lLfc5H:*%urp&W'!NACX7`F>.fSg,/0:rj+f0R
%E>Eg$F]G=dl;r)-9[o=<Re,J771-%PTUe/#&bGG$AS-''kcRMg54TnEoss^f:oJ0S-7hrX'R4GEl7QNeVK8774X<VcWK-EUekMFn
%l>.^c?^sWH0P7k.8"^hC]sa'`h;,;Q\4oAmr'W<OL\;hp)5kc)=CdC7ab<h0:0Ea9EecH$'b96,7G)ik[%@*>M5hk8-3qC]Phnd9
%!crl=52Hd/_`,uc^p^h]Mak0YUX""[d;;<jLC'-ZLH#RW$+(>$mIVTiUcGs_4DaZC94J8p7WZN??op,W1U6,tpbIjQCBAhIY5PG8
%#;!XL/<]W:d^TdU^?'a,]dR"b)LTm@.RE'h6L6'L%S?/YB@8D]P4Z[>Ko/O;oQ9fRf-+!B4jkXc$7_ucag\6MrV*-\+sR;>CC^J)
%i5l=JWq7DW:Po!@aRl#K5"aZ5[+&%tdq.I#eEu6$X\no#AGKHPgEC%i!%>]'ZebaCX"">SL\DG@O<pTs:soL(!^8gc_Q/fdq?Gsf
%.L4gQi#A=:$$sVoE%8&?d\dZtf)4ep\YRc]!4P,D/8C'QF&j1q,8UL4VZdHC?;m8?f4ko*:KBiT42;Tl_e%6a:,8J$K)ZrBNrZc3
%Z)5=Ol6'8&LpnPfoHP"I27#Jl3la+X<+SYh<ZsX%fL&D5q+QGV9lq1O?*SFj9N'E>ROJ&qqj[]S<RU%bpHg_o8Ot@r9b!bF8HKm$
%A1jmW">`+R:K?is?.XoH+4X'@9uPm8U,R,$LCCFk$,VBsU2.LVmK`ff<`K("$)PI\qjJC7/Fg/F?HW^u;'bN;/M6g>"^BN[Bdkik
%kuja>-+MipZo,8A\072h)G;\?_tqa3ac#:1H4Ge#AV+B;\+\mS%I@W@@dW,p^Q5fk3cj>W8_t'o/Ln"=bT8$U*C66D?F*9:N08uo
%YC5?=ENBD>\VZc[s10WH;W[D(:W;t54@_SD->FYVk1-Dq9oN,=!\T;]iuU@=C)`2U@d\&<n%gD2adGBN6R3P8!f/I#Al<uHLX-2Q
%l2D)s!(>4U4VcBlMkVUcDFg)r]$1kj>DVmE\Pliq`Z"oPeH?<qmF@*J&TB]Q)XXbtO"(&nBZ\+*kW?cV*dj8Q%WkOQJ_1Z*AI)b)
%('?;B'cjBt<O$8b_kC]5TFu."EM-qlF2>.?6u72qW+@Cb0h-H+A(;\BW-Q]UR@!8aN4r2'">q\V%J]Jri"=C);D#)PNAdd-G*mO*
%!&tP`UC]lVA\_=6\OStHRPfG'pk!f!]42qG#&C-aXWtV"SrY/tXF%qSTl`UHlIG0.LHlZ.4.IB;%PeG]Tp:Qt!:^e4Wi\t23`Y8:
%-R-\c>;@Bc6Jl:6'?A__7"(5lBDV4M4XKub1*%".I$_t2FU)M9"[q>=4Y4;mEYCJXR@$u0*P@/6h^;()oQXbH0R(IW@67GS,u7A3
%M?h6_.c%#YKCi+:b_pB,#t%71i3S*/H,T^@RcPR]P#NT?lRD!p_\nE"F=PigJ`s`h@9JVW)-l&AC">'3&EK]raid0g;A%uC$pbaD
%FH.(UeVf=di\KF/,ci4k"_(&'La$+$dF3`hqi^"-`E/N$amihl9iu=!DP(#+%d;"?O$\]]<9W.E,f*!ZkWA5T7s94qMCbJ*c5J-C
%45(=cI;.o8X[@OV.YZ@h;s\nsBT(6CVn"me,K=3*&p4\YJp*)-ae$@BN5R589d\rN;2gdgX>rkGUrMsHH30&TkU_Ru$_k%;FI"[,
%T99>0F_/pFp%LP^BRGq%b0=Z:7XqA1Jln>)`oY]s8Bf"<E\#jr5'"LOS^W+#8+BZoLEmCL85;M/:c.b`'J?^'?k,8/?pa@QfJ.6h
%Mt'.A$n%WS^gT`;EI-VMd'.:Ul'4['$2GEK8]8\!k\s54cpR3(Ms&*BU53O2f_t!]+;pDQFX>M0>88ri!XUUQWSEpaPQpB*'/^mH
%ecrBj)1_6'U/t;"/Dn`9A9E]9!Y.)j""8f^`',:n-<BQKI4->6`fm-2c:HQ/4nM,m]bHT13QF!C_$jnbQ.+*QbQbh<SmDKt7Q\-H
%*=(8DX%j7g/a2^,@T9"O+t4B95csVbTEYt@VJF;r,=o<)qK<5od'6=WI@UuK(UMbq4;-YP`I_Goj`u_6K.<ZH)3iDOJZeiENqE#F
%;3`04?QSMIO&%b0d*mD*Vs,RiKmWSA3KC'.73b[6@Y#!i!Z:#b#t^n]Z,ht+K-]Sf*ilIp4::oZIA%!LSmor$lkCAE\KtWl)JiY-
%O<2$!J1P%BrRDRY8+.VD6\G.JVa<&65E:PiP6-u!QAHl=MFF6O[Z03De2((&0a_>TH?FQ7#$!3p//+>l'on1eB"<[N!::u;(6*1P
%\F9X=VY#uB)``3J.R5F,'rN]M&KWHc*H(n6G3n;21+4O^ZNpXQFq(5s2[L47rd<-2hQ@4%W4Fk9'H*0\YlT#?miiIp$JIJX@;7Z8
%5,+B3l\&9J">#@HDFgdRGtR`W@eOi_NE(B8C)a.(0CNt4!+\qK)79fU._gjim(eG9;t^lqe;?4#/JE!i<,iTc(9/!e(c^'FO<qWc
%;qe5!X0!jl;(+RAQUtWuX]<-?WZ)lF#0FBWENioLOG'"R6RfZUSH,ntUG&:[_8gG(n:EV#7#>=A'Ysi=&/Kr$q&XSr;(WSQLcbr.
%1et980KG_\+Vt/sk^eK9BiLcNnJ@!f*u_Si&J;(fciSDk4L.>,%PcYG;[fGXcXK6M'Uqci47k7X)-M'oi/9Lr7c3qWR$`dQ;Z:df
%+:(AUTG]"q2U_E)k_)T*'$LUh8$GbV!UFJGH!uM/2I]]1fasH)[`maNE=0qnBr2n1%sRSDkZR@*Xr.mQg(,1X)_8a:cioSMlX8W0
%kk8*`]nBhdYbAr3\A#Ss.Y`TiS7rbVKiN1n0#i>glC6=OL_Nke#P!n&J@J7?Q6_?cD>CDU&1lHEKT1U4g6OB&&?XdoF\Qq1O.no)
%gO^lfU'Z)\=YPP%'6lO%)+jq/.OKrfe2Ts<f/`47!dN.<=/`)s2^rB0,*?@Da1)D4K[iTq$FHK4B$'EOD,(-5BEu1>XFn:D8i3.4
%;&ThX6'=J:N"0eis2VXC#>L13b^D5&70^sI:D@>:3:$cVM7A=+NuEG;`:Kb>-%UE/D#<k'8\Pj*3tmp8`&nd<-6s.:q=no.c)K'b
%f)S[ga3"n&'p2>H#kM<=s12>Fi..AO-:j^8BN._N5#^OKB$":I3u9ca'##ti7!E'>0%M3:"2j8X.'Ab%E;][_<Z/+mEU5`#,"\#T
%hF_`5RM`C:V`>[KC$]WRLd$YbK'7%41;ujV<?TU+&<l8RYVuoG4M+:jU%0jVWa^82`/V_eQjH[ed?]H3iII'T(a(48='!$J3[?K3
%X>u6jQJR8T2CDs,Vo#"d3U>@s:k5idrY-_Si;97,m.D>c<VRu16Q!ae.PI-uXWo:36nCK'2)0Ra"'j3B:jmgVKek#)"a)<e*dc,I
%$pa0aYuP<:VtQcOc]%QK+M*D9)O:i47cQPo5ZG*Y()[i>j?\>i`c)3LJn94JUuFnFM=?X4@bcT5M(4Y/H7JR*U'.uJ1Q+5%Iu4rs
%#UEV")LgVT+<kA'5o#',cu)sJGc_le?@_=:Z5"2na.cm?RrHp]*N0[j7SA`P9N^mbZ7C!_3'aA4&f@/[$g;_($'[P<-rIps0,U's
%G\G=i-%sE#q)VpjOmo,j%*\+Y0MrfWQ.RS4qI"is_+1&;*ML3R7ZO31X\6l8!`^HaVNE8S7%S0*RD#E3N+r]=AP$ci>Z[Xgm1g#Q
%&^flPbahUb83Rnp0r%n8fa:Rti"-VO$5g*5;B[Jg<$Hs0f2Ih`)MdmX$<C\_H#Xut8`TH+5+eJT7Z#)X"E8nVRO0OmcKCrSq=-j3
%)E2I]%Lfs,'%J?L"4Tu'[dC=tUisl_b\.8A#E<<8(S4YnienH"5gV5"-fNO5H\f#,b)86V3^iP';G0jJchf7Mqha\J!HX8Y.[s"m
%#b%\GNm9pATpU)'qZGu+a^pdbGplpoGnbQK^#FmHd>o">JDl*ZHDa)j;'*9dR5MfrXWaWq9'cT$E-VKKl6)><=Mu(0.SbuBhnj2m
%>.Q2")FH'd#=fY)[*=V*%Z[XBfI[=gJT7E4Nenp[&-,^PPsn-m?@l*$Ot<!rck=O2ZFHS$]?mfdZQT5I;2fg(E05Z!rpi2*_Ouo1
%gRGL+"jfWWg#:GA@#"Sk9Nosf6ibH%)&TAa6]8t1=>6b*!8DJ1(p$1`2[Nba<`msNU;IjkXUtf@SEYJhXm-ttg+gac3i1LaV*DZ-
%C2??`F^=7_ou6Aj=<4J(OYqlL;8l[5re84:;1n&,)(],Qaq^,93&&Hgco),6!E"5k/30>YrQ_H+b[KCB)3jJ4p.dtPa*tdT3hh%'
%59<'8OL#=04*lHFEmge7MS`t=661H=b3:c;mT3G_Z3)i_Olc"&7R,+UK;p\l$mD@m'C=D,%4*+LMNA,K?&bW=]#@8UnoYRBPpMA$
%=2?A<L!dg'5u(>:8-;M90%q;C=`EDmg;6Gj(hf[N\\Y57.)h7uLB@@(.$8gpB8W(*Ms:Ft1D/h>Z<N9XCl!<N*l7'23%u_-:=GZY
%pme'pVUn0U2+XNMESkoO9Vt`4MG4u^:gGtC-pVb!,_"XAY<DIs9^#'8XTloJ<V6B2]iaI2c:mSs@%-O<$q3N#4GN50:F!q,oE8:T
%m?pm%4[9rg=Tt9"a+Mp?"LEC(V'3ns:tO6R6R!u3$7B/Qo-6dED=6sX3(l*e?d`V]>NI-%+tS9^oMii[ca?V4#oGIh*Q3+5Sq]^?
%,0H+la.?R&'lo^Bg/Z32T<a&@<$AE;_jhiKNEpoTmQ#:c,XN-V'"[PpgG9rna"R<EFUOj!XCNKJR')IaW-9m37ICF%7YiWrlXMnO
%gdJ=XAW\&0/"md)\:j1eH-9\e8e.:A/rL_Vm8O0+.dKfrN[b&=-)na(.FN!A3)Qo[9]99Km-e+1"R0C+o3B(G8/M@,-APC[+lEe;
%]U_S(_(0nQL_:rt^"E=SIXX<Z)P!N"`CTtPmRU$C]Mc=qY].H-&]OS-\L\@)UB]6$Ng$'U6Vfl?.RCDo8[Y"[*>ArT#t')!][9',
%^.RFeSm_YA>bAt,&;NBd2tmA4W$WgIhB)Tc!MrG\VjLsj,EhF+O7IVCoZ^2?Q'W=t4\Sh/^SD?G.OP/E6RmU7H'O1anE@7[$5,9(
%&!f,V7M-(ra(:WuiFITB<Q#ob6XOuI#QkoSaM]M%/Rfs^cK/&@Pi)W#j*@pqP\rksh)I)W+,$FK/#l,)pSu*"-PF$2)'DsSUZA3J
%\h(OfWLR3I!I?/'6PV08oeH)SmjS@`@n]7np/LsO7=_o[RZEShHL=@:7\\'=81Y&[dibW]V#tT^W>&CC3+VPH_(nKag+]s!CnkUk
%5\a9%V-kTK-+PFh0YHQ)Ug0]RKf>/lR<gk^TKDZeUKseL4:#)P:cS!\-l-gLI*qVlNN;HR&1d#X]%UW;ApoiK>c`0[@aB):8c33a
%FpI7MN>T1V$4t_g)k#,a868"CV#l^R7:M^FL4`XRl<0NAT:OH@Io#JTKtipi.kbKp9\87=HJc9Ae,1`+Bg$YDfs8OT#V)_s8V@ui
%L>gi':'N\tU*7Q0FtcBOP]-\"N5R2[%@KTg,dRC*4s&/*U*?gD1?1*Yf*W/<8P71eqo;VYLqSB-N1L@q"VVtfIIn"mkk`p^)m8pV
%3WaTl'l\GK5aB,.c61\sYf%[dJWcXnBJmhqP;!U<<3FW9BpNmpN*&AUON^"4=_o#/aU$W^p8fKV$sFd86C!c_VcWrE(FAdl0<o08
%"LX$h$2;JXK3Vq;/7O$FSS;hM"([1u@1ka(2d[a)1%A"DenCa@h9o*VYc>cr>dN?\kb=dQ:gH:!h81-k!?Y3J25=80+"Kd_&Q)i5
%pjH.7&Hp2pW[,X4QN_!pCEr02;H.@@S<,7p>K%hMMNL0bWYU^(E,[]Ha0NVa0+dC(W]j#P=o$'W"XQ7%nXXb*^"QG^Z?>D#Z]\_f
%iCpqP,#Mt"[HbgiJi-gpluVOOY\R`.)<?BQ-(VOUaM3jhooNL+S`#AH=QYqrf@oI>rH'Sf#V?hM!fWRJ"F]aWE]3!_F?DLe,=(rl
%m,g-)*/u!*VE$0^Iadc)1=#"j8Em@Q-,nr"*f<l95B[P[MSK#)(d<%i(+7!&=$"q>#'D.NR9i]e;rM)n[PSSO5^TQk>bYkeM$g=&
%h:B\&r,s,Z1GK./9'FetWMV_dqKk)e_9o^JMf*EI2o;TQ0*2]J[9fMY5\bH<CVZh,_kjVQ?5))8FUV>GA"AQJ(eh\=-OTX0?L]eY
%F=bj#QS"C?j](L0FtK51jIE6+NQ@@*Y,tAgeL+S8DCgcEMAWDAPH'0.,4f>;gt0sk!b@KD0BR@L5Pc,O.(!c`XJIG@M[Qsi^)7O%
%L]O!^7UW!WT0i?"-a2o';O>"&@!rHj(JTmiMiU)*I/dPh5C`>$hoaD4?U&mXHiNBM2eR>YbM-g05$@l0EBU.Jr/^10Z`E2o"d0Zq
%?\J3rLM$':.#[!_o&0iJpg:A3$\SJ,ru:n0TC&QVD7!Xc@I`I=^]2>*T!])Ws)"68Nkm:9?W[1b"Sp44*p/7qMf%Rbe(]XQ-[iD[
%Y2P;RDZ@RIWHS!O-=pZ8P73\;DJ-)2&$5BZLA!uS*d/Pt@Mo1E^H_$)6B#h74@&gF?TS")Q#$G+b)IY"7+)Tu/Yi9T["$f][jM\c
%8JlT#+:*c62=6N15T?=9$m5LN"%3_pL'^Sag?RCBE`sD1fX31F]&kV'OG6OqIj_:Rhnb!geqV'[b7cqTd\T&Djp"``1_.tnrf"_t
%"r/*fZb>H,a-g1BT<R%[]j;"pW6VhqLW?t)jf=";Lch$I3._U8kr:UsC&Nq'RqnEN>g%>?1\%p`2m^ujhp(NF+h*C(W),,'lE(.L
%Ul[Do89K5s1Bm&\-X5#T=(et,hS8_hh!En&geF67Mt@W;?,k:6](1882NVmbhJJk'#5Z+Xraft$oEt=9at7[:O=Un6dhOo]<?8!m
%)Jpcr(2.8/)p%t>s)gfZ]1)-!!`'C@"C_fBrH*`W3K6#i)TOGrV!0(?SB/^4n-#."=T!r0NGE13'2Xip7A);f\0:,W+uh5WgG9dT
%UN8Yd,VuQ-YTa9J3h"teTHa`&YKJL6EW[?Z\bu3C4nY@%=Au3%iipUsKKk0QRBBJQ]agh5fD)G4Oi!j%$buu\Js?$Q)bQ4Zo[=O9
%CoFUfS5=J_*B#_]]moK/qXD2u1;DA!=e?I:!.\Y:0\oKZ,;6j7j0Z8C6*8GubHQsi?++Un]Q%0T2285'@==)9YFY!f[Fr-WO?ZcP
%8"[%us!$d[K<Y?O=0EX?h/XTf%dl>dnQ&*F559!el!u_*_@!o]MpG`?qmAkM;qA4-a)'[';^O;LV89>\DR9&09GXrMi7/;>6IKhR
%*'O(YG[Zdu+2'g"4Ost"0^XX?r^TaKrVZBWMi72=Mjs%=gYWeH!ORmg>p)"M]6ppZoXh`iMsDH$+$Y&Aq>'jbe[IJ]B@-F;`Ligf
%BCIRf5]EbR<IVUoVB^"mVV&/s8RpC=@tuQoo^H`gpmTfOek6g1qXghXlYkLDh6l]uoSDc,!fhd+n:RoNinpi25CW?Vs8&(?bLY4!
%++1(Q_aH]erl`coDOrHMkNNsno;BnM+9-Y0H/8JpW"&7iieRECjXZj<>H6GaeMcSD/hWdP/nmK(imYYJht94N^[?Pt\\p^]ClS7(
%=O=>#cY&U=h!15aB6Q#;1kUQ*>I=KN]0G]UA6pf?IXH,o@lDbS=4=_UiI@3WG>E,EYFi4B5.UL^c#\5l#ONVb(O*&p9Q8F+=0qi&
%DbiU4I/2dgWI=C1/tU=T'f=XpAEKDshe(*k\,Do8[Z`[GiE-!::#k"fSp5I/qnrBoo(mb0k*;T8]l>d6oA+6I@h[`^Pon:X/cTk'
%r."HXk&\i39)DmgcFnL8fCr?RTAQ4<]UZkRa2Y`[e+Lt0G8GJdgRd2/C9Okth_-Tpc#(mT=-J:&p#_+e/mmFAc?Z7_iCmjiD9V]r
%@t+$]]DVPqR)UiBf<>)nDp$&l[bE]cJ>(Mr:=mJXS#:8tEd<"TGB5iU0"pMP-M6-=rU'FOYIA-t?X0,IfqMV2[.F08Ec^pEk1.H,
%]^,-[7Y1.!Rg8HI(X)!"c]5$\hG*.2b3c)V(QPNN;3fl@T(r6WXNC%"?enu"H8s(&$q&-fl>e]U`_i'al>fC#m\n;LFh+8"pOICs
%n;qb&=d(i_?*7m%:R43u0>DjRp?^q.#N<+;j;ri[1N*m:>Ml+Z#*n\%qn29r3q2G&fb_i(00&l>L<r%@hpoAg\@g_m;B<!kr7A:P
%=0F7%Y+KO&h1!Pl1QL4r3BZfaIV[<Vk-2X6^[D!lfR*%/oDJEbjkX]i_ZAZfYAnFbH-7j,HA#tGo:*pmg].'1`HJq+o$7/V3QF&!
%m<0gkRi,.M\NIXA4M1R`Y:jgsQe-:Rh>0Wb2So4\41VnNFa*O[oBRLOebj$tl+FUBI=?@Rr9jK!hMIaZ5P"GrBc:qe^:rKJV#Cf3
%IG_PK;nC\4hRjp0S?We.gnF.Lk=oID<T#iP(@P9/IU=kM2`DQ)GGk%k6@X<2_t]8LL/XBW%T;M99=r!e1U+>!bOLGE'gI"+0?:eH
%J/Q\M:YUQgEAO98Y)_)'3G^L%9]co[>(QLkc^BFCmlAU;6@RYI$h>&AGOJnVZeLDM(K\el3BlPWH55>4^O/P[Vn6lm0".2oNfW4/
%.`$%5krk8uN\?a.5;$@j%oV,LJ'f>"I_=90*2@o<PoO@r;*N`HZg0$35>9):aj&)lPM>3iT/4,fq]Em9lO`Kt'mIY;*d/NeI68aV
%qtBC0`Vl=--4P1,U!G>DcfR3T%o>33.%t6/k4!^sZ@/:egG&2h9"d0m043L>hY]?cAac<2Eb&[,cc."-o6O1]=Sk.G,P1ajajL\B
%*d1R.gqI.a)?,r>\_lj8?Y5W@r.(PM+(/RUXHU'\GMUK*(_8I8In"8?0tX(@[MRWq5KqM]%d)`<0ptCSGRb^di:@g5g63=cf@S3h
%n!9<`o6Iq.qF>^Oe@qJ^^4#nSXaak_o@k%Q1ig4=fa0`89:3U2p-/Q@6&7]hbW&XYo@hEUbb;[-?X16iH$OSI]NSY!I<kPW+J51)
%Ze!q@+7;F.3`8/Y//E"cg<#CoShU.'7j=4QH[V[_T#]*[W>uJ0HcIh$]B!rZO:;'Kl^5V>o=%kLZ1#/3:3,ehidK%THlUG6T.uaX
%II$Xp[QU6#0D58&noA%bf]<U>M/BHrBQ8^"7WU,?e8A>dRDBnu8a2RkKemu6jAt"'C6I1-f/&HD)&1*%IuV?p1:*\EY,2qH*5cE1
%OG0X`Y,63N6sXNH#!I<VEHgsEXR4E4Hi,W`^V.1H_s=P[c48M9%Idtircb]\3LjCSEq\7HbL-NI]<g7[+pGC0eW_[>Y*WcWP%W(d
%0$h;FR?I_-1u5-CEHZbM22__>l$\QL!<BGh.PmZN@jK4oT>UIlMF<jgR6r]9*$\>SaZ_fPAF98"J'^UdkMYDA@o7JgHP)0VrfCSd
%k"Oo6St9FCb(b=)`hNCCju5Xb3077,=\N9(@o4;#n8nSj@Su8]k"oBR@k>cokrN_g5^Aa%.'mg@hXe74'T4_Z15Ea,%QtS=em@_?
%m<GS7.-D*i(1kd%%cu9V9/"O5`mi5dbI?CJ]A1TI#1&bRiH<q4_ZQerS;hcsUY+Z6*Ya(^kC7jT"_,>2h1:8gh\K^^`TW-MZZEpf
%#?Q<K/Q$,?I-keG=uu5^),"r0CIc*^jD,":fD^0P-qA:E@>Sbmf[M-I4*%_n2HMsICCa$>4*%_R=8P@+[F$5kF9hg4I9VjP9CT-r
%A.Qf`Ge?LaIuX$h)U2B9j#&l(UWJp\AeAYYnBn&HSJB%$[,%!(p4oX;oZb@YbKFfVc[L5PK:Ku143P+VX.-5q$\nrCEcM%oq>B5u
%Hf<4@=P(aXg"dIN0JnNm]:.FU_PMMk?T`qgCms#uJC<(1L[^*lZ_LYd5U;Rq0*)IBbu=JP81;*\719!\1CG/V^WiMOn$D_/qu>!r
%*u=;m/S'&DaP.iOm$h\\Y\O%5)\h,a`95Dq1k%,Er:?fW7h"EB$l?n>B-_D,</9a-RX&E:SNib(>eRdqePt/(n$hhdJ!$AjOqF5*
%ljf0dbV8bh[*=mnD?_rOR/pa9*4G[--?BGS'V/m\@9Y//A.F('k:l'2q.YV&aBM9VHiGFah-SmM\6@b6H/]A"D1&rcje1JOpB85*
%+<JWlF@<e'hB#?EcnX#<kl3gBJ+qFl]*%!-I65VBs6nA8Hh@=ZrP(l&n"q*dqL9T/-&gYOO5L%^k-LJ=jO*/&Vj=GJ\!J(_^.4ga
%dHCDX@a5B*kMl=/qcCt)S*Tc7?I(WACS080@JaneH$T#)S#:LVn`,P>f&4q9!-$5NiT^Yk-Df#L%,];t6D(XARFEpCQ/CI_Ddr+h
%Bhb)c3Ub_sQ^4iL"+$2Dcff$c;mXKk6?]_t]c4Y/`nPhsPO5E=lr^ppBI5g0akhlGo%B)5bN8D09hJZ>f&!Qf+)a@?q;UOWH2$"Z
%o%@Y7[qF;srRsd=fe+CkAlpjUQgM8Mp84PNcIdE10rM@-?<l=DD(@M(iIK?sa(Cbn0$k/L$DPO8@oL)a7H9VDSqB0!G)gnJEd?Le
%PM8>%qQe4+Z]%B>+5,<nQuN@AZu9@f>Q;e4KUlspm";O!*R.*$D*F,0Yg_BgI:K9I_opHsE\tGAO(fXE01Wq'^O9-Q_olI*?J*Ig
%L)7;8T`*tcGhHR9oOrJp)oKkeKStU!kHd)OV!hE23bSoL6VFD,E%hrDV4o%@%_LdqLCH-r#9_q12R+?FfQXQV3HNhsY_i1,B`%fZ
%5$4J7pK5RJ8$`!I2eNq2I9=P1EK;!knT!=p+_BOQa+o2`oTi\&nU]Kq#N]@M`ZkQ6_a7aWMg[a_0-/H,G'-LY0K;MY]f:@^o?4C0
%bsT[sT7K%Gbf\f^Ol50Hfk2"VHo@`t.5oo1d@)kHD=>8N%_qH/p"4WZFn>P,X5tAWL>1grR4S0\mekZra$6:.n9]?Q@4DBV[PJH%
%=S>TZHZ0ml%HaEET?pptT$</Iic_q[n#W-;R2=%l@8PZsB@$;o9RD6/&AL;pbp+0?*5OWjr!l0jH'=U?`;b.jA*emrOH+LC"4Cln
%hMtGSJ/r.F*0,3$^"%38mEQg@(e6[-^?s.lNcDF9*/GWqO/"5_S^!&%HK]h?kI5*eGA!7Lh-A0\2lG!8EBU]+SP8;G*Co_f-=Z]=
%%/cP9c<`+&EkD7!pWMmo3I8J5qd%H`%^OOUrRKNe@/`8=Q$R8ZX%?USI!9dSGJ;>740]>^]>%]XcC3L`p!0_i%%H7m^c]r2bX6%?
%8"cPY#Bf2p6ZY6b&Y*L_bk;%,kD7BhI=$-tbqi#.H@C3^22D-=Ze`l:7a\!CRlPNdc0f1``(HJ>D^JRX]/0H!%;aDg1Aq(Krq;-E
%bP!P0Z;L+II^3N;]2)e'V'[1<WV5_B]T.`p3AuhO'_!tq1<4pK6/C?),BeP<T5Mh75GXsU3JVS"6b_\ViF)t=h7ZB24#D/5H#+P)
%.=Oa.cI!9NF5%'q4C#(F(U\>6jjr;IUFu:Z^GSMum\nAN[COi@*4<>,^G\#<i&kaqq_<e[Xj'#En1aHY#.26uWcKt.G#[XblJ,7-
%40!?Pdl=@K7s47YW,qJPWH5BmF&_>r9qD0bS""%ThO_u#^3d',4gGS`S!u?nLTSlc[%[^['V6Nl_sUGUAgYkH8/\pia-AXD@ifV9
%%M2]NLQd'Ebj4'bAF.;QIG%#'W`/m=5?seNs7Fur82i3Jc7eU7qi=mWh,eg8?-]]QF1Y_K]:%d5&*=qXSBmm6UVFU\431Xuqf$#)
%7a?Fq0LtA8LKs3]6>iAW/DbR&p$u^fIrKh\PFH?hk<2=.=T-1@%br]jAu3%FEaeH-YN$he"BRglX81#CYk?iJfdnjqdX#!$RM!m;
%lMgMQg%f[V[&2*/$LGMaNS3uJ&*@/d?U=I<".c5*=@:9Tp=i:4nBc>k/CMjP-YNIl\@S<ohUIk'RL_SF42Bp&?fKNN(FUMuc?%)+
%l$X$ERD:79m>!.8c+(Md&baPc^:_!_cB@AA5I/<2Nst_6jONpa*!OogB_M`GmG=jHo_XNPgc)*V'T*Af-p#L=msH880g@X2U$*>d
%]]Za#[sE1WDs5U$r>rA%T=2-F2Zjucl?LPb7Xj(Rf:U81m.VL.61dk5i:hR.F.SPeG5.6E[sRQCX*Af7EVJI-3NGii6+r9h/I;1C
%ipN;BMlh/jj5[Yi%.3gLmY?n0muQM!3UHY'pm,+*nU]Kq#Nb_=*rao=L_f&]Z,(i'HJT2$31TqlYG4(u'Cc&WHlc<gnV7N,H`Zm`
%BTPW#"Re?YRI.e@M6>--G;B4T%YBJjL#IM>rM5Z:cPD##F1nC.+l'04J$f4/55jb(&PWMS,qtnQbLbRXrFQ]R90.Bt&0L@*,Aril
%khn0N*mKegpDtU?d6g1@G^ibkSP854IoAPt/oUajK1u37m5Y/Rab'u+HOKXjmo]_%'&^_,rB[.Y+*J43g[38B+#Q-Xm.!Bae)NpB
%a<j$V>BK?9og<6Ah`kK)roN-_L\?dWgYocN+6MqX6!,Mj@YWnE-iAJWRNEoZGK`e\EdrN:m6S%?LNLTYkCm&$oOIUHj"]<]0s_C_
%R6B5;E!WI'J0XRXgU$3Icf\8*fY]NFeoCLUX2fYsSd-E/e#D*(,^hLtCt]m<H2IO1nu1OFhXc%%Z$\bZQLAMjDcm5-UX/sPc-nma
%5LX(48;f`ZqUNj`2m!mLW-Q>R-d*SbY/e;)pq^#bV'#WqGJ@G^E,u=\YPYrDS*Nj61lK[Er4jkts5h-/mQ^X-s1=%HIK>\:iEm3N
%oDNUsgOHZ(rjU:(=]i$*Eq/&e@i!Bo#N("=Ir+$8-qESFLK`^^a64Sb`K_""Ef-)\="2fdc;mL*4+G74cDD)):tkr?cproO6go[W
%m]ig11%abUj(ReRIkqYG)]g"t:0/bs&oHsa.^;iEmGDMG6I<H7JqH6-.=GO9?^^c5)Rc6/_ZG<R__D$NXsOkW\--$Gb7]1'U0[.!
%.FX..eSQ0PD#nLtNet,rg%@#jAYesT1M)q5;qf0,N.*MG47Y)e=KIK:g'sN-&p;4B's@sn?1J)/3'cM-[XOhG!/LU7IpBlkI(&h?
%p?^I$'=eq@'>+F..bk7j`0!361N+<RpeP*3f8a)c$RXeURbZ6bpK,hpEEh`;s7bUPD>J]:[r4C@co3#F-VrH]s2Tm:eCM"FiNBAf
%o@<R%=J:\C\;df.oc&pH>MZLQQq\(@GSE(Vf^W(9CcU_FQXM+M]LA/;8'atlhKU3!K/P`9_u85,@+Pq^FAL2kT32GXSp+jPS!9d?
%V=a.Y4g]ZBlPqf&g=Q)4H>'e]N=.g.[-c(doX'H,G>l?EUShO_g-j+.i*8MFG'S7&JTgP'`Q.?ho\VLiB6ei0^Uq-$&@D.+rq6!E
%g&G2Q+O*DP,JWe:lYkP<q<IA`>u6$;#QLQs9ceP"F)s?UqWDWJ?2XBpiYdYU+$Fc4*<IqQmG6,(]_>4\.Xq<;iqr`o++JaF2ne3F
%?MradC>>r(j7iJ'_o9oBhse)4Ic\<@Q$XJ+L>Rb*io:u,pQ,:FZ?S=A.eJ)&./<[Y:%7o9P4TgWP4UK$Cqh(b/Zsj:MbX6f](L*Z
%!&h71)m@94Ib-3l[XQg]``-KteSm$#l;i(Mp%O^lI,48WlbC"u\q@n\%Qo.+"K\5X(%/b]WhNeph/3#EXIRGbr9bWh.UjV4^eWrQ
%qK4cmG3+\:M1he_M1F4Pi&)nSD5<3chN)<ee^qk^S(_bD34AOm6/L8DG$Whsa2$ZXj5ca#E3<]TTk=)9gX7,Eo@P?j1]5?BPKTgF
%^-BNS%eu(\I_`#^:7Di7o;fUW^&9C?C[4pIeiWn_Ss&Q.B=I%W<Z_sdq"uGQ-$I!\fYn_4+4lb#<)p4!E@>\]iL#;=4r;j,)]sjb
%c2_[CV.NC]Vb:89-]?SiBZ]i&d%O;2Hd>2:dCI;kFhX78ejcn7]gAF=p(7cdGp5V2/+[?"9X7?`]\%VRdjLTO@NUAq*<#`dg!Fsk
%I.(QP@U(/tia_;4_qX(O<NRPZIqWYsh75AF)iUKT^Mld;ib^m>'>rD\e$!ZW^0R>fgcfL`UdM\(:c;i(<-Xp#j1];qj5fgHrKZR@
%pZFKE=-Do8a0V>nB/`%+T76dKqQp^s4",dT[#\aDMICA9J%!(]mL@@M_D,a>P$A;-OQ^A]4IECU?8R\nZ*?%0B/d4%Lc,`b,"CI5
%!f;aU]LL,ZGTrI/\/6_:E,Gb?Cp%WP$)/G/qBV5PgZSeQR?]X=/@c,8[f_H)P'uC9$?VX(0W4X2dLh1NNJg15c35QklF:E2hXf)4
%;n!?ok1dlE-0rb.(5"H8o!l'0(IZK%hV@\3>/!i#W8MoSFtOe;TCYZZco)>WO@p?uMJZ4PfEPN)B^O_Zk@&X40X+mY3\6!n7(;%4
%dPkY+0sa+WC"\$he0Z@t"juqoJ=_?Tm3Of2gd[NaBUjuSX>R>K;4>:@,"KWJ<-Y04crI,`/ZbHLLYL3iWSjK[a(P@PS]p+5nWUp:
%OKdY)gU`+*JK(u@Ed%EFg[a!/:VT,W?\er!9BWZ&L>6,%$-*$M@!c^B_ai=gG*4@sJn3RaEaU^0m3GZ@TkC[eH3s`?p6C_f#^N*7
%d7AYlHo45HNXpm97KffS*lI!q<Z;_5jod[2=a)sU?8Z2"r>SgCBJo8cW6+^]`E:JHH#T#f]Cm<jHK-"Z^%Z"(K/)X'LtUgR1pF3\
%++][@;Ra%a`1J9EP+%cJFp<VE,5e=_1e\hj'5C$tM35fD5U=K7#%q6/r5R7-llq*0N%2a8"t/Wm"r(K*D5/+k#31nYU5=_`0(aeR
%DLnVnC&=-PmHc%OaDAdBkBTiJ/AUQ5:Cg(`pb-H1T)?.%S>3rj>C0G2G?)hG>p7BW,DKr9oJ<A/^*^BrFdc/2R=Ws8_&Dl<KCQ>&
%m74h/Y^Ro\?BX:mMZYsshTm4OdqnN0_,Y@\Gq-F.BWW3kcOFe0mT60c*s3Yr#:ur8[^C'aS+JaC@sA-mLX[2T8sYlHBMqW=TZ./L
%'F(1bp7Bn&11)kF/2P&LS4maS>*cHKCmX5p[/2@Hg$#]:_#"_FPDa9p?J2m>>s?rSq';nkU%0;D)F5FkV]>N^i3W4PD:hmQFi34^
%&&itEPWD`_CJo$X@-$j595dH@k`8QPBe0T1VfqLmflc[E]?3MDNt!'+5a$3@K6pi*Xg`/a>H+P`HYWHaL"U;4<GC3=4%)43K:u$6
%WGt"_'AsR/a)@>X@\8>c7;m(uS'jphr4&!0NDh$)D+?Z7IWMVm4q'aXaqS[uNF1Zjg<c$4Yi!5ATeRR>OR\p]`bf1I8VAWJBj6>#
%=J"VT]XQA??/#^2)`rrprnb.O'=(%)'0aFs8#YfT;pd/D7#P=3=S&b*!a3'GJ@Em)dbl@+fgNb;(+8$T'Y0rp6+g&h%a\:Rp#f0.
%BG5/4>io]EM(rs"8EOV&Vl@!"hDN8RY&%=u>_q5H6ea&q)RRe's-pS0/8_uK9]X(md[%;i`f4K=JoY<#[cH\g3k2=Pg;Y(kG0m`W
%EJFNLR_r@bLtU`=DZ&&#Vh!F<YCLE;[bBBR.8E9NC>9F<39uEFD(fUI$jhZ1O"@4F\7Nr&=iYZrQrb210YG@21_I<m3DOaGm=:^C
%4u]CG74tf_^j<@0K(j3k5irF@H1C2e=.<l<:E^$Mr6$=t:rO)l$uPKbCahT!4sSo$Z/<!2%\!'GI%>f*iobA[^(`%fdYW:6\$$Cu
%hQi-`K>9cS2ah*hT"&oU[]/fuEcBP'iG-Q#E1H=cb>mH+[UtBgAkt(m1B!I=^;ci^Re5="_8<#N%CWP;d[htN4$]:lY`oHSiZe[D
%,IgJa==[(rH;FYM5H5GO?(4\`m4*\S$g67#P"-SSZ*n]m5?cgJB95((-E-ca-GX6d42:L2m&t8RU4!j41@_cCkMn8P"Cr;2&-6m&
%rG;#h`S&GriX00H7fD#BQu,l1cZf"5q">'P_=_IH."Nc79("J*;A(g?UU=1Ej7ClYne_f0PDQBC_6[uZ)@(]tM+%Q5p=oC=jA?HT
%Zo44q/n^DU0=Wne-Z7_2AP5]Z`$G1G2(/pBDf$u%m;G@Ud?q8\<(5uOhS=XDBH/?TZ0@;D@).Mt3#>Ebc9s=>I$R#KW#+BMDa`bV
%@1A&f*iQ@SD/:9d-?tCV%lcKhN1qf#d@Rt($Uog5p0Gte3jelk`iC-UQ(W>b+7/\THSKX:]jTj1LdS0$K/tp!`,(Of6t(CI^_VWY
%"lRr#.^E'V]l4j3:GAL3DSl9=05o;h6KQfJHQVHkC!*Q,^<-,'*g\4.ZWul_NMe1f[U`*lB4@@)kB@uS5^hR276r!YN_BW%Wn>aU
%QC_t!MJD'lN5`ph1qqnMji4!W1'Y$C&'V']e<KBu,UFWEg*;so&deeZ`]fQO#k";N4KYBmdVJUB29t*0eq)hsKa\AJ[3"(a5Yl,b
%DiMG2g>kc&LVpQGI*j0ZXYuTk]:8&DQ3=;$,(Fb)'"5F-Y(J/Gl#6E3P80P7g=EI0o&EUuZe++1[85q6XbB,7(C4RB[`fEYb/.i3
%RgU0K`Ie/2:dU_ekujDUM*N8F[/*K"E;Yk<K6"O7cUBsI_`MSeY!Hle*Y<adVV5cE]Ut$V"eVhB7YP+3!'!bZ"tfsm+RR#kP-Wh'
%e.DEQ+La=mgVIMAfcg`l?q>BaQ.jitro;RN[6OT#Z>Zk.F?tm"R;tR:2GS*QM7dko"SJq$R*8epJ9jBGU$,+O*JHFYYGPmHpu-NZ
%d\&.)5F_"X_"e>IdpN];]Al5p\S]AEK!BiL_N6&m")i"-#@&qjS/]\p+?1=Tjg4=q'U1qQL>+oH%N=3.htar]Aq)Jh[LbUhS4R.8
%_sTHdf27hX"k">o\mad(UsO9l*:?jS1.l?4V9irFD\,7)K&Ip+G[VEC1Z"]0&--!pCR`sYW!BNdUC>C4k@dOPUPBZ\Q]6$maK#Fj
%&b&HR*k"6WW/PCZ![m_sO+J@>d6?@Jm$hgBC\^',ouZ!-"VIG1&OF=G"T!JA8)*J0!lUo=f\]$Mcuu.BNV;8i9JnnTVZ)#>leUa5
%bHl'R<4#L[p22SBWGrAK`(8G(D/DV1Bps2Kiu&`62M^:DmU:NB/:UfU2&C(ZHP>,fM,t*S8bh[PIuE=K_3WR-\E,6ro>bS?D@>UV
%f&W/.TrEgEr,B+/cu5iY>:`3(orGiIb?(l-7:9X+L)La(:k;?J'C=r_rXaO(3(e\4IX-FPHBude4\Ktq+bF*sIYcpki=JFB*hqn;
%e8iGMOos*RWIAsI\)HPl,=!iY^JW2+*?FWH[eJXu83aIo_*,jAo6[bD$N9@]bPV#%YCH?)jnW1DC$:dg4Lr.Toj[IQg%F$ZbM1"f
%\'LALT=jEL$i922g#_>7O-JMA:&j'NimWTg]Y&U(p_GCdT<>Y?%rpoFq?^qDqiS;SWK6b0YCAaJPRk-2nb%$/gD?()-SNb_cYq)]
%(QT>]=ggOIDn/%(Z/EmZnB(,O/q7c@5?U,2<GX0M?,PR1+7FLd\#e(,LmQm5(4V+9`rFKe#*dWhcgu@0590p[-2MfBrc(Y!DZW7Y
%s73Y6a6t(H%UVCpgru2]]ABV`V\FlpISOV(T.WNt9qO'!+'>sI(DumUkO.9?T#e?u"2h":ZT8,%_k1.d\FhLTr^(gNmI-HD!C@>r
%;]ifX%#3AiDkG>ud,XELb4%QDDei>:D\CaQ?E$a#ch5O9fD$;t:*9N!`Qu`*J,Sf!`M[(N3Dg,iHbOr8C6MFhf]#MK?hgUD+>0f5
%eDr9Q8qnu;\,"M8O*u4rG5fr055+((e]%@F1Uf;-/RSN$LVI)CIJa%cpSR=tjLQ5mrLE%2s$7^pMqYSEWbfl0dZQ/n]h7/5QIM'T
%en-LT1APm=qo&q^!NW7IbrI/^-V6',c.ae2!'q/!6.-O_dlJj:Q;2U)$<eLK-G(EAVorW,+U@&)rq7F42\[inC5sdaZ+6jG08E%F
%SU<"/lu/K`S4mDVm#T!M3H@6GJ%mCWF$*Y(A$l8F;r15\0a=ViYR5D,b%-_9rPTXM's6TempmooY]j8Ye"k9)A:GlLQ`76s[W@+k
%[Y=#doG9pm5:7KBC\%ZJ7S,6f2'UhsKrIrpS,?jG@#'c.[E-Xd5KNMojY&BRrnF8i[YX'i8,JeUN/[0[Kn!J1.4t[Y1YJF>(B8H_
%EJhcWO7lCbgQm73I!E5LnjQcheXaCkh-eKDAk'kd9Po"Cg8-82qh2e'W&sg9,i_"H-:pqjGW^'/1<+>!qMu`!M)\lV9kIZKkjpD)
%bMhlF-6$CRjncsNIH-Mt-[`JH&pXF`OBh_$hu;Zt7[K?W]_d6^rq>N58o)NE7[?9cm57Vpck8H##[HZfo).#'dAF)i0q;jm+.+h&
%G.4kG^A*K2md@pKr>,[m8WBVd'jX!ANV7eB19I"8%jW=hQ8afdeUOgmk:i.(lPq?&`3j;WU[RaIjl^Wrg6KuXdj1IB6_[+lh],Yq
%)(f.f:PSk4e21:K,5bJ#'a36$<L.[r&@i>Uf+(`2T@+>[C&C7:=,uPSEoE<snn)WcVC7'>'DgEROJ^sr4%(1DH[JS_@0>*%_E:-T
%=Il*Y9%L!tNcIV;>+WiNU7<1QPnfS0\^O8Y61uFhMAd2[!p75%0hK6JB::(iM9g5Q+I!1&>_u3]+pU[2TLKhMr?uJ,0`un/P%\E!
%s!F1kVC@,@Mn0I(>c#O,A=@Y'o8fb7PQL[BH(%Y:31;.^M0@4kPYIfB:0haAQ)Ab1=CO.uI>m-7=M7h@Slc1Ojt+P8oR1"(m[S+=
%k>+Y?F&j7@<QI:#TqUK\;skLfeqde':e1)0PV=oWquliF$(l5MjfFsd1W`"*>#Zd*\3V?6+B]H!`_DRVQ+1=3%4Gf5fr^e@A0O`@
%ZK-I#B#./@KMc=O)TaM*`?h8%gtnP\Dkrf^0=+8^e@N57[(()Z]#03h+GP.1jEZ<Y/dS[jmE&%29'PRAa*%/NO%dZa?39qf@E]jm
%<(\r;Xg(7;[_h^;B2`p-;T]BnAXY)PF]"f'8X%ZZ[\?/BP/o;WUiD,'S&`#VD]FAu1MKtq6e>:"<_8kLWCeofp/I1e@DQOn&@[<"
%d:0I7bJJ5!Yt)VXT/'?0hQZ[1!eVVs>'+i6*6kJK+T-s`P8JkVOEAOUBNWbU6K8o!V)=DWnOGt+Y<qupp),&[0Va>;*a<u]^a`8(
%QUR;sd1dS+7,=6OKr>q(4="<:BL/cm\'2?2A5H/cg)AAuN'ilD+rF9I1>16g0p,l%,"mgI(V7%gb*#sq,/C>j&L4P,_E!Uk-F-Xs
%%[Q)3(_=*u)==d:_i8IImfS-Q.SEl&;J_L5<g(HJSCH)am]-u(0?AHGScS/:1,!?I83R\EfUe/)X,N;h\)nii;Hi>09BKd<,^Kg$
%pjaB-8lE0M''9`[b"04!:.8)PcJ=Y[@B.OjYR#loaOp"2Cg>&g?TFZ3Qt:Lo*G2m;oss4ITqk0?]\n?4AE??(fj#jj5'k)ch[%B%
%V19nHXsc#SVKp!&\5Lm7Q`_TJYo>sFQQ\nCY@3(P-Ta6hjO%Lnr!]%\d)i\i>F"R7&3]CQ,%[XoCF2PM3@FU`h?M^5ai&L0\htDM
%UY:r)Uo"c?=E?q6kSeHhOqdU]R=9chEfHLT/6ICb6tplW"Zr3OAQ.`m880Xk5H"=<FfMF1KKI;5U(@D0*`?f"3mn4"4lmQ^c2qR@
%jYAls,%8W:6)uHCiL,6+$kl_1k%m-J6k^B_>KU'r_TZufR3Io;.O<^lX]X1JQA3okbZ\&pdT5g&FkHppXpT;ScCYbq&MoE(N!Ch(
%#<N)+\o*D5,F/P&&p".PLld7JMlIEM=j^blA<^+DO'?/`YRSc\Mc2Ru'!^)T0ZuFg6g]W^4=>?1(Op'iHue?0a4nhDnJW4(a=JG"
%DGKk#O&+&t&P>Lqi%Im.rquBCmsRLtHu_nIIF#/'.I"kkku),!re=BPB(W`e/S83s<N9*kmfN@J)4Aqa0S*#4_IQQA8]AtaOXEk7
%\!..E;pFIDR=e++E^VK*C=KX5An#L3pD0hMUif+;00jNHAZuZqEN-md=DA`-7RO%Im4YQbA4D>G<hF$$=9N+BRs8+a2(9IRd_8[-
%@(W&_rkk.MBHM7kB9]H*RR1g2\]abtA/*[6PdIl.2T%c)CP:#c1]mMT+B.D;cWDKq4a>\Xro,OU)^io%gPtSb/DZ1R1DU:^ZGgA$
%flnlD(_ut2<#*m*BN"$HZLIl^D?9_G1RT]bTOH0L*[t)fl9CB@/ImMN>l,%%4(ArJCG,I-0FsSnfd`)+W5ZL!]N!%\hULmr)?3Jp
%Z^#f_^8/._.r%O(6R,o<Kku$85eh0jqSNoIA.iM+V$[Ecjt=P'9]>nL;f\4b?#S?o+/^Y]_(GrS"8[4D@F[g"88sR;RIE_'@j?hD
%ZF$S/LNbWh?>)X41VFJJmnB%H=Xi3XqZA,1oFh1R^U@ZKW'FG5^FdEko-%f-6Sj3D/jIuK5)J9#.PO(.,a-UUP2"SRlMl^(7)F(_
%qF[)fmlqf=Dsma3Eb@5R1>Y7J38GP@TCdmd6TP']JW@(p%&b*V4+<cKT-3UDgD^=rVo\doC7026?eDRN]__*^[i<rmO2(WJ4?C3+
%m]DIJ(dFO;$aO]qEVuI/lUA4qZbK(JTE"O1PpMQqN_Z1P9J.G??2W!_"ge(2qr_>I8`b++2L^ZE0>sY:qQEkUIpN\!hMlgRgVs#8
%#C/'@)As@Uh>c@os0!AqH[f;U/>2@ELQ[;9%9dKdm/7lj^].=L]luTWee[CE1,Kg!eGkAFZ[2V7GlQ7[q7eeOO15,fDkQ"f$S;*.
%ngOOaoR3/RVH;rfkiLmQ1\gtHcK<60$['*6q/9]Udfa;#%B]'Ej6t$%BD]`'N/TFdDo(CSRT?DXF$G`)F._7LB)MIC_H9uRl3a]#
%9[^o(dD$&n/fA=H5O/Q]@,;i][SC-Km;/DE%mDpar1e`\a+>n?>l?mJ"MT?rc[mLVIuAL:ND>4tjDt2,)UnW5NOc]9j!GSj3E;NA
%`!t8mh9fmL](f;>s7C-7\T>>@om1_-Y^:+`L3tk".qq'+_`$R_SK:NXm32p]IrmO?nn<,-3gimHhmE%+c)ig$cUPr>VHsdo:I[i9
%s2A\BWZM%/Sj]3`3'B8a4ZVsUF]lL^qZat:mF1%fB^4]qiT[$T<c+%`)cu@aE-!gs'f3'Q4T="l%EF5/-gbrlh&SFn.q`<L%sN=8
%.kJ&IY^7(1BPqBrme#SUo@S2A/=gh;3;%?bQJVomPO5+Icd.9M4!^`_a_5E08U&[:j/&6E_r2d3h=8eIl0_B)1n5(jVG?XGe)?CQ
%GiMT"G%["rqdu-sOk$K$nE=E]@!K%=79glR9k@<"l)6HPa3.bQfJ_o6?*Ng\O&FnLEB1RCWZ-5$=l"gR$\pX9#.HA!U/">tLAQH/
%O&prre#4dB9HF'dRR/QKC2n=XA@T@[]5s^l"c:qcmiJP@G@-C@:NqkpJY>R1CUccY\Aph;*?=>dbM*!oEccDN38tWl*)$.JKGOUZ
%A<L)`kDAVY`*e3A>!Yg0m+X!!ZN\G@fth:Pa@N2:]E+a(Z+I>,RQ;TpFVH^5k]$Q4B8VH0d#HWrC!fS"qAm,=F"9n]]=Y5@hGU[O
%Yk76,)q(1U=%Bl`LF;`ii*^')$`eNr"hJ>i?^b(=*Net/ZMO;Q/8\7,LV@j:j-VXQO'<q:\nWfUR!j*<KMkMR7XpA?cQTs+]5u%P
%ZL!VNPLOrK7,X&r3i8c=3F^Gqr<N!V%1:P4iVl<5^?]\IS`V$l0fhA6N^?jHhMn^q4nfjtgSt93A'PS2Q%%=)Q"Es*NnrNrUa;LR
%dQ2H<P-5(O2Nd1+Gdrc^("\^G/\YKgl]oS)(T?^Sc\go3rljS/1O_IC0XY>^c!d9!q+#Wh;d=iF/Qe9a*N@Ojfb[\m=!PCR-5B_m
%[QnUUQ]W0[mTWQ3q6jHrARDgPn05"J3pP_Q6L"*[,r@8'0.D:_^uBAJ,US3t-o+H#/[JD<*r?1NBM\$^b9]sTR+u$eeT\p*l0e!F
%lTHRSgtd*OZ)^"Zc.Egl:.bV_c,_0Qk7g#W\T>8UK)+(<L[B+PA8I<e7gFF#p$AF69u)lQQP7EGk2sC%,p;D!#O<o;>6e)A#!#K+
%P8^jCF0[`XR3".G@]OVH_sP.0]lj)S#?tCq=U7)*C1@"PiR-!3Z1;10O3+"8O3$+]-PAnL3[`?%4\0h9@aOG-NiJ+8G'f]FMtOp\
%>rQ%'\)l,Vm#86*S%.<kGQ6[)38?W_Wbd]KP$M@>G^*cBSL%r!AF"Bo8+s3g"0%q'1?/"l$,rW8?+9N(WLZ0jV7g/T(,&_ZjP]P*
%(.ut!<W<s(PerP8hB8pES%1Pero[8\B]kH?H+iqGqiThZY@F=ZZcT&h(RYi0d;V3/^YFln\ZpVH@_<15a&6c7Nd%r+]2k)ceo]^P
%S'IhO,nIG-G"3>t3'7toFKVm-qdZ/Xh4rh5[-6^)Z>m*Eh0srp^fc&XW1WM/,n"d7iM4ZS_%F>s@>@)!0"FF-^lO,CrsDE9c=/oH
%Sn"XoipGUU)JBMhmGBag=R;DU4sNkjgk($G_s-^2iU4^XB:(%q['>+.VCkf@PF^MX*\r:>lEK+'i<@/.$_G<;cVYq$M;q8cN+0j,
%JE.sZk$hf&e\F/>/8>%(c:Jj>]r[_`nWJT]/(h-rB?[sM("tW.3'=AQ]W`Ds:!P85UlI$u>;%0*lbfLXZT9d`*mU<bU=(EXYO`+e
%H0,07O(uc?8uqdUr5-#k?/oU6s.m-7H]Ic_6AJ'8#Q&/&5*S,m?2%han*7#b@Q00-F;7s9;%L$UG5?2sJ$_@$iEYoZ8n"tjT'Po,
%3eW)Ap$A;<D)VX3TkCUac;DF<+%()B7qYC$V+)hgKBuP6Jil*Y[>Isi[f8Q&HZ?uXS(C[,BZuh+J43Pem4Pl_X.Z")<Cj9nDaQes
%=.N9S-G6[#7<i_fYG*D/4?2+UbMmJtj0Q=h95L2+/1T$Cn/MsleoA_HQnc,'f'31R=iqqBCb4T@lnpMa*U`Cn%?<6%S\&@`f[F0V
%NAnQ$hUK0bqUE@_/SI)@52TIjpYt;tRo=fIP?):BjO\,7YKNW86<IabN!5?a-qRBXA+.`"*O&B2J?Q]O>"[,Onp3$mj!nVr]"Qnp
%cdD1(dF$ODX5rR8O3oae;XGIlNojMRMgo8[^9di\p\9Dre>\diC\l3QcRGZ+:W4Jf*u&V3#nMgghC-!_G5=iiPQd]=i:'./:N;ck
%ahdi'$i*@!]W.u/;9?=Mf,dJ0Y@)M1qt50rGFV@h<Yne;lEX3+g#NM`Xqm()>l/X?_7Q-$pP85+4NXe?R%Bp5>2K-rDgVN4PGLor
%DHpQ$)>9)oQoC'Bc/j;YDjDJ/.j!LcI(oSrp?6Un>$B.AeQ:4o\==hbrSRM,GEOJ_pV6E>bs&XYGW^?N1qQE2bhaFH3c_'gSBPn9
%IPmL@:lJEkG%Me5oR":;gLG@82Et#l<Ia8u^$=YK8cSN<o>Sc74*,`RK4E>_P977UR`hU%rSku3q;6D"j4^p?<q9e7PM2;%frEoC
%qXf&ND5$]IEilq.]e?]&IP-&:]m&8d]A:5ColTH<o&^]f_t%"-rp@[=J*Y:iC4:AMp\he-q&^sl5H9cY,a%QIqA\\WfBe,[fA?lX
%C@q&5fBoaHo[gKXrKYWm9CpX*moSXPV_@L3,Miqi:T9fFpD^S#(,sB;2\piVhsN^r]:**=4obH*pY3"^fAA,2N)":SI/E!qO8Bk8
%_k6^>kP!odi.k:&-?k6qdE\$GpNF87fpps5qWReJdI#8XF+`"Y^VIY0g&"QojA_,Ls7XY&h#>=d^"Y?hmbb/?50rRpe_T8fI-tZX
%-,'9K?Kt+"oUd,<--90=8(G46ft=f#E-FjDS3EFQ0n![k^K\D,'-9=GY0JZ$4Lk<,nP3$Bk)TG`-Zf)l[;bX.p4KiDTC-:VQbP61
%L\k/0V2+3aATZ*Co?P#&LSu9>s1E'CXb+:C*$jd8bKp$/LC^O>?+U")#h9din<Ktl&ZR0\s)"Ujs1&#Hl%/g!_7R[a;L[TMich)^
%IE5G[KAS&c+$NrBPP$#7cWEO&Affabr;HFmmS2SJUA&-2FOa3eq'Wl_?U>FS)`+ZpC/clf?CL>4@r_65a,^T!dJU^5\(:TXG(8iG
%dpJ$NiUn_mB)TuT#ESc>*mUndfJo:GH"H$hgfg"2"m2g<+"l#4Ri`I(It)S*V'O2&C$XBCJQfbA4*p6SmDD5>CNXW\77qZW2fCpn
%I/fc0&h$[9Mr2t;Ds*&Q:R5URNdeVimQGpkLjQ*RGE*+)i2o)Mk7=#bD/%"kCXG4@8`t[><HJ36bit+`rbach4=TaH^Qt'(+nX-_
%+3`SK48E`2mE*K7\27F'WC63$s8C=k?u)u\^Nqt_D,Hk<DFR8XXrZA(pgIKY>[1&Gh!0r\Np\0fQS\Aa910t1*/!@`Dbj9^\HgU@
%QS;sBpA-;S=$pa,UfZm4?[GT3?@8;n[^<:3Ue]@9l^LNTRsQ70P'6K8o),YYGo):+PJPJ`q8[9;B3L:fC8`/J(]EHf=%?6AWs:=:
%H*VS]h8+>_gZ:?WY<+,TLVKrMc0bDIo9N)<YL!np@HVmUYj%\WoJ4%(H0'&(li-,)[65GWYAZbLT&#u`o'qR;Fo*uJ[%)TY3k2SF
%nniGdDY<mjrnX-5)bWM*lhY*I\+]/rHhQj\b&D("IeB;4H#PiJr9P_M\9R2pH+%h>gj;g;J(cGkr;:]^e\D8uG:7)"g8F6=ZB[5t
%k?dTuhU:Ll%3Lc_]O"R@J)'>64oMUr:XpkOmL"?2?)t-A=;^s>9;<rsf!YM.h"@kuPjj!5l.aHU5F<$<_##>p>31(r=/Q*Jn2$MY
%eE=;S>$X<o]X,%$6\9^YNe[?+/%6VGR%/Ys>J2i)^Tb'9C(nfs6BS\Te#/8)QQ@]D2u-P;B)C/nP[AbqHZaf38^]tUI0p(aWZUW`
%.V@S@hlU3KIeGg.s8$=[^NSka@Wq@cf7e<l@5*VS*g3Cu1Wa>/hP9_gNJ0kDHUu]*+%]>Ln=T<VO:1t4s/0!?A?YLg%"I\\=9(64
%Uui^l03.+Us)n&&j5D2>4Fi,TGp%NBf/uYg%tp_s<#F)Op!&!M^UVTYd%$HX->isr+[U7u(iUreUKJ/T)R0*4/QBVEg/:84]5$I-
%F@$)OeQALBd=(r8N'%HqPeq+)#]bFlr[TXT<>MR;k(2YAo\dVCqtIsudHV%<VUZRT&`a[_1F"HN=<]QF=85Q<jf;\tNM(%G%Xm!+
%G\;2X1n+I8HqCI!5HUf*WlG9b",-uOYFmOcc*c>#Ph1l`as4u!A0u8T_CrL]g)@7rN>LVKMc29pHSLLMEH;o4\,:$B<nB9=!%P[=
%](TQ/?7lXpb]O>^qn@n?]bqD^[G3=</=Gop`N:%uVUD]uT`U=P-iU?n)DZA_N;b\Gj?Bh8Hf/\t<k^J7HLh=?-!fGSXj#PV(7FdO
%F#sslF8L$^\$hol_tir/21NiP]m[K,1n1@,WLDqLbMPiAjUItIQIAo:+"Vh%=h?P<5C%P=p>Xj$O58SLI7<rKb#;t,UNALE1tE,q
%eBk:E>:n^[L))UAkKS/?$#b9]\D4+PIiL#ajZfq2iDi4gdVW;S:c7p^PGDBP^9^i3T0E*Ok\B7pNTOR9YJ-E/4^$HB]KNcO,Q;h0
%BstQukgg`WDhdAAe?JLXmFU-OL&%)%fiYFn09Qbr;rO:d]IFGf]"ddtoj%1cam8qiUKcWf#gAQp^T>XBIJ4(4Zu+QeX$;r3?]:#H
%:H1'"1mNRYq5$OKm%q\SlO%eqgsQ8RWp7iqdF8*GX5haB4"ig\9>1+96(II-qsDkcX/1YG-)sG<Q@bi_3E_0QT6mims8Cc_Kq7,G
%h>:E'=1?<E]p4a_*e(;mf:*"Yh/mV*XG=F!q^%>U6<e4)[h^%IQ4Frtlu,\WHmCS^arc'[#O]S(Kcdcg/DT',3-3F>="L@bWUc7[
%^UFnXbHP]l+'q.n/tcD>bD7n^7/*gDWg6=^F'O&?l5ms]bK%4sG_G0E]J`S\D17M:/eC[F\!OgYHe@tW5?(joC1#2JCq4fAVYfZ,
%c-NLLN7G:(=7Q#drN/#fQcWtqos:-WM_Yul3K#>[&L7#B_6oo!``KS?oujJ\98i\Fhm9B.?L:_M_4<*#5Ln<(i5tntQa=WTLV;k/
%&9.L)lJ/H'X)F@$2`KP'60Ac]-.U>jop<eYl2"gj8[j<cfuK`KRtVrV0AX8=E;A6IVdEeWe;_/>o08l'-HH/J<Z&LD&=*&Ps"g.T
%'RoNPKB1nOhJRp*jZ*JC0uQMb..!o2?X:'^TUtI8I+WdgqpF0W03?%p21,AfLYld%q;Y@Hr5IIVo&fDj2`!tWm$gWWpB,WVb`1(f
%"NB-T+(3P=rA["&So.ksM5=t$%Z/3Zn`%$qFFEl^S*N3P<6NG?hsPER^ANCsmEP,&eSoFc=o(7M;fa!UHX#;9FWd9a]6(878T.L6
%FNk8):$mPM30/ZQB92+!1NV1Elc!Q1ggR9fJml;$KjM@dEqfQ2^\jJTIe_mFX`9L?L^#9="#Z&##N(!78C9@,c'-V*n+Gi8m(MSs
%s7CB`Re^f7J&+Sf8Hl"&Ii[nJn%QP$lU6&IFSEi>lZ\0WfX>\.5@_t&]9s9fIl>(9iZY2,a;oP4beH-^5E`N`+"uKbA[^)&(:4SZ
%AZf;;<R9NKpM8skf&QGjfmE1S1b#]eZG^\4&Vn@Wrnu',o9bB8q:l`[DU<G'A:saJj8Ju@nATp+%!-\j>R$MeT<:?S/_".@h&WTE
%bkL>DijWIu97L`ZNr\_0SV(RQF62cDVo=X^]/Nr#P`99m?i<RI[J?pc^AIiqgtH-Oj0>!nDuPA.ZU`Khl.jJ6GJDqfq-%]6YJ7]'
%^/83tbYL$=8T+gBaDLbNB'J(K+*ZJIAe0CY;,;+;Rf2nm@haAWJ"=m8l\F6.o^UZt(8Gc%T=/q)fC[LNKB?e3[rd&&Op)bQb!i(t
%:XALt-!R0%5<kTlpKi67]mn\1j361sgc&3>Wa?e%RTPH*gtUUhs#"-Dj)dM"5$hT"(n%";C].[&^KY'JPO-SuS_8?C?L;d2Bk&rr
%9>%kkZgn#.%A*R*\^tW'^W%#Lo'sTBbd6?_HV7Fqk)jr(]^U=-m3D'X)E6PQ%sBipoiF%X^RQt6ALD!$s7Pq/RS8lG9/iG))DmL>
%0:c2MflgneeEs6Gs7FIh<e(#;Q_M'8fNTIGC$/M>-12nSD2f$uH_2A7]Q3ZaPl/AWqV@3fZ!/htX4OL[=^ClIq:[<<Gl.*lfAB@^
%3,CT-dcH\3p%_fNW1&(ZDWdYSf%.!0MH&`cMPiP?5qT,V"#7pc5<hrjP/ioU(?W>mml7q2khoA=c<BJMN7-SFkM5(N>h-LDDMmoS
%Hc5&o19h,IKd##F2lHE=XEh:7enJo<+8q^XnF."D7.\%fagDTsU\UP6:S,cH++AS.Gij'erBe/#s"C*eU\C1Wq76'dQ7%RqH2sDe
%"3cg%&0N9RbPX,t+?h]7`kAanoR,ocLR0B0:HtYEWn*T9cSt`jHd/*pa+N)hK8fefTA.1#Mb-,-rhEF[f'e$Cq7Zb)i:m4Oo45>F
%IV\+]1\cFk?tjM&s#5t3[ZgtGJ.9>AcPQ"umQZ-ri3)iofrNZfV8[QB`mVQ2f>"k&I<U;jK!i4&Ang\l]X`>jp/d!\=3""^m`V(F
%SM.0T=F:"E/&*7SeJ_!im[V#hYV_i>I%u_Z?XLBdlV:(<gc,#,a_1h=he>2:WYO@fer?0)!3OhPYAX5Qp1e@NccY5GdZ'O*\`Urq
%kEhP30;#@!>s0a[cFb*5cfXg@M_HQ]G=6oa^Pb#PkGm(U$Zksdj4O[d]pmj.T[^A\"IVJQWPs74Y[.5g=590mZZtMTr<mF6g6Pf\
%I-2_u!fc.&&!O%s*R&.T\(3TSUt;5T@U]4Wmbl-D>C("+erXJ1pPZmE#CqliJ)VIOoN0TcXtG31^:O6=-DgN`WX>@,QG/Ffb[+`X
%KXX"qLGlKbqRm\0*[p,uB^Qikh7@mPOEXZ/V3T'e0(2s"+#P!Um67+enj`5N@hk'1V>GIc$g[_1:"*&:iTA_>NMjsZmV,_T=._/+
%LY]Mkotr@a:hJk!mJ4HQlJIj/2>d1<QQMf-^>Wh`jU[*rrDtXYcE3\Pai5]qnu0=/[rY77f_cdJERuaiIs/5flkR1CpAfcIKkHm-
%bM@U7*0%Ni\@]#UIdhUYS8rDshL/NHIUDnfIdctf2.q81;a/<ukO5C^G>oVKMjbQ7A%Z9&g%n/Yq=rMoElV7Qqam69l0h-oh_/7s
%4WM]_Vt780U'8)2\oX"I)`=&4hW!u$n%ZW-mB:??3pAl>EFT=PW@P:G1q,R%@uk?ojP%a&=7m5CYBK]KK.c?<HFQJ32kbYDk$Hm?
%7W[_3?E0"VPLG_+jjWdQf!',KOP@(GG457Yp!]c+?aDn/>42.I5AGn@)9o58!$beqEAdRfM<9]i2u6b1%PO<8V^F8nhfa?jj(`bO
%hV"bI3PJMLqg*T(4%d!:I?WRDccJa,L3(?,lN^/\mciQ<HMR==GmNKpXUO+5*oDAF>Q<rO0>I@Y#@DrgSL,k=mfcG?>DH`\52S6l
%emD[oki_`LU".cTa%P;b^.^3)?6?;g4*lY%M`!D1h=-S>le1ME2-"m6H21s`p3CY+D=1\Z]=bT$Z=MgJ3W%ncDD>;&>8Fb2OSs^3
%b_7.2*rK31HT?Ftn(I6q5o`TUk#^9LmVaWbJ+dgJgtenMjGTePO'=,m5,?:h<b^p(/n(n$cILCWh[hYJAd]qPHhjpMqu6BY;ZCj!
%[l7ZV)fgA<^U-6"N+USIS+Al55FAls98hjh)8"GJ[EXdA,*pUhIJ)?BH#j:;2N+(!qV0/7g&c&VXe`)ohTWYs(jn7QJ)1%%(Y0/h
%r:L;I`B.Gh0@@8^?3of$]P'5&]E=ijr,q<sJ,T?02%@0QO-`(Y48dA.dgr2[de=bm,E"?gcDR!]S"j&G+-Aq_L^a"+?h<&"+&^?i
%h)Ksd4YUe\DVh35qrZ2Peas'JY$\lVdslCP/($IMiPX0XrO"N'1W7_l6$9A"g_Y^B/RA7`^#.^.pi;i+9q?iRC\d./7$ZAi:O@k(
%kFR.8=U,[,9#:2>NRQe!eh8*-CJB9@ao/&SGM_1lF5mS//KV9rnsIeuL$]sTf<L*;7ud3F%aFS"_6;n28/Z^#s0D7TEjYK[9YnCi
%_mdsD#bo<3/+S[l/R;_t](C6nYFB2/p$PGUs5`n8;HLPYEb06#rQZaf-+qDB=a9DECZt_8E9&'.1%I!Jm/=-:VfQV]eMg["DULlL
%mdtJd?uE=c=sm;?)ftadmsfU=?gY%uV>W(%?S]P'<d/3F3bi1d?>e1Vgj).I7pbK?d^A2Q@7YP+?+SV"2<N$+[TT+!n1e.[1d-?_
%a8Y5j9!eKaL`6.-kO7T_Kq1l/Y%-8B^:!L3T3Rf@k:+0YZu@Ol-,\SXZl"%o^5R$seMR;U+,0p73$kcSGFi%f%IqH9Q/17pcHAF3
%RefMagN=et,%^:UJ*G_AdE^T),d1RJm*"A]BI,]00V/a>b.;p1/mNR+TDgmP'sC-^]"q\:W35?9bse6d3qM8qe;i-1JcEaDO4!K2
%C3VS(3r(M!ZH)R6N^kJ,K_K`Vmls;=;ocd?cjdnk.J2(`rm(0PEbhS-a7qBbGe-O9H;eaBR5"U:=MB\!s*8QEFgt):*pc[^2L"Wu
%2a`C=j3>B1IJIbQWQ:VZWn8!;-^LW)%R=];1pt6aJVR196i$.G>^%qc4P\cGO:,HV:H*`q_(5D25&M-l8^4\-P2IdsqHtg1B]jX*
%FT3_[&F3';9ah)ZR4)tnm2V^]iU/a<Bm>$rDRBCdBCtp+oXN\iZa9]'!bM<Rl3jtN0?TZCNk9Cuc"'A-7)S+3h'EGpKKVtT@HAJ^
%K.@W!EXPoDL1IlUc=m=rQ"tnh29,X;91]>Cj`l&9.cJ[*F<>:;%=<9&J$AJ'k[8>YVp:W51ro&t36SDUHuPq"Mk]VI_aCu!AS6,I
%6&`Qt.E:&@.FQ"AOuqhchC17gPQsu0ZZCnPqs+!&B:%F5p//@beH_Z.Oh?#3ajVR$(c$Sj5</Lb602NT?f3^ba)/!)S/pZA2Jf^G
%l$C2_BAOJ8cDY=MB_^aW3+DN%BE&r'Q`j65n78p"j)f3fJ%2h3Om10J0<qDBBY)"C-_&DE=OZFUZgp5MW;&pHl(9us<_q>p[0QRV
%YG"<"&HGfCL8U2<f9%dNI1lMB>,8J]a4cT>r='[dD:P'DiV=;Ur&#dm5OUpk$&W9^krJX2fu<DSlTX/?bpNI`[HoZXW^"h\1p4?b
%C(hM3cLjsLZ(kg8MJH][_2*:AB*EJ]bcMubnW+R$i.>9G$C]^/3`mJq%#07lNnP:2S_Y1>2X,$Qj$>]Fkh2OZ)sI[oqq"634l3q1
%4g&U!p[2kbpetE6(uo8aEHUuBM1mfFABra%mLK($V[?YW!rX`a[CU9fCn$EBgsC:`LNedRi_6UC6dO,a8VbjNbJSQ#=q"T]dVm#$
%JmWK*:RM)#rOFD%+-(<pgDp%-_^"9"h="J3W^hG@O.'=mZR@dmpG_al$]e53ekj,)<Ad^"jX9)$.SHFeotUIG%5'f/hOGMNo=CF@
%^["5O2_0;[LJ-lM<*GUVaYt^K`ntWfL47$u>5WX8qnN0u5>M%SloWcu-BC<Y.S5R]iKhZ^DH2nA'4crH)(gt`XSj5jnNH3F:4#r1
%4Z/e.BeME)RG%b3pIo0kKaor.2,,_WRmp4ETc;Mr[f5tB[n\+:55hOuMeY_2a#+eueMpTb6_j@*!hT!uTg_`n9Ui&KV?pFhe@ha$
%WX()R&i56n/JXW[>t`>LUnc$>bZ#32PU?p&C/SK=md[W,!?K*lg,#ZcAgg";?C'YAToR0HIL5D#R'B34/!:ejk>ZYsX&a=!=.$Pk
%#2bWCZ8.Kk+p0j<Q5^-8To-aHg03!?1Dr&5]IiFtA5.1N>4g6*c.`rDd3(I*Z7[t31!ahug/?r^XmfA$/kp5H,%gqQ=YD5(+srJ8
%!/e.$-D?PUl0kK!bs[f-]Z_l<-FKO>d]?G,_s=Yr5&t&\!ma4ml8c1%B5+PEZ:mh'/8(c#;Heq0K2ESf?B'_L-_Zto:*o2$h4GaJ
%)XQ5/NG8f.,L:]C*Y"014"p+*DHgouNC\C'h.U"mEmj!D.9ggC@-<_3hZ;9P-to,0AMFdV-lBTiQqg!.-G,RdUM\,<A;.A22M7-T
%pb'O'dXX/Sa[A``X[`h[8JboIBaSRJAVu6\7H'-087PK&>Sb"8CXS&Q6i]S5Bog5Q*eZO/HHjs!RoAe5\]Hh5)N5PI)g-"'nH_pk
%\sLp'$"-pK:K\h@*X!h.i2o$gA<(Y&1Cd)6TiG5N\O8(5a/:5T.\4kjLAo=]XmX_B=ppQRe@lAHD`N4S[)<X=knFYW&=Lh"BnId5
%",*)RC5RVX<G4jc%acX"e.f8-dr^E_HF'uP\PYt%BL;t9WC*cqAf4p(NlWY?ea(VAk2!Tl5uMXn1;"CEbV]PN-5(@@@i+,Ub"P2l
%VD5o'`Maqa%4K,8h+I,&mZH`a1O1Y")(3]C4E%hZB[X+K3]&W1M38J904GQE+U&XWDReFV6Sf+A)eQ<f:b3d5!d,_NlB,Y[VGJ\Y
%&BJfp0bp$.$ToR=rh5t6p<8n1>/>YrISL9>gD$Gp(JrQ>4O;2"&gaM8S1jFBq8$e$B+Ar\5@/OBBNgOKa9>E$'Vt$EBSjbITq`kZ
%bVAI:5m-o($mUHW`1Q$t@0eM#1o.r>C'mkh#.0&0BCJZ0-=t.=Y6F>]bcZXX`2#5WbX8pu4m,:3;im;c5Y5Rb^o0#)1sjurVNMpi
%7Y3Qn-/DkVFY5gViW8T)WWa90.J.gbR3kh:0jPJ>:$Vko$0<S@?A5B3]%ofpL;T]IaM]/I-qQs#J>b(Q`G`E@/41>K%2qaSTqTk.
%3f&A&*]GC$gs)S5[s>.h)cTaGC%\nXSk.").&Y4FKTn'@Mc9eQh[H)d%o>C04\EVSlu>c($`leDF(Ff]_tM+ES:fHJ;=?>1<"9\?
%17DBs,+I^kN3.ii=Ag!AJee0$)+4[@X-3+i@#2fj/_m3<NQ*GB"f3M;`If>7==b=!J0`5S9$>)61OaS19!GuUK:MK$+G&[f-HbC\
%Cp''n9d<K'aJ\*LgY%CADcXa1OBG7.'4c?F\kl5AD*VgP+;4iKOf"ol6fdF;Kkqq#+G4=O1L1QUP3k%q/jR!SO2Cpu;XOr++6sam
%]eN>3P!;qhqIrVI#+X&?DQJ.'4K8n4A8)tHp=LLl-CfCU.Tq@>P-'X3BZ_rY8's7B@A3npC^Go&%#1_V-4(>g_4D.1$!Z6pc[j^3
%&VG;>99p\X#DGd=D3C&P.n4F*jI)7-^-G!D^>M#DW24bD4Y9(5gl`p3AI>)JUA<(hP#MV.YXhlN"OV^-hM/)R!ug7eTM.):jJc,%
%`Y22%<9OiJj2Q%2Lht>"/4#,lm-l.fV`EI4_A+d_2q^#:6RAl3Wa*2eS>?W!b#j!_6E#cp/'7ULkU?cj9mA!8U$XCB1mt7?qR3()
%SWrH?C8;KIJ-7_lD#m8V=6LehM?)0^bu3^O`jWBJX;smo6[22XgLQHT?FUTR(&>12_hhnM]k5>kT2H5H]?^&HO]E/ui7*nc@'6Y,
%Uh!uhB[sI4K:e'h8X%V.e?m!s;Aaqs@(dj7X/TCOGBb*d:u@/kBh\&kM%l4sKdIElMKiSM&2!c7CRMN/.-qLujfpR39u1-b<FM&\
%3T_tLM")TH3$Z*i`VD:]WG"4.@Da+RUK.d*19&ItXVpE0.![F?)kIa:`!l!cdu\5VDFp6gcdHQoF=48f@$-Yj$7H^U+Ki#ec;b<f
%#CCk&Zo4%B9iYi7g4Y(u`'*dk5X[1=@n8(OA(:Z)jpacoqNfqq@\1UdG?G-R"b2Y!<k@_EUa%\>N/?ae>-L(a:luNJPp`7+/.hK,
%'6%5XmaK1sKNMi(dNB&DA#N"&:om-p?aH1(cQ`d4h1?@Ugi?&.Gh@;Z-9/&Ib=,0IMWb25\[7O1^8dh,3T:6D.a/C7L<qam4$ssm
%j:`%2W$t="=cQKf8seXN'gj[F[T\CIFuZ4ZMN)aTlnSIJ!s9c+'."ra0U3%T6IVC$$AW)pPLElAm=Tfg7"1F"[`!^#?=(p@3sgT<
%!\d>ae'd<_,cYUXI"4a6m$t1D)M`QA*)Im"J1N1<H,B`i9U"6a<h(`ER^#io8rGb[=;6`[ls2>V8dcMPcQF2#"\E'4_8ZP0)BbtX
%_m:U;V`E)7%H`MSFL!PMT'^4lE0-/_mnL^C0W`OB(fE/55RiGbe<pG?<>[A<k(3f<Q/F)NL^-s0c9OWTC=p=9n`1C[*Vb.Cf&sor
%luH6)\i.3?W%&%7T..b[W+!Yc-po;9P[fO",5RTNPW"sS>$@dcR3ka&)SZ\,\a9fK@-jV_BR%>?lFP)91m"e>_t->aSone;S?oU(
%Op#,R+h\Vt7d'jR?"5/\cS;IXUdZ"p>3,3?%IRR,)_d7aqhfP5=_P]BAltBe5oRh4m;YWK5[$#Zb!G!F$hBeq7;Li+_,?BMNN@s,
%ar3LMgi\856eXN/SF!]+g"h2]Nn$)Cm=H/A.6/q:Gub<IOeh!)N3sT'(9>+jOW<c:O;bYN`0(1^);7UHnl"gdQ)*?(Q8Vm`VL^p*
%XRUon:o$RX8TLD$?FJ%g"C`Ve#N%GFhN7t>k.\3\+Y65oE3X"-fuXYGCWsRSbD1nA352cp:.RnKXR$=dSfPtD(p8W:1-Lm.5:p_$
%143O@VulN/m0lgX[7h<p@J:pt1=<$sO:n2f8R4lbVQdo^VjE/?9ue!c)-AiL15=^FjYG'nR\dZ'+VaGu7WK!q,`&/!ItDg,*P"lc
%VQ=%>Yt6R34*i5*AQ91H(:K[)MHB__DPKWijuabiOL%F)eB=+d;oWeOTb`,[6[Glo;694YStI%m6$R&[4<U;OQ%R`NKq62e%g?Z<
%f"=N^j8p$tbo@)ABT6;U(F1V:CAg;%30o8X+coAiBDLgt!X9pC$t0[P5a>bbJ\FiOC'm<7a%WHK)d6N.b@fH/dBFhnbLok"C@V'T
%=Y?BeR9dY&.BNWNKJ9Glh2hkq#t^H$pa\cU6pZs+pF+aUOasiRQ*UA)iij_>$TVcl.pWW@ZgBM@/0N?9(/PpGE&dr=1YLJofW?a0
%2NugZS?0ABA&f).KU4B[%UljSCUgYgr]R5U=is,tj,T'2)m10!q`8N46O-7j2k$*7Kr@<#61X`4$>W"8"#E>F<B2"%,*<`fSiqA(
%1=jY(72F!n+Qo2.--n'+FW:,ej@R6V_T^.d/)7M;n_\BVSZN-VT7SSu9?gjf`pAnIRV'jh^_'9dZu7Y_Ac^q"BNEbs7@HRL=L+e:
%X%fh3C98mn+Jgqm.0>=lE_7kk96>!R.nBtCJab<3RF-nhE^RXe?$2UG!K^:[gH$j$`1ee:C]P9MFnQ06WCi2(j;,n>`s/o5H;cQ5
%J7us,&1NombKD@)*Ne-IZ,2^XY`c[p?;`_921feb=X7]qrBD3DW=r6pQ8SjPALS3".rq&CB`VHo<0SBhWCuaq2In21OO-*`9%c`q
%0K@=>'eG_/UjW9)RN)]tK#^ZU@\-=Lq7qH[EU4f+!DQ?RFWc$WR!/Wi"\#ST7u=V^Z$1#.n<>/XA'Xd#[:'A,fR1$fY(/Pf"p^OO
%2_;OBEg9!'m:E%h-5%A-<+^[cEDn)Oecm^q<;%`mGZJNe+]iB70M3Q4L\).E9Is[-1Na9q3g/o.$kSA*(a`^RjdF6IU_^4hgp3]S
%UOqR>1q(FU3<_i5#6?Ep^La@D;UH1./A=qZZF-d=r\p8BQ5g>!&/IuS\0*M?"],0JenHT@nHL_'DocNp<V*5Tb\@3o+$PiB]OsZS
%7,B2`NAN/P160PhoST08*4\Nq.qQb[TZ#K7VJ'LG83Q?4_4iL%[qWrm!uU-W9ZY!ZWks%K7Ts*?;seC$9V1DZUo]U^&Kbi-rA,)E
%/L2CSHV$4:d1"<Y">pbi[t.$P`=_\CAA(gFJlT_c4]Eoim3HM!\\OVa,KsRYlj[Du%>2lg]e[<='5^H&\Pc#=92b&D.SjV?gBS3>
%#UIOF]gNALlh[##Yn1jGnI1_>Aom#b8`=2mfI_%C.rpni$'WGf)2>IS0#EdpXBAq`YE[;J\k27IdhIWA&'Ij/0M8fqa*lm`'iiCO
%=NuaXY1+R2O(k+r?5F<W/&+0g_(eDRK,Gn*SYcuuQ*B%G^p,'PO>UZ]72gls4I]LuT\-Q0!%]k[QN8\6ILs]Ob_AhcNL_GsQ%i!c
%&A-fSi_#0#6u8='joBFind[efDQrKRi8_(3EU_!QL(TCsG\SCd<2GgmChE$o&/jVn`Eq&anH$tWEm#Wu6DAH+6GBE.Q-%__^*bb/
%QWqmL1_UW_(m:.>AD(PQXX5HBc3luL=qhhHlu[=0LmEkPh:DBPZciTEcp><WlQfJ=b]>n1\OD04Zh#EFeMrYI^ehlK0_fDrH`j"a
%-%B.L*2BFZ>1]YB!EC#\Uu"PV:0d&Dj_e2-8'f%S5/<XZ$%Fjon#mOl%"k(`UrI"1?k#RM2b3L!/U]ZQ_Dr)d$+Qs%##?2'I#+R0
%'G`__-_e[*_AF=b'0&`%'ua!7R!/TM28Sn2NB5?1b9Fu-92ZR`10?HB"MEdk!f@H06rGm_`8EX3YoBJkYB'A_;5]V^65Ehra.4@.
%bLEn'e:g@)n=4ZsRSstq,Dcn]1^$anB!be$5qT/F;]^+]-_M'&`bo.+UN(ol]=Lj6!GjU6Q:NJs[S.7!!?61AVFF8_$W3+KT`s#!
%V4taRB(o=tC2fA9D9]-?Mjpdo#im7uU9.k2SkMdcKC^=!8AI7)(.qi?_3Rfb5\"?Z-uM@]F7`Z"QtTY@Z"3$&h@P+U0gl:C-5?]Y
%<q37N;jCUI#V**.?j!?)1<)2^ZCVue-n@';TiM\@TIj\kNDie\OF2_GF!2P]%>AOSC>0QGGqM.fh$D-0W`;HH`5^i28.sT'%O`/<
%=Z2H0=uN/e)UcJ.W9nCq%LYRC`cSm0@ZF(IYGG)^ii"b(6nU`.)?I5TeDr/"*W0gMCtt[,n-EdV+iHOb?.t36GlORB1tNm0<Y*pd
%42>!oa#D7b"]hmBg)=,qe_4>k1ECS3""!pZ,dB(-Ou5h"2Hnf4M24KafQ=Kf/r^Lh@tF`bC<:`)@sOZU>X,OURep"VDEGe4<Jpu'
%;]aWh]#`MlBeCsji[reC76lKjc#*&#F+=BRK!<d$?G2)TeLaOV7M53Yd_os;``p.7oqUHXSZGe]aD-8/_UPs(Q?PGI3sTe@7YJcm
%H'ME(6K:i5FLtD[]V_q^=l[ZLc"0WPAK^BBd^!G._&G%(>BHne055LaIPA;_g(K$?fRb@2@L!KHXuO"hd1eACR5jb]-$[Jj*6Z*K
%2uMrG60L%>o(,nJ.YocPD833r*"Xma;Q5s\Z7t9O),qHX6]%U$U@$UWXdl>8?]iplfI=+i$`=*$0idU=SJab(Egd9Wdcc9Rn&e$`
%fV&@,"d)?tGF!.L9$TP&"%L]_9k?Sp1Td>XRHUBR$E_:(8"5F:0\WfI2?4Lq2FolIic9mOcSDo69M+DgX@gZ&Bb(?6,P%"$lY0$E
%I:"36Ng1uSQjF%]dp_k_L:iG=aBN^+2O]TrW,0:B,+kg.TllnqkRY9uU;1##Q!10RK!%K<2QU(+@&7-9BI24dA_XmsW,d6a\&_70
%AhrX7?P'1-[%%C+f2mIZN@M!,g=:mHG/LT>$+Bcj_I-="kSY2R0aL;qQ(EcQqbETu)Hi(s!@f&?/N0`4^c%(oYJ`t;M-(3W.<6:Q
%S0s)Q$^VqfNf%b4G#SfbA!flT/!9,Vf*isfeWB>-'\^pdTTSH;"UtkAd&QA7Voj9#;M9#2Sh!iW`0<:%YD#jtbt[sD_Q.8B=Gtgk
%9[sqo"<2/E1j)bOP?eP6Y6_FJ84c(?aNJ0%"EM4la)o*,S2uej^39YP@M!E?`/j!M-HgNF.kG/1]#@;G6^PgsBjsZ)EO4^-,h92,
%3A=@s.O-ma^%r*bc[4;bCn]LbJmVe,LoS^aC:@6!)HJ]H8jZGk[C4472$MZJd;Y.9:%V?M7NL[ZV$feK)eTJJA#`AgR*s]EF-2\s
%MVu&KV6j`9Q_]^7hJS-:,O8Il:e!NqTMY$-esJ"XZ@t3N%l=H)^W_ZLR+X`9jHhba^/,d1QR_-g?TKecm?cft*k"@Ea&I&P*)hP@
%];m>n'LC2GQXq3f(8LUt'r3rjKo0NCLcNe']\U^f`Mq"U(%3R_F@BeI9<\ncHJB+r"C&3%M6LnsBn(OABS#6HQ<4j$Lm7C\`"I0e
%RK>U2[^82rgDeksNOGQ0-0L7X9/Wq>MZQHdj*A0Lcb3![\*p@h,C?pogE?39&o2s;<NB?&juBIhbHMr8h]m3/NE&s03"(qq=WoAp
%6k7a*C`rr+OWGJab%*:1Eu],g#':EMWHH;e&I"/'e4XD?6VB1+=X!&((%7q&"C$a@\aUF;$H9ghCj6+u8?k_(@_6A<`:JlFWE,?9
%Z-h3+#i#,.p?^NhPTmeU6"U;<&TXPO@`mM3+dpTfM-61QT>l06Y!ghNXeapX<ICMaj]%'T9*1Q\)Pe?tBYuH,3W's+@PoED$^_nO
%#P)\nQBJjpA]k9kf&XQ%9dXj4SGc,Za%g?$CA&(#j#`euR#H[g5ro:W)'7F6ME/pF$0Uc2Jqb(5\l0<=H7tqoQNK+K$DCW6/P*)p
%D\COIUjsq#<"q0Ho6mq3iR"*B)Q._$+pq0%E0"&PAu,MDaO,O)WEfhS5oUGePW]IU&Ag?5L%7!/W92R9%$d!oL+o$30;V4l2ECSs
%Bk\$(M?L&I1-(.2gB&h"Ke?J9NSC7t*"@ePjKb*9*[@NN9h,![2&.2rF'PY@VV&j57>!!g.#`Kf92@k$kUsMsf_u0;I'7[[-(3a"
%;Q:Yg@B>nlC@)b\TQ1t,*kIK=MrW:r>6A%NA]U'*1eUm;aJMK>#gpQ>6G2IRBUPlV$'(MH!-Dn*l%`oO'O1<6j`e(OI#I;iS2n,?
%,-s3u^aHVSK5&Fo$O-&kf^3Ytac$]RP`sd8]>3tO\ktn)bP@<g].AA66G$E`@:6jTkTE2j5,_Mln>2u.N@G:d:\"AWgXg(okZL91
%9[`a`*,Lcs\OI0p.OE1I_$D<RCP['B#sfLC]Q,EDq[8?1:QG0Kc'56Z+u[l5-E/Ue[2/uc*`#EpW`"P^ecff[LN-oB<6p5)F!OCM
%Qnc));%>r1c6bVn&uitt82Wu48=IH/'o5kGF@@d%&:]RF2K)HJJt-.D7+;:6Wsu"G?QeO!BX8V)>4L1+M_0[YW0,7N,<sME3H=7*
%7M@fZ1l*T&UObaIZsn?bZeW,JI#<mcRPg*"#TZ;])^&@E6?,==1E<N57/4jO`E#3Yo.i<LMkGWs<$?G*pHigs&BFJUI^@'OZ,"9&
%Boo!C=SN/gZ<Q>sAhF?$a<B0.i\RCA??hq4^a(k#H8otk>F(7*Jh4YjTE3TKJP1D,W[4Oh9S2nI].uQQ!VZkT'4?o98p:%%2@fiD
%<+T?.*a+(g&WCpjCo4j()U$;iG/VR$Les1oh=)in:QCW!ZdRB.AMP8NXhUi_".La936VN><KNBq\;$!DiI=p8KF]U2o2d*#aDYjQ
%?63N(<N"JCBa%Y_]$NC6"HZQp,W(0*)k[YC[j\P%[$Jrc9`^#rZLQ)Mn^Yg[n`C<JKE/cUXKnN-6n=ZAnnX`7m:+^J+Wn=;q^u,q
%d.MgS!"F[Iak_s]%L_V(`LL)/$7.h[-L/eY>Y,M:-c+tC][\:[%V]r*E95`Z5nkKc.MZpAa/3j%#INOl4kCG[_,Y8qd?uMljChHM
%f&[1cBa=`03Rsg#)fcDKD!W]Oom19RD0?@f"[*eWkc4H\q<YtMHtig`ajK+!J51V#\eb'#LtTciFao'0AVoJk;sDO@n<%_YP7>+S
%&YrtL:`FN,jF$]^l%-dO%%e\_\KkKI;V_FA!N2"MU<j7!M_ak7V'0AO,VqC-O;-I2Fe^esB-tdTBFXKkd2HJ58l(VeK.8$=Z-bj_
%%0c!0e7qMs(HO_c6#29pTIT0Yn/A%r%2trdUJsX<d&BR92-<gGoghmk=q97bR7`f\\R-JXLk`8J!bt_'POfeWV?p!dYR-Z)G-h\+
%@9[.uO7D%6%SO'8Fp@4jY4/u=;\p3mXn:6$BF)8)2N;5#)@%n,d8irhjNtN_)FCq/XANcABl/e4Z4eb^PRZF,U<jHt$+[`5/&;uh
%&?iGCR5^`I+(15se&(OZ_1$;OgFS2O%RT2sbQmP_0]%3^76)UN2jMdZZ>u:&\_Un^-h`XX0:0L0P-2$YcPjqO<u%>WPW,3bY-tSa
%Dg(_T6^:o/`mk:CDE\0FW^N=MPD?BT)BsGR-Y.>8`*Q_WGFrZ*&pq#h,r[A@J2hS9feI+uT>=$/;EGoK8VX[L4['Gj/-7\_c^`%Q
%K6jMZCk,=nQaKdNmu]Q$28l1:b=4a:&R^brBsfEYa#iq>N`N4eb:IKZVF$h_@L#+k$*8%KmOp'4Q=Aj0P&Y]Vfn(R3;2S\s=3[eG
%V3_@EXs=,u]qht-FIh#V,YHRO<^JX_hD(\rZ:Lf6[/r:+C,;uZ$;ub\:oB[?>+Ja*<_NZG`Did79]UcW>nj2T8F@nkU8=6u:M?J-
%$*_66P[Yi1+EuKU?86FQ5j!+IS7WOn^!\0>-5Q;h'r`N;VCYo.M:;a77\Nq:M_$?[QjQ`KWDKL[9!+UmNpGRl]W5^>@]qgh^,sTu
%0(3,9?]R\*$jbp(P7PrH<)KeL/OXr'n2E<i(]\on"PE8^Z5RFc*XMS=N&Q#*q!\2P5J]'=[67S19m[4Ido#$N68QRXF>g:2dJ&0C
%1f"-@7&^4QR2jKEm29hd#_j2AIP19X##*uR]VM*MY#*AXQ'+f(np.gn0ZS6*\1/kXC5uBQGG@c\Wa/nDUhH@WDR;S(j2)"E2'F'9
%LNI5*=_6t`4+ebf:#5M$4;pes[a+4bPZ.KqO\]8n]/6:g%IPES%iC?sD/`0jJt=dA0ojq`dHCYT32BWDeh1Gt,KcTE2qf$%2M92[
%[DtsiJ5%lI`>,Cq%?jF_:B\A2iH%"U498EM(-_0iK:_<cFeQ&O*3\139/PLg<ogRPRo@:j<gZ(.ZDE<WN?jj&@NJ^O+[7+$g0*t-
%P(bfk)@E?3UXl(BEkXg[/QW]Fr2NJ+Kf)Md[4I2)Q(.q`&R)]liD@Ln1T;;@Hj/#g<0/@!5\jIlbC`[Zg6kgMjRFj^_,[Q02C7u]
%<QV6KB*@=f+H)PuMou9DV\q*m#S;b-EV@gM)(^Y>UkBb57h/aM29:Jt4bO,q0//*ll-Tj37O)RG/NF!6H3<FO(s$t\3qu^%'WP/q
%2#'2);5iHrKZQn?a&S49<C$?]aFZm0+IA'\,E&@+grXMBOG00)R[f/-H3<FOkfK[]dR[k^fNkV>*A)pA_hRadE9e.bo[j['E;j.<
%K,?1e8Rf\9>1Fm;06#hiq]l;QrtM%OmZ'&MGSoWDE-Eea.^NI'Ve=I@Oj,n=6\-\YK$P+@`)A0fi\10cfFm/6!acGje?[WIeAU#m
%EPmO5<UT1kdR<MOOQPY,8X+6)JRbF3+Ns/(I-XTT),;hK$WZaqBI6duY[>`5"nR>`TNGjSJfVMN,1FSC36PK%,:T-j\kG)q,:hkF
%3[HEa3E[`BHOpPDU-d_L@<./-Q,XkDQ?k@A:It1n)V74_7\r(P_jC^-&f]FV4'-c+Au:`<[e@(Q4;nNc0C;<s'H/BAUPcpSDFmg$
%fAEODJ83M`68ofapfFmb`cp4''u<V?c?^Wn+ZBrmPiIL-PS0M2Y%n20<[=?Z'ZREM5VD/V+(Hh\+C6$Ep*S6b&3"r>UZBK"8D!1T
%cp1AZYVFFA[k5Y*?7uamWlpl;%Q1c';OBj!&p-/WOY@c4)iH3,h?@Z8'kgAs%^N-"H\81K==8"#o&MnI$cAaBI@aVM@[u3(So`)6
%doscJP)\+u4[)Oa`pWFC)2;31!uJB)]-hPJ2)=TFD1QJBm>XDC+t%t(aSnWQra2l]=Q?--b+=<q=b[:$75cEX3m6<hH?WM>NE[RE
%+&PgaeF;piODcQQ0`n@nX07Y*B0p@p(lBhSYa<N]Nq(6RUI$bALJtSEidT4JrDWsCb!e[fXk^u$))ZTc1D`;0)OeDUpZ0I@DEK6j
%Q)fju2(!BY^ni=1C*kLc@P,5?TID9G_d+RF0$>4K`eK=0pI[e26ZL#LC/K=tO="TZeC!h@b%b0$/$TWX2FPek-rt3,##ma);J3Mo
%Z"tb^iIMY=E08gk1d#`O.<M=WLoP#lBV_Dpj)26sQ:6cH=WGB2:I*E#TAfCC&J:'n@RI@X%=s$a</]#Qer@,0E2`TB?+]]c>&Fjg
%e`Y;X`K!2239_T])KTC#cIuHi'KF?>ZlTp\9B9mND,nI'+Js/5^U];D>\od.V?JmOQsfPL?`DV*Q`%h<.I&=:AS8Z`"#[6$+0gf)
%=)u>-GiAOAg`@SUEO4`le=CC;U4Z2BKCO$,Fd;_]\%O0ueKA3YZ\,YOAoN`Vo1Wb5:m7&pVkHeIP;)\F9$Rl@En!XnCneC.C<dY,
%nIB?IOc<IED=."0/Em@?Fgm>h)P/ds=4!VAEL0``aGnbI/Pf*oQ93U;4a/$8eVu_BR9/<X9O91S;O\:XDsCtqp8"ZZ;/=Z:d%ii2
%_?Q=pf#k+G--s:7nIEctoU8-g#n^lleh$'3/[Q(u;;&/CQJ8)A=-;tNe8K'cilW;j<1-TP6(o%]a72*B!!QoudR&=7Rtd"a-.b"h
%[)OE$'c44tmi'^'E](U2p;)jC7,_t6q#'.!81cuYDR=8alce2ZVem)Fi8kS]9uNf(1MU0o2!.gA<;2'LXW)-3lai5FJQNg"hTVtB
%<eVTSS*VPFUMX]f$Rg/0jF3aEHCD7t'+[QlBK@3i;Q(ed+OR$*2KKjt)XQ5/NOB$]_tb*K'mFDFpV][J3ljM&eF6m'do%Bs,2C0M
%cl2@'\DoaG)'stdSsqQV#qFc0VL\Qs@kW/Tab4#5S/(q>BMWkV`"O\)RE>rWDm-Aa@g]bEO$*Z:%B8aV>BLD0MC.%)Lld+T)[5cV
%XZ"d4TmWhABt[P,c=89593'+@SdqlB80&MJ:T'"=+ZW(ZI&DOt8"kcmBXmNQ'%a"NN+P9;TMS])3nQTo@iNqU!?*sdj.HSJ!r3L@
%KFT3U8L-VkF>3`b="9PLjmn?LqStd@ja(C0Ze#CiSR3U2+gQhMA#&f+<NQNTDE["gPo=oiEXt='/ki.R4rd\I3P&O,]8<^5Ob,I/
%;Fh:L,tB]uOOaYj\i0-C88RPlmU](2ml3mi\u*d6`!a\cY2jJENf^+2q1os$n9fe?8(lKfmBrqegT6Mr<>>7K=Y3#OQAQBdW03;J
%Dj*+taJ9Hd0(EhTCuEkAp_ul)k`ll01rN'Ui+\22S[F(/&`Z_uj@3%V=>e<c5mTBRCBN@<b;sEXS<aqh28910(Rj@9).'0cmnjS#
%F(dXt"5!%_ZV6B#2.:1J\b/F%[#edZSq*BDnr/dU\K^UACL!+BcTk$BaQUM/nWh5!h1]N.i^S[^;5)B^EMs/'Lgm=6HjYnQ>Gioc
%.]j%MeI;ml4f4!-<d5@pAbU5t>+p8PGZ8""+n=0o&5Y"M7Wo%i@arpSE[UO3bbK40<sfj:V0'V/ajE.15gaNW.(:qU_NZCFP=iA>
%'O?q[r,*?(rBtT7N_!LH#stF*q%;ZDbj[$AR*sjT+eRpc&][*k\U#!U!#h3VR@uJhW,1)EI$e1BAbPp,^8eZ.3&$XfZ?/Gh52T-q
%d,4GSfsP?HeU5_"[hl=?Q)rQ_X#\4],DKc8`>!+r_P0siX0h%&8VW4CSm4,::frq(PkOHRcIUZ9r(NWCS/[/+1BFCL!]_6/bF+m(
%f0^Lcq&Ftl"`[OhMd1dS]cIUlo]-&mj8>noZ#3R@Uf$&NoNIr)2f,OV]cA8Y0T9oaSd-Ii%+P%]O`mL?,n(2j\V&]Q`9"W`EZU*l
%iDJ2j:G"7Tc>Bq(r8/96rT?PN1fH\)^^eYkkIAtIDr)cG'CiR^1ZVO)YU6`^[uEj*DCrg96n!gFEXS4Y[j)iE%DOmP,14I@W@bK]
%%uL(i%D&%1JgL?$XI)VM`,&sI5qn=%U0]r5RH:u_U=)I8h%W2c,Y^nli$(r3P]1#pal?E*XS!Q(80o'L9]M.`/B)2L#nk;tL2[1*
%]ZlWe`ZF%"P%eBp`iir]qSQkE-!J.BVu-t-gb:udYGaT"gYgCta>K$:,+fO8hfC=DPspZUMI,&(nMFKA)R:^3]9HG>ea>,jh)A:J
%oaKd\1*jMJf&=>P_f`eE/onh:B"1,q,iU+BKuq5DU/(.S\5T!<9sU-C.CYA'lCt7`-))SI)]`?j+9>4hDjk5#osT$7J=\a&D":2o
%2FdFs:dFfMbjn;C&EVjF7BAIn9*4@iZ/X\(IU_S5E=aFrN/=o-[7DeX<c(uF`^S\a6)?OAMr^[AY;h)Dd"YADUc>'ATkIg^-r+/5
%;Oel.899AVKB=#QiDq%"UU9=%g#Q*b>nm#fRj(`NKgd3UE)<)jdWbVVL9r^SdfdL[RdHC+)HNR>lhVlbH45kS-FkF'R5Bi+W-J`q
%BlVepkFQ5JL/<6HA!eI(.P>H)0N]2i<1'gN^nI<j@UNi=o*oR.<RYahM-qf[ad_S)b/h\.l*iLM@k87OLXC%MVGi]NrMJ<2qi/r2
%0/5jN6LA[`<qHG/M^?0QQ%<E&At8B#2-&T^>^feRjP<CQFZG%p8\uj6lrKG(&TM'DbGXO_d=Bu+d\9_UY@l$h+%QU[f$6W>^sT7/
%fD[,9A/OK^N#[,&@,.`BpQQ=r!0\14Ukss4Xg=#!?ptm6jYeYa;IR"W@DTiY>D$0.^ePA_h3d1W0Ks95?^aq,5RGH'8_OeLn_UcI
%gU/M5q+aU.XXA[6/_?!nCb#o9)i;_s=kRnUCd@#=GXa$qN^(QE*Z=!^a<S/m_q914/0.E;*57jE7nmgd6&Z+`7"VdG_@@5fc-LX8
%42[g6&Q71T]7Z&DZqY:P2ssG)>?;ih"5TP/X6jt_&QZu9gK>C!gK3Ak8N\;((YP%Uh-i&KEgMRnMUL/8GAe58!9q&sl<>.i.;m-B
%="?`<1Y/C9_O_e+p?7WkH*4BL?cYA#F[ZlXaX+`GjVX,eV`LU,/`o`3-<U_MBYtY>7MGq=ai1$hQ&8o+ArQ8?Qm(^!ibjCuHB[pA
%fN?QNNc%E@[I4]eWA\MDos,e+PsNs'od3E#1VgS4ARD`C'G[Jq=0QV@V\n&(k?KNtqH5<YagG2,)C;>&3Te%G1`"1Z^oj"=7AgO)
%DP]8`5I>1N9jEpdW%TBQ$B*sX@,F^Jddo9?H'd[W0q[J<NM:90*3@CU-)ZVWA;mVY>6Y>K0[hd:Zu0Z`_k\f,=NfWUU>Cn5M?2.J
%HdjuPfrr37(u#_jNQG`nXCZ;iXGr%pE*n8d64%TWn(C)3EFEmgBb"o]Ro%TRO[(WdO\e/TgSh%S:<&Yba4=p`d>#J/=W%e&)%+e$
%e1gW8)OVLEK05.#g0q7c;'ipS#S\#N.hAk&B!>R4R;oqg=;mKsA0re<i)"8Scl75a5/JMK"PECOU?M57f<&"AR0?U?Ru]g3@?FXn
%m+\L1H@Ejon$FobK;;Kjr/is3A)'0&*p2sBA8gV?],FI!BFHPTj,!jS8T8W$a3$9]_S2qI.^tLDeCo!b?]^Rpp,HHQV_DD!J3tgh
%7E*Lgj,pH@9g^CXDT,N,ZsSS$AF+1r*Y0_u#pod+P"L6bEGA)Z`8s<q/[LfPYLr_P6W$UC&fEZd$Aub7@,K0n0lYTRqjcn";AqE\
%GVOtF-ZhkoU*_ABGB+hjFWj_ePpT0P^7_*>!kA<qMEMlHW$]-lar&_DAga]8@4q(*%T?-d$ACnm$*`aQ5VT-fC73Y?0V*lkIa7Hd
%!tr_oUV;_=>[XDQo/UlU<Ymo_3#Sb7a7k;)F:0tmqH&f$>+d?Hl4R]l:sMiqJXjT!blJ<6%!/!&AXr,o;j5Xr0TS12X4bL:KuP=!
%"PEEcT]]<?[nCFnRRC+P5M::5$Ar@,@,K*ld5*SuFL9l$=5lu!)LE/7O!#:X0D95^R2@!`0],>Oqns):b>"8M@21=6SdOJ4\i<6B
%ZU)O#]k+%;>Wu4K/IrhtQFE@t=+PA>K4V48fS8ck^?\a`6lI=`fEfHl&DcGb]=;ak"O8Zh8i&!KLseJ'0'm+#b]<,8f5Qq6'ubl#
%J$b*m_8Mk1?\P"[RDu)$M:JQ[mcSo?%7`D[To5dkG?'h8R&teSL;K+h'B5a>iKel33c?%s8oq_3_@"C&Is7hKL_E6`meI,t7l[\+
%3$TDc&-AeX]<<hifQZF6`S;1qh*.X'fpgrrK8Nh`V;+6a*Q5Po$<)=ffSKlBf")V[Eh[);>NBY#@lBG3*-G-QMPQ=b1P^\<?)TeR
%oC7EH3KEpH",r.s,`mp)g9bjJQJ0te_JcKqSOQO>5="[,'i/?D2;":p/''<@o;6DL)X_4YipNqR!EGJH@`BH%m$;`=.^+hSLMFA1
%8XaAGEN3kNMeHK+;M.TZ36P.]ZFM):+EC!1\heLu-+VE5np,eUIC$FsDKEKJaai'u(T_t"Z^]oL68F0/C_P_DPALQ+!Veu%Fp.Uf
%+i_s;G)_)q._!pFjdWQLQclZ9_2?`(Lj\!u@2mcPDWD(g.V`p&[;dIM7MZ%&e>]R`E1Sd2"25-I%E0?W]_*WKJ\mN83=!e!0"^T_
%k'K?daWcZ$<)WT19DQ<sK(#C-Z,FW`.?SWg5>WM?_VQEDOFWd_pMl/(BS>9_6Fn(F#sYu<p[?i-dB]7cS#Q=o(*;I1E8$b3P'nk+
%<oDdhL[^)/7@50/%d!9(DOKuoa#/3R!Q/p:Up,JL_3s)pX"!$ZPc8cL(6Kp[Fupn4$R.-Z*pZcjgs#'s+jq2K`%V[e(Q$tEYPD9Y
%?^TV`NZc1GZ@K9[*;>,*=3>ZX&Jb\i_q97S]*=^5QEn];]0HqLTVu`$F!t,DoZ_+*8R%Ic%IKS$")LEWP!hDr'q@qRP,OD2V)##4
%-HKq'o:*dGM1[FXp)DDB:kN-_5BXgFXHFA:E<1B4HofI\D^01+KVDI!\!L<^L`.O=ktW4kp,mQ]Z?!,OU7pWkCZEJEiQt2Ml1#YL
%#1p1]c=DXr"X?g0Z<=XE:qTKZRK5P5-P3fk6l![PpO(@*;GaF*P,VA4S42jRPM4uT)dW8g"i)F%Me9'O)i0'!YH>oT0;GgWTq%T$
%Rm6UI1>0X2)oJ&=9`'[Y`fr7q)mp:$8^,sb\2<Pn,R&C)i5^0q1$`LFSOKWtK1a<6dj3n:eT)4]H*<aEKdT>.hb`hMnWYo'`o2]_
%$]AS:aUfrGAZ,\_;EdOj,uZ$790&ftfS?XI1Mh4clc-Q4igr\&;]Fkc=$.0]hOBO-LGLQ,2<^boMHT,Ff,K_b)L&-H=gshn'-9C2
%c7VH+7R\m`'#&6ENA3<bG-"/<rgM+CV`%T$P!XBO*qH<7kFZ7/&Ar)>T/Y^+.(N/u'!-r*W]"M,S6>.n8tgeL?q'.+ka(L`4s_sZ
%3_jI(@T'ZnWf\dT:IIVJ_Z<b!ccE7aWb*H2Ml6ae<HWo`QF"mE_R8\Ur'-Md_n!3)Ch0QO\7j0(ODg]c9UeWtP'\D-:]]Y4SLI!b
%P9iapW_Ne9TI"J5X9t-fQ:W-L:t%t6<2$I7MONRuK2n0?U`6.nJ=9[@<nSs1-qP>D>XKi06Wt0FQ%U.`_ip:kShb&GKpX)Ip61_<
%_#cQcC2sZ=U_-GX5Xiu'dD9bBrLrJZ=-T\%e/hFKFC]FJ.*1/?(36u022^i,O9DYHD28QXMR!T2L7CDY;\XTd/gMCqF+-JJFe!2@
%kVugd;=c@]WeYAHUA@!iJ4'J0TZo2j[(Pg\9!sh:eqJ^I#FAerR$I;1.fq@@c7Y?f!_S'->_p_>S:,=TeqDm(0+1F4+tC[Bb9n'g
%5GoYNKRgY@6:EO!n!G;TQJcJ?VFYg;&i9aW%/+AA]ucWr;.c>kc^Qhmb9lciq'7ea5t.FcbiERnUNj[WEdr(_XQ3o)=Y5QCLd6uE
%":EVP$KnXu,/i;>K2*!eXDBlaTL_=)"dRA=:8FYc5]=%"Y_ao--\*Yk<E/D`g8]0@b*S)e<K"]s1o)h)G"k5%hZRi/dD0WVn_h]#
%PF.X;+jW>&>8^lWeZu6o5E<N7oneJ+iaEsYE[f3U$;#1q(9^LJlK=6obVc8meI-+%$,>2cA!T`6SXJok!(I%`/8;Ib&=Fp\W`rLs
%ZpAc9\I*#iccgtZXjGPDSFKWU%#CO(CLP5PMsS#T]Vd.aM%rdO,(\.:"-):X\]W"XhE[bReJ.p6#-I5i90^J)S0E+4rfqCQ3m];3
%7*@.[5bT.I'[D,2$F[]`+CBd185Q^`3b@1;-r$"P*'9EN!\`(\KHn>HKhs1(SUpH2jD[Hrm^Z9h3bUkh+(n?KJn4QL%WFih5e:9U
%\cr@ZJW2C5eJ=?dQ(_2R;Md5lhioQ$%$d,K3"9CX'GLiuTQiLGaeo1t>Z]NpPD,AGqkBc6Lj?hBkboq$bJL$gI=YY]@Z9%qPf,oH
%Xgs$V'X^$C_/BoTi#i)@I^a(YPi][K7K\4VEkPP$**]mc\k$nQ&<=eN#tM^,kTE4fZ3!<,Kl0jefSY,3AEa]3O"5<c>Tmu@[&B_G
%N@G9>qNa<0Crn6N+VSbrcnfp'/4KjV8i@m64+&V:QO$WH-QMEgAo(mo(=OJBKZFbe3\A;ebNRQh[#sgo<2,,;8jlK"2G^\Q8m04F
%Ll>]8;?\fTQ^K1UQSM50[Zj_@DP`F3f0")"14NT10Mtm`A@Z!-"c>aVc)glE$/MPCQUVXFFjd9Y_NN\ncK.E<-frrr8mD[?N,*X/
%8X9Uo2:?jh8\Vp1pOq"]]GtIaR_?te(SkrCR62[K;h>u@eCERO`]>bYo.$/&XkJ;^)?rSq8m^QSV<0I\REtkIk<8,k<&$Fi:p#-Q
%:#uddL,U1K[=k'2Qo7c*@_$J^`<VUC(Z1SC19E=eT`BjLDEL156!O:-`9N]4<S4;o/j1][<c:bD[m;rJ8NB3&(<AMFR2a6G?$Ko_
%)q^9O:lqSAQ#'?J^[;5(l^pN&)Au\9gF'e@EJ+K=<%Y0Gc56+5<d/]j8R?tm5c!Wijcu"q)a\,i$KrU5^f$o\WZZ2eoa-UENc_Ri
%QcjKa3=`#*f03*@TK(.`'d63J`YE<_S\4uoB\L5`@RgQ#V,u^\9Z;WOU\;nCU9T)5;-4=g6!Umf$gZrf8T"6)'uWRO>t3lVAF!O:
%[iSO"'P)%O$R_-7Fo4e*r('><pjS\,;m=3LDKgn#nC@a^3E;.cjX(O;5WEk]:u/i._f!uo4g6U"ijP4'HQ4F+n)>8"WCE)e7^kMG
%2usI=2C=M$q'8e^)E!+)ZCqpH-,WNMYaGV`p"T1a@?)_Y.TT_AffIblUs>Tg8-Do"J1p02WemBU$EC*e_$PZspn8\eM?:8+l'"6U
%'Zpqgibb0hYZ6dB#\d7=b)2Y:2cZtX9]!/-(r(HdRo7X3LoN8(^2]06?snpl't;^&$?9;FheqdaPaP*9IjgJ]VhVPu4R*!MMOY',
%kuNMZ(dIk$8'tT2_pA<1EWM&.&Q%)p5VB8q`c$[fi^MeRSeV`TgO^DrW_%?&MS_QojMSD0*d[CZZr(&oR$X(":%"aaGZD2p8q"/K
%^6ZB"6FWr&KPi=8V;`sSR+!lo<]Y&tTL_<K[6m]Oo;WVleJ]>E(^bRI>i8ZQWrfar1b*CD7-NX=6-d3N<*M\%'ns7.-PRgiWnQ)e
%$TMt'+Y<eW]!/:\(]&>L%n'!nNL,mW4N.hNP=q(GUM`NbSt=><>E,YgKmV6[!ih2e+OCRPYUs1_/aYRJ&@O00/!.LV^_:DJ7Jd[!
%aS@S3[d=WW[J;/SQ`I-jD8B:\(+m*)$mlqH6qL]["@I^J0XY3(:-_g0<`,67L.J"Qf*#(G:#NH!m1.kd[/@),Z=k[`KcH?n.>K@_
%iT$dM`\4@34s&ZJD#C/a7,.+iTo]i@<2cEO!\r;kNY\[WXnjo.C_?.e)q17R"/pnm=GkJ:Qe>=&(=b"C+^<4%i_#mWZ3<+0s+E4A
%][d$iaL7aqQd#7dA;djK>l(B$Xo['gLd7XQm0_P;\PGj_KP[?/[J_ET>Q^uBc@J;@qNjOWr9?5u1os'QE9kq=LH:@Ch)+F"U)FBd
%6A;u^CS9hLYc:_=Yf27Y9kAD`(C>9p0/`p?!9n55lIm&q"YRg)<<6=[WXuCGGEfQZ4:6h%jj?Oc'bgs!TJjfiaLOjCDH-tq(32"@
%d05B%_D:As.7d+LUV;;1>[V'#hc@f6+6B"%Va@iMTT6fR"KLC]qS!pI=+kC850/$9W/tk&@<7LMK*o+<<!?nLKl/^Wfr?,naB"F(
%!EXuTi2i["NLgrl/K2*jY!]W$5>mZOm"Ic+#Y:^KA;`IEO]+(pABX]!<(.e4/LlB#2ff^D`J!F"n_-MbiAUX<LMXep4L=4oiSsOC
%.Ps$R?0#lR*O1<j`:*DQO=d!(9N!QMaAtYO#,G'IRG;FoG,&5I$FM$]fFU>b`"pWRql`l\'^b%\j?e[1i"NYh%aQVEWJE,Q4+8PE
%'u^("P1Sm=nM,^&'s]E1La"F!6lE^Y:`C4VeW>sG\:1D;X?]CUrAB7EM^J&LVe3hsC2#0IL276nC=\)rfG;O^bp3<R6u7cBO[ks/
%L_V^PPDFmu1$qmOgOeZ()D+RW8TO6o-Wegc6!>#.`<sXL^>U9E7?Mn%ZOpCNC%_(r((FWEG6Y&NVGJ5:`I\PUaXUcCWg<E4[ujT?
%EGWpt$aCI<I?sW_>p*0@bU<W?S&"dSL4WFmP"e)"d`JM&>1MUd8l>JA1?huh)]Q'4L_A=LIf6I,f]$JYWc^B6hJ"a%]@Dhk,6OSR
%^Om-#*:U[BSsN.jc0Z_Y0``QYA?E6E*kg_U0No1G)t@\=@FE#!SK!.JR'_q-0O"@3^-^3u[J@<E=STC_WkU-Of%LHa3orf;Lplal
%;MS5R$B1LVLr$*Xqs3G7+:(7!3+b>WiDCRbcf/ad4C$0\;@I$rSQBZ/`gSqbO!=0:Rp3b>9/Q17H;g\a;:H^=`R:sOZ6XQuAd=$_
%rVV\(;WsVsIR=OekLPMMJ;U*GQ1pCfJGO>W3:Z_tG+hMRW`@kgTWfa2pa,W[dL`FrqheNRkZA>0_J!kOZEZH>eSa_#:fG5Ua[.oh
%lgPNpC3,8KYR[<*J*ak\XsL]c-2%N=LGHIFmB'&GP,-dEgaPb!A-r](JrCu^6=3*009.c=A2%ZA3bR>6(Yo/HWu<L$0_c-t;h`Al
%%aK.%P]`qLR#Y\R&D+O1'gl-e+K)1/W%%$P\Y4Xsm5egL@rQiU].oOmY.m_7kJkMUleETmD4MX2TnW*n/9Mt*T@_m((d7-LGGqPb
%mWcg6_F00jcB2=0r3dB:Y%)`t817I:5Vg+nl1^JF6O3D?6+?]reX-;h\dbkL4G0Q33P@>R5+mp$;ZcS%T]aJjobj<krL6F59f%Ie
%l<'5<\92Rq;j2hPGmYYm!%sht`=.U^'Bh8nme7f"GCWAaSjD!,g!*%V=\"7)h]k?/lsN+:(;"D9s6n4#(F">H36X7<N9(O1X^"#T
%YsY]Zq\JV3^)b[fh,m&?n/A_Q`.gZT%0kL'I9<G?/0lBRpDI5/eRTlX7kTNTZlf&0]H-C<1W**l)qDDPneYEsM.3&1R5Na=>FZ+D
%kAQj77DYbt"MCc7QAhV!Nq^ok##uC/s#,lHD9@IhaVdGVS:=KIhDBj&WAV#h"^+S@^!jM]A_1;QCI\o3O*U+,T$^!cD]j)Z;2DGk
%f_dd)2+U@L;!>5\<?05]Lscd^5TTAM1tkM&btkF`bPa]X)FQd8"Bc#VS"iM,a[do0W/X+YJmq+d]F$C%Bp;R>g6A>&hpO=[ogm\0
%.3pR>f-'W&UM(1(&Q3MP4?9"KbhtaKos3dR]Z,2o'5a%D"BH&a%t6[([H:;7*AQ`,5SoQ`/_cKJp@P,T!Bi#CQFa:.L";,L>hFQO
%.;,1;;sq>][J""A/^0R^/T4WYiCc&$kr@GpeF2$=LE7^mH4<a9VBL!2`0aTd?H/3.ogj95:!1caX\?*p2UkJS(V(UNCI_5(blhBD
%i>Go8GQDGf6l:7:;32Mb.M`O+f3)AQa(%>mZLtH:Fm!>6g#cs9].Dk'>([PKC7\p@1kk]qiR=;5S#lT@"Zi,>Rk8:^c>uaih9PJ2
%X[/cN<HK8u;bH)ULnWVU*S1&&4lP!@HqP<PcK2-koRX*t.juX=$jk$<nU?!0())OAPo?,Zm<D(-EsISAhd#=-B"PGXIA:Q%U#><\
%NMGF;eh2mRoZ'E]7\'m9`"_PZ`Z=Y13h!R',<M@3/j@I-L))b:0\"[GJ0&!oV5NgADJ/0B3jN@cSe8#Un;6.-ka@0L;6$J\rJM,\
%<8I(qltA%S8MV@9B3V]4&4`_^H;+^i105?G4JiYHAihL"WK+rS"\15U&l\p]0$\9*:aS]h<ZJEnKl!THa5TKf4!pMC4d'*_:BkG]
%EJbdhgjRS_-;tb*q9\'?rjXqol>12/*Mug$0>G)Al:,uf0B:9lkM`f(2pW<(j,PrkP!&Y&Z,X-;8Y.TSnfrj-K`*HjFKNB).`NH.
%nSk(m_/aC8TeETJnLOc"5rl,jC+T<^pX=<6*HqY4rH@KMmg*O[+P17.kC1!3&'#?0-LpT#nP4:6Jgk#9W(f:F4"u_01$P2ERjJMA
%W-nVg#NdbsR]L_=j,1TFXO^Q9pFDiY/nmW;g-3fe6EML(MRV-+VDtfB*?r]=9Df!Y#fDOpDHE6.de4\0&Z4--[m&.Z%0lcT4('>0
%.F5dj24!1^:DaCPf7"JuOF@'b"5(A5S'\BlXb,kXP_%'LUBMo3mf9&RPOC/bH5=G>ctRL_&@s4r&'BWq#)aB>3A43uN=P#RHalqe
%R\-:JkDe&G[RM&o\XV)\(Z'K'XLO98N:Rm@MPUn$#`Y?3FIW]iF3lfR'86br_W7Eq47%+M.'?u<Xha<$XG]d67Vb<E0MHS/2lY%S
%]_-A0GG_oX+&Na=n(]tC`r,"Rr%/;i;A`]TA#rSYZQR<C6K&9#SYcT)3TOs(K/Y](M!;>^OgdN\,^,4!Jpa='*S`5]ZOcMqI9RTK
%WNd!h7fqsr9!/A)-p'HHGC2Q#a:H3UOei,Z\jc#!,YYgN#K6V3VRq$o`[U'ZEXqYM&Y5:7"rFhtMmptq/<8PblkV=_]IfQ^^*%&^
%FQeF7RR9)bU=+9sP\Q"sR+kVu3k%epki/23htlnC;#m3`,h]Pjq\';uZm]&do:hTNW7XiaK=G'9q,X[08L-<2L!JD"/rsVZ+FNj!
%)#:%O/Ga;8)%'-3P[0p30)IRtk'[O6!^)RtOm1lNQ'^Q@/jn_YC7%F00S_JZ'`ZXQZ9`Y/*9#!<6Y(p9V*c*\qDE<u"qHZ:^SHt=
%LU`l>&]1_?/i(&bD9*1_Q4.gS9[tp`<&ZF*m_-@o#Et(rdb8P',"`O*k%'%E2NH#oP:G87@m5&J\k?X`&[dad%f,&0:V<@SBcj4"
%:@#tuPX.'?SLnHXA'Q\4^9dS,f.Q@gHBYb0R.*r.($(TWnS!\%hBJZ=DmTq2<7(C&G))5d72,O;DmP]DF<A@?@?g>^E.U>Des<VP
%<RV32$bu'RIS$`e!hr`b(r_r5g##n]',5MWM+j$+$/DU9$ps%;luZFb5!8g,U\'0VK%l"oRF(cYM*`0d1Z3S(]cP<5l(K5hfXD45
%%Q#[%">#T`2G*T9^iGpIm:W_:OY1V:lg;<5XOij_6Y2VC"k/4(4J#Ig^V86dN/><_MOn/<M"4?XE5_CDPpXm@bY(s"=jsS`kA#'@
%B8Nh^fgs&8(78aX6ZA+9%jqS[D*fOR\#(^mf>HU3d0EZKc0H5o&*/PbWeB\l@XeUYg<i)j=_\rks,=:1hZF3Kpf6_r5+ngJ&mcMi
%+&GH.eOF1Rc5X:`[JKcZY5\DpF[1^&_^Mk`EHHrRfq(Qp/hD%jf-`A#ImQs,P.su'<QS*&TJ6'BBcnCL&*TiXTK?d.:cB)ha3U^M
%Z*sh?3,OWjdm9>rT,g@0hu:!an<T'UcTm1n;tcIWI>uCNkrsY+h8UM@'^'nT3>?Y+6\eorq'IoF34,&aAuC17V5nL_7)M]6EQUq1
%-mDm?:s&I1lTIpJX;(Us9J4&XdaRS?s*O%2J$s5'FRP`l<(Fd"Vju'Kb!&oJ/=;%c[G[`.`R;5<f$G`gSL8%Y4`J+\Ns]Ij/B9\n
%;*cMYFPfLpos;@\4JVeRXADUW)tZYN]_aDrD@JYVD7\GJdDC;^0%=gN7H"@6Acb_OEXV_o]'c\,4JR8$;+k5AR7[6f7i`3&@r-)D
%\PPLU/QitM:Zr]>[!#dI."=bc!%eO"co"'!I@D.F^JiGEWK]QJ4c!W86U*X3/L04>+]g(u-9Sl#OIM$\j)C^=:),1h(-)ZdYoT/]
%]K@A8[Z5oA+8/cs'%fup"5-kKi8ee(>((YaXEtq4QE[GjdLWga8gI3>6N<^-;tk_D%sb#fb#H)(rEA:?<*sQK%Hq#=^hJ1;+''Xi
%Y+F?8I&dpNgeCtQ&+?(f]?bO<0:)ID%rrPCn`6;$@'Fto14*>7^/WfL[pis6)@mKhi:j+5m[#^&nlqn@Ng>0YP1j]@+XF+=:;Dnb
%W[G1R[`1LGa*"03Y8a=FhKX;2f^!6S5k2bQb<Ka+M+4K.@4#["8k0\aOr97>/iHsqj1:C_4g@19gcL=YiYb*'!fpRgrMM[%r]-^n
%m%.u7iH]_4g(pl1rHeEb+4mbq)PV*d3RG6"Ki8CX].D[^5G[J?-m;*1.tT1VbOckSm&.$HO1A2-q\t+V/H\qW,iNqWL<']:2smu2
%,M)\A++rr94(c!5h5pR2%Lh_#J4:eY0si$:8h[fM=1$sS$$jO+)8j3Dn<u!>92LQ-UK)X"e_3Du4)3X;0AhZs*R,a[F!$0YB+,*:
%q`F6$45h+\Die*SAINe3H((=6)u#4AUGVX]Nn1[g4r7KhpNUoIOhOb=j2%*5_thF#./q?DbC8MLc7kR=,W/[iZP']2U42\!&C*6,
%NIrBo$l[lb:+it(SIBEm1+@.J2nADkm9=p,[lODf[N0SE?;\8ZIrrQ+R);=-^.eA.cT1`HhEtS_5O<Q#.&tDI89X'e_=-QXCY"Sc
%SZD.hWr!2:(L"D6eq/:E%NX=VC9nH>SUHe4Qjtfb,Z#XU5n*nC)4Ti+mO]K#4?4*U3uU:fe=+%RIB*R#leY0t8&>%@DW=0'6,)0/
%:'MNFd>N?a*s;[iGsKS/=,Sr*'4#Yh&"KDkYX)oOgVhk+^n,!B>t5A`i3eD6L2;cXIQ$A:d9;WMe=hN,7;_bW]sEcX"-$Rnr`di3
%^bt9\28;cSlXf+uTi(L#*Aup@^[X.RD/m&rk=)f"/]bC_dDb#h2g]Q5m).grrTq#O:K3LW(Jj6!9*SnE-JHa!4:"#:K-kJU3KYLp
%Xrp?r)i*.tmkjU$E#2d2Y>.\"RsuQhM&Fn`W[d6`]Ko<CH>1a&X&;ka_8Ir1UYSbiaC?&:=NM?K2^/+m/44qj+'')m1,B@)rA:==
%P.+mg4Ng;Z5mte,>VgEh5e@:F2P(!b$E6BiV,@4W7LV<^o=*m6])gqFqKl8B<W2F#NO)iU^.7Z_WH/h)>cAO^=cehP7%XDWSo(F]
%Fc9:`"a5iC8Q^B.El]1LVVjh<6GWQ@@i-dGr#X7ArRDMQgHPKX=?f/]]4q&jU$K0/%;<reFi!L`.b>h%6Mh[5+m(h][kpSF0MNmK
%*$lNu@6\U&TSj@9cpB`=fi1,J8%Z%[HKo>*_b8J;L[T)M5OAbGPTo\fbYb]$(?.a6EeWGi$t`\p.R=La=giJ/2aEV,%/pQ]NjMNJ
%o;kp6-/)*NSfr6Oq$!jJ#P9Q\G4*XH'jpWt0d6O>XMa_i>ck8ugR4A8S@k;[N3WAuEe]dMFpTDfqE+>"KD=.q8/4Vkp1X1sfa("8
%2U.\6k8M&.@D6XdlVUU?`ZI>k/=q!WCUF49f2^Y4#1S@n2Fc,bmg`nLa,W]J=0,*qCR[`P;o>\&KrO;LI*l>d(`P](eJ6'">N0P;
%:(1_GV-gA_/,M:'>8XcHNNEiX:fd":0d-I=/7J;3=Qk8F'R\AiO@rK69,W4@[LOcrpHIU;_Zl<R`2oWcM/Bn+`gOgu9;a8pU*l"i
%Z*E-+^J3+>pi.W,-JN]BAIZMM*["W@)aPf_>;[.<7;,3cbH!kRq[':N08FAI'jb8dP$"BBmi/DFq&WhJ"<101!K(SbYd^<hSn_uU
%9bG[6TN+r_V5P:AIp/ZoRG.r47ZFT0(YJ+\<GKDPiMS&4@Is15]Zf#,mciR2?;OlOgA96(,@^5>qdq9_=?8OUd+e&o#B*+^M015`
%0@64]dqKF]7r'#A%D=]:Jg&ff?oAi51\X^i<n2/JEiS.rX%]dfc>BlDB%>(-DBRXA=Q#_4k!2[e)11p:YJ;TbB$(mb7N^rhLsr#[
%2>%e(*]]K>!M"p+_&[59C]IW[=Y'\>.F*!6b3@[B3"%baL5W(d60,Moi3lhV41AJ:Db)f"DWc&ge%'r6lfHOL5u?Mj)/@i#%'G:,
%#46()FOi:[MZX7"AIV7]:fVDgWI2L<L1V/Z3mTrC=&`\_SW@=W-ts`uq!A>@G#S)m[@]??]kk>`\[K^MkJ!D%e(T7Wb$+\,Npgq<
%?b738_U1eX\*Y=kcmsmdjl&JT`)X'a`q]Yk#Qp@D5pNWgg5(\$8b+,$S`^cb9LNNp"Y_,!(4.A4rulTPHkUK4oL!>05m\fHlY<=Q
%mgLs#Xkh4(6E&MEV]mH6L8+18_/:BS*@!poLe&*DCSO3Tc*QQ&@XB!jart9;pH#h^*'R'^IFm4='Lf0Dd`7ZAkh9,OenT:gOA]@H
%j-Tg`<MjiTgMlRnc7hY;[I7NQTUqI5DWcWf8((1UL`ecH5S;1^fQ]DuSOt65[U8XiRSp7,$7Ggf_d*(oQbr0V1sPth+"ep`CS+o[
%M[.`^dr)ln9TB/B614SBI5j`lb_ht3l3QM'3^PeQ#7oC*f'o5,lq54'LXsItU4lt?k].@12R?b??2sh@jko^fs)WRX&37U?9##G:
%8o*+JeX4OQmin,&:XaP4)C2thfo3N@/o*L/?Zr8$Fi"SOm1mALJO<4[BG%G[I!P]tcYU@d<?;dKpd%[C/;"3pXI7,@_arro#F>\)
%f)#176t)K).S<so:5leh<==:oYio/cQ7CQ17P7\%9@q?sk#%E=%W\2]dr$^G(#CtC$_lB3)eVV`HA<e8>QO8.5A*o"#Pi=PS-m,>
%5W'^OXYAIG^_AoV*Q3U'15X8*R4P23)M2+-_h'(b^,;`#/pbjkkDY/HNb'(52U!eQiLVsc.LeOH]9oKpC[0t`O,Y0ca1eDCVeibh
%HHBr),Ur*3^qsia[8)q=Q^DDX8c>1P'=hARq7ZK5H75C%-D$V]ZugACN743[B@uIRDp:d`WGVAY>QnhH?qW)YZ=?plqcgBh@D#rs
%D2SlF5Ia]7eu/>(iNt,eIGm6:eh-H%Yj@ETN![?&ZkrVN<Sj>Gb91Sk?afpkf%XqH[V=h%g6XBiV5C[Q>:HB%[MWEu5;XF1h87:A
%bX4ai,%EZl@(:@F0t2$`4P"@frOT@Mk.:5Q>IPXplPAb647qZEK[VO1QM\7):6KDiZM-ko")cdYAOkk<^2,n"O[drNfuD5-Ui+jP
%j@JIAX[T`j?YN`ehjTVLcE[%V2ZFr0Cd$pHXbX<#h3&_Xp3gcfLIZU1f$QHq#4hi:G&[<d_nl>hE'un*NemKCl<UX_'bB&2l&ZSk
%D@:"9rG3EB'1/r:o_qc'rB&"/dVd0DDCW+u0%:<]jS6t$X&74u4#]eb(@9t&!::Tmm>si4PG@JOSedg[p56oG?LdO;/*N+$j`@VM
%bj?,UO1g^74iQ4e5a_'RMoWOh)cnM7s4!S8gg8)gEU^HNP#!ChfXD1h(g1%YD3[l&C4td@8&cFYM>U-5A!g#^IIgBJ&q^JPGDaGr
%:@YQ3MI1=4X$!IXgFHCEB,U;)`Apm$O#;7Y[DSr3I%Jg-,NOoYhe^nhAUf@r$-1g+GaIN^X(qX_VSr5/+<0jam1QOIr!cDji%Tg]
%`:G4YaUNu2juD7Od2Lo`ej!Yi)qT:W]l7/JV^Z-!9_#JpZ=E7\Bl?6ohKSM^JVFh7>;-M7s6Cu53R.K8Klk$LN>5dFnZ<H7hSoOr
%[FTd/_`f*c>6(2#oJRX?:!rA2loB(Aq#HI^%PNUIM(4;jUgn!,U'a_a.,kqG"&'Pkg6<ai0e20U:('RK6`)nJ0qSl!ia,"=cBnhJ
%\Ct1%X;^Le)Aml(Rk=^H_^4QiF`&6KLHLh$Zij2EMDVa>iTgf1j2\Xr:+FTPqK-kX*&9<e4g.I`pnaUD@5>=SQd@IY<ggjd\fK2Q
%r2e?e/u-RWmnRrbeuVdc]3l!&0K0s]7JcTaF-E@YVu1s_kjX9)?hrp;q=M#2DY_*WQ<X5,m$>(-nc;5"eo2HGbT??nL34_?_8X'N
%5/R]@HM*9=#C%97:Lit;O7tRs]F`51*ul\oE@>f.!b%=TqWrEtN92e,$0_0c(^i,/In_9!"qC1FIm$[fq$jMtAi)LY"JN[O%rE@4
%U@12UH"C=A-bL)NVq06Jgn^\T\$$eIH9P5'rn,gYBkt(AlV15QJ!!5[G%tcMc8iN?47BT-d:uY;Q8WeK)iMfJa*67g.Q#p3,\;U9
%a*kKl.q^)m1h+hB+(q%[.j5Q)m('7/aO<B@:3n`Xade;21\oZ\g.lqnguq_DK(#h50Grquj)C0iK:O5V:"+YebYX,An^Z>Y84PF,
%N[%"Fc@K8Sb%>^BWB30;m7Jttl^@J9K1$Wf1>+*fY264Eaa7@_O0gt%k3BVucY<q_%<JB7KSOd3+lC2R95&,2nc9lYD8U<UC;IE/
%CA$_u;0ei5^8'TWBeRMqhHcG;?-^t5bROLVSK?ds&A$Iq-TV=fUj,6f)O*+0L/);9cRtDQm-28;mBT\G]mE0TCLKqAV^fr_Ia2Y]
%!?05tVMMM?F$EWg`DHKj:2>[.`^R@GQR5-#omRPEjh*cF2X$kk@F2nlE7j]sVIf"*$tA;mLe2hW&E?YbB<qJ>$:/jiI*($&,k3l]
%i$Yu!D8`p:HLhD8g?jYt(f+m.O9Q,I_I;3YJ;X8d%T)TQSMLCig0='.\:T/Q.6<D?KJZ3?T+?.L?s=OR_%'sR\f?#dp5UqSXk8bn
%"#\EB[4NXj>"D&67pQW1o`*W"A<-hdrH6]8g,N8"9a6gt76J^4hN6=^\q5(fK_-OkK\>ZIgWq>AC4,AbaHkc(iJ%sbWV&.0&$tlh
%h@KB;bd(V//,_.Z'7$2-",>g3BV(:e7a]'&E^*ullD8:=er,CX\H#FD@R,ufWoi>N_C'uCG*/"1U'>bB`N3ADDCVRd?DsmS-K-_X
%),lMR/c?=p,&QP!P\>h2'm#294*71bf\q%LqD5?o4bfE6o),dsGjq@3O4+:pXPKpj]\'=4!jq`=R/^Q>3NYN1)]-Ms.iGIE3CnQ[
%3f4nMkX=(57`,`uq,B$1$l+\JG4YJ_j_ro,`[.hUN6Ff3g441_*OKO'XR`6?DUMis#;!6ujCuW6lh3_XG8*H`W>W]<[rFZlKMVK.
%+KQ7DZ=KINH0P/t(,:K^ZNd(p@\&'(Y(hR/DE;$5nl9n@*9"1&2DBlRfBbKQkGK&Gif\XZZ;[d2WgMhKF[ib.M',9]LLE>BS*.sc
%3m9/^&'n*n,WV;Q$/)nu+pL6"EKZ8YG;lFUrR&^2R=(CoAY.];US]%!mQs"E/Sa:f3l7!Riu$_aaRNV[nom9Lnt9iT^KmeA8('b:
%40>Gt5@9=2e:-c_Qulu#lcl"sVPK_0mn4^@P$.YNag:7)9R6t@PBYo_l`$caP9ba;pGURLE9H_IoM@Wn)qtn,^J*F5M0Vh%)d`1o
%h<*^RoNr#qG`_,=I=XD+W+n@GOtIK09+iqKGAp7cAO-TfV?4J6=gp"(3\%hg&]uL$XU_*2B,Gs*<i/,K)]F@V/ue=_UqhcG0";me
%Dut#h=0C;UGm&%GOuWs:a_735hS(t-f$@aSAG%?fr9P+ir&*0u`gH7A11gI#L7os;Sik%"72g#C,PE%42IQql!Bs+lb]?&PA*l4i
%<:m+O!1D.AN'jYr(Cmc1_-K?`I/<ssHDSuhaS#p<NQC3'rZA.Kd,Cos&hcggj/%`MZ8gG42>h+96b#p&X74:m%_XBD=i'GXrVC>0
%%H)ZN:J%p;-Ks<rip]]H(un/JqTJmY,70EV;I,9Y38`MO/XYKH>h9ti_6U-;NhX17Zm6`/<.a5ciKdd0#:BL^"a/jQ^h[1ulo??s
%C7jP&`gN8/#ha[j=4UWcrp4%@ppD@c;B[cBAM0P\nU<!SS(2r>A@H5'Et1F*\S<)Sj[J;$T.@Q3GCn)AJ/8NEf[l/B,6]Asf%ui,
%\(92clbg89(V.)YB=hO!TBcoQ/D=lHVo@rE4B,@:kOGm<%(-:^)o@?fi6r2n'RQk%DGtSE;Y"''(egSX`Bj_gSr.$\U$ptS`N9Fp
%]6Ikrjn!%)qKgM'XXUt!P.u$PX_$2^RP8=;>eVf*YL!D$/9Ko0<6LtMgYsoe(TW(frNhTjbPY/@+cEWcq1c,%K<d=[T#OP"]T3.\
%h3>i9cAjPl!0r)_:)]\dIf.3RjMlJ:?()C3QTXE)G[1u]6dZTfF/n'l3ELkqOrpj02h<s7f,nl<1DmB!LkBD5.5G/Dk6G>8W8>Gl
%pL@^'JTY^%:8gS0AVQpX\Tn=!"'!hWP;<Y7!d&oEIY!J/UlRYRcjkf+W189F')P5"I_HdtSo?aW3:7DkE#N?QZ#JKe=hem7N'nd"
%+"fX,>@NPIOb7o&[(&$CB)K]Di:6YAR*^pXW]:3i:kf/ETL3O'k`B8hV/ClCpIi7J%pG3;83]Z+_@"k!epK2u/>&pqjaRbY^m8i:
%YJu`g"-_s.$;%JklLWed-;0afW_3P-rSZc8V76W;c^@0a.TcD]K1phDL`9mGFNh_@fbfcsH<#D',E9D4P?\^EdUeW$-U)#Gf4&Ea
%e9O8&%JlB@V?Q*G4SA1i7/:GsfZ(Q<WTq:]g2;/0VI<pR4.sdc3p>?gTa"u@4;MN5n)b<$ft8D+oOq+g'?ZK%X6D993&*7"o(XuR
%+=>fb#)0]lctIRT?*%p[R)uLJK8<U,Xbo-ibh-N2/PO.QT#"Tn,+4X>R;ZQB,Vj/DR3'G6laA5,ORC-bZ)gJYp7rTHX,Z+;*Y5-Q
%0'a*KprKSpMDUuh.(.L0$$qCoOVX;\_B('qb[%&-(gG'kA#oEtF&uZpPHDi^ZN<,#CpuLoa-kl_alB-e??)_q%NBaJ:.%>DjbA#O
%>&H6?^a0RtF*F(_pG-lFq*`G:F"RZ@&p)aUEFR7XGV1[o&p#("j36-65$.*^#L&H$bBr%`0BqQ)&_?'Lp<1%"*j2Pn92FStV??A1
%"OEIU!\kR-Y90G,2=FYQ9\1q*QW4F)UXY8&;+@Ws8&Gp4"aW]'_S&eP0P&Z*?q4($3]OQSO3BZ*N0?i9Z%P`&Ya_AudS+[582Zd;
%369962nsc(;HR6C!=A_RD4gr/n`.pf*')Mm$*"%&b'uZd;i&oG2tdOF]aq'q6RdHs#&DZiG&(uhShadt>Pa:be*IAJ.Bmk8:_XS,
%IG@bG7\O?nNZ?Bu,O,MYp%TDI4nan,rLJdUnn]PN!9;CcSd<2n^B-0._A4ok#@qJD8+;2G^trXRo,An^h1iXHV:,rg/@/kYLki\%
%Fu2hMYn7!1FI_"2B[:bD&jnL3-;/UcPWC>Pq5b"$&#8d1[TS-kP4gQQ.@$bpHT)AHFjA72UYsPhB>9)s\*O5L8;2aWqCBTR;&,;/
%Xga$3V8`,gN1gL%f.e:B^7"GcD1=4gZ^Tgo);7U1:B\OX&/XpEh'e5&BHL'c`npOijOeHJcpi4NW(BfVPBC8P:0q'BoFE4IV@iPK
%PkAJa5fj'QpB8pR!PbrrR"/@o,5d%6c7.-Y*_6]T-/.E"!O,49r"Pt@YOW(VBVNjAm@sH\G6Tp#!M;9f)?'LY:bh54I@'GP"X]am
%SI2JeBR9cNL`I6iLBPUnU&os.)O*hi-'[hlk[A4.9Q35?7oL?s(T%Hm*0T@$+LJ="%Q,\Wd:-r5'PO/8bV;W07p'gfUhXs#U8&E\
%@3LbXQX\6InAYfWrBnGANX2:MM\IWpe9ooA8$a]'_gIG@%sn#7,$bDg:kQZ?RYJ#s"-6sEMhFOWQYMBXb;<;[pAmi=!;5C(>(MHJ
%5RO6/%W2d<mgmKUQC'86F']D^`^,CYN!XPEo545oQf/b^JrC9J"[U_U>&BGLhtS.#Ne\4icaHcgJNm=hr<7pTRWu%oWC,$V(>%tf
%Q+DR"(7;=o,')p@[;a`le&WRIa-absPF4B\G)dm]p2Vol/Jd@tfnp-3A6N>M)"BNpa+u*[!92%$k]'?8lR?8`nXMU01Eg8q#7D%D
%2dAimU2,4FAHR<oi"SH!/g=R,+Cg8e_[R;1d^kAL_s7&D@W@?QT**+#A9acE6`1<thl-.&=BCn:%NLLg%"I*#0h0^ac0'Z`7DV=0
%`oYDY]J6g6:Zs$#2hf"XNbo=qpb4R=BVcn;`JNAP#7COlg!+ejA'bFnMt[)j^%;QT-q552bR:b,<dR::3l5R-+L3`_;-KFd*7@CM
%X4&8N_#&8RH;B(G@URU9@^[[[g6M'gN;(9?Z6B__/1QkE",f)&Q''(Q[0-rfO%-*5CH-L!18U^0&WFs[gfVk,@Z]O$&.&M?IQ8no
%%(#qB@g7)>`%&sk$>BO@*10JPqo4TL8.#L[,(=uPju#Zo6e&Jm?u_-P1k.7X_8>X;!FU%d13:`!%"$m,2!D1^W9jY\IKL*Wn<4Q"
%!J7Bk:YnmJ`tYhihlDrh\GOUYC2\/ATJ$\O0!A6nXR.G_fK4jHl4$?bUI`?(*unD,SDLu"qLd[s/hEV):2t=6#/RKYAJ4]6#5)eS
%[`sEnrqXtU9,D<^m:j!$:2'?(LBAs;7.=m=dhpo<8a2d3)tLqspS[u+b5MMH%PqFQ"T!]B.o86G>\\sQRio:-Q2lsTGsJbmPN@'%
%kD.%_mEdXl>m(61%N.n6c7>\d=eP")gOP]\i.4=Dm2Un]<Uo\P3pafm7sejrm0D*[,^V8f0<Kk4Ec1hT`5@WW&=HBLI8g:]@FE7(
%&3^$>4G92f#7TAkEj01d</#QPJ$_BS+=O(s-FTY.2\']Wn[P<iRX^-6oRnJkR.u@LqEHE[8#C0440X,:-I`jZ988]b'E/pe24-<=
%<)BY)a^?e!_F;Wt8]$V*,meQk`@_2!Ep:YkB5n>AZS5j.FE&t+.Hp_7P]aa9#h^<ghe#br7a+fq$QpQf&CNNLJdj-D!g2gg>a9"$
%N.:,i\Z?\NT65*>dg4\g"`"!uS])$)6kB3T6+?KJquanuH`rgH!=C6X&E!`B1hoV@ds/sQW3;A)YLoUGA]MW4<L(o2?Op2QA-]BV
%dINtT#T*bje)1OQWLc5105I]'F#Y677?98`&%gAQ5c\5;gRsKQFZW_6![,oP#2"R,3>Ze24"-h&a&aTN"iQ;-dDfV@q;-lnGld,[
%UCg3s/1(K1girbKHg:P%+9(_YL4TbQFq(rKYHoX*rf:U2\>-5J%EdB&g*o.ZMo+BNNXcOP'8DokgqXN:m-&4T=1b'@1]!/Ro,!rf
%1a/K]r#r/oJC$=0\qY]mZ%9VI'Ia3c'`SZ^)s`.k&^1@f;'-#dDTDaDD\>H@Q/c)HGCL3l8Am?Ags<><i,3-d>$s+:lZCL_Fq9#)
%gkUa/_sGLAC8'[&=!^gbh=iEJ%/r"Ml8]:>7.J@^m+:9:]p8g817$0t0nmQ,R^;ZId+=#`_/s@?_k)+B5UN4L!a\D,nIE4::VO]-
%gajlD:dE`sPD;iNL?I6%2/>2rnNNBGiO?leEh(g4LaX7n/g'-sC?Pe2::5`!64Dq-_>*?FmY6:`^tX<(DDWHTCM@+11E>k$W[RK\
%P^aJ#%RX?$&[A="#k%.;lTrQPe,;Ob6^C,4'_R2thi5I&GRH);5tQs%_0sjc7b(?!H,ogUPks<h7l+tj`71K]gD&#(r2[;D1r0:*
%fFq`L.0"fTalFooa6LEe$1i'1dTE%36:$UR&U=CS;$fIjOaUn_F-mC1cJR6'Y(IW7lZce7JNBna<A]p]%Jt:BY78HuR4!k^qm*/K
%2+$aT/R*^<aL;hDpV?M.[NZsH^SM9GdMWa(]\mCXpEh[;Y=43/@E[E:qpLt;Mno(8M@d\`_#RaX17YI)!];hhHANHW"U@L@j5QV'
%]>5@jo8nsJfAe:UK;P;nKLRahH8Y(`Z/;>p`Ss]Q`ZECI1(a4%iM[kR1a7t^bL8d&NbZ$0?EN*_8]78fmX#.U^3JHTZr5+hd1<-@
%h"#7EpR<K#&=FqH.7\Mt5];h.SJ`hlPjhCPB<;R]*VSlX)mfhF@2RVlUVd>1`]S\D`I-llHX"]%Fi3Yr4JU['rX5MUR*d`Y<^5FD
%^q?GG%8BEJZsF]*B@Kd46chCf;#RXco_Xa^Y,M>V_Ji!]5*V\gI[CDjohi7b(C5fO7d5?L66[ee=1C^)KV+!.-%a^'r>?:_/@CDk
%Jpam4Sa7qKZOcMqFacmLYE58q1''MjH5n'a4.!NLA%G1=OdKP6Eg=l[;CN#'HSK%B#9j[e@"&qhogc\:e/[OQ?0L?eOdfX$n*7Za
%$2\(Blcu_YYUi9$iHeGpV>L]I(uagk2c"o[UgO/NIu!k>N9$07l_N7gJS+.FrQF+Nbp]3`GXQK898o7P)dFBJbW@BKb-Y_%:`B#f
%LPcG:Ocnsh"t9t)$?.Y+;#cQM?<PF_XUbRr:7;c.lbb&n^!DR^H64DFl,,L-2:(W#MUqF50_Er*A\.FH4;npg[no<uWYh&9%9\EL
%O4koHW>Ro2N3C2_NPR0=.j"b(nO'Qbje^^e(d:.J*MhT!Gr\Fd7,?n#e[(r?8p&n@8V#CWXYKU`_>RtQC%(CLk6Dc/O^WJ05+l:Y
%)AZ>MnhTLJoXLD2hLGQO(bt*T@LC%j`.DR&\Zn4nhmJiQYj[U@Z#$,X!6DZ4N$=JRGc39&\3sao3#'M[/=f4IDWuAj^YIbL^XE'H
%@G_A$ihs5MTs#JZ97$8H6a&`/jd5f&%#Z#mFZe`2jj5295S0u<A"W*MnGT`>;mtobD:Y(`Okfc#87ign_.8S&gPSI'N)NBhU%pBT
%qi(Y7o'O0:;md1SD;i.6ldn/hbZFVJYOb^Egh^3YWQqie/bCt':CA0iRUc+an3f]$8EP#-B9*]@b%>]u)+U]ZesYgNEV#je_KO+u
%laYb23QX:1+/+C+A)%l)XS4GUW4uWL6p@+c*"%tlRjSuph1YZjo0,EgP&dmZk3_/IXLO2+Tl0$Q$4_bpc$WB(8(!]I/f0WZE>OBt
%a2R#9NJlhfnUH6,oQP*1SHn3h..eJ9:<gG$q]PP4mWT$:'F#KG]M8;8"[nIc^d2DJCb@Oh]lcGe/S]Rl$<bVK#fD::0rZK!+nQ*\
%[>"BV*BMhWe7L'LHKt]NcW!oK.4'rr?\a=Ze+d<#,<J;6cor3Y7:I@+R2.fqr6?6_"6*K5MK<(\[5=dh:g;:)(hl`rnMdGl:-A1B
%b:C1g<6+US7cgl;+=0[32,Ru&5&_fSG^1NfJV1Bs)JDTD![pn^3L\cK5tu5+i=KQ8j&hq]A!@1gZmN-jd6n4`Mq[O86YE%C$droM
%h#`A&6ka+e$L8cr>5Ir"co)FCAL(<nC)PNoLhJ`=#/m3C:?1J$7+QPIiZP]Q58Fp'$ncRq([mpN0DT*"&XA0uFc'eqngFXg<"bm<
%X*[.(2hs/OX)kSfSQ-R:fC"/_-k!"cruq"F+a@`0ENMuTEjo`,5.l+5EH.YNTrEUu-LKUhd@4_gKQ7tmdm8F.-43BdCr)#J1A'FK
%15Krj@`]d0Y7HbO<BV>?-F+*!":'"+f'L8#=2/pd'n/!"WC("$2Ag!q?QRHE&(REDN-Yh\g\t$3f[oiZC2fhMK3(`eU#/F+UQ,Bo
%K\88BffAHfLr^fSdrA%fa.Z$,4QN)&i>HbPrjJr4bAn<sfHV@?dg=$C(JljD:B>]'QK03=qCH_6FdpnE`!*m[G7"cBCHDe@S6BJ'
%a/e(P8-TDm+BTR_Q2q5-bY/^:Y4YE%(-11>oUYP_@*lC$r0DSKc4=(MMi+R8e#Y6DcjqZ'JaC/\%If#;:d6Z\9=a^-[GL96R"I"$
%+k?;NB'Neo^YDe@q]%F]4B.I#Im]pIl%_4*G,KBZ3lpdTKgIp):D?;/hQsG>Y@\%1j`rl_]H$L%8-*i?\EjD,^!C7a>kE/YaMu@j
%UZJFqeG="S<=g-#"6%pTohhQGIt!`Haffqu',cdY8Zo69q"!>_4=ld3:-r`PhkoCKWiZ6TjnIXb^Y@lE<uu/>Wq)a""k<tu.aO)V
%K+^e&'PX5W`D]N'Z#I9H>BRae\g@ZM)B^h1[em9^M4Em$DF)kA\'tojL!/j,on1?5obkAe[6#Q2FtgEiFPRephYSgGE.gM!cMDsI
%AsH<lfhk-=og_-IZGt6rg`A0PM("rt(;`]kr5mmgobFc\Uh_3_+D[1U>\Fo`>3o/d+r4UtW*>_qfekj9RiedS9PSKO*@gUH0m:G6
%Hiu4C<)%YNd%V(Vk`].$Kej2tI9`\OM)c0>`a(>['LOT=40;>UUU;4[PWrG%S62F$FO]6q>O'e>62^-0DLT+l0Zh"N<b%lh4D5TZ
%]kk"2!eV[OTqBd7O'pBg85N`=n9d15DA<Q,R%HYZGa+3;Jum)_TedAip\s$\Vfo#IL2YV8D^c3V\bY(J^a+*lVdC,/\B(SuPeUVp
%Dl-!IBTRCOQ8#$`_*RUOM7nL.Cdd8K^Q8%nZ7:6^g4HD/]1WROhTn)*7Lh?VcBrBj+Q(W6)LM(feVQlb]slm;!D*6f#!j<b]_29q
%h$j&6c'+Ntk0gk6J]Vsgk@p-D;Na=4ZCu,K<rH$4a">n-(0&M[h9j\DSST!85(;AP2G8'N3I<p[ldW2tV9oa@g0T$7Yr>,6&h2)-
%<''5M\J4f*l]K'4RU`g]=@V4\[)#)>W&41Yd260Qf%#MLjQ.WO.H%@a[J(@"LLkK!N&h;q"-G58Sh]%^&rPZjD@K@jZO@]`2'>,W
%ScZ:J/URU__i(^2o[XJm7A9M<KPmT!A`5Pu(.nstTb&bjCnFSc&sc0Q-j0n>T27N,)<rV4UM_=sB9/u5MUga"eFaX\KP\B.U;K54
%oN\nN'Xi62Jsup8HTn.X?l&?WrI?(aeQd&Gk/35Ron07Yc3!TlH6-*?T$brpdHTYCDTCbN&-nir]4mt1NGB5YrIAc"MH!$:d#I//
%fe[qYhFNr.LSAX2,C$K+S]qQ8U_e_tFC-ZL.L?&1V'!YE-n;I_WseJgG3FY@)oW#h+K_k8Z77>Oj-LEq9"F;%nL<8>=kDkfn5K,*
%ZGti!&8AU@BV(`H>dFn\ln*7Y%r\"]Xs*5:N%?D]9r6&Z!/@dLLDh\ej6I:A((9NHGo,[nH"s8:=+.CZYs[^D_3lC>6S33:*97?7
%TuN_"2EUH[g[B:`[62[W?<11,gP6S;s/*8j="UZH'C&XU@n3a"em,.<@iED[rb8cNH65u0_L'm@:GM"(/Y1Nnb&qf+pt$6t)<gij
%frPU1D.qfD:_DD)If0JPE/1dW,C%5^H:/d)`RZ9t\GD\\[3?$f:4t=.U:q9NF\Fb%cfiq&:7QpQhb9A`ALiDi)eF]m7Ern=?QMXH
%,U<>,BU$C\@X:sHB$4\S(S'0T<Bu3ZK1l*q7YGb]g`L"qiIh\@E`N0MmI06k5@k`pCNe'+B=uEFV3L2j(XQV_pa02.hB$8JrIcV]
%O"Z4,Jsh88'P&PRQ#(EQ7RqkW4-XAIc%f_T/SuC%'Poai=g&jY(Aj)b09>rqp1R>,2S5EQ6"rTcQqcd8Wh*4XY97!rPh#B8ZoeU?
%%FZ<C!I]Oj3VEQoPTp>'/CgG^WI+n<pJ:Fm.]Ns5A>S,aR]\R%NqM!B*d-lTX\jNaa4Iq_ZCmG@`YBpS`fb4b/Eq`"4:7kH>"*/N
%nIt1:N&eV4A+0\DK!fp@hJ0e3PN.@/L6@JoU@=+f$@gZbO6]4P]HR#Uk.u-o\F.EJV$qGg0g6O_R>2k4q!K?^A3idV.ZjsaKR-RJ
%1VfPD<l?-\:13CSmf,DY'c[H_0G/W&:'5o].%CZ71Q0++l6uRIs+=mI\i%"g9R/Hdp:cZ<7Mgc&/]L/FbIHT`#)2`+U;P=0T\&;P
%QSqH"Udm/(8+$(/'CG'UV@!riZ*5U\5C%E^$N#fPcUrC!cpt./O<+bXNQg8umQbh`j!-T5ge]hmJ*BeTPFp,<:N*5F0<<:;;m$RB
%+Ek!A$$jt!0h1,1&AOg_Bm1FIe?QT[bbD,4XdECWp&2D[R@4.QOd96bV<jO??5P_#Bg?3b.jo/XX?g4j.PULk,<dTfbs6F:O.W`j
%>n;m._JAF54ItmPC+onEmUj&3`m#!Q)>@4"P7uf.nb(Kc-@\lmGPkYnkYQMeCMr`X7D:r#>4q<H8F@9sUS';8^UuoSlG'0\qOV-@
%U!<nk;0YQ=ZEd)%3+Zj2f)S29?XgK)Q-:AtPd:+>7]S"hf?5l]K>.qL-5>..RI=QW$!.^#a%QRSl%Q_0D\\ZBNdIK[O07P^Po4%'
%pl)B:Dk=g%])4]SB90!`UXeC;FAE4`b)\:7(Jl"6Y/jkSV,Bbt`1;"V+LDT36tMe-:pW*X)sRYLWDP&DIm?/NId)WTd_3&t?9CEu
%Id`<.nlJ/)F;1Qp@$OWC)bc?9J6<]kf!<Y0eK.%p\hM9V9GA'E&LB+X[52P"\5ik,XVkg$18GEmRX:g<+Q)NP-\%'0m)=<ih+cq?
%Wbs@?7'@tn,*V6K.NoWiHY=@WM5F4VmuA@r9/j!XoW>,$;Ltn[lS0bqOB^'i)AAYM/on9;n,;'i;4iPE'O0&8%@W(2YDYF]Q<C1U
%jU-F8%S(5\]iA%X]rWF!Uek-K/b5>LK6V?73I*JuILTA`JhO;t*aVmfj0C/Z+C_=3;!5meHfP=P<_Mk><fmi?]qJCUm;]+1Lb<",
%bC(aQNQq+*&Bc`V?"2(#6`1/L*ndgPC$nUC3qQWqQ>!?.."MjZjE!"u,J-nW/-0s`-.c%i_aGIZBMT&%*9\%*#Mpm<F%%)RHf-b3
%mKk>;+gPebXIm&<n]ED5"+d0)N,oPN"#m&PnE?_6L5oMgZ5eZaEp]U*!/CI\SNqZ%;"aZ,l1=d;?qo)\]g+Z%Z?eu%Qq@gUKt(gT
%10*)nTPlEh9:iKU__V2J#J&J73\jjgB_P`!UQs(4)@#EZOeu6;IdtdE#rND&.1K7kJjQhZob0c?KHpI/Z)gn<FR;u$9R6j)]qW#g
%$3So!F>m\r3!>SurRB'M\AL(5M6&GD[h[g3YVe>;Y<3:KC_d`b>U[UWag@?#.J2Jl^.o0[L7qmc)d0$%WhWXoQ9NldapU!?*jRZL
%8m:Fg$E1u(TXAMS$>5B^<-Q9Z_0$uq-luTPQ;+(aPOa@Dd)hG:b[btf_i"6a.*(r=#06`CXi6SF':b&#P2lqEK/s/Er#;UK3A9TD
%5Z0u7B_j`SlpO1OCSd/*;Rf[6bJYZ1#)<r<=:j(WdX!(:KlnghTHdMN@tN3H.!$_7?9I;B7%7*jE'dj\:[Ircf_hI%bq57jh&Q4H
%FJjCulRZA?/h7"W=hILC8&:h[Y^siW0r"oQ"bfLp1S3Wm:mV(c*_]Bt0][6(m52k<TRWInTeV$P>5>KE"3G;&gU[>Ze/Dg'JMZ\k
%3AR?7(7fRq1fdF`$#b<\A"V:r480hqY/;72R)8(<BoWQL0[[(4\.1(e_Doe[`E\`obct?F^S7LK4D.tM1r7VD3fmI-VcgtP41(/@
%r*gs%<FOI(/SZN0gj,llZ]6CSWC?50\8dot@\(1`0?mC;o7Y+u.*S%:O)e8W%];PL)kE'`S)c7+A`h7CU\mb?KOlLlF^ri$&h9dp
%k.S]:0>V"%EJ)hfj\T9="i$VXG\JK>P$A;ja6ecD0/DA/_]35C)M9s2jPEpf43cUN\C2G7#V3/2ZmfA<jc0O=!&*e`RX_BPM!@V%
%XC3QLCbq%1kXl&]V3!A/E2#DOg+Ujb7W(m.Lhh+&QX:A<<1%'bXX4Rt.]5ZrbV>q#%Y<Z5?A#RZF&W,l4Q#Lp&64.(*Teb(U*9]G
%6(8<!#Fi1r$VT!S]?!9e&NJ9X[mePZ5hDr?P[>mGQ]KY9/-HVKKD?^+]"g'VjII4^3N6r's*U"0X&LkO)\@0hV0nCAl8`V$TtJc+
%F8WWW*udSO9IdN/.T5En)O9(I9+P'-=8dAWUGOh$Si4Jd&&%@pa&Pm5O9Ont%"dl./5u-BJ$6VZ+K`p7P1PfQ=XSDmDrHF$VFs3d
%$0f-#*!#TOWY/%_OTuP6ehdI%d471OK"$,dFObfnFn`-\(friKAAbSN^HE*!D-?l0&,^kS"2-2U*J';AlP,KpeM35oj$@T\=bm4m
%lZZDi7-OYE4T/jFNO]Fb+6E1Q=hVSnUaYB<7'kp,K4YbJ#Vu1D>_Ue)(!V$amiRrIUh?gib!XOrO0i4U>t*Y&*q8DbO:BebQCGRh
%IP[XlJ2]HL-j_1TEEU3[2.f/&odP0I'LtneN`8J*(b"RAr+/YMDgH'd+.4[UY[SXV0)DACX*Ag>M]S^M"dIRG8WC%3nWF85;c)\e
%QLbd$1)8L%jca5r!3-/86EQIkLe9eJ9oc[cPI2Ku<1E]p.hf2=5nK%d?]U0G"4R$H:83V&V3H#G/0Xm\i"<#DYOJAhOU]j*8!n4Z
%3b3A;H0nY_M?V2Q'(TjjT:s7.q&0V3ePh(XCFiXX6g0nPAJNuWp*S7OMV=W7ht@$,0nFO_f>%@Y5Q3>9l2UQDrm1WCf>%3Ds7&=$
%J,d^<s87BFVuI4`rqg(&K3oJ#%,F97jja!6Y=Sm>6fWMsKm8e8)>q>q4flt&bqFN?#F@JD1B2>;2+(:L+,lH;Bj_]<m3$"t#H<uU
%XJ?=Z'cDYnSpFf6GO,370`Xe&D!L]9;+CRg99WO0N]O)=?5<^a!^p&Y,aQo8[d5Z\b51IsqQO,!4-h4VIO2eVL^MI!rgH;=%L#?f
%`H!r/WZ:^)`8X",#t2mHN(DkVrm:i<d]J.,'fB3(;+,@[MeV*!8'``(0EitcKd!*F19t4@K'>pT5V>cecD"(j<g>,\O>$44Tk;t-
%;P]QW^uIY)'a.NMke*J-BWY9bFOf%gLJg-4:!++77C.^>Vh("Q1ki9LfW,TP=EtA9*E_QlKDg<Nb<Td28/"T(+NbiD/K(p;8C[d7
%7ZPQ6[f<<Wj"DFJE-fl=+Z[AIWsEU@6+5!9$)Si/W*hJVKhPPYd3U)A/V>N6U3!<&iW=j>?F;F"VA*Zp3s=DLOI>0:$&FoXKI]4^
%@G^'2o(C)aDoW59oBaru&$I0fr1gA#oIj.#ekoB4ZLl'g)$uO1#;#H^LQnicSER+J\KU3dc";RjPF@*JbbBXBf()bG>Uo2PT][k,
%*k5@8GN>RAim-M$\'\P(!9AfIFn?F3SJai9YU>j:+mN07%&OFO[`U]@bRb"l\S-af/nTlj@pHD[NHHL'+Nbn'BUW.id")E8Mqmlc
%$#=uB[V+HBr9#[6GU0+sJsTCcltM@GJNYcf;&]:u\r6)08@5g_cEh/FAZI7>1]gbh>Qgr[n7f8R)[N'>'cL[0a%4,3f8BAt<)a6N
%i:*AN$Eu'S[#KF2p-tmJJHDE?]EY5.O<QiKjaEfA?A6SB6r"I\J.-+p(d(%oZdj68OF\VXPBHst.LZh"hUm!ojuhXYTFM0iPhY:r
%op)^.[f<>mi\)=L/I]f3C'$:n])cY-)]Y6l?<0+A0Pr;"eZ6"HX"=:4Zrdd"._0<9Rd_?8UeE)4oR:J.0#:All%WYtErqNF.0Ai"
%U%DY%*<(,g')Yi-:%]%#Tb^Th<<@4I2?K4J$QpS`dX2?Yi;h7t&/q7*OW+^f$$`^T-MNh9NA[$'Z>)T]&u?TC^.%kUen/p"QLV<=
%X-Hjt^1,D]Y.P8rrcT7Zoc_+#bU2r.\77lK+))!N*-fbsP4*K).e%l*kOKorCEsU*'kLra:0(Tr-.L_0i'E/N"XRBP8gFu@6>Z3K
%[")*[fR,ifpeP3"f6D<YZjM`e7lip2)aI#-WL]APQ(kjggQZ/$>U/J`hTQsj_@_;jZmbqf#7Dhj)?"tOA_Q:F;Bqk<%k,&Hb2M;9
%+eH":",Hp;7=ar#&e;72DZ:!MeAukiQ:hSTdS+1&8E<Htk?^7cnFC/eE2.X@dIeD+2[AEbXPF:AY`oN06Erh4AcC%1m5rb#CTV.o
%62Z&iqk(GTrX1'*rMs\YJ$RPVH,OH,NVBG6qmNtXk>iJN_9OR2_aW*35/YPsC*W9M?Ck">,3AeOfN2!oh>%'>5#\"IZNG"3Im38r
%hYY(GNVk!k!WGp.PN@iqkiYS&]>9e:Z"(#kCai=F5Jn)RVc`;);X2IF57?=0Fd\co$$HUi3t1@T`EbWS_%q,gql5\+He.*bca8W`
%f-7gTe_\M>\IF7hUO3t;(WaQm)4;IGY/[S2.p:m:qZZ,<GSl]bc>AiH2cWLM#obg:ASg/[OfmS?1q'!%YcK,K(]=YnP2E`+$[)7T
%^NS8kI-j=`bJ2!Q^j[e4n;m6$Yi!T`a9U?.WFPE8hA5YHr!3#2_eX`HQ0:.S8#ot&RVYDU.dK=Ud]L6#A]?^cC\DrHOI#-#UqjaC
%LATU$WH=q_[Gq`aQqVGQ'(1l7S9Dc*m^!n],Mor*g"rF3O/ot@GIS+8mFIc9Oa9*m@!Xpo^JPJQ)s*Z/mE?KW4.NC,TMMoKiAP_@
%Hh`8uGV;28dAVY@GLG$snFrNfZi0G""q&]41JN)cU:,Bk^rmLNq)u>Fg[?CoCW#krC"36m;*.q-jgZD]%c2MZSsJ[A'C>IuC[qS?
%%g:(gpIDR9`Vd'[)ir([U>3'si/Pc0=WcasE7_uHO7/UOIT$I'Z=UOL^aBM+O">Dkl!&Yo@!\CX4"J3,ph3*AbnF4cUbEhA2h)n9
%#k4Gj]Ce9XO0Nj+gr"5e'NR^R[t&a41\N:e//.XmU\2@`#Mcj'Pa!Jm8bs4Rq"aspOlpNNY/1s!_KD!2=Q1JmgI`>hcfVOfrZ"?t
%:>.*aZnVEd6^L-Hor&8kgp,^'GWtBD'95o&'XjQfC2%2rf2U*NM?a2Ep1:RBl/e!F*"6oD=;.TBQ]g>#<R\#Tj2BUHFK"`%AlO8;
%+t8YkA"g(uq+tr_Z8=H9ne+<GM^V&W`Ygpbbiin_4pTk'rXCc8N]d.63Rh*Z6H2@s+(7SEaSM<Ojrj"i/t\/Ds,EX4(q%QTct1Q=
%c393bb.I.P]lS>e;ACLlD!AmSiB8Bm8?==dS9*3AS#PR'C17iL_e;J#oF9ht5CY<\X@h'kYs/&)QnpC+l06hT^,qdb>%/Nf'q2+@
%R-'s3(+gC<#K1B>*?oPc;kK##;h-I!(5gtT69*9O6eW#$h7Oth:,CdNFrLe7B[hn%]k4[]M^3ORN)9US/?T^EC^8C;d1qn3r(%F7
%"UPrV0^l;(mr'5Q^s8\0FHeGA._SkfTRDfC$up6DPbf7j,LbNaMYnaWjaJqC!&d5$f?TSO**f39k=p!0a/HD0)s7FG_'ZBE>bma@
%9s9pudnbDKk0J+[/8HpS@?g?'luk_g5^-<:Pr@Vcdf&UU`dA[dA\`KuY0(qs@eofp=bdq(h_`9Gl<>90CQ)@N#7B5)j6%j*96T#A
%9(8IWolK?Q`m:&iQ6%hlk`U%&>Vm%]W"$(bhV[AVJuQaPlqLocDersUYB]5`.i*nggQV?:6t#Ub(tt?&iArOs&M^g+coG5M;&r*c
%]Gf_SM6,AN)b#;AaFGU#k&uYM,92*HH")eR6<3b3hpH(!9JMnci>uFVgngqNC;dDo3RApM%L/\.b(u`G4#gY1a&*Ec#'XPD;K)uU
%\2\;['k1R].?(j0fW8.,']UB*$80u@6Z%#uj_RlXi(H):`;*(La@B7N+HW5?@GdsZ.(Rn,e"YgY81r,q^;H?$)[<pK+<Bj"_WZ4_
%jeMqCjp.bu4`!6;+ck/9-Z-^3KCED[f+4;51ZZTr@1VKPcF?W^PVmJnV!N&$9OYsc*PaF/qYm4XK.eJm<3C_?o&DJs02(O=(&YS=
%J3i<CQIYARl/r5aES5gKO[BlI*>XZD1%@I5S<\hLqp_@=J8q[mZNUUc%h\*VPR<,YS=#0jZf?:m:bInr%?-;Y6["^:#%KY3R]1=9
%fS!>FL7QJ2s(rD$J.HqP8X>ZiO:SC"\'*A[M%'L2_+gZi-D=Aco,tGfV%2TKD>$UPkoW9p[KP/m:gJ1[AT"_QF.0<QESq"WgnBCs
%Eamm#GdnBE')FZ?D[I.Mg6A:n<_(#*?NH+[,o.q0!0\uH(gPDZo;[^?EGoLK!ikB$9Q;"s$Ttj\+#]Mc$c:>:51Gh:cQun,ZJ%;)
%go<:-AakSDDfZ"#f6D!d\F4G/[![h)k;Kf63AtH,&(0N$7f,jk`skXl6G2K$k@:jA4-8d)kt=%Y.t7NJ6(jr9I*n1IVi()-JKJHB
%Fl))QYZWVW\o$)C!\ZMVcVW)gaUWg=@dkGad=NH<OQ8M`^B-Q0qKoZCr`NStH)@H;^'Eq`*"u^QbP!Ie4:GM$gh0VqG*@@q$!2>Y
%,I#8`%0qU#8;K%RM_N@E_W1_)$rL9H</9p=$0-$i"aq8N9GFZZWp/mdL0^L=%GU=:Ka&hW,Baf>+<5g+kh6A(QiOqP0WrWAna+8%
%^,/#>o(OTDbY'AePE7RjGC9fWLGnM)]YtYl91TH1ST[DLWfV>6.79o,IaX`uN]cnP$YJXK#`\clJ*PJp^=Mb&G``B_'*H+JV,Sag
%l&pU,8&K](Ok^ZXBq`S1G*L+RJ5Q(`Ed:P$("aeBXI+n)ZFGkm,VHr+3%`X\94VPfXqBWCN;Pf9M+pi1l*bcf-Iko%?HOEbL+WXp
%ePd>'31;]\p'gB<#aQb)-p`/#c$g-U*,7P[?]h?89W>-pNM5.P0@Lm\Gf;*/$0cC=rk+[+>#+:c=B#)FP+9"M9NGiY\=QOu3`3]Y
%Y7%[?pGZ\4FiXD`GGqK*9LF(7Dp3O\YLE-uAEhn>F*gpmb<n`nVFaaL1&QE$Smun2"EP<in_n&^,TC]R`S1RB;T14b'licd4j7h`
%@H/)+j43j!ZP5XB;PG39mgZrmTO8&MKGC:A;*\CL]h.=;KWYYX6T;&`^EDti\Y2>j+4"lU5Qa]R8XKR2&5eUS@6'Ck't(eZmA:7Y
%gCu2PR958#N#+ptP9X#)_&`4VU\.QG8^^j3WGKl='T#@LC7ELI:G"mZStkgSYBIbt\Y+ai8QAG(+7/0:Y@?RiA.CRKbSlM,=j!:V
%8.uhb"KcUpVJTN+AZ#lW6XcSHG?*81L5]7Le$hLMk2n3J%;A^:%<^t#7eSD?O"0=Vi2n4Ymo5)OYK<Y1o-T8Fe'r;1g"qT_7l39'
%8&Z`kn1!+H'`&_]\-<s>OLZAMU^^D&Hp9hHAnUW*(1p:%?S@dT8]#SNi9#oEK-NG;iXL_,Mtt4$c;I;3DP<X*(frhlMPj=qnjr*!
%W(9Q`M,UD.eK]ei(mfN^[fc1BYUX9Q5&&',W/\*I'Oe9?H.8q9/]1+;m*Ifm2Z(YDB3)QYkbOAp'(,(!VA7t3nD2F!gCMl8k>__I
%AIKt_?;jG2#G5aN(k'U=HXK5&V0Aj7dbJP.;+7ZO()H@#b]Af+Se3Zr_Tc*CWAsMYD7iQ&&XI5%;1AHJRm4r/@K,%]bGWn`#0*H`
%4LQ\E+W"0MVV@*me+3dmNkAlp.Kd:FVOrq).82HFAHT#[b3(J<",L5aZ8sFK#jqs,Zs\GXEf;^'Z_TP/8`cY`Z?F%]\_seCN?RcP
%;[jn-=:2)9Ri'cHC"E`<YJnYR6K:IhFFG]l2e+,/dcdDn4V'W4K8&b,[Y6Pid>:F6K0Y&]q6sHS,7j1gCr*n3G'Y<CCZe[X,hF0j
%NlV'(naNO90O\rloCQc/-=:!`rYAQ]H,qc5SJ"MNfsq:QjI-)r05i\"\>dleHsXnDH.]#E6cqd2:_SPeE(0aO.nMLL3Qoj)0Gq>L
%j?IeP78(olna<VuDF`AZ;H?q?K(9FL-m-%3/3/3tWqPS:h\SriO>,3YO%kW8_UKTZFlXc!nNW'Ud?FZ&j_6U=K-@SViE]LNGU7Yr
%oF8sXrn$\6r6[RZ@$6kWM=r1r;JNP8CY&+\g#tpf<E^<X@lU'bp%.O!DPqj.`C$^UX:tT$-,_mRD?0uHM(rbq[0QQ_Q]`^Z:bKkd
%"4OH7Trq^o_?iY3##J"FFA*#7+D1"Q4mf8'gSsCm*d:VI%8#"8I`%&-<o<WB!M^>2<V7@gbqbM&dk.Ga47Vh:+_ZIE<bS?Q"n^qb
%2FCka'EV=TB`_E)l\IniZ8L+l'alSTnafVYM0dl/)`CV)k?rHc@\skHMDi(T1tRdc+)mH[Lj57`$ErJ\f.YWmQ"J75_7EO*mp@iT
%oo7tHI,c/N>.f>fT!3!4>]LdL7-G/$F:1anm*9m3)!j-72E4E:H'8l5(fed"TV[U,Iba#N6b&."VRHb0V!u6e[oJs@e2cXB3Pqqt
%GHLS<e$)FV#4n5$/UC,FX]fAn5)&1tro9=,'(eDC+j?1@lVeMZBnN)#5^A#5;%MIEYGlM#4YR*]nZ<-;SI4k0NM@)#i-G<GnZcY^
%R4u4q&;eWM)KZA2h(Y$p^.lsY0F`*?@[e:Ob9Zd-gb3)M6VXN6ScRX*mk9=^bu#k1]HGD<H'l3SZ`ku0G-,;J?q#E7h]!oDg*A_4
%MG9E`S"bq$bGW=A[0Y'Tf/8;&,^uD8pQUmXQ%b>;F"S$9ib6#d;O]lmX[?GpW'cr?]HGj"Vmio/U#KM#E#U^"nLXNO=>f4*dK:_E
%/SkdOf._`pn^K#YZ()0PCuO0\@q6ColR0Y2YF]0e3TRiIlhS-YXhp=LG)M-Lm_2Sg(Z2aXS!&:1f27H=U+]-F].ZY=LOmDs4H,1[
%=GT8XTB_M*'IF#4aSsnu,8_1X"4hoBdVu3Y.SD4H-=a`0,DFA+^5,GM[#A(>7uU-)Qn&'+_Hcm6P0@A!F3NKcSFbpsb"3qVoao.(
%8]9=Z%pl,+VC+d!5JM;&""r+f/]tK=l?h3+S#+8rQR#-2eYkWT@-#KnLs%Mn\2/U;D5\.^LF>G^&o#*QCJOc)1QbODdY'#b$o+L+
%`k@Fp[FPPW-;InmP6E4j_?F8KC$@bqi3/aT%MB+Qj\>lQ'9[\61pQRVS^S'.F+ndWQjt3c7pP$o'!6Nci;-ibZ3[qXTq$d20ou7]
%Ko0g0-]B:rFMFrXYb;[:;Pr[j'M#eo675TfS<"e>\q[3nomA;nCaYfcGSH)qPV)?C%2Eh6>(048#L(VE+LOi^B/sBL`%G=&L)g@H
%EVs(@VLZ(]I_I9r2k%jNm_;@YLc^0+'=c[ME?:BZFa!`3/Z6'nigT18CsaGie#>8L'$"X3M3K\f2b7db`m\"dG<i-p&!Mh[^oZ,S
%WMo^al_=mWXfHHmlO5mB#]r,aYk8!<0Z)YO?G>PGL'WOGZ=@;&r]\f8&ZqOoau3\+'EOQ^Ct8.)r0dm5_42Ggh'EuPN/l(>ej]2G
%q^&d0FT75mA/']m`^fiaCn@=*k#;q.L;%gFMZ,NijsPurn=hWM7@a[ro;i,.]gc[)5oHu:d+=:%oQ`@!8:5q(NI,Pmkqr$mpAK1%
%]7)DTleiuW!Ij=C)\punROf-Ef'e<1*F'jR^q]+m*<"rS^%L-fn+s^oha'cl"8pYe2_(lceFVF5<kfZdF`<K<!<94ZE+QG1IB28>
%rRGhADB2t-5/7^-p7pXD%4?DtNU-=*I0UdL&+Ef<TCOGgQQH[73SsN-J8ZBUQRF5D&$R;L[,^E$2O[sACV[DB2]bo,c2@Zd7"2W0
%\)'1^I.&'`^71&%#PbRuDK(!lf,!+e^Yl5`DW%/Ght>hXR'$+C"lF[IK'T9Ync=4+]c.sCHahCMmiB&`dgc42r7g)3D<cK:=`D(K
%/GO*8+s5a@hYY.Z]jKNBlhuE`2uUNV_sb;=HjlZmTX5!b8E!Hs^Gt+igAsC`D2BkX+(.TK/VJ)1Qe",_'p1QM^"Z8mi;HUn1nIQ7
%ir'"1)mp<[D]N1:D*<(Opc^;S+5k2BYE@N7?B10=II$c^[pHXCItiI)H[$S[hs0(qe^i;ua+@ZjMoZ.uZ1i$Q[beJrWd3q/K"#X/
%JU`E(g\Z4(D<KLIe^i;ua258H-]nr/;t&Q#ptd5p`ZFoE7'Y\;9QC78%);Q9hmU&bJ!n_7B7V3HVT4uUBur)s-$8)RWg\dY2Di[K
%8rg\3k^JR16ma2S2>09,9>R@4@AotthaR[=PkEnc"?4%+Ob#Ij#;hk2kTpF"Jjt.b(3rE2Ei6NGa27,X,A>o=m]&/i5;'7irTkqS
%%5=?^_ns.h-)=O$)bfJ"lV%R[@q\;6H/!bgA@qQi$>hYbilk$KW+@hT:)dV5/Qi9MY`=JnP>Io:1<rheHWEFKm;-CL>7d0Qhc[Lq
%rt)`=TiY8>;#bj_d])cG'88:Ngn<I3Kl<`0[V\R.<J_qS0pL(>rhN!+FkX,M%)Hj3jEElH)Ybq:2ub&lr#QiXCc+^X7/(;R#]*Mf
%rd9R[!'_e/G2u*0[p?]j2_[8-!nO%5$FZ7@Wu&=/RUSV@)YmWRg--LqTGgNdd!I`#bVJPqKb#UQ3o$`58E.PPPDp]Xk1$)jklSf5
%Iug%m/f[n-@LZFiLER%/qiM=Yf:14fiG%PJ*4Z5U]3k@#7,<lTIA=1C$-ZH*pP/C<!EEW;el"`<T'\B=k]6^N[=&>H)RnOs[NK@O
%Ceo.mkf3*(*8Q)2iSjkm$5ZJa9IDC_5<ET\NhHhmiB5r#KG-OHboK^?m2Vu^cc-%B+W"5i@B@<n1rp(mP[:M:E"0Q,&E)mensq=(
%;.r+`nlFq_LQuSEj5[]\!t%/&+3)B)]J'anQZMh$WtFR,1!mUTI9\?S[jU+LWkd-kZ3O5O>GV&f:mIfq[rp6J-80:5c+&%,qeMD(
%CjEf841M-,eH(SV\ka]d7Tif78!,Ih(rp&_NSkA132,GX<)K2*"f0b[d[`"+S!:FdZSuc/DP"^VjTr,GQm.T>WFc4%2kj0q7u?Zg
%f->tqU'9=>=52hp&1d$HlqGE8Q._eGXcl;<R)2ACM&0i4-L1!Q1m//m5TL65"-;@e?3FLG0NCX\8@I`g-$!=*JG-tEWMh'nTE5X2
%nkXT:%M!`%6sJJdO(S!^8nY%n<`XVG3a_'[q;KHYR5#!%!1*.2DBE?#687qbR@G:Nm9\o0mEq^X"\3GOfW/;-Z7cF6LU.p.qDnbY
%]*MAe_;S$O[?8QFGVo\H"<f-8J"dnFH071oguYJ*PjNLeTC$@%qNZ-W+?'K4`AGEsc&l6%qmI(&VFOqX/%PiLB*[$,UD$.tT0U/1
%fC(qs8OjlMADth+cr9Ha7\Rhb5,.OlZ6Z$%_?Y0'ibr>rqKmq?ES@h?\&2oQj[\K2KQ1n'4BPaVKiPbC!KM5(2:#+LJRqjJ3lhS,
%q#^d_k]b@BS#/b&F2J$aO@g&Gj3hL&;$9SS_iFAO-M[a)-u:;qo>-DD0[p\@$`G,``Yka!rob9jX`N0AHo*.($$"I<?kjRiJf?:o
%^3)[f\7<,]'8$Ka:Q@V`][_GB=N.@s0tBqmYXTGWj(RPp&]e_jColTqSk$\e&=.\LpR+Br1kX3-'Z9$1rKmuOIDpS.)/h1;JHq/!
%I%s$iE@T'Wh?]Xj5EKKDhQ&<C3ol1@/B[HT3)Pg;C>t@0&l0!j4s`<U-\OD[P0q/4`d]u!Au/]a?9@Wr9A!R$=G\'%*@(W>6D:/T
%,2soU,]XC.l7ha=`-+Js6\VZFJLY<Glom)A,!iF61dD`6nHP>GkeBJSAK'PU[88T'GTb4B1""'!`K3I5@R-AoL3h/5&2!TjT)B-F
%+YW]R7OLI9_(s2_(i]c&D/t%1n[He8l*:S\Nm.Q:cYaBjFg)8eBDNH#6Jm*_fh>b=oF'E-3FDbnSImt#qUK4"0/ZmHi&-B*io+o[
%=g@YY_;:f:*;fr,7tO+GG*VOn@5W@BgKIb$$<&ND:k?gSL>j@]lX;$>!#TtSd4HA]E<CrPc_a'Z-EhMd"T'QOAN@H5D@VK#;)<^s
%ojRlU*o!KFW5-3eq1rW]Z`4GQH^$RNaWDk<:IB6;E%><]BGV!+R-rRSR!#hK@TGOkZ&G-,KJ&'r?i"V".Q9jpmaJu,$$\EF<5?%]
%NWGQZinukekfLL!/NRq)dg9%<[WYI%KWTP)nQT`1etg"*mWs:DPl;*5$B+j[L[XGff(6GIY73pd).\*6eR;&JIc'[7e<-bHFr\Z*
%P8tb+*&QCJdQ&4ioX1B4pfPGOo\f?d20"7-)\UM2<`.!h*l\X/]h`ZIRGSf6l*J1io^<f=W#rg?ZTa=8KfQ+Y94,*9ME%nf2TMC.
%rm?RX):8kq/&1$7ZqSb<PaLZM6VDY8)EsgS_Vb?.:?3<:+'g$Ooto%8RX-G1-85,Y_&-<c47*)t7*oACqhNis/hD#Q>1tTa/ic#1
%@I>J(0?i[l*,*JDd*kIV%is!gH4`SHor,iZa=#Yc@#:D+QEJE)NkmT)O5R2,MF]!Xf44P1O/trnHZX?A9>#WPh4'&35OM]%LUsBD
%(m%Pgp+>-D2#)G`*=JnQO5T^gT=UMJ>Xh5&>suF>Vf:J!%hA650L+!*BCMq$:,'KiB@J\YgFR=.TgNOsYRVEUklmKd(H(78Sa!>S
%_Jt&F:HES(q5QbBpP5>-fA"Jkab(D(/$B+;Y"Zh%HL:R8^`]p*`L)V'aofuUVMhtWgDSg\U-nU\0_0)=*U:4=ZFoEdU?ar];*g>t
%*Bp.a4mOMD5hGc_`h(#Sc;o-2_;/S0(31?3Kqs4Ce5:SBFOUmGQUa6qEp>Sh3Pr0UVc]@#D<GA;gQ6%UPQ-:gATY"-qPA.$/[=)#
%!07(&QTKL9Uu,csBW0=TFN!B<2:qAlTmdh%VkM*QoJ8K+g,.<^)brcf;)ao$J-28Z?eYcJd,A&*6d6cI5OC^7:O?!Zaoft*gE`SF
%40-shrW'X5[eE2=JZ>-Slql1q!c"Erp2jsi'-@9f[N+#A/tZ<(_:1[.f7e+d;lSuK=k^p7g5!q(&QrgbfpVEY5u-t4;,]Y2C?#A<
%Xh("QZ*uoeSJ\rYeQJesFQ9ZKO)FlMma7$bO?bo]92nIo.DsiI&,WUF0<]`pcl)t@%c*m)[q>AO)1:m#7tQjJ(I&@2.&T6.ga&Kb
%3+#aNK03cV[EHjXRtJH/os9:p@:c(%&66Yi;-SilFb5gh7;MSTXg@F,n1<77E%$eQD_ke-4#4<UP/7\!6SVG3&cuD[\N*6AX#3HT
%9$+C-<V36ONSK,o_-#o3E0=G]GjFhm3^C81H_$jJ,%4j.$KUpT6:+Y"3792$*T.6T(3=dD:aZm-!P=]r[ukg&mrTB2=BI_2"?2Gs
%1"f)T,Kt*2nYhki&op4_1S$]N$,SbjR21H95W(gn?iM:@Q`"m/ksC$A4*tV%K]kQG/Fh"..?1^DdhsDci$aV&$7-UX\MgW%n:Hf^
%EEKsJ>t!)pk']NX[!Y.Z3da6/ob#4:8nS\G5m:),^cBpB6,9eZ=m%h>5maOa_i[50F^))4M(PVi8.:0k_7KP1&h@K^>M6n9"?i_U
%NstUb_$'MCp9-2i;o<b]I;A>5I)PEi1@1aQ+2gOi+2jj?=S<+1HGj/$lgNRDAq`)/A-f80Ld1PZUcZqA%HN/bq7_h(l3S0Rrd=du
%/ojWKK&2`uY*t9c9QD?0c]4HURP(J#ET@d4CWG\L^b"[BmdfL*hd7&t9ZR+iETe$+'@Z9%E^qdIX1aSSKd;S#o/"*\Z>_IpU0"FI
%^>r8FpE?Fu%$JB":p>u=Ug?f=rGZeW8(ViD!Y48ti4`_46M,l0LR+b$;%lqm2<3hMD'u?LAgJJ2$HT!>ZUlQ"TlYCK#j"BNcuM3/
%$F@\<+"F_T&KAM`s%LWgVfGOZr=eDE59;\99e&fO)lJGNfGuW(\_KD;WCj%%>N?d2oKNiY/C*4$"F'f?Jhu,#pJjaXd(T6),T+CY
%buZ'rBHGj]CS=nJYO/^tF2kW`.Y(odS$.EV`k<-)L:R+0U`08t-=OP&(?1%A"cg(/U,>Gf2<q)NEOS-%I@-(LfiS2U=Ms,>$Z#P"
%@poi;>cWl$\#=)MT[!-Q@Sju)W8Jg`";@>eKgflRmb94q4,CuqYM1(Ne:L3$SKnSbk@%ubo=H?rTo20"7cE&3i*+?bWCP=m62=oA
%P8>0fJ24%rH08t;Mm+Gq#_(.DFCEMD/GRgs5%1c)ae9TOpoZ=lI(qY^9r1AI4lj\D<U/:\b;lme@'0Dq(8f0lPB2h$GG15:7;d8.
%XhX;tnm&:%<^r("F5$`Zd>9pKli#fd58k1U0-Wo(XCBN+>1bi;RKrR1H;q*5aXq0FNJ.iH(V/(U\,NN8<b>q?jK=uE%:%5C*%G6K
%\"s=b&14Z,#5rihWB3><ma9#ID3Wkcd7iMk:rgFWY9*XfDD")a%gI_;=o+6%TG>p]_#OV\'7K7]<&1c2:>m'r'QCeJC6#nSe)'$;
%nfp;PP"eXB[A-<B0X%%a1V,"49qkdLo'<edK*O2L(Pf_J1b@(8_D?LT%FS17($o+p5#VdE_3#Jr#5['$3%LDB$I@q1n5h0$b6;Mq
%Z4dm\i%\RVra8cp`ohGd-rgMnRKd8/.=#oeAD0^9\=rA5?d"i]U120ZH#8ktN`%8F?9!Q>IHalRdRbg;@uX\`VIB2^"5VRUa;43G
%,@pC`)Y4US;55P'dnuY!`m^aQN-Yi;cg\serPQY>8&AZbD[n^P'D8-0-p48rK(\qHVTKq1Var1kIe-YZ=-ucc<ct+>%>EQ]5So,e
%e5:aY'1$+SdN-<,Z`laNi?u*.;Sk8sFdTKIC>>c_CK-r\h0+Z2'##F/>'i-[5,q0K;`(<c_B=2W,]omE@6Nht36V1HA6&&P'nAkD
%kl#Sb1CYs[ZF7_f(J!^d7_"CI<+_^5;%Ucm0Z_nHetUHM>$*c+(opftNTbU?S>mU6%:s#E^AI\%fLE09D(Hh:QV+_A2s_&s7t\q3
%MJH*g<eFsf/1HX?pr-_+U@=+&$@a""-Q_l7Z8IU_<\AS1]<[;&jSG[5#dT2V"(fkgOR<A=n0E@R3uZ&5E2ZVaa3PhJKoUDM'Y5l!
%Em$ImRAeXYHTdK3MmJl(\o>,<\[4mO`jO_aSo!hpCN7o`=RupRP9%nf5IGo![J/mOk(ZDGMB-]SWQge(OaeMN(U'H\/'f&6e*fNQ
%70_iYPcaM02eTe!RmsA$jHt/TCI?:uL[d?X<n#(W0QLi6)!M2KF"R(3*P8o0de_M%@9NE'^@?7LGGtiUd?>Pd4a"QN/GMFSgc+G"
%J@)mK`u"Zb_:WrmAUG"O*(F,q"a_#I9.fUgn"570k(90D":MWcMlW`c49Q!7I8jaBQ[Ko0MJ%oeF&VECF+_MM_mYq.$uh.@NH'T7
%GpMfGU*UGb_o'ZC?W%D^^YJGbe=b0\O`a`>d$;I?9jB(;[os.sW!3(logiMJ$clS>=L,"-&PhQ\CK0`[QL;E*WiAX_:u>R>;57(Y
%7i:Lj@Q!qD`SpeRHsAmfSdF#2&+JeTH@NaCQoPrT(EUs?nr'e+cN%<2Yg1[m(Oa&8X]C^q\8o"R5?]J6#]dbTMKsjkL?4I/3b^3h
%q_VL#$)`Y5g`)QId>Pb_BN-:4NT-p:gfrh%9[=/3PnVu'g+8:7Pk#HC0).jkDMT.HOSdV@n7SV9kHA#m#m3Mli_)ZMRI*"XbS/'3
%l+ET,:BRpU'imZqT,o>=YpF.a2TuVd6]lQ#:UI$%&@ukhXmpsjCGM1O_0q3jYiC[-ma9N%_@nVoF4R'`?Z0m]B\Vj]`]h1JQ!m6j
%HIKLfN\q+Ze8i:j0*h@V*!D[0nhU\#6`borgg<:`bGf8%nc<p#K4jZkp)A/Ir>B``pF<rd&f@q[YQp-V^n;i$!Q,ER-TFh-?,g<I
%Am76#eD)c(86/TW%>M,0?Nr$ZiND&:&lhs"mHV@r?ZBe/I:jP4:#p85q$:=rFaXQTF3iY#M@,@-m4+i4=5H^!LI(NU::6_t:3/i^
%et3mK#2f5ue*LamoX)\I-SW?O@U&<,a5r%!.t#i!ol-(W?mBB%4`k('%*oZ_5O6L3SbK82,7N7.:um0/e7iep$dO]73/GD3^WR'-
%6\0KJ=+Z=Y_2)Pcd4pk>V/,rM<\kC:E54/IWfCaN"Y;A5,<.eY_8mnZ0H5Fp8OP4>CrN_XMI:d%id"OhWZ5j6&71Ia^d;[80BVkc
%gIOJehUg2<W/cQ(j&5gEcOSE$Tp`Q]<%`l<6%Vn*#@rUe@7+f>1P+oC2S>1*q`V;\`.V"QW66FY(W?67Fd'*hnZ=#<qpqTf8._7t
%,+GWmbTJm=I0_2m*\i8sC@,/*$Eq(gTId?CX$@ZR&501V#g!53iA$q-k@%[`TJl`LgJV=pUV,9]Q?@ge4'Z1f4$3%(<H%nF\n'At
%6D4pXjHR"mjf6*Z.rI:MAUF[OPlY/@+!8_%N-_RsXb$PGhYeg&^])s)FOu@U0[6kqgqF-k?r-O%S6DNgG>?24H%`93[lEfP47?8g
%"VJ$&;GeNg;U\r3R9;BG4O2+'ko5jdUQu_>Jl*OJ't[?aHtkd*g;u+\TLobjQch^k3g*J/QKpJ5Btf=Z/ND**ZQ6E/['>OWFInLT
%"/=.q\fu6;R30:`:$2XWlZ:#*em,t)<jjdEXB"XCZ1j0Q4K,#rIINVH(Sfnr'S<UB65BY!4m^55_^I1lq8*p97h*K_C\+gd9!m!f
%b-0)G=)s%s(-Q1gc-aWo:4Y95eK5T_*[0shl]Pi+O[Ip5/6cpk1.d='8n`7#8A$\GUCSDeA*2^STO'SP;DBW%A_!d>E_K`p`M*]#
%[&Q`,-QJK2E2mLNc8=!RbT"Xl,D3^JS'Khi%sr<<I/^=SkssO.c-jK_\6ilL$&9@=?!m)`BD;J3*97]f:DG&YH)aL=1;SNVDHAQ[
%$<&XO=s/Rm%?A*#/8A`\8+\W"(p.>R2.g?Yie]4b-b`FGidt$YQ#drF%pd^7L[gU%IfE''B(&7A#nL.RQR\>3M@tfLMDa898FNE:
%43Vn@7HE&I66=4.P3'HqaZG["%e?fUFIh[6eZnZ@KW(<@V5Sut?dHC=CPO5g/W7]'=;!De^S4:*!hI.sZ`9OI%hs-hKnJJ'`EK9p
%.Xc9c$1h^Y.$_lB!:$l'>e2n2,t9^P^%3$IV+"Sq85dls[jOp.'*["GAP4!):MJ)^b,%PO4Mi6"OD2tEP_>?G^Qa3K;Sb1r*-cpN
%OI]nJ_IYTk3ZM.%rcNkFWOK]H*.V1GQ]nHX([t?.7b8,1EU'8Z6T@Tf@L8s'%Me))3+bKrQ<uNZF@4ThU+-Y?Kj^eal=0s,2-PEY
%%VO@=/]`<Y=sKA]gW6@2h;3+bPjnU-9j:t,OJc,#>W?[?fqfaRUr=!"#H$SH9=cDYcI#V+n%oZBZr%=>H/\ruH3OH26"q\PAJ7lL
%P'omO$J)3"X?Zrh7A9jjalfLel((i/lIZPK#6Xs7?C_n8daQM*W2(+eDJ1H&[Z[1Tj'2Uh+kXmNjrr;;OfI5o]V)[7O/a+3a@2Yg
%fYtA9S!s5WBp2s2;m6B&S_#/ur`1ZKs+-`6`b:5Sk>26#K5BCidiZJYcC]a(^IGrFKbh9F-Ahg'/"Gel)<u7;LK=&>6g6DV"Zf0!
%pj$N,f`p4R)7q92Xbp9f=%s0QD('hIiiQ-#bZ:NRJ=\?>i:r?0/hJp$ViL<(+Za3V\6c@cUc;0[FRP(kH`&/FnUp:,f23eVBu@XW
%#sEE+)MQ<B&g'pd]'(Pi5h?8o`h(#SelHu:_%2QI'e,l?cWl>nJko@E\&H!F5B:^^kF)8T?0TI9>98L;4P&N=$4Uo:`[^FYTgN)A
%4--+"q1YF^2a?<r*r:#OM]I^tR"kV:B4HFaH`,Y(3!'Skdp(,KIBHTrDJ%,aOR&&sS'&WnC<"L#gCK%C$=cK;AoLo(%Y0K;M!?<h
%qoejtL4cFbNs3oM:GoRD3Y%rWNLl0#]\2S#nC(k>o%]#>b)JDr%W]fHFRlo^X^8[5f""1pY*M^k`Ci0<T?!-9U7HlWLT#%S+[6eW
%V%4deh]t]fa"@O?Xped#7a93N+aOi3o&LRnNQ+9iK8\OM``mqZ94TVtltesi*]6)E+;G8bCfM:*.c(q\#16_&c.4L?*S4C[p0gph
%+q)91*AL;?#YT2BV%aV6J.to9?jf9hILZ<H^,%;4mY;=`WX.uE+ZbE(<(EO\q&u?8(.W:?=<8rt7.Rf#AJA2.VUG9KUu>iY-4e@k
%]H3$37L>C((&]\6AJp=%`*f6<0Qhe7pC(@#QBW3RPW=\4Q!3-"Z$];$J^n0`JFNBUg6l(iWBd_Z_nB#rY`?lAgL`mkR9[2hY!7u0
%f:\heTL4=2U[j0BS@?+7<(b7/YkYR\/!V/^!5bIHLO>N`qdlJhJssH(_Y3j;^3f4dG3q;/S`N\QjEQ+T2m+XQGf>a-,(TT.<!.LL
%<tF.IIJj8.^(?q%7?;`8ms6M"c,V"S%=EH*[Pj>_f98e.5CggFa!\A'I])<"HU9XmPH/?GZ.42W*-0Wcl2mP39_IGX0Yr`"1*a'D
%k;2DVATBsRR4$K_Qu"p;HPcYrhRUPVeG@)<<3"/O-D+-\7k-Usnn:=L2a\C8B@Kis<Z$(Fl*!Vt3;d8j)"]3Pnn>"oQeCXKl7(LN
%<HhGj4c9X\1C"ue"`j\7*I[<g^PE*Z-p48__V_dd5`(P:E-m3>h&@n2Q/d&9+4*I85BCs45GI\LD68gSNHlH+bG,5pD:2UmiA[^5
%0NUb/!6/AI7SmobZD0(6H9_*li>M;&m_7Gbj`/N_J-Wq.!Be(K-Is+a&f)C*'Wm(YOb9Cq@9d+H%9Z;%7uli>6#O(l+;6c<MjXe4
%LUE+MRH,.EgKj#RE06XGGjhiBSpIQ.)i[^BG+pk=,nd5DW.VP+QmaJrG*0k.bO'.'#%U'M=jQKQ3Z$?m\"IRp-9<#LjCU@-qtmd*
%0u7\W(Wi5?.#bm8Y76KWFE/(edBoI:n!hf;:3MhAR0Iu3GgKZe;0E2Y9b,l(AYJT\l;Ern(ZO2F%#C*VR/u)uFme$Vc9ZnW-9<#L
%jCU@-qtn#o6Zo/$<>^1Y(u`:t<3AV"3Na.?0\9EV3HFq??_W;pNH:o%S0.H9(2i1KjP+h@?uV6th0ADWD2IZc)KPE&_TJpH&>dDf
%I;NZ='6P"\dC^2,qQDh\+nb\uMIF#P0b1Vc.?0Et-4]"HPM6%]NeceBU!g<XhWFNC0^Hr-U=,c6BBH-JMlDFnhF[-t.RQiIaqWBc
%!E#"eY>;I">.n/%(g9LCnpC6JDYJ"tVd\g,#H`c]6cVPoh?=[]BJ7mF>NK?WC2[*]<(!cHW&t_[n-Tf9h+"udq'BK(ZZHbRL((9u
%9"j)^jSYJ3MXb*Qs18*9?;5S^]6=A?5O90g1I8TN\l;7IZo9<sJ1m94aa8!2kL^XpgE%=r$1dP[78hQC?2E2F#;aG*pY,:;,YKF\
%'JFbsP`A-Z<dEfT;go`UKr5R'Tl-B'oe%eTb(8U#*PFLW3k%.dSQm$RB31[DekG3e1%jl_[t]0>r26DJG+l8.F38[*::a)<2B$!U
%@o9\?N9c2)q*HE"_SWsA@[OaIi5/9nW#nj8G`^qhcK[jc(pXlsE-`i3pm%Y-%e&H*8p:V3Ot[h\"B[@a3d#`V%Lns+ggSqr]56Zu
%1(Lam.+8!15PQ5TTgK>%lpU7i8kt-tK+$d)>$I$IHbDpH"3$`)+:,0>n&N91FYF9G:sUFd1iDXs<D;^Z7gm26+TtG>X9GSa,0dp,
%$6t$MEfYA!:`&b47Br1A"8,PEDhk+'k^e1m$WK.1moMuJFi%1A'F.9rPW,IP%,J2&G31FO@AV7\+_t97Zbu%)5nfKi>Hp(UB,)He
%SuRL1Hh`-A^Ro5][E-I\FiU#CcSdcu*2i,*YSDPRa(<C)]WS\(O^hEnH[s`0Q4V_:gRhochI7[)0[53ghZM#iRZcR'hXr7)MIQ(G
%2,u2oiM<FZ1\F2s*^,Pjs*/;XcF?*rY3e[qFc=gZ8I1A2^To`T"73[WrBh*]YMpBebu-?ELr"d+:=*s/?MrTqbfLdm!HnmSKfho(
%1u?#3D3SIX\A?qO91Qn(D6nIZep[].n$D,HK+A>U3>"QWcFML5.e$Q<:"Is^k8,_Hpo>,g?JV88RP^U\>.]F$7/XPVe/K%DJV&dZ
%Zg`aILhWL@Uk*i`;fkm@6@$&='/n&RR0OQjWHDba2Thl\A3a^WE[AD,a2aG**o1H9h!]n%*7f8`hFXJD3bhfnS`#N^q;-uMjZ8-`
%R5SsXn?7'3GotaD8/C#*KaX[\g8ALNQ\<4f[<q78dP8/t.4&Z_[Ujcl.roK]@dF[rQ\#^Ul:XfkRU7m4>AD+?H?9HMNq4g6e6k=l
%8uAKZ\@UNMSOsWo6O6BA:RdYq,4db3@NBF`;5gqVopgE3%W`PVYgd.!!Js@M2h.ADB%-K;C:*'.:$D2%dMtq>F^c21PC&F:Jn[db
%C"8JoJ8+`]&SY_E#kRIW7%W>ErEf0eHFShnh+%'UA<bu)K1<ubO8X!XF`ah?[1%V@nlsi^.;^nBnfY@>i*;G<^XkX1naT86WT:-&
%G09`iV+cMU-i?$AS'L-IM9#e3Ll?1Cq^7:X#^J9t1hg1!0]WOaX=qHP&:\iM!,RFai2MH5)_<inp0qC=OOTj\36NM`O[gL\Hk'B2
%>Y'<#6jk\S,RNMY)'4_LaXPSrm,S7jb[Ho&bkC<T[mf]B@Bdh]9=7q_Ol\];fMkT%b`>*[Y4:7=;X5YPJbI=C^cocX07+-m=tOQ6
%O^sDNZX>Ju_du1\Va*2Hhrg_2K5mmV.NM_)YMOFY%0RG"kCE7&N-_+m0LA&e[TSDkQ$-,(p,.N(8kUJ+DDfZgkV.U(Uf!=tEm>4V
%mA'.!M#1RR655;o!>@m+pD2on37+amVi<JpkQP+<bS"[:,#D<B'(,qB&JU5>6q@UmJQH/>plLpK-7kkJfrg<n%":oQ.dRR$^$^%A
%igIFX%'E)6W.9n$a)MZl/4s"_QF-u?@`O)Oa-Gp@iRk&UP%p]UOfi-.P,Skp<AAenQ2>I6:@:Q`:2&s3HnTD#:,ReJF&Y6a@Fu`2
%^.?Y?)V%Pp6B7HW8J.s5$,]h\[qPiGW@8X&)TjWIj>5?Y\l\1?qoJRZ[\?pdT:Xtk:ZKC!%$=!=*[MGKNFVn?eIEpe#"7K/Mi1om
%\%#YkV[:+#N!u72ct;N*%k,/W5pF67kNX93PK"QT4F7SmZ01P^[O!(L1Sr<W(g+[=+q4U_6EkFBAb1tI^ANclrT/ht^eA9fK(.NZ
%VQV^f21eWa52*1KIQ=pF:!]m*A_q8?p@+@@Gp^Ds*2U//)MO#.qe61kLL2)lE.>;f7mnD+,4bb:JK8msMN9nEFs`9\K76QL<554?
%eGH1.h*[Ao:2$od(.h9Zp>Np,W#<eq=HCXs#jtaeF;Y\dZZ7-Dq0Ur(c,Y$I,\\6HqTo"QRaD<%HU"uQT<'b6Q5[X3iR]Z<(HWmd
%X%/f/UpJesp;Jod`'(Hr(*#jhI"5!*2[^s\Ji?qY\)l2b(D>qe)86,u5,L"En<@oPVGK3;Je"Hp]a\mc\%q8@'#?434(aN/io$G:
%:Sa`b89okaX:GLW?m_WIa3Be--Sp&c8m8%N`8cM6q+9WJAg6Mkgrugd2S7h5?;F[WB0+`64&9h/<Negj*g^"4Mc0]/4V=Y,NGGX0
%Hsq!"55N$?Kcp^9eHSdD:A@5+&:&e%$=ejdoSe_)0hB%>k6^"ph^+l5IL'>hFag>3D&4OC7jqRh2qOXn$(ln)Xk:Z-N.n#:T/pHJ
%jBM@,53d/8/TOCjfSMGZP.%)lA?i-9ib6hJc[^'Kl]a4LB;PHJV_iUEe2_?R%\e8;ZIqe>(jm*_5=d!Xi:_;W)qG=r1m5><OEu`&
%>Rj-kg-++tEl%]!LiO_2,`Suh&`24()RYn#<7@a8X56Tn8CGVLDHp(/8pnf.`CuX?2#CP.ASF;AV6$%.@5bPrjqDnO%M!(C@m@aO
%,4/daE.b\=F?K4t,cR2;ZBJ[(l:"6e(I4%9Oki;K$+&#JKF*!3LK<lkWJ0:J6K3=@R;E6ET-r97lqRWH8%-N1Cqhs,V3C8_LB$p;
%A'Z!QNi(Jr0k\>.'s>C2P2lR[p3MmB$#-a:<GKOCj&JL2F[;s`JLHn2>u1Y.aiFigFX't19C>ZqA4Rjs)$t:<%dX")cq7CM/nfj%
%Q%'8-^pi05A+Nf".mm=Bi2TAg_L.N&)k+ZASbAu'%Z=ErT[8m.*mI`N/OCEk!F9cT6cVA#NO%j=@2[Acp!FQVRhJ6&SG2gaX#8!(
%fIW)Mk%(iB,,a[`MB5Y4N?:=Mnc9t,HA08T$5u-9YZ.!9F-A5W#NTcOIbaa%cc(cP#??IJj@,tYqdd0?14096(@+Ajkh*EU8Krj8
%(>qtUa++[VA.1qN8!JO`8MV!)Jp4;OF7b=REXGN4/V<dH[`KkY$&^';4SjYdd7KK(]#r<I7q)s.U;4aGR7f,'[>4k,Fo6.J<in!l
%QrD7_j+bd]"'`_i)2!1H:<XS&5HeA!i[:Hj[6JqX,U__E?gqNHOsGU]ZMS/u$:^PG%/LS0^3tZYTKolclP#RgH1e)/S$\F-FVl`Q
%[>-`Z[:hd=-<[0H8+\>OV@&f(2X/WJE$CGQF/'C2)-nMS5ZcX2k#,d@<%UnSi/ShA3UCV)@pV##L>tteq%cQOVReIJ=Z&LG\%,#X
%HjPu^@88Zn?ApM"9;&?PAG!P5k+AN%=3$ejS#"#kOpKA&O=)&=Ng8f_IalUO1U.HhZ)6!tULh);U.CX\raBH1!TUo"]K(it]Q,(K
%Yb>K8F$7(0)$I-`lf.k;T?Ci8o:@k)CR&_NR,F(_m/@TncTM-r0_UPW^@HgF+G`Ad1F8?,Ki4a*B4!l`C,`Z,E0HS57.6X/QFUEr
%/]^ZfDWT]WOH$ICf2bgs]ArRT![D9'F]'?jZ$H-+@F-V\h9fmhett":"tKhm;/5P*\(SXgE%</=`C7.S/D%ohiI%AR+RA+J$JHsb
%d$<)SFVK5Y6.2^483=no;d=LJT$,c;A!lX*$cFK$_X81*FG.P+!KTCJ%m+.]:$VAP7o:L:CC2YVKWVKq\<pM(IsLdu/;DM8GkeYr
%9WB0d=;LpKdNSZNH"_3+^k,@\^+m0*Zo:gq7B985ULb-CRM6Q+,83$r>i_1n=..sl^>a(07D^Ug>&</a@^ct^9GjdnN>G>D$7s&;
%a*a$GG[GE^dEd$B->)Wkf<Ge:.V]Z-rNie+P/MADF6_Zr=Xk6U;M(Y,$>TG=U3$o+n.OlN=tg_V'QdL&[J?6d1l7@e)L)5FP&lef
%pF7=g(tC"9pnYtE`j./K.OobmgSt^nk>c7gM5"aPNiSnNJOQJlfbneo^?FXff*K4aNRhneKYLn9=\to]m!X&cII*OB=Ze\6^hU'r
%j%(t_HdKo'N/a)rULP[1c!nSQC>25pNu4T,OjP)3daeR[W:]t32fG\V'_FmSD5oL![sGM#qsh>f4-2!Pb;kEX2q]JEIUShI$)=Rn
%'@4mOfYKSBW2@j(XH`g+U@H#lCVcCLBPMc$]?MQp%J2<a'lu)5mDq0K$nk`2!!jSXSKfuV9ftPT>*XHiKs;<pX2&bM6-fp\dNQT:
%Cf)`^L[SitlUBa]praX@,3a>4\;Nf'4r['gN6,M"W<m'LK\Y'[UI@je$6b8d:/bXDU,K,Q,Rc!E**`dM4Z4bVL[(Be`p%`S@T&jN
%b7d8TH0"khHhm*6N+bZ9BZ4DdH2-L[IFeh"o!UBj=r9g$+^B;@?Olfl.1f-(^+:Ikb7J(l7MrIi0.2,Ajl%XBbS:e".V:3)n$OI)
%%c?`#Sb"k&\p*YEa("d:h#Q`+0M6;XSls2dSgd8")/Or%MOufP)ITeAYgG0`U_rMNK9KjYW96hE)A)>g@`[i8BLSq:UXiF$k;J8r
%$.Su!&U1J/L-&&3%raP`Z;Nience#>,_V:7cd[UYNA;1UGF,lc5q6j6]=Uqi>ZQ%V9_Bm"\3K$V(_OD%ge#X,W+3p^ZnQ*M@$*]<
%.4M/C]a7))a]2!/\WSG=k*\VH[0oEWgU_Kk?,j6'3u]XqfLU6;eRP2M$-Tr8o*n?p`ae;(OH&cY?a\D`Qp'p4MY_gF*BeHJqpHMG
%Ek+Ig\Re6G=lci]gnl*NIf//+q<d)>E24A9NC5<j-=uhrL9RW;]#?dp!Mt[]1tnQ"#^:&FJ-=1XHLpESrQWQT2NmZe.^0O*X4`%X
%]A?Bh[dP5;[q"%eT9g>%Q2Yoh)CT_j-(8O)]TbBTn06uW(\FCIBid#LHSASa4;e5R</-8so%T!F0+c?`*1#7XF`&6eY]``EcZZ#(
%WfG9h$mR/Ac=HG"-WDGV6Zq:#"o$qm5&lGZ7F2egV3EmLLdSCjAQ]p8>!AV95iL+QVmjPmh3gS+q,0[GRFF9^^p-/GLT4\?b31kM
%M)E]j`402'C?FK1^<D^i:c1FmV\M7&TYgAErdC<j&Kn2X/lj8@(`/@`:1]f#'7DkTn\A1X0dEVOVFN=TFm553bG!%P)('Yp^W2.p
%7Y^"k+Do9PO^s%l/VNNtTTs/.9W@Q2(%@bT#G>1E8Y^rBZ=XN'rIK9g&6E]$DG5UY<)*o#lle:`DBG]GbRf]?co)qMjG]cOcI_:j
%7C#G\G^?F2VMg!p;3t\emn6%f29P'nhN?Mn0.8FrWhjZHlRG<\RK7guZBXBrE;^d,aO2Jm2Fk>NnCL1Dc.e$RqiDpOk-\@H&;96.
%VPft0aHM`_YTI;4_$sIB)S<BP!H`BZ)Gs\khj7AGf8+/8lub,l1.0fsd.FN_=YsH"dY-\8MCOa9NgYLmQYd-+`!ZVe/0b%S>[Hb/
%mb-o>YH)Gf;+-8(3`_E@)6[$UD/8&\GL@,&M*T+Y4TH@*US%gpY3\sJU2]50W=7J6&t$tJDuBg>G-fIA'm]4;3ka#nKi@Ks;.g%V
%Bu4,_fQY+s>J`l8qJn!%Ta/.WgnR9rs6OM\Ub4-OmIN[8,c#nng^OnK2c0"1Nm[2J@\G(RVs0lAS-_UgMmPcRjC%?ubAn%R&D<&D
%/roRoRN[Ne/Vo0fki?ZERo3Le-+>#eFD*;*W+*4;V\;MjP%o$TUROD74>$3X1f0R\og;_@nRRFn-6[)Fs*,$.Qq999/]ao#TnC*K
%DG"o2p>c]O1V&]Cer]=ldU+'_D[o'X=S#FQI`c>KFrJejGLjA#\Ctcq<lH\\.'mF&#];V,^2NWfd5tGhZdCC!Z@USsfOsTC3HGtS
%H<oa)Mi6A\Z"mU9g/=V!\PJl%/f9^T&<FHMal"@%`OO(6F.9\6aUOl1<h#T-@W,438LG$7XGr(^l+"gZ8P<=9lpf<djM-:u[%,%Y
%mKN-jKFS2&\LGNuhXgA'NjD]WC6P1Er6(jFHD?QO8uL&.VD2e609djZ@Bm.SIM4qUIU?6*s6J83Rof@K-8Gs#.,nrE&rX,6da<6q
%e=f2jjFBGD(_0t-r#dT?KA:V2IeV##ET7h>,W79D4JaSNbcX"g/`%WI:p$#[HB>&4P.U#Ah(%k8G*#/8;`dZen?U\5Aa%=4f$a'L
%.GU\V!X9&BL%N[n#3f"t:BM5%UkurOl3@/:m0'f$dpSW!T"@u9\o<,&lE:K0Ct^X0)B'UL<#Y2`_jZ<*98UNJ/<*CKIF:NQ1G(OA
%jUM[7`:)g]pN=ZqCNe[h`3d<%UbgDrXq>A8FB4Zu!82ZD"Dal;V(GEin^%eP]&B;,RPJkMFXiDo"(+?Xc^5HRUI_'2*@(]<e=*3,
%Ogp1"WKr`[Fp,PHU+]OkS3<i`YOEJP9JnM]KD8D:2*4uGUp,2k&Ufn?J+D"rXHsQ2VQgc;<3N=tQ]qH3%e0\][V@]kr&hgL+>KS\
%=n1<V'>19_G=(Y37)DZZFs!R[LkJ[0_R,AnU.8>^+DNjPeEmQb.\0s/PF[Lp$7Q:&K%'4AC3r?C.tN5Gj59&Ll1A@H-1=f&;:*[H
%?4a[@MGBhp?I?UQq%pDR3"o^[C%4TC7@L+/fW?5_X1KRNE9&tVmA+Agh=86RK6/4G005A%0603`H;,&Hh+CTPj5U(N?5`C7N"G/b
%GkLuS6lo`6-o6)Yo*cu)+(4!G1a0FY`aUUaYf?;F7[S";"&uBWFjPICoTO405p+h&?#).cP9]*V)tq/IPNpdJA7u:)_P`77Lh'dq
%Ok,VroDC=H;aN6RncPnT]P7n&E?0b!nKH5ud=M['E'2Dejn`Yi>&M_W9)U8]=;6<NZt92(qk49X@;r@2+s1-.`sF8BFXr(X>W&&b
%>,p)m(YtFSh0kZsDDZ*_k,g-D4h?X2$':CUe:bJ=Bp547RnHb8_V?3WP+.d/O;ZR7"pVbp,sDE!`@"GELr#;Ka`Hj,nN-B.UOO!N
%0%stE/C#l'Fb;\#'8bWmSK-FLb?COsDK^K]]WIJk[lt2DgP2/Mq=:p)bTD=e9>9fNJ/o6/F,QB=OC8(KLqs=`Lp.+K9+JjS4_l".
%K6>)TaM!]$q_^j/#fYV.n+\cCK$1\d3Q%YDMu`AB%?u%EN)j)`KF<0d?;-q[dunZ_(^WR3Si454%6^h7]PVmg&%:HQWJi_tkTn,q
%FMT";*m:n`4%@g0E[2Jc1f7bV&1(H!j0@E#D!cEV[LJ9H)H1kHYPg'YjBr+g;$\!/BW^S79ealq,4Ya2I3YN@k\,WcM'j,T-%=6?
%P2I>-.VtUO5K`q:e287N\CHe]/;5$DgTKM_%BU/W#-uC44knIV(X+EZ&c7YWHnW\W[<9fos.iBXetZ-][*7+ZII21hWp46q0qi8=
%fstLBA*r<]BpiKif:u!-Jqe7K(^]&C#WV\;p#f7J\?)u=`u;(KVrT[QRtQ,[CHop3E=)&!.5*_@Nf5D[&8>X*8HXj+fR2T.WUXD\
%VN,=L?F4b\9-!f:#j*"p:f6F9>LEpA,-u:Q'?p'=(jpl4U>7\F=]taa6g0O5NHlQO-EAob?o><_iFQ#@aI%BOn?OMaOU%9'_@5;=
%X;2HJ!VVGkg>[)!S!.&o6uC0mrB*At=dsG9*%jjTeLhZ.&R-($:kUV8nPp(R2,tDjS7+7.mA:2RSGVZ4#]pU%Iie%m&gBq@P)]F@
%Asi3c&ipl4]$5(hbb>tS%O(okm]-hfK:jXL:1ENa!h[6&Y7eibbjkT\iUnn"P@"gN:i5!4L1OSq2+dCXF4n<gYKh^Q)TkuDk5sn_
%G(R%8HLWfVL?TMf4CkeeH(<j&WocX9@K,:\A0]%D.R![?V=;(D?#>B)+7&0uoGBJZ%u6n5ghb14<&$KED!;]#O*h^g_5nc4?YR1(
%'?iq:>be_XN7oH:@amtAcZXTeLiPBlAEk>AVj;>0<`>%o0hf8"S[#/L,@N.KIel1K6ae&RoRS_/L6&m5cgS"XQEa$4*b/aJ0g)O#
%-99;`)\L0H6i'bWDZ3#=f&gt8F\OQn2_A`+ei.!j>,8du?G?Zmf"sfr@+$J[GRsBk-K-')LE1"tQeAL3Q`5C#`T52X[\H`9\U5,R
%;QIsZ'=]:F3ea8%>Gu_pK;m$:1Gkc;E]JU_4,Tc0Mc"Q926Bdo=Q@qWS_A)SP0suU:4\XS"PelV6Xd)q^QA3U1H,s[\ZGOCg@Qr1
%O#UdSkH;dX;NnBrg7$`udSiMfLgf,JKcPqiFgJg<dPrKnHB=+i@mW4YQ`Mn\=`WOJ0H4LnD?\=o0koNa>VgT#T:"-3$>XcJX=JGB
%OqXJ!-genL3nre[@@Kc($QUgd4MtW'0c<JChVu.a0h!$X7s"";1*#p)7jXEE[CIQp!Y^Qd=#HXO&YL@:>7Gih4gSmX-miufRgg_[
%2!g$fL13+/.4"1NBOe#ITeSLb2o*\0ooJO=DT)>./@n:'CXH$',JEkX:Z]X2ku_B6rS]R`bI58>Lkju?i?=:g+l73R0*6$`D>lsf
%5^<s`M?""r4e5u_XkG0AQQ3WkF/\87U.TFNGQ"p[_Q+)B_tc!NHC?!nJ;j_j79\!;:'-HhGdf\KpMBKq5#hM#54'qTB[o5!mO1&`
%_tKrZWN-bb_nio[P\REC.q=((H*lk&juRZj=+X`OU0!kU2l'Z9?I?IGd'QA,?1\O.=euL<`bhIf;;eBK-6;<oV7hG.obJ((CEZaE
%J\/\QkZ6JC_*#(Gk!bKJ11GHi33Gpq=]>#Lb,0n59n_>s"@9A*Rp/I:ZXB6!_qKDa%A_9gp;XD-V@"+)pNoYjB;.%WAQ-IX7`0`@
%dBt(2<P+_IqRu7[_cjoq>%9Oe@nW$9+!&BJWuf;s>K]hpACh*'*5mIeZknItq();Hhb9'E2]VK%U3XKBUU9T8a/Q`W7*P+rfO)S;
%/a&mD,o22j<8kuU3"P7-9U`M&'S;@O3P2(NJ6Trh*881LS^_G`it\#^:N<uN3k&K^`C5@3L>r7tY?25`0R;RE3IT/irXd_0"eY)=
%.:lFH@Mp&eTkRc9on/$fSWT,J.Hq;dm6dLg#t9Khppip'/ip)Qr:MkFH=70l68t^/_%I0;OX*V+T\:=>,Ss4rCV]o65/'S`8jE!!
%>AHud#4BVi.Mpi3JY<VtRqFBos7)g3kb_]9A10?M;B7cK+tb2d8noFEd#'ZUOcqk)p.U%,VK:Ot\p!X_?G'`Sa2W/`SW2\WU&`?6
%*c=<($KDK8<_qe*#6"=s*@l(ilGmMQg4oLkc>0\JL0l3380%W7INh9M>SU-q!l=T9-DQ?^85P4^H.[bmTfRbt/77QLX7+q:FoNE9
%#Bf>]rU&@Sq+lM>q&fY+qmX?9m;ILGnaYL$s5P4$r$.g3gUDZ,qFFMf8mbdk5"[U1Hf'1&mMV1kS)KbE&dkc+Od/1TgdAi?MJ-p&
%Jd'P>g(dOTb'$400Eo]=6@rTu]*eg@X1Am#$'$HdD73kSRj[\!XM2EH0!Nlk+9j7HhX%Hi[nHFt&ZDHJ"P?#H)(hd!JspgbqK)t]
%i8_bQg/lEa[>#T2BsUqC,@6^eQF2UT&<58M8FcrG:]LiN$4O'U^:P=Z^[%tOfj^r"17,&DB?6Pn+W5X#IkB[I01"1kjFgqJJB_&o
%4dTf+5COZSD?8!S&_ik6Al+B9%MTh5c)*p%7D"?MBJuoZTJ'c`C:JK#Ic"jj'E^MgJA8hgkl.qn-LDVOT<k@N4E?55BqY4$DY:sU
%O(ucpE?&a`YFMA`$,rT!68itJ&-1pm27"BJm5uP"`_\?<EmqG0JO)"_Y+0suGlaCH;[XPl:oI#>jp'\nE>VqXiW=<1G1`.JXgZkj
%&OBT74rdE/]SqM/dtCs,]Td*erj+%j=0&TA2!TKJWdQ$2.n``bouBVZ4L8(+=T,t_!fl!5f<"rL:]EV!6T.)RU1Bf@Wp/!t5JR^E
%<XTa(9eX:ZjpOgLQ54b8lJg1>\nlW')BhK9l)E6g&DI"L*5-"i;UdK4D;Yf8@J'HB$7XnFDe`4O<NMfiqc[+<Gli`^<l<itP&t,5
%p:W7#->jL%2K9:++"&mBMV1a*2GTMaNd;Rm.'5-,E:q*MY#Rh3YeD)C5Hc#,^[nN49E,b4/]MUsOZhIaB*+Rc.-`^Ql>JBQ:gD.&
%Zoed7;7jC'-*>qG+P9`[09O2!m3a9Y<=BP\n+3D8J]^q\akSsI^[nP*M"VaFSh,P(:N#[bf>3B4H/3SMQ!IK].OhH(#q7m:O"c$`
%`_o&:Fl&_/TN;Ic&S_g1\$$NF[plj:1fgaM2=-c-GK8umSJAnQQ<m16-TGWn!X[&JfZb0;f^5nT40)W;g/g"P<kRa+Se$3PHG,Bf
%iSqCth:#\j'f6?8?]Z(*!f^qYODW!<.\/Oob2ZdCSlbADP5f#2&Huga_i"Nl=oM6@XZ,mOmZi69'[C\3ES-i_iUfYh@]D(*,F^O4
%>?*E&7<>:f%Vp+S$g07,q0qO9K?$Ao^7aTp%sjla[N=[Ycl:[s.TulX4[.%rOr\VU.?i7G+erdYj":O\4M5RjPMM^sNV"F_8F)pB
%L8GR,cbB)nVq1sU;T_>tX5bpKb2#pDrQD.:rZ*a@d32f$3o.IOMVfF+SO8)J-H@tWH%7"7pS]^r\T>O(n2MO^X%lHP@-.ea/-sV=
%<JtT)/B-1tL%3lVZ,>.HWe5q)"_*XIY<*?[`gHd"2o[7&G!pO1qsl.Q9rq8+alhTr.@/4Abm`TlCA5f4cG=[0%"b2LJ;$)Yf<&&F
%HscJ?E?\RZ4,PP)?E"9jU,<S>q.56f`IQ7c2IOrdlQ&2[3RI<WBKq7ZDIV"ARF+>ur2%5`!&7+\/VJ/:27XQuLu>X&YPn<<a9X?K
%?%9CMM\I@E,Pm1NV*H3dE':c8)1b+*nqn*$qH7f):6cSBjA^$U5ORp?32)0#!j*iX*^s491XAOhOMaU0KYjj7?m)1'htM8.S8&u7
%.6UBoqY6oHC:i8t`Ai/aSDZC)qfX(5'J?-rSqj@(#4P#YQk@B!2V]>?]WU)\:"OUI8=N$:oc;1*R<M?.n*1a`N*qHe;0PB93W59?
%U`r>mB2CQi_[I_e[Tli9$9Lh-1;@Kk1u:=J3IucjVmU@>`ZJWG-I=9kLe]4t?/`L+n)ldh..5GT&5Yb&[hd"YFtlnunmr2J*^L!*
%%2NJnV_JN6J5X=tou.(P3-ePdJV2RSm"d?#3Ds0k82GlB-,b=q'js:7L=<9J`l*h246CJ@H=Ah+Zol,'k0T8??S9P?G&O;(fO0G2
%r%7efKS]I=,;=F[\;\gibHPin9QJG7)\Hc$jZh4KgV;@DC"poV'+Unk71q@,$"A\EM4$fgEZN$f&StZ(#``lh_:>(VlV7Aqm<qC-
%^oU1!?^1^[7q$<%<ZRdiQ\//okqJK\4MXX$(@U&1T2BFYL5pBc4lDZZV:j/TBFTA#1D/*Xa=HT6^A03:1om])42GUr>E+3\cQM,"
%#EdV$D-lg2WI>D:CM6[Y42EQ\UDVAqRYX)A6tFF-,;rBAGRJge*-1!q+SOn"^J8ap["B$NWutZPTmF+kQh7RM\rjdJ]B_=>/XlD)
%TpBCcb&KT&qLb2pdRi^9X]BHLFgJu*0_CB86QS6N':.)MHmj:Y3!l83kH<YA)$o>,lR!p*#>86U.EpYAMtteh0?3pOOg(MhYf-$/
%?FQHs7/7::l',W3\k*"YIYdCWb[CQDdIdPWNldN.?SDL3AfT>kjo,hN+&uZ=cpe:9H%nTbd^5]kJgaX4$j2fqaD+uF3*>/OS.jFC
%!LETNe.b;WT-!3MH!&F/nqi=eE#@j3DP#;@&9#M<J^RT&8r+9?ph.Ch9Po*$gsm9M"Z(<=,u`fVZW=&9P.U[\7j$B=BsD>&b'XnI
%F\Q5p,fpm_:@MeY85=_RA>b:sr+Cu@e>X*,r_asa"t[%hGqCGn@Dj/%-#0ms-AeDO$Zh&NfZCP?jrSC7LWMVK''<.\n6hJO/qL12
%hsZPSYpY7Z'b$ESmseg\nscT8Rhgs@J?cr`/TNDs:[iA9mleI(-[s^WM3C@2B;(e<*?8rUrs+pEs./LA&Wm0*;B0cT_jP0(Es$l^
%i39X6-Lq-Y]`%A-.N'3o^66=Kn.NMKH%;I%!V=MfY2'"KjEZ5dG\u;ta91e[`*\tY3e;oX@%#+9nADF>hZNZBmijpXUaM"[@nq=c
%i8D_@n'!%(nc0>cZ(g2V5%`dder)ZUqUfL/'$Or#&UAn`LpnAkpp[AD/M@9DCWRI`bJT,9X>b+JE'r,e[R03kAHiYlbfl5mj55_p
%55[+\=]H[O)4sI-L_AUDJJIB?!=$n_?q</Z%s8kVUeBit2"i08<]iqVmUj.1QdM"W*h,4LQr2;S'SnK-rV^&Rr0@pN2\q]KTBj3,
%X[\rKI]Hh1d;ua#02^G,=Y+".C3Z,<S,2kJqfW*pA#5RH&:iD/=n!s/8[fc*$$94O@3<BAflmBD_@KBeO^/eU]G%(/H+_q$/_4h/
%8P5EA0Lk?@dGLD7e1Kd(*p=$((&<-,;3j"r'@J)"6b+[U?m"ZlMb1&8q'[5&-\;c[d.S5GAkE#G']X>!&'WnI?unM7GZH63)nA1^
%\Tc1\qjibM7sLHZWDDr]%h'5)ECDMJP@,tAE6T+HmjM9AEl,er'<J58kg\u(Y;?/fi%j3aAH!8oaS?7]:L\b"*'S7HR-\5L<YiDr
%iP5!GbI6BP4eEC!4AIge/??h7]Qp,N0[-NP_)R5sA\;\n3$Gl2k*WlJjMnm2T:XW^pM[P,F?#Q@gHoVK;VDlCXY-==T5/(R%CA:W
%iTld_<2=)6]c"6&l4\'<h/NDRpF2XDp2Ng3U!]]/f>%!HBfs"]#Me$g^e_]dW6dlB+n-[S[d[*:@`=B>/kcrH-3nGA95NM&]s=*W
%o7"\"*THYspI_5qP,sc<=[nXB5Ak`3qmi!G5N1Fm#k^5!ngIpo`e/Dc51.L.S;_[P2J_`-deO@PDPEpoMh[iO$Au7#=U&?\'U0mc
%PmDW3glT(WM:&1HV5B/3p[*FP&FRKU;)4C4/_okdj*JB'NsSmSKme&FKVGQ@%,sl)k1QVOib6ge>olkOK<eLB^f>Kc"S]Zl7)1@-
%G<X=S.=@8AV_f!*nA2*9[f#.+XN`m"?6p[@d"t>=etP!mX>4uE`pN%A`LaNR_gJ%qBo->Rhjl+aVW(%.EbrkVAeG^D-Ar(;?RHHE
%F9*cF)8r"j_<];PG'*S1]"ralL(>c0ZS(FjcP,'3H7$+B?6aVVGH8FgSkCJ^[bcquc[!@X"eE\Zg(5,,(QM\'fd*[kca/JEV"&[O
%6Nd4S9j&`QZGt^k,kpo0C,,-0.r8Ydc.(25$eM%$b:6e0'8,lhho!na,H;tj_6H7V%I+os'p''sYZ9C]<!acR#bAU@8WrA=!]MLj
%mh3lAa!ZXcVMqO&WK'tUg>[C>'h!#(dgVGIJ-J77MK4eb>YWuCd)49FAb._rA+^Bq=_4=#W2oh<AB^]9=`r?Ag2^mBCiJ8s4V_uS
%h_s3cQ0l.I'CP'@105Q:\!AU(+(1h;m>J3c<4Bq?4%lBC9)C<g.-&V4?`Crhpn:D4#G!OOI_t(@T^M?6c4`q[EdU(/:.(h4-_0h%
%%Em5P&D]J"L?8@ZY]"u>UIDa>ES0i;W%A$Sb+fNb#i!eifdWEn\"r>&XB#d=e+WE#7&mK\a%i_`[k@(*GO8j.c_<ZT<N<uSR`!_.
%jPZoKZQ.B'J.VmrfJ0`)lk2tN\>1?0lX3/%H(D'60!AZ@jmoTaI-CL^eora;\XLJcX_1M,+O<(p'$fT)<Xuq]d,h70a`*Y-+(IoC
%9aj6<1[+]nV;p6&\GJlq=)6Qo?SCB0%`1%T4#t.T9e_o0ph?-&LuD.o]$-s01HleRKY&C`c4fV1dq&XbS>Ai"gS46=ceHPI#UtfS
%Z*ghtOPW+;A%Q?QCT8$Um^ka1QPPV1_l."t]W]A,_udi??)"n5]?p]7!W7/M!s1ME\_U+O*/E+M\N5gp7'Q(36um_p4?D-rBVO)C
%/3,L-cISJ8BJRU(+aC<87&Nj?nrk)EMo8J@L/4b,+'-uo-74nfNcb5#E'omC)`>J"F2/emUI'Sl31A^%3cJcE>`Kd@CTl?nD8D7#
%)d2>Ug*M?"h1o_==5@EGDl^i<4/+$<L^_&D0Xrm*M*/S;aR@@8)R3mRXB^'1mQkoJW.;Cq&VrPhU@X'86KJ13&j.F8N&nR*c:]'i
%p*r5k#_/Bb.K`a*P#\ar,:nVdXaVk#W%Q-FKl7T=>t;rPJN)4R@K=`j)No,`XNB,5hOPW"esuh9D5BPMUk%8fR_l4Y(:8=4[uJAr
%.DtJ):P%,"UmaCDEbku=;cs!fVG8dHS5X\]/nc)q#DmN=*Tr@d8]\l=CQ<$#N*#WQhbQ%?i4>u+Y1Pk!JANd';.DQiH"IWUAqn3Y
%i+oj!+eAgJlM=8rhPk-LMR9/1AY^9,_7Ds*pk(K&?hhh)\-\D^a"L6O$"l:U'ooKp(amP1PbPZMIV8H!j&.WX:>b?4o7Soj'he-7
%hc_V&Bb+s:*XafSZ+$[8C>t\-AYE^I)m)jAgrm@=F#^ar_!lMXa,RFc@=UZF?bFt;?4S:@ZCK#la?2/j(acO]Zl;0<c^]9^XJ_rg
%5R<^*^QZ^4I>/a*oL([o;;)&?aHgkAVc$VmRnclUE*jODKe.e8#Jq:p7!=E1UPIq:]*Za1>usDA_2,2(Wjslp(Np1&)S;i!L]bt1
%CDbo&VM"O.)Wu!p$Wc6"=_=<0ku\uUC3j&!i@Qk7deN":7Xk<E"2FYUqg\FR5Q&Fba8bh]cX4D.i7J"fa5?phT7?k1+91(k5QC5R
%huDr]s7+RmO+6p,P'DKQVuEU'huEW'TDnc/T7;1adsq>Vrrdoqbocl[f73Phs7V4TrGTYD.(]~>
%AI9_PrivateDataEnd
