%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: vector_425.eps
%%Creator: Adobe Illustrator(R) 16.0
%%For: Max
%%CreationDate: 10/31/2015
%%BoundingBox: 0 0 1016 1039
%%HiResBoundingBox: 0 0 1015.6602 1038.4664
%%CropBox: 0 0 1015.6602 1038.4664
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 16.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 16.0.0 x682 R agm 4.6676 ct 5.2591%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.3-c011 66.145661, 2012/02/06-14:56:27        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Basic RGB</rdf:li>
            </rdf:Alt>
         </dc:title>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:CreatorTool>Adobe Illustrator CS6 (Windows)</xmp:CreatorTool>
         <xmp:CreateDate>2015-10-31T13:24:37+02:00</xmp:CreateDate>
         <xmp:ModifyDate>2015-10-31T13:24:38+02:00</xmp:ModifyDate>
         <xmp:MetadataDate>2015-10-31T13:24:38+02:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>252</xmpGImg:width>
                  <xmpGImg:height>256</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgBAAD8AwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A7dqev+afMfmG88veUp49&#xA;NsdKIi1rzJJGtwyXDAN9UtIX/dtKqspd3qqVpxriqW6x5U8yWF9YWWh+b9cm1u6PqNLeNBPZpBGy&#xA;rNJLH9V9KoElVj5IXoaNtirtG8qeZb+9vrTW/Nuuw63ZuXWa0aGGzkgkdlhkjj+qiGrCOrRcpCla&#xA;Ft8VTTSte8zeXvMFn5c823Cala6qWj0PzFHEsBknRS7Wt3En7tJiikxslFeh2B2xVnOKuxVKvNus&#xA;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&#xA;GVepYq//2Q==</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#">
         <xmpMM:OriginalDocumentID>uuid:9E3E5C9A8C81DB118734DB58FDDE4BA7</xmpMM:OriginalDocumentID>
         <xmpMM:DocumentID>xmp.did:9F88B549AE7FE5118276DA8C8848CBCD</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:9F88B549AE7FE5118276DA8C8848CBCD</xmpMM:InstanceID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:9E88B549AE7FE5118276DA8C8848CBCD</stRef:instanceID>
            <stRef:documentID>xmp.did:9E88B549AE7FE5118276DA8C8848CBCD</stRef:documentID>
            <stRef:originalDocumentID>uuid:9E3E5C9A8C81DB118734DB58FDDE4BA7</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:3F831BD7736BE5118671ECE021D48F9D</stEvt:instanceID>
                  <stEvt:when>2015-10-05T18:14:57+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:9F88B549AE7FE5118276DA8C8848CBCD</stEvt:instanceID>
                  <stEvt:when>2015-10-31T13:24:38+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/">
         <illustrator:StartupProfile>Basic RGB</illustrator:StartupProfile>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>1175.000000</stDim:w>
            <stDim:h>1175.000000</stDim:h>
            <stDim:unit>Points</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>White</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Black</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Red</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Yellow</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Green</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Cyan</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Blue</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Magenta</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=193 G=39 B=45</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>193</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>45</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=28 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>28</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=241 G=90 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>241</xmpG:red>
                           <xmpG:green>90</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=247 G=147 B=30</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>247</xmpG:red>
                           <xmpG:green>147</xmpG:green>
                           <xmpG:blue>30</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=251 G=176 B=59</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>251</xmpG:red>
                           <xmpG:green>176</xmpG:green>
                           <xmpG:blue>59</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=252 G=238 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>252</xmpG:red>
                           <xmpG:green>238</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=217 G=224 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>217</xmpG:red>
                           <xmpG:green>224</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=198 B=63</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>198</xmpG:green>
                           <xmpG:blue>63</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=57 G=181 B=74</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>57</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>74</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=146 B=69</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>146</xmpG:green>
                           <xmpG:blue>69</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=104 B=55</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>104</xmpG:green>
                           <xmpG:blue>55</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=34 G=181 B=115</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>34</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>115</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=169 B=157</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>169</xmpG:green>
                           <xmpG:blue>157</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=41 G=171 B=226</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>41</xmpG:red>
                           <xmpG:green>171</xmpG:green>
                           <xmpG:blue>226</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=113 B=188</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>113</xmpG:green>
                           <xmpG:blue>188</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=46 G=49 B=146</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>46</xmpG:red>
                           <xmpG:green>49</xmpG:green>
                           <xmpG:blue>146</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=27 G=20 B=100</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>27</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>100</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=45 B=145</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>45</xmpG:green>
                           <xmpG:blue>145</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=147 G=39 B=143</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>147</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>143</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=158 G=0 B=93</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>158</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>93</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=212 G=20 B=90</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>212</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>90</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=30 B=121</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>30</xmpG:green>
                           <xmpG:blue>121</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=199 G=178 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>199</xmpG:red>
                           <xmpG:green>178</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=134 B=117</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>134</xmpG:green>
                           <xmpG:blue>117</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=115 G=99 B=87</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>115</xmpG:red>
                           <xmpG:green>99</xmpG:green>
                           <xmpG:blue>87</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=83 G=71 B=65</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>83</xmpG:red>
                           <xmpG:green>71</xmpG:green>
                           <xmpG:blue>65</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=198 G=156 B=109</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>198</xmpG:red>
                           <xmpG:green>156</xmpG:green>
                           <xmpG:blue>109</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=166 G=124 B=82</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>166</xmpG:red>
                           <xmpG:green>124</xmpG:green>
                           <xmpG:blue>82</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=98 B=57</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>98</xmpG:green>
                           <xmpG:blue>57</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=117 G=76 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>117</xmpG:red>
                           <xmpG:green>76</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=96 G=56 B=19</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>96</xmpG:red>
                           <xmpG:green>56</xmpG:green>
                           <xmpG:blue>19</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=66 G=33 B=11</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>66</xmpG:red>
                           <xmpG:green>33</xmpG:green>
                           <xmpG:blue>11</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Cold</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=56 M=0 Y=20 K=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>101</xmpG:red>
                           <xmpG:green>200</xmpG:green>
                           <xmpG:blue>208</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=51 M=43 Y=0 K=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>131</xmpG:red>
                           <xmpG:green>139</xmpG:green>
                           <xmpG:blue>197</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=26 M=41 Y=0 K=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>186</xmpG:red>
                           <xmpG:green>155</xmpG:green>
                           <xmpG:blue>201</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Grays</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=0 B=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=26 G=26 B=26</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>26</xmpG:red>
                           <xmpG:green>26</xmpG:green>
                           <xmpG:blue>26</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=51 G=51 B=51</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>51</xmpG:red>
                           <xmpG:green>51</xmpG:green>
                           <xmpG:blue>51</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=77 G=77 B=77</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>77</xmpG:red>
                           <xmpG:green>77</xmpG:green>
                           <xmpG:blue>77</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=102 B=102</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>102</xmpG:green>
                           <xmpG:blue>102</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=128 G=128 B=128</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>128</xmpG:red>
                           <xmpG:green>128</xmpG:green>
                           <xmpG:blue>128</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=153 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>153</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=179 G=179 B=179</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>179</xmpG:red>
                           <xmpG:green>179</xmpG:green>
                           <xmpG:blue>179</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=204 G=204 B=204</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>204</xmpG:red>
                           <xmpG:green>204</xmpG:green>
                           <xmpG:blue>204</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=230 G=230 B=230</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>230</xmpG:red>
                           <xmpG:green>230</xmpG:green>
                           <xmpG:blue>230</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=242 G=242 B=242</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>242</xmpG:red>
                           <xmpG:green>242</xmpG:green>
                           <xmpG:blue>242</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <pdf:Producer>Adobe PDF library 10.01</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -1038.47 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 1038.47 li
1015.66 1038.47 li
1015.66 0 li
cp
clp
256.605 1035.46 mo
253.274 1026.24 li
250.375 1026.24 li
255.002 1038.25 li
258.208 1038.25 li
262.835 1026.24 li
259.936 1026.24 li
256.605 1035.46 li
cp
false sop
/0 
[/DeviceRGB] /CSA add_res
.0980392 .0941176 .0941176 rgb
f
263.948 1038.25 mo
266.504 1038.25 li
266.504 1026.24 li
263.948 1026.24 li
263.948 1038.25 li
cp
f
271.076 1029.52 mo
271.076 1028.8 271.688 1028.33 272.769 1028.33 cv
273.993 1028.33 275.289 1028.74 276.262 1029.64 cv
277.684 1027.73 li
276.496 1026.64 274.911 1026.06 273.002 1026.06 cv
270.176 1026.06 268.447 1027.72 268.447 1029.72 cv
268.447 1034.23 275.361 1032.78 275.361 1034.87 cv
275.361 1035.57 274.695 1036.2 273.272 1036.2 cv
271.616 1036.2 270.302 1035.44 269.456 1034.56 cv
268.051 1036.56 li
269.186 1037.69 270.842 1038.47 273.165 1038.47 cv
276.388 1038.47 277.972 1036.81 277.972 1034.61 cv
277.972 1030.13 271.076 1031.41 271.076 1029.52 cv
cp
f
279.679 1038.25 mo
282.236 1038.25 li
282.236 1026.24 li
279.679 1026.24 li
279.679 1038.25 li
cp
f
290.318 1036.2 mo
288.086 1036.2 286.663 1034.49 286.663 1032.25 cv
286.663 1030 288.086 1028.31 290.318 1028.31 cv
292.533 1028.31 293.956 1030 293.956 1032.25 cv
293.956 1034.49 292.533 1036.2 290.318 1036.2 cv
cp
290.318 1026.04 mo
286.681 1026.04 284.035 1028.64 284.035 1032.25 cv
284.035 1035.87 286.681 1038.47 290.318 1038.47 cv
293.938 1038.47 296.584 1035.87 296.584 1032.25 cv
296.584 1028.64 293.938 1026.04 290.318 1026.04 cv
cp
f
306.573 1026.24 mo
306.573 1033.79 li
301.01 1026.24 li
298.381 1026.24 li
298.381 1038.25 li
300.938 1038.25 li
300.938 1030.42 li
306.663 1038.25 li
309.13 1038.25 li
309.13 1026.24 li
306.573 1026.24 li
cp
f
212.528 924.76 mo
228.25 946.089 253.258 958.776 279.752 958.776 cv
306.247 958.776 331.255 946.089 346.977 924.76 cv
331.254 903.431 306.245 890.745 279.752 890.745 cv
253.26 890.745 228.251 903.431 212.528 924.76 cv
cp
279.752 963.276 mo
251.266 963.276 224.411 949.364 207.916 926.06 cv
206.996 924.76 li
207.916 923.46 li
224.413 900.157 251.268 886.245 279.752 886.245 cv
308.237 886.245 335.092 900.157 351.589 923.46 cv
352.509 924.76 li
351.589 926.06 li
335.094 949.364 308.239 963.276 279.752 963.276 cv
cp
f
279.752 890.745 mo
260.992 890.745 245.729 906.004 245.729 924.76 cv
245.729 943.516 260.992 958.776 279.752 958.776 cv
298.511 958.776 313.773 943.516 313.773 924.76 cv
313.773 906.004 298.511 890.745 279.752 890.745 cv
cp
279.752 963.276 mo
258.511 963.276 241.229 945.998 241.229 924.76 cv
241.229 903.523 258.511 886.245 279.752 886.245 cv
300.993 886.245 318.273 903.523 318.273 924.76 cv
318.273 945.998 300.993 963.276 279.752 963.276 cv
cp
f
279.751 914.696 mo
274.201 914.696 269.685 919.21 269.685 924.76 cv
269.685 930.309 274.201 934.824 279.751 934.824 cv
285.302 934.824 289.817 930.309 289.817 924.76 cv
289.817 919.21 285.302 914.696 279.751 914.696 cv
cp
279.751 939.324 mo
271.72 939.324 265.185 932.791 265.185 924.76 cv
265.185 916.729 271.72 910.196 279.751 910.196 cv
287.783 910.196 294.317 916.729 294.317 924.76 cv
294.317 932.791 287.783 939.324 279.751 939.324 cv
cp
f
273.523 903.295 mo
272.267 898.975 li
274.7 898.267 277.219 897.909 279.752 897.909 cv
279.752 902.409 li
277.644 902.409 275.548 902.708 273.523 903.295 cv
cp
f
257.397 924.764 mo
252.897 924.764 li
252.897 914.78 258.39 905.681 267.232 901.018 cv
269.331 904.999 li
261.97 908.88 257.397 916.455 257.397 924.764 cv
cp
f
30.7129 175.989 mo
27.3994 175.989 li
27.3994 173.252 li
30.7129 173.252 li
31.7031 173.252 32.2432 173.864 32.2432 174.621 cv
32.2432 175.485 31.667 175.989 30.7129 175.989 cv
cp
27.3994 168.481 mo
30.6045 168.481 li
31.4688 168.481 32.0088 169.003 32.0088 169.741 cv
32.0088 170.516 31.4688 171.001 30.6045 171.001 cv
27.3994 171.001 li
27.3994 168.481 li
cp
32.5488 172.046 mo
33.6836 171.812 34.6201 170.786 34.6201 169.291 cv
34.6201 167.688 33.4492 166.23 31.1631 166.23 cv
24.8428 166.23 li
24.8428 178.24 li
31.3604 178.24 li
33.665 178.24 34.8535 176.799 34.8535 174.981 cv
34.8535 173.486 33.8457 172.244 32.5488 172.046 cv
cp
f
39.874 173.955 mo
41.7461 168.787 li
43.6191 173.955 li
39.874 173.955 li
cp
40.1436 166.23 mo
35.5166 178.24 li
38.415 178.24 li
39.1719 176.205 li
44.3213 176.205 li
45.0771 178.24 li
47.9766 178.24 li
43.3486 166.23 li
40.1436 166.23 li
cp
f
51.5557 166.23 mo
48.9805 166.23 li
48.9805 178.24 li
56.6328 178.24 li
56.6328 175.989 li
51.5557 175.989 li
51.5557 166.23 li
cp
f
61.4561 173.955 mo
63.3281 168.787 li
65.2012 173.955 li
61.4561 173.955 li
cp
61.7256 166.23 mo
57.0986 178.24 li
59.9971 178.24 li
60.7539 176.205 li
65.9033 176.205 li
66.6592 178.24 li
69.5586 178.24 li
64.9307 166.23 li
61.7256 166.23 li
cp
f
78.8633 173.774 mo
73.2998 166.23 li
70.6709 166.23 li
70.6709 178.24 li
73.2275 178.24 li
73.2275 170.407 li
78.9531 178.24 li
81.4199 178.24 li
81.4199 166.23 li
78.8633 166.23 li
78.8633 173.774 li
cp
f
89.626 168.301 mo
90.8506 168.301 91.9307 169.075 92.4355 170.047 cv
94.6318 168.967 li
93.7852 167.455 92.2549 166.032 89.626 166.032 cv
86.0068 166.032 83.2168 168.535 83.2168 172.244 cv
83.2168 175.935 86.0068 178.456 89.626 178.456 cv
92.2549 178.456 93.7852 176.998 94.6318 175.503 cv
92.4355 174.44 li
91.9307 175.413 90.8506 176.187 89.626 176.187 cv
87.4297 176.187 85.8447 174.513 85.8447 172.244 cv
85.8447 169.975 87.4297 168.301 89.626 168.301 cv
cp
f
104.657 168.481 mo
104.657 166.23 li
96.1582 166.23 li
96.1582 178.24 li
104.657 178.24 li
104.657 175.989 li
98.7148 175.989 li
98.7148 173.252 li
104.531 173.252 li
104.531 171.001 li
98.7148 171.001 li
98.7148 168.481 li
104.657 168.481 li
cp
f
47.5347 54.6973 mo
49.3428 65.2139 55.6631 74.6294 64.7456 80.3232 cv
73.8271 74.6348 80.1465 65.2188 81.9551 54.6973 cv
76.6636 51.9795 70.7466 50.5493 64.7451 50.5493 cv
58.7432 50.5493 52.8262 51.9795 47.5347 54.6973 cv
cp
64.7446 85.5483 mo
63.6182 84.8965 li
52.2822 78.3364 44.5161 66.6958 42.8433 53.7578 cv
42.6494 52.2583 li
43.9648 51.5122 li
50.2651 47.9385 57.4512 46.0493 64.7451 46.0493 cv
72.0391 46.0493 79.2246 47.9385 85.5249 51.5122 cv
86.8403 52.2583 li
86.6465 53.7578 li
84.9727 66.7026 77.2065 78.3433 65.8711 84.897 cv
64.7446 85.5483 li
cp
f
44.7451 10.5493 mo
23.9351 10.5493 7.00488 27.4839 7.00488 48.2993 cv
7.00488 61.8857 14.353 74.481 26.1821 81.1709 cv
27.5015 81.917 li
27.3062 83.4194 li
27.0996 85.0059 26.9951 86.6475 26.9951 88.2993 cv
26.9951 109.115 43.9297 126.049 64.7451 126.049 cv
85.5659 126.049 102.505 109.115 102.505 88.2993 cv
102.505 86.6465 102.4 85.0049 102.194 83.4199 cv
101.998 81.917 li
103.317 81.1709 li
115.146 74.481 122.495 61.8853 122.495 48.2993 cv
122.495 27.4839 105.561 10.5493 84.7451 10.5493 cv
78.1089 10.5493 71.5825 12.2949 65.8716 15.5972 cv
64.7451 16.2485 li
63.6191 15.5972 li
57.9072 12.2949 51.3809 10.5493 44.7451 10.5493 cv
cp
64.7451 130.549 mo
41.4482 130.549 22.4951 111.596 22.4951 88.2993 cv
22.4951 86.9648 22.5566 85.6348 22.6777 84.3281 cv
10.1973 76.6729 2.50488 63.0044 2.50488 48.2993 cv
2.50488 25.0024 21.4536 6.04932 44.7451 6.04932 cv
51.7383 6.04932 58.6245 7.78271 64.7451 11.0732 cv
70.8652 7.78271 77.7515 6.04932 84.7451 6.04932 cv
108.042 6.04932 126.995 25.0024 126.995 48.2993 cv
126.995 63.0044 119.303 76.6729 106.822 84.3281 cv
106.943 85.6338 107.005 86.9644 107.005 88.2993 cv
107.005 111.596 88.0474 130.549 64.7451 130.549 cv
cp
f
55.6777 89.1167 mo
54.5137 84.77 li
55.7563 84.4375 56.9966 84.0352 58.1997 83.5747 cv
59.8081 87.7778 li
58.4595 88.2935 57.0698 88.7441 55.6777 89.1167 cv
cp
34.2085 89.2183 mo
32.813 88.8589 31.4189 88.4219 30.0659 87.9189 cv
31.6333 83.7012 li
32.8413 84.1499 34.085 84.54 35.3306 84.8608 cv
34.2085 89.2183 li
cp
47.1172 90.4844 mo
46.8682 85.9912 li
48.1587 85.9194 49.4556 85.7808 50.7231 85.5781 cv
51.4331 90.0215 li
50.0137 90.2485 48.562 90.4043 47.1172 90.4844 cv
cp
42.7793 90.5049 mo
41.3364 90.438 39.8838 90.2964 38.4614 90.083 cv
39.1284 85.6328 li
40.3994 85.8232 41.6973 85.9502 42.9873 86.0098 cv
42.7793 90.5049 li
cp
f
37.5996 62.0859 mo
34.3633 58.96 li
35.4961 57.7866 36.7109 56.6665 37.9746 55.6304 cv
40.8281 59.1099 li
39.6987 60.0361 38.6123 61.0376 37.5996 62.0859 cv
cp
32.2783 69.0532 mo
28.4102 66.7534 li
29.2441 65.3511 30.1694 63.9814 31.1606 62.6841 cv
34.7368 65.4155 li
33.8506 66.5757 33.0234 67.7993 32.2783 69.0532 cv
cp
28.7129 77.0537 mo
24.416 75.7158 li
24.9009 74.1587 25.4849 72.6118 26.1514 71.1172 cv
30.2607 72.9502 li
29.666 74.2837 29.145 75.6646 28.7129 77.0537 cv
cp
f
91.9019 62.0898 mo
90.8862 61.0386 89.8003 60.0371 88.6738 59.1133 cv
91.5273 55.6338 li
92.7876 56.6675 94.0024 57.7881 95.1382 58.9639 cv
91.9019 62.0898 li
cp
97.2231 69.0576 mo
96.479 67.8057 95.6519 66.5815 94.7646 65.4189 cv
98.3418 62.6885 li
99.334 63.9888 100.259 65.3584 101.091 66.7588 cv
97.2231 69.0576 li
cp
100.789 77.061 mo
100.354 75.6685 99.8335 74.2871 99.2402 72.9546 cv
103.351 71.1235 li
104.015 72.6157 104.599 74.1631 105.084 75.7222 cv
100.789 77.061 li
cp
f
73.8057 89.1138 mo
72.415 88.7407 71.0259 88.2896 69.6768 87.7729 cv
71.2852 83.5708 li
72.4902 84.0317 73.7305 84.4346 74.9717 84.7671 cv
73.8057 89.1138 li
cp
95.2783 89.2212 mo
94.1563 84.8638 li
95.4043 84.542 96.6489 84.1523 97.855 83.7046 cv
99.4204 87.9233 li
98.0698 88.4248 96.6763 88.8613 95.2783 89.2212 cv
cp
82.3643 90.4844 mo
80.9204 90.4033 79.4692 90.2471 78.0508 90.02 cv
78.7617 85.5767 li
80.0288 85.7793 81.3257 85.9189 82.6172 85.9912 cv
82.3643 90.4844 li
cp
86.7031 90.5049 mo
86.4971 86.0098 li
87.7871 85.9507 89.0859 85.8242 90.3574 85.6343 cv
91.0225 90.0845 li
89.5996 90.2974 88.1465 90.4385 86.7031 90.5049 cv
cp
f
72.2539 22.4624 mo
71.2373 21.3813 70.1465 20.3496 69.0122 19.3965 cv
71.9067 15.9512 li
73.1758 17.0176 74.3955 18.1709 75.5322 19.3794 cv
72.2539 22.4624 li
cp
77.5522 29.6226 mo
76.8169 28.3354 75.9966 27.0786 75.1147 25.8867 cv
78.7319 23.21 li
79.7188 24.5435 80.6362 25.9497 81.4595 27.3892 cv
77.5522 29.6226 li
cp
81.0205 37.8188 mo
80.6094 36.3955 80.1084 34.9819 79.5308 33.6172 cv
83.6753 31.8633 li
84.3223 33.3926 84.8838 34.9761 85.3438 36.5708 cv
81.0205 37.8188 li
cp
82.4595 46.6064 mo
82.3931 45.1187 82.2388 43.6255 82.0005 42.1689 cv
86.4409 41.4424 li
86.708 43.0723 86.8809 44.7427 86.9546 46.4063 cv
82.4595 46.6064 li
cp
f
57.2466 22.457 mo
53.9692 19.373 li
55.105 18.166 56.3252 17.0127 57.5952 15.9458 cv
60.4897 19.3921 li
59.3535 20.3462 58.2622 21.3774 57.2466 22.457 cv
cp
51.9487 29.6133 mo
48.0415 27.3818 li
48.8628 25.9438 49.7808 24.5376 50.77 23.2017 cv
54.3862 25.8804 li
53.502 27.0737 52.6821 28.3296 51.9487 29.6133 cv
cp
48.4785 37.8091 mo
44.1553 36.5591 li
44.6157 34.9663 45.1777 33.3833 45.8252 31.8545 cv
49.9688 33.6084 li
49.3911 34.9741 48.8896 36.3872 48.4785 37.8091 cv
cp
47.0376 46.5933 mo
42.5425 46.3921 li
42.6167 44.7305 42.79 43.0605 43.0571 41.4292 cv
47.4976 42.1558 li
47.2593 43.6143 47.1045 45.1069 47.0376 46.5933 cv
cp
f
435.565 175.99 mo
433.387 175.99 li
433.387 168.481 li
435.583 168.481 li
438.032 168.481 439.329 170.12 439.329 172.226 cv
439.329 174.279 437.942 175.99 435.565 175.99 cv
cp
435.565 166.23 mo
430.83 166.23 li
430.83 178.24 li
435.583 178.24 li
439.329 178.24 441.939 175.863 441.939 172.226 cv
441.939 168.625 439.329 166.23 435.565 166.23 cv
cp
f
443.754 178.24 mo
452.252 178.24 li
452.252 175.99 li
446.311 175.99 li
446.311 173.252 li
452.126 173.252 li
452.126 171.001 li
446.311 171.001 li
446.311 168.481 li
452.252 168.481 li
452.252 166.23 li
443.754 166.23 li
443.754 178.24 li
cp
f
459.217 175.449 mo
455.886 166.23 li
452.987 166.23 li
457.614 178.24 li
460.819 178.24 li
465.447 166.23 li
462.548 166.23 li
459.217 175.449 li
cp
f
466.56 178.24 mo
475.058 178.24 li
475.058 175.99 li
469.116 175.99 li
469.116 173.252 li
474.932 173.252 li
474.932 171.001 li
469.116 171.001 li
469.116 168.481 li
475.058 168.481 li
475.058 166.23 li
466.56 166.23 li
466.56 178.24 li
cp
f
479.52 166.23 mo
476.945 166.23 li
476.945 178.24 li
484.597 178.24 li
484.597 175.99 li
479.52 175.99 li
479.52 166.23 li
cp
f
491.545 176.187 mo
489.313 176.187 487.89 174.477 487.89 172.245 cv
487.89 169.994 489.313 168.301 491.545 168.301 cv
493.76 168.301 495.182 169.994 495.182 172.245 cv
495.182 174.477 493.76 176.187 491.545 176.187 cv
cp
491.545 166.033 mo
487.908 166.033 485.261 168.625 485.261 172.245 cv
485.261 175.863 487.908 178.456 491.545 178.456 cv
495.164 178.456 497.811 175.863 497.811 172.245 cv
497.811 168.625 495.164 166.033 491.545 166.033 cv
cp
f
504.865 171.704 mo
502.164 171.704 li
502.164 168.481 li
504.865 168.481 li
505.873 168.481 506.647 169.093 506.647 170.101 cv
506.647 171.092 505.873 171.704 504.865 171.704 cv
cp
505.225 166.23 mo
499.607 166.23 li
499.607 178.24 li
502.164 178.24 li
502.164 173.955 li
505.225 173.955 li
507.818 173.955 509.258 172.19 509.258 170.101 cv
509.258 167.995 507.836 166.23 505.225 166.23 cv
cp
f
517.357 173.739 mo
514.44 166.23 li
510.857 166.23 li
510.857 178.24 li
513.414 178.24 li
513.414 169.58 li
516.799 178.24 li
517.916 178.24 li
521.301 169.58 li
521.301 178.24 li
523.875 178.24 li
523.875 166.23 li
520.273 166.23 li
517.357 173.739 li
cp
f
526.248 178.24 mo
534.746 178.24 li
534.746 175.99 li
528.805 175.99 li
528.805 173.252 li
534.62 173.252 li
534.62 171.001 li
528.805 171.001 li
528.805 168.481 li
534.746 168.481 li
534.746 166.23 li
526.248 166.23 li
526.248 178.24 li
cp
f
544.934 173.775 mo
539.37 166.23 li
536.741 166.23 li
536.741 178.24 li
539.298 178.24 li
539.298 170.408 li
545.023 178.24 li
547.49 178.24 li
547.49 166.23 li
544.934 166.23 li
544.934 173.775 li
cp
f
549.125 166.23 mo
549.125 168.481 li
552.636 168.481 li
552.636 178.24 li
555.211 178.24 li
555.211 168.481 li
558.703 168.481 li
558.703 166.23 li
549.125 166.23 li
cp
f
489.65 122.495 mo
499.874 122.495 li
505.106 108.768 li
506.227 108.475 li
510.186 107.436 513.999 105.853 517.563 103.769 cv
518.562 103.185 li
531.982 109.193 li
539.21 101.967 li
533.198 88.5444 li
533.784 87.5444 li
535.876 83.9761 537.46 80.1641 538.494 76.2153 cv
538.787 75.0952 li
552.513 69.8623 li
552.517 59.6411 li
538.787 54.4023 li
538.494 53.2822 li
537.464 49.3423 535.879 45.5288 533.783 41.9478 cv
533.199 40.9482 li
539.21 27.5327 li
531.982 20.3022 li
518.561 26.314 li
517.561 25.728 li
514.01 23.647 510.194 22.0645 506.222 21.0244 cv
505.101 20.731 li
499.873 7.00293 li
489.65 7.00293 li
484.42 20.731 li
483.3 21.0244 li
479.33 22.064 475.517 23.6465 471.967 25.7275 cv
470.967 26.314 li
457.545 20.3022 li
450.319 27.5327 li
456.329 40.9492 li
455.743 41.9492 li
453.657 45.5078 452.072 49.3228 451.033 53.2881 cv
450.739 54.4082 li
437.017 59.6382 li
437.017 69.8623 li
450.739 75.0947 li
451.033 76.2134 li
452.076 80.1865 453.661 83.9985 455.742 87.543 cv
456.329 88.543 li
450.319 101.967 li
457.545 109.193 li
470.967 103.185 li
471.967 103.771 li
475.518 105.852 479.331 107.434 483.3 108.475 cv
484.42 108.768 li
489.65 122.495 li
cp
502.974 126.995 mo
486.55 126.995 li
481.033 112.518 li
477.444 111.486 473.979 110.048 470.707 108.231 cv
456.555 114.567 li
444.945 102.958 li
451.281 88.8057 li
449.464 85.5366 448.025 82.0737 446.99 78.4814 cv
432.517 72.9629 li
432.517 56.5376 li
446.989 51.0215 li
448.021 47.4341 449.461 43.9678 451.281 40.689 cv
444.945 26.5435 li
456.555 14.9282 li
470.707 21.2661 li
473.979 19.4502 477.443 18.0122 481.033 16.9805 cv
486.55 2.50293 li
502.975 2.50293 li
508.487 16.9805 li
512.08 18.0122 515.547 19.4502 518.82 21.2666 cv
532.973 14.9282 li
544.585 26.5435 li
538.246 40.6899 li
540.072 43.9839 541.512 47.4482 542.538 51.0171 cv
557.017 56.5425 li
557.013 72.9629 li
542.538 78.4814 li
541.51 82.0562 540.069 85.5195 538.246 88.8047 cv
544.585 102.958 li
532.973 114.567 li
518.82 108.231 li
515.539 110.049 512.074 111.487 508.493 112.518 cv
502.974 126.995 li
cp
.0952911 .0952911 .0952911 rgb
f
498.678 47.4302 mo
497.4 47.1426 496.083 46.9971 494.761 46.9971 cv
494.723 42.4971 li
494.761 42.4971 li
496.414 42.4971 498.064 42.6797 499.666 43.0396 cv
498.678 47.4302 li
cp
487.034 48.7632 mo
485.071 44.7134 li
486.569 43.9878 488.15 43.4312 489.771 43.0591 cv
490.778 47.4448 li
489.486 47.7412 488.227 48.1851 487.034 48.7632 cv
cp
505.796 50.8423 mo
504.754 50.0151 503.621 49.3052 502.428 48.7324 cv
504.375 44.6758 li
505.871 45.3936 507.291 46.2827 508.595 47.3188 cv
505.796 50.8423 li
cp
480.869 53.7007 mo
477.348 50.8979 li
478.383 49.5977 479.566 48.4116 480.862 47.373 cv
483.676 50.8848 li
482.64 51.7144 481.696 52.6616 480.869 53.7007 cv
cp
510.738 57.0029 mo
510.159 55.811 509.444 54.6816 508.613 53.6465 cv
512.123 50.8301 li
513.164 52.1274 514.06 53.5425 514.785 55.0361 cv
510.738 57.0029 li
cp
477.45 60.8164 mo
473.06 59.8242 li
473.427 58.2007 473.979 56.6172 474.7 55.1172 cv
478.756 57.0674 li
478.181 58.2622 477.742 59.5234 477.45 60.8164 cv
cp
512.512 64.6953 mo
512.508 63.3604 512.355 62.0317 512.06 60.7461 cv
516.444 59.7363 li
516.815 61.3481 517.007 63.0117 517.012 64.6807 cv
512.512 64.6953 li
cp
473.069 69.7173 mo
472.701 68.105 472.514 66.4409 472.512 64.7715 cv
477.012 64.7656 li
477.013 66.1011 477.163 67.4302 477.457 68.7163 cv
473.069 69.7173 li
cp
514.847 74.3389 mo
510.786 72.3994 li
511.358 71.2002 511.796 69.9375 512.085 68.646 cv
516.476 69.6294 li
516.113 71.25 515.565 72.8345 514.847 74.3389 cv
cp
477.373 78.6318 mo
476.334 77.332 475.441 75.915 474.718 74.4199 cv
478.77 72.4619 li
479.346 73.6543 480.059 74.7852 480.888 75.8223 cv
477.373 78.6318 li
cp
508.699 82.0957 mo
505.879 78.5889 li
506.913 77.7573 507.855 76.8086 508.68 75.7686 cv
512.207 78.5635 li
511.174 79.8662 509.994 81.0547 508.699 82.0957 cv
cp
485.109 84.8027 mo
483.614 84.0815 482.196 83.1895 480.894 82.1504 cv
483.7 78.6328 li
484.74 79.4624 485.871 80.1743 487.063 80.749 cv
485.109 84.8027 li
cp
499.8 86.4277 mo
498.784 82.0439 li
500.075 81.7451 501.334 81.2988 502.525 80.7183 cv
504.496 84.7642 li
503 85.4927 501.42 86.0522 499.8 86.4277 cv
cp
494.796 87.0005 mo
493.09 87.0005 491.427 86.8145 489.814 86.4478 cv
490.812 82.0601 li
492.1 82.3525 493.428 82.501 494.761 82.501 cv
494.823 85.8457 li
494.801 87.0005 li
494.799 87.0005 494.797 87.0005 494.796 87.0005 cv
cp
f
494.76 34.9951 mo
478.357 34.9951 465.013 48.3442 465.013 64.7529 cv
465.013 81.1572 478.357 94.5029 494.76 94.5029 cv
511.166 94.5029 524.513 81.1572 524.513 64.7529 cv
524.513 48.3442 511.166 34.9951 494.76 34.9951 cv
cp
494.76 99.0029 mo
475.876 99.0029 460.513 83.6387 460.513 64.7529 cv
460.513 45.8633 475.876 30.4951 494.76 30.4951 cv
513.647 30.4951 529.013 45.8633 529.013 64.7529 cv
529.013 83.6387 513.647 99.0029 494.76 99.0029 cv
cp
f
245.139 171.704 mo
242.438 171.704 li
242.438 168.481 li
245.139 168.481 li
246.147 168.481 246.922 169.093 246.922 170.101 cv
246.922 171.092 246.147 171.704 245.139 171.704 cv
cp
245.5 166.23 mo
239.882 166.23 li
239.882 178.24 li
242.438 178.24 li
242.438 173.955 li
245.5 173.955 li
248.092 173.955 249.533 172.19 249.533 170.101 cv
249.533 167.995 248.11 166.23 245.5 166.23 cv
cp
.0980392 .0941176 .0941176 rgb
f
252.896 173.955 mo
254.769 168.788 li
256.642 173.955 li
252.896 173.955 li
cp
253.167 166.23 mo
248.539 178.24 li
251.438 178.24 li
252.194 176.206 li
257.344 176.206 li
258.1 178.24 li
260.999 178.24 li
256.372 166.23 li
253.167 166.23 li
cp
f
262.112 178.24 mo
264.668 178.24 li
264.668 166.23 li
262.112 166.23 li
262.112 178.24 li
cp
f
275.236 173.775 mo
269.672 166.23 li
267.043 166.23 li
267.043 178.24 li
269.6 178.24 li
269.6 170.408 li
275.326 178.24 li
277.792 178.24 li
277.792 166.23 li
275.236 166.23 li
275.236 173.775 li
cp
f
279.427 168.481 mo
282.938 168.481 li
282.938 178.24 li
285.513 178.24 li
285.513 168.481 li
289.005 168.481 li
289.005 166.23 li
279.427 166.23 li
279.427 168.481 li
cp
f
290.641 178.24 mo
293.197 178.24 li
293.197 166.23 li
290.641 166.23 li
290.641 178.24 li
cp
f
303.765 173.775 mo
298.201 166.23 li
295.572 166.23 li
295.572 178.24 li
298.129 178.24 li
298.129 170.408 li
303.854 178.24 li
306.321 178.24 li
306.321 166.23 li
303.765 166.23 li
303.765 173.775 li
cp
f
313.897 171.596 mo
313.897 173.829 li
317.066 173.829 li
317.066 175.269 li
316.58 175.719 315.59 176.187 314.527 176.187 cv
312.331 176.187 310.746 174.513 310.746 172.245 cv
310.746 169.975 312.331 168.301 314.527 168.301 cv
315.788 168.301 316.814 169.021 317.372 169.868 cv
319.479 168.715 li
318.579 167.292 317.012 166.033 314.527 166.033 cv
310.999 166.033 308.118 168.445 308.118 172.245 cv
308.118 176.025 310.999 178.456 314.527 178.456 cv
316.688 178.456 318.398 177.574 319.623 176.206 cv
319.623 171.596 li
313.897 171.596 li
cp
f
238.724 76.4956 mo
320.78 76.4956 li
320.78 29.8491 li
238.724 29.8491 li
238.724 76.4956 li
cp
325.28 80.9956 mo
234.224 80.9956 li
234.224 25.3491 li
325.28 25.3491 li
325.28 80.9956 li
cp
.0952911 .0952911 .0952911 rgb
f
290.761 80.3364 mo
268.34 57.9111 li
253.549 72.7012 li
249.622 68.7744 li
238.065 80.3364 li
234.883 77.1548 li
249.621 62.4102 li
253.549 66.3379 li
268.34 51.5469 li
293.944 77.1548 li
290.761 80.3364 li
cp
f
321.438 80.3364 mo
307.691 66.5869 li
293.944 80.3364 li
290.761 77.1548 li
307.691 60.2227 li
324.621 77.1548 li
321.438 80.3364 li
cp
f
290.222 41.0454 mo
287.709 41.0454 285.666 43.0854 285.666 45.5928 cv
285.666 48.1035 287.709 50.146 290.222 50.146 cv
292.729 50.146 294.769 48.1035 294.769 45.5928 cv
294.769 43.0854 292.729 41.0454 290.222 41.0454 cv
cp
290.222 54.646 mo
285.229 54.646 281.166 50.585 281.166 45.5928 cv
281.166 40.604 285.229 36.5454 290.222 36.5454 cv
295.21 36.5454 299.269 40.604 299.269 45.5928 cv
299.269 50.585 295.21 54.646 290.222 54.646 cv
cp
f
336.101 91.8145 mo
223.404 91.8145 li
223.404 14.5293 li
264.999 14.5293 li
264.999 19.0293 li
227.904 19.0293 li
227.904 87.3145 li
331.601 87.3145 li
331.601 19.0293 li
294.505 19.0293 li
294.505 14.5293 li
336.101 14.5293 li
336.101 91.8145 li
cp
f
222.002 97.1553 mo
337.502 97.1553 li
337.502 91.8188 li
222.002 91.8188 li
222.002 97.1553 li
cp
342.002 101.655 mo
217.502 101.655 li
217.502 87.3188 li
342.002 87.3188 li
342.002 101.655 li
cp
f
267.249 18.5342 mo
292.255 18.5342 li
292.255 15.0342 li
267.249 15.0342 li
267.249 18.5342 li
cp
296.755 23.0342 mo
262.749 23.0342 li
262.749 10.5342 li
296.755 10.5342 li
296.755 23.0342 li
cp
f
282.002 128.641 mo
277.502 128.641 li
277.502 101.373 li
282.002 101.373 li
282.002 128.641 li
cp
f
282.002 12.7842 mo
277.502 12.7842 li
277.502 2.77246 li
282.002 2.77246 li
282.002 12.7842 li
cp
f
312.463 129.768 mo
295.587 100.525 li
299.485 98.2764 li
316.361 127.519 li
312.463 129.768 li
cp
f
247.039 129.769 mo
243.141 127.519 li
260.02 98.2759 li
263.917 100.526 li
247.039 129.769 li
cp
f
898.066 175.99 mo
895.888 175.99 li
895.888 168.481 li
898.085 168.481 li
900.533 168.481 901.829 170.12 901.829 172.226 cv
901.829 174.279 900.442 175.99 898.066 175.99 cv
cp
898.066 166.23 mo
893.331 166.23 li
893.331 178.24 li
898.085 178.24 li
901.829 178.24 904.44 175.863 904.44 172.226 cv
904.44 168.625 901.829 166.23 898.066 166.23 cv
cp
.0980392 .0941176 .0941176 rgb
f
906.255 178.24 mo
914.753 178.24 li
914.753 175.99 li
908.812 175.99 li
908.812 173.252 li
914.628 173.252 li
914.628 171.001 li
908.812 171.001 li
908.812 168.481 li
914.753 168.481 li
914.753 166.23 li
906.255 166.23 li
906.255 178.24 li
cp
f
918.945 169.507 mo
918.945 168.788 919.558 168.319 920.638 168.319 cv
921.862 168.319 923.158 168.733 924.131 169.633 cv
925.554 167.725 li
924.364 166.626 922.78 166.05 920.872 166.05 cv
918.045 166.05 916.316 167.707 916.316 169.706 cv
916.316 174.225 923.23 172.766 923.23 174.855 cv
923.23 175.557 922.563 176.187 921.142 176.187 cv
919.485 176.187 918.171 175.431 917.325 174.549 cv
915.92 176.547 li
917.055 177.682 918.711 178.456 921.034 178.456 cv
924.257 178.456 925.841 176.799 925.841 174.603 cv
925.841 170.12 918.945 171.398 918.945 169.507 cv
cp
f
927.548 178.24 mo
930.104 178.24 li
930.104 166.23 li
927.548 166.23 li
927.548 178.24 li
cp
f
937.684 173.829 mo
940.853 173.829 li
940.853 175.269 li
940.366 175.719 939.376 176.187 938.313 176.187 cv
936.117 176.187 934.532 174.513 934.532 172.245 cv
934.532 169.975 936.117 168.301 938.313 168.301 cv
939.574 168.301 940.601 169.021 941.158 169.868 cv
943.265 168.715 li
942.364 167.292 940.798 166.033 938.313 166.033 cv
934.784 166.033 931.903 168.445 931.903 172.245 cv
931.903 176.025 934.784 178.456 938.313 178.456 cv
940.474 178.456 942.185 177.574 943.409 176.206 cv
943.409 171.596 li
937.684 171.596 li
937.684 173.829 li
cp
f
953.632 166.23 mo
953.632 173.775 li
948.068 166.23 li
945.44 166.23 li
945.44 178.24 li
947.997 178.24 li
947.997 170.408 li
953.722 178.24 li
956.188 178.24 li
956.188 166.23 li
953.632 166.23 li
cp
f
950.506 66.3403 mo
947.324 63.1587 li
981.582 28.8999 li
960.604 7.93115 li
926.355 42.1802 li
923.174 38.9985 li
960.604 1.56787 li
987.947 28.8989 li
950.506 66.3403 li
cp
.0952911 .0952911 .0952911 rgb
f
888.915 127.931 mo
861.572 100.6 li
899.024 63.1582 li
902.206 66.3408 li
867.938 100.6 li
888.915 121.568 li
923.174 87.3086 li
926.355 90.4902 li
888.915 127.931 li
cp
f
878.594 102.863 mo
870.542 94.8125 li
873.724 91.6299 li
881.775 99.6802 li
878.594 102.863 li
cp
f
885.967 95.4912 mo
877.915 87.4404 li
881.097 84.2578 li
889.148 92.3086 li
885.967 95.4912 li
cp
f
893.338 88.1177 mo
885.288 80.0669 li
888.47 76.8853 li
896.52 84.936 li
893.338 88.1177 li
cp
f
900.71 80.7446 mo
892.661 72.6929 li
895.843 69.5112 li
903.892 77.563 li
900.71 80.7446 li
cp
f
937.577 43.8813 mo
929.521 35.8311 li
932.703 32.6484 li
940.759 40.6987 li
937.577 43.8813 li
cp
f
944.949 36.5083 mo
936.896 28.458 li
940.078 25.2754 li
948.131 33.3257 li
944.949 36.5083 li
cp
f
952.324 29.1357 mo
944.269 21.0869 li
947.448 17.9033 li
955.504 25.9521 li
952.324 29.1357 li
cp
f
959.698 21.7632 mo
951.642 13.7139 li
954.821 10.5303 li
962.878 18.5796 li
959.698 21.7632 li
cp
f
966.986 119.049 mo
979.061 119.048 li
979.061 106.974 li
966.986 119.049 li
cp
f
884.285 45.2402 mo
954.911 115.867 li
959.78 110.999 li
889.154 40.3726 li
884.285 45.2402 li
cp
954.911 121.299 mo
954.335 121.299 953.76 121.08 953.32 120.64 cv
879.513 46.8311 li
879.091 46.4092 878.854 45.8369 878.854 45.2402 cv
878.854 44.6436 879.091 44.0708 879.513 43.6489 cv
887.563 35.5996 li
888.442 34.7217 889.866 34.7212 890.745 35.6001 cv
964.553 109.408 li
964.975 109.83 965.212 110.402 965.212 110.999 cv
965.212 111.596 964.975 112.168 964.553 112.59 cv
956.502 120.64 li
956.063 121.08 955.487 121.299 954.911 121.299 cv
cp
f
892.336 37.1909 mo
962.962 107.817 li
967.831 102.949 li
897.203 32.3223 li
892.336 37.1909 li
cp
962.962 113.249 mo
962.386 113.249 961.811 113.029 961.371 112.59 cv
887.563 38.7817 li
886.685 37.9033 886.685 36.479 887.563 35.6001 cv
895.612 27.5493 li
896.456 26.7056 897.95 26.7046 898.794 27.5493 cv
972.604 101.358 li
973.026 101.78 973.264 102.352 973.264 102.949 cv
973.264 103.545 973.026 104.118 972.604 104.54 cv
964.553 112.59 li
964.113 113.029 963.538 113.249 962.962 113.249 cv
cp
f
900.385 29.1401 mo
971.013 99.7661 li
975.88 94.894 li
905.255 24.2686 li
900.385 29.1401 li
cp
971.014 105.199 mo
970.417 105.199 969.845 104.962 969.423 104.54 cv
895.612 30.731 li
894.733 29.8525 894.733 28.4282 895.612 27.5493 cv
903.664 19.4956 li
904.508 18.6519 906.002 18.6509 906.846 19.4956 cv
980.651 93.3022 li
981.53 94.1807 981.53 95.6045 980.652 96.4834 cv
972.605 104.539 li
972.184 104.961 971.611 105.199 971.015 105.199 cv
971.014 105.199 971.014 105.199 971.014 105.199 cv
cp
f
954.911 121.299 mo
954.911 116.799 li
976.811 116.798 li
976.811 94.8931 li
981.311 94.8931 li
981.311 121.298 li
954.911 121.299 li
cp
f
878.645 39.6045 mo
881.103 42.0591 li
902.072 21.0869 li
899.617 18.6328 li
878.645 39.6045 li
cp
881.104 47.4902 mo
880.528 47.4902 879.953 47.271 879.514 46.8325 cv
873.871 41.1978 li
873.448 40.7759 873.211 40.2031 873.211 39.6064 cv
873.211 39.0093 873.448 38.4365 873.87 38.0146 cv
898.025 13.8608 li
898.903 12.9824 900.327 12.981 901.207 13.8604 cv
906.846 19.4951 li
907.268 19.917 907.505 20.4893 907.505 21.0859 cv
907.505 21.6826 907.268 22.2554 906.846 22.6772 cv
882.694 46.8311 li
882.255 47.2705 881.68 47.4902 881.104 47.4902 cv
cp
f
887.543 12.7002 mo
883.581 12.7002 879.855 14.2427 877.051 17.0435 cv
874.25 19.8428 872.708 23.5664 872.708 27.5283 cv
872.708 30.73 873.715 33.7759 875.58 36.3047 cv
896.315 15.5703 li
893.787 13.707 890.743 12.7002 887.543 12.7002 cv
cp
875.461 42.7871 mo
873.87 41.1968 li
870.219 37.5469 868.208 32.6929 868.208 27.5283 cv
868.208 22.3643 870.219 17.5098 873.87 13.8604 cv
877.525 10.21 882.38 8.2002 887.543 8.2002 cv
892.706 8.2002 897.559 10.2104 901.208 13.8608 cv
902.798 15.4521 li
875.461 42.7871 li
cp
f
44.9756 393.265 mo
47.5322 393.265 li
47.5322 381.255 li
44.9756 381.255 li
44.9756 393.265 li
cp
.0980392 .0941176 .0941176 rgb
f
54.6426 391.014 mo
52.4639 391.014 li
52.4639 383.506 li
54.6611 383.506 li
57.1094 383.506 58.4063 385.144 58.4063 387.251 cv
58.4063 389.304 57.0195 391.014 54.6426 391.014 cv
cp
54.6426 381.255 mo
49.9072 381.255 li
49.9072 393.265 li
54.6611 393.265 li
58.4063 393.265 61.0166 390.888 61.0166 387.251 cv
61.0166 383.65 58.4063 381.255 54.6426 381.255 cv
cp
f
62.8311 393.265 mo
71.3301 393.265 li
71.3301 391.014 li
65.3877 391.014 li
65.3877 388.277 li
71.2041 388.277 li
71.2041 386.026 li
65.3877 386.026 li
65.3877 383.506 li
71.3301 383.506 li
71.3301 381.255 li
62.8311 381.255 li
62.8311 393.265 li
cp
f
76.4219 388.979 mo
78.2939 383.812 li
80.167 388.979 li
76.4219 388.979 li
cp
79.8965 381.255 mo
76.6914 381.255 li
72.0645 393.265 li
74.9629 393.265 li
75.7197 391.23 li
80.8691 391.23 li
81.625 393.265 li
84.5244 393.265 li
79.8965 381.255 li
cp
f
64.75 229.54 mo
47.3018 229.54 33.1069 243.733 33.1069 261.18 cv
33.1069 278.628 47.3018 292.823 64.75 292.823 cv
82.1982 292.823 96.3931 278.628 96.3931 261.18 cv
96.3931 243.733 82.1982 229.54 64.75 229.54 cv
cp
64.75 297.323 mo
44.8208 297.323 28.6069 281.109 28.6069 261.18 cv
28.6069 241.252 44.8208 225.04 64.75 225.04 cv
84.6792 225.04 100.893 241.252 100.893 261.18 cv
100.893 281.109 84.6792 297.323 64.75 297.323 cv
cp
.0952911 .0952911 .0952911 rgb
f
74.0352 269.007 mo
64.7505 259.719 li
55.4644 269.007 li
44.5864 258.128 li
47.769 254.946 li
55.4644 262.643 li
64.7505 253.355 li
74.0352 262.643 li
81.7314 254.946 li
84.9131 258.128 li
74.0352 269.007 li
cp
f
43.7852 314.645 mo
85.7148 314.645 li
85.7148 300.086 li
86.8379 299.436 li
100.463 291.549 108.928 276.89 108.928 261.18 cv
108.928 236.82 89.1099 217.002 64.75 217.002 cv
40.3901 217.002 20.5723 236.82 20.5723 261.18 cv
20.5723 276.89 29.0366 291.549 42.6621 299.436 cv
43.7852 300.086 li
43.7852 314.645 li
cp
90.2148 319.145 mo
39.2852 319.145 li
39.2852 302.66 li
24.9326 293.828 16.0723 278.056 16.0723 261.18 cv
16.0723 234.339 37.9092 212.502 64.75 212.502 cv
91.5908 212.502 113.428 234.339 113.428 261.18 cv
113.428 278.055 104.567 293.828 90.2148 302.66 cv
90.2148 319.145 li
cp
f
90.2148 328.43 mo
39.2852 328.43 li
39.2852 323.93 li
90.2148 323.93 li
90.2148 328.43 li
cp
f
90.2148 337.718 mo
39.2852 337.718 li
39.2852 333.218 li
90.2148 333.218 li
90.2148 337.718 li
cp
f
74.8921 347.002 mo
54.6079 347.002 li
54.6079 342.502 li
74.8921 342.502 li
74.8921 347.002 li
cp
f
236.453 386.719 mo
233.753 386.719 li
233.753 383.497 li
236.453 383.497 li
237.462 383.497 238.236 384.108 238.236 385.117 cv
238.236 386.107 237.462 386.719 236.453 386.719 cv
cp
236.813 381.246 mo
231.196 381.246 li
231.196 393.255 li
233.753 393.255 li
233.753 388.97 li
236.813 388.97 li
239.406 388.97 240.847 387.206 240.847 385.117 cv
240.847 383.01 239.425 381.246 236.813 381.246 cv
cp
.0980392 .0941176 .0941176 rgb
f
248.153 391.203 mo
245.921 391.203 244.499 389.492 244.499 387.26 cv
244.499 385.009 245.921 383.316 248.153 383.316 cv
250.368 383.316 251.791 385.009 251.791 387.26 cv
251.791 389.492 250.368 391.203 248.153 391.203 cv
cp
248.153 381.048 mo
244.517 381.048 241.87 383.641 241.87 387.26 cv
241.87 390.879 244.517 393.472 248.153 393.472 cv
251.772 393.472 254.42 390.879 254.42 387.26 cv
254.42 383.641 251.772 381.048 248.153 381.048 cv
cp
f
261.474 386.737 mo
258.772 386.737 li
258.772 383.497 li
261.474 383.497 li
262.481 383.497 263.256 384.108 263.256 385.099 cv
263.256 386.125 262.481 386.737 261.474 386.737 cv
cp
265.885 385.117 mo
265.885 382.884 264.336 381.246 261.834 381.246 cv
256.216 381.246 li
256.216 393.255 li
258.772 393.255 li
258.772 388.988 li
260.646 388.988 li
263.004 393.255 li
265.957 393.255 li
263.238 388.682 li
264.534 388.376 265.885 387.224 265.885 385.117 cv
cp
f
266.872 383.497 mo
270.383 383.497 li
270.383 393.255 li
272.958 393.255 li
272.958 383.497 li
276.45 383.497 li
276.45 381.246 li
266.872 381.246 li
266.872 383.497 li
cp
f
278.086 393.255 mo
280.643 393.255 li
280.643 388.268 li
286.458 388.268 li
286.458 386.017 li
280.643 386.017 li
280.643 383.497 li
286.584 383.497 li
286.584 381.246 li
278.086 381.246 li
278.086 393.255 li
cp
f
294.071 391.203 mo
291.839 391.203 290.416 389.492 290.416 387.26 cv
290.416 385.009 291.839 383.316 294.071 383.316 cv
296.286 383.316 297.708 385.009 297.708 387.26 cv
297.708 389.492 296.286 391.203 294.071 391.203 cv
cp
294.071 381.048 mo
290.434 381.048 287.787 383.641 287.787 387.26 cv
287.787 390.879 290.434 393.472 294.071 393.472 cv
297.69 393.472 300.337 390.879 300.337 387.26 cv
300.337 383.641 297.69 381.048 294.071 381.048 cv
cp
f
304.601 381.246 mo
302.025 381.246 li
302.025 393.255 li
309.678 393.255 li
309.678 391.005 li
304.601 391.005 li
304.601 381.246 li
cp
f
311.403 393.255 mo
313.96 393.255 li
313.96 381.246 li
311.403 381.246 li
311.403 393.255 li
cp
f
322.043 391.203 mo
319.811 391.203 318.388 389.492 318.388 387.26 cv
318.388 385.009 319.811 383.316 322.043 383.316 cv
324.258 383.316 325.68 385.009 325.68 387.26 cv
325.68 389.492 324.258 391.203 322.043 391.203 cv
cp
322.043 381.048 mo
318.405 381.048 315.759 383.641 315.759 387.26 cv
315.759 390.879 318.405 393.472 322.043 393.472 cv
325.662 393.472 328.309 390.879 328.309 387.26 cv
328.309 383.641 325.662 381.048 322.043 381.048 cv
cp
f
224.1 325.913 mo
335.405 325.913 li
335.405 248.068 li
224.1 248.068 li
224.1 325.913 li
cp
335.564 330.413 mo
223.941 330.413 li
221.547 330.413 219.6 328.467 219.6 326.075 cv
219.6 247.906 li
219.6 245.514 221.547 243.568 223.941 243.568 cv
335.564 243.568 li
337.958 243.568 339.905 245.514 339.905 247.906 cv
339.905 326.075 li
339.905 328.467 337.958 330.413 335.564 330.413 cv
cp
.0952911 .0952911 .0952911 rgb
f
303.717 240.592 mo
299.217 240.592 li
299.217 237.129 li
299.217 236.186 298.849 235.297 298.18 234.628 cv
297.511 233.96 296.622 233.591 295.676 233.591 cv
263.83 233.591 li
262.884 233.591 261.995 233.959 261.326 234.628 cv
260.656 235.298 260.288 236.186 260.288 237.129 cv
260.288 240.592 li
255.788 240.592 li
255.788 237.129 li
255.788 234.984 256.625 232.966 258.144 231.447 cv
259.663 229.928 261.682 229.091 263.83 229.091 cv
295.676 229.091 li
297.823 229.091 299.842 229.928 301.361 231.446 cv
302.881 232.965 303.717 234.983 303.717 237.129 cv
303.717 240.592 li
cp
f
329.455 282.359 mo
324.955 282.359 li
324.955 258.509 li
234.545 258.509 li
234.545 282.359 li
230.045 282.359 li
230.045 254.009 li
329.455 254.009 li
329.455 282.359 li
cp
f
329.455 319.959 mo
230.045 319.959 li
230.045 291.62 li
234.545 291.62 li
234.545 315.459 li
324.955 315.459 li
324.955 291.62 li
329.455 291.62 li
329.455 319.959 li
cp
f
339.905 289.373 mo
345.119 289.373 li
345.756 289.373 346.354 289.125 346.805 288.675 cv
347.254 288.226 347.502 287.626 347.502 286.99 cv
347.502 286.354 347.254 285.756 346.804 285.305 cv
346.354 284.855 345.755 284.607 345.119 284.607 cv
339.905 284.607 li
339.905 289.373 li
cp
345.119 293.873 mo
335.405 293.873 li
335.405 280.107 li
345.119 280.107 li
346.957 280.107 348.686 280.823 349.986 282.124 cv
351.286 283.424 352.002 285.152 352.002 286.99 cv
352.002 288.828 351.287 290.556 349.987 291.857 cv
348.685 293.157 346.957 293.873 345.119 293.873 cv
cp
f
221.045 293.724 mo
203.461 286.99 li
221.045 280.256 li
222.655 284.458 li
216.044 286.99 li
222.655 289.521 li
221.045 293.724 li
cp
f
224.1 289.373 mo
335.405 289.373 li
335.405 284.607 li
224.1 284.607 li
224.1 289.373 li
cp
339.905 293.873 mo
219.6 293.873 li
219.6 280.107 li
339.905 280.107 li
339.905 293.873 li
cp
f
689.053 390.464 mo
685.721 381.246 li
682.822 381.246 li
687.449 393.255 li
690.654 393.255 li
695.282 381.246 li
692.383 381.246 li
689.053 390.464 li
cp
.0980392 .0941176 .0941176 rgb
f
696.395 393.255 mo
698.951 393.255 li
698.951 381.246 li
696.395 381.246 li
696.395 393.255 li
cp
f
706.063 391.005 mo
703.883 391.005 li
703.883 383.497 li
706.08 383.497 li
708.529 383.497 709.825 385.135 709.825 387.242 cv
709.825 389.294 708.438 391.005 706.063 391.005 cv
cp
706.063 381.246 mo
701.326 381.246 li
701.326 393.255 li
706.08 393.255 li
709.825 393.255 712.436 390.878 712.436 387.242 cv
712.436 383.641 709.825 381.246 706.063 381.246 cv
cp
f
714.25 393.255 mo
722.749 393.255 li
722.749 391.005 li
716.807 391.005 li
716.807 388.268 li
722.623 388.268 li
722.623 386.017 li
716.807 386.017 li
716.807 383.497 li
722.749 383.497 li
722.749 381.246 li
714.25 381.246 li
714.25 393.255 li
cp
f
730.451 391.203 mo
728.219 391.203 726.797 389.493 726.797 387.26 cv
726.797 385.009 728.219 383.317 730.451 383.317 cv
732.666 383.317 734.089 385.009 734.089 387.26 cv
734.089 389.493 732.666 391.203 730.451 391.203 cv
cp
730.451 381.048 mo
726.814 381.048 724.168 383.641 724.168 387.26 cv
724.168 390.878 726.814 393.471 730.451 393.471 cv
734.07 393.471 736.718 390.878 736.718 387.26 cv
736.718 383.641 734.07 381.048 730.451 381.048 cv
cp
f
672.314 325.987 mo
747.227 325.987 li
747.227 233.517 li
672.314 233.517 li
672.314 325.987 li
cp
751.727 330.487 mo
667.814 330.487 li
667.814 229.017 li
751.727 229.017 li
751.727 330.487 li
cp
.0952911 .0952911 .0952911 rgb
f
709.771 262.698 mo
700.366 262.698 692.715 270.348 692.715 279.752 cv
692.715 289.156 700.366 296.806 709.771 296.806 cv
719.175 296.806 726.826 289.156 726.826 279.752 cv
726.826 270.348 719.175 262.698 709.771 262.698 cv
cp
709.771 301.306 mo
697.885 301.306 688.215 291.637 688.215 279.752 cv
688.215 267.867 697.885 258.198 709.771 258.198 cv
721.656 258.198 731.326 267.867 731.326 279.752 cv
731.326 291.637 721.656 301.306 709.771 301.306 cv
cp
f
706.604 273.752 mo
717.002 279.752 li
706.604 285.752 li
706.604 273.752 li
cp
f
672.314 330.487 mo
667.814 330.487 li
667.814 312.443 li
652.021 312.443 li
652.021 330.487 li
647.521 330.487 li
647.521 307.943 li
672.314 307.943 li
672.314 330.487 li
cp
f
652.021 307.943 mo
667.814 307.943 li
667.814 292.149 li
652.021 292.149 li
652.021 307.943 li
cp
672.314 312.443 mo
647.521 312.443 li
647.521 287.649 li
672.314 287.649 li
672.314 312.443 li
cp
f
652.021 287.649 mo
667.814 287.649 li
667.814 271.855 li
652.021 271.855 li
652.021 287.649 li
cp
672.314 292.149 mo
647.521 292.149 li
647.521 267.355 li
672.314 267.355 li
672.314 292.149 li
cp
f
652.021 267.355 mo
667.814 267.355 li
667.814 251.562 li
652.021 251.562 li
652.021 267.355 li
cp
672.314 271.855 mo
647.521 271.855 li
647.521 247.062 li
672.314 247.062 li
672.314 271.855 li
cp
f
672.314 251.562 mo
647.521 251.562 li
647.521 229.017 li
652.021 229.017 li
652.021 247.062 li
667.814 247.062 li
667.814 229.017 li
672.314 229.017 li
672.314 251.562 li
cp
f
772.021 330.487 mo
767.521 330.487 li
767.521 312.443 li
751.727 312.443 li
751.727 330.487 li
747.227 330.487 li
747.227 307.943 li
772.021 307.943 li
772.021 330.487 li
cp
f
751.727 307.943 mo
767.521 307.943 li
767.521 292.149 li
751.727 292.149 li
751.727 307.943 li
cp
772.021 312.443 mo
747.227 312.443 li
747.227 287.649 li
772.021 287.649 li
772.021 312.443 li
cp
f
751.727 287.649 mo
767.521 287.649 li
767.521 271.855 li
751.727 271.855 li
751.727 287.649 li
cp
772.021 292.149 mo
747.227 292.149 li
747.227 267.355 li
772.021 267.355 li
772.021 292.149 li
cp
f
751.727 267.355 mo
767.521 267.355 li
767.521 251.562 li
751.727 251.562 li
751.727 267.355 li
cp
772.021 271.855 mo
747.227 271.855 li
747.227 247.062 li
772.021 247.062 li
772.021 271.855 li
cp
f
772.021 251.562 mo
747.227 251.562 li
747.227 229.017 li
751.727 229.017 li
751.727 247.062 li
767.521 247.062 li
767.521 229.017 li
772.021 229.017 li
772.021 251.562 li
cp
f
451.28 383.317 mo
452.505 383.317 453.585 384.091 454.09 385.063 cv
456.286 383.983 li
455.439 382.47 453.909 381.048 451.28 381.048 cv
447.661 381.048 444.871 383.55 444.871 387.26 cv
444.871 390.951 447.661 393.471 451.28 393.471 cv
453.909 393.471 455.439 392.013 456.286 390.519 cv
454.09 389.457 li
453.585 390.429 452.505 391.203 451.28 391.203 cv
449.084 391.203 447.5 389.529 447.5 387.26 cv
447.5 384.991 449.084 383.317 451.28 383.317 cv
cp
.0980392 .0941176 .0941176 rgb
f
463.07 386.738 mo
460.369 386.738 li
460.369 383.497 li
463.07 383.497 li
464.078 383.497 464.853 384.109 464.853 385.099 cv
464.853 386.125 464.078 386.738 463.07 386.738 cv
cp
467.481 385.117 mo
467.481 382.884 465.933 381.246 463.431 381.246 cv
457.813 381.246 li
457.813 393.255 li
460.369 393.255 li
460.369 388.989 li
462.242 388.989 li
464.601 393.255 li
467.554 393.255 li
464.835 388.682 li
466.131 388.376 467.481 387.224 467.481 385.117 cv
cp
f
469.387 393.255 mo
477.885 393.255 li
477.885 391.005 li
471.943 391.005 li
471.943 388.268 li
477.759 388.268 li
477.759 386.017 li
471.943 386.017 li
471.943 383.497 li
477.885 383.497 li
477.885 381.246 li
469.387 381.246 li
469.387 393.255 li
cp
f
482.977 388.97 mo
484.85 383.803 li
486.722 388.97 li
482.977 388.97 li
cp
483.247 381.246 mo
478.62 393.255 li
481.519 393.255 li
482.274 391.221 li
487.424 391.221 li
488.181 393.255 li
491.079 393.255 li
486.452 381.246 li
483.247 381.246 li
cp
f
490.302 383.497 mo
493.813 383.497 li
493.813 393.255 li
496.388 393.255 li
496.388 383.497 li
499.881 383.497 li
499.881 381.246 li
490.302 381.246 li
490.302 383.497 li
cp
f
501.516 393.255 mo
504.072 393.255 li
504.072 381.246 li
501.516 381.246 li
501.516 393.255 li
cp
f
511.417 390.464 mo
508.086 381.246 li
505.188 381.246 li
509.814 393.255 li
513.02 393.255 li
517.646 381.246 li
514.748 381.246 li
511.417 390.464 li
cp
f
518.76 393.255 mo
521.316 393.255 li
521.316 381.246 li
518.76 381.246 li
518.76 393.255 li
cp
f
522.953 383.497 mo
526.464 383.497 li
526.464 393.255 li
529.039 393.255 li
529.039 383.497 li
532.531 383.497 li
532.531 381.246 li
522.953 381.246 li
522.953 383.497 li
cp
f
541.766 381.246 mo
538.795 386.053 li
535.823 381.246 li
532.906 381.246 li
537.516 388.34 li
537.516 393.255 li
540.072 393.255 li
540.072 388.34 li
544.664 381.246 li
541.766 381.246 li
cp
f
511.502 300.858 mo
509.605 296.778 li
522.006 291.012 530.019 278.46 530.019 264.802 cv
530.019 245.365 514.205 229.552 494.768 229.552 cv
475.331 229.552 459.518 245.365 459.518 264.802 cv
459.518 278.46 467.53 291.011 479.931 296.778 cv
478.033 300.858 li
464.052 294.356 455.018 280.204 455.018 264.802 cv
455.018 242.884 472.85 225.052 494.768 225.052 cv
516.687 225.052 534.519 242.884 534.519 264.802 cv
534.519 280.204 525.484 294.357 511.502 300.858 cv
cp
.0952911 .0952911 .0952911 rgb
f
502.657 272.691 mo
494.767 264.802 li
486.875 272.693 li
502.657 272.691 li
cp
f
502.282 324.346 mo
508.304 324.347 li
508.304 282.835 li
502.282 282.834 li
502.282 324.346 li
cp
510.554 328.847 mo
510.554 328.847 li
500.032 328.846 li
498.789 328.846 497.782 327.839 497.782 326.596 cv
497.782 280.584 li
497.782 279.988 498.02 279.416 498.441 278.994 cv
498.863 278.571 499.436 278.334 500.032 278.334 cv
500.032 278.334 li
510.554 278.335 li
511.797 278.335 512.804 279.343 512.804 280.585 cv
512.804 326.597 li
512.804 327.194 512.566 327.766 512.145 328.188 cv
511.723 328.61 511.15 328.847 510.554 328.847 cv
cp
f
491.756 282.834 mo
491.757 324.347 li
497.782 324.346 li
497.782 282.834 li
491.756 282.834 li
cp
489.507 328.847 mo
488.911 328.847 488.338 328.61 487.917 328.188 cv
487.495 327.766 487.257 327.194 487.257 326.597 cv
487.256 280.584 li
487.256 279.988 487.493 279.416 487.916 278.994 cv
488.337 278.571 488.91 278.334 489.506 278.334 cv
500.032 278.334 li
501.274 278.334 502.282 279.342 502.282 280.584 cv
502.282 326.596 li
502.282 327.839 501.275 328.846 500.032 328.846 cv
489.507 328.847 li
cp
f
481.232 282.838 mo
481.232 324.349 li
487.257 324.348 li
487.256 282.835 li
481.232 282.838 li
cp
478.982 328.849 mo
478.386 328.849 477.813 328.612 477.391 328.19 cv
476.969 327.768 476.732 327.196 476.732 326.599 cv
476.732 280.589 li
476.732 279.347 477.739 278.34 478.981 278.339 cv
489.505 278.334 li
489.506 278.334 489.506 278.334 489.506 278.334 cv
490.103 278.334 490.675 278.571 491.097 278.993 cv
491.519 279.415 491.756 279.987 491.756 280.584 cv
491.757 326.597 li
491.757 327.84 490.75 328.847 489.508 328.847 cv
478.982 328.849 li
cp
f
480.573 282.18 mo
477.391 278.999 li
494.767 261.62 li
512.145 278.994 li
508.963 282.177 li
494.768 267.984 li
480.573 282.18 li
cp
f
481.232 331.714 mo
508.305 331.716 li
508.305 328.847 li
481.232 328.849 li
481.232 331.714 li
cp
510.556 336.216 mo
510.556 336.216 li
478.983 336.214 li
477.74 336.214 476.733 335.207 476.733 333.965 cv
476.732 326.6 li
476.732 326.002 476.969 325.43 477.391 325.008 cv
477.813 324.586 478.385 324.349 478.982 324.349 cv
510.554 324.347 li
511.796 324.347 512.804 325.354 512.804 326.597 cv
512.806 333.966 li
512.806 334.563 512.568 335.135 512.146 335.557 cv
511.725 335.979 511.152 336.216 510.556 336.216 cv
cp
f
481.42 336.214 mo
482.495 342.608 488.073 347.498 494.771 347.501 cv
494.773 349.751 li
494.773 347.501 li
498.388 347.501 501.785 346.093 504.342 343.537 cv
506.36 341.518 507.662 338.976 508.121 336.216 cv
481.42 336.214 li
cp
494.774 352.001 mo
494.774 352.001 494.774 352.001 494.773 352.001 cv
494.77 352.001 li
484.824 351.996 476.733 343.904 476.733 333.964 cv
476.733 331.714 li
512.805 331.716 li
512.806 333.966 li
512.807 338.782 510.931 343.311 507.524 346.718 cv
504.118 350.125 499.59 352.001 494.774 352.001 cv
cp
f
497.019 217.345 mo
492.518 217.345 li
492.518 209.752 li
497.019 209.752 li
497.019 217.345 li
cp
f
477.962 220.362 mo
475.618 213.144 li
479.898 211.754 li
482.242 218.973 li
477.962 220.362 li
cp
f
465.053 227.73 mo
460.59 221.588 li
464.231 218.942 li
468.694 225.085 li
465.053 227.73 li
cp
f
455.054 238.728 mo
448.911 234.264 li
451.557 230.624 li
457.699 235.087 li
455.054 238.728 li
cp
f
448.939 252.276 mo
441.719 249.93 li
443.11 245.651 li
450.33 247.997 li
448.939 252.276 li
cp
f
447.311 267.052 mo
439.719 267.052 li
439.719 262.552 li
447.311 262.552 li
447.311 267.052 li
cp
f
443.11 283.952 mo
441.719 279.672 li
448.939 277.327 li
450.33 281.606 li
443.11 283.952 li
cp
f
451.556 298.978 mo
448.912 295.336 li
455.055 290.877 li
457.698 294.519 li
451.556 298.978 li
cp
f
464.231 310.658 mo
460.592 308.013 li
465.056 301.872 li
468.695 304.518 li
464.231 310.658 li
cp
f
525.304 310.656 mo
520.845 304.515 li
524.485 301.871 li
528.944 308.011 li
525.304 310.656 li
cp
f
537.979 298.976 mo
531.839 294.515 li
534.483 290.875 li
540.624 295.335 li
537.979 298.976 li
cp
f
546.426 283.951 mo
539.209 281.603 li
540.602 277.324 li
547.818 279.671 li
546.426 283.951 li
cp
f
549.815 267.05 mo
542.228 267.05 li
542.228 262.55 li
549.815 262.55 li
549.815 267.05 li
cp
f
540.598 252.273 mo
539.209 247.993 li
546.428 245.65 li
547.816 249.931 li
540.598 252.273 li
cp
f
534.481 238.726 mo
531.837 235.085 li
537.979 230.623 li
540.624 234.263 li
534.481 238.726 li
cp
f
524.481 227.728 mo
520.841 225.082 li
525.304 218.941 li
528.944 221.587 li
524.481 227.728 li
cp
f
511.572 220.362 mo
507.293 218.969 li
509.643 211.751 li
513.922 213.144 li
511.572 220.362 li
cp
f
842.089 388.385 mo
842.089 390.059 841.135 391.211 839.279 391.211 cv
837.426 391.211 836.453 390.059 836.453 388.385 cv
836.453 381.254 li
833.86 381.254 li
833.86 388.457 li
833.86 391.428 835.625 393.48 839.279 393.48 cv
842.936 393.48 844.699 391.428 844.699 388.457 cv
844.699 381.254 li
842.089 381.254 li
842.089 388.385 li
cp
.0980392 .0941176 .0941176 rgb
f
847.072 393.264 mo
849.629 393.264 li
849.629 381.254 li
847.072 381.254 li
847.072 393.264 li
cp
f
850.815 393.625 mo
852.472 393.625 li
856.739 380.895 li
855.082 380.895 li
850.815 393.625 li
cp
f
866.154 388.385 mo
866.154 390.059 865.199 391.211 863.346 391.211 cv
861.49 391.211 860.519 390.059 860.519 388.385 cv
860.519 381.254 li
857.926 381.254 li
857.926 388.457 li
857.926 391.428 859.69 393.48 863.346 393.48 cv
867 393.48 868.765 391.428 868.765 388.457 cv
868.765 381.254 li
866.154 381.254 li
866.154 388.385 li
cp
f
881.761 381.254 mo
878.682 381.254 li
875.963 385.36 li
873.208 381.254 li
870.165 381.254 li
874.252 387.107 li
869.895 393.264 li
872.938 393.264 li
875.963 388.871 li
878.97 393.264 li
882.031 393.264 li
877.674 387.088 li
881.761 381.254 li
cp
f
892.523 391.014 mo
890.344 391.014 li
890.344 383.505 li
892.541 383.505 li
894.99 383.505 896.286 385.144 896.286 387.25 cv
896.286 389.303 894.899 391.014 892.523 391.014 cv
cp
892.523 381.254 mo
887.787 381.254 li
887.787 393.264 li
892.541 393.264 li
896.286 393.264 898.896 390.887 898.896 387.25 cv
898.896 383.65 896.286 381.254 892.523 381.254 cv
cp
f
900.711 393.264 mo
909.21 393.264 li
909.21 391.014 li
903.268 391.014 li
903.268 388.277 li
909.084 388.277 li
909.084 386.026 li
903.268 386.026 li
903.268 383.505 li
909.21 383.505 li
909.21 381.254 li
900.711 381.254 li
900.711 393.264 li
cp
f
916.174 390.473 mo
912.844 381.254 li
909.944 381.254 li
914.572 393.264 li
917.777 393.264 li
922.404 381.254 li
919.506 381.254 li
916.174 390.473 li
cp
f
923.518 393.264 mo
932.016 393.264 li
932.016 391.014 li
926.074 391.014 li
926.074 388.277 li
931.89 388.277 li
931.89 386.026 li
926.074 386.026 li
926.074 383.505 li
932.016 383.505 li
932.016 381.254 li
923.518 381.254 li
923.518 393.264 li
cp
f
936.478 381.254 mo
933.902 381.254 li
933.902 393.264 li
941.555 393.264 li
941.555 391.014 li
936.478 391.014 li
936.478 381.254 li
cp
f
948.502 391.211 mo
946.27 391.211 944.848 389.501 944.848 387.269 cv
944.848 385.018 946.27 383.326 948.502 383.326 cv
950.717 383.326 952.14 385.018 952.14 387.269 cv
952.14 389.501 950.717 391.211 948.502 391.211 cv
cp
948.502 381.057 mo
944.865 381.057 942.219 383.65 942.219 387.269 cv
942.219 390.887 944.865 393.48 948.502 393.48 cv
952.121 393.48 954.769 390.887 954.769 387.269 cv
954.769 383.65 952.121 381.057 948.502 381.057 cv
cp
f
961.822 386.728 mo
959.121 386.728 li
959.121 383.505 li
961.822 383.505 li
962.83 383.505 963.605 384.118 963.605 385.125 cv
963.605 386.117 962.83 386.728 961.822 386.728 cv
cp
962.183 381.254 mo
956.564 381.254 li
956.564 393.264 li
959.121 393.264 li
959.121 388.979 li
962.183 388.979 li
964.775 388.979 966.216 387.214 966.216 385.125 cv
966.216 383.019 964.793 381.254 962.183 381.254 cv
cp
f
974.314 388.763 mo
971.398 381.254 li
967.814 381.254 li
967.814 393.264 li
970.371 393.264 li
970.371 384.604 li
973.757 393.264 li
974.873 393.264 li
978.258 384.604 li
978.258 393.264 li
980.832 393.264 li
980.832 381.254 li
977.231 381.254 li
974.314 388.763 li
cp
f
983.205 393.264 mo
991.703 393.264 li
991.703 391.014 li
985.762 391.014 li
985.762 388.277 li
991.578 388.277 li
991.578 386.026 li
985.762 386.026 li
985.762 383.505 li
991.703 383.505 li
991.703 381.254 li
983.205 381.254 li
983.205 393.264 li
cp
f
1001.89 388.799 mo
996.327 381.254 li
993.699 381.254 li
993.699 393.264 li
996.256 393.264 li
996.256 385.432 li
1001.98 393.264 li
1004.45 393.264 li
1004.45 381.254 li
1001.89 381.254 li
1001.89 388.799 li
cp
f
1006.08 381.254 mo
1006.08 383.505 li
1009.59 383.505 li
1009.59 393.264 li
1012.17 393.264 li
1012.17 383.505 li
1015.66 383.505 li
1015.66 381.254 li
1006.08 381.254 li
cp
f
923.608 271.234 mo
920.851 271.234 918.606 273.477 918.606 276.232 cv
918.606 278.992 920.851 281.237 923.608 281.237 cv
926.364 281.237 928.606 278.992 928.606 276.232 cv
928.606 273.477 926.364 271.234 923.608 271.234 cv
cp
923.608 285.737 mo
918.369 285.737 914.106 281.473 914.106 276.232 cv
914.106 270.995 918.369 266.734 923.608 266.734 cv
928.846 266.734 933.106 270.995 933.106 276.232 cv
933.106 281.473 928.846 285.737 923.608 285.737 cv
cp
.0952911 .0952911 .0952911 rgb
f
932.684 298.321 mo
931.273 294.57 927.627 292.049 923.61 292.049 cv
919.594 292.049 915.947 294.57 914.537 298.321 cv
910.324 296.738 li
912.391 291.242 917.729 287.549 923.61 287.549 cv
929.491 287.549 934.83 291.242 936.896 296.738 cv
932.684 298.321 li
cp
f
895.729 320.314 mo
951.485 320.314 li
951.485 239.21 li
895.729 239.21 li
895.729 320.314 li
cp
955.985 324.814 mo
891.229 324.814 li
891.229 234.71 li
955.985 234.71 li
955.985 324.814 li
cp
f
923.608 261.014 mo
913.27 261.014 904.858 269.424 904.858 279.762 cv
904.858 290.101 913.27 298.512 923.608 298.512 cv
933.947 298.512 942.358 290.101 942.358 279.762 cv
942.358 269.424 933.947 261.014 923.608 261.014 cv
cp
923.608 303.012 mo
910.788 303.012 900.358 292.582 900.358 279.762 cv
900.358 266.943 910.788 256.514 923.608 256.514 cv
936.429 256.514 946.858 266.943 946.858 279.762 cv
946.858 292.582 936.429 303.012 923.608 303.012 cv
cp
f
926.206 229.406 mo
921.005 229.406 li
921.005 224.906 li
926.206 224.906 li
926.206 229.406 li
cp
f
934.698 334.6 mo
912.515 334.6 li
912.515 330.1 li
934.698 330.1 li
934.698 334.6 li
cp
f
953.88 347.002 mo
893.337 347.002 li
886.98 347.002 881.81 341.835 881.81 335.483 cv
881.81 327.669 li
886.31 327.669 li
886.31 335.483 li
886.31 339.354 889.462 342.502 893.337 342.502 cv
953.88 342.502 li
957.752 342.502 960.901 339.354 960.901 335.483 cv
960.901 224.032 li
960.901 220.156 957.752 217.002 953.88 217.002 cv
893.337 217.002 li
889.462 217.002 886.31 220.156 886.31 224.032 cv
886.31 301.668 li
881.81 301.668 li
881.81 224.032 li
881.81 217.674 886.98 212.502 893.337 212.502 cv
953.88 212.502 li
960.232 212.502 965.401 217.674 965.401 224.032 cv
965.401 335.483 li
965.401 341.835 960.232 347.002 953.88 347.002 cv
cp
f
859.327 325.419 mo
891.229 325.419 li
891.229 303.918 li
859.327 303.918 li
859.327 325.419 li
cp
895.729 329.919 mo
854.827 329.919 li
854.827 299.418 li
895.729 299.418 li
895.729 329.919 li
cp
f
875.28 321.252 mo
866.548 321.252 li
866.548 316.752 li
875.28 316.752 li
875.28 321.252 li
cp
f
884.011 312.585 mo
866.548 312.585 li
866.548 308.085 li
884.011 308.085 li
884.011 312.585 li
cp
f
992.444 303.918 mo
987.944 303.918 li
987.944 299.418 li
992.444 299.418 li
992.444 303.918 li
cp
f
974.444 303.918 mo
969.944 303.918 li
969.944 299.418 li
974.444 299.418 li
974.444 303.918 li
cp
983.444 303.918 mo
978.944 303.918 li
978.944 299.418 li
983.444 299.418 li
983.444 303.918 li
cp
f
974.444 239.21 mo
969.944 239.21 li
969.944 234.71 li
974.444 234.71 li
974.444 239.21 li
cp
983.444 239.21 mo
978.944 239.21 li
978.944 234.71 li
983.444 234.71 li
983.444 239.21 li
cp
f
992.444 239.21 mo
987.944 239.21 li
987.944 234.71 li
992.444 234.71 li
992.444 239.21 li
cp
f
992.444 248.473 mo
987.944 248.473 li
987.944 243.841 li
992.444 243.841 li
992.444 248.473 li
cp
992.444 257.735 mo
987.944 257.735 li
987.944 253.104 li
992.444 253.104 li
992.444 257.735 li
cp
992.444 266.999 mo
987.944 266.999 li
987.944 262.367 li
992.444 262.367 li
992.444 266.999 li
cp
992.444 276.261 mo
987.944 276.261 li
987.944 271.63 li
992.444 271.63 li
992.444 276.261 li
cp
992.444 285.524 mo
987.944 285.524 li
987.944 280.893 li
992.444 280.893 li
992.444 285.524 li
cp
992.444 294.787 mo
987.944 294.787 li
987.944 290.156 li
992.444 290.156 li
992.444 294.787 li
cp
f
239.575 601.734 mo
236.874 601.734 li
236.874 598.511 li
239.575 598.511 li
240.583 598.511 241.357 599.123 241.357 600.132 cv
241.357 601.123 240.583 601.734 239.575 601.734 cv
cp
239.936 596.26 mo
234.317 596.26 li
234.317 608.27 li
236.874 608.27 li
236.874 603.985 li
239.936 603.985 li
242.528 603.985 243.969 602.22 243.969 600.132 cv
243.969 598.025 242.546 596.26 239.936 596.26 cv
cp
.0980392 .0941176 .0941176 rgb
f
250.825 601.751 mo
248.124 601.751 li
248.124 598.511 li
250.825 598.511 li
251.833 598.511 252.607 599.123 252.607 600.114 cv
252.607 601.14 251.833 601.751 250.825 601.751 cv
cp
255.236 600.132 mo
255.236 597.899 253.688 596.26 251.186 596.26 cv
245.567 596.26 li
245.567 608.27 li
248.124 608.27 li
248.124 604.003 li
249.997 604.003 li
252.355 608.27 li
255.309 608.27 li
252.59 603.697 li
253.886 603.39 255.236 602.238 255.236 600.132 cv
cp
f
257.142 608.27 mo
265.64 608.27 li
265.64 606.019 li
259.698 606.019 li
259.698 603.283 li
265.514 603.283 li
265.514 601.032 li
259.698 601.032 li
259.698 598.511 li
265.64 598.511 li
265.64 596.26 li
257.142 596.26 li
257.142 608.27 li
cp
f
273.469 598.332 mo
274.693 598.332 275.773 599.105 276.277 600.078 cv
278.474 598.998 li
277.628 597.485 276.098 596.062 273.469 596.062 cv
269.85 596.062 267.059 598.565 267.059 602.275 cv
267.059 605.965 269.85 608.486 273.469 608.486 cv
276.098 608.486 277.628 607.028 278.474 605.533 cv
276.277 604.47 li
275.773 605.443 274.693 606.217 273.469 606.217 cv
271.271 606.217 269.688 604.542 269.688 602.275 cv
269.688 600.005 271.271 598.332 273.469 598.332 cv
cp
f
280.001 608.27 mo
282.558 608.27 li
282.558 596.26 li
280.001 596.26 li
280.001 608.27 li
cp
f
287.129 599.538 mo
287.129 598.818 287.741 598.349 288.821 598.349 cv
290.046 598.349 291.342 598.763 292.314 599.664 cv
293.737 597.755 li
292.549 596.657 290.964 596.081 289.056 596.081 cv
286.229 596.081 284.5 597.737 284.5 599.736 cv
284.5 604.255 291.414 602.796 291.414 604.884 cv
291.414 605.587 290.748 606.217 289.325 606.217 cv
287.669 606.217 286.354 605.46 285.509 604.58 cv
284.104 606.578 li
285.238 607.712 286.895 608.486 289.218 608.486 cv
292.44 608.486 294.025 606.83 294.025 604.632 cv
294.025 600.15 287.129 601.427 287.129 599.538 cv
cp
f
295.732 608.27 mo
298.289 608.27 li
298.289 596.26 li
295.732 596.26 li
295.732 608.27 li
cp
f
306.371 606.217 mo
304.139 606.217 302.716 604.507 302.716 602.275 cv
302.716 600.023 304.139 598.332 306.371 598.332 cv
308.586 598.332 310.009 600.023 310.009 602.275 cv
310.009 604.507 308.586 606.217 306.371 606.217 cv
cp
306.371 596.062 mo
302.734 596.062 300.088 598.656 300.088 602.275 cv
300.088 605.894 302.734 608.486 306.371 608.486 cv
309.99 608.486 312.638 605.894 312.638 602.275 cv
312.638 598.656 309.99 596.062 306.371 596.062 cv
cp
f
322.626 596.26 mo
322.626 603.804 li
317.063 596.26 li
314.434 596.26 li
314.434 608.27 li
316.99 608.27 li
316.99 600.437 li
322.716 608.27 li
325.183 608.27 li
325.183 596.26 li
322.626 596.26 li
cp
f
309.833 546.144 mo
279.744 464.904 li
249.656 546.144 li
245.436 544.582 li
279.744 451.947 li
314.053 544.582 li
309.833 546.144 li
cp
.0952911 .0952911 .0952911 rgb
f
279.744 513.246 mo
267.48 513.246 256.191 506.552 250.281 495.777 cv
254.227 493.613 li
259.346 502.947 269.124 508.746 279.744 508.746 cv
290.365 508.746 300.143 502.947 305.262 493.613 cv
309.207 495.777 li
303.298 506.552 292.009 513.246 279.744 513.246 cv
cp
f
281.994 447.738 mo
277.494 447.738 li
277.494 436.431 li
281.994 436.431 li
281.994 447.738 li
cp
f
278.494 434.181 mo
280.994 434.181 li
280.994 425.802 li
278.494 425.802 li
278.494 434.181 li
cp
285.494 438.681 mo
273.994 438.681 li
273.994 421.302 li
285.494 421.302 li
285.494 438.681 li
cp
f
281.994 516.787 mo
277.494 516.787 li
277.494 505.193 li
281.994 505.193 li
281.994 516.787 li
cp
f
279.744 444.912 mo
274.77 444.912 270.724 448.955 270.724 453.925 cv
270.724 458.9 274.77 462.947 279.744 462.947 cv
284.718 462.947 288.764 458.9 288.764 453.925 cv
288.764 448.955 284.718 444.912 279.744 444.912 cv
cp
279.744 467.447 mo
272.289 467.447 266.224 461.381 266.224 453.925 cv
266.224 446.474 272.289 440.412 279.744 440.412 cv
287.199 440.412 293.264 446.474 293.264 453.925 cv
293.264 461.381 287.199 467.447 279.744 467.447 cv
cp
f
328.173 531.153 mo
323.793 530.122 li
324.109 528.775 324.368 527.395 324.559 526.019 cv
329.016 526.64 li
328.805 528.153 328.521 529.671 328.173 531.153 cv
cp
231.335 531.235 mo
230.984 529.751 230.698 528.234 230.484 526.724 cv
234.94 526.095 li
235.134 527.468 235.395 528.848 235.714 530.196 cv
231.335 531.235 li
cp
325.253 539.847 mo
321.138 538.027 li
321.701 536.753 322.21 535.444 322.649 534.135 cv
326.915 535.567 li
326.432 537.007 325.873 538.447 325.253 539.847 cv
cp
234.271 539.924 mo
233.651 538.531 233.089 537.091 232.601 535.647 cv
236.865 534.208 li
237.308 535.52 237.818 536.828 238.382 538.094 cv
234.271 539.924 li
cp
320.778 547.853 mo
317.069 545.304 li
317.855 544.162 318.596 542.968 319.272 541.758 cv
323.201 543.954 li
322.457 545.285 321.642 546.596 320.778 547.853 cv
cp
238.758 547.92 mo
237.891 546.663 237.074 545.352 236.33 544.027 cv
240.254 541.824 li
240.931 543.031 241.674 544.222 242.463 545.368 cv
238.758 547.92 li
cp
314.914 554.902 mo
311.734 551.718 li
312.714 550.74 313.661 549.703 314.549 548.635 cv
318.009 551.512 li
317.032 552.686 315.991 553.827 314.914 554.902 cv
cp
244.633 554.959 mo
243.551 553.882 242.508 552.744 241.534 551.576 cv
244.989 548.693 li
245.875 549.754 246.824 550.791 247.809 551.772 cv
244.633 554.959 li
cp
307.864 560.76 mo
305.317 557.051 li
306.463 556.264 307.583 555.417 308.648 554.533 cv
311.524 557.994 li
310.354 558.965 309.123 559.897 307.864 560.76 cv
cp
251.694 560.807 mo
250.435 559.946 249.202 559.017 248.029 558.046 cv
250.898 554.58 li
251.966 555.463 253.088 556.309 254.234 557.092 cv
251.694 560.807 li
cp
299.856 565.23 mo
298.036 561.115 li
299.302 560.555 300.558 559.928 301.77 559.251 cv
303.963 563.181 li
302.63 563.925 301.249 564.615 299.856 565.23 cv
cp
259.71 565.264 mo
258.321 564.652 256.938 563.965 255.6 563.222 cv
257.785 559.289 li
259.002 559.964 260.26 560.589 261.523 561.145 cv
259.71 565.264 li
cp
291.161 568.145 mo
290.132 563.764 li
291.483 563.447 292.833 563.063 294.146 562.623 cv
295.576 566.89 li
294.132 567.374 292.647 567.795 291.161 568.145 cv
cp
268.411 568.166 mo
266.927 567.82 265.44 567.4 263.992 566.917 cv
265.417 562.649 li
266.732 563.087 268.083 563.469 269.431 563.783 cv
268.411 568.166 li
cp
282.08 569.408 mo
281.871 564.912 li
283.264 564.847 284.663 564.718 286.029 564.529 cv
286.648 568.986 li
285.146 569.195 283.609 569.336 282.08 569.408 cv
cp
277.494 569.412 mo
275.968 569.343 274.43 569.205 272.923 568.998 cv
273.537 564.539 li
274.906 564.727 276.305 564.854 277.693 564.916 cv
277.494 569.412 li
cp
f
9.07617 601.733 mo
6.37598 601.733 li
6.37598 598.51 li
9.07617 598.51 li
10.085 598.51 10.8594 599.124 10.8594 600.131 cv
10.8594 601.122 10.085 601.733 9.07617 601.733 cv
cp
9.43652 596.26 mo
3.81934 596.26 li
3.81934 608.27 li
6.37598 608.27 li
6.37598 603.985 li
9.43652 603.985 li
12.0293 603.985 13.4697 602.219 13.4697 600.131 cv
13.4697 598.024 12.0479 596.26 9.43652 596.26 cv
cp
.0980392 .0941176 .0941176 rgb
f
20.3262 601.752 mo
17.626 601.752 li
17.626 598.51 li
20.3262 598.51 li
21.335 598.51 22.1094 599.124 22.1094 600.114 cv
22.1094 601.139 21.335 601.752 20.3262 601.752 cv
cp
24.7383 600.131 mo
24.7383 597.899 23.1895 596.26 20.6865 596.26 cv
15.0693 596.26 li
15.0693 608.27 li
17.626 608.27 li
17.626 604.002 li
19.498 604.002 li
21.8574 608.27 li
24.8096 608.27 li
22.0908 603.696 li
23.3877 603.391 24.7383 602.239 24.7383 600.131 cv
cp
f
32.3506 606.217 mo
30.1182 606.217 28.6953 604.506 28.6953 602.274 cv
28.6953 600.024 30.1182 598.331 32.3506 598.331 cv
34.5654 598.331 35.9873 600.024 35.9873 602.274 cv
35.9873 604.506 34.5654 606.217 32.3506 606.217 cv
cp
32.3506 596.063 mo
28.7129 596.063 26.0664 598.655 26.0664 602.274 cv
26.0664 605.893 28.7129 608.485 32.3506 608.485 cv
35.9697 608.485 38.6162 605.893 38.6162 602.274 cv
38.6162 598.655 35.9697 596.063 32.3506 596.063 cv
cp
f
39.2432 598.51 mo
42.7539 598.51 li
42.7539 608.27 li
45.3291 608.27 li
45.3291 598.51 li
48.8213 598.51 li
48.8213 596.26 li
39.2432 596.26 li
39.2432 598.51 li
cp
f
55.7324 606.217 mo
53.5 606.217 52.0781 604.506 52.0781 602.274 cv
52.0781 600.024 53.5 598.331 55.7324 598.331 cv
57.9473 598.331 59.3701 600.024 59.3701 602.274 cv
59.3701 604.506 57.9473 606.217 55.7324 606.217 cv
cp
55.7324 596.063 mo
52.0957 596.063 49.4492 598.655 49.4492 602.274 cv
49.4492 605.893 52.0957 608.485 55.7324 608.485 cv
59.3516 608.485 61.999 605.893 61.999 602.274 cv
61.999 598.655 59.3516 596.063 55.7324 596.063 cv
cp
f
62.625 598.51 mo
66.1357 598.51 li
66.1357 608.27 li
68.7109 608.27 li
68.7109 598.51 li
72.2031 598.51 li
72.2031 596.26 li
62.625 596.26 li
62.625 598.51 li
cp
f
78.4658 601.067 mo
75.4951 596.26 li
72.5781 596.26 li
77.1875 603.354 li
77.1875 608.27 li
79.7441 608.27 li
79.7441 603.354 li
84.3359 596.26 li
81.4365 596.26 li
78.4658 601.067 li
cp
f
90.7061 601.733 mo
88.0049 601.733 li
88.0049 598.51 li
90.7061 598.51 li
91.7139 598.51 92.4883 599.124 92.4883 600.131 cv
92.4883 601.122 91.7139 601.733 90.7061 601.733 cv
cp
91.0664 596.26 mo
85.4482 596.26 li
85.4482 608.27 li
88.0049 608.27 li
88.0049 603.985 li
91.0664 603.985 li
93.6592 603.985 95.0996 602.219 95.0996 600.131 cv
95.0996 598.024 93.6768 596.26 91.0664 596.26 cv
cp
f
96.6982 608.27 mo
99.2549 608.27 li
99.2549 596.26 li
96.6982 596.26 li
96.6982 608.27 li
cp
f
109.822 603.805 mo
104.259 596.26 li
101.63 596.26 li
101.63 608.27 li
104.187 608.27 li
104.187 600.438 li
109.912 608.27 li
112.379 608.27 li
112.379 596.26 li
109.822 596.26 li
109.822 603.805 li
cp
f
119.955 601.625 mo
119.955 603.858 li
123.124 603.858 li
123.124 605.299 li
122.638 605.749 121.647 606.217 120.585 606.217 cv
118.389 606.217 116.805 604.543 116.805 602.274 cv
116.805 600.004 118.389 598.331 120.585 598.331 cv
121.846 598.331 122.872 599.051 123.431 599.897 cv
125.537 598.745 li
124.637 597.323 123.07 596.063 120.585 596.063 cv
117.057 596.063 114.176 598.475 114.176 602.274 cv
114.176 606.055 117.057 608.485 120.585 608.485 cv
122.746 608.485 124.456 607.604 125.681 606.235 cv
125.681 601.625 li
119.955 601.625 li
cp
f
14.4995 513.515 mo
115 513.515 li
115 453.015 li
14.4995 453.015 li
14.4995 513.515 li
cp
119.5 518.015 mo
9.99951 518.015 li
9.99951 448.515 li
119.5 448.515 li
119.5 518.015 li
cp
.0952911 .0952911 .0952911 rgb
f
4.5 523.515 mo
125 523.515 li
125 443.016 li
4.5 443.016 li
4.5 523.515 li
cp
129.5 528.015 mo
0 528.015 li
0 438.516 li
129.5 438.516 li
129.5 528.015 li
cp
f
110.25 510.013 mo
95.249 510.013 li
95.249 505.513 li
110.25 505.513 li
110.25 510.013 li
cp
f
102.749 500.015 mo
95.249 500.015 li
95.249 495.515 li
102.749 495.515 li
102.749 500.015 li
cp
f
22.4995 467.64 mo
29.1245 467.64 li
29.1245 461.015 li
22.4995 461.015 li
22.4995 467.64 li
cp
33.6245 472.14 mo
17.9995 472.14 li
17.9995 456.515 li
33.6245 456.515 li
33.6245 472.14 li
cp
f
64.75 475.408 mo
60.418 475.408 56.8936 478.933 56.8936 483.265 cv
56.8936 487.598 60.418 491.124 64.75 491.124 cv
69.082 491.124 72.6064 487.598 72.6064 483.265 cv
72.6064 478.933 69.082 475.408 64.75 475.408 cv
cp
64.75 495.624 mo
57.9365 495.624 52.3936 490.08 52.3936 483.265 cv
52.3936 476.451 57.9365 470.908 64.75 470.908 cv
71.5635 470.908 77.1064 476.451 77.1064 483.265 cv
77.1064 490.08 71.5635 495.624 64.75 495.624 cv
cp
f
88.8579 483.265 mo
84.3579 483.265 li
84.3579 472.453 75.5615 463.657 64.7495 463.657 cv
53.9375 463.657 45.1416 472.453 45.1416 483.265 cv
40.6416 483.265 li
40.6416 469.972 51.4565 459.157 64.7495 459.157 cv
78.043 459.157 88.8579 469.972 88.8579 483.265 cv
cp
f
88.7319 485.742 mo
84.2554 485.284 li
84.3232 484.619 84.3579 483.94 84.3579 483.265 cv
88.8579 483.265 li
88.8579 484.092 88.8154 484.926 88.7319 485.742 cv
cp
f
85.9731 494.708 mo
82.0142 492.569 li
82.6216 491.445 83.1196 490.258 83.4946 489.039 cv
87.7954 490.362 li
87.3335 491.863 86.7207 493.325 85.9731 494.708 cv
cp
43.5396 494.734 mo
42.791 493.352 42.1763 491.891 41.7129 490.391 cv
46.0127 489.063 li
46.3887 490.281 46.8882 491.467 47.4966 492.59 cv
43.5396 494.734 li
cp
80.0059 501.931 mo
77.1563 498.449 li
78.1445 497.64 79.0591 496.73 79.8735 495.745 cv
83.3413 498.612 li
82.3418 499.822 81.2192 500.938 80.0059 501.931 cv
cp
49.5146 501.95 mo
48.2993 500.958 47.1758 499.842 46.1748 498.634 cv
49.6406 495.763 li
50.4556 496.747 51.3706 497.656 52.3604 498.463 cv
49.5146 501.95 li
cp
71.7383 506.343 mo
70.4355 502.036 li
71.6558 501.667 72.8452 501.175 73.9702 500.574 cv
76.0903 504.543 li
74.7051 505.283 73.2407 505.889 71.7383 506.343 cv
cp
57.7925 506.353 mo
56.291 505.901 54.8252 505.297 53.4355 504.558 cv
55.5488 500.585 li
56.6782 501.187 57.8691 501.677 59.0884 502.043 cv
57.7925 506.353 li
cp
64.751 507.373 mo
63.9688 507.373 63.1831 507.335 62.4141 507.261 cv
62.8467 502.781 li
64.1074 502.903 65.4185 502.901 66.6821 502.779 cv
67.1177 507.257 li
66.3389 507.333 65.5425 507.372 64.751 507.373 cv
cp
f
40.7676 485.742 mo
40.6841 484.926 40.6416 484.092 40.6416 483.265 cv
45.1416 483.265 li
45.1416 483.94 45.1763 484.619 45.2441 485.284 cv
40.7676 485.742 li
cp
f
129.5 551.017 mo
0 551.017 li
0 533.267 li
4.5 533.267 li
4.5 546.517 li
125 546.517 li
125 533.267 li
129.5 533.267 li
129.5 551.017 li
cp
f
120.571 539.017 mo
116.071 539.017 li
116.071 533.267 li
120.571 533.267 li
120.571 539.017 li
cp
f
111.643 539.017 mo
107.143 539.017 li
107.143 533.267 li
111.643 533.267 li
111.643 539.017 li
cp
f
102.714 539.017 mo
98.2144 539.017 li
98.2144 533.267 li
102.714 533.267 li
102.714 539.017 li
cp
f
93.7861 539.017 mo
89.2861 539.017 li
89.2861 533.267 li
93.7861 533.267 li
93.7861 539.017 li
cp
f
84.8574 539.017 mo
80.3574 539.017 li
80.3574 533.267 li
84.8574 533.267 li
84.8574 539.017 li
cp
f
75.9282 539.017 mo
71.4282 539.017 li
71.4282 533.267 li
75.9282 533.267 li
75.9282 539.017 li
cp
f
67 539.017 mo
62.5 539.017 li
62.5 533.267 li
67 533.267 li
67 539.017 li
cp
f
58.0713 539.017 mo
53.5713 539.017 li
53.5713 533.267 li
58.0713 533.267 li
58.0713 539.017 li
cp
f
49.1431 539.017 mo
44.6431 539.017 li
44.6431 533.267 li
49.1431 533.267 li
49.1431 539.017 li
cp
f
40.2144 539.017 mo
35.7144 539.017 li
35.7144 533.267 li
40.2144 533.267 li
40.2144 539.017 li
cp
f
31.2856 539.017 mo
26.7856 539.017 li
26.7856 533.267 li
31.2856 533.267 li
31.2856 539.017 li
cp
f
22.3569 539.017 mo
17.8569 539.017 li
17.8569 533.267 li
22.3569 533.267 li
22.3569 539.017 li
cp
f
13.4287 539.017 mo
8.92871 539.017 li
8.92871 533.267 li
13.4287 533.267 li
13.4287 539.017 li
cp
f
450.891 598.52 mo
454.402 598.52 li
454.402 608.279 li
456.977 608.279 li
456.977 598.52 li
460.47 598.52 li
460.47 596.269 li
450.891 596.269 li
450.891 598.52 li
cp
.0980392 .0941176 .0941176 rgb
f
462.104 608.279 mo
470.604 608.279 li
470.604 606.028 li
464.661 606.028 li
464.661 603.292 li
470.478 603.292 li
470.478 601.041 li
464.661 601.041 li
464.661 598.52 li
470.604 598.52 li
470.604 596.269 li
462.104 596.269 li
462.104 608.279 li
cp
f
479.099 603.778 mo
476.182 596.269 li
472.599 596.269 li
472.599 608.279 li
475.155 608.279 li
475.155 599.618 li
478.54 608.279 li
479.656 608.279 li
483.041 599.618 li
483.041 608.279 li
485.616 608.279 li
485.616 596.269 li
482.015 596.269 li
479.099 603.778 li
cp
f
493.246 601.743 mo
490.545 601.743 li
490.545 598.52 li
493.246 598.52 li
494.254 598.52 495.028 599.132 495.028 600.14 cv
495.028 601.131 494.254 601.743 493.246 601.743 cv
cp
493.606 596.269 mo
487.988 596.269 li
487.988 608.279 li
490.545 608.279 li
490.545 603.994 li
493.606 603.994 li
496.199 603.994 497.64 602.229 497.64 600.14 cv
497.64 598.034 496.217 596.269 493.606 596.269 cv
cp
f
501.705 596.269 mo
499.131 596.269 li
499.131 608.279 li
506.783 608.279 li
506.783 606.028 li
501.705 606.028 li
501.705 596.269 li
cp
f
511.605 603.994 mo
513.479 598.827 li
515.351 603.994 li
511.605 603.994 li
cp
511.875 596.269 mo
507.248 608.279 li
510.146 608.279 li
510.903 606.245 li
516.053 606.245 li
516.809 608.279 li
519.708 608.279 li
515.08 596.269 li
511.875 596.269 li
cp
f
518.931 598.52 mo
522.441 598.52 li
522.441 608.279 li
525.017 608.279 li
525.017 598.52 li
528.51 598.52 li
528.51 596.269 li
518.931 596.269 li
518.931 598.52 li
cp
f
538.643 598.52 mo
538.643 596.269 li
530.145 596.269 li
530.145 608.279 li
538.643 608.279 li
538.643 606.028 li
532.701 606.028 li
532.701 603.292 li
538.518 603.292 li
538.518 601.041 li
532.701 601.041 li
532.701 598.52 li
538.643 598.52 li
cp
f
437.017 542.35 mo
552.517 542.35 li
552.517 462.184 li
437.017 462.184 li
437.017 542.35 li
cp
557.017 546.85 mo
432.517 546.85 li
432.517 457.684 li
557.017 457.684 li
557.017 546.85 li
cp
.0952911 .0952911 .0952911 rgb
f
448.772 499.516 mo
444.267 499.516 li
444.267 495.01 li
448.772 495.016 li
448.772 499.516 li
cp
f
448.767 482.518 mo
444.267 482.518 li
444.267 478.354 li
448.767 478.354 li
448.767 482.518 li
cp
448.767 490.846 mo
444.267 490.846 li
444.267 486.682 li
448.767 486.682 li
448.767 490.846 li
cp
f
448.767 474.19 mo
444.267 474.19 li
444.267 469.684 li
448.772 469.684 li
448.767 474.19 li
cp
f
457.533 474.184 mo
453.153 474.184 li
453.153 469.684 li
457.533 469.684 li
457.533 474.184 li
cp
466.294 474.184 mo
461.914 474.184 li
461.914 469.684 li
466.294 469.684 li
466.294 474.184 li
cp
475.055 474.184 mo
470.674 474.184 li
470.674 469.684 li
475.055 469.684 li
475.055 474.184 li
cp
483.815 474.184 mo
479.435 474.184 li
479.435 469.684 li
483.815 469.684 li
483.815 474.184 li
cp
492.576 474.184 mo
488.196 474.184 li
488.196 469.684 li
492.576 469.684 li
492.576 474.184 li
cp
501.337 474.184 mo
496.957 474.184 li
496.957 469.684 li
501.337 469.684 li
501.337 474.184 li
cp
510.098 474.184 mo
505.718 474.184 li
505.718 469.684 li
510.098 469.684 li
510.098 474.184 li
cp
518.858 474.184 mo
514.479 474.184 li
514.479 469.684 li
518.858 469.684 li
518.858 474.184 li
cp
527.619 474.184 mo
523.239 474.184 li
523.239 469.684 li
527.619 469.684 li
527.619 474.184 li
cp
536.38 474.184 mo
532 474.184 li
532 469.684 li
536.38 469.684 li
536.38 474.184 li
cp
f
545.267 474.19 mo
540.761 474.184 li
540.761 469.684 li
545.267 469.684 li
545.267 474.19 li
cp
f
545.267 482.518 mo
540.767 482.518 li
540.767 478.354 li
545.267 478.354 li
545.267 482.518 li
cp
545.267 490.846 mo
540.767 490.846 li
540.767 486.682 li
545.267 486.682 li
545.267 490.846 li
cp
f
545.267 499.516 mo
540.761 499.516 li
540.767 495.01 li
545.267 495.01 li
545.267 499.516 li
cp
f
457.533 499.516 mo
453.152 499.516 li
453.152 495.016 li
457.533 495.016 li
457.533 499.516 li
cp
466.293 499.516 mo
461.913 499.516 li
461.913 495.016 li
466.293 495.016 li
466.293 499.516 li
cp
475.054 499.516 mo
470.674 499.516 li
470.674 495.016 li
475.054 495.016 li
475.054 499.516 li
cp
483.815 499.516 mo
479.435 499.516 li
479.435 495.016 li
483.815 495.016 li
483.815 499.516 li
cp
492.576 499.516 mo
488.195 499.516 li
488.195 495.016 li
492.576 495.016 li
492.576 499.516 li
cp
501.337 499.516 mo
496.956 499.516 li
496.956 495.016 li
501.337 495.016 li
501.337 499.516 li
cp
510.098 499.516 mo
505.717 499.516 li
505.717 495.016 li
510.098 495.016 li
510.098 499.516 li
cp
518.858 499.516 mo
514.478 499.516 li
514.478 495.016 li
518.858 495.016 li
518.858 499.516 li
cp
527.619 499.516 mo
523.238 499.516 li
523.238 495.016 li
527.619 495.016 li
527.619 499.516 li
cp
536.38 499.516 mo
531.999 499.516 li
531.999 495.016 li
536.38 495.016 li
536.38 499.516 li
cp
f
437.017 457.684 mo
552.517 457.684 li
552.517 447.184 li
437.017 447.184 li
437.017 457.684 li
cp
557.017 462.184 mo
432.517 462.184 li
432.517 442.684 li
557.017 442.684 li
557.017 462.184 li
cp
f
448.767 454.684 mo
444.267 454.684 li
444.267 450.184 li
448.767 450.184 li
448.767 454.684 li
cp
f
457.767 454.684 mo
453.267 454.684 li
453.267 450.184 li
457.767 450.184 li
457.767 454.684 li
cp
f
466.767 454.684 mo
462.267 454.684 li
462.267 450.184 li
466.767 450.184 li
466.767 454.684 li
cp
f
470.101 530.6 mo
448.767 530.6 li
448.767 509.266 li
470.101 509.266 li
470.101 530.6 li
cp
444.267 504.766 mo
444.267 535.1 li
474.601 535.1 li
474.601 504.766 li
444.267 504.766 li
cp
f
505.435 530.6 mo
484.101 530.6 li
484.101 509.266 li
505.435 509.266 li
505.435 530.6 li
cp
479.601 504.766 mo
479.601 535.1 li
509.935 535.1 li
509.935 504.766 li
479.601 504.766 li
cp
f
540.767 530.6 mo
519.435 530.6 li
519.435 509.266 li
540.767 509.266 li
540.767 530.6 li
cp
514.935 504.766 mo
514.935 535.1 li
545.267 535.1 li
545.267 504.766 li
514.935 504.766 li
cp
f
667.491 604.939 mo
665.222 596.26 li
663.224 596.26 li
660.937 604.939 li
658.83 596.26 li
655.968 596.26 li
659.406 608.27 li
662.125 608.27 li
664.214 600.023 li
666.32 608.27 li
669.039 608.27 li
672.46 596.26 li
669.597 596.26 li
667.491 604.939 li
cp
.0980392 .0941176 .0941176 rgb
f
673.661 608.27 mo
682.16 608.27 li
682.16 606.019 li
676.218 606.019 li
676.218 603.283 li
682.034 603.283 li
682.034 601.032 li
676.218 601.032 li
676.218 598.511 li
682.16 598.511 li
682.16 596.26 li
673.661 596.26 li
673.661 608.27 li
cp
f
690.024 606.019 mo
686.712 606.019 li
686.712 603.283 li
690.024 603.283 li
691.015 603.283 691.556 603.894 691.556 604.651 cv
691.556 605.515 690.979 606.019 690.024 606.019 cv
cp
686.712 598.511 mo
689.917 598.511 li
690.781 598.511 691.321 599.033 691.321 599.771 cv
691.321 600.546 690.781 601.032 689.917 601.032 cv
686.712 601.032 li
686.712 598.511 li
cp
691.861 602.076 mo
692.995 601.842 693.933 600.816 693.933 599.322 cv
693.933 597.718 692.762 596.26 690.476 596.26 cv
684.155 596.26 li
684.155 608.27 li
690.673 608.27 li
692.978 608.27 694.166 606.83 694.166 605.011 cv
694.166 603.517 693.157 602.275 691.861 602.076 cv
cp
f
705.45 606.019 mo
703.272 606.019 li
703.272 598.511 li
705.469 598.511 li
707.917 598.511 709.214 600.15 709.214 602.256 cv
709.214 604.309 707.827 606.019 705.45 606.019 cv
cp
705.45 596.26 mo
700.716 596.26 li
700.716 608.27 li
705.469 608.27 li
709.214 608.27 711.825 605.893 711.825 602.256 cv
711.825 598.656 709.214 596.26 705.45 596.26 cv
cp
f
713.64 608.27 mo
722.138 608.27 li
722.138 606.019 li
716.196 606.019 li
716.196 603.283 li
722.012 603.283 li
722.012 601.032 li
716.196 601.032 li
716.196 598.511 li
722.138 598.511 li
722.138 596.26 li
713.64 596.26 li
713.64 608.27 li
cp
f
726.329 599.538 mo
726.329 598.818 726.941 598.349 728.022 598.349 cv
729.246 598.349 730.542 598.763 731.515 599.664 cv
732.938 597.755 li
731.749 596.657 730.165 596.081 728.256 596.081 cv
725.429 596.081 723.7 597.737 723.7 599.736 cv
723.7 604.255 730.614 602.796 730.614 604.885 cv
730.614 605.587 729.948 606.217 728.526 606.217 cv
726.87 606.217 725.556 605.461 724.709 604.58 cv
723.305 606.578 li
724.438 607.712 726.095 608.486 728.418 608.486 cv
731.642 608.486 733.226 606.83 733.226 604.632 cv
733.226 600.15 726.329 601.428 726.329 599.538 cv
cp
f
734.933 608.27 mo
737.489 608.27 li
737.489 596.26 li
734.933 596.26 li
734.933 608.27 li
cp
f
745.067 603.859 mo
748.237 603.859 li
748.237 605.299 li
747.751 605.75 746.761 606.217 745.698 606.217 cv
743.501 606.217 741.917 604.542 741.917 602.275 cv
741.917 600.005 743.501 598.332 745.698 598.332 cv
746.958 598.332 747.984 599.051 748.543 599.898 cv
750.649 598.746 li
749.749 597.323 748.183 596.062 745.698 596.062 cv
742.169 596.062 739.288 598.475 739.288 602.275 cv
739.288 606.055 742.169 608.486 745.698 608.486 cv
747.858 608.486 749.569 607.604 750.794 606.236 cv
750.794 601.626 li
745.067 601.626 li
745.067 603.859 li
cp
f
761.017 596.26 mo
761.017 603.804 li
755.453 596.26 li
752.824 596.26 li
752.824 608.27 li
755.381 608.27 li
755.381 600.437 li
761.106 608.27 li
763.573 608.27 li
763.573 596.26 li
761.017 596.26 li
cp
f
704.578 551.792 mo
689.737 550.514 675.981 543.759 665.843 532.771 cv
655.64 521.712 650.021 507.329 650.021 492.27 cv
650.021 459.318 676.824 432.51 709.771 432.51 cv
742.717 432.51 769.521 459.318 769.521 492.27 cv
765.021 492.27 li
765.021 461.8 740.235 437.01 709.771 437.01 cv
679.306 437.01 654.521 461.8 654.521 492.27 cv
654.521 520.699 676.678 544.875 704.963 547.307 cv
704.578 551.792 li
cp
.0952911 .0952911 .0952911 rgb
f
714.961 551.792 mo
714.58 547.307 li
722.602 546.626 730.497 544.149 737.412 540.143 cv
739.668 544.038 li
732.183 548.373 723.639 551.054 714.961 551.792 cv
cp
f
709.772 465.776 mo
695.162 465.776 683.276 477.667 683.276 492.284 cv
683.276 506.899 695.162 518.79 709.772 518.79 cv
724.395 518.79 736.29 506.899 736.29 492.284 cv
736.29 477.667 724.395 465.776 709.772 465.776 cv
cp
709.772 523.29 mo
692.682 523.29 678.776 509.38 678.776 492.284 cv
678.776 475.186 692.682 461.276 709.772 461.276 cv
726.876 461.276 740.79 475.186 740.79 492.284 cv
740.79 509.38 726.876 523.29 709.772 523.29 cv
cp
f
752.911 523.29 mo
748.48 523.29 744.313 521.562 741.176 518.425 cv
738.03 515.332 736.29 511.151 736.29 506.668 cv
736.29 492.284 li
740.79 492.284 li
740.79 506.668 li
740.79 509.935 742.053 512.976 744.345 515.23 cv
746.645 517.53 749.682 518.79 752.911 518.79 cv
756.15 518.79 759.205 517.528 761.514 515.237 cv
763.771 512.968 765.021 509.922 765.021 506.668 cv
765.021 492.284 li
769.521 492.284 li
769.521 506.668 li
769.521 511.12 767.807 515.293 764.693 518.421 cv
761.526 521.564 757.346 523.29 752.911 523.29 cv
cp
f
713.423 478.506 mo
712.237 478.193 711.009 478.034 709.772 478.034 cv
709.729 473.533 li
709.848 473.535 li
709.852 473.535 709.856 473.535 709.861 473.535 cv
711.407 473.535 713.017 473.744 714.573 474.156 cv
713.423 478.506 li
cp
702.624 479.959 mo
700.358 476.072 li
701.774 475.247 703.294 474.611 704.874 474.182 cv
706.052 478.526 li
704.852 478.851 703.699 479.333 702.624 479.959 cv
cp
719.814 482.177 mo
718.931 481.299 717.936 480.54 716.857 479.92 cv
719.1 476.019 li
720.518 476.833 721.825 477.832 722.986 478.985 cv
719.814 482.177 li
cp
697.422 485.191 mo
693.521 482.947 li
694.336 481.531 695.335 480.224 696.49 479.062 cv
699.682 482.234 li
698.802 483.12 698.041 484.114 697.422 485.191 cv
cp
723.533 488.543 mo
723.207 487.346 722.724 486.194 722.095 485.119 cv
725.979 482.848 li
726.808 484.264 727.445 485.783 727.875 487.361 cv
723.533 488.543 li
cp
691.032 492.318 mo
691.032 492.284 li
691.032 490.655 691.242 489.036 691.657 487.473 cv
696.007 488.626 li
695.692 489.814 695.532 491.044 695.532 492.284 cv
691.032 492.318 li
cp
727.897 497.133 mo
723.55 495.97 li
723.87 494.774 724.032 493.534 724.032 492.284 cv
728.532 492.217 li
728.532 492.284 li
728.532 493.926 728.318 495.558 727.897 497.133 cv
cp
693.559 501.688 mo
692.734 500.271 692.102 498.75 691.676 497.17 cv
696.021 496 li
696.344 497.199 696.824 498.353 697.449 499.429 cv
693.559 501.688 li
cp
723.042 505.532 mo
719.858 502.351 li
720.74 501.468 721.503 500.476 722.126 499.4 cv
726.021 501.656 li
725.201 503.069 724.199 504.373 723.042 505.532 cv
cp
700.425 508.535 mo
699.01 507.719 697.703 506.718 696.543 505.561 cv
699.721 502.375 li
700.604 503.255 701.597 504.016 702.673 504.637 cv
700.425 508.535 li
cp
714.647 510.391 mo
713.479 506.045 li
714.679 505.723 715.833 505.243 716.91 504.619 cv
719.166 508.512 li
717.748 509.334 716.228 509.966 714.647 510.391 cv
cp
709.797 511.032 mo
709.772 511.032 li
708.139 511.032 706.516 510.821 704.949 510.405 cv
706.105 506.055 li
707.295 506.372 708.528 506.532 709.772 506.532 cv
709.797 511.032 li
cp
f
707.022 552.524 mo
712.521 552.524 li
712.521 547.024 li
707.022 547.024 li
707.022 552.524 li
cp
717.021 557.024 mo
702.522 557.024 li
702.522 542.524 li
717.021 542.524 li
717.021 557.024 li
cp
f
759.521 552.524 mo
765.021 552.524 li
765.021 547.024 li
759.521 547.024 li
759.521 552.524 li
cp
769.521 557.024 mo
755.021 557.024 li
755.021 542.524 li
769.521 542.524 li
769.521 557.024 li
cp
f
654.521 552.524 mo
660.021 552.524 li
660.021 547.024 li
654.521 547.024 li
654.521 552.524 li
cp
664.521 557.024 mo
650.021 557.024 li
650.021 542.524 li
664.521 542.524 li
664.521 557.024 li
cp
f
757.271 552.024 mo
714.771 552.024 li
714.771 547.524 li
757.271 547.524 li
757.271 552.024 li
cp
f
704.772 552.024 mo
662.271 552.024 li
662.271 547.524 li
704.772 547.524 li
704.772 552.024 li
cp
f
871.535 602.077 mo
872.868 601.842 874.164 600.852 874.164 599.338 cv
874.164 597.34 872.436 596.081 869.627 596.081 cv
867.521 596.081 866.008 596.891 865.035 597.989 cv
866.314 599.59 li
867.16 598.782 868.205 598.348 869.375 598.348 cv
870.617 598.348 871.607 598.817 871.607 599.772 cv
871.607 600.653 870.707 601.049 869.375 601.049 cv
868.925 601.049 868.097 601.049 867.881 601.032 cv
867.881 603.336 li
868.061 603.319 868.871 603.299 869.375 603.299 cv
871.05 603.299 871.788 603.733 871.788 604.686 cv
871.788 605.586 870.978 606.217 869.52 606.217 cv
868.349 606.217 867.034 605.713 866.225 604.848 cv
864.874 606.559 li
865.756 607.639 867.412 608.485 869.609 608.485 cv
872.49 608.485 874.345 607.028 874.345 604.958 cv
874.345 603.157 872.76 602.202 871.535 602.077 cv
cp
.0980392 .0941176 .0941176 rgb
f
881.004 606.02 mo
878.824 606.02 li
878.824 598.51 li
881.021 598.51 li
883.471 598.51 884.767 600.149 884.767 602.256 cv
884.767 604.309 883.38 606.02 881.004 606.02 cv
cp
881.004 596.26 mo
876.268 596.26 li
876.268 608.27 li
881.021 608.27 li
884.767 608.27 887.377 605.893 887.377 602.256 cv
887.377 598.655 884.767 596.26 881.004 596.26 cv
cp
f
900.318 603.768 mo
897.4 596.26 li
893.818 596.26 li
893.818 608.27 li
896.375 608.27 li
896.375 599.61 li
899.76 608.27 li
900.876 608.27 li
904.261 599.61 li
904.261 608.27 li
906.836 608.27 li
906.836 596.26 li
903.234 596.26 li
900.318 603.768 li
cp
f
914.916 606.217 mo
912.684 606.217 911.261 604.506 911.261 602.274 cv
911.261 600.024 912.684 598.331 914.916 598.331 cv
917.131 598.331 918.553 600.024 918.553 602.274 cv
918.553 604.506 917.131 606.217 914.916 606.217 cv
cp
914.916 596.063 mo
911.278 596.063 908.632 598.655 908.632 602.274 cv
908.632 605.893 911.278 608.485 914.916 608.485 cv
918.535 608.485 921.182 605.893 921.182 602.274 cv
921.182 598.655 918.535 596.063 914.916 596.063 cv
cp
f
927.713 606.02 mo
925.535 606.02 li
925.535 598.51 li
927.731 598.51 li
930.18 598.51 931.477 600.149 931.477 602.256 cv
931.477 604.309 930.09 606.02 927.713 606.02 cv
cp
927.713 596.26 mo
922.979 596.26 li
922.979 608.27 li
927.731 608.27 li
931.477 608.27 934.088 605.893 934.088 602.256 cv
934.088 598.655 931.477 596.26 927.713 596.26 cv
cp
f
935.902 608.27 mo
944.4 608.27 li
944.4 606.02 li
938.459 606.02 li
938.459 603.282 li
944.274 603.282 li
944.274 601.032 li
938.459 601.032 li
938.459 598.51 li
944.4 598.51 li
944.4 596.26 li
935.902 596.26 li
935.902 608.27 li
cp
f
948.862 596.26 mo
946.287 596.26 li
946.287 608.27 li
953.939 608.27 li
953.939 606.02 li
948.862 606.02 li
948.862 596.26 li
cp
f
955.666 608.27 mo
958.223 608.27 li
958.223 596.26 li
955.666 596.26 li
955.666 608.27 li
cp
f
968.789 603.805 mo
963.226 596.26 li
960.598 596.26 li
960.598 608.27 li
963.154 608.27 li
963.154 600.438 li
968.879 608.27 li
971.346 608.27 li
971.346 596.26 li
968.789 596.26 li
968.789 603.805 li
cp
f
978.922 601.625 mo
978.922 603.858 li
982.092 603.858 li
982.092 605.299 li
981.605 605.749 980.615 606.217 979.553 606.217 cv
977.355 606.217 975.771 604.543 975.771 602.274 cv
975.771 600.004 977.355 598.331 979.553 598.331 cv
980.813 598.331 981.839 599.051 982.397 599.897 cv
984.504 598.745 li
983.604 597.323 982.037 596.063 979.553 596.063 cv
976.023 596.063 973.143 598.475 973.143 602.274 cv
973.143 606.055 976.023 608.485 979.553 608.485 cv
981.713 608.485 983.424 607.604 984.648 606.235 cv
984.648 601.625 li
978.922 601.625 li
cp
f
924.765 550.931 mo
879.833 524.994 li
879.833 473.113 li
902.299 460.138 li
904.549 464.035 li
884.333 475.71 li
884.333 522.396 li
924.765 545.736 li
965.188 522.396 li
965.188 475.71 li
944.971 464.035 li
947.221 460.138 li
969.688 473.113 li
969.688 524.994 li
924.765 550.931 li
cp
.0952911 .0952911 .0952911 rgb
f
924.762 501.647 mo
880.957 476.355 li
883.207 472.458 li
924.762 496.451 li
966.314 472.46 li
968.564 476.357 li
924.762 501.647 li
cp
f
927.012 548.332 mo
922.512 548.332 li
922.512 499.049 li
927.012 499.049 li
927.012 548.332 li
cp
f
905.674 460.788 mo
924.763 471.81 li
943.852 460.789 li
943.852 438.746 li
924.763 427.723 li
905.674 438.745 li
905.674 460.788 li
cp
924.763 477.006 mo
901.174 463.385 li
901.174 436.147 li
924.763 422.526 li
948.352 436.148 li
948.352 463.388 li
924.763 477.006 li
cp
f
924.763 452.364 mo
902.299 439.395 li
904.549 435.497 li
924.763 447.168 li
944.977 435.498 li
947.227 439.396 li
924.763 452.364 li
cp
f
927.013 474.408 mo
922.513 474.408 li
922.513 449.766 li
927.013 449.766 li
927.013 474.408 li
cp
f
859.583 526.762 mo
854.262 523.688 li
859.584 520.616 li
861.359 523.689 li
859.583 526.762 li
cp
f
874.255 517.342 mo
872.005 513.445 li
876.146 511.054 li
878.396 514.952 li
874.255 517.342 li
cp
865.975 522.123 mo
863.725 518.225 li
867.865 515.834 li
870.115 519.732 li
865.975 522.123 li
cp
f
975.267 517.342 mo
971.126 514.952 li
973.376 511.054 li
977.517 513.445 li
975.267 517.342 li
cp
983.547 522.123 mo
979.407 519.732 li
981.657 515.834 li
985.797 518.225 li
983.547 522.123 li
cp
f
989.938 526.762 mo
988.162 523.689 li
989.938 520.616 li
995.26 523.688 li
989.938 526.762 li
cp
f
981.659 531.544 mo
979.407 527.649 li
983.547 525.257 li
985.799 529.154 li
981.659 531.544 li
cp
973.379 536.328 mo
971.127 532.431 li
975.267 530.04 li
977.519 533.936 li
973.379 536.328 li
cp
965.098 541.11 mo
962.848 537.213 li
966.987 534.823 li
969.237 538.719 li
965.098 541.11 li
cp
956.818 545.893 mo
954.566 541.997 li
958.706 539.605 li
960.958 543.501 li
956.818 545.893 li
cp
948.537 550.675 mo
946.287 546.779 li
950.427 544.388 li
952.677 548.285 li
948.537 550.675 li
cp
940.258 555.458 mo
938.006 551.562 li
942.146 549.17 li
944.397 553.067 li
940.258 555.458 li
cp
931.977 560.241 mo
929.727 556.344 li
933.866 553.954 li
936.116 557.85 li
931.977 560.241 li
cp
f
924.763 564.409 mo
921.689 562.633 li
923.939 558.737 li
925.586 558.737 li
927.836 562.633 li
924.763 564.409 li
cp
f
867.865 531.544 mo
863.725 529.154 li
865.975 525.257 li
870.115 527.648 li
867.865 531.544 li
cp
876.146 536.328 mo
872.005 533.936 li
874.255 530.04 li
878.396 532.431 li
876.146 536.328 li
cp
884.426 541.11 mo
880.286 538.719 li
882.536 534.823 li
886.676 537.213 li
884.426 541.11 li
cp
892.707 545.893 mo
888.566 543.501 li
890.816 539.605 li
894.957 541.997 li
892.707 545.893 li
cp
900.987 550.676 mo
896.847 548.285 li
899.097 544.388 li
903.237 546.78 li
900.987 550.676 li
cp
909.269 555.458 mo
905.128 553.068 li
907.378 549.171 li
911.519 551.562 li
909.269 555.458 li
cp
917.549 560.242 mo
913.408 557.85 li
915.658 553.954 li
919.799 556.345 li
917.549 560.242 li
cp
f
35.3198 814.53 mo
35.3198 813.809 35.9316 813.34 37.0122 813.34 cv
38.2363 813.34 39.5327 813.754 40.5054 814.655 cv
41.9277 812.747 li
40.7393 811.649 39.1548 811.073 37.2461 811.073 cv
34.4194 811.073 32.6909 812.729 32.6909 814.727 cv
32.6909 819.247 39.605 817.788 39.605 819.876 cv
39.605 820.579 38.9385 821.209 37.5161 821.209 cv
35.8599 821.209 34.5454 820.453 33.6992 819.571 cv
32.2944 821.569 li
33.4292 822.704 35.0854 823.478 37.4082 823.478 cv
40.6313 823.478 42.2158 821.821 42.2158 819.625 cv
42.2158 815.141 35.3198 816.419 35.3198 814.53 cv
cp
.0980392 .0941176 .0941176 rgb
f
42.9507 813.502 mo
46.4614 813.502 li
46.4614 823.262 li
49.0366 823.262 li
49.0366 813.502 li
52.5293 813.502 li
52.5293 811.252 li
42.9507 811.252 li
42.9507 813.502 li
cp
f
62.3931 818.382 mo
62.3931 820.057 61.4385 821.209 59.584 821.209 cv
57.7295 821.209 56.7573 820.057 56.7573 818.382 cv
56.7573 811.252 li
54.1646 811.252 li
54.1646 818.454 li
54.1646 821.425 55.9292 823.478 59.584 823.478 cv
63.2393 823.478 65.0034 821.425 65.0034 818.454 cv
65.0034 811.252 li
62.3931 811.252 li
62.3931 818.382 li
cp
f
72.1118 821.011 mo
69.9331 821.011 li
69.9331 813.502 li
72.1299 813.502 li
74.5786 813.502 75.875 815.141 75.875 817.249 cv
75.875 819.3 74.4883 821.011 72.1118 821.011 cv
cp
72.1118 811.252 mo
67.3765 811.252 li
67.3765 823.262 li
72.1299 823.262 li
75.875 823.262 78.4858 820.885 78.4858 817.249 cv
78.4858 813.647 75.875 811.252 72.1118 811.252 cv
cp
f
80.3003 823.262 mo
82.8569 823.262 li
82.8569 811.252 li
80.3003 811.252 li
80.3003 823.262 li
cp
f
90.9395 821.209 mo
88.707 821.209 87.2847 819.499 87.2847 817.266 cv
87.2847 815.015 88.707 813.323 90.9395 813.323 cv
93.1543 813.323 94.5767 815.015 94.5767 817.266 cv
94.5767 819.499 93.1543 821.209 90.9395 821.209 cv
cp
90.9395 811.054 mo
87.3022 811.054 84.6558 813.647 84.6558 817.266 cv
84.6558 820.885 87.3022 823.478 90.9395 823.478 cv
94.5586 823.478 97.2056 820.885 97.2056 817.266 cv
97.2056 813.647 94.5586 811.054 90.9395 811.054 cv
cp
f
92.5508 673.883 mo
88.5518 673.883 85.2983 677.136 85.2974 681.133 cv
85.2974 685.131 88.5483 688.383 92.5444 688.383 cv
92.5444 690.633 li
92.5469 688.383 li
94.4834 688.383 96.3037 687.628 97.6733 686.258 cv
99.0435 684.888 99.7979 683.067 99.7974 681.131 cv
99.7983 679.195 99.0449 677.375 97.6753 676.006 cv
96.3062 674.637 94.4863 673.883 92.5508 673.883 cv
cp
92.5479 692.883 mo
92.5444 692.883 li
86.0669 692.883 80.7974 687.612 80.7974 681.133 cv
80.7983 674.654 86.0713 669.383 92.5508 669.383 cv
95.688 669.383 98.6377 670.605 100.857 672.824 cv
103.077 675.043 104.299 677.995 104.297 681.132 cv
104.298 684.268 103.076 687.219 100.856 689.44 cv
98.6357 691.661 95.6855 692.883 92.5479 692.883 cv
cp
.0952911 .0952911 .0952911 rgb
f
73.2158 703.649 mo
71.6245 702.058 li
64.0698 694.502 61.1733 683.416 64.0664 673.125 cv
68.3984 674.341 li
66.1499 682.341 68.0254 690.907 73.2876 697.213 cv
108.63 661.868 li
102.326 656.608 93.7651 654.73 85.7725 656.969 cv
84.5576 652.637 li
94.8418 649.751 105.922 652.653 113.475 660.205 cv
115.066 661.795 li
73.2158 703.649 li
cp
f
69.5918 647.02 mo
66.6172 647.02 63.8179 648.18 61.7095 650.288 cv
57.4189 654.578 57.3633 661.601 61.5859 665.944 cv
66.2124 670.571 li
81.9873 654.801 li
77.4727 650.287 li
75.3657 648.18 72.5669 647.02 69.5918 647.02 cv
cp
66.2114 676.934 mo
58.3813 669.103 li
52.4312 662.985 52.5068 653.126 58.5283 647.105 cv
61.4863 644.148 65.4155 642.52 69.5918 642.52 cv
73.7686 642.52 77.6973 644.148 80.6543 647.105 cv
88.3525 654.801 li
66.2114 676.934 li
cp
f
94.2671 753.496 mo
91.0845 750.314 li
95.5552 745.841 li
98.7378 749.023 li
94.2671 753.496 li
cp
f
39.6069 772.52 mo
100.014 772.52 li
98.8584 756.871 85.7534 744.489 69.8115 744.489 cv
53.8687 744.489 40.7632 756.871 39.6069 772.52 cv
cp
104.597 777.02 mo
35.0244 777.02 li
35.0244 774.77 li
35.0244 755.591 50.6299 739.989 69.8115 739.989 cv
88.9922 739.989 104.597 755.591 104.597 774.77 cv
104.597 777.02 li
cp
f
64.3115 753.179 mo
63.1885 748.822 li
65.3276 748.27 67.5557 747.991 69.8101 747.991 cv
69.8101 752.491 li
67.9341 752.491 66.0845 752.722 64.3115 753.179 cv
cp
f
48.7354 767.507 mo
44.4844 766.033 li
46.9697 758.871 52.396 753.067 59.3716 750.109 cv
61.1284 754.251 li
55.3218 756.714 50.8047 761.545 48.7354 767.507 cv
cp
f
21.2402 700.711 mo
18.0366 700.711 15.4307 703.315 15.4307 706.516 cv
15.4307 709.721 18.0366 712.329 21.2402 712.329 cv
24.4414 712.329 27.0459 709.721 27.0459 706.516 cv
27.0459 703.315 24.4414 700.711 21.2402 700.711 cv
cp
21.2402 716.829 mo
15.5557 716.829 10.9307 712.203 10.9307 706.516 cv
10.9307 700.834 15.5557 696.211 21.2402 696.211 cv
26.9229 696.211 31.5459 700.834 31.5459 706.516 cv
31.5459 712.203 26.9229 716.829 21.2402 716.829 cv
cp
f
28.5259 702.416 mo
25.3433 699.234 li
58.5161 666.056 li
61.6987 669.238 li
28.5259 702.416 li
cp
f
57.2578 745.72 mo
25.3438 713.804 li
28.5254 710.623 li
60.4395 742.539 li
57.2578 745.72 li
cp
f
94.7949 704.907 mo
90.2949 704.907 li
90.2949 697.52 li
94.7949 697.52 li
94.7949 704.907 li
cp
f
102.48 702.849 mo
98.7881 696.447 li
102.687 694.199 li
106.379 700.601 li
102.48 702.849 li
cp
f
112.009 694.969 mo
105.612 691.278 li
107.861 687.379 li
114.258 691.071 li
112.009 694.969 li
cp
f
116.319 683.383 mo
108.934 683.383 li
108.934 678.883 li
116.319 678.883 li
116.319 683.383 li
cp
f
444.924 813.502 mo
448.435 813.502 li
448.435 823.262 li
451.01 823.262 li
451.01 813.502 li
454.503 813.502 li
454.503 811.252 li
444.924 811.252 li
444.924 813.502 li
cp
.0980392 .0941176 .0941176 rgb
f
464.366 815.969 mo
458.694 815.969 li
458.694 811.252 li
456.138 811.252 li
456.138 823.262 li
458.694 823.262 li
458.694 818.202 li
464.366 818.202 li
464.366 823.262 li
466.941 823.262 li
466.941 811.252 li
464.366 811.252 li
464.366 815.969 li
cp
f
469.296 823.262 mo
477.794 823.262 li
477.794 821.011 li
471.853 821.011 li
471.853 818.274 li
477.668 818.274 li
477.668 816.024 li
471.853 816.024 li
471.853 813.502 li
477.794 813.502 li
477.794 811.252 li
469.296 811.252 li
469.296 823.262 li
cp
f
483.677 813.502 mo
487.188 813.502 li
487.188 823.262 li
489.764 823.262 li
489.764 813.502 li
493.256 813.502 li
493.256 811.252 li
483.677 811.252 li
483.677 813.502 li
cp
f
500.167 821.209 mo
497.935 821.209 496.512 819.499 496.512 817.266 cv
496.512 815.015 497.935 813.323 500.167 813.323 cv
502.382 813.323 503.805 815.015 503.805 817.266 cv
503.805 819.499 502.382 821.209 500.167 821.209 cv
cp
500.167 811.054 mo
496.529 811.054 493.883 813.647 493.883 817.266 cv
493.883 820.885 496.529 823.478 500.167 823.478 cv
503.786 823.478 506.434 820.885 506.434 817.266 cv
506.434 813.647 503.786 811.054 500.167 811.054 cv
cp
f
516.458 818.382 mo
516.458 820.057 515.504 821.209 513.648 821.209 cv
511.795 821.209 510.822 820.057 510.822 818.382 cv
510.822 811.252 li
508.229 811.252 li
508.229 818.454 li
508.229 821.425 509.994 823.478 513.648 823.478 cv
517.305 823.478 519.068 821.425 519.068 818.454 cv
519.068 811.252 li
516.458 811.252 li
516.458 818.382 li
cp
f
527.275 813.323 mo
528.5 813.323 529.58 814.097 530.084 815.069 cv
532.281 813.989 li
531.434 812.477 529.904 811.054 527.275 811.054 cv
523.656 811.054 520.865 813.557 520.865 817.266 cv
520.865 820.958 523.656 823.478 527.275 823.478 cv
529.904 823.478 531.434 822.02 532.281 820.525 cv
530.084 819.462 li
529.58 820.435 528.5 821.209 527.275 821.209 cv
525.078 821.209 523.494 819.535 523.494 817.266 cv
523.494 814.997 525.078 813.323 527.275 813.323 cv
cp
f
542.035 811.252 mo
542.035 815.969 li
536.363 815.969 li
536.363 811.252 li
533.807 811.252 li
533.807 823.262 li
536.363 823.262 li
536.363 818.202 li
542.035 818.202 li
542.035 823.262 li
544.61 823.262 li
544.61 811.252 li
542.035 811.252 li
cp
f
494.086 683.008 mo
491.943 679.051 li
496.076 676.812 498.645 672.508 498.645 667.819 cv
498.645 660.789 492.925 655.069 485.895 655.069 cv
478.864 655.069 473.145 660.789 473.145 667.819 cv
473.145 672.507 475.712 676.812 479.846 679.051 cv
477.703 683.008 li
472.115 679.981 468.645 674.161 468.645 667.819 cv
468.645 658.307 476.383 650.569 485.895 650.569 cv
495.406 650.569 503.145 658.307 503.145 667.819 cv
503.145 674.161 499.674 679.981 494.086 683.008 cv
cp
.0952911 .0952911 .0952911 rgb
f
480.919 753.073 mo
533.481 753.073 li
533.481 701.135 li
533.481 699.838 532.973 698.614 532.049 697.687 cv
531.126 696.765 529.906 696.256 528.618 696.256 cv
527.317 696.256 526.097 696.763 525.181 697.685 cv
524.242 698.616 523.731 699.838 523.731 701.135 cv
523.731 701.137 523.731 701.139 523.731 701.141 cv
523.731 702.383 522.724 703.391 521.481 703.391 cv
520.24 703.391 519.233 702.385 519.231 701.145 cv
519.231 701.143 519.231 701.142 519.231 701.141 cv
519.231 699.838 518.725 698.61 517.805 697.683 cv
516.889 696.764 515.667 696.256 514.368 696.256 cv
513.076 696.256 511.857 696.764 510.938 697.687 cv
510.005 698.615 509.495 699.839 509.495 701.141 cv
509.495 702.383 508.487 703.391 507.245 703.391 cv
506.003 703.391 504.995 702.383 504.995 701.141 cv
504.995 699.829 504.491 698.603 503.576 697.685 cv
502.654 696.765 501.431 696.256 500.134 696.256 cv
498.84 696.256 497.614 696.766 496.684 697.692 cv
495.769 698.609 495.262 699.833 495.262 701.135 cv
495.262 702.377 494.254 703.385 493.012 703.385 cv
491.769 703.385 490.762 702.377 490.762 701.135 cv
490.762 667.819 li
490.762 666.516 490.255 665.293 489.335 664.377 cv
488.417 663.458 487.196 662.954 485.892 662.954 cv
484.593 662.954 483.371 663.459 482.45 664.377 cv
481.53 665.292 481.024 666.514 481.024 667.819 cv
481.024 726.733 li
481.024 727.587 480.54 728.369 479.775 728.749 cv
479.01 729.129 478.095 729.042 477.414 728.525 cv
471.539 724.065 464.531 721.708 457.147 721.708 cv
454.464 721.708 452.281 723.892 452.281 726.577 cv
452.281 729.261 454.464 731.446 457.147 731.446 cv
469.555 731.446 479.782 740.958 480.919 753.073 cv
cp
535.731 757.573 mo
478.774 757.573 li
477.532 757.573 476.524 756.565 476.524 755.323 cv
476.524 744.638 467.832 735.946 457.147 735.946 cv
451.983 735.946 447.781 731.743 447.781 726.577 cv
447.781 721.411 451.983 717.208 457.147 717.208 cv
464.057 717.208 470.677 719.028 476.524 722.506 cv
476.524 667.819 li
476.524 665.308 477.501 662.954 479.274 661.189 cv
481.044 659.425 483.395 658.454 485.892 658.454 cv
488.399 658.454 490.751 659.427 492.516 661.194 cv
494.285 662.957 495.262 665.311 495.262 667.819 cv
495.262 693.125 li
496.721 692.232 498.394 691.756 500.134 691.756 cv
502.632 691.756 504.984 692.732 506.759 694.504 cv
506.933 694.678 507.098 694.858 507.256 695.042 cv
507.415 694.857 507.583 694.677 507.758 694.502 cv
509.521 692.734 511.872 691.756 514.368 691.756 cv
516.871 691.756 519.225 692.734 520.994 694.509 cv
521.168 694.683 521.333 694.864 521.49 695.048 cv
521.652 694.861 521.822 694.678 522 694.501 cv
523.756 692.735 526.11 691.756 528.618 691.756 cv
531.107 691.756 533.456 692.733 535.231 694.506 cv
537.006 696.286 537.981 698.639 537.981 701.135 cv
537.981 755.323 li
537.981 756.565 536.974 757.573 535.731 757.573 cv
cp
f
526.983 766.057 mo
526.038 766.057 525.269 766.826 525.269 767.77 cv
525.269 768.715 526.038 769.485 526.983 769.485 cv
527.926 769.485 528.692 768.715 528.692 767.77 cv
528.692 766.826 527.926 766.057 526.983 766.057 cv
cp
526.983 773.985 mo
523.557 773.985 520.769 771.197 520.769 767.77 cv
520.769 764.344 523.557 761.557 526.983 761.557 cv
530.407 761.557 533.192 764.344 533.192 767.77 cv
533.192 771.197 530.407 773.985 526.983 773.985 cv
cp
f
541.753 780.219 mo
537.253 780.219 li
537.253 757.573 li
477.246 757.573 li
477.246 780.219 li
472.746 780.219 li
472.746 753.073 li
541.753 753.073 li
541.753 780.219 li
cp
f
488.144 647.502 mo
483.644 647.502 li
483.644 639.321 li
488.144 639.321 li
488.144 647.502 li
cp
f
473.785 651.345 mo
469.694 644.265 li
473.591 642.013 li
477.682 649.093 li
473.785 651.345 li
cp
f
467.175 659.611 mo
460.091 655.519 li
462.342 651.623 li
469.426 655.714 li
467.175 659.611 li
cp
f
465.575 670.071 mo
457.394 670.071 li
457.394 665.571 li
465.575 665.571 li
465.575 670.071 li
cp
f
462.342 684.021 mo
460.091 680.125 li
467.175 676.033 li
469.426 679.929 li
462.342 684.021 li
cp
f
509.45 684.019 mo
502.37 679.929 li
504.62 676.033 li
511.7 680.123 li
509.45 684.019 li
cp
f
514.394 670.071 mo
506.212 670.071 li
506.212 665.571 li
514.394 665.571 li
514.394 670.071 li
cp
f
504.621 659.611 mo
502.369 655.714 li
509.449 651.623 li
511.701 655.519 li
504.621 659.611 li
cp
f
498.001 651.346 mo
494.104 649.096 li
498.195 642.014 li
502.092 644.264 li
498.001 651.346 li
cp
f
206.538 818.977 mo
208.411 813.809 li
210.283 818.977 li
206.538 818.977 li
cp
206.808 811.252 mo
202.181 823.262 li
205.08 823.262 li
205.836 821.228 li
210.985 821.228 li
211.742 823.262 li
214.641 823.262 li
210.013 811.252 li
206.808 811.252 li
cp
.0980392 .0941176 .0941176 rgb
f
220.489 821.011 mo
218.31 821.011 li
218.31 813.503 li
220.507 813.503 li
222.956 813.503 224.252 815.142 224.252 817.249 cv
224.252 819.301 222.865 821.011 220.489 821.011 cv
cp
220.489 811.252 mo
215.753 811.252 li
215.753 823.262 li
220.507 823.262 li
224.252 823.262 226.863 820.885 226.863 817.249 cv
226.863 813.647 224.252 811.252 220.489 811.252 cv
cp
f
231.162 818.977 mo
233.035 813.809 li
234.907 818.977 li
231.162 818.977 li
cp
231.432 811.252 mo
226.805 823.262 li
229.704 823.262 li
230.46 821.228 li
235.609 821.228 li
236.366 823.262 li
239.265 823.262 li
234.637 811.252 li
231.432 811.252 li
cp
f
245.635 816.726 mo
242.934 816.726 li
242.934 813.503 li
245.635 813.503 li
246.643 813.503 247.417 814.116 247.417 815.124 cv
247.417 816.114 246.643 816.726 245.635 816.726 cv
cp
245.995 811.252 mo
240.377 811.252 li
240.377 823.262 li
242.934 823.262 li
242.934 818.977 li
245.995 818.977 li
248.588 818.977 250.028 817.212 250.028 815.124 cv
250.028 813.017 248.606 811.252 245.995 811.252 cv
cp
f
250.889 813.503 mo
254.4 813.503 li
254.4 823.262 li
256.975 823.262 li
256.975 813.503 li
260.468 813.503 li
260.468 811.252 li
250.889 811.252 li
250.889 813.503 li
cp
f
262.103 823.262 mo
264.66 823.262 li
264.66 811.252 li
262.103 811.252 li
262.103 823.262 li
cp
f
272.004 820.471 mo
268.673 811.252 li
265.774 811.252 li
270.401 823.262 li
273.606 823.262 li
278.234 811.252 li
275.335 811.252 li
272.004 820.471 li
cp
f
279.347 823.262 mo
287.845 823.262 li
287.845 821.011 li
281.903 821.011 li
281.903 818.275 li
287.719 818.275 li
287.719 816.024 li
281.903 816.024 li
281.903 813.503 li
287.845 813.503 li
287.845 811.252 li
279.347 811.252 li
279.347 823.262 li
cp
f
299.202 821.011 mo
297.023 821.011 li
297.023 813.503 li
299.22 813.503 li
301.668 813.503 302.965 815.142 302.965 817.249 cv
302.965 819.301 301.578 821.011 299.202 821.011 cv
cp
299.202 811.252 mo
294.466 811.252 li
294.466 823.262 li
299.22 823.262 li
302.965 823.262 305.576 820.885 305.576 817.249 cv
305.576 813.647 302.965 811.252 299.202 811.252 cv
cp
f
307.39 823.262 mo
315.889 823.262 li
315.889 821.011 li
309.947 821.011 li
309.947 818.275 li
315.763 818.275 li
315.763 816.024 li
309.947 816.024 li
309.947 813.503 li
315.889 813.503 li
315.889 811.252 li
307.39 811.252 li
307.39 823.262 li
cp
f
320.08 814.53 mo
320.08 813.809 320.692 813.341 321.773 813.341 cv
322.997 813.341 324.293 813.755 325.266 814.656 cv
326.688 812.747 li
325.5 811.649 323.916 811.073 322.007 811.073 cv
319.18 811.073 317.452 812.729 317.452 814.728 cv
317.452 819.247 324.366 817.789 324.366 819.877 cv
324.366 820.58 323.699 821.209 322.277 821.209 cv
320.621 821.209 319.306 820.454 318.46 819.571 cv
317.056 821.57 li
318.19 822.704 319.846 823.478 322.169 823.478 cv
325.392 823.478 326.977 821.822 326.977 819.625 cv
326.977 815.142 320.08 816.42 320.08 814.53 cv
cp
f
328.684 823.262 mo
331.24 823.262 li
331.24 811.252 li
328.684 811.252 li
328.684 823.262 li
cp
f
338.819 818.851 mo
341.988 818.851 li
341.988 820.292 li
341.501 820.742 340.511 821.209 339.449 821.209 cv
337.252 821.209 335.668 819.535 335.668 817.266 cv
335.668 814.998 337.252 813.323 339.449 813.323 cv
340.709 813.323 341.735 814.043 342.294 814.89 cv
344.4 813.738 li
343.5 812.315 341.934 811.054 339.449 811.054 cv
335.92 811.054 333.039 813.467 333.039 817.266 cv
333.039 821.047 335.92 823.478 339.449 823.478 cv
341.609 823.478 343.32 822.596 344.544 821.228 cv
344.544 816.619 li
338.819 816.619 li
338.819 818.851 li
cp
f
354.768 811.252 mo
354.768 818.797 li
349.204 811.252 li
346.575 811.252 li
346.575 823.262 li
349.132 823.262 li
349.132 815.43 li
354.857 823.262 li
357.324 823.262 li
357.324 811.252 li
354.768 811.252 li
cp
f
306.339 771.229 mo
267.953 771.229 li
267.953 758.485 li
272.453 758.485 li
272.453 766.729 li
301.839 766.729 li
301.839 758.485 li
306.339 758.485 li
306.339 771.229 li
cp
.0952911 .0952911 .0952911 rgb
f
313.76 771.229 mo
260.535 771.229 li
260.535 766.729 li
313.76 766.729 li
313.76 771.229 li
cp
f
347.002 740.459 mo
242.079 740.459 li
242.079 719.969 li
242.079 719.133 241.399 718.454 240.563 718.454 cv
227.291 718.454 li
227.291 664.227 li
227.291 662.546 227.945 660.962 229.135 659.766 cv
230.338 658.568 231.923 657.913 233.607 657.913 cv
290.567 657.913 li
290.567 662.413 li
233.607 662.413 li
233.122 662.413 232.664 662.602 232.318 662.947 cv
231.981 663.286 231.791 663.744 231.791 664.227 cv
231.791 713.954 li
240.563 713.954 li
243.88 713.954 246.579 716.652 246.579 719.969 cv
246.579 735.959 li
342.502 735.959 li
342.502 664.227 li
342.502 663.745 342.312 663.288 341.966 662.941 cv
341.626 662.599 341.173 662.413 340.687 662.413 cv
335.153 662.413 li
335.153 657.913 li
340.687 657.913 li
342.38 657.913 343.967 658.571 345.155 659.766 cv
346.345 660.959 347.002 662.544 347.002 664.227 cv
347.002 740.459 li
cp
f
246.579 749.51 mo
340.687 749.51 li
341.175 749.51 341.628 749.325 341.961 748.989 cv
342.314 748.637 342.502 748.182 342.502 747.696 cv
342.502 740.459 li
246.579 740.459 li
246.579 749.51 li
cp
340.687 754.01 mo
242.079 754.01 li
242.079 735.959 li
347.002 735.959 li
347.002 747.696 li
347.002 749.388 346.343 750.976 345.146 752.167 cv
343.972 753.352 342.385 754.01 340.687 754.01 cv
cp
f
337.403 730.858 mo
244.329 730.858 li
244.329 726.358 li
332.903 726.358 li
332.903 705.723 li
337.403 705.723 li
337.403 730.858 li
cp
f
241.392 716.204 mo
236.892 716.204 li
236.892 667.512 li
290.567 667.512 li
290.567 672.012 li
241.392 672.012 li
241.392 716.204 li
cp
f
231.939 726.135 mo
227.14 726.135 li
227.14 721.635 li
231.939 721.635 li
231.939 726.135 li
cp
f
234.821 763.547 mo
224.259 763.547 li
224.259 759.047 li
234.821 759.047 li
234.821 763.547 li
cp
f
218.52 718.454 mo
217.697 718.454 217.002 719.148 217.002 719.969 cv
217.002 765.217 li
217.002 766.051 217.683 766.729 218.52 766.729 cv
240.563 766.729 li
241.399 766.729 242.079 766.051 242.079 765.217 cv
242.079 719.969 li
242.079 719.133 241.399 718.454 240.563 718.454 cv
218.52 718.454 li
cp
240.563 771.229 mo
218.52 771.229 li
215.202 771.229 212.502 768.532 212.502 765.217 cv
212.502 719.969 li
212.502 716.652 215.202 713.954 218.52 713.954 cv
240.563 713.954 li
243.88 713.954 246.579 716.652 246.579 719.969 cv
246.579 765.217 li
246.579 768.532 243.88 771.229 240.563 771.229 cv
cp
f
315.259 662.413 mo
310.459 662.413 li
310.459 657.913 li
315.259 657.913 li
315.259 662.413 li
cp
f
320.059 704.045 mo
305.66 704.045 li
305.66 699.545 li
320.059 699.545 li
320.059 704.045 li
cp
f
296.246 652.811 mo
294.355 652.811 292.817 654.349 292.817 656.239 cv
292.817 705.723 li
292.817 707.61 294.355 709.145 296.246 709.145 cv
329.476 709.145 li
331.366 709.145 332.903 707.61 332.903 705.723 cv
332.903 656.239 li
332.903 654.349 331.366 652.811 329.476 652.811 cv
296.246 652.811 li
cp
329.476 713.645 mo
296.246 713.645 li
291.874 713.645 288.317 710.091 288.317 705.723 cv
288.317 656.239 li
288.317 651.868 291.874 648.311 296.246 648.311 cv
329.476 648.311 li
333.847 648.311 337.403 651.868 337.403 656.239 cv
337.403 705.723 li
337.403 710.091 333.847 713.645 329.476 713.645 cv
cp
f
669.82 816.745 mo
667.119 816.745 li
667.119 813.502 li
669.82 813.502 li
670.828 813.502 671.604 814.116 671.604 815.106 cv
671.604 816.131 670.828 816.745 669.82 816.745 cv
cp
674.232 815.124 mo
674.232 812.891 672.684 811.252 670.181 811.252 cv
664.563 811.252 li
664.563 823.262 li
667.119 823.262 li
667.119 818.995 li
668.992 818.995 li
671.352 823.262 li
674.304 823.262 li
671.585 818.688 li
672.881 818.383 674.232 817.231 674.232 815.124 cv
cp
.0980392 .0941176 .0941176 rgb
f
676.137 823.262 mo
684.635 823.262 li
684.635 821.012 li
678.693 821.012 li
678.693 818.274 li
684.51 818.274 li
684.51 816.024 li
678.693 816.024 li
678.693 813.502 li
684.635 813.502 li
684.635 811.252 li
676.137 811.252 li
676.137 823.262 li
cp
f
688.827 814.53 mo
688.827 813.809 689.439 813.34 690.52 813.34 cv
691.744 813.34 693.04 813.754 694.013 814.655 cv
695.436 812.747 li
694.246 811.649 692.662 811.073 690.754 811.073 cv
687.927 811.073 686.198 812.729 686.198 814.727 cv
686.198 819.247 693.112 817.788 693.112 819.877 cv
693.112 820.579 692.445 821.209 691.023 821.209 cv
689.367 821.209 688.053 820.454 687.207 819.571 cv
685.802 821.569 li
686.937 822.704 688.593 823.477 690.916 823.477 cv
694.139 823.477 695.723 821.821 695.723 819.625 cv
695.723 815.141 688.827 816.42 688.827 814.53 cv
cp
f
697.43 823.262 mo
705.929 823.262 li
705.929 821.012 li
699.986 821.012 li
699.986 818.274 li
705.803 818.274 li
705.803 816.024 li
699.986 816.024 li
699.986 813.502 li
705.929 813.502 li
705.929 811.252 li
697.43 811.252 li
697.43 823.262 li
cp
f
711.021 818.977 mo
712.893 813.809 li
714.766 818.977 li
711.021 818.977 li
cp
711.291 811.252 mo
706.663 823.262 li
709.563 823.262 li
710.318 821.227 li
715.468 821.227 li
716.225 823.262 li
719.123 823.262 li
714.496 811.252 li
711.291 811.252 li
cp
f
725.493 816.745 mo
722.793 816.745 li
722.793 813.502 li
725.493 813.502 li
726.502 813.502 727.275 814.116 727.275 815.106 cv
727.275 816.131 726.502 816.745 725.493 816.745 cv
cp
729.904 815.124 mo
729.904 812.891 728.355 811.252 725.854 811.252 cv
720.236 811.252 li
720.236 823.262 li
722.793 823.262 li
722.793 818.995 li
724.665 818.995 li
727.023 823.262 li
729.977 823.262 li
727.258 818.688 li
728.555 818.383 729.904 817.231 729.904 815.124 cv
cp
f
737.643 813.323 mo
738.867 813.323 739.947 814.098 740.452 815.069 cv
742.648 813.989 li
741.803 812.477 740.271 811.055 737.643 811.055 cv
734.023 811.055 731.233 813.557 731.233 817.266 cv
731.233 820.958 734.023 823.477 737.643 823.477 cv
740.271 823.477 741.803 822.02 742.648 820.526 cv
740.452 819.463 li
739.947 820.436 738.867 821.209 737.643 821.209 cv
735.446 821.209 733.862 819.536 733.862 817.266 cv
733.862 814.997 735.446 813.323 737.643 813.323 cv
cp
f
752.404 811.252 mo
752.404 815.969 li
746.732 815.969 li
746.732 811.252 li
744.176 811.252 li
744.176 823.262 li
746.732 823.262 li
746.732 818.202 li
752.404 818.202 li
752.404 823.262 li
754.979 823.262 li
754.979 811.252 li
752.404 811.252 li
cp
f
702.255 676.975 mo
702.255 706.844 li
700.53 707.258 li
682.752 711.53 670.336 727.291 670.336 745.586 cv
670.336 767.331 688.026 785.02 709.771 785.02 cv
731.515 785.02 749.205 767.331 749.205 745.586 cv
749.205 727.29 736.789 711.529 719.011 707.26 cv
717.286 706.846 li
717.286 676.975 li
702.255 676.975 li
cp
709.771 789.52 mo
685.545 789.52 665.836 769.811 665.836 745.586 cv
665.836 725.799 678.873 708.672 697.755 703.333 cv
697.755 672.475 li
721.786 672.475 li
721.786 703.335 li
740.668 708.672 753.705 725.798 753.705 745.586 cv
753.705 769.811 733.996 789.52 709.771 789.52 cv
cp
.0952911 .0952911 .0952911 rgb
f
697.37 672.477 mo
722.172 672.477 li
722.172 667.202 li
697.37 667.202 li
697.37 672.477 li
cp
726.672 676.977 mo
692.87 676.977 li
692.87 662.702 li
726.672 662.702 li
726.672 676.977 li
cp
f
706.062 699.725 mo
700.005 699.725 li
700.005 695.225 li
706.062 695.225 li
706.062 699.725 li
cp
f
706.062 692.137 mo
700.005 692.137 li
700.005 687.637 li
706.062 687.637 li
706.062 692.137 li
cp
f
706.062 684.555 mo
700.005 684.555 li
700.005 680.055 li
706.062 680.055 li
706.062 684.555 li
cp
f
679.418 747.836 mo
680.574 763.572 693.746 776.022 709.771 776.022 cv
725.795 776.022 738.967 763.572 740.123 747.836 cv
700.687 747.836 li
700.38 745.948 li
699.998 743.598 697.993 741.893 695.614 741.893 cv
693.229 741.893 691.221 743.598 690.839 745.948 cv
690.532 747.836 li
679.418 747.836 li
cp
709.771 780.522 mo
690.508 780.522 674.836 764.85 674.836 745.586 cv
674.836 743.336 li
686.909 743.336 li
688.274 739.801 691.679 737.393 695.614 737.393 cv
699.545 737.393 702.945 739.801 704.311 743.336 cv
744.705 743.336 li
744.705 745.586 li
744.705 764.85 729.033 780.522 709.771 780.522 cv
cp
f
719.131 757.573 mo
718.165 757.573 717.38 758.358 717.38 759.324 cv
717.38 760.289 718.165 761.074 719.131 761.074 cv
720.096 761.074 720.88 760.289 720.88 759.324 cv
720.88 758.358 720.096 757.573 719.131 757.573 cv
cp
719.131 765.574 mo
715.684 765.574 712.88 762.77 712.88 759.324 cv
712.88 755.876 715.684 753.073 719.131 753.073 cv
722.576 753.073 725.38 755.876 725.38 759.324 cv
725.38 762.77 722.576 765.574 719.131 765.574 cv
cp
f
707.505 728.629 mo
707.505 729.87 706.498 730.879 705.256 730.879 cv
704.013 730.879 703.005 729.87 703.005 728.629 cv
703.005 727.387 704.013 726.378 705.256 726.378 cv
706.498 726.378 707.505 727.387 707.505 728.629 cv
cp
f
684.489 656.098 mo
683.915 656.098 683.448 656.566 683.448 657.141 cv
683.448 657.714 683.915 658.18 684.489 658.18 cv
685.063 658.18 685.53 657.714 685.53 657.141 cv
685.53 656.566 685.063 656.098 684.489 656.098 cv
cp
684.489 662.68 mo
681.434 662.68 678.948 660.196 678.948 657.141 cv
678.948 654.084 681.434 651.598 684.489 651.598 cv
687.545 651.598 690.03 654.084 690.03 657.141 cv
690.03 660.196 687.545 662.68 684.489 662.68 cv
cp
f
729.535 649.983 mo
728.183 649.983 727.083 651.083 727.083 652.436 cv
727.083 653.789 728.183 654.889 729.535 654.889 cv
730.889 654.889 731.99 653.789 731.99 652.436 cv
731.99 651.083 730.889 649.983 729.535 649.983 cv
cp
729.535 659.389 mo
725.702 659.389 722.583 656.27 722.583 652.436 cv
722.583 648.602 725.702 645.483 729.535 645.483 cv
733.37 645.483 736.49 648.602 736.49 652.436 cv
736.49 656.27 733.37 659.389 729.535 659.389 cv
cp
f
710.505 634.52 mo
707.76 634.52 705.526 636.752 705.526 639.497 cv
705.526 642.243 707.76 644.477 710.505 644.477 cv
713.251 644.477 715.484 642.243 715.484 639.497 cv
715.484 636.752 713.251 634.52 710.505 634.52 cv
cp
710.505 648.977 mo
705.278 648.977 701.026 644.724 701.026 639.497 cv
701.026 634.271 705.278 630.02 710.505 630.02 cv
715.731 630.02 719.984 634.271 719.984 639.497 cv
719.984 644.724 715.731 648.977 710.505 648.977 cv
cp
f
738.604 735.819 mo
735.953 727.968 730.101 721.456 722.548 717.951 cv
724.442 713.869 li
733.108 717.891 739.824 725.367 742.867 734.379 cv
738.604 735.819 li
cp
f
717.422 716.125 mo
714.963 715.477 712.39 715.149 709.774 715.149 cv
709.774 710.649 li
712.776 710.649 715.735 711.028 718.568 711.774 cv
717.422 716.125 li
cp
f
864.784 823.262 mo
867.341 823.262 li
867.341 811.252 li
864.784 811.252 li
864.784 823.262 li
cp
.0980392 .0941176 .0941176 rgb
f
872.183 811.252 mo
869.607 811.252 li
869.607 823.262 li
877.26 823.262 li
877.26 821.011 li
872.183 821.011 li
872.183 811.252 li
cp
f
881.452 811.252 mo
878.878 811.252 li
878.878 823.262 li
886.53 823.262 li
886.53 821.011 li
881.452 821.011 li
881.452 811.252 li
cp
f
896.053 818.382 mo
896.053 820.057 895.099 821.209 893.243 821.209 cv
891.39 821.209 890.417 820.057 890.417 818.382 cv
890.417 811.252 li
887.824 811.252 li
887.824 818.455 li
887.824 821.425 889.589 823.478 893.243 823.478 cv
896.899 823.478 898.663 821.425 898.663 818.455 cv
898.663 811.252 li
896.053 811.252 li
896.053 818.382 li
cp
f
903.232 814.53 mo
903.232 813.81 903.845 813.341 904.925 813.341 cv
906.149 813.341 907.446 813.755 908.418 814.656 cv
909.841 812.748 li
908.652 811.649 907.067 811.073 905.159 811.073 cv
902.333 811.073 900.604 812.729 900.604 814.728 cv
900.604 819.248 907.519 817.789 907.519 819.876 cv
907.519 820.58 906.852 821.209 905.429 821.209 cv
903.772 821.209 902.458 820.453 901.612 819.572 cv
900.208 821.57 li
901.343 822.705 902.999 823.478 905.321 823.478 cv
908.544 823.478 910.129 821.822 910.129 819.625 cv
910.129 815.142 903.232 816.419 903.232 814.53 cv
cp
f
910.864 813.503 mo
914.375 813.503 li
914.375 823.262 li
916.95 823.262 li
916.95 813.503 li
920.442 813.503 li
920.442 811.252 li
910.864 811.252 li
910.864 813.503 li
cp
f
927.335 816.744 mo
924.634 816.744 li
924.634 813.503 li
927.335 813.503 li
928.343 813.503 929.118 814.115 929.118 815.106 cv
929.118 816.132 928.343 816.744 927.335 816.744 cv
cp
931.747 815.125 mo
931.747 812.891 930.198 811.252 927.695 811.252 cv
922.077 811.252 li
922.077 823.262 li
924.634 823.262 li
924.634 818.996 li
926.507 818.996 li
928.866 823.262 li
931.818 823.262 li
929.1 818.689 li
930.396 818.382 931.747 817.23 931.747 815.125 cv
cp
f
936.748 818.977 mo
938.62 813.81 li
940.493 818.977 li
936.748 818.977 li
cp
937.019 811.252 mo
932.391 823.262 li
935.29 823.262 li
936.046 821.228 li
941.195 821.228 li
941.952 823.262 li
944.851 823.262 li
940.224 811.252 li
937.019 811.252 li
cp
f
944.073 813.503 mo
947.584 813.503 li
947.584 823.262 li
950.159 823.262 li
950.159 813.503 li
953.651 813.503 li
953.651 811.252 li
944.073 811.252 li
944.073 813.503 li
cp
f
955.287 823.262 mo
957.844 823.262 li
957.844 811.252 li
955.287 811.252 li
955.287 823.262 li
cp
f
965.927 821.209 mo
963.694 821.209 962.271 819.5 962.271 817.267 cv
962.271 815.015 963.694 813.324 965.927 813.324 cv
968.142 813.324 969.563 815.015 969.563 817.267 cv
969.563 819.5 968.142 821.209 965.927 821.209 cv
cp
965.927 811.054 mo
962.289 811.054 959.643 813.648 959.643 817.267 cv
959.643 820.886 962.289 823.478 965.927 823.478 cv
969.546 823.478 972.192 820.886 972.192 817.267 cv
972.192 813.648 969.546 811.054 965.927 811.054 cv
cp
f
982.181 811.252 mo
982.181 818.796 li
976.617 811.252 li
973.989 811.252 li
973.989 823.262 li
976.546 823.262 li
976.546 815.429 li
982.271 823.262 li
984.737 823.262 li
984.737 811.252 li
982.181 811.252 li
cp
f
943.358 768.135 mo
871.128 768.135 li
871.128 643.635 li
944.29 643.635 li
965.628 664.973 li
965.628 740.87 li
961.128 740.87 li
961.128 666.836 li
942.427 648.135 li
875.628 648.135 li
875.628 763.635 li
943.358 763.635 li
943.358 768.135 li
cp
.0952911 .0952911 .0952911 rgb
f
963.376 668.151 mo
941.108 668.151 li
941.108 645.883 li
945.608 645.883 li
945.608 663.651 li
963.376 663.651 li
963.376 668.151 li
cp
f
938.858 743.12 mo
897.897 743.12 li
897.897 738.62 li
938.858 738.62 li
938.858 743.12 li
cp
f
938.858 693.159 mo
897.897 693.159 li
897.897 688.659 li
938.858 688.659 li
938.858 693.159 li
cp
f
895.647 736.37 mo
891.147 736.37 li
891.147 695.409 li
895.647 695.409 li
895.647 736.37 li
cp
f
945.608 736.37 mo
941.108 736.37 li
941.108 695.409 li
945.608 695.409 li
945.608 736.37 li
cp
f
941.108 693.163 mo
945.608 693.163 li
945.608 688.663 li
941.108 688.663 li
941.108 693.163 li
cp
950.108 697.663 mo
936.608 697.663 li
936.608 684.163 li
950.108 684.163 li
950.108 697.663 li
cp
f
941.108 743.124 mo
945.608 743.124 li
945.608 738.624 li
941.108 738.624 li
941.108 743.124 li
cp
950.108 747.624 mo
936.608 747.624 li
936.608 734.124 li
950.108 734.124 li
950.108 747.624 li
cp
f
891.147 693.163 mo
895.647 693.163 li
895.647 688.663 li
891.147 688.663 li
891.147 693.163 li
cp
900.147 697.663 mo
886.647 697.663 li
886.647 684.163 li
900.147 684.163 li
900.147 697.663 li
cp
f
891.147 743.124 mo
895.647 743.124 li
895.647 738.624 li
891.147 738.624 li
891.147 743.124 li
cp
900.147 747.624 mo
886.647 747.624 li
886.647 734.124 li
900.147 734.124 li
900.147 747.624 li
cp
f
908.128 726.143 mo
928.628 726.143 li
928.628 705.643 li
908.128 705.643 li
908.128 726.143 li
cp
933.128 730.643 mo
903.628 730.643 li
903.628 701.143 li
933.128 701.143 li
933.128 730.643 li
cp
f
959.203 756.717 mo
962.577 769.31 li
971.797 760.091 li
959.203 756.717 li
cp
960.249 778.003 mo
952.838 750.354 li
980.49 757.761 li
960.249 778.003 li
cp
f
973.678 774.375 mo
967.188 767.882 li
970.369 764.701 li
976.859 771.193 li
973.678 774.375 li
cp
f
18.7148 1029.52 mo
18.7148 1028.8 19.3271 1028.33 20.4077 1028.33 cv
21.6318 1028.33 22.9282 1028.74 23.9004 1029.64 cv
25.3232 1027.73 li
24.1348 1026.64 22.5503 1026.06 20.6416 1026.06 cv
17.8149 1026.06 16.0864 1027.72 16.0864 1029.72 cv
16.0864 1034.23 23.0005 1032.78 23.0005 1034.87 cv
23.0005 1035.57 22.334 1036.2 20.9116 1036.2 cv
19.2554 1036.2 17.9409 1035.44 17.0947 1034.56 cv
15.6904 1036.56 li
16.8247 1037.69 18.481 1038.47 20.8037 1038.47 cv
24.0269 1038.47 25.6113 1036.81 25.6113 1034.61 cv
25.6113 1030.13 18.7148 1031.41 18.7148 1029.52 cv
cp
.0980392 .0941176 .0941176 rgb
f
37.2754 1026.24 mo
34.124 1026.24 li
29.875 1031.59 li
29.875 1026.24 li
27.3184 1026.24 li
27.3184 1038.25 li
29.875 1038.25 li
29.875 1034.56 li
30.8115 1033.42 li
34.4482 1038.25 li
37.5991 1038.25 li
32.5039 1031.88 li
37.2754 1026.24 li
cp
f
38.7661 1038.25 mo
47.2646 1038.25 li
47.2646 1036 li
41.3228 1036 li
41.3228 1033.26 li
47.1387 1033.26 li
47.1387 1031.01 li
41.3228 1031.01 li
41.3228 1028.49 li
47.2646 1028.49 li
47.2646 1026.24 li
38.7661 1026.24 li
38.7661 1038.25 li
cp
f
48.5215 1028.49 mo
52.0322 1028.49 li
52.0322 1038.25 li
54.6074 1038.25 li
54.6074 1028.49 li
58.1001 1028.49 li
58.1001 1026.24 li
48.5215 1026.24 li
48.5215 1028.49 li
cp
f
65.1372 1028.31 mo
66.3618 1028.31 67.4419 1029.09 67.9463 1030.06 cv
70.1426 1028.98 li
69.2964 1027.47 67.7661 1026.04 65.1372 1026.04 cv
61.5181 1026.04 58.7275 1028.55 58.7275 1032.25 cv
58.7275 1035.95 61.5181 1038.47 65.1372 1038.47 cv
67.7661 1038.47 69.2964 1037.01 70.1426 1035.51 cv
67.9463 1034.45 li
67.4419 1035.42 66.3618 1036.2 65.1372 1036.2 cv
62.9404 1036.2 61.3564 1034.52 61.3564 1032.25 cv
61.3564 1029.98 62.9404 1028.31 65.1372 1028.31 cv
cp
f
79.8979 1030.96 mo
74.2261 1030.96 li
74.2261 1026.24 li
71.6694 1026.24 li
71.6694 1038.25 li
74.2261 1038.25 li
74.2261 1033.19 li
79.8979 1033.19 li
79.8979 1038.25 li
82.4727 1038.25 li
82.4727 1026.24 li
79.8979 1026.24 li
79.8979 1030.96 li
cp
f
84.8271 1038.25 mo
87.3838 1038.25 li
87.3838 1026.24 li
84.8271 1026.24 li
84.8271 1038.25 li
cp
f
97.9512 1033.79 mo
92.3877 1026.24 li
89.7588 1026.24 li
89.7588 1038.25 li
92.3154 1038.25 li
92.3154 1030.42 li
98.041 1038.25 li
100.508 1038.25 li
100.508 1026.24 li
97.9512 1026.24 li
97.9512 1033.79 li
cp
f
108.084 1031.61 mo
108.084 1033.84 li
111.253 1033.84 li
111.253 1035.28 li
110.767 1035.73 109.776 1036.2 108.714 1036.2 cv
106.518 1036.2 104.933 1034.52 104.933 1032.25 cv
104.933 1029.98 106.518 1028.31 108.714 1028.31 cv
109.975 1028.31 111 1029.03 111.559 1029.88 cv
113.666 1028.73 li
112.765 1027.3 111.199 1026.04 108.714 1026.04 cv
105.185 1026.04 102.304 1028.46 102.304 1032.25 cv
102.304 1036.04 105.185 1038.47 108.714 1038.47 cv
110.875 1038.47 112.585 1037.58 113.81 1036.22 cv
113.81 1031.61 li
108.084 1031.61 li
cp
f
108.202 987.01 mo
15.6211 987.01 li
15.6211 879.09 li
20.1211 879.09 li
20.1211 982.51 li
103.702 982.51 li
103.702 879.09 li
103.702 872.431 98.2852 867.014 91.627 867.014 cv
91.627 862.514 li
100.767 862.514 108.202 869.951 108.202 879.09 cv
108.202 987.01 li
cp
.0952911 .0952911 .0952911 rgb
f
6.0083 876.836 mo
75.1997 876.84 li
75.7246 872.987 77.5776 869.551 80.2813 867.01 cv
17.874 867.01 li
11.9844 867.01 7.06592 871.249 6.0083 876.836 cv
cp
79.5479 881.34 mo
1.29736 881.336 li
1.29785 879.086 li
1.29883 869.946 8.73486 862.51 17.874 862.51 cv
91.623 862.51 li
91.623 867.01 li
84.9648 867.01 79.5479 872.429 79.5479 879.09 cv
79.5479 881.34 li
cp
f
37.7617 927.17 mo
50.9878 927.17 li
52.0249 918.017 59.3101 910.732 68.4629 909.696 cv
68.4629 896.471 li
37.7617 896.471 li
37.7617 927.17 li
cp
55.3613 931.67 mo
33.2617 931.67 li
33.2617 891.971 li
72.9629 891.971 li
72.9629 914.069 li
70.7129 914.069 li
62.248 914.069 55.3613 920.956 55.3613 929.42 cv
55.3613 931.67 li
cp
f
55.5259 931.67 mo
56.6177 939.071 63.0122 944.768 70.7129 944.768 cv
79.1763 944.768 86.0615 937.883 86.0615 929.42 cv
86.0615 921.719 80.3638 915.325 72.9629 914.233 cv
72.9629 931.67 li
55.5259 931.67 li
cp
70.7129 949.268 mo
59.7666 949.268 50.8613 940.365 50.8613 929.42 cv
50.8613 927.17 li
68.4629 927.17 li
68.4629 909.569 li
70.7129 909.569 li
81.6572 909.569 90.5615 918.474 90.5615 929.42 cv
90.5615 940.365 81.6572 949.268 70.7129 949.268 cv
cp
f
37.7617 967.381 mo
43.8213 967.381 li
43.8213 961.321 li
37.7617 961.321 li
37.7617 967.381 li
cp
48.3213 971.881 mo
33.2617 971.881 li
33.2617 956.821 li
48.3213 956.821 li
48.3213 971.881 li
cp
f
58.8818 967.381 mo
64.9414 967.381 li
64.9414 961.321 li
58.8818 961.321 li
58.8818 967.381 li
cp
69.4414 971.881 mo
54.3818 971.881 li
54.3818 956.821 li
69.4414 956.821 li
69.4414 971.881 li
cp
f
80.002 967.381 mo
86.0615 967.381 li
86.0615 961.321 li
80.002 961.321 li
80.002 967.381 li
cp
90.5615 971.881 mo
75.502 971.881 li
75.502 956.821 li
90.5615 956.821 li
90.5615 971.881 li
cp
f
118.202 975.952 mo
118.202 979.76 li
118.202 980.495 118.488 981.185 119.007 981.705 cv
120.046 982.746 121.861 982.744 122.894 981.707 cv
123.416 981.185 123.702 980.495 123.702 979.76 cv
123.702 975.952 li
118.202 975.952 li
cp
120.952 987.01 mo
119.013 987.01 117.191 986.255 115.823 984.885 cv
114.456 983.517 113.702 981.697 113.702 979.76 cv
113.702 971.452 li
128.202 971.452 li
128.202 979.76 li
128.202 981.698 127.448 983.518 126.078 984.887 cv
124.714 986.255 122.892 987.01 120.952 987.01 cv
cp
f
123.902 891.076 mo
120.952 884.551 li
118.002 891.076 li
113.902 889.222 li
120.952 873.629 li
128.002 889.222 li
123.902 891.076 li
cp
f
118.202 971.452 mo
123.702 971.452 li
123.702 892.399 li
118.202 892.399 li
118.202 971.452 li
cp
125.952 975.952 mo
115.952 975.952 li
114.709 975.952 113.702 974.944 113.702 973.702 cv
113.702 890.149 li
113.702 888.907 114.709 887.899 115.952 887.899 cv
125.952 887.899 li
127.195 887.899 128.202 888.907 128.202 890.149 cv
128.202 973.702 li
128.202 974.944 127.195 975.952 125.952 975.952 cv
cp
f
670.999 171.704 mo
668.298 171.704 li
668.298 168.481 li
670.999 168.481 li
672.007 168.481 672.782 169.093 672.782 170.101 cv
672.782 171.092 672.007 171.704 670.999 171.704 cv
cp
671.359 166.23 mo
665.741 166.23 li
665.741 178.24 li
668.298 178.24 li
668.298 173.955 li
671.359 173.955 li
673.952 173.955 675.393 172.19 675.393 170.101 cv
675.393 167.995 673.97 166.23 671.359 166.23 cv
cp
.0980392 .0941176 .0941176 rgb
f
679.458 166.23 mo
676.884 166.23 li
676.884 178.24 li
684.536 178.24 li
684.536 175.99 li
679.458 175.99 li
679.458 166.23 li
cp
f
689.358 173.955 mo
691.231 168.788 li
693.104 173.955 li
689.358 173.955 li
cp
689.628 166.23 mo
685.001 178.24 li
687.899 178.24 li
688.656 176.206 li
693.806 176.206 li
694.562 178.24 li
697.461 178.24 li
692.833 166.23 li
689.628 166.23 li
cp
f
706.767 173.775 mo
701.202 166.23 li
698.573 166.23 li
698.573 178.24 li
701.13 178.24 li
701.13 170.408 li
706.856 178.24 li
709.323 178.24 li
709.323 166.23 li
706.767 166.23 li
706.767 173.775 li
cp
f
719.888 173.775 mo
714.323 166.23 li
711.695 166.23 li
711.695 178.24 li
714.252 178.24 li
714.252 170.408 li
719.978 178.24 li
722.444 178.24 li
722.444 166.23 li
719.888 166.23 li
719.888 173.775 li
cp
f
724.817 178.24 mo
727.374 178.24 li
727.374 166.23 li
724.817 166.23 li
724.817 178.24 li
cp
f
737.94 173.775 mo
732.378 166.23 li
729.749 166.23 li
729.749 178.24 li
732.306 178.24 li
732.306 170.408 li
738.03 178.24 li
740.497 178.24 li
740.497 166.23 li
737.94 166.23 li
737.94 173.775 li
cp
f
748.073 171.596 mo
748.073 173.829 li
751.243 173.829 li
751.243 175.269 li
750.757 175.719 749.767 176.187 748.704 176.187 cv
746.507 176.187 744.923 174.513 744.923 172.245 cv
744.923 169.975 746.507 168.301 748.704 168.301 cv
749.964 168.301 750.99 169.021 751.548 169.868 cv
753.655 168.715 li
752.755 167.292 751.188 166.033 748.704 166.033 cv
745.175 166.033 742.294 168.445 742.294 172.245 cv
742.294 176.025 745.175 178.456 748.704 178.456 cv
750.864 178.456 752.575 177.574 753.8 176.206 cv
753.8 171.596 li
748.073 171.596 li
cp
f
666.091 124.999 mo
753.45 124.999 li
753.45 23.6167 li
734.336 4.5 li
666.091 4.5 li
666.091 124.999 li
cp
757.95 129.499 mo
661.591 129.499 li
661.591 0 li
736.199 0 li
757.95 21.7524 li
757.95 129.499 li
cp
f
755.698 24.9307 mo
733.018 24.9307 li
733.018 2.24902 li
737.518 2.24902 li
737.518 20.4307 li
755.698 20.4307 li
755.698 24.9307 li
cp
f
679.871 65.6235 mo
739.671 65.6235 li
739.671 52.9771 li
679.871 52.9771 li
679.871 65.6235 li
cp
744.171 70.1235 mo
675.371 70.1235 li
675.371 48.4771 li
744.171 48.4771 li
744.171 70.1235 li
cp
f
679.871 104.568 mo
692.516 104.568 li
692.516 91.9214 li
679.871 91.9214 li
679.871 104.568 li
cp
697.016 109.068 mo
675.371 109.068 li
675.371 87.4214 li
697.016 87.4214 li
697.016 109.068 li
cp
f
703.446 104.568 mo
716.09 104.568 li
716.09 91.9214 li
703.446 91.9214 li
703.446 104.568 li
cp
720.59 109.068 mo
698.946 109.068 li
698.946 87.4214 li
720.59 87.4214 li
720.59 109.068 li
cp
f
679.87 37.5781 mo
692.514 37.5781 li
692.514 24.9307 li
679.87 24.9307 li
679.87 37.5781 li
cp
697.014 42.0781 mo
675.37 42.0781 li
675.37 20.4307 li
697.014 20.4307 li
697.014 42.0781 li
cp
f
727.024 104.568 mo
739.671 104.568 li
739.671 91.9214 li
727.024 91.9214 li
727.024 104.568 li
cp
744.171 109.068 mo
722.524 109.068 li
722.524 87.4214 li
744.171 87.4214 li
744.171 109.068 li
cp
f
688.443 50.7271 mo
683.943 50.7271 li
683.943 39.8281 li
688.443 39.8281 li
688.443 50.7271 li
cp
f
712.021 89.6714 mo
707.521 89.6714 li
707.521 67.8735 li
712.021 67.8735 li
712.021 89.6714 li
cp
f
735.59 89.6714 mo
731.09 89.6714 li
731.09 81.0229 li
688.443 81.0229 li
688.443 89.6714 li
683.943 89.6714 li
683.943 76.5229 li
735.59 76.5229 li
735.59 89.6714 li
cp
f
725.035 24.9307 mo
707.521 24.9307 li
707.521 20.4307 li
725.035 20.4307 li
725.035 24.9307 li
cp
f
744.171 33.5039 mo
707.521 33.5039 li
707.521 29.0039 li
744.171 29.0039 li
744.171 33.5039 li
cp
f
744.171 42.0781 mo
707.521 42.0781 li
707.521 37.5781 li
744.171 37.5781 li
744.171 42.0781 li
cp
f
420.041 1036 mo
417.862 1036 li
417.862 1028.49 li
420.059 1028.49 li
422.508 1028.49 423.804 1030.13 423.804 1032.24 cv
423.804 1034.29 422.417 1036 420.041 1036 cv
cp
420.041 1026.24 mo
415.306 1026.24 li
415.306 1038.25 li
420.059 1038.25 li
423.804 1038.25 426.415 1035.87 426.415 1032.24 cv
426.415 1028.64 423.804 1026.24 420.041 1026.24 cv
cp
f
428.229 1038.25 mo
430.786 1038.25 li
430.786 1026.24 li
428.229 1026.24 li
428.229 1038.25 li
cp
f
438.365 1033.84 mo
441.534 1033.84 li
441.534 1035.28 li
441.047 1035.73 440.057 1036.2 438.995 1036.2 cv
436.798 1036.2 435.213 1034.52 435.213 1032.26 cv
435.213 1029.99 436.798 1028.31 438.995 1028.31 cv
440.255 1028.31 441.281 1029.03 441.839 1029.88 cv
443.946 1028.73 li
443.046 1027.3 441.479 1026.04 438.995 1026.04 cv
435.466 1026.04 432.585 1028.46 432.585 1032.26 cv
432.585 1036.04 435.466 1038.47 438.995 1038.47 cv
441.155 1038.47 442.866 1037.58 444.09 1036.22 cv
444.09 1031.61 li
438.365 1031.61 li
438.365 1033.84 li
cp
f
446.121 1038.25 mo
448.678 1038.25 li
448.678 1026.24 li
446.121 1026.24 li
446.121 1038.25 li
cp
f
459.893 1026.24 mo
450.314 1026.24 li
450.314 1028.49 li
453.826 1028.49 li
453.826 1038.25 li
456.4 1038.25 li
456.4 1028.49 li
459.893 1028.49 li
459.893 1026.24 li
cp
f
463.473 1033.97 mo
465.346 1028.8 li
467.218 1033.97 li
463.473 1033.97 li
cp
463.743 1026.24 mo
459.116 1038.25 li
462.015 1038.25 li
462.771 1036.22 li
467.92 1036.22 li
468.677 1038.25 li
471.576 1038.25 li
466.948 1026.24 li
463.743 1026.24 li
cp
f
475.155 1026.24 mo
472.581 1026.24 li
472.581 1038.25 li
480.232 1038.25 li
480.232 1036 li
475.155 1036 li
475.155 1026.24 li
cp
f
491.788 1033.84 mo
494.958 1033.84 li
494.958 1035.28 li
494.471 1035.73 493.48 1036.2 492.418 1036.2 cv
490.221 1036.2 488.637 1034.52 488.637 1032.26 cv
488.637 1029.99 490.221 1028.31 492.418 1028.31 cv
493.678 1028.31 494.705 1029.03 495.263 1029.88 cv
497.37 1028.73 li
496.47 1027.3 494.903 1026.04 492.418 1026.04 cv
488.889 1026.04 486.008 1028.46 486.008 1032.26 cv
486.008 1036.04 488.889 1038.47 492.418 1038.47 cv
494.579 1038.47 496.29 1037.58 497.515 1036.22 cv
497.515 1031.61 li
491.788 1031.61 li
491.788 1033.84 li
cp
f
504.802 1031.73 mo
502.101 1031.73 li
502.101 1028.49 li
504.802 1028.49 li
505.81 1028.49 506.585 1029.1 506.585 1030.09 cv
506.585 1031.12 505.81 1031.73 504.802 1031.73 cv
cp
509.214 1030.11 mo
509.214 1027.88 507.665 1026.24 505.163 1026.24 cv
499.544 1026.24 li
499.544 1038.25 li
502.101 1038.25 li
502.101 1033.98 li
503.974 1033.98 li
506.333 1038.25 li
509.286 1038.25 li
506.567 1033.68 li
507.862 1033.37 509.214 1032.22 509.214 1030.11 cv
cp
f
514.216 1033.97 mo
516.087 1028.8 li
517.96 1033.97 li
514.216 1033.97 li
cp
514.485 1026.24 mo
509.858 1038.25 li
512.757 1038.25 li
513.513 1036.22 li
518.663 1036.22 li
519.419 1038.25 li
522.317 1038.25 li
517.69 1026.24 li
514.485 1026.24 li
cp
f
528.688 1031.71 mo
525.987 1031.71 li
525.987 1028.49 li
528.688 1028.49 li
529.696 1028.49 530.47 1029.1 530.47 1030.11 cv
530.47 1031.1 529.696 1031.71 528.688 1031.71 cv
cp
529.048 1026.24 mo
523.431 1026.24 li
523.431 1038.25 li
525.987 1038.25 li
525.987 1033.97 li
529.048 1033.97 li
531.642 1033.97 533.081 1032.2 533.081 1030.11 cv
533.081 1028.01 531.659 1026.24 529.048 1026.24 cv
cp
f
542.909 1030.96 mo
537.237 1030.96 li
537.237 1026.24 li
534.681 1026.24 li
534.681 1038.25 li
537.237 1038.25 li
537.237 1033.19 li
542.909 1033.19 li
542.909 1038.25 li
545.483 1038.25 li
545.483 1026.24 li
542.909 1026.24 li
542.909 1030.96 li
cp
f
547.839 1038.25 mo
550.396 1038.25 li
550.396 1026.24 li
547.839 1026.24 li
547.839 1038.25 li
cp
f
558.603 1028.31 mo
559.827 1028.31 560.907 1029.09 561.413 1030.06 cv
563.608 1028.98 li
562.763 1027.47 561.231 1026.04 558.603 1026.04 cv
554.983 1026.04 552.194 1028.55 552.194 1032.26 cv
552.194 1035.95 554.983 1038.47 558.603 1038.47 cv
561.231 1038.47 562.763 1037.01 563.608 1035.51 cv
561.413 1034.45 li
560.907 1035.42 559.827 1036.2 558.603 1036.2 cv
556.407 1036.2 554.821 1034.52 554.821 1032.26 cv
554.821 1029.99 556.407 1028.31 558.603 1028.31 cv
cp
f
567.331 1029.52 mo
567.331 1028.8 567.944 1028.33 569.024 1028.33 cv
570.249 1028.33 571.546 1028.74 572.517 1029.64 cv
573.94 1027.74 li
572.751 1026.64 571.167 1026.06 569.259 1026.06 cv
566.433 1026.06 564.704 1027.72 564.704 1029.72 cv
564.704 1034.24 571.618 1032.78 571.618 1034.86 cv
571.618 1035.57 570.95 1036.2 569.528 1036.2 cv
567.872 1036.2 566.558 1035.44 565.712 1034.56 cv
564.308 1036.56 li
565.442 1037.69 567.099 1038.47 569.421 1038.47 cv
572.644 1038.47 574.228 1036.81 574.228 1034.61 cv
574.228 1030.13 567.331 1031.41 567.331 1029.52 cv
cp
f
545.517 966.106 mo
469.017 966.106 li
469.017 901.606 li
501.093 901.606 li
501.093 906.106 li
473.517 906.106 li
473.517 961.606 li
541.017 961.606 li
541.017 906.106 li
518.063 906.106 li
518.063 901.606 li
545.517 901.606 li
545.517 966.106 li
cp
.0952911 .0952911 .0952911 rgb
f
435.517 974.606 mo
456.017 974.606 li
456.017 893.106 li
435.517 893.106 li
435.517 974.606 li
cp
460.517 979.106 mo
431.017 979.106 li
431.017 888.606 li
460.517 888.606 li
460.517 979.106 li
cp
f
443.517 959.106 mo
448.017 959.106 li
448.017 948.606 li
443.517 948.606 li
443.517 959.106 li
cp
452.517 963.606 mo
439.017 963.606 li
439.017 944.106 li
452.517 944.106 li
452.517 963.606 li
cp
f
443.517 919.106 mo
448.017 919.106 li
448.017 908.606 li
443.517 908.606 li
443.517 919.106 li
cp
452.517 923.606 mo
439.017 923.606 li
439.017 904.106 li
452.517 904.106 li
452.517 923.606 li
cp
f
445.767 931.606 mo
444.526 931.606 443.517 932.616 443.517 933.856 cv
443.517 935.096 444.526 936.106 445.767 936.106 cv
447.008 936.106 448.017 935.096 448.017 933.856 cv
448.017 932.616 447.008 931.606 445.767 931.606 cv
cp
445.767 940.606 mo
442.045 940.606 439.017 937.578 439.017 933.856 cv
439.017 930.134 442.045 927.106 445.767 927.106 cv
449.489 927.106 452.517 930.134 452.517 933.856 cv
452.517 937.578 449.489 940.606 445.767 940.606 cv
cp
f
549.267 979.106 mo
456.017 979.106 li
456.017 888.606 li
514.093 888.606 li
514.093 893.106 li
460.517 893.106 li
460.517 974.606 li
549.267 974.606 li
550.536 974.606 551.729 974.112 552.627 973.214 cv
553.522 972.317 554.017 971.125 554.017 969.856 cv
554.017 897.856 li
554.017 896.586 553.522 895.393 552.626 894.495 cv
551.729 893.6 550.536 893.106 549.267 893.106 cv
531.063 893.106 li
531.063 888.606 li
549.267 888.606 li
551.736 888.606 554.06 889.567 555.808 891.313 cv
557.556 893.063 558.517 895.386 558.517 897.856 cv
558.517 969.856 li
558.517 972.325 557.556 974.647 555.81 976.395 cv
554.062 978.144 551.738 979.106 549.267 979.106 cv
cp
f
534.766 874.915 mo
533.766 874.916 532.823 875.306 532.115 876.013 cv
487.003 921.126 li
486.295 921.834 485.905 922.777 485.905 923.778 cv
485.905 924.781 486.295 925.723 487.003 926.431 cv
487.71 927.138 488.649 927.528 489.647 927.528 cv
489.647 929.778 li
489.652 927.528 li
490.657 927.528 491.599 927.138 492.306 926.431 cv
537.42 881.318 li
538.127 880.611 538.517 879.668 538.517 878.665 cv
538.518 877.663 538.128 876.722 537.42 876.013 cv
536.712 875.306 535.77 874.916 534.766 874.915 cv
cp
489.654 932.028 mo
489.647 932.028 li
487.447 932.028 485.377 931.17 483.821 929.613 cv
482.263 928.055 481.405 925.983 481.405 923.778 cv
481.405 921.575 482.263 919.502 483.821 917.945 cv
528.934 872.832 li
530.489 871.276 532.561 870.417 534.766 870.415 cv
536.976 870.417 539.046 871.276 540.602 872.832 cv
542.161 874.391 543.02 876.463 543.017 878.667 cv
543.017 880.871 542.159 882.943 540.602 884.5 cv
495.488 929.613 li
493.932 931.17 491.86 932.028 489.654 932.028 cv
cp
f
533.496 888.423 mo
525.01 879.937 li
528.191 876.755 li
536.678 885.242 li
533.496 888.423 li
cp
f
481.169 935.447 mo
477.988 932.265 li
483.821 926.431 li
487.003 929.613 li
481.169 935.447 li
cp
f
692.275 1033.84 mo
695.444 1033.84 li
695.444 1035.28 li
694.958 1035.73 693.968 1036.2 692.905 1036.2 cv
690.708 1036.2 689.124 1034.52 689.124 1032.25 cv
689.124 1029.99 690.708 1028.31 692.905 1028.31 cv
694.165 1028.31 695.192 1029.03 695.751 1029.88 cv
697.856 1028.73 li
696.956 1027.3 695.39 1026.04 692.905 1026.04 cv
689.376 1026.04 686.495 1028.45 686.495 1032.25 cv
686.495 1036.03 689.376 1038.47 692.905 1038.47 cv
695.065 1038.47 696.776 1037.58 698.001 1036.22 cv
698.001 1031.61 li
692.275 1031.61 li
692.275 1033.84 li
cp
.0980392 .0941176 .0941176 rgb
f
705.739 1036.2 mo
703.507 1036.2 702.085 1034.49 702.085 1032.25 cv
702.085 1030 703.507 1028.31 705.739 1028.31 cv
707.954 1028.31 709.376 1030 709.376 1032.25 cv
709.376 1034.49 707.954 1036.2 705.739 1036.2 cv
cp
705.739 1026.04 mo
702.103 1026.04 699.456 1028.64 699.456 1032.25 cv
699.456 1035.87 702.103 1038.47 705.739 1038.47 cv
709.358 1038.47 712.005 1035.87 712.005 1032.25 cv
712.005 1028.64 709.358 1026.04 705.739 1026.04 cv
cp
f
716.286 1033.96 mo
718.159 1028.8 li
720.032 1033.96 li
716.286 1033.96 li
cp
716.557 1026.24 mo
711.929 1038.25 li
714.828 1038.25 li
715.585 1036.22 li
720.733 1036.22 li
721.49 1038.25 li
724.39 1038.25 li
719.762 1026.24 li
716.557 1026.24 li
cp
f
727.969 1036 mo
727.969 1026.24 li
725.394 1026.24 li
725.394 1038.25 li
733.046 1038.25 li
733.046 1036 li
727.969 1036 li
cp
f
699.741 970.676 mo
674.423 970.676 653.825 950.077 653.825 924.756 cv
653.825 899.438 674.423 878.84 699.741 878.84 cv
723.101 878.84 742.709 896.322 745.351 919.503 cv
740.88 920.013 li
738.497 899.106 720.812 883.34 699.741 883.34 cv
676.904 883.34 658.325 901.919 658.325 924.756 cv
658.325 947.595 676.904 966.176 699.741 966.176 cv
720.812 966.176 738.497 950.411 740.88 929.503 cv
745.351 930.013 li
742.709 953.195 723.101 970.676 699.741 970.676 cv
cp
.0952911 .0952911 .0952911 rgb
f
699.741 954.342 mo
683.429 954.342 670.157 941.07 670.157 924.756 cv
670.157 908.445 683.429 895.174 699.741 895.174 cv
714.004 895.174 726.234 905.341 728.823 919.349 cv
724.397 920.167 li
722.204 908.292 711.834 899.674 699.741 899.674 cv
685.91 899.674 674.657 910.926 674.657 924.756 cv
674.657 938.588 685.91 949.842 699.741 949.842 cv
711.833 949.842 722.202 941.224 724.397 929.349 cv
728.823 930.167 li
726.233 944.175 714.003 954.342 699.741 954.342 cv
cp
f
699.741 987.01 mo
665.416 987.01 637.491 959.085 637.491 924.76 cv
637.491 890.435 665.416 862.51 699.741 862.51 cv
715.473 862.51 730.486 868.386 742.018 879.055 cv
753.484 889.664 760.504 904.054 761.783 919.576 cv
757.299 919.945 li
754.852 890.262 729.569 867.01 699.741 867.01 cv
667.897 867.01 641.991 892.917 641.991 924.76 cv
641.991 956.604 667.897 982.51 699.741 982.51 cv
729.568 982.51 754.851 959.258 757.299 929.576 cv
761.783 929.945 li
760.504 945.462 753.484 959.852 742.018 970.462 cv
730.485 981.133 715.472 987.01 699.741 987.01 cv
cp
f
699.741 938.008 mo
692.436 938.008 686.491 932.064 686.491 924.758 cv
686.491 917.453 692.436 911.508 699.741 911.508 cv
702.176 911.508 704.567 912.186 706.657 913.467 cv
704.304 917.303 li
702.923 916.457 701.345 916.008 699.741 916.008 cv
694.916 916.008 690.991 919.933 690.991 924.758 cv
690.991 929.583 694.916 933.508 699.741 933.508 cv
701.346 933.508 702.923 933.06 704.303 932.212 cv
706.658 936.046 li
704.569 937.33 702.178 938.008 699.741 938.008 cv
cp
f
770.991 927.508 mo
774.799 927.508 li
775.533 927.508 776.225 927.222 776.744 926.703 cv
777.264 926.183 777.55 925.493 777.55 924.758 cv
777.55 924.023 777.265 923.333 776.746 922.817 cv
776.225 922.293 775.534 922.008 774.799 922.008 cv
770.991 922.008 li
770.991 927.508 li
cp
774.799 932.008 mo
766.491 932.008 li
766.491 917.508 li
774.799 917.508 li
776.738 917.508 778.56 918.263 779.928 919.633 cv
781.295 920.997 782.05 922.818 782.05 924.758 cv
782.05 926.696 781.295 928.516 779.925 929.885 cv
778.557 931.254 776.735 932.008 774.799 932.008 cv
cp
f
709.873 931.808 mo
694.28 924.758 li
709.873 917.708 li
711.727 921.808 li
705.202 924.758 li
711.727 927.708 li
709.873 931.808 li
cp
f
713.05 927.508 mo
766.491 927.508 li
766.491 922.008 li
713.05 922.008 li
713.05 927.508 li
cp
768.741 932.008 mo
710.8 932.008 li
709.558 932.008 708.55 931 708.55 929.758 cv
708.55 919.758 li
708.55 918.516 709.558 917.508 710.8 917.508 cv
768.741 917.508 li
769.983 917.508 770.991 918.516 770.991 919.758 cv
770.991 929.758 li
770.991 931 769.983 932.008 768.741 932.008 cv
cp
f
849.27 1031.71 mo
846.568 1031.71 li
846.568 1028.49 li
849.27 1028.49 li
850.277 1028.49 851.053 1029.1 851.053 1030.11 cv
851.053 1031.1 850.277 1031.71 849.27 1031.71 cv
cp
849.63 1026.24 mo
844.012 1026.24 li
844.012 1038.25 li
846.568 1038.25 li
846.568 1033.97 li
849.63 1033.97 li
852.223 1033.97 853.663 1032.2 853.663 1030.11 cv
853.663 1028.01 852.24 1026.24 849.63 1026.24 cv
cp
.0980392 .0941176 .0941176 rgb
f
860.52 1031.73 mo
857.818 1031.73 li
857.818 1028.49 li
860.52 1028.49 li
861.527 1028.49 862.303 1029.1 862.303 1030.09 cv
862.303 1031.12 861.527 1031.73 860.52 1031.73 cv
cp
864.932 1030.11 mo
864.932 1027.88 863.383 1026.24 860.88 1026.24 cv
855.262 1026.24 li
855.262 1038.25 li
857.818 1038.25 li
857.818 1033.98 li
859.691 1033.98 li
862.051 1038.25 li
865.003 1038.25 li
862.284 1033.68 li
863.58 1033.37 864.932 1032.22 864.932 1030.11 cv
cp
f
872.543 1036.2 mo
870.311 1036.2 868.889 1034.49 868.889 1032.26 cv
868.889 1030 870.311 1028.31 872.543 1028.31 cv
874.758 1028.31 876.181 1030 876.181 1032.26 cv
876.181 1034.49 874.758 1036.2 872.543 1036.2 cv
cp
872.543 1026.04 mo
868.906 1026.04 866.26 1028.64 866.26 1032.26 cv
866.26 1035.87 868.906 1038.47 872.543 1038.47 cv
876.162 1038.47 878.81 1035.87 878.81 1032.26 cv
878.81 1028.64 876.162 1026.04 872.543 1026.04 cv
cp
f
885.81 1033.84 mo
888.979 1033.84 li
888.979 1035.28 li
888.492 1035.73 887.502 1036.2 886.439 1036.2 cv
884.243 1036.2 882.658 1034.52 882.658 1032.26 cv
882.658 1029.99 884.243 1028.31 886.439 1028.31 cv
887.7 1028.31 888.727 1029.03 889.284 1029.88 cv
891.391 1028.73 li
890.49 1027.3 888.924 1026.04 886.439 1026.04 cv
882.91 1026.04 880.029 1028.46 880.029 1032.26 cv
880.029 1036.04 882.91 1038.47 886.439 1038.47 cv
888.6 1038.47 890.311 1037.58 891.535 1036.22 cv
891.535 1031.61 li
885.81 1031.61 li
885.81 1033.84 li
cp
f
898.823 1031.73 mo
896.123 1031.73 li
896.123 1028.49 li
898.823 1028.49 li
899.832 1028.49 900.605 1029.1 900.605 1030.09 cv
900.605 1031.12 899.832 1031.73 898.823 1031.73 cv
cp
903.234 1030.11 mo
903.234 1027.88 901.686 1026.24 899.184 1026.24 cv
893.566 1026.24 li
893.566 1038.25 li
896.123 1038.25 li
896.123 1033.98 li
897.995 1033.98 li
900.354 1038.25 li
903.307 1038.25 li
900.588 1033.68 li
901.885 1033.37 903.234 1032.22 903.234 1030.11 cv
cp
f
908.236 1033.97 mo
910.109 1028.8 li
911.981 1033.97 li
908.236 1033.97 li
cp
908.506 1026.24 mo
903.879 1038.25 li
906.777 1038.25 li
907.534 1036.22 li
912.684 1036.22 li
913.439 1038.25 li
916.339 1038.25 li
911.711 1026.24 li
908.506 1026.24 li
cp
f
923.951 1033.75 mo
921.035 1026.24 li
917.451 1026.24 li
917.451 1038.25 li
920.008 1038.25 li
920.008 1029.59 li
923.394 1038.25 li
924.51 1038.25 li
927.895 1029.59 li
927.895 1038.25 li
930.469 1038.25 li
930.469 1026.24 li
926.868 1026.24 li
923.951 1033.75 li
cp
f
943.301 1028.31 mo
944.525 1028.31 945.605 1029.09 946.11 1030.06 cv
948.307 1028.98 li
947.461 1027.47 945.93 1026.04 943.301 1026.04 cv
939.682 1026.04 936.892 1028.55 936.892 1032.26 cv
936.892 1035.95 939.682 1038.47 943.301 1038.47 cv
945.93 1038.47 947.461 1037.01 948.307 1035.51 cv
946.11 1034.45 li
945.605 1035.42 944.525 1036.2 943.301 1036.2 cv
941.104 1036.2 939.521 1034.52 939.521 1032.26 cv
939.521 1029.99 941.104 1028.31 943.301 1028.31 cv
cp
f
955.541 1036.2 mo
953.309 1036.2 951.886 1034.49 951.886 1032.26 cv
951.886 1030 953.309 1028.31 955.541 1028.31 cv
957.756 1028.31 959.178 1030 959.178 1032.26 cv
959.178 1034.49 957.756 1036.2 955.541 1036.2 cv
cp
955.541 1026.04 mo
951.904 1026.04 949.258 1028.64 949.258 1032.26 cv
949.258 1035.87 951.904 1038.47 955.541 1038.47 cv
959.16 1038.47 961.807 1035.87 961.807 1032.26 cv
961.807 1028.64 959.16 1026.04 955.541 1026.04 cv
cp
f
968.339 1036 mo
966.16 1036 li
966.16 1028.49 li
968.357 1028.49 li
970.806 1028.49 972.102 1030.13 972.102 1032.24 cv
972.102 1034.29 970.715 1036 968.339 1036 cv
cp
968.339 1026.24 mo
963.604 1026.24 li
963.604 1038.25 li
968.357 1038.25 li
972.102 1038.25 974.713 1035.87 974.713 1032.24 cv
974.713 1028.64 972.102 1026.24 968.339 1026.24 cv
cp
f
976.527 1038.25 mo
979.084 1038.25 li
979.084 1026.24 li
976.527 1026.24 li
976.527 1038.25 li
cp
f
989.651 1033.78 mo
984.088 1026.24 li
981.459 1026.24 li
981.459 1038.25 li
984.016 1038.25 li
984.016 1030.42 li
989.741 1038.25 li
992.208 1038.25 li
992.208 1026.24 li
989.651 1026.24 li
989.651 1033.78 li
cp
f
999.784 1031.61 mo
999.784 1033.84 li
1002.95 1033.84 li
1002.95 1035.28 li
1002.47 1035.73 1001.48 1036.2 1000.41 1036.2 cv
998.218 1036.2 996.633 1034.52 996.633 1032.26 cv
996.633 1029.99 998.218 1028.31 1000.41 1028.31 cv
1001.67 1028.31 1002.7 1029.03 1003.26 1029.88 cv
1005.37 1028.73 li
1004.46 1027.3 1002.9 1026.04 1000.41 1026.04 cv
996.885 1026.04 994.004 1028.46 994.004 1032.26 cv
994.004 1036.04 996.885 1038.47 1000.41 1038.47 cv
1002.57 1038.47 1004.29 1037.58 1005.51 1036.22 cv
1005.51 1031.61 li
999.784 1031.61 li
cp
f
925.38 904.509 mo
912.261 904.509 li
912.261 900.009 li
925.38 900.009 li
925.38 904.509 li
cp
.0952911 .0952911 .0952911 rgb
f
939.5 921.654 mo
925.38 921.654 li
925.38 917.154 li
939.5 917.154 li
939.5 921.654 li
cp
f
939.5 930.222 mo
925.38 930.222 li
925.38 925.722 li
939.5 925.722 li
939.5 930.222 li
cp
f
939.5 955.939 mo
925.38 955.939 li
925.38 951.439 li
939.5 951.439 li
939.5 955.939 li
cp
f
939.5 964.509 mo
925.38 964.509 li
925.38 960.009 li
939.5 960.009 li
939.5 964.509 li
cp
f
939.5 913.08 mo
912.261 913.08 li
912.261 908.58 li
939.5 908.58 li
939.5 913.08 li
cp
f
925.38 938.796 mo
912.261 938.796 li
912.261 934.296 li
925.38 934.296 li
925.38 938.796 li
cp
f
939.5 947.367 mo
912.261 947.367 li
912.261 942.867 li
939.5 942.867 li
939.5 947.367 li
cp
f
959.142 921.654 mo
945.021 921.654 li
945.021 917.154 li
959.142 917.154 li
959.142 921.654 li
cp
f
972.261 930.222 mo
945.021 930.222 li
945.021 925.722 li
972.261 925.722 li
972.261 930.222 li
cp
f
959.142 955.939 mo
945.021 955.939 li
945.021 951.439 li
959.142 951.439 li
959.142 955.939 li
cp
f
972.261 964.509 mo
945.021 964.509 li
945.021 960.009 li
972.261 960.009 li
972.261 964.509 li
cp
f
959.142 913.08 mo
945.021 913.08 li
945.021 908.58 li
959.142 908.58 li
959.142 913.08 li
cp
f
959.142 947.367 mo
945.021 947.367 li
945.021 942.867 li
959.142 942.867 li
959.142 947.367 li
cp
f
867.011 972.343 mo
982.511 972.343 li
982.511 892.177 li
867.011 892.177 li
867.011 972.343 li
cp
987.011 976.843 mo
862.511 976.843 li
862.511 887.677 li
987.011 887.677 li
987.011 976.843 li
cp
f
867.011 887.677 mo
982.511 887.677 li
982.511 877.177 li
867.011 877.177 li
867.011 887.677 li
cp
987.011 892.177 mo
862.511 892.177 li
862.511 872.677 li
987.011 872.677 li
987.011 892.177 li
cp
f
876.761 884.677 mo
872.261 884.677 li
872.261 880.177 li
876.761 880.177 li
876.761 884.677 li
cp
f
885.761 884.677 mo
881.261 884.677 li
881.261 880.177 li
885.761 880.177 li
885.761 884.677 li
cp
f
894.761 884.677 mo
890.261 884.677 li
890.261 880.177 li
894.761 880.177 li
894.761 884.677 li
cp
f
902.011 974.593 mo
897.511 974.593 li
897.511 889.927 li
902.011 889.927 li
902.011 974.593 li
cp
f
887.761 917.154 mo
876.761 917.154 li
876.761 904.509 li
887.761 904.509 li
887.761 917.154 li
cp
872.261 900.009 mo
872.261 921.654 li
892.261 921.654 li
892.261 900.009 li
872.261 900.009 li
cp
f
892.261 930.222 mo
872.261 930.222 li
872.261 925.722 li
892.261 925.722 li
892.261 930.222 li
cp
f
892.261 938.792 mo
872.261 938.792 li
872.261 934.292 li
892.261 934.292 li
892.261 938.792 li
cp
f
892.261 947.361 mo
872.261 947.361 li
872.261 942.861 li
892.261 942.861 li
892.261 947.361 li
cp
f
892.261 955.931 mo
872.261 955.931 li
872.261 951.431 li
892.261 951.431 li
892.261 955.931 li
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 16.0.0
%%For: (Max) ()
%%Title: (vector_425.eps)
%%CreationDate: 10/31/2015 1:24 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb"-6l],;nE@(HgJDR"!(m&?!jdilOR5tQT<#)Gr*r$pMp=KViTL#n5RH&1j_.MFlkNPdD[3BY[?)6P!?"RoGq13();>ZfKaLJ<R
%q'UZ4s6cAcT>,[KX8@,@mn[k"CH"ILWTP5t-eXQWr9sr@ngFJ)c-KaHrVXIc>[-48l*cS"ifrhRDQWE@gQ]/f-bjp#lC0G6^]!Z.
%p[;G%rqbr9G@/"0s7K0+*e+(YmEK"Pr0@6Cjj!hsqMR#`rTh`,(GB.oZ^l13kO#UR2da4HHM@E^QQL,=gPs)@),L7dYO*mQ!.LfX
%J+i&4RckQk5CB]uZYSUj5Pb,Ih4JV";LX)e%mPRBX#FC8GlR?PRs/fNkDsWHh4O/IoIjO#ohrQ/MqM=gk=>6hRhr8Xq=:".53SRs
%a&2QjLEGF3'*%diYJ5\MCS%rgN=nIFJ+P=P-&BlCd"\I955kjQkF6KjFe><)lilg>Fhk`Ie7QJ@IR<np#*Ab=%uD)"S(D"rou5)b
%YM"h\ZhrdTp`U-Q[c[[f<dVE[mPhK>2a>Edq@Q5q^AaHXYQ+9n2ui:<bKjP1pV+7ds5=c4r]f]n)\S/1pb.*qbnmS@s6\Q"+0:kc
%AQ''<Qg[+frIl8A>i=k)QgDlD>Oc&bibr/;s4-EG2D!a6nI=4NV`/+Dhu2(a?iJ$f?baT/97E)>rp'12^NoQ<po$DKD5<Y0K6Or8
%VV?h7h-+lA:*2E/S#9#>bMjGM6<q-t5CR2Hn#tW`q:1tD5L!l[l&F=[qm6$85!Odt9rXh9p_L@!oQS;^Ioq'j%j,,mNMfSJZ\Q:X
%%IWWW07SOW5JI*oiSBjaKs1%>hM1]-)t@:Jqj%3TpqkqA-,02thh?[.rp$&FnE);Tr50WSQ$tYUqq2eCfJ!9krO[!^qX_22I.tN#
%r93S?GQ7I7k't$mp#4_RldsI$rq[`:Q[S]"c&XjSDZ8esb?&irqnA*$IJN$++9*8r[.etJqF86-F8=Acs!@[E2Wrhr1^.l(5gm]^
%s76#EG@-mn]Hf/fIX^m40Ah9PD(bgo04)A@q>Q,`=P*P12ud@%H"fur>lBb4X395Dq8sV4-h3R:\+hN[S::.5DY<S<5FG,lrV#id
%f@BQefu$JXD(bXB?[qm4n%O&<op=urB?C#G><^kufC.VroijTAqes4JVjkGHp[3s7+`r87lKI='+*>fCS"$L35BR)*jhK]25J6pR
%M`8Css734?HLpE#fDieXf8Y6s\_h-9]je$llAjJ'Xda`d`kSGK`#sC(r/E/?h_;0^lS60Lf9[RcrKF4IIsh:erL;F=``tq+rpn<<
%>AnG/n]dO6YE/[/pZ5J\dVaO(:G9J7(e6c\N]aK!5-kFP]E%lj-bk(DQoFbXcU[odqj3qiZ*ibm2a=nRiYu[\J,Zi]q=rWD\U8Ju
%q%%uE%mTuCXg<B.Mlgn:^8/F)<r>TC1T)6XNP;eTnC,Uf-F46Jc(BB,s8I$F/tTWSJ(3^AEV<+sCcAib3,KTeJ`ZI/hu*oV?iR;'
%s*a@=Hf)Rt\h'<K2g!$2^&-g\Rhst0r;h=dI'F(0k`#Q=LHikLI?K"6s5mS]WV1'"g$R8a)>9Kr47f"kmeu&?r*Z-5p3FTsY5"6R
%b(dZt:ZC9MbNn'&^\Un-?[WjmqS,8m!Iru%f1*f1eT3tGHFO%;]o6u5m`RtC/5J.Vj.!_c>O?R_=mtX.I3.]QgKLn@e^iI2HCO<)
%h7&15fUdQeK71(m/c39VII;=VrVg8Ugn4Gobm3OA\%_UaB><aCrC)2UgITm@AXL4gqO$;\glI6\31f8E9iRuQpY9DRA)>K-q1?q`
%pupIVrKD]J-gP8D`;eH_Y5C,*p@Y]"g$Hhiaj6N+meM.4cO9V4l=3nCg7EO&q\)^'B^PG*XnZRHbe?jMfEj4&m.4m4rHYWn]m]>8
%1[R!nYuZ3[D>L![VrI<c+1s#q_:V?Qi<)2)g#paH\;:.>gZQjGdlu@"&"T?K51Xf=f8%5(NPZe:i$$do?KV7Or[FG.8)a3!nje&6
%L\puG]DHk<mecs3hsTfYZ&tRE\%AQM7sjTX]DK4P]6Q@'qV?VPmcn)_d@Td7q)#3rm%kc);l=bU[n^hI>)2:/ju/fI#e[C^]XInr
%a0;8BgCU>B:pLOtXZuJKCP[apDZa_-JEf%oCoGtd.lPVqD;Os@gS+3)(",X:T=ad,?_<,HH*KPo++9aMd>3X6fnYR\An+$nWBFDQ
%51j\=D:mXB2G;8NWDD+&pGRXnh/,'<CK+5XZMo?X\Me<M@9+/fD9Vq8I>%XO5AH6`CX*CTL0]9mc6jRDanhf8h_aYoDLFCEcgIq(
%?<A:5fs&cQX4;N?[pC-,gNV67&(^W=pJ3\:P)Y9,,GR\K4I\Y42h$5)I/Nc=:L3`W^:`TR=gNCu@(W.FYi]iI=6T4<9Zs7qoeb[a
%mPl(=NN@gf[P>@k[2R&/p$nS1^27uLj-LbANMG7J[Z,)sj*Qf$;o:MnMiHq2,Pm+Rk/i`jD%(?[2IDjJ]\CIKD+L=F^YMb5r?qPh
%oFLWF'6VRK4[1jnT-cerSko&T:V2$k;EWVHGd8LmKOkTkaBJGfVPmc)J"ZHU*c4;.g6d5o[X0!T2T$W=%3F-:ZDigZjXPk)AFK:L
%Hp,$Hk'PIT@\5$N/6Z7ogA1S#XP%*CZ*hO%RE\\4es^?EUpXfT[<\u/HsFSc\,Z7uKDC^(c"X_6rcts-?\Ue)[[c](c)<@&@nI!2
%O5"LnH%Vg>leJfED[X:I4L>pLjI+I",G,CBhu+HKglg>o3tA\7Y'\)oW*""mSm.b*k1FTh&rkArJ![Kaheeh$_2$dVc!`ap1e']:
%@8Ct-X4X`4pSJ<A\sh(3.=V;4nX4?T/RG4I"ZA07pg\0q*.!TigWXt'S$(Z5XRBi,rpAIL0>Do5q9?*JA-Otdf2%7L*X.;nU[,Z_
%m8l[PEP]Qpq8fBcdCcS<C\okuc%,b+Whe+Yf:S)lC&JuL,fRp>a^1-F\9"LNds<LNRl8tn&%%HGD53Y&;5#SKd0=p%Ph0%a8LYZp
%ktk'VReV.j.AqsJ_O&qh7d]P(qln@P'jSGki5qCY#KCf\Pj@sIch&)_G!b"0&fmR'rQrm2TC;AgchMoY=oID(Wum>+k]s;MZE(Ul
%dW`'l?i8J0pcu/Zj3U8h\M+qW4pL7:4jg5XFF<0!9KG$akgjS4fZ:2Jl.FdZC%bqhZlC#`bTFAR0A<1hrJ?P/23$;6jHFZVYhU0X
%35o0nmY_^D,\to;+Q_Lh+CR:iJqW56(8P&q@St"JoK_.Klf8^238&8TiX2fL7U'c.>r$*@9j2[`Zs)m3^V$4fLX-X84R7C)0XQKt
%0oogYP5Vbk5.b$I#-TD%*VJ4Z^:Ul=F7e=eoZ6VFbhe+F0A^"3d:Qnf/U[pQp#sTX]a7d5"e8Tdl-ZPN=j>N,c`1osGF/2QoPVD\
%*?Uaj`I$86fZ];LQdsDP:OfCJqs*XlNq5Gi$`H7uhN)"CDLHZrIJ(*^fQiK_Asr>B1!e-.Fjg#VkUH2R-[Md:q"/Q%76bAPVe])%
%T8oL@5=JBH>C@7"'sfXWA+\C%-VQoa2*!0A0?9p0*\T[B<j*PB[X5bpHgLuLWqu,;RZcS(ci;QHI`e0D7n_PSEu,9o=8Z/f4P/sY
%i`n-EX?e4IS7.X&5q6SiCYA:B\f>3p0Kf$F`fi_f]639W8'hpdK[e_>iM\+C+2u5g[gmam#R]Og50Og2kfJ.<@Ai5X4OV?^Ve\)%
%5;ZOQYST3$$3-<Fo&?lNIe\Ok>:GNXgbC_9)3amIYnlq'^I>NK@kDo^-JDqrn?(\%k@b7:eHbrOB%L3j,:$/%'\Vjk)&RY8d)[5[
%,Md[EH%7/cLua9_i4\e.![ZYi,mD,J\hRI\JcV&sKM8KA42WDQPjeM7qnDp@YPq(@F`DVK])nLX]`?c+]4Zf<!;[ODVcRm9rIiAc
%]:A7`p'EkPgr&s;07R>AVL?m\Bg:`#SiJUkhf*1V]2S[flr9H1o*MmPR9?.=[!jBtic*,6]BJSTG/_?Vcg0KTs'DI'77P)CEW6,7
%nJ>j$hPU'lT&>sVjY^Xq6nIe-`:A2(T`1eg!@*q,Vs#Eo"H6_<L)Ek4EC;QH'gVPb7^c$QC_N15WGTuLflrJth9IUs4afBVn/Y=&
%IHT#Waa(6XT1=]egT5'H4,V:GA@I"S(<^;$As2CMRobt_Pp7l7OfH.7nN>i/\M$#P7OQL9H!]TX`Q.E?m-MCQpulAJJ'5/]5#lIH
%maf?h3a0#MgG!k\KAt"-M9T3C4q16nS-M%-2Xk&*\62tBs'o\Ko_LIegD'q\V/_%X]QlhlbaPK7TDtS*nEicTn6@0<^\>]rK@[er
%j\PpQpDpO!P9Y65%qBnC77kE']dWYrKO5FD3C5ED.g5IJ6888'Sl-\#*t5uNTmrg.PF1OZbj4`q+;mKVe<]P"_Ak6bb03s$GYmo8
%M`pY*h%kKfm]>T:a+s9b#k`Akg;"]\HLo#)*FKP2<TjEafEDZ1%@a?47pEGDD"YBG<UAb6qm^73bp'c;pNbh@2r9K,m>4<`,7Uak
%hCapo;fZaEUD2J.[V_UN/"UWW0>LuMP^K4;rSg'M4L8J_).7WPPY+.aUI^,urR5NQgRf_h]P$O5V)VWs`K*c(jFXH!e?kj*epbXQ
%J)AX;5<7H\mi8_5Q6G#O(gd-+_8Yj[#lBorYlFQjc'`M7YC&i)kl:9TYA"M_dZ+?rd%hYb.@Frq'jpjhjsPWQ<#4Qh]?pQnn)3[6
%l-5"8s$`auQnOfphkrF4_kf<Y6bqM@(J]&H/)`(>&=8qAQVOL&+P\8,GO*.2G/X^d]^UuOs7bqbI%Nn(O-<'/Q<)ddXPKF:S:A`a
%H$K%.EW(9WY5+-BY$'Ik>N=c(&^jG7j;9DF&S#>1(cU'OEu1V6qm=_"PdHO3R;(^Bd2kO,#hZ7DmqlAqR9D5?'"\UJH`R>\gI!k8
%CObQFEpdb+G^+IA^A7IHR@=E%DL9c*JPB&LpL\*P0SA]UEAR3eaJJo#9`?+]9MQl4GP.ChMKf^aIdrqXPMc<:R.u,(Hp8sl*tuD3
%9O-BGhR8pabUJ"nZ=&Dkg)YP8.JNa%T(kfqa1l+a*K0/^\ZGp!oAKZGRt#\mc^k*ne;h\VL77bh]c`irR_@$JDfV;U2NWe;ohPPc
%rP.@lDtG?s!<2uLqYoC>kPo,AJ$l?5r8l0fr6Ocmo,mP)TAtI3<F#=]91V:Yhp#M5`9Y8=id?_]9<X[I4lL%'HM@EVM`7h9_uK<+
%YA\m4CZ#'SrO[8\J:#,%jYPF]IWkb^eN[9uOeL^>T<eb#^Yk(N$id:es%hP9.PLGJJ$!YDXgo6[Ca!@o0o$>++#\pTPaC,A)8E6[
%nc/P\SlXS4B%-"Af@t!QbM*.tEtrT(rGPX""p19W)$3Jo$M^J4jDsjLkLFRA7W4CNdD6O%q;oY69llc=>,^Nh/@g$M2\/#f:U`6D
%qoq[@f!'>j]&/g\fla/tI4ocUIbSquDaq:nl54t3P?P;*8gcs?->7XA'BE\Z;(sK6Qa4s/BcEo22^M`M^igBudNoa,:C0WWhQE]X
%X4M*A[=1b,&HLkYWV9k-?u7X)2=g6\C]!L8,saND!mP&[Ngn^?ErkDCh[05<nuX@DGdk#hmR\dl3[JM,'pI-q+-N!,5#,t)Z:W_3
%&G.Pc*S5%mV!6U1E9"TYCRpbf?SEE/gA)e2g`d#[^,3N[hc^[p5A.1N-J!=:ENBU7PHoBRQF:83BFn9IQ\)-jDnEOoETV.+aqS%5
%`iU\-%$l4/B"(^fG+4As&I-6=dS<A,f#+\#]]_3qAr#cq)p'Ap1L,NI,a:#'cO99)G]'qY5k@)(N0J3=jBd+5lSD,<c"fO$hfeV=
%.8JRnRfjl/hXRI$?.]uR1!MZi$o2&<_q!!9L^g*5QM8NKZ,L<O1ALuU\fEZIkcl"6c__a9A([VJZeqO%2Ogsrg4At;&(Zd-DVZ#d
%;'kY@lo_N:/#VP!a[=1a*nJ9CCjodP@CDV+?,!"4+L/IQ8LlU9M;pL4Qqcdhh8.sRDhV\rD]:)qCkQ4\g>LjYh;]gKb\@NRNNCEN
%2=%@rT,iN7&YD"8U+u@X_U[Ha'iN=tPA[^N*gXDITP9AlAOcd@TF&iVaJ\WerS"(')LtmB2Xr,9dbslE#/@n(Ge[s]Y*d?eWS&uV
%T$t8ng=+a(g;8o[ZhG;[62i(>0O#@"Q#J[\0Jb7t$`9?bA=8nndOnP(TA,Q-<2,bE6NhuMQSj=g%\.0)Pe$8tm&@pK9oT@V[0=9g
%].C.<O\Z"H)7NgB,H#:i\l2OoXe7D(WEOYkC41kT[8s^NADj_d%fGE^'k6Ns8i3l0F>Gu#0!gTF!K*0/LQ4i!EApFj'd;\/K:nlm
%CjiO#WY@]miqpID`.TS#8SR_D2C'H+dt[*>Hec.#X69Yg,98hc?4'uN2sW8(?uh%j[SH1$h*O@Im]Vt!^YUh7D1J+51)8BF@Vod)
%>H)f3F41;_g?X3XHmU_i:imNi1_XgKjV-T>&=cPNHKE+(^.d"MN.]::'VPGkf<+B#Z>$:9n]IUPoTW'8N,O'tNPn'TC_bjp5jP8n
%8i@JAT"J9c@<&OAJ47fnT=mT<fe7SOZYiO\$rX^'XjCm'I-9</fV"F&YL@GG!ITVhg\5Sq*7?R*<X$)S:;^Vh.Ug6G";=co9BU?G
%[/\D;[B'$rVLjd\ZXYIl/jm<>0A9#MNIlU;;]N^'N1r_HA&&)KmVNs_fP[&'h6m<,;ffZRG98rU87:Pb"d(?D]5,tsD3Re"O3mln
%Z#1AF[&@od2L-!oqUgcJMUDVH<`C%>27C_c3IFLcWDS0l$!2''Bn@I9VOI<iX`iK;S#2!X[4tUYnFFKp,#!U&l*2Ub@BZr*[HB2U
%%BEoH;KSs"89V_%7DhFt)\5lu9Yh_Wo;cF0i[$YX^u/'pj1=Q7O"<hnp.LgN0:%TZBcc0K7<9EsUc,%rUoeD)c^63U('!n&[O7YH
%B0PYkpgoOb?Vk.u%g929+Q*r,darr>.D:;?B_Z>Q@u\;4g&F(U%WLH,Jlgn8B\eZcXDup@\Oda<Ai?A$N&S`45K/f*8VFK^l<uBR
%BHC`d7&eP%iXZn[PbPQ[aq8=80MXOikgO_pnN5&hC[$QON--e/!G-k7adDVJ6hXB[S_(!?`EY;'O"4&C.l@'.1bii\1d6&0+6p[R
%d[FOjDCY#"$p2sfD1-M)ltpV1dP@ibcD+*MQn>YHk]i;/%;(b0FrV#YiA@t<\lkff4O\u(H#p<+")73bO.M@<W)\*aHDslGQ2Z+'
%=LKtPV/5?=#c?jt)uJNX:6l[3"G\FM-ll&VQqEb>&-,.1Jh\uYG?E"?C[0]A3s$k&hWCNH:=^Tp6)+a'/N/NIfFE8ACQ+ZVP1m1m
%.Q5:`Lj%u=:2nj=p=qaLb!VQlD!gBAP<!55<Gd]4*Mnq"d'9H2X%ac/s5H.Fqp;kF-]6DI1Hu'NV.@f410cWNN:##@70WpK*H,TJ
%1Doa,BUB)Q86f+Q\NK2bc'j@0;_.6)!pF+"$56*>S;.iWDgFQJF%K;]$cNSc3uK6e]TWAgd"WX3#r?UfV<2SBZrsek69X"9rfgoF
%O(_Ib2&d8Rd+rMeEtqr8R3>G4N);/9g!Lcim;,E>%T%#(gfPA4`^!=-jfcq\a+Uk<#-U1==b[?\4e!q&hUN1aC4h%(1I:b>,FY:B
%aBRh%9IuC-M]p_IMm@K0MW7$O8cUBscZ;1mqOWb;;WdRKF$SJlGaW^qk\B<125Ze3].%s23@iMQg`<H/Hd$(BaoBCBIV;H>nog+8
%K'&aA%"a$f.O-(_T<7euU<Drh$+JG^R=^q`#]LegE@;[)2,1&Jh-hGD2+8VUE$0"Re)E@j2ELQ>!\`eW2ps>)M$d<#HF.L+[ctC7
%BK*-G613l'1uJpUS"M(7=@a%YTGq7$/mdKX@S)H>=V9ucTcK:6,r#$db4Q_!,sWVM^GED&4g:0E;:$aU15EMZPEp1Gkc[5OF+H]+
%FQs5lh`@r_[4pA?IReVpSH<#_K"B,X4Hrr?15*ml-l]e@b__d*%<1cn+X>3!`+2]krt'V(8RGl0CP69jU9JZQ!ndulKRoheFZ[gZ
%Crujb*2kh&(ik4Yjsth5\`n9^m<.7i%1Hr?mm424Lb_8a<KTFfA*LS_HG)MdR'obbk/VP/%R[%;$mm2eA^>(CnaH\.lgb%%fQ9^$
%,AW9ra@:lCBkrY*cNeMCL8>#+>safDHeR2A4i2nM=>=m@baJ,d2U0pLWAQXnMgE@VpPS+PBeZJAXMAZoVpR8pnV&]PqkDJYKM+#_
%0t&iI)53d9-KHB,O_W@O=;/o;Kt8J8ctEZ#LK4^qL.@(3"kG-0>k5%-)rYMuA]osER$7]qUiiT+SRbKnmRe/pF@DO;[SG<BM!55h
%X!Wg5'51Ccnd+Y=#`]Kt@F$+T,+gF>E2U!4E$=#:he@@Jq2fB7eZ?,jl"r,3"qRm]-:bs0,?hIg0D>adfPqI-$<rL-OaNee]4l+3
%83b4M9jn::@Y5'boWe,Fn30P;Cs+'`8uZLVI46W1Ipdl(S\_/X@"`=&="LqNg&rmkNTL-TUiHZIQG`[IeO)#e",!Ibo/K&XVt_FR
%44Xr-!ONXgAirW4M[`-HJ@q%UMq<_D_nj!URU]?4qp;;^$=$0R1uUS7ij>T:i@&:HA]0\70QP:Y2Ud$I:d8"d]kYC.GbFpa'hD`V
%[9OD+bGI:7_XPNsiEEfA1^pHF]nQt.891^_+Y-kZXaH'nqPh2&;N1B4-(JFh<K$uOi$W6dgeTl*hh!]u=s(f,m,R[a>g)!"^nS[K
%*-48]3nYjg,1n0HcGd_QNlDACaq'6'\R[VZ<k*hjJa\j]1p\cNeEV8e`_CLJ<Pe>*&S''>-RKSTVEhnALo/QRlV0]]3#<"Obk7/0
%U-J&-6!K/=:a&]K(,#`QO:jZV8b2`0RC!MKDK)\&/\9",%>)P)pI#FC&f]Kn\CFmaP*OT`#,o/mK"u]P1r3XVefHNJ=0t]n$B#@'
%O9h$nWgK4Z%mk'=bgNYYbGtoY8Ol+[ml[]!`*mnpF\2A0L_!r)Xu#Cr,\BT,#A++R(_P!'kKYsA,b,Z$/u<GDD)"nQKZ@s-ar-S1
%01M<C]RYd`\k`bsgsh]K.&`%8,XC:7E%K8p$32Z^Xm?$sW7@^u7j(X(*0EQ?e2&Q?aeaL\H(=+']8:57:H,Yjeg'0I$1AA!I]i>P
%3>hr#R2<[I1VVLcAPW"N6t%SRZSj;rd"#d1-r+PDL)&@7S=gI"7\#J>?#'P^eW/ja)=3T"6jaSbmt;4>r;3_G3=!G0Y9GSZ3s+K?
%2lNWo'aC)"2P;-cOH9^8XtY7UD$n;.-F4o6T!(cV@.I\ldm7RF^i7ZTjfG9g0>j.j`\fpAM>5/HG1j5*bUb\kh68+<#&3'hK`$d'
%kNP_\"UN5=TOFBskO"(H+I*.4Or&^-AqI>?633kL'Vs3j)D1KlN,T;6OJ?B57M*.fcDEc"/.o)%["X](2imRm:"+)u;Y"K;]5./o
%kHhqF[506G'#"IaamVcj6,6_7"IPYD1qB&D9jsWQiY*=M1Q4%.@D4&kVr5$5RpdWZZD;U6TgS?h_kSh\fN`<+O[&;_B*/aT6\#l2
%@A]LZ$DEc_or@7_.n'LOmK"c<q&FQ9SoO<OPC*(Q/uQ$hJ3_i^b/5(D1r6a<JnEj*_7WfYKT2W+(oPA%KOr-=<Tk*,ph.reZcFWI
%Bo%LCFmX]T#Q`JC#oGRsTHQP+Q'%*5kZlB4oHQ!klbN]\j*3M9V]lN1kMb#N?u=\0Qj%_*#4S!?.("5d>JNeq&M#ZXbo4ZXp"YfQ
%bA[gA8]*-VAtt)`XJtQlh[\W37^^S]dP8Zb$ms)`Ur!-PfM_hDj"sG"Ui<l%i9DO9#KMN(P+<afVR_`]9:jfq1%<>5+i%ZfMDj6&
%%]:aZA\]L:#MY:_p9",ddu*Q&jiYMmW<HLV]6lV.eo](u7kb"jL<5;IQkm#&nP)V"eXPkCBb3)TCgtD8Gql0NT]=Zk\1<3(O;rI5
%#_\7/QO]4m\j9aC>sfgQO)l^Wl'>]JK_FR-%Sd-gV#/6?2nOi'@K)=aYE;sh1ruO)!Z;hcPH!J>Ps!@(qd?crB.S]I[m;Mq.qOt`
%2.`4=b8-d+&*jUd^;`LT&KkX[NfrIa_6hlcDSX@]J3pHu.GK*5LB,3l_o0Rf[WQ-p$Naqb%6JoV0%`8&*W+:J8QHg_GuFN2ZNPQI
%h9Y,5[JQn,kA;nM+AKSo!;am^b<arH8%,%;*1TMH"7[G67`YsX5h.>?N#=lk?!u"I.p)$;hWbFq.gg*]<qZ`qEX623N!tm8EZEZ2
%)J%ahdNQrV^gBGAHppII22;<4N]eY^CsXk$LG=OZ$oB5"l[GAB'r,Ue,W#P>EIJUCHI*S?l2b/R84Ju_!NJQ-PHh,f`PEG.)XsOr
%2u%SUL5HD,3+tW'0krh[rV-kXE&C,+P$gOhqBBc?#H\kO#8kYSn(r^d7a#dN<eT-%L5E#YW/*"NUZEf?RLedpYH\O[*jQGMa)d^#
%H)+Oc7!h;P4D.H,Ln%a`>7@oZS`_[:Ui>=k7u`6jJZr$\=@'_'%`&ap*k#_j"F$^I)d7]dVYDUf4WUd=KEF=aU*'Nq;U]rlL6kC2
%*coE@80*b([Kh=F=LGf>aUHlG*H[`D^i6Y0+@bp#p\0>KR9Pb.opad.ku0T*/lkQ)3>$>KC"qnRU_:/Z7*r)%9OlPhf4:+iCeE3m
%]Y``YM"+S%.a/U]Fh:@V-[8KnXH3am22A<>!#QCs$G"OS1o.6IOE\FoVW\g!o5ko&F[Xdu\H!6C?iV1soG)?h>kXC8ggPM&"Q0uh
%6?[aL8ZP``Cg-Nl>hkV>"0r/))&#mV1:`SP$]&[.Sd/%qc%I/h\Aa6/&VfXefp1cuM.DB%TP5n-K[IM525OF"bQs?[#6?C-b(3^A
%(M[4Lr-k5&7",`^0j]VqVX71b>MsQ\q8M`%;_^-V?@?6'1D!V#\0e0F'\?dU>L@p>5ia'(!]p]0<M9c#LXol>VoSr#G?Z,i&J^\%
%T#fh&]Md`&pcc')OY8^8fiJa_^iBjI)!aJ]Z`mCK,2'*)d4lj+3h,4>m6G/1"A%kNjg'SZ3iJ2/'.n/6);.o]jiV_EY:c;BgG&*D
%7IUo$q2dS[;q=si+iGj=P:ibf))+M7n<Lcr`\3J87IEdPZ;]<g$a\c-@F_.RF*9,;'GN/s2Nl*A0.T;I:lI^S"bagaSI1Jkhdju4
%O>1\@Ge;@kJlQ+r';atBFrbNt1'``12X]*@jj>6jnd'e/2>=M7Q\&k,,P&-A&^uF5Q8O,9(f_g_/VI,87n4bINm@:g2OUOUPNL/Q
%j"g4d6f]K0k@*%3s64Itmfe.Jb[r5H`jXQ*#Tad0,=%DVpY*^Y\g%;1gas#8(\fb<JM7Oq?\JCIjcVCb\N?C?&]2K('R`I+&(YS'
%QEs-\%La^OEU6_4?;lQkMW%FCBL]oEp/[<\6JlN<X"CBu@2h!@=td-_PB)5T#WKO^0:o;J.m-rL2m&G1A6&->KT+URl9GtI^iVqS
%oI1WT!$`Y'\2rSY$-=Nq7#1i\1e2EkG%-k+!'\>kTPXnN!Y<6n.I77?&r[;(\E<1P/C.4q/,YDE5L:F.N,BQ^KR;d%S4:k'p4*YV
%FDi:P"]#.U$%e[dZX6-T6ElF0=%.KHOj$];.mc2B'=0-U(2a032Z&nN;0\N0LuP)_(!GL'@WOf;*"c7[c=f`b2sB5.5trI=X9l2S
%"!POYSjH#>G.U)nS2C_&\Ph>d$k@/I=WaOR&Eh-[jC)9"+LM^I`bDq3RdNs3#t7=AneL)%@<n[LFun&e3bLT!:oB;*_n8b^0sf!0
%aNY_m"L%UE;uN]WDW6(+4-R32i)h^Eo.D.3XL_!a;E4pO+>s*fksbXdOHY$&IV:K(3&!o`>SPUjkI$JZ3["#BPd'X=eL^o3NQsse
%]h[>+_.)jgedbsIbSC(0(NdG\XG"hpIm:%+i7=,4b<r1%?'=6A]13>c2n*rs$i78S!qNsY,r*`VjE7p?U&W.gUEE!8!$o"pc!_6q
%\CQ4]d<Z.#3imPZOiS@q#!NSD[)Kk'S\WS6112=33!>ajH8gAeYX78W1t13V[/`42V#?F7@hKdn46R",%T:q)^tCI&JXdaT>srg9
%SVNVo"(:`&dtgbLPick9n^dsAA4@%1R,*FD/jm'iJZr;iZAh[>=?20Y0WG-qdbth/nG[`$=Wf[`oHjVUfW[\Ta!JR`#D2mW.a&/=
%m`G"L&53B5aT5KJH4Y\5L)9rNGsKMs=s>X4B\V!]e6BTV!SZ>*!mKQ_7$=/B(eFjXHIpU#>`V%$42Lg%lLkssV2.G^/]g]LhW1:2
%gYA*!$u%'t=ojlDf.6olBhcF2kB4d)l&E`:o%Xr\^iqgF$ge6d(G'pd%lE/MecpOa;R:emWad$0:<uamThWKegt)*c`pPQTW+Uii
%JC6kMRFkt:6*&oiY/HcN%($DkG?`PpTnG+E+CG0hJe_ePJ.8pN#pDZ9Rg8Y,*QIEU)X)&m6'n$OMA#\@jp**6J,iV0eO3afeW8=+
%Q+>@#XamDcV'D?lJcCNS(fqR`YVo:fEgVY$4qVA`jJ=KAF7tJ*F90tU=-8K8=1gV:"QmK(i!]`D)%2X<pqG[A&CS1DPUht)(m`+U
%6+EJ;WXH"t`k'a(H5t_R+ono9,?CZ=(`D0h7<Ui\^9;N#1Re.#a^L=n)g!rX42VPAh]_Rl.5,&<Zo*mIHt4QF&\Ci(Rf2Ft!#I$K
%qB+Vmkq>65J+NA82a=mg^O,Y=RkK9jmK7\/I9pFGY[*\26t%>oX8"Hg_C.Z#>H>q'V1]DIc#H\kcRrlCK5a4t5R]eCamSmGMO'FM
%97E784&V0Y'-P]Bi'-VP*%F(okoiI+Ij&fq@i#pC3,Wd#,KI48mIDg\Y,\[\3))"QMPfU2_!tmFhPMpC.h$U$8.a^@]H"B@(aq6"
%-@8HH%LA4jKFNESk,)])@cDb`@C]0p16A<s'M,1+QFj'SXeB`ikGM10HmfRlrZ-N7ka,imEt(GKM>fqaTF^U5c23ZD$InDnf,7Jt
%]X%ui#Q\Gs&1$^J_K9`<9_3BJF7HReh+%L(k3W$HYG@i_44dqk4#hlDJAY<%R=Ib*'g6$\:gMGZ=NV+ualWbp5k))SATLK`9-E@\
%"h4Q4]2gnGp*Lh%;N5ZL)uue$VYd5Q$k?Ai++7Is(sSc@>rbB=7.BWk*D'BjY&k2t"\-racGH)ic70;A!'Fc01+d9/E,K]Mf6MJH
%L1`@,(,7Ykggp\%$Q<[8c6;l?=Qt6TAQ_,5LVqc09RdbN*bj%U?]DW:$Qn\G$--p?%hPPsFg0Zi^5Vr'Rl>S5h^&hM*ABr"Yctjh
%8dIJp$M0T'MSF1ST$i7KLee3PF7m'X!`-4G-2Z;&=E(N/RPCL815m!-'N?b;@jeV_c,N"2+1]<bRfZ/[0"\56b/LZtolA:b7Rp-I
%Qunj/h:(A&\)HP0Y(=+.UOe5?37gY+huJh@Q&On2g1luGY`b?[!(YJ#PM;=_dl.O$<>4:WHY;,-D2FK!J_Ba7HVoZ\Bm_lBL]Cuh
%5>h=YH_E"b]GA7f(%`@FeUUXK)[]u7_i-SE5Lm*[E-R1>iaJ#Pp*$V5[8Rg3nFIQ@SS9MDAf?"5Z#NnG9H*_NZQ<i2qaiF4^`d$<
%rbkRfN\c7IJp&591r++YCg2[[VR0QO;",Wqo%O%)Q]@s5R@08Cb7csfGnB!KacBS+AempUi&m0t`-.DThnWK-/K:2hkSuX:9+rKK
%=(L0%<[7PJQcB5fg+e?fRu36d4Inu,$s2IDS.4\EX@WFL$+fNN?C:2cY*%V$)5\PH(9mkl/Ejmkf_Io,2Q\MM"n/m.:r-=*.4ZbV
%k#PF#IC0:o0O>^OH+nuHBT->HV`DudWQ\Qe($:pUP`k^`UZ+AeTdj9,!hoar>`A>joK5rIMXcJ7+;6#4!skS)6p6Gd?r+6V6KK%6
%XSKg5^lG1PC9:HsCP.B%JrDrSbR)m.PDQq4I"h`EVQ;b7FO7V<lY_h"+,>u3fG#j*+P+VmZBM)dcQjZu&:*j.kjaP3]S.LU.,rT]
%TnMl;]N0fN'@]eajDB-p$bd2"csGj'9HW,`$i\#/PQ4'2HA%ZQiapa,a5TP;"ACFm3lDq@8]_kXQq'[go&H,@,9\UE%[;gj-j_fL
%^dAW+RZ,dL8V$FF".%6?C]lFIHpDb)$YuU05`.\GF3&omnA:3ne-`RDL`Kh1pcDpfJRmON!)q:V$]a_F_#8`7jrfOLlsMtLi(2(3
%.dM3HmY/7iJk9*o%E4AZoKTuE^o@DN:O/[6`Hs$?1]rr/QjCL')0Ku3%'N0\K-'7";2k?-_D]brfg@m?Xfsp#Q[,5]+Mpnl_<m*W
%bpGCXJoMXdKfK;C#(/?A7$Q^o7`UP\goZIW9>F6K@5d\"XC71t,3k@@a6@(Ja:BU:Z=7j#4.ta+gTDM[1*;=J%SQl^:*#m+4M@P[
%Z#F[AOZ#[i=Aao/:uQ4lM']LYKjN:Z-u"eN96(;7HGM.7<q[Qk)+MNd1X<HsA@upX&=!K:bMt%,0Gg+mH`.4_0eEKX8I4^e,!Un3
%5udOlNW_X6rN)\8nFRn2^d^#A)jO63aT)EpR6cmVRYNH1>L?QKR>$=K?qB=d2/*8YFlFh*X,d'B@=l-NJGVp:?fiiRi.,ECpn09j
%(b6Ph_qFL?8XR4"Z<BE4Kl-bQ;>#]X*.gdIfoR7DScgN(`Y1rmH!e)`d<@1>$`Zd\mUbI>Q(!`YNcKOJDAIshZ">($[0Wn.7Zefp
%2t8<3;^,l$e*/uSs)t3EknBl>:Q186OM,GR+/(RcC(E(\XE[V5;D#P<<\];E4]5E?noJtQ!,`_3*Z.Ace2MBOjF!!KND2B@8=?L`
%?D:hPA@[[f'EBGL09m*1U4OV&<DZQ>(t*E24t]696^\XLj]*2MM"Ib<_t'=(M:oO>`HCi@FIkgD_]`["AJf]*4GkS3GVUS;>\9l.
%Z,T%$O>W.#KisqK$5HY&,qBOH6l^dI.p6GKWs6:+fXEq*7O`B5]^M#8_.ArLGuQ704eCq+R38?*W4/gF`fqU=5r]X_H;QYd'IqJg
%A]PHgG@T*g.*UT)Ah<B$nH^Bs!;GidT?b?+>,Kn]mp<'s!J)"7Ak'/<GZsG>U;NQPdkQ*l9p"?P8(PdlNgP9*4OuU?':Df%8Q7[>
%H-M9H!II53Z$G0*cgkB@?Q1'.WOji7D$\Z$!O>,<MdY.NnjZ+`+73TVBZeHe/!eB@j;NJJ=0YA='JsTfM#@T9A9Im/im]F6F]mgl
%<Ac]t$Hj3[[ns!AUV3e%j8;I5^nnk7;:?88+[Ei[/dRQoJRAZ4+K[[sk%SfS]_1<.<+`6?p%U";8c"lu-lIpm&Iks14r/_qnP[>o
%.<HJE2Qt<aqN[5q3Kt8?FBh<*&C`b%Mf$rS;LkSEANGF8(.RQXrH,Y(&qpsL8&ft2;H)?_Y\fE`+aBtj3(7h9^^3iQ!fKp6GDXK!
%SQKo_SQ8^E7NNc9aQTp_*X`!=IJ->P"<?;j-I"T4JHjUM<j)nie%hc_qG(-XnHqN?E0A3c]FnABc!a5tadBAkb9@,!bVq<&YRG6E
%>*J6@[7&OW^)QV<kN)q6(I:eY!sJ^8:!$HW$G+@fcUFF_-*D9JW<&$\1EE%2d8&?s,4"WN1;8'>g2F@m"(/rDodYrXU$q^0Y$m@]
%AWi:Nd0?-T2d9^n14,a/T_H:pm,INA@k,2rF_7N^cD>fpW";99HHJr*hVl+R;nsF]QkIt,>c/1eJ>t/hck'1+9EgL.F-HQ`i"\LK
%-b82l,s.<^%5eQo;>`_3qlI9b#2:+agVi129>ID`6&:WdDhJs9?16=ehKH*p,f*MGd=?3@60dMJ$mjs!/Hj;][?GrjX4'^0ig[c2
%0SU]%JQNjc>i[DtZU+Q+_T":_\Vk<b09,U7L,Rk_NXC>>^b8(5RD3V#S9<KNhCP\'7;@q##S_HhLpn]tp]ihL\DZ9n$u3`[O:qlg
%+&d&&"d[_B>]kf<@P[Dn:nJh!!Ak7gZN(c^i5'R#mVA]aJC3d6jto2Th(N"iIF.Of8)\ikWJDn>Qk$s2Qd]1HW!,[RSuu(Z'6VlA
%%cfe?![2MEDeS"0_rdg5oF-9K&o8qWfohBOQRW,E0`X]X]FAKp)>TdH`imK/jLcKI!:`+U#YlehLrN`ffHN)GiLm6i.FEC-arYQ;
%Se$CEf7fK@'M(Dg]tk<]hLVI=!&>`j9^Sg!$+_L)E!7K4F;Q38&a>di->PB"GsH?t`FMAD;-Qc*G23B=^=,G+_1'VZl(nI;ZY2U7
%iZ7Q["XMPii,G6>Urj,^jI$i9"I0oh+2lpD/l&%Q%)si'+\&?E#074!KcG/!(s#r<&=qSkFD'O^n!KpLL9LJ:%r)EeHFt!rZl"Q7
%Pcs]2e<",_B.4iB#8^iXAlba%&Ep5]%kD$RPG[Wf.f0f.0KCN5^']0Gr4uae$/-MfF#:cpK*5UB<<]Z2H9^B%ok<PML-p\.p&o),
%_PN0UM]O"/7iosrCLW/S.V5>(pN2h+Cpj"c,]J=+gblA?JRns=+)2u&reehX.4TE%Hpj0mc;`p9k$>j^%>cTmmS:ha&6Tt;0ub8i
%6dqTVi@$<&KUm*XE-fkEn$/ss,3(kIZK`*2HlT!5nj&l02Q%XZ\^\<#P/ePuTWYN1\qAkI8//BHQ,iW@/t*&KB(Uh.EENbM5/^g'
%#)m+_R'CC*,ga%2D=6>D?H@CUa@m?((l4gXEIo9XnU'rd_j;!;AlVluPXO"-N3UrWSBCh83+['#W#!KhC3U"a*l&f`E(1l%JOm%\
%X7rT"5iF4pCP'2u0RGDf8:h16%D_k)j/5dSi%i6KRT7)0!&,Zg&hh=&+ZUgT&iTLMaOF%V#DF9X58,2q/Y1T;PriFVkWY3"Y:e&^
%03]E0QX+kJ.J_&s9h-*b2k(lfi.dX2b($@jrPjbDK#.6.^]*T_YJ5D^o#'e>5I30D;P-/B042G=qq8m!YC?H']3g`tps7g3qrXsB
%GFpfYqXMhfruHRdR.g<!j?%fc)N@#Ngrku^(pc.EAESJgB[.T&a,!lLB`[j.BC=d]MeDC7qR@idZ83T?V?Ll!9RI8`I$Cm\O5\gH
%SJUZJHna^PcE,%d+d;EB8WWB^:E,hEpeFcJb^%ErA.gS4L+E!@3:=XFcY%XG^fI1G/Ei*+b6<TpfT$m^Asg:[Z=BQB;_<pn(^6\(
%5U+.BY^k7!M@Z`IZ]l`L'm9t,8IuooiWQk0T&U_Gbe\@*@A)e(clCZ3U:Ml$EHT(!di9T]g[L<!3GuRZ?>,@M#8O5"ZQ(b5?dli3
%N%g>M_O9I%OcWi=_/YG1>c%cN>=<j(*mY[`!=)/4*!F;V1nfiaR,@XNjMhnZH#O__11]2HC1H&$mI_@'EC7U&l<hKL^hjk^DaA1J
%a%iEDB3sTu[4YYCh:]OZX78@nBQ`GoL9FDn=2j:/GG/W$d2;2VQOb23'pnN?*d#DMT'2q(iM*XFb%D\o>#&^h!kI:V`agmn_/+9<
%1PSK&*3=3!pYe;C:`9#m-0]%hj6jaE+>Pi&L7t'o0qM^QGG-`\=m6JmMW#iXcM1G%(uor]<siH-_r>Sh(f)e!DusNO>Hl^4r5E/I
%8i5ai0rs9G#(&(r*M19)]GP$33#]V=bW9/\Lu9oJ,"\69$Q&HtQ>CLVF.ICc@WE8<f\;+lR&Dr!&UM^dVR:m76L^PubAlJBgZ@E!
%FYT=,+k`M@2P5UNmk]%TFJ)8<(MdW8&_;es\V_VNFs/K(FOnDa$iu?CIIWS>WlVe+(N\@S`8SYR1ii;03K);0$ZGS-5\eX]KBn-1
%,tH@W0VS.iBCSq-GVBngpCr;"dpl>n^1%@&\Upt$!=HcpK<6!:d@B0=S^V003`e&u!Beq`mK2998FD>6Gf#qfD%RM(&D8ITSmj7K
%0Tn(G`F+OV2\ms`D2Q_"=GiS(TNk$FRmRsDU_jdVR&%Pq%#,#Rf5RE3DB;jeL18Xqj%dEeN:37g6k@F,j@0=Rb0EdV!.>`CSeuVS
%/H%@d0kn5I=QIE416b(!N#4Xrc\7gTFiJb<An&QRHlct_o9t^J06-ZbV;NX(Kj7]i!g+@r);N8tPo(s&.Y_H5-u^EtXY*@XI.-(,
%52nRg=;["8bcLm:-UQfr`C#%3,;-,YK8pe"mooEm,DOIn9YjuTM!7sb&mWB.Q_g?!IW!@MEDM?H@i6A6^Ch-Rp]CLAd1CqBK8ILQ
%;#LI(S6:Z#<$OqiR3iW!*Le,uAc;TV.;fW7%0g:sM2_J[/DO(FO/;*b5Ko"HH*A!hZC/XIWgZ?P*"L&XHl*UoV9d+DN7)mW(3,F,
%J7Utccc!`Gh/DHo`j6X9`%Y,jfRsd`@?=/-eet!qpqDrF9sFhKB=[;qE>[qi:rNXt0P;sE?UQ0L^7OSD;)!e0/(fU$pEK!+O:=-:
%$<;=sE"+&X%P&^$L-]@_M_S?,$r,LW(SY?j4YSgIB,E[aW=u0I`p_:m(RF#,RYTf<7`l4<HVb,0<)Mb#AJg0Kf/;hBI#%8'IUQoT
%H6jA^NCJ@tk8"8l&G%-FKgAK:m[sro0J];G?mc]o]Q0m^G_N3e96$X?-IQA(McCUm#H&01H3+I.PkTl1(aPCqG7@/Q\disgB+tOT
%-n"bW:`-^Q;Y)(H-KA`SMbb2Idk"Q]iB5)D(Mprk6,qgq`]9l$R=n5\fQJHIUp3Xj/0<bJe1)7Q@:\i4\CiluG7b36G2V3CF1^7^
%6Q"L;>a>f6&\<b6+M;\>Pkg8(fL@MC7mnJYV,1IZG(Hd:[6A(27eK18#C/".LTMZR_41"p=6a14g@]nK#BPCdK/\%MqR`s9A*lV8
%.nG;Dho%je8:rGKKaVHGLju[I/B6UB`J]X.G`&Teaqp!fhUWKK0^=2RiX3tk,eP\@aJtt5K.<5nQ$b7h:VfW+7)<.iC@MG%WXmBZ
%cihD`$VPFEK-Y[k3oKYFi*V2aI\mB?Ja"_D7MsOlUAR(B>jM9T+#np>%u_\[>^*FTqiJFO"&EO7lf&*Qh#IkPTEa9::i#bGfZSu&
%$>Nu,:fo:jeA*#3DIm(PJMCNNAaS9g5J_3U?L-[f)iKMN\WR&i,*kK\i!+oV<r/NpAn\c`.l/k-,sfl<`5"9KW#HO+0Ko!tN#(&X
%.qV2RQ%=C;3K@JNL=TaGjh_@`-DfZ62$P#Q\V1?_M7PG6nVe/aFCj^p"Q#ZT0.;A`^+&*b#`L/hU/jPc$rkR(9(2jK)f7K&/p+m2
%Duae`2IJ3nYZNB4KFiqhjiRasI1J!/!bTtAkm`:J^irn`(F%f(=h!;i7_2gj9Fa@*$6,O=J75s]2E+`gdF:L).uXt:,f2VZ%c@m&
%"YamHA#)NobZ5m6aU&=c=;6Ka&-)g5!9G'q^\BskaNj^u`FE^Ms'*.]4kP78!$I$]<.mcADWF0Tq\LLZPO'NWK2S*1hO40Up'EQP
%&H>)WJMB2FI2bKZ3;H8G94P^V6>!r-`4tj@6N"HK:AikNFO[jGJ"N4@LE2>0[$.,QH%36La]PpbWHp;Pir'$g@L=Z-ir)TjPKSmY
%(WS7;&A5d18kg7I>^1`I-GVabHQc6e-?t"R$RGKEN;",:%<fa2k3hgoBR_Jij'68I;[F*)T`#UDX#$Y&6URdW0NT(E?S]G*A0fl9
%S>cogd/K3M[Ki)f!Q0Ol%'WM(M][]:QY=S3#A1M!XM5tVXlWshjU2^='Wf(I<H>P/K.&8]0-^nV?Y7-_2@nAGFq>DQL%Q7].cnU=
%obVJA"A5otC'ZKsG@pebMN3d!-iG@=/;$>cqTI[s(aQeVro+F)@L)-N*_E?B+T:Cj)=5&@rh^[ZK#.:VQkm5IKCtQDNqj(M02E=!
%c"VYV+TsN5Ij&7n`g-7aI(;EFaSLh).*K=?mk<^ZbSZpcJ!m:b]Q2k9L6%RXo9hV.")BR&^L4&iNWOiG%2MQ&7YC@M]9?s,]JJg@
%Cf,0;SA.1f[tF5f(Leu8RID$_+Eh_nrA*`93YJ@g`N(D(GG4r*di1FeIqNdI6P05@/WlQ9s5<cC1fBg`H("SLkfok!Kn.\F(Ui4`
%*K1eF^CZ3adCF]NGB0PV72^I<#LP3bF2^(4oK^+m3NkicHuFUaKB\_.3'=(9IH69[T,46ZakBF$q*cQfJMh*9`HPG/B9HWCMR[pL
%iPGa8Mfjnad[k@Db4(lYB5@s1?O#[RXs.A8ePS/hB8U']26pcu`@kGe;/<*)ARj[X(Q)RSnU"CI^\eS*0c5?gE+\$\iE%J$eec6-
%E\oR*L0nP4^tNa9pr-1\p'HI\()gU)%u+H(M5XA!%):Si!ca'ipk?`Nb]/MI[L;C*cQ']a@Yo;h?P\bKhAmTN&28HNiV8*`W.B.e
%^okX+3.<=7Q?6c"?_TIc!-4*,mdJR<_\W4P/-]3,/gS3KF5$SEjHkY,0[r[C;c"-5G^^fI?6a]D"8414haABYEFns"O=84Yq5"'A
%Ha*EG^b(&]1r%E!i\,JD?Z!_8pRq=N<h2;<6LtR6SVEg5Kn,sM61[_M/)AN>^QMc!"OSkU`!T0cqLsG70,L?iDIS1+#bk[+L*4rJ
%?0hB"#8a+AmA@=Y7J)LtLq'Agd4\>P`OU7)U0hBC`V1sC7s3s*kP=4`%du4"0;V8tM/&B5nY/-tXGn.:rth,26,^,#*Q4+[>:8&(
%61__8h\V_g)M"9ScLZsKnjnB(r1[(S5?rG^+Vs2jG^^h+ji_pu.:IV^_Xj8JrY&&ubA35T12),fqk)>qi!u2_]Vqp:T_[\aXaIB0
%ikYb,VXVIo96:rR/OAud'33^%1r!]40gT&XIK@oAqI6Au`=N]u0kc#7o5-n!1qtRT$FM-m2+!U\i&Jt7NH\:GS8!F$V6(Oj^QSA%
%aQWNBlp&#`:pZYLn-@:Ca<bk24MT7T`)8\CYD0mKY<9Ra_JfmS?X0-%mGReoJBQMtkEdXq+moDok\SO(+$@:NoQoWp`Vl1_%\@%Q
%&s7Ifm)%K8KPq+R%]MWkU]ejoo;"Au$=>3[Z'Qug09hqR3[k3Rcoug'r9hop>Ih';6F]#rn'Ef5n;-*@Y[^e'B8U'a8uOF!6[?:b
%J,(ho3d\I/qsJkY'ZfUmSY=YlHa0nr432k^r]&Yub5c[<R2=Ymnbp]!]4B4S4+)/\dU!L<Z:a@TmG#=?H6"9Bl/;7-Y@gnn&36Yl
%4Zm]tcKRDKrc_uH*F<n2N4rfn9SpXfL,71]pj@iu6O05:Y)DpXd.r\r_t_+2gO4:@+S4u\!=g_hE%mBRn4_q:?Ir?rP:s\K\qk_G
%m"U,%nG#>+5p%qtpl5q"/A?prPNMU5inHE<N&leK@c5=^"c"a@i]19nI!<%HK#&8p%tqp<i7hc%LGOK7BY!h>(4Ru\1dWZFk^3%T
%BYg+MQSS(N1R3r@YX)l?pOZ,=Bk+c/`!#O2g"U!(7<19YlGUBo*:(.@H$]jC6ohI"p**eD4Uso,_V@KB=41DmI*2RrEV?,U@"90N
%.=:S))&qP+)1205i&#MlhVEV"i9MZm)_b*$\m?/a5s75402(:YcCD!1\B'N-GAUXN<5#Q-ppR'.'D6t6KCL&@c68`\Gt74PEb=P>
%(/75mIaF>.'can^.<].`-1qK[r1pRe($99CoEKlfKqEQK)0#*:!o2+"/uRk9i@qY6Kq3E;QFt:aiOX'i%POE6mq6Cl-$*[)nE#aj
%p-?PP+Fg9MSPHU,XM"&cS:A>bW<hnBra5s]0;JYD.j.:q8ip.#l)6StmV+=QE)*[.,A[qL`Nn-E7F$o<#cTtnnm\;fC(=9N(o'MV
%N\%1MStEc:o"sERZ7n7`q+R9<npS6XC61'<]X0?]_SO>EdmAH%%KuATL+f(0bIRsS?3lo"$Vk"8=RLV"jJ@^QLNcL"dSOo?39TB$
%a@LSYp<+PAPF%CmW/V040;VA>4"%5kGGQr"?:O$Ie:6WAA]t<):N5lf21q53-gu/WKF9(Z?CcOp;"?6r1+HE=?DDF`U#ab$R'L`p
%MWb4sFi=i7)%Q<P3csMFT]D*j>qkiTlk*$;@H;"p$KEoZGo9n<gD5a\N/fT]IV.YHAu.<SE^4)o"XEK@mDYKUpFK>>b$tgqa@hPP
%eusb>K\0@;QGqZG;WQUL+n*5LE[Kinlk(ao&Ft^;Xc5cjMk6`jF<T^6JI;>'@,sb9'oD!Nr&_<+b(YilW%)E_Vt,I'S!Cq^R?;oQ
%U,*Z?K./?4EAh,hBskL[$8!B6ccC>W,ZV)<M7ejNd@sAlqehp:2I8fS=UO3>;d8V>-9>IfZ#[GHnKQ<^mj71BL[2EWj(7=CSl[[R
%BB+"ZhEHN18G]<dB^N[S$X$?K-?4=e$YtBK\,3PBORN<Z7trH],.\GT"pJq+Xjt]*]\W>L#m/u?]jTFs$UQhKS3PKk@OhrPgL/pp
%@:3teZ1!hrFRE6$>nB,\UVt8u_#RJ>>MQi$K^)Y$h*(J]&Fo26GYYL2m[dt%OR<a?+spW.pT[(W<nY5GZ"db&\PV^7lY>MHS8jl!
%l=hfdh<HDl$f<SA!4+>i?0iU=84g&QJk!-/B5G2!7$1d`Z<_\Xqj<:W(Z0dE^JO;!!5k?8S8">E,GhZ$G!QO@Y:R;a%Ri!-89Pr0
%9,GJu?oUEb?O1fultp,-\q'7Vee_%5i&u$o0'p0/dA4=oFdofY4e6'n5-E,@W1t_0h:Y#+]u)pR?<rfF&?gMZeHKFf2g97Bh<+S9
%#H9>uJNtK/iREPmTsWb-KjC5PnIB.2?0'5.$a`"2]hYMagh(bZ?'m/c<%-Hbk?u'@qp&=\SM'gbN8%ah77f)Z)&G'al2FP!kt^-(
%.B%=h=!kW;R7\8d=N'NX8Jh/:3:oM4$iDm!HtOMV!,;aume#.WYit(ngh<tV1*M/a$l7ZTg]r](E"N&'6Pm_"oOFFZG<24&;!:Xb
%+C>t-Oc:JQCl]^I(V0h[G>W!Y(j%4G`"*(.6u(15(P=>mkZJ#GT[;dQkm0'LKeA[>7f7j)2oVp5B+!JT@XD)G\P<PC>uiL!k^)47
%,mON^0$^06j=L%5G7Ip?MJKnGkgD`V^)m6O!T]]t::mB0%(d`*p'53WSK;saP3C3D/`%pu&aV(jkG1CqF[%m_mK(+k:)(24F6AK6
%^77A'k:qm9@F&N<AlV*XjLN`TGCpN0;)pQf&*dC77C7G'&GpW*\JsV?7tU!LSkBIJ%1uSI_Hl/EQo19*K"^<`JBNIO@/[]-!_3hI
%mKsD\p$AFe[Du0AkGg.JVOPPq9*sj50&4!""-Y"?F8=ZH-_3>CID9aa16,&B"6[s0.J&pb4.!Lb.Pf`l&^]ZHBlN6%!#X8GcD@Wo
%:>Ae<-&aAlMF!eki'2Di%:Cn#-t;I)W,qc2V(Uoc'\bqWF"Rh9TOKRu\Wh-7YQ!0ZeMqV&eJr2QKfPL.Tm1Uib^MKMK/aYK52CoQ
%Q_#Xth5PIP^47^Oe@ANr,@?j[l):?8JiOVLSBGP!k:54hk*7rn"<H_*@*VdG4f?8iMpq_Gotm7mQ5!@W3-QtXF9."U="/j3?b(67
%[6PQY\8s)Iil^)WB-Q&p3>X\=20b$qr055:bdf^-Gq&a/S-r:#6]/^MbL@UT1+7,CgF4Ks>u+c8A^8n)YVO:(iP`:J]l9WLLiX_N
%3_uV6=I3]N#BMNG7#X66QugCH#+mc?F!4pB1RN54JA#u3c6X-%<QJ?g#>ue_:iPQ%T#YT<1NRFX0"[FgS;VFGl3<#e%H&l.Lh<6G
%F-T2Kb$rZXF#R52g,l8nce=(5(K0)7R<);@?A%=_\J2is].iD78t]HDkOL=8JhuT\b/sHe%iQR@mMNHW!]+pQENd3L]*&r@gdCAn
%\[Xb3)aTCOLn66\b+=Mr/q[d%YjC4BYid'Z1OJPQ#((4pMR6d;NNmaPcV8Oh]Xb,LL)1Q:\]h!d-\DLN8E#djV[8?))VgaRc"0YO
%."Z_DG&Yf0F[/k+2e$u+S'0^+^qB1!P#;_;06hQ+*n7'fiO3C&.Qd1_P+H[R.RDor$nWVZJiB#pb7iXnm6`@_#:Ig9=&K;.E@qC$
%M(Z`WO:iHNbdeG_rj@>S6,5ncR5pVY%0OtFF.)]\pnfTnZMQi?(ZntE[Gk3&S4aWNY5Mi6B$+GYG[\lDQ6D1.?;isJ'C_aA`UMpM
%?WZMtLg-r%63J'"oe#H68sga9;!7D,,btk6>U'07+:maB8-EEaQucu(1+2D3\[5M]$kpjq`5RiBi5D.tKSqjW/(O8DD:Ob^0@IU@
%QuaG%k]5fj#aeLqbdfi([&dp&>`.35_43%@[GbB%,.,EhK3.>CU&^Sd%dI:a<CDub0s_Q_8ltFc7YTOf_4Ad?:dV(M'ULV+msaEE
%V8nc0i=+.k?t3Gn$ZYSXFY4nV:?"A!MSf/!:&[Yer`POUnr=B#Xt'"k@a0Uh:G4:jEtL#o\GO.2].8W@.!'S5a;8@S;#UEZ0\:t`
%oXGei!-p7Mj)hgV[])Bqjh_tlcf]Bc=p7p/j&`E`\YtZZ<J87AY_@r_?@3QgXF02b-l9+.:_Yld0#DA%/e/(h:]PR'fJ?5SKYXVn
%9.j\(gK5H+-m:j\d"NY[&G3iq,K5b&muuKmMBNen;-J,da<fB@c&LZ%"iq`uMtM2-%b&``Oh!1U6borb6/9/*hWrr^&NEA+I3Q]8
%@L,Y-d^B;[%M[YX1N(mVdJB7H(T'ZVTAcl]gkp##M\Hs9K68-Z3,qS'?supl!q?c;K2i*W!TI$Z7U/KHM[VpW>R,NI7>P0*[\1>)
%i>-5pOMus4e1AbX@`0AqDO0LO$b(-lbXI6/&DJao#oClO=UiYE\;5@YK*E-G2Hlc=('*1f7\Z1^$R(1rm0F2,S2A@1iZX4SgR_^g
%E)F$bSoXs<E[AN)EW0/B1GHbmoXB@lA8W-X@X4V)&-r[7>8WRZ6N51HL2\YACefD:3nQlJgV*=N_Kq-q]O^Y+]!GcIjXnb$[E"^+
%(:]n$HeYet':X+34U>s,,KjPL4nrpbMBper\m$ulB9C5"&Y_tQN::e,&_@\C,r5ZtU"?QJDOK3#mE0MY+Y9**\rC1ai43F=++);(
%Bl:JH7B)4,G#cIAa_gQ'mL.,gOG@!2Q\%G0Z_gcUiYKpJW8%cu/NGi>>QhOk_ZKlUGJ<R[NH(f(Kb,!B_/9X<%M[Ou\Lm66SEtE%
%jbR(B,nSS70Y-a&MqJjl@.bD@/MRjQ;`Lm2W)#+*SCJCW!*n`Ae.t@r)hQNSUmMG=#Gj#.^jAjY9&&:&#tA-H#KM`Yg>XWe&f3l=
%1^S!Ki3P#I@j@MA"go%DhIe`N'Kr]$:5'rQ-F^XtCf+/cM0P`"A[qo[oK>*^&O8R:Clp1&qj#/:q+U#HTWuI[&?u@r/\\!kk!EOH
%X,=;$LMc\b,RW9qp%+-Y(3pXu+`d_Y7!h#jCGBdbJiM62RZNP;Pdt5aAA6R8CCtQ<8Tu>]SZK.n#Bt#r/a>W-$Y;691ZmC<5+tDM
%Rs[YIhHC>FR]a$*K0-<8`EG>_RLdhMXI4It1M8;\-HLE"PdLcl#!jj8LYb2EHD7GTe7Z&:FpI4j=`*kaW%2#Q%5REr/?W0s_(M`k
%&fWrGWo`*,ocU9b]!?!am47-.(ReMq]'"pH(?:]B69%Og0g=\:7r=BJ',7k-fC!%FAasiB=+XV+5PDhTC#OCqm<C1*>1>iTkrCi-
%og,^<S@3G7cP50A=;+g\H/YV8JcbA3F42<ul.^@hhQjC%=Q\d4:5e>LaM(16oqtN5PnP9gA/P@*D/\W;9]ujE/^OhA6GZA8<)l4Y
%M\OlYou]r9`uYFc&C[@A*6)gadP`aD][5(n5tqAJSNL=9A*ES@ptk]0_tRhI]M(U_M``:nTYX/l@[=]6$#,l1F@K(FS5djk_(uH?
%(!i$`CpYFDK-c1i]jWcX(G49h*%lD2d6`XX,H,:Rn"AT4[,C>)ik,iM,'"/@,'[cu#K4,T>2(/SW-MgF*CE8#_*U6=f*luYmb,Sf
%#;$"%;fs#nmSHM8fI:Loqh9SZKL%lXSLQLQA\0b9>j,gO)J*<qKd4]a$1cdBrQIDD_P!Lf*juF<g$VNJ(ZJTUAujQt(#Wr7;hB2$
%44O#A3no'Aiujo[%`o$7=UattPE%%I=Bi>NW&)^/-YEt,=[;Y3>BNfg,'m=tI2#$gr%:_nm=\Gmd^nqm%VP>=]%Q$]/d:(tn1DR3
%CpV#BALErf!TS:)fuV@.WFgc..@=_fn@a@(BQcB+j2s/>4@'lBZa6UW-WjusC7>s15"K97b[ke<nt_Ba`@Qmg0L[T&Zh)gANWD]A
%p\$cFAQe2ZgQc(\N(aL5"hX-no"@IEbLZ:pD@UR;iEVee/;l'8C-J1j(=0krS1hO\5p3gRAarHqPmg\reD@E%n\Qc6&1!+Q1YYQ6
%)8RbK>iSL,4!LNcN3YfbStM.()1S?D"c?6#[A&j*OUhb]fNt*UmQr6.4r*VsL(qb$Gqd>Q+Pl3:,$?UXCjS3fA4\Z,`^(j(*AMSC
%OmR\sHVLeJmbgP,EH'!f5[8[Q$J?F3k+3%i=a7(00FSHE,rh+0*^[-Qm`p<g85+@?AD!;;Q3\ENk.Uu@C\Hg/ng#'@U3jFka9#W(
%p=N^[QMbhg677kK$^3_!H)*-V@S4Tm`iG/n6Zf=@#Zr$o@?1SY-EoXk4;QU-dY0c,C_$U-$[4-7RbWP?WFP0oFWH/[>1-=bdEF2`
%#7@8a[fA."2%+i?Lh#DO-m3`rNNEI=VL5a1"=:)V3(5!(]>C15>@D/4`m95nQCJr$/C)o2f$)#Rgg9iK1\SG#`c?P]k5M#q9cZ;H
%\2`G:,4FHm*1mf'OA$r.ZU1^Qrpo\^&8,H8b9TU7iYFna)sEGbCH`cSkY@/e1kAQ:2f1o,TKh$kW&+44fkKB$#s>$m)6"'-71%nj
%F:K]kL,6Z`gH;%k9^`<_Qc8AkKYh5]Up_63i8T&]eirX?i%RbhMN^$XYuh%WQ$r7DE$L'`lC1@UZGN>-aS\01\[[N'Rtl'h8+H]K
%4GgBG8#^dq.3rF;?oj[%+[K#Sl.!`?L9iBmeELZ,'"GSV3Lb3*6i_V9D&A^[>g@bMiDnq.ldWAaARhe`jf$m(3%pp)\<Q3Q,!/4#
%!`jMZ_dea._QW&jd/-\e`QdaXVdV7E64LLf0cRR5-:]V2A>8f*ntbAoC$-hi]4EAf,u$7qkodg(j*.kPhH1],c4_W8r(WJ@i(?)h
%_nZ;^fE@'n1.&9:?(?'M/%VRE0@8rs7LB^eVGEJhT=ON7;>e;EibQr-'2?D']1j$ioqF!lO,n8W#YHc:0gQX']*`Er2OU4rJ:3ot
%?NW2o+=&#Qa:@qi8,)u)dCS&HX<Tic-nsh"(i,A3os?Cg\IW?6?Q`3F#rc87$^*X%F(nK*@/A;I8&tKiG#d=+CsY6DBg.kZC]o#M
%[gWeBBl@c\ZD_a)^=JM&Fo.J5Qoq1@;-42s,_DIDVcomlG9$t+0FA_ljL]G'a-hXrhdoaITL5@TEQ5Ze:8sDX@eo77Yn.<+7hT!s
%;8(0pn&5/tM'n0EjYIJ8]m4T"GO!\$'%#'0)kRMge^"[u0oK7d.`]'X!+P(%DE)ia"ITHsm;^>c;%E$%::tsU^l&G4%gUmBqq@0?
%U[%E*6K&F5bR0C:;:<`\l6CuAYqq,b=Wh%$Wpj(Ag?t(BDP1_JBBm:kS:'[0mL9;SBZ6DgXt2#jR[5!3bW5itU$m[#iG2UkZqXQd
%,gn%:H)`9Qo:2C[?27KB$S`Qi@Hcp_rs,,139S4pHDGN"<-lC<1ANN\09\L+KGu`C?@WI(Z*,lUi3h1%+G?,/)g2dMD]5<Q$\<H<
%mOil@?E?Kr72[h(Ba+9f@]"#CX<j/7&qp'();5NDPDUndc-Ar`//ajGi'!2Q)LTHHhimS\P,&ellS@s0nNFHr%p=`KW;I!sJ'e2;
%&>PEPd"2fbP=6sEI+:#\OWj\Imbh\Lb$)>Qh?aO5M(u5Y;+C.LN(7o6R9Hi)c7FrL9(t_P)^\8F6HDlHE6[?-.Z@ReG"N^IR"AR9
%E/lrH8:nLTlSDIh!![KqAC1GQMVii$OWU3B5NG?T]6X\:9SsRE#p[7Q%(InSGXd]:&7QIhA?34'+NpZ*C%Z"pC"ET54F@K,\8qdj
%!N\=.A=gR:bQm6[<uWD=))Gi,K@pMejNZS4Kl`*eZZoDJ+D;<4B/QZKHY8Nb.77U..+@-4iieZu.B]uA>8.l\3>3QFZ(^O'?p0+E
%%TB7`_-NM?0Cp7^r9f^8KG^4gBb11n"9[&E&BNQ/.fX>,,ZM3K9[X/:=<.Vj&DCo]cos)Af8ES&i0B=IdLKRBg+c[")gu`sYg)FA
%-ull"q3EVu5f@JmZ)CDJ(>E5[Y+bN"?\2.$(PN`l"ZK$sk</KmbJ&HD$Rn^\j0(]:joZ?+3HispS3U^YU,(Z+CRHQ:B%Id.dj[4-
%;adF;@=ZB`iSt[:^qL/.=<-\[*hd_SN8P7\cF8+_%'fFV>?WR#Qr%%9>&4QV&%lp)cJi&5J]M@QYhL5RdpUr)a^*JTD]2Q&[k&G=
%CdFT&AeqG-i,6Hq9iG]Q)hWeY5<P/.`uT]^(2A(T$n^kF6?)3$P_2'W8o\Et>'A6e*f<V^Gpp-r$2s?W<91pp>IAn4OCtmpeSC6[
%Ia^GZn]C`ZL:2Q]c<ua@_f+bDFjM20/'(n@m'ZoU5Vm<PSC^-<*+Jd'@&r!u7V"d:>DN'<)n3E!ZbbYp;`DN-3?XI/OM?M2Q<W/H
%9Z<N/ep=a5KmPAr\;qYT$$&BcQ>*W,5oPDY5[2P:F;Oi=$kL9L6N+VILr3-t&OQj&Qo?mVoru&,<1U<ZYqQ[eA'NkJH_sDZKirfL
%1+q4L<fVKZ$>!6H0JVGnfHm+"X3/O*#@[d(/s\Z?j0gkN4kmISf9Y._q1UL;D%>Pp8_6?=KW&k@/4]CA3-CD7+K8(Y4\a/cg,_ZA
%N"e3@qJJ9aO:4,P/pbNs6V;]\N,X<JHj)_l/4Ms>*!+)=#(Zo&FgBVU@XQP[<:^`Y<YT]7jp-89iMM1a*=?!`?:nG]d(fp=ntlsW
%kJS$'(cDSca2M'2T:6[CD(3/6ZTK7p,oQRkh-gm%PXE(\eD56oTaQGX$AM5^5+c:UMV']_bU)uZ6,n0f"i44JWG9+e1X[R5nAEO5
%%Wi5@G#fRB/.irCcO=N/7W+A(neRVkoUOOs"VhHI%e%k!+H<gDf%)I%+0mHK/n%(JU=Iu6+Q.BlCqAFI]Pcq-6C]_?M"-1p*o&k-
%jl5C!n!Bm,\^=:1G>jXmJf[(^+?7tdW"ZR'<$(!;aA(i877`C/()4W.mJ<0E1(C`Q9srrLfbD"=X:X@/!?:P@Z,%D++I@Z/,Vgk2
%i@4:q=_,TPle:nGc4+oAmA_b7AB/XV_'f>430iGP'"T&]/W&goA75mo%jEf?[r%^Xd5Kli_c^jbiR?d$gV^ZtNeKtP6_di/c>JJH
%;d%Y#LfG*SNieDM0H`'0.7Q3q-;o^DLSVI##CsRFd@=YT?JjV(@rWdI/o,Mm-I:;CWgJ;C8-7&q,DiiRj+bP5JWQQ!>i1J%?TUMS
%6/Dp-i/H;[.3;He1a\MT>%/+0&0aamS'RT?XVM5@^-Xd:/)lA;Gg#)f'87:^T?ore34/cMb]Td&*1!']8Wp;qQUK"]MadtY4E(,8
%nP7#DpKS<qTN)a.5K)@gECBjHZZuDP-_6&]2f[Y]7VV%`.Sq;>6*1qU=Irgbbiab<aA2t91r!;r<8u]"r>F&KaYE3Y;O"*-E;[d7
%34t$ZMlnK2A;G6iqkn;*(Wk@$am;--)2e^hLXce%E!R8!\c:3jol>')9!5l;;J%3`@P'KOBHuRnNlWZF];S2lSIgGWClWVm71'G)
%<^0JYUBr&T,jo\"nb0U_de?FsNl)(PM'V$#6rW+%(uQMFaOqS6]E_B7Lr+1\d<gJ+XRe]=%.UGXe]27\X`2nO45BEVC7ma6(5W4P
%JnurC\NNOr&;!<OptVu[D$!e/6(_5KpttCG1CZ0I@TPED?aU'7KfA*4QDVV&#Q!8/;l9s>L0%tDb0T^#5BK%IKup7o!_s(e%'k_b
%fM3Cq;mbFCQ&O^MW2.7tF*0MN?m"^]`=ui._qWlk,'(#XY\M,:Z>Tl38NkA"MNnX&;$1b;W?Tn)&%9aF_.r>BK/\>](SDt?kr=e0
%.)_''nksEi+]03:Q7/)c,QMACE*H"slMGl^B&A!KO`.q6U`?M]d/8bJ`jF`+4ph96pe(7(7_B(2.j=+bm6etk77[XlDb+!-`T,UC
%ORQCMj-].P-K/0j1/c3RJ0]_7FSD7l>:<XD4QL?6E>37Y_;kmbMKY.S^/VA,Hf,MKgtj9<_7Ece@EmFRLoZ&bjT`&]rFDs8gI`aY
%,m5B3W8(.9e4u*E4U64g$rO7/b@89lHjQI.9KSf]=LZX"nQ_F@r?0dS*PtA5;Q%qOb_D4:(eQA?Tc'GkPpeZ"ZecB*cu^TnQt1DQ
%D^h,JgmE:9$N;eOE^V'2:q6<AoEf^M<k`8Q#%.6G=2f"10s`%k9FVD1]^f6`W=Q-@bequ)1\2MPgt;ei@r!h`fJ:uU>YmI$,L]Rk
%D$s04c;#k0,T#HNBEf5'i*%'Y-VBj]"Q65H9DN#2_o0p)dfsIQLkp>iaZlR$`H#dp'QdUpO.tYmGd"d2kW4ekmEBtl7s7HfbqbI$
%Z)pE&1IOip".:UWQkj\gf!Gm:pZV6tP,CgVO[3J?ig?nDd7@9r;]7Eo&t1nFLoP'Zd44&q%LM7XjX0:]!3U_l5\)2Hf./b"p<AG=
%%q;&K%/CgGj6%$D#=tFC!&O>t!Eb,hc$NOu\p2h].n,q&Gb7aiNtM;d[?*t\hE='X],%cN4!&+2icMYeOe_;Rmg_qs\]MMXJs$9^
%L00ba&:Pu?MXF3Lm`:%k^ioTY[fK!;^3)F<'cG$Dn@cR#D<0j7TN$.n1^_0SZVX?\,g`M=fiH&f6A^`T<ulgE?-8;V:0n9\*g"/;
%j=OT%7\-G]<l'NQ$Y+\e:Wk.3,ZVj:D\.`fk:pjK%INZ1g]bk`>)qujL>,c]BT1m&XEY;p,giKVlQLXU9oeK&4<1,!0U5?l:=['A
%;e/.=m?b7U0c*-]Ma;*X:te]fPUOJaS!_*dW5kii\6\H[CgeSP@6(X;"'BQG?O4'dI"HB)l6Pi7DM;5]O%n`+4bmM6n!e_[`%oR8
%:Nip@JE0sQO;/pN2B%4:(W/@C10rY-3&ZVVj0$Y+#EZ1>RT/)aM;</lCedI5M^Y^^Nm;g#jaq@a9cE;9DK&#(RM8`2j[%[mS)[JA
%X9ufn(ig:TOH;0`Sp,DHTVP3po0>nN0^W$r.h)9KR<b;q"G>#1Hs3ETc%.o%Nk!oE.Cfr<Y+&b1Lm*IBFeC@Zgd\_7$l4/+$:f)3
%5tHZ!hnq9=p7Hno^8jTK[<_<`@JfI#7WP6lmecWA_?H!UoKJ<l\*O(sQC2^.:qh'R+Ft0e%JQ'mKN!<>WM8J_ICbfL"h#Os%K:JB
%\f<YYHrE"Yn<rBT9GnHK$7eO>rK,)-!=0P<qr>IuUOfY%;GkT\.nTgj=92]`nI8rY#f1UUF<Tmo2G$;,!2.aq-6O)[rU.W?9#-^<
%*69ZLX2"C'4mJq'a7o[?cNk>TI6GNPptBCYTf:8J\ES+,a+:RR1BrAo8edEr^^-/?s4ri!FY8tCl8[ASpFLE@JkRfdeoc/DdrF&N
%hDIngQ\863`OKlCX3dd*@W$QMP'^WN<(s`[;iY$qeh$'-8;%h)0T-Tck"\!pq"-#P1jg6S7'1Yt:+.[_.$9dA3!NBG'qcZ,a^s7A
%C4@QWi>HN!@H9l\_,)TiZ#(h@'ZiVO7@Ou[BSR4M?5B:J<ksY*TL=]%$dqB*PP&7]!\#P?%QG'OW3eI0B(=j>AEB]83_jBr0V^>n
%8KP:6a&NQ_Y#Q9,'t,8s8.$4hDU?0EDH!p&;<tK4G(?BPnX<1.DoB#gDRkT^L"Qpt::h#:[a<*2Z>:Q_!dXU]9_@HaFKAd&<1mQ+
%3_7Eh<8YOmM6k%Y"Lu7TPRlYNT*NIu\%9bg7=7g\2"')B!1B/eVmU.q[XZDW2SFGi"CaUB>sCqXSBV9P'YB7TE':BU/r5q16d2&-
%";9:un+0r`C$Wu+FuVaaKj"kI'!)?Y]]X(,;u?E7V;*=ZGDuf<gh;J=ZUP7X?BlD2?+]YQ*LK"19!VG`>FZ=Q8R//QfC<k=%#UP(
%<>e1-&$[eKj(a>fo.:N2&t"oFE!$'7&S>Qq@d.64(8op;((R[h-:6D7i2B'%!lST7,/`OWF<T9kh9FT:@^Dr<!1^`<L\d3Z3^T)n
%bY/O-1Qr!f(4n/@_&J)R=Qi0%JWO2VZ3&.?QV%7#dNX%j'aS*JR'p#cW$);h*9!Ce6:./ra4(c59D`kpYc])l5;P6u,IfC7&fJ?%
%ET5\sW^i#ELqJaFH*4E*X)Uc@7##0s0YAcqR'ete&WS,@S"XE1*L#rZJMo$`,s9/q6h"?=1RVO(9+o,o8XM^Gm["4hF->$$7:V7-
%ku%1E5[8K6/&;P"Xda45Z,[Wlr^@_:!Dkb*+'E(ab>S4Inh;l:8^\OFA/fV/'J!D#3rk:lca5d.W-F,^q>ZO-:KN?*!,"7-7s!Gf
%@-=DSR)TOOF`M<;9f'#`fu2G2n@6;T+2Lcj(>:C7k2J6nbYq87?UVcCXU&`cNk0Cn^fEn6Ll10rP.1`?)lQ^O%rUmO5dG=+33&X-
%/EBP]Q:2(8qYsUX%gk<&T5bq@)HM"I_Q4@8kS\-RS:.%"`(Ke]NoB'YTr!Y[-9$IZTsL&u;GNUKdZ7>G0iL3U7>N[B<Zt92ON/[G
%_g;6c%.+q*R%t$W+Ju*LZKO(]L1;)U_Q=1pJiFuhQo=](K.)e*G@iS<k'Y55N$Hs`oUtb^fpr_"f@2At(t]O=U'E"6;fjKiVG5$*
%ge*D:9O#lS-K-+IE$RpqVs'V5L789kPK0enXWG`*8X0fX?]HKW^q'W#X:3^cDAa(#=0tA=#,EJ=\B2F:<4bq$V_^hY#cKRaCnTt'
%)/1rsOX1>#8o-4=G1EE(hcEs7&&-Z@&_9Wd9C!5Z7%9<Q[<c%5Xie4@F<%h<p>\gr47u0B<<`Oc]EQjZnF-`cSTZ^@<;0A%PNhL#
%cH/-DbqVuoXYSB/KN"PDE$CjZRN2;:+E:?>:^HmbTiB5W@_.l_UoRM_D$P,]22^&(R;6O2+=1*Q]^.Y7\X(h3mtk7fOOb=^:LoM0
%3KfV4PU0"(&e$N8UQ=31J,lMLm8NLGc;2,%!.)kJihl>ri'DA:2.oS?%lAptn$Q`,5g0<"me[qZ_9$q/pMqiV[#Ji5@IQ<V?k@oB
%ZN(;+>Ie?A?4t3q:?DR2LTdERq'(V=6&RS%aPdYBUXqc136R>slL=0piL\F!g:be!71@,[!@L@nX.IV^diP$Z+NYi:+-Pk$6)F'9
%e>B0[aD2(Lc>lKrCP(&Mf=pjUg.[p$5Cg>j?(P."3-@"^o43UWFfuBOYoh(TpcuD@E1*e@"L+9@frho779:=c+@^f7Ma?.1_r"me
%m'.fKra#`(nnX4@RUGkN2o>8"p#':SGf^$_m](BfeX*s9?UM>P.(Z-GaKPerRP5#/"D6Y3":01OG=H,aK=fM'Jpr4s2)2Zj<^FUn
%Qh^q2_5,O=@Uen\%mepS9aLgG;H9"]XAcN$(Nt(3e8FmE#S1IoKBnH@UgLbK[`UbkBf"-L)4JKW,K':Djk@YHm0b72l8&n+`Y+'7
%h^.b_RE;#@%IE,j+i%"KS[qmk@M?eu!Jo'.j2>hLI9BV(3L9Pu?':+EF/"S(]+u/inrO#,KiHTB&9IA/TT\)`\-4gg-;TA'rJ9MS
%(MmQhB+P]pmi;:9="IFsTDK>8bS(di*<It_H`$-iMMAo'R2Z`Na)rE1*&'8Wklk[jpF'3)G7StHCptIJbs*o.1p%S^lO?;q7"`2^
%nPDO#$qmeIc_b6V?@eiA_WM7"`<^$t]1lLb6c,cb6J9VA=(lNY;QLnX5YaG:Y%R]'=4dZ_-'B3%aNB`a8DLH&[9`TJS4`famO$O>
%dYufbDD"S)GK^@$pdj@A`M5e-''ffJ_AeDSYcDDB/mct6LR9K<5$Lh3-!<.$[[q_elK1[gjEN1IRR6ON<Kt/[$,h6^3jM2*?l+!M
%^Xf8"S)UbI_ICUeq;P(&WZWTXV^FLYMM^'O4k`mfeJ6>44\?6UojTd/<@_N58=K9-W=!n8f[FgiRE-dOc*P&4dffEVDHa\LN%;NT
%BQ4eX(l*Fb?oo?j&V,V2QA09[L`YRLP,(KW/+^,p5^FotUqJW/aSY3qEEFELh)n'$]db2!s02=uRcIa)X';T+:'$]Yg.UG*@m"*/
%_<n%r6GC[c5:i.l\G3UkoF;,+ed0J).%*pr*1@ksh5JP"VeUu.CjF!Q=ls>4M>J0`)hFo^8jYZ084\t1b<ntB>("@j9%_$T+r/'C
%=bO0;8QFMSn\j45TR/)L5tYIAAigh?NZhc<k_/7#<0"Ou+K?$^,`[Y^L*G\1QsB_k&b.1aJg?'7H%`0>P[&k'4X?W2lEPhA*/HEa
%f3,FJPgG1S`*l(5Ob3clq]=`fPoquBMpY]oTb:Gsk*-jBRm=&V7AU:'p_f85Cic&.h15pc]88djlmIo3At\t.,S4abKnMQ6fPV>Y
%"A`$kh_&8JV2Ai)+rc)&C=?HACf:W*$5m5kRe0n-0"#V5;.PILA=A[Sg<:F&+.^W)eI-"tFn?CZ5m<!\>#k)$KY8EZ8s1?s?;5b4
%geBND!uMBlq)iOe^jH5;/sTEOD"0<N2W9C:!s\o(IeR#hB'/)7MJ^Nl':(JT?f<kZ?7/2I/@2Rr1&a[o(>r/t&(cA?doLHs<Und7
%K"C=12)"K99!)Xl>"QZM<%7\_]$06#[drBWPXg7b#hc\*^0ASs?<;uj+>jp<BRs6QG:d]*8eZ0IT<*(\9dc+5L#5u)'dj67H<^u`
%G%RjNe"sQg$meL$FOG]<3[$loL1/:s`mL2&AM=5[:j.d7B@K;-"L8@b`L6r,,S(qt?HtB$`o\\*eO&b`BVYX0`pudBi2U7*ZH%/:
%JTa<54C0ji:mMgt'MOQlcRD#>"PK`raKP>;et4pBgkr(pXC>MP%BEDA0rDUR*F^.*h&tT?+</\-WI*;HWBQ6,3b*9YCiKnDI2f?W
%=ojk267ET`7:M?.'ou&t%r89AVK3;-NEo<g$b&q8FCfng\:r_!;[%8p`@#?`cmYX-QQ>>5?m:Y7HdL4W(:RS1+J/$4LR2Xr+^pfB
%ZdGdTb%QWq"+H&?.b,W%SP#,"K@K!^WfW,@.ts#F>3$QH`bh]3=`%8o#sAP@-t\eH6TBmEh)NV%&1S-_2.HIR\WDuYe/BroQKriI
%s!9,W8\i422E!__[=4$.!Wb-lQW\4u'+oZTIU7]='aNAhEeFq3GnLe,6[0!jr4S[IfYs_jW9thc^#U/PTHkA.L?1oh_&qP4?l=e\
%T8!Q]$:hW=;,\d$GUl$EaA#Oi+>UJ6bW/Z9N_.E.c./RHF?'r/aj04.FIZDDm;?qi?T[?$PIoNBbZ9u^EVZ]Va?fn^!CRGR?0G+H
%"lcD<a/Q=j:u"DNc`4+/1N1F+<,s0m5ihX=qPC?h%*u^7`>S??aN&O2Ld2\?bjD[Q,6Mr)Ob_Z\He%C]YJoWCA/3L25;V\b=Hluf
%Z!Qc<m\dKa+D/rTQfbir`VIrho/GR4017@/aok#iL1iP?/F2V)LSJ?5]=2;9L<WFYi.'0ON?86d3QbCgmYDE.ru^oAW;-uJ^=1+h
%ZDje=GNe.3*"7"BpSsk.09i/';6YUDRGDr#ii]70GjLu8`D6r9%`Ac+,EVud$iH\E8piVX!E)Rg>"2Z#aCR,]M`Wm;^?C*In)_Q"
%o8ta3q[Y^4!4?<=*2Qo__>6FWp@,2b\IY`8.3bB_R>(Tu7?SUlGmPn-k$hX[=P$nK?rKAe*-";]!#U(8&EH7d*uG"V<)0?K+<LMU
%?jMu(J;P05bAbI#^fJp9U?jJC\d+d#p=(b\m[/'6^&W3A@V0m2[ef>=cJuba0*?pLKIO)9]o.c!,<C[U<_d@bRuUFP2>:MnXG)?5
%'HGXX&2S`0Jm5FISW(&^B/-U?PshS*g.d@q[U)\r<SXLS=hH#i78]8LqM496<HV_>M&*t;^oAG_-K9SRoU8ST]qVl-cXu9^KZETC
%(R)dhNc65(XRO=D9]^.%A2gR#LWZ5)!Es]m(eROJ.=(\-9[266-XL5Rjo25eq>Y*rc$JD4Y'&]M"9&gZ'-R8caYaU`<u.>0fnUVV
%3G0;`fFV_rAT<KX%Ro)kIf3>`XEo5T?J1LRS*;nPaMmH0)HX'2=bV#+S/4$2^i_l'8RO4ae2BV%/0H-=cC:``!)f6&"LAB7r@n"7
%P"I6U2,7t>n])IMWs+1'j=RSG#g*2*5S\f!irVLR53=FAV:U"OKH)+=)`ZOU@8m;TDt+KcXWZ:FBak<LeVb$BSm\>WU*]oMJ5B<h
%nL$jAm#36qD@2e7R/7d77i5[;(@5%/Ii<^?.P@tmJH;/OfFl$5,kbmqJLXH+ZGl;\1BYW^A>#+p:?3TrE3Fj9\j4OVkRY>(;N)lA
%^(rV#lmE+0WJri#jjE5l5#p+:J;b(\?=H0-\/:`i(EHuj1H@)[UOh/s6GJkU2Gh#C^(QWp&5=\Jf9!gD$#.=;Y(mX'6RgdrN,-K:
%",!u-8&;8qH(^QmT.K0Ki8PnpKp<4;^rA81-rlq&`)R/:MF?DkD,8.>+HgsDd`gVm&FU&u(TlJIZQTbc7Rg-97N8[-jk8[FFgj&\
%c*2^0]Hj-t8jiZ_\D!=SM@+Y<J;h8T@#1Z6@G/J1)12a_4OY[HUm.2lE+SC;Y_U^1L(7d`gVae#U&dgcUXpXO.dL:P.I)Wfc5``7
%MZ6SN7tPQo*4JP>lNiZ3JMM2qiS?tI.k4p&XMHuXFs8U=3deIu4WBBp7%oCS`\HYDlLpo8;s;K(>6*@^U3@I]>OuCUd<Un*#?=4>
%hrI3Y_0e;_>mSAlM^2O=-:oJ-5KndNLf@pD&8aiQU(Pkld';Kc?qd?d"Kt/K>6m2U1^1to5Zu[Bb(q6X(ZrM`>e%R07bOR3:Jk)F
%A/_6\9%?^#6qu]70FcB*RQ<d;'1-F\b#FZ$!9sn\R^0ULF1s+bJap*5+<:q\^]qUsa>eQ:iiE6UQgf'*H?_:J%06)+9)D]tc',>j
%hG'Yba:3ZB6(nV+Je:?RPb>A*LjJCq%>+iiha,("?l?j1VSH?[:h)UtS?$3h3[g>o_+WuL:5o$OQpWpq`_]eM`%QZ2_!kPTYfkOP
%4.huC+u-22Vg+sW%)YQ8+gj_/X^q#]r-Udl4S)t<`;#85&C<u41'po/[2e4%)"umt-$(Cl6jg4Ik[&mHE#C>hKQUdl0"EVC6T3UA
%PpOTV`!PtE_pAl$LgqK)jerH]e1g]/P%6_nLe%Mh*nf(:okE>DTc[2]/8#`=:\9D*7>U$RM.-><%"X"&`X1\S#6F--4pJ9d-j(5N
%j/Hp<]GEm"!A\1k+9eCj$8>_=1<;.H#'OC=V`fqK?r9_TO<?V7f4`!=c#03D8#8<dO?pF3PY;cK^d@E*0f7nc63d]8gWK=@BR<3B
%/&eFk<)Za@iC"n,6VMiTjO(OIGGJ2s/#JM+qrnuUP[\K[cu1goRpnoR-%dYL.!frc;CNTPigo"k"!jC-7^WeJ&kn#k%]s,[<PI`.
%.ns[_&U4[--Dfdpa,+M[R##>DN*%e8ZZD;EeZpl7=ffE"@b_KA]q`;4>cis=TV&%<!H;f78nhfM7"PTH3GT6`Z`s1k#"Pjaq]M-M
%V0(W\E'Rfs6C\cWPH>If.H&De4r,lL3OAE[=c:5BpP9SR9508k*n(5m)BJSsZ!:)$J-Z8i_0-lTi@o2t8L6"f,`2Xg`c,jl@!3=8
%gX6L7l)X%=g+(tK?l5rCZ6KpE\PZBAQD,(bWC6n$-EUc>\@&QRQu@g:'qkT%B1FAo;DKKKC.!5od$Xm>X(Mi5e2/n"dWKNF9%GN:
%T#=EFjUTM(jCfE#"3?\]K$l@S80%btM#MBF#fH`^PU,_@(o!;;UHn^>.8L2.iN?haA9&Ls=ZAaT'R#C;"mD/Y4<Y-RO'_D3@d3DT
%#f)'FE<NaCN_rqNEf-AZMT0%.LN"reD$UO^".C52g]f7G681neYT5aWr_XIl6X@EX:j*kS2IR8S3!Z#tb4Ne&(P1\Z;2D?-(^2$u
%iG4JTGSI^A'20rEcQ^jf8#"DYXd$Fn367+8*IG^:WgZMbX&8!aZnT^ZB*At-7R4N(-J9f)StT>]I0ZJY(lQVI3caF:L.E`]6hN-q
%]pmjZnO[1".YdVuLgVV!?-#)/R_Kf7\YMton]\iG#$I,sB+BZ;Vr6Z=EfgbY'/4K7aWmoijoF76]ebm5#fqgn3C,EUjOE0\O96VH
%WACD2k+M.)967Jp6S9.*N\ZJP!po!R:_7[jOD$D$R,d?\jl2rL&%^'o=C.pO?BsC_Y$W<W"hu&$9k\bdpi7c5>Wf\E*PG_#%4QOI
%?mgb^QNrOZSRRq0.OT,/[Z1CMN*HkNO,0_j!A4UB-j]WMi:>g&Oql_iTKo$Te=m&3#7d5(gi>(n6l[T7Q:H4`8)/-@iC3A@0rAFh
%6QkP6g3GF3+]+Pi65;oYJdQ0OUlM3C?SKYX]#'^IaDriN(J@7LLU)6O$XPjmQDS?W8?9.NPsZW!,pQORn5U;+21[6<N7Opuj^?[1
%a`aJ#:`_D[4*69boLfGDEQSr)r$tHd.NI%uJs8V7,L95'q"OnI0U=d8LiRa[%4t_L_sjp,$qu3u->SBh7moU6R%+5B9;\?@P9\F1
%URWGT&eHOB?O+o36oo?X1H7Baq)V,U^gP\4"@$=J-I6LR;.T6p&#%TLJ]UbnL]esZEQLMm.#dAKZ2:2T&GQO)P/HaIn(b`*WhAS^
%,WTt,LJSQ(.i4kM!g8ng%V!7!#9XK&OVNlrk(+i7->;JJ:a'WY,KF=Vcaa[%8B0p;KJbbUHT,3&8&<9O8-gAr1Di,KaJCWm,I](H
%>D\.>4iMBj+2K-k!X6K-#uk5?D-F0b5n?IVFMT.+PmL`h'.EFoV=#(T*"&]B4$b(2E[GJORimh,)0%_U0,uC)^lTGbcZ$ba"H"2?
%Lu9LKjB1XmQ18?pO.?95=%:qG*-*J<,r"DAL_<k"<tKCs9&R;aJm=Nq73Jd&U?k>LEhK-?<q+/G7$9P:*]7mR:)$fFc0U1ri+*(%
%n8Tk(NA.LJC0`WB4!r>7TJ3-.8W^tc,ZGZc*etGAN;]7(N[HHtV6K!bMIa`2j-jF@5ol"+<6D0"J7!n/.fgXqr"?$Q0k-/51&M@=
%G[u&*KcC>Li)Oq[;"+Tb8hgF.9/Thf)oiLabbcE>`mH)A3<^0l[>E_KJi+%8IQUsNXE!_t@GZT$NC1dU?5YAs9!6_Od!1Wt2ZXg-
%CkbiXEC^Cq*,+&7`ka#8X@1Mr2@&.^<4mfK`ds3TjBdg>fGg^#0Z5q3UD)H>N*XFc+LH_/!99^jia)r*3;>9Y.uN<)6+B:4nd2n;
%90H:46<s;j;f(t]fs0:J3AMUc"3`Ej+H&T.:a&=\rY<dkaKNariZJRN&"ULn$^-ICMPC^4E=*^e\.pCP"B-:^-3WrU89+Dg<#Gif
%*,@R'\,n&grYI[\6H'A88tJ_0':4$_;`&L`pgEn:!>>th/LcoD3!:t!AV)0KfaOOXi@q8D=<+-t^u4,k76E>WRY$=t!VBpA&-i9Q
%'T<U_&5NlUV].uX@(L$A(BEu#)"GKi)-#S4UKBV^4Zl1@6(3C\8#]*-f\lg+SeqGINKK@(+\n-:0rG3665_a&F@pQl0lAtF03?k\
%%N>nQMQVSd!tY]h,RA",%.#j@5_]A@hG4P0#D-Nc$T,-jDk\VlUP0qOMdm08S4[21J&)Hs+=BLA(nng_@>mPiV!oLo^]G2kXJ!n#
%38m0_FTa$2]Q&Vnb:)=UhVni43.qJY?Edgj#EDkeLi>$*nIpRp0B"R9&.TFi.mH6(&<8&P3?k3XK0./_Z1L%C^7e_i$4[Ofj2\PT
%cbXnIM]g+!?rBUa=N8/7E3_"W>UqEd!"(\7hLPA$RU@UQhhe@X:I2f145Y^):fDN/_R"\#-\Z>9%$9DGj2I#aSg9)RnA#M1%B"1'
%S>"]b^^^1Z'F`d$)g[AFD?r2+6\-0jIQJ*#LgbH1"rs4+9''Lrn:7?^.B]9U56H1p-Q(bFNSY@g:CuH=ZXjjP]Wsn;$34Dc*@^d@
%VuUu0Dtk(-0.*m9j2cD_rl/OY+%%Z88eJliaPUeF<8d45H1`3P>6ttqDl!g+G@b9>@!SM)dcO;t@7I]tC,6X((%JmL#/G.'$Jr8@
%jB$p0Q=Dp@qlUbO&/G?@%E]GU`!P#(6+\LsHM7DCk_$ak#j[uL*.mKYhZgu4I9FD_2Md6Ii@,3/r<W=MN'5F!hgjiSO73;>)oRuZ
%^]5(U`^h&+p$DlIHiisM3]fAo"R3OmN(\_"E/2fIi"mn'hiMni"Ou0ML]eO"(79$]W@(N4$-Y>!:o*djbdTlWIL3LQ=J\&W.)5uI
%gEYu3"nE7pJb?;gD/&3+?mtsfinH1sK-G\i8*Llun.!U#ih&\fD[:-pkVIeap5U0SK'j(el4iYHJpTR.6n$^EN[mOKZo8Om\=Ogi
%4*F@+YW%4G,`-][#iiuaZ3dTkaH@5<b+LSY2d^74Qj8J0];[?YT\`9U9Q,a>^_CS#oYu#_WNBf%+@Zc>R3aMPk<pj)oS+-[@S?d8
%]iZ*TcPtjh0Rm?c]O:j]7+9UI&Zib"%d*./1Cq=mf!)e!arB@(OF[_$2e7[d7(bd,"#(B`GCnn8qM?;m8amJu.olri,k"K>,k"jg
%;D1;lCP$dIeU]G0)W:t_:%afEa77.\5>58q+E*3W`&rn`O>ks#]OVB1%1NV);h2Mhhl15B#iptE9J@#;DE@.jk00(r0HW6a'd.ES
%DM5!`+&#YcKlOcqpVL=cB#):0'O7[uh@Rlp"Numc`u%)'.7^i,GU#T\B!)E"2o^QGj%+.%&KiMY1AMK3$Y4j2AfPaE.!E7#?C56P
%q^II_7b/]b0uJ6G9MML__g#Z)bLkt[4s+;H@(NARG[o5T@c&r"2oH+:8E9on)h[hjS!d]t/KucV)?n$'_Z;%piX(Q&#&Cj+;7qI1
%?kJ:U9it>fY+U#DbN6&E`>dg5aGD>ohAH'IQL5'<2in@3;dd6m<Y")d)9*U%GigA5hY9Z9Wt?=iUk""_EP-jS`r7EI2bXXb[KXYi
%im0>b:k?86JdPe_,E=^K?^>IrecIO`OcPZV]YVaAJ?pJ^2ji^R>V%kk2,_f(_K\Fb7B6/DTQo':RGA;2NNI6f(uEV8[4;O><RAej
%^`1ODBP&"gDjUh8X%b=]+UJK/Kg9labL!,<i/Qs@N-qc.hI(Q()OLrk%7*"=jN[JU(o?8lS7[QFL'mC:_^t$-5TkSV#4I;m"ig<)
%f\KpLN9"2/KaFlA(jmLJh,k\h:g-BMDOe.FD[JMD$s*F-k\eHC:=1YjaPGBF4rcpQJk_;FE>c2(Mo@&Yd8@N,l5==Um2F=\R@X_k
%)iMcn\;rt">7@%+PbuI.KER!00Y?S7M<(W"R,%nRkIE8uf![qJ$:[H.4;Ip`5b:3Vlio6,Kem6u&tiEh5^"A<^qMm@2j,m?9-Ck:
%)mDAS5^!6`MP<ig]>:k6P*/.TA,6C]*!g(69SjpQ8'#Sl)8X+)_<cn-$j&m3b\gZ2auCD-]9/UDP)9Yg2KODOJ9GE(#7;Ibcu)OP
%;7pf['/F2s$"u7qW2etcg5SD+'N2oCh,kg-iVs%g)kJ\i,ak<K;j].aX.XWG_oV&9>_ntW8Q4Pb'Rm"',m/@,4KdUc"!KApG),Gh
%.Kut1Cc;t\j[NXiO[:A57bhl<nI[gm(U-o]]G'(<1gD3=S)AIb>(n+NK%ga!5cuNTm7%E`0T=*/7)g>o7de:A.%uuh]7E3N3$u`&
%=PX1V.g3DP'F2YKB'?5LEUGo/2jJkd>]l8dQorOnK%u?3No4_tjDGAjB>0#6h&)h\=+l.:O[=8#"R\`746IfU"Z(kr.W.1o-\4I?
%\D7kkmjOTi%?KFDjI-+6^*(i$;qu8T*sp#\J\,@D-l>j4]?)V@.Bu6r',X4fhma"3FPu=XJ@ip&Or3RSJ\/&8ULDqq1:2;`EP'UX
%;[)N`IqbB%8TTL<NPZn8g-stS`tq[!-c"Q25YuX,PWo5oM%X80[i=;o/3B=_DDtabWAY"AG/JkuMl>WYgF+qD8).uU)oK`>_<o6o
%O;-<b\D8S0@o7jbDE!_U<#",*U6sSQ]@XHF6)+G"Ca>oEJ\/`58_Je!ghdWU"H+df1^LULLo304mRD68bbV&\#)1P7E&UTAm!]#k
%%HLJ*:kN_\%%!V`i,59^dqo6UL+fC'@fkEp5#O.b0Q&hZ'Eo\c_fheJ'N;@A[MqIQOH0_m2t0'%_fb$X0K>5JR&PV371!L`gRWql
%.?1Rf5W*BR_RBaU"Bra:h'qtmp9#&Sp@ftGG7rIPbn=Ml9`_j>=%ZQ,DLefECgBQc(mJHi,CVSn=HP,/$FOEe'3DDU,tu+c4-dXn
%$buUs_%#m9Peo=fFm$j!+52[hjqXh!I\4Dt/!3*.F5f_o!U0e6%Mop[Li*>HB:M]gT7Vn=ogqI5"p3=(*!*Y0F6$G7J8XQkF$Kl#
%],3a.'6rpre^FYl)c1LP<[<<="6KslJr\L=LrLFUIY[V7,bPm7Oh%f0r5oV=)i/_j"d^/6J[6';;#gf36140>gtD>85P1'>_@68L
%"dBr3(hPbDjA%84-mUb(=:pNt+M"i6iW5/\+R9SV>QD<u'MoQ-D?+CiN/%]Z2c:O5*('nfF'&rT^pk>7b\@eBmNe5%6ZIb7QO:2V
%2MP\':Oor01_jg(0b--%iQ2GB0\inD=O1u=_Mo;IC[E8"8Q)5cK,Y#J)+P>GDB'EG9gR]lV+,>F!8Kh)_1'>[(4\Z(ho;b?O?<=4
%fM;b0ee68[]q*-!,s^5-*@Ak^!*)U9c4%@V\QFO%Bc!b53J$!=M*p^==X?d>6+8!W1$0qG2StAE!Yk3i+DKho\6UB0AHKAI"QN\d
%[iqjU4bSEr%CkEmCeWcqX'pXUTP]><NUClmgXb70=PKCh:tpM],A!f.JZZ0HAqI?p"b0-P[Qu9@ObH\"0RfY[(Nu0_+Hm9\7Ql\F
%M?D'\C01P0h.o,?3#86:$-Y;(Z=CsnWp9Y%CA&=.D0T^XoamMX)AotM:prYE_P8gdfl!!AL_^0I`e!(m$ck4m+;BCFm^Y+rE8oXV
%A/d67$KICM;+W;"g*\#t\>tu9_B@TX4O@F`+PTF1XPa\$)[hAB/BG=21*T`2,`qD9alu3iWXfEANTN`!':XMg,8gS<"D""GP!4(\
%D)=1Lh2`.Y)sq&Nfd%]pYg*(d%'g=UR!<!c(u)8!P^+\pgKd)\N,?/kQ0V"`/$S'4@`?th$I0coGr1BI4#N'S[Z+a4",1,l).FQV
%CQYeo+LY^U'O`@#gMdQ-(/#dY5pE+d\-^)sQ[^lm!mW<2rW9?!YTALGA0#-++>^qo(3i;=T0R2p"XDeL#hoWOJ\&B7Cg2QWB@Ht!
%7Y"$<A31HXD)f?G#UKc2(g]`^_Mk].gJ"$i'815DeO/g_J_5^Q21iC%I.U$"S>Q)8&0E:=!Dm>-&_sX@Msl`P4_KALNV4UXjoV`G
%p*1!o&9r&f`)UnrU.4u)L8A?dQr,L*gA%4<O*H?0-BkC%Tht`Z0k>'!I-k)?#CQU)L28%j<!g9^aeV3Q]Ja@<3J,ZHkh8ksLO>rn
%&j['WHE.0P4*)b0"BZV!a>F-&4%kmK^hRMm73efjW('_nT$8ii^kN"k)\<DIR@QTXB<EtdLtXj^$983'"!AQ:J-J,QW!H?^2&tGr
%)#@[nMupTq-td);(t#\k&e4@\"ALt'Z!K,O2M.liVn,60-`uXN8D;G:!2H+'7ls#a7P#7nf#D))$s-sB$VV@jB`pfm&fj=YJgf!U
%-kP+j01;Rn+D;":fp_tT,K<ub0LYPU!r;t=AV&/;R:;nfnC\B<7<u_.Sdg8LR/APofg.qJ-J6u_SqO$n!hG>$h0>G<p]7O==Fn_O
%r+&.)@+=O6TKrXI%;HVifhN*bJP$efS:D,i<bRp8cteHU,3Y@*/j"+QM5"QO0#'Mr%,j+B:t]#k8W^5TiBYYSJ[-Hk"eD.sS8=Pq
%<M<lhlmS.L"XP*#bc'+C#a-23SO,TI5mOVh_Qqp:^keqa&L&0#)RPD.68lJOR3Amk2DoLjh@q(O7"-]F/GRjO4?VR(Nt!78"X-\H
%FR1JlSq(>&.-26_)nRF,"<OhQ+\3NHGQf!)n1`7O+ir:ARH]E%HM"P_3$Z8YY3^[8=DT,$f6(23FKcmHL;78V%n':"+YX@"NtY@V
%P,0'$K47ou3>G6S.[Kf@&fY(<PV8WX$Qr7T&uU_hPNODo*>0=5B_)d+Cl?ra*%f6pAmd`g#pqQl/#"9p-8sk%+jPmO@U#sO1Vq!N
%H=TigTF``AJ7;a+$%PrNC]kZm]b=4YoR@)MG+o?8#QYOS$7IfiM^WNM-oO,Wn[T<8lubn+gC<$r/2i;(L?enb<:!d#U-^T>!GDK!
%0+0$`8/RXIZ?p[-3/#Xs-%OW5E1D-*GhDLGoTDr,YVC9fXgNt>>oD'o0WrN8)<(u=2?I?49K/5k!5XN-c@Ud6Gjn0^Ct'q$l"J_J
%dQqi'J7535<RP\FU,<ih#p,VQY]4VGF=_5Bc3%/!S:6W+Q%F^L'LE;SP1APOiFW51`Y92g1sB@[3:i)o9,S.B.2+COpa"h:#T,I)
%;_67f@+ZTO"\R>`_6AJaQ(J3g)^l9_[SSYo'\OA`H:S)AJIYO-"Uc7l/uZ-46"+72gpdY+2NA4a+@BRA/MSJHfU2Yi/9uoc7V^jj
%)?b!`']_^lKoPF1;fF'[fI2aemPS]%QI=M&#ob9,eM)Qk7QhZj@0m^X`LK1hTuo2!?ms!r5[gEsm6^)7fUrXOiep'1PFEEtPDrDk
%BS\se'7n"ic&0Ym0Gl^"d04u:#9uIO1/O,BK4,uA?)`L/7Q]r>EGYc3NA3)"HXeaG,^>'X:/i2d&gI&UKamHKh?8SML56Qodj7iC
%d"W<Q!elWdQ=rGo-uAO^ib/MS)J".Y@Ul`'W,Pe"[Y*b&YZVeL)g"h972$q_Zt9sU0I("Y9M11m5[f9[K'[7d-u?b[Wie]tA*bCF
%8;=uN$>-#,TWfjd2#@c:9jhFdG+>A4:?9kcJ\jmG]HEtN9J*QO,mb8DC8$=R5!i\AUXJoIKoIl2":Kt$#.k^>Ll>0_5is^G-u?8_
%dGPiK)_#H1RQt9`R@k<5$6.aIMD,`&G&A2F\O0f#@RO$OJi*m4L4sE+U:3c%'/]',b])5('kFN\P\W*A;/j>WLCK\!)$mXD'>7)t
%YQr;VLY^&RLQ*c,Kb?'Z[N+0R)Ra3N'+0^$ZiH%u&0Pf]@r_m?*q>*:b+^+8!UsTnRRK3gk_c0PYRq,0_XMh@(gAf%T20F1Ymm_W
%'-M+KZ%b<V!ea:V&h[HUFpG6u's82+JZo_QeY!kMJ[!PtKRapAKT11QU(,+?7=di?6,Egm6H?5O@ABY-!D4\0fP"nacj#'<7LHhJ
%"GMg<MLl\=Y]1K+O"O8]k^o^Qf*m?BjoihDSNpU.KNMV=BM/%#kA]Pb3i&T3:9pEW@:SY\P6r/J(7[X;$PkXh?a'\2":H0iLuYX?
%fLWj'&hIjp@!Lc9$QFH2#U7+%7O&<W8J`po[*tDT!elUHYiD/pCi!T4,DF!(Y6BJ_N)8/t/5Y!or7+b.'K3*unS&.6)p!-`":?(r
%'\Xj0f[pBq[O+i'8B*4p-u;4//@K%s@gjWJAJrtr0XfFa[^W1/3Y@iY0Pp@e3>S_Y(cIi&J`S<t2Wco-pnV;&K>`>^^/H_%<4hK^
%XV*?4po$fP+CTIDK7.1Y,Hb(-LN6)sp]1-pY.TUL.1Wf,Fg_[3_1q?s$;ub5S[cbr'EgM&fgRX"'3h7I!kU/3`=r?bYgH<FX?!Q#
%j'NT_JeRqFJl]VU@t\!df[kiKBr9P7O>hq,>E!uik9W0?^4lV(["_A<Y6B_aOfoql%%3Z:8NTZVT&<oWOcVI=p)6%hVKC1#oO1b7
%JpH`C?Uu?DJP`m:/g5muONrUT%R5_Nih6;_i&)3/_5qSr@hg#1`4La<%E.TJ\8),<;RgKq"i;X#f+@ET-3qAu`e\7=63QQln>TH-
%Y'h"`P@:W-<,`V;C\2G2Z3#%USoJe00uc*34^_E0_792tGqsr\"sSA>"l\0.W1kD>K/X5)Gu"FC+oS=M%W;e_%FPUY-pa"*eh<YG
%>DL@?l@Nl47`4LQZuqO.e-WE<G`9LiCCO,r#cT2Uekl/C7l`lC:95$UW&8r4&ZQ#`)EL@"hZV@G67j[>_\:H),i?/d!NdMq&.d\%
%cPhZ\igCTBCC%8_pJTA>_&&-kklf3KPr(ig31rQMJ@lL7C\S'k&5?Q66"sjRJlnc\$("UFXPmYkk@T<S%0deHn\?F0^p/]I?k)XW
%NXH/;!,IrTJS$]e2$VGrZJ2/M$c>=]iBqgKS29:A]G^ki!kFTCpPPX[Kj&T^C7o$JV]]%k:k/OI-c%'ui)X?%*)F-NlD-S,Ro-6"
%+;IRHX!-U>T0r^^"q5(]:DD%<aH/_%aD/Yp!R6<1X/!I\$",V%^go:@Ws1%ci!WdI!84$q:XH-#gT87n]7,+J@O,(++OVDiX[#m]
%)grI")I+V&mh;4+J-j(c-SX)B6\M<beR".m1.X95U(F1N@oO[r*(H'M(tFN7,S8KkTP'BmJj@+jQ3fmcQ]_=M:^qr(a9r-C>4L8n
%nC3Ot7u<S&KETQh_'3i5Qh^,HYc41H%14pL\:l.dULK7?:f/UMeDMjs-UVjPJUf$X#aX19XjdY,Fcun5Ld48*K:FU7UlNO2<["Fe
%Ele?E)BKC\5RS\lS8\%%:@P2,jSG:ko.,B[P!b\cW52YkL@kikF[]rE>ppP4i&^@b7@bkRFp3c7]r&3!N^;M-bHJ>S;00tJ'Sj8m
%%`VImdO9Dq/ej#N+S>4S#W6"q@''jRTJ!;N$3IV;jB(iK3G(qCVm@)-@.\.\l#p"tksX2M*IO<..M[:K>n1Yse*(J-r(OWUr+%8E
%1n5*"WI#Y0)RA<5MaCgLiGc+-6^J!;,&'CbFP='?-(*.VU]c7=`_:j$g/c.+aS8DmH]%A.kX1Kub4Ekqqo'ka8%<7C<u87.LpdNB
%_57\(%g9?C2GJ`SflsZ70[EWjXaj,U5cPER`b/_qX#.ag$(t,F6p[;K(YIW[;?3edn5KY"l+k"r"e-9D35q>HNoAD6:t&g5+?3+c
%RKfu-W\Vgado#[D-TKQT)1lmf^e=hG#WZ60AJtiB>BKNd3];RG`\]Z(0qq;`VSQOf"c@Wi:6]!n[aRV-.rnSnNeW/9ia,T/l!bOQ
%Ll$rG)dN]8Y*KJ/;f$0@@\/B`933Re,1+a<Z\u@M'4g?B\[&"291(`Yf`nu)quM4t'3OKs\<+/78f,be;7("ep-<GJ$)hrXkR446
%c9G<&BdHFqV1kq*dbqdY>,$T^%=uX"8PeiO+eY2R6qf1u;.Bo,])OgC8IJP'U_*sGQ4>43"eB4V,Rk@:61C`0TurKBg&sna#Z?4n
%OCY1k]V%f.$)/'RkT&9H3l-m^KJ+gl9G#W@W]1991u';Z86-/`&ihO8+Jb.X;b)p=A%@RL!7F<oZ5>g;E)AU2O2h%f.B^HV""#?T
%bo&Y_6;,_hal(PX6],Y>_2_QD14bHToLj;H0lhAE[-B)Z1h:B!OkHgmKN.5;@&&;-3&]B4e7bX=ha+%-F2]S?1k9Qj4PKuo\rQG=
%J\rWp2hE50?o02Q]"!>.%>\\26PHtCLb58&'h4,$e[9i0/@mOrX[#=-9q7B2)(?I.'U,-j712Mni^C\W0XXtiU8t17j=*bZgd+UT
%'U7f2WB^Lt4a,=0U5Sf%"X:O>HVECkKf_uuTcnZI+K-/")UR2G0bs@A#6o+:TL2(g!b-ch'tidRJ;2(JqHR*`TtuG:E39TX%DO-T
%-K@F*,Lloe=D72_'i(SQ?qS<:?igZE:,^&:S7"[]83)*U#n;2=if4?oZk=^ad%/=`d##$&'U'B`A#m^M!X]D0%B+M,X#6!kQ)sAO
%d%O>SlP($On@9_r-MlafDfVg%6A%Vdf^.=?_4['E(oMo2TY*]G</C8Y#UhB%i1L)b(I;X:%2r'5W)NbL6"^3F+2FN_LNk6`1hq<h
%Ft@<[Q1]S0$6$lCCHE09BZ>o4NOj2R.mVISB-UZ@XEi_<0nk/_![>$J:nRie$OaNQ$8b)T<8U!7=!aW*pF^g['En9'Z(5,!Ir>;d
%q;;+V5@6Y<SraM7nEd3FlYkKBn(Lkc4_"8OjcAe5L;/-6d9!O@Dh\2ajS&TG9C;&+J%r]]]37C*Uea04MpFWea=P(*q;[P(n\8!n
%BX@K[p='%"g<Y\]pi>o^s'lhjgP<NCp>_2Tq#p2$$i[mkTZ!'Dl^!C*X$f=?F\X;+halgh?h:51DZ><)!Dq/P6tJCT!OO,.C!R@N
%$4&hT?T6d@IV:Z)+U'Gj&FE5&n^'GWeMThM7h&?<dD:`46rZAi&]2@&4.f7OAIarIM;Dd#b)Jd#mbC0HcNeXZgGrK>&"n@K"n_lP
%WJZ2rj<V<73g^0B,8Ei@d%UU2'\kK\O4)J@Q@;Tj.mW+>--2]Pi313EFr<qp%!s1mK*N*I(rJ[I>(Gc\d1nu2+F478+q5kWZ!7MO
%gLt9iNVPT.K/P=RRYlK&G)8<Tn:5?qZ`Y-1,b)r'Oh^s@-$0CO*:62Rks.jde-uIE.jST>!qj@t0[h7@duo\tLdd+e&!0aV6q8^^
%d;:s96I1Z22\EA'0aVi2(?5O!3kpi+/0Gl$8%_O"ce8J>J+N/1kl$SGW+3Vm6HN/-'fQ]g&X8/OU":F=`+T'U8AD=_fR"Y_TZ_U%
%G'i\"[@:DAjmHLl57r=+"[jl[`j)'C_iA,nU:Y$M%N?CXOm*^AG,k0Kpa00GA_8F&'%-3:?gE!mTF.1sa&=-RiN6IEQ\HB0X@cEJ
%paX2nFJ@I[V72bd?Z+Zk<:7Qd;H\O&k,IRL=rH$RlE&lV+G`j<318]X$^rWe'@^@b`jR0e`7mUgL*$2r.Y^G+J629?#=odP8Vq/d
%E==2sQQj$nE[/qqPY5#<0H(rU4%e_L,_mT2j%(iN0itED#6V7UD'jr88&*^ONI<Kp\?Z.r^al*?/+b1TdTRrc$Lnt3n\N.Sq4P-:
%Uh^_0;5)"fau^>!#+EsX#>()6!IIB3'uF05Nbod0b*VCtS%L!7%g7raCAV3%E5n:_U_=--]5?$]="qcd(e?[7F&dMTNY8ts2Pb/B
%[2\QrIANR]S2(7U0pD4?*MD9p??lX!jJgM4Z+S.p+L0BsqWV@<5W\fTbl,'b\uTkFCm-pr6qi0_'>cG/?m;?&FNNZ5HH7W^^ba-g
%"lY>`,^=WcM!5,\524NX*i^_G"otpdDJc\r<g+(rB$n)e%Y)@%F<u#>JdW[b>^7UYFeX<d^P(?rLIa,)W]A7-0Z&Kh!$,J-(f#f;
%2R^]+X*o5S,9!oZB"A&33!!<ZUdPWjTc:pXmR4PO?dc8$%LIaa1YjGC3Fs_ZBGVW.2@d@l;+.\t_o^^-V;B9l@)49Z`*ekt6O4)6
%)inPS)+p`BXjWNG2$?!Q+VlH=Xpf1.'CnaT$L:YTJU,N=!TViPO[O3_gQk5GLFSA,69CHP7-/58,Nsc<A8f@MA^^l#.3a@s8%o+_
%&p-Yu2'g"*[[@^sJk<2hHCM(Q08%GF)cr/k%5cp$K_&X:MDarPi7"79H5R_QgWF!ea?sVMMnEHaWk>eQi[D@68PBPamdA)54<=1$
%8R_OnW=I8(qFA&DW'$FM]6:c^T91ehRX+W:fK5?O<i.q@KkXr%'bQ"F#TkIh@rZCt0GDc"oT;S]!bj$0H@2j3.T;HqqjIc(R\JSj
%VEd]4W;!b-q*J>S_g$ZHeT2-77%Kps*O>'KE'MA<e[pUfXrqr7j?>\R-Y[g"XBWct8RppU-Vh[S_aCX1Q-CF;nk/.9Y)b(Y&0g%^
%f/l(!31bp:,#KP0]k*L<\4TO0&u-2`TmqB"=Q=[@iYAY>!:`\u1fQ!r/pJt)kc;cNpfoONkCt=!?-qM]#V.@gIRdOP?\<jOM8Aa0
%r,kFHB4Z"T.WK#8j#^FEr'CEZhpH0G^MVNc.p/ms`JB%E.JJaV&Fc]$,$0mOX3Yg9C@_;HURo,<$n&shUW\HS#N&<Acmkf[aNP0Y
%6MYSfOHl2"(?-a_=IWlR;2$',<Q_KpKrg5AcL@q#)lQ*0m,`;QgJ['9N^nHWjI+sWJ]!ZXMM:4f2`<-KR\3:fKFr=[QMEhTJYehN
%M1b#G/ZdP.MN]DsLnlYEr\>)?K-MtS'eoo#pV#\.X9oZ'5-m@Xg%i,4Gi]Eki4;NS3CsIS,1/bnc-Sggp"$1\#pjQmSL]6-clNa+
%#`1QsJT%3^b`cpFUbO4>+u/m9`6?(<KO%)4N1kR^_30IL+QLSMMJ--r/Soc$@S(,J_ob`E.NL3sOY.HP^jG#q&J:XGiu[s^8)/Pr
%Hha$[Ta,4uT:h2%<86$'Dcd@ZUf_#UNuZtJfP7ip>'eHi[dp\Y$YZ;OCQo(MZM)"dPsZt51/KnIflSR=!sd%6WboN^RKU2U8Er`3
%-KCW;59dL8PmH?mKRj0D:fp!S@_m[N>K?$'JNs>^ioaEO;%=+>5q6a$Y&u]KdTl(-).R<)IbkQE-s=eYbXSU=<8]?2e=g`B%42*M
%++?bO;`58j#Y\GE!ZeKo:3mJBer^9+(T2#k>)-7VW]^k^PECmaHpUg*!t\)UM.,U-3TZAlehT[*hOs5V^1EFAd\I+rS?8/fi7g_4
%7jb<EQ)Yd)7ljZgWXa6m_*b\\;!kJJ9aHq'$;M+".WR]-gIAusTVndT-IrXEbtH^D)V5cJq@+CM@<^VE9q4rZ"Y1dc/1^u9qSk$J
%Yp$@d_I:'V;onP@L>+8:N.pXCU.?YgCmXcl<TW%%kB@+#&6493_R`+n#C:4mj6/V/.7Q`9U\"BlJIOKZ5f=iX](?.U@uO+B!/a:F
%o81!b;pTP8:*,*TGMP/A@jB;gcX<OOHMY49U^%LO4M<e(KtQ+l@<Pq5AC22%W6Bb>TXhX17>^A3;-V;lF(-j:4<d4K&W:>K79Jm0
%$;Z@7&HGY[<oGWq.b7T5<NUpN4.Cuf^=-l[p,R;g66X9/)@q2DEZ%jSR$&q)dud='VBUno;(MC60j/O>la,JoQTDA%3mktYlD:?F
%.nJAY<dWs-ZW2VgL`mr3]3Sj3::Kj??]cH83>&1PLkmRT-iOI/bpbaYTZ7n;DCTNK'%q\q!Oa[52YMNm?Q.JE$l1dIe</%R:<]mN
%ntf4F%Ku>Q$RRnP+Zg2noW2C,G]Z5G9@<<I#'s;lCb@-c,ch/&8rkdLpQ:imU):k["S>T^5,$teUn75o2-"s_8[Yp]#5ep?dpW?)
%?c^Gm1>ooQ.@k;oJLnT)N)fXbEG/`H@MU-%NK,$Z88#7rTH&8%"r@.=#q&.5[BnoQHOh8]*a9n\!kW$m3nH:E3/_d.ipXjr-olj?
%Mo7e"#_5^-<u#5V8\0IDq&gnuJk%+2Z24tNlZY\`:mSF$e>\b<nf9lFR3_c1Tjqa\dudu>0s^U0e)S'FB4Vk/O?;=&fN0Q"li_TZ
%M<R:hW=^Y]EA9-ZD9[I$<8FPonju"9b5ktJ-5M_3f>fRO9(@>?_$pSB\?"hE"KmF2O-U`o(Hr.&a,CA^M>"$:hF'[9'"phkd8hPg
%a3[o6%Xq=Z+2/B!:T>MCB=B)-K\XXB?;LpGX[^:$/BTT`j#W=>,mjZ^F4CtVDtTUO^TsMiq#rMXbH`L9(a6'+6J!;hQRhZ#"SfW-
%H76pUnMN`Z"N_:]F<XAoLmu3K1")JXA[-G%0hGl@+ubHHLBj.tL`&qr;0Xt)33KSV3t2b'5''gOJ;=EhH\lG.Dua1/'t+HW%r)bR
%j;(u>JXX]S'Wohsc\aLp,'0Nh^!Pl`D4-R>'Y4))PKfZl<uHN+7&+Q7?Go1'Z[!,7#e=/iR)KStfdMO89>*<;]@@%Wf-T3!lc8fi
%LZi[I)m'W9QNE$ZUr;U==8>JQg%p7P6kOk?KQdAV'2Pt?Y<B*^Lr:d&1C:b\@lP?LWp9nW.Ftt#eQ_\E'%'kDMdf)3)W&9$IbcWS
%p,#/'"M7\,Ds2@U%--iY`lZ`u%>'Z1c8+62'295PiCP<75\grY)G>7%CMOK);V9<TNCBEeSiegp@i0t;2*.[&n:V9)FC+(B*pYAn
%/N*+8gV.tTK$h+`$<Tjkh*c)F>Ad*b[SDSh1i*DlHT+\d%W;DB>'>Bc)T@ug4U6s7b"H9>-%.;dUljku&?TV=5S%Z6@Wd`gCrq;W
%%c?(OA*<u),Y2cgT@A9VF;'@'ljei!#p?AiD7N2r<I3m",IG]raOWsf%UVkr;9LeVBE:r*>)*Tb,?+CZOgmr]KZ*I3@g65&ZmG2f
%&q`&I.g:JfVRLqc/Tc4\n"Ybb[e>D3'S$dM#9G"<MS(tm**rqWe6E-H&]#QnbNN%CMH1p1Aa`A0hZ.iD+t?!'So"3\+CYI4LQ=>B
%;2HXC,AY5i&+mfG=XHN9WR.u6LXP90SRgonZ&d!]&HO>:(qf<#3t>mkgr@-h"8a?B+'VV^'I[>JKHLFK-JA&9JshuL+BorqEEs;h
%ED(3Mee(r2Wuk[GDB`Q,!GsA*^9NH(KIH0eeM,Pq!FDOshXNK-ca]].J>O>Dh@ni1=K-u?1WN!"?)@IQ6&cYt_?"gSQ6*h3brlbT
%)05*bLc1[B+*/oRKH/u56#%0aRqu"06,+sk^Ua3n48/"^LMY<eNBKdJ,`6.:,+otq51_EC=9.uVjU@m8j&G7%SgYj:&^a$-np$s]
%L`*(;3IJq02LlntJ\=lK([<.K;/9u;k7;]NAOF.5#D$cpZZ7I1i31$gP),Ap@`hDE'MV(?Ie>U3DX"2uY\kj$`A%Q$#!Yc]'dg+6
%(b^jhk(!^_9]T3pA-aGi9TdA!e@l-/M2k!n5gPG/>m:<cHql9lN]$M)_aX_H1Z>7ZLB@e-@RWj4)Tn33C>$rT`*rfliop>:!"i`m
%TBF?j)bWRKdq75GTU2O4=MAN1PFV^cj+:T=<g0Qk*#XVegYP4Kb$LT8rO]#G+Hc<<7#j?%+rqj^Lf3*C@R(H,)Q1fC/'9sTXJ.IE
%*ofY;AF0@--G;R)c3RB6Za/d7jd%#`\B%Be-0jb\<E?h_M>/$Ah?[U^I-uQ!KNQb^#]qp$&o4Iga8r^tbOZd-V]GgSd'-&=i/XA@
%c+FWK"q;l/`19Gp=B'@k7[jb4ZV'_Lbt_XTWT&aKD@0DXQ<^X^e^/s3K*K0g8Y0Fn&o6-3>-esm$eBsH:=p`]-B""!eI^`5UPqq,
%e:NA:@(08IgfVTdHSAc2XYEpl/?3#!0/@ap)@PV^k/$I#e>6olJL[mFRcXB9DmZ%V_ZE!U^;>p)-rgl^JZ+MKAPDKb=;>O#E<s`f
%.#@)eXCPejLbnb3LW&n(kb6-[?j%@j\R#Ie(3=`SW8\98;i5VUeG^8PUOqAgpEHhM!Q8`<!H!l`B3*C*8JQLbZRhL3#DjB5c^=.M
%!M:bTK8>PQ/s$QV6`e">#aDL)b,Qm#oK[<ZXmCMtG6H)@M@>,R[==cRj&#m='38QV6R0RN!%fq3KUG^!/u"7sLr5jQaA5q_1Hc=;
%P-lai%jMA.0h0fe.Qr\%1K3c^:*[p&,$>>*BWVi(kmr?AaqSrJ%*oBqHBf;`b#;c*aYKo;3]<aa$&P6",$O/_fi]]@aI+lAN1.G8
%/7&Dg.S^!<`0&'@]G"./)rp]7"'VA'`G4Ve!TYUQ_u^4I9FN[6j!:E+kan!+U95ae5Xr<X9c8.K`4SQObs(b@N",>G,pS!Y^`R2$
%rB+;bTG1*5_%F3g&LGpW@d<H>kY*EN?A[mu-NHr,W0MqA?B[3^.hRkqC1AD70f)6)\d*Q2!2%&5!iR1[6q)1B]gXjp;cP$2<5Lct
%-jP`CD#bBTZ8S('Un@+R1,,1Q;'UXdq@0[/XmAgp<bhcis(JL!-NMpXNG:Wh*@j,Yl`**=:i)K+TlEorQ(LE/Y)L6[#$&ou6WY0r
%)mljd!AS+<h."GQ?VGl%N2K>fRTh7fEkmBjp_uX7K#UB-M6lbqP*L[sT`$p[AL04."7/?SQB@OKN2ZV&W$FitDg6+q0i61r20ueX
%nNLFh>+Jte=Yh[C9ggrVl4\7*T*Bd>QH#j=o4F/A#2mqWM<i0^8dFI>3PYVKAkh:)ed%L7&r4U2iZbuI4Oo^*P@`9W#g0<-QP@dV
%fZ8r5o;OS7E<(`I2hKTrNgR*\\?kIfoh>\H%)&k^-qV@=6s<'l"*\PB%B)Gd)UN:\8MWpA+a0o@JfpT0O=-KQE(73iefE5Od#Rae
%-\=Ra6Y,&?-m+8%XAm&nctEG0K-S*aU607Wcd'YM7n1@!e_2!#5b__mBG&:bL3aJ?]fae\U]lS2XG<MW.>lKDD0N^u'o/4n[R"D3
%09NED'4NH1Xe%B5_<<K7@L9E.Mj13@%M?[f":l(tAYSJ8F<j3$YpGBIK^]4)RO9tdk.YB^DNj=Md2la4L+cu)(%K?>%$sYmCGi*!
%ePdn8m6S#tHcg,`)Z:GmY"qHM^?Mod5st^bS7UlBji%Ai6nUIP5d4<q#'d4q#LSAXBuQJU.@$)4'#:'*fO+9PZ$&s/cAAW[!O^@.
%aB(Y;0K_aD$c*o84TKS)ADoRhg'Rg;F!qm0=phR=bhYfd-lTGp:bLH(^8aj`.YbPZ*fq;P&>KO^#T'%VFqWA*OZ0PF,^B['-Su%M
%2,Q#ceUSN/Ifc>V78S#I2gSn_%O#VMHcRJ!6j1J#4>i>EpB1t"eN?Oi.qsdnm/k8FJSUJR(ll$+0VbH7QE$kD6kriF=VSK[;j$ga
%<:OA>M2%Sh"#-/s&N(dCI'=T'#>]0_DQRk6[-)*5O[FGh(e:f7(3?7J:7!"[)+h8HLIYA98g*F_&"'\^<A2;dB$k,8(=h"[Hers<
%'*\EK<B74$KPdQ5"hMNM6OO:;In6HLjEHlh)4MbBE"m:<KIL@I2Q>F8%-U_1-[$+;6K7SNe'6k3=j9X#N:,I'kSfnT?e>aP#BcP9
%2kW`'I\:EZ3WsGK6AW!!gphUf7#(:9$Y$up$XIN44_.:@m7H=l2cfMNC5LdN"P'f`kT!K(MOJSgfm%XfXcY9$XQ"i::>A4$ba#,U
%MF\&Ul4sb!6>Tb'7OO]\1'ZmtkZ<s0g^PU_ZOsGFnYo9;/trD$Pq('>UOM=@&L\Q_Vl5(3fl0WCf5O@#QdTjNOG,+.,#=l7lI86#
%MGBFn](/..*dk^n6+$p(F(Zh/hEA?lXA/lR<U%=i?=^6'QQ?hJFfj>Mjf+CENt"qA7EiYkN`2X,,`+\7nX[M-W=iL-NJ->Mo>hN`
%/GJK:Pf'9J2KHIB)qGJ-M27Fh84N@#*lK2]e/8dTX>)!2&50kh9+k+iE!EP`62\+r)paGn1]KI4[04b85a[DVHcT5q%a`/7gS&W^
%-<_;><gS!WkVd5+\aD;cXm#.+5n`r(#@TTC<W]Os?3HHK#FD'<NBV]'/4%?jNgLl(7g<fWp3[fd`\D!u5Yp4DT,$aDj]@s@Orcq.
%f0RlpS<'rl,tgLU&%Y%Q8:4BmrC"UJ$"!3sg;QjNT%Ki8EQOQ=c5ugC,`8Eg]&ZmX"gooW2V"i-^/R[7`.2dn6,3[e=b0>5*[Keq
%OZs/?^6?K*a]j:]RL3T:$s\t,>o]Oq.Y!a8InP&K6jt(97<i=n>6&;9jT+6.?:#X;,d\7XRc%Dck6FA!2%ijF@!k9%^q1)("8!j)
%ms"h-jjd0'1nqmV?[X;gZs"7'[Ki9j9egk;9&jCAJq3^)?pW%Q.^SSI/Y_s\C?T^D\:T+</Ge0o#4tCS+!fq[5kd7h'_k`M6q[jV
%2Ir>,7&%G.egF8V\42a`/BQ]tUaI72aGDC=M6N_2m\6^3<pl>HWZ"kNANt4-1SDERqE3nHW.lW*Bn`jl!VA$:J7Fee7<Oi&Ar#BF
%l@#Dm3cX/SR]3oUf\8gd7aC^h+]^*Z\Bmiim8q.F!FXE7b+CPb1q7F11W,.thA47LH%@T*Un+3U7:33*X4fE_AVMm%99c[apH+PH
%VR@C%j:Y:!ae`TO+8S$Dd6'kD+]5R>:e^?/T%pZ'SIAW%4^@FLd?[=9DO`Q*>CrS<-$FmnK1)mfW0>PCFt&#?&i&[Z%idNgoft>m
%;)@q''ZF@X*$4XLR%BW,a=#2"%HPL@)RZl-dE5A&"VH+:UZYHj_bjR\SZV3@)!*))oB1IV,f<L[d3Zn.C9R6uq;<OST:lXC.!i%o
%6J>sI'ICg0l#K%u=i,:hEBZ4'l79o""$j5^TRiiN>#@?_%OXZ>*EMbd`?,@;=dT8=VmtT9c]ZG%%SAVjS"chi6*/IC+ND!eK/L1h
%2@Xsle4^o__G)`po^$*@=Or4_D3"h-/4C`%-uX@3)PdHmmo_(1P5UEg<sjq[B#UPH?[_u;6@)2&j]/_9-?\/T'@.Qs#Jtp(U<'tU
%\B6u/817!7B!2VM:etMDlpK3/m52Cs"B`S5YloT"YLl"&:5D<O>!;3`k[JLdo4,^)L7p$&P#2H,^*67YPpoh5MELo,7+l-E7\iQ<
%HgGb3p_o[$:GVQ9IibhlAA;!=6Xl>L1:b$b^oXD`-lfsV`Kru16:W:7ZV%*IpX&7'A>tk9%kJ+NN]9%8LWZp`$0kje+;m\Gqm:^3
%Id3MMdEOg_#\afsQLH\kfKWWI]OP92.V*BZj]lO[KCP+"`S)RKSJNP&bOI??lPh+o>)")Mg_;;bq1q?eJt.oG-prU3Z%A`sEA9^`
%"rr8KFi::F/?&tRKPNeuH4Y@/EnnA'9!^]A?;.R0lOCr&o.&Vu4W33U-kVsV^"\GjprF5!kPaG^DXToS7C9j5,Gf3H>Cs@<%@shJ
%aDXGBO;_VdSPL8C&R+lbGNX(d=H$=Uc9YFVN\Mm6;g=.]Gbq@\KUb)\Yu7#J-Rk;0=PcD@J<:b@-*_VZZo3lg;J+ugP$kMs$p(Tk
%I`E7a0+pdc=j=hI%lI;tbL4hKS9b^&R5d`T7=3BO:)K^H)R/QVri5^Sj8fb48a%+NAtFXlAJP?k@>>7b#bD\kVX8X`IRo%K`"NP=
%lt@nE:V7&RG3p]kP))7E++l,$(c_a?N_((6W;Ul/gc/1G0eF<Us'-HfK2SeRA/]Qj@YRi)+_Ep'>P!Kq+J!JG#)'kI+LWg'0YTsI
%M@+prgUW*@%M;CMTuM3TAT40l#=QPLb2'N;AL,cM;DcW9l'ec1SnOse,4[5H\0`VkTa\DN)B+jni"sei9>KFu#FE-a+Brd7.0?dY
%4aoYT$8bR),pNGhF^>*u!2A(e/Qm?%l'>T3DW(^Zed8(S1SXnY(7URZ66*C8n11M$:N9rBKiB@NdeP$4<Sto\hB!f>Z6T+eA"DWL
%$0N@U\rZ#2rT(5&&)SYQ&N.:9,RRR'clkXSUHBqJBll-Hq%7"r`&u7RolYsY+WnHP<8ktuXI4g66=Vp_">!6!N@P1\A%*)4jf>,j
%HG]=<4[aR/&>.r]kf*27&Wq-4J.g3aO[N$N82S2l&U]I^L'fe-+Y60fD@aOUMFEP:_G[q]EO!A3pCIP%?%ge'YmhQeSm^38*g1ss
%8$>/]-q0rkoE?Y[@n!]@m6B!YSK(c:"U/?N@=Z7uJQ1_XTjl9=:E%.*<?W2Z[t^=qUCo4<^eX-"KOS+N)i$CHX_,gJoTEmYYR6_I
%"jtR(8Q@E>WW#<0?LG>.WfKG_,?=6pI1?g=/F"IT<aeY_=4*'L(bpE\I\N$0&Z;@7U@"L$Nafjl<?_nTV`GQu`4("a4&pU7<CJMI
%V2+%c8M$UDl5*KD6fZuF)7MI5<m28@&/0C=Kbpg(+I6F-"k5O,fSp;G&1;uV&M0Lt=F^[oK!7,i@r<Nkje<$C#6BY#$.]\8`tL2g
%,/=XNcnIM?.Wcs8!n$=$_mVEH@[.g7i3%r-G%f5G-MqtD@FY0WCl!XOPDO"/4pE\cMiJU$dDj`#q]5hQF4!@tT8jfmJOg8-K1+!S
%3r]qcE!]-g).DJ0f#^'_?&^*_%'drEbUOkW_G\C>=kku3Tp[%JZifLM:7_eUl^c!PA"lTmJRa%:-.iX;5gjKilrtIc*p]Jc0T7&2
%<1"cZG;i[DODoe-c!n2eC6$HUfFLE!Z^MDeU5Jsn*c_c&G:D"(7.IW9+#XU\"oEkTE=bRno&TnHebc#BBo_[['M*XV0Vqi-+jV>?
%VGLt.08D;M.3MX0"S%'^k:#aZVu8p^:E&[/20J12jm5M`EfAro(I=1f)JMHf2AEtY\K.Eh8K\$#JCfU"n@)VY`j7j$@f\P[&u^?.
%!NtVc(cV)[W=alq0?1WFJ/R@'Jh.7aSKKHqpCQOcUT]l+IMB:;E6j\aT,ol3G@G5u_X`eUVrH6["<oE>+-*?]'mfKj+R8`(fcdgK
%&kX*OSnn+.2_+qLY`mE:a\r5"b"9NaML<u+REK:,U'=]9f-Q:;0!*473^eF)fK9bbFcm#j^L,\E"-t6n>pi>lM%\3?$*HZ0KD+4[
%7jC*TI>o)k-dbHrSZQ.o=:(r6jB2RodX3/17Nmn,Qg$A,rZt<>/FT(<Z'Y\N5tXAqP#*eO0JXXN"GPgWb#^ob7)kZQLXFi(H][%F
%6u;*e\?e;14W>+C:fbi5ihQm.?Z_FDSn"]++!kt6K/cZgjV#%F,Xn)VV$F%Jk-&0C$[NJdn#rX.VF78R:5.P7O#`R.LcmZ)MJV5#
%*gGlVd@LM02pk:9Z9d#S>ULPJMO)=-UV_^I-ud9F%`)&I/5M:*r+Ir"5*AQtHS?pH,na?VKq;D2!1.S8&P)1`Ohr&gA;`jn%m1Xr
%Ub![fK!5g?%4`'p<?oZp:n:Ro!X%Ibe>m<tcC1C.Q%IY%WDSugCOSm!AaU09aE1_iUU+G2]acKBOs^M]MV.Y,"&f[?NVU8@:`1Wf
%-S-DRIM@io\_S)LMIWRt>NK!0$ue6%W,o*de9BKb;08aZM)e2$C1P4=''4efEt'>"QP>fa9`_CJaUO?t9!kP1@Y$N`>!7hT1TD#.
%-UTCr1^cHN+j'm,U&maaA(F.",__+JA5MZ>8s2X':gR,;MC^D60'"EpS6jY,'3)drZ'^@J%T$H[A-L3QI'b1aT'/Z(L+UAq@CJ_#
%qLi@/HE#<#4][Hi:3h@-%0>XbZ0_8&djdn9;5+s73elW>I%#$cE>DQ"&][k+8=i^o$**oKT7plAZ$dd'cETiM1J&3F',AO73J\sq
%'+]58^cX9\bRurIKr[%k6;OCY4Rk9)Ob+Z/>VK1H<9Q'Z,F:Br-?uXM"EdOt4[9l;0-FO@KG#2]35\2(WNl5&Qq^IO=+s@YLaDfR
%-tA+Bfs/Z8OnBX)jWGp)::/>%0k;"#TSfnXW6![cE/I&H"Z%6(@ej%?(Y!mM3`^#3`#g+Z;(i;0&eN#hSk!!%eBqcQ;c^.'HK[=M
%SGEiAOPc!gX4i13J@RH<6^;J$dJ+Re7MQJB)f?LFeVN?7TrZ9BlT.X[32<W6ikUg8h+stLh'65f7N#=+1cqT,Vq5"0bt+Y5/)@eN
%p`0[AK2j;)`Xjl)36TFY:m`nNn9d'Fji^-(@ZhE1-92Ohk("s)MJnP%k7b,XH'O.Fll.O/P't:*Bdi9!moN=U[*S$X",I)#G!Tt8
%05sHW\eIt<fF1KQK<J05]`uLTaspA65UIVZgc`dCLRE-Y<Mkp&6o94A4km37j<Ik@1;TWaEE$2P=G]AY:*Q^DKJDI9=@KGJH<<>O
%8Lb]o?n'GkS)Z=5DVS/p=G[%\D:C'p(mPc2psJq7?p>2K;@i1h&^tYqSR?C`!kh-JMij24&[0%r(qgRfk(M&p=q_gH;j>Q!HDmSC
%M=`=d]8i6"F@ns+.Dm4,bJjbj#VMRan%82!B:a_^4UJIF5T-5p52`OZlb(i;M>\)]o,WRZBF'72YW^rZ"M'2W!%Y]FF"4!kBEKcc
%@.W<$YkjSl2Qs\K";q=,\f,QZ,R%E2`!^[9"A,B5?+pPVM'i-n)D-'3SA\?Z,nP^#b*`%92Mrj_A#?SbfIk%id&9T*GuFIjZR_t@
%0!e0^$5ql&<`"W&`"dB]'83BjM_E"3-a'(08:jo0p\fJd#/oQsAO!&0!L/>(/0kqYeaXIKmKKB,*ML@VZ))2`$n$q%kV](cdNa5f
%oYMK4E4n5LH-Ah$6*nOAYp5s5C-Y-t]a<.b-(pqW<>ZuMH>O'<$<EE@]ZZN;?-@pE>qC2k$WmiE"5r(tnEE%<]O?B#'BpZbKeEp5
%@RRmGgRls@:Id[&1UOn6a^;t,M91r_9%OUi:)G:O357SB706rJJ3)G)dM$oiW<ZcVBJqrO<YMimU-U5:M!p'W>3O@8Bq3^0/:`cH
%PF*ENOGEVn?Jl%<Ua4@BK>048FNO+gEsueOZ9@2E?LO;r)/>l9&nA"uM5p'3eA4es`1M?H"V;u`&oe7"]b*Lqi[3X#d`0fcU-\"Q
%%+?r$N%go^\:\tgX%jI>!.t]J(^7ZCCuj?]]Ln.r>i9rk:DSc7NG,")#H$^;OS!-Rogo$f<I"+'@[A;A`2[O9I$ENQV&(tRP7&^&
%%n1<5K&sX/L48MQAY==-C$=*=MBB,00Gd(I0lg.;4ito=FBJ[%,sbuY,h95C^s+-i_?q*7/:K!L`X#Ta`n#o^e8-$oNU!ncXG!T!
%(Sqb!fA)j[Mq"Wn7PZGl0;f(t-U)(Jlh$VN+Y+04-QX,D+qC%p\j!QB[@J(B76Nt=>E%7::NDbZ'lQe4=Y;^ks/a9/+C1`S"4p]W
%U,l[,;gJl:b/_1pi/tB;9XE,c0WS>>.oYZ<EuOfAaW72Hf91"4`@Qf/3ZM8j44eYEIg%d5kH5q3QM:YMj`Dc):h.<q>T:T&!681u
%jOhE]`[HWU:>gtk==('mPK88B[boi[6TSFN";XXB4D+1g5pA?]BpjAKGU`j$2pe,C;dlG/ia]'NhSB\-++%S:omTY++A]ZP/e8Ml
%&idfI`0q:(3(+lcnhUr]k.#FE-3Bd]2&\9qZAt"Y.qf?S3J];G9`mHp@9^dDFi98*$NsA+P4IZJ$c)S4`*W3bp<8qt(9o"@rn)(L
%Men)9XO"")9s&5^lqfW7_?]#].muTKhMKDo/_$\&qWSr"'j6W6(0h/O<)`jtlXuqrQie_o6Ro0L'Pli@V8tM<W[eh!Y=^6q+F->>
%j>d"A^s%7EA:7a@.ZKB#E[>h.GXPFa&r9fC,#SFOc3E91Q8me+,/%42-](&<h`.d3AB-L?PHLQ[S#TGr0"kq!&o9b%W>AJYat1,)
%*LTC$VFu\mNZB*_D%%eE>YqJs'A!9\2c?k$dS$bW>gWYsr3GBe4+3rtN[5%+`<':p;6u.Qn"!S+L)cM>k9b?TaPMa/S>M1=Z%Ljh
%B8,)YqRp"Nfpi'l*EKPCR,$%UEJiesmK#`G='lf^LT\t_A=2:Ik;pGPDBpUY$S#m@r!V,B-K5SMDcN<#oF*HOJQ8K"3]VrPc9l=n
%k29PP]ill8<!QKSY6HdBg=CVubt[Rp=;Ca&!(+!B$ZlqNX\O?TfMm7.1fhk:@QV,\iMpUnPL0Ygl*onF!WUOt?Da$K769V;ATFQ9
%.UCl5Ki=&&;\cPLR1e2\PmOGdABWSaV(kRS@l8R1'bF__SkP"<=rKbYCbk+kS8RR]^VUqDFtJrdF<u$K_%t0P,GH#0?rP\`Ct/#S
%.)4j(NBKhtEq]sCO+I#!WH!(Na%mK.s4>uNJ,&q[jk690T0Km"J,Sr-Zb*j2m57h7/:Y=BT$mZ6pZq.OX6&pVOr$f!K_W[0B(7l0
%Mr4R4nON?K?aHsEKE$?!$iK^jmAKu$[%A.Cn`AcFs2Q[^[h!oeD4>$q_(>(_=8b&\q9&=Nk(jk4D<87UgP8NOIC7t8iJYHgs2%I/
%G4ra!ARa,P%$ZikB<@.(XRk;'p-Wg@Fra7c)$'WM5O0=VN,L:15l=Yi3r*l_C]Ib`N?d.FdLUs^U]%a1J(iM`-P'0J(j1?O#`'!K
%m?(U<)kS,Z+9,CE6kN+I#u.q`lIpc/=rSmB[43!(jt8QRL/5R/0<9re_1`u^L;OnP'0=([V*#XX##bIX%b!B9N5Gc&'c[^i^#]R@
%R9X6oYhHY$?3u+[cF.qPa1;32X+LS34I=5NJdnO?3&aTHrJJ=]CRI+dbP-HAn[ArdZdV.oc0X=2[u:!Z:bLViXTLV[O>K!hFa@s^
%"mTqP>LJ=/B==)^^\*$1m,##&9q%r;oF`ob`mMo>npNe^ODqS`D4\]NqS45&1H-.sL&2GCQ8pKe('j^#$6?UUN`0hT[ZW!GZndmU
%jSk^bSWWP^OZS63;hP:)=MmBg?(k%h,L3sAE=4jB\k!bfZ>h-P6"U?;s5@DHg0*bFP[mf,kY!(:LcU:scHFc3b_Fa5gs7:g9Igp\
%L]Na#-?p$a#_M+&Em'0l5f\=+Iil5!^39cs.b.N=G.Eh+V_BmTFc*KV@5P`YcWV28/:+o.HnZ^7M%?nc"PHO7?(o/j)XGEMPrI-"
%6_i$*pMQ`:htro=X_uAZ[.j\&/F/&TFugUg!H&pU[?V5:F^AF0D=m(uD-Q.^g[a)9[N:.q0j_P5Y1qN>lWQXS=EtR.`gZiqeu]0c
%rCa?N3(U[C4ocVYF2[(?MV*@HgZ[,.DHqi0G%VV`^Dcf]M\N(j@ge@N^l>3bB)G8R?V0$bm6R-kAhCg!*<q1miDqsbn0.>=-@%e$
%H['e:)\ul9&+TQ^4T"dBgUf*kcL3B'Y0V!8=o8NOrWq]hWQEoVPJsFqmqse]IpDpAack&scgS'O]t$4W`h+g]"AM+5J*@,g>?.Zn
%l]j.EGsaC,Na5Bu_[[SH>f!+hpH-5N]Pb&^\d6eu?ent:e%Y1OIG^ei9ZIrgr6*,&IJ!sIAe"_/l2U_J?S3s8=!)qaWW!;>q=OP;
%:VXJd^;QYAF*tlt5$RsTT3%B2m>m=^!,jN>\A)7^`n@es\ij87F8kaio(h[9f#'('rS.!Ns!.I-m[%!Jr8Sm$0n1#UFDUTug#YB+
%HF^]`n`ASmG4>'4ZShl!pntfscHd<Qmp=;,%Cb*BAEHSIT/3A7ci'HP0/KKpbO27sq;7clIei9jfe`O!WE_QX0c+N1X3'/pnA!0<
%]-fQ3f?`1gTA46E5/Wms+Rf1(ou5bQ)3^PsrmSNZll/a5]>+='rc3:4^3ohCd&5a3/DBpF-M7#2gb)sk?d<*NdVr::\\<?8GB%i@
%NIqa?HB%=+]=;+k3P1L+]:,7:qlHshYJ*3848WaCUrLD9HNbI[q"AG#E;"VRQeUX%]5KWHcC;&dIO;DS2?WiR)8)M30#)`Pdhmi=
%k'bn((-T@A^HGs'p%Ib&bDYs0&)HoKL[KJ47rIVmLIp:6>2Gk,h;$;C8oM;u4T+2b)ul:CN8+/V3Ou\HFn>IhDVfO35bgSQjm<0F
%oS_gh`Fh\@D@`Xd<9<gf$AY@uKqg-ln"In;\34WEn)[V0(U&nBgr@GUQ+7Db\J]eW!0t)4L9RF*GLY`7]%g/L46gk$;Y^V09:),*
%SHI:$*k;NKc-;`rrp+W$Q9QrST>!F7Ie31.G0h8(^-b[\._-)JiL_8W^V5'o`U]o7%f_oi'o^C]26S)Sn$fu0^JT^>V%iFNZhr@X
%0@$_mCnKO4bKVi'g[dFArV6s!qOBRiiTea5aO]N[O1j^_2_SLM?J`BS2B;3lru1'DOLP-#6t(o6428>=\c%S]?Z+J"-L]/3QZHtq
%ghpbVp5GEP>+XVYT&$!n>ee!7]:O*-ej$IHq3h$lr:<-[h-;VjBnH:.]:.Z:3/Q8][kH%PQVYrRk+0Rbo-7'2:"+WFo(Dsi,P=,P
%oR5bs9oj,jH2DpcCW99MCPV1oS2H4Q=6f1cc'Y]cmo%1#k2t\"mW>%SlVAU?(f0sE3+]YZ+GHE?Hu&12n:Pcd]VEU2?$l_NIFJa$
%kBT!>a1cPD)4JB+k+&Q'm-n]5R=h+f#J[l2b]o`ZZ-A(\R7#Wq3GdHNaW0ZMg$ZatP+UQ:gqC@(hT_J46+r?J+M-q<gN\!`pW_C1
%<g1JlEBHo@pg#Gan%qV=\Y3@_Dgu$/8fje81]O14bl.=0UGta=*2@m>:<,Po.%`J/0)KMsS9;R>5KN$Kk2u6Vm;i$+)32:<hSqq(
%gTZ`Oj?_[p4hnM!ZQdh:\%:]hM9:-nEHsI_AU[HZk)>9[R$=%"L[71E6%1M5oB,bsbF?\E+(m]6H`2Z]/2hZ^?@0i-*`>2[SA^d>
%oD3mBLPHF6q>bck%l=,iLNC4SOJVK@0),H;_*5ZQpfSt[n*g)mJalS)qLd)\T+S&LJ@YV7No+d$mGHZfFXRdHJHHU642\@Qo()/D
%H?o=.H+?&0Vh_C(A62:go,1$lGG!dh7s6c)D)#'96_Bj=YiE*DIi"O3!.n^0QuT2;7eE*)R6u7:^:8FdlLO:hH*t<!qss+(5s@;1
%B<Ac`Y-ru0FJO;;=Y/-Q[$)Th5%4A/NdN;cp\IAH4fb/_;`bs?pRYe-GKJl?+;sst2_g0fk&7U"@c)+ESF#?i`;>p1.la&'5@ZGZ
%*G4KRb[@4_(RLK[,'GS_\"T-)f?:K<OipHt49+k`:&sS+FB=Ye]DVKkQYg3Vo\/,lh9NZWe8eVhRW7faDW]$C2g`g.?ejLCc+,X_
%Cfg5<?(sg\p=Ys!IsuB]n^F"$e!odlK[%"\cf]g?;6*tsj8.nacH\]:\GJ3QK1tuNBY:B[bn,<Cl,f9AL!t;D%&`K:VV9<TJj2MS
%]fD)XC:@-dip?O$C=X!odt\jX!ruq[<+bWr@jK3PT>UIlMF<jgR6r]9*$\>SaZ_fPAF9>$5=V@e80l=t:qQl=7JV@H#4Cm73g?Q*
%(lP\.?]MB>^XrBqW!3J>Mt1d22&nk4b5"D^7@>s"6[<O/Ypasrlb"MDj^H0'bdpYuc`/'b/BXL)*"%`goN7>\Ha3%Kj.XJeS3NfO
%PW=pfP["/O]ekK];_r2BhgoS0E\@qB4E"8Rf5W/J%rpWK2WB@L@[A<a;##a:s6\JULo9f[#8W&B>DtQXUI.?DH"c-g*uafbVi:<)
%:hG`8m9TKj3qBZr95rs-8%s0-CBq]-rd<HK7rdoEY3e#L>J_OHEj[,nHT/*N'\8;]g6&EV\_9F0C84;_fadr7qmIb+QJf6`A.Qf`
%Ge?N7IZ<pg)U2B9j#&l(UWJp\AeAYYnBn&HSJB%$[,%!8esO?6(]R`HIWKf.bHpr5%ChT.*GZ&-=JX^5e]h,[L-l&]\[[+&HuX/>
%^$t/0XR"F-m-]d7!"MBN>ts_Z.mTtWqm;Bn1qU`'H'h\^Fq,/(&I`5Pds@LZEC<.HN.eL+]<nf73O>rprS&mWs#t3_\,ZK0rF,5)
%dR&,TJ\2BMbJ&g&&$&Ocn"An4-9cWSU%*aAih&0#J&a8BIGU!4^\h:@p`<ZlLZ&`ts!6p"X&h6`S*KkCrAHk4)u8/>)8V0RmNB'U
%$u=K[jrCUTm-oDIRDZHeTZJ2O%^gg)F4fUkS'3&BpDgX/eRT0`:jCOI^Q)s9(O%O9Q?RCVOop(XB591+ogXBQnAPY&804KMiZ7de
%R-Ah=oK2o!5FDKF4[\c\rP/6PG)uX[_sm[Il]N7d^H47n*<!WV2s9E)4o0Zc=aC2]YVVorPU);Rh`\B7m($Qjkjpt6I#gJKG8>Aa
%*j)=rTsQ2LGBLuU=^GFkr;?8f?!dI(nuaipF:Q*U1M4,mJXso]1F1J.(GG2`02HJgS!J"VLGc/]@V8TV$s%h,qkC&2F&1o)q4@2l
%I=Gu,S33H7C%dK,HA:)"6?]_tm;,Zj$e_4UaH#@kpXqkk9<(.DanEeL7f(8?5Me#Zf:OoLEVWaa].SQFq<Y#;S'0pLB=H(ITAA:o
%?#TCO+73^Q@"W$F3V2TE(K^?TgWC%%Y*HBLeL=0JVR*pO^Wj-X%;g<*VYT3Q2;1u:N'!"nq19<?;s)G^H0f/`PLm"(kNs"sI0])U
%qF>]VhTVVMTE"_e#ncV__>]SQ8Yt1kfEYh(4.;6(g3b1?@&LOWqo2TrL6n[oj_/m!)IAGYQ_WO$BR'>9?Rdb9OPtnq0PGqr)IE,?
%"$IQ/hSJ]e4'),qidCI>JFo(kVh;E#]orZ1p\O4Y`LD*3RC%<LE;36<iNU-Fjo>PN44qKA3?5j^p*(i(n%g=l>31YIM`*:S@W;A)
%a30CQDpBuDqQQ!@iuU"`I=E5t85/pN3'IHjVYPW)pb!V@Y'!!Jit6k,@3I><_nI2>Q]C9&]/lg]s6\LgQY4W_IQeOHq0)igH<=>G
%1U+9I=o!Ch&fc9[qi!k(caRnb8T`0@GB^FVb[EuK<G]&"f449[f?K3iYEsHP)fD"gB<pSc]CTCi*<.%%J7#Xp%oX@u\"3>FDNMch
%PbWtV#TB0)jpuApTeDc(,)<PaY$O40k"Ot$Ms%DjlaYcR-M,<u)3^I5&+376S2Z9b!oXXN_/@:QJh8)3(^HuGUn\sjJ9764[ptX-
%@)nWjLSGl"D`-?<]CSNS`mKgOD``$I@iXkQ#@b^R%INS"<^>)15C3\4fo+Uko=M?PYAPuTKJCs=hRYDprD'53rgom1Fu+sm(6X:N
%f"JeCH?X@Q^<K\<d@R&fG8HUP;Q(tFG;Zok5ZlY4='rFPp=$*GNK&->.J%cgI*rO<YEsaL?2hV9jn8Eh'lKlH5$tE:_QuF^8"cP#
%d*NA<kcOc'7cBcIRlRe'c(9"T(Ul>)F'&K%gXSt=-LfIrpM&sMliHP'*-(2U_ERA4q"$,B5p+8=oA0B4&,2E-XUil/3(jV7G:iIn
%H89,_gl?==]-_eD%Ae-QreD6X2/>5X'(@bk.XN6)2.m9n+7.OMk\&YUqi;5@#NejmH^e,\B^Q"jd*WVY(q02W_+"ZCMDr;./Uj&W
%l%//@o2rq.S,9lHFO]H5g>#Pp4)/h,D=0Q&F#*r^UGhiX[(-DY*d6&r%S*.\!J5<AqV7$4*S%]q3d4QdNp>ErAN?c31\@=7Ygg3d
%dl@t^mZDnt$Ji?dm(Z0e?T0piJ%Rq6o26S$\VHj(4g`?E1IUIP+N*W4e<pX8#>tcoi,L''pm=QVM$(\]f\tm4%eG!2!#`C'7UJ&n
%Q)Z>6`t+MLkPt<n6)9uOBBL(T^\l,'e(X-"?S:MDWO^ifcJ?_(d0F`RB$TR9Y0gV7i#Ul1R_'1/rouU*oB*4YnCd]m3=f:SG`?[.
%-P)-E4ns>KFD@D=T?RuO-EVK7d!gF(/%tnE$\CTh':0dg\,(Y]c#:V)EO!cPRqo+B5"E(drPYjN2^;Ykp&499Zh*;66TK"4<+(4)
%1hN(o4d^G-IUUq8%Wl1YN4X<-YD]IY=jAg?\Z:]a1XLlBQgM8Mk3er1Y,6kJcjhaT5*Yj7`<Et6Vt7REJ,56/5pgQn:]*SFk+pYn
%3sZ&V+5*(;1ZL[BB`J"V=#\aSGFDq>aAHn>MK]#SU>7n2,5tDHf6bP;O$_5[#Xq7Oke.Mf.J&1E(5gtR]_\5+kQbbAs+#+3qg[B2
%X^K(U)nT`FI/fRT^AbCTj#(HZgYcQgF7B&iLMa:&P<"::WhM<3YcZ/\%X-I*pYj'"T&!`.]t@Oo.`cR*Drc9Jp&;^eQPXl'S6]s=
%b8_VE4_AC)r]&2k_sqa%O#cS(j#EZ,*T+hgd'\mPj$S&1&(,uV/2k#A6I1EqnqXOn+*82%Gp4:PL<mc;.fNJYPXCBpHdK8j&$k?P
%&SH:E3Vh3.lYZp0_*RR0].j0/VOs+Dp=\GdF"Wk;49Rj_pQ*m4gS\Dn+en4o27q&$gFqH+fCk\.4=oa\TgF-Spl)^ghP#SBaE[=g
%5VaD*OQcBZ-0)mGR<C?VYCEHtfNmA5!sY0<#J"I8O4o5EXSXl!k5_"ti(AMkIJ:RNW?6egj8emcmob75;r[Tqjlpc[An2Prg+>@1
%JbgNQXDlb)J$HZbbJiiYm2u56_fo`Xbh:g)YYMdK$kkj#q#AVs5>GDNR%+$8rqcQIK4H2;l&\'R$aY*Aa6^"MA%(]5Afj2mHa;,Y
%&6*Wlci1Q2Zg63rk#>72___=1;U+&+Bb/Mcn]o6.#@[D#=m]7Q5+4Ynm1+l`I=?Hee8Tm(Gs-maI[C\i%lAl^/;!MLci7V%ZThe]
%f4%9AMa2U^e]mbGXVZYhH,T>&b9&C?a1m$"d9!NI+8k0J?`njf\HJh^rS?;Sod:iN`TJ=mA/=)&r:*;O++Nq_h8:5I!6Wp_08Z%k
%rYP@s5MK!6gLrf)XBBq]q!\5;Ms%3pn%XQ@[dSO,U\0[8X`9J5FH>JA8r-)"77sS\P\_FS.jXn\5@YaI;[5W;mJfrF,=M'qGJY'g
%fN#BtHM-E?1j79])$o",Nt*V:/!Cg,[WQ>MfI3WjDmLZ3B\uM"6(a1%5-NhH9RUI]>>Hn[J\RjdR/S+-'8h-AJh>bh$,-DeY',Yd
%l,;uS[LAD/J2V#[6s@IoqA8u`;Yn>"1/+2eD;mHC^R4X6H'iV'f#AQoL<UTm3b.E3<s?>kq11:@TQ)Pf5>Q`Y_uIcl?c,lk^A.6l
%m.j'`\JO?@]E=3Eg]opZOZe7OD]Tkm:Kn^gNa+%A-K'*:gs>fj=4>`?>O)^tpZ26XqL13/D`kYY2]eqG:YM*6qo9f/f!NBSY-5&#
%eb8B4To>JNNO$:k)if\Xh66@99b,]u'K7#anQ;E"3U#dq@3]?r7@,MpcVKVYGThip2E?*$rRc'sf+7Or:X6GA=U6.AGA(3MPbpsI
%o^,gF[!l6F*&\ej2tt"3BXd\p$TgAUmEGRg=VG$-VLmJCSr%^B?9J6^'6BJKf)SZlHhX)DdXQMm*q:U:2j_u_f3iOlli"eDQAPV1
%/?X3iD0nTVhqb"OC?R?&;Hqt_#e7[BI_._SV!(#;j.q>(o^[Tqf@o9_f@u5Hs(D-8G67731Ur<lr+,?rIuTLR5M;N4nKopgE!)rX
%<o3@nI_juPkIGMU>B%>thu1^2NGcZ&_[Z/+/\h2'IX5/0RpHj+]jDKOICLX!qf#,QO)dhgQqt0JO89@<_hCN,!"7V/3FDiV>3ClH
%@r&hp(Lp[alPF%\ZKZ,6PoXut41b:capu/Mp\"2dh'(Uj@7LPD^30S/cc?If?9M<9Y5I]GrGGY2jVrYmO)l&@&I2\kEZY0?S5Hn=
%7dWU\e*]W>l[/,U'Da=Z7sj^FZf10gA<'B$[n.QDqqWB5ChgR7D>\h?E9;.\c?M>#1"];Yr8;F+%tT#mP,fK"jHI\sdgt?.iF3%>
%7t!V[<IUjj#e9\1hs9.u'Z[Ug:J'=%]UPh[l1437r8m32@MbZOijZkOf*8iHA*`0DEg`pW2Eq\Jm5l;OnCZn*>@upUOP1S&/[Elb
%.Hbf0bN!.')@\9$rYmm4$@hO?-mh"L34-sIPMY"!<k_W`o[uFFTd<KFk\t+I/=K.raci'\07!C^'3"8XOHZGH+$1D[mtC.Xlq<:q
%A4(`\I;sN/gU4&h,iT>o%CJ9a`cZng2#S4CWF!6^B7+1@>($1sc/#kPo:+LtD2`SN[g^E6N.VIuF(j?Qm@9bqrjTZ5*5?i?F*f4T
%%Wjhf3IZGK_t)LDJ#goLTUnInXClr,do-ZjoDS:Rj`GEDc4u@2X,uC7TR]F#Hf`)&D=sWC[#U-*Gs8j>/O6[_TG''V[M)2*r89GA
%p;I]MjMo/@l%!goi*g\D1JJGJ.+0K*m+Xu_Lrc[!&S&p_LqXlp,aRdA+&S]CKSMRqB:"W,FDG,,@W3qRd9"@?PP(N&esO%.3&KMF
%L+c\:f!ZEknW_(jFhJo,2Y?-ta49a7C.AHJ/$sB^_"sR&g4HbI\:\%l&6!D'K#BRob!TqL^H)nKK7\[I_Ui3N>TgWN(72`IPE2+8
%MFbnp`25F)YpkL#`s2/MjCp9pET8sO6q$'?A7D[/V2Wh*Q4l8.cDSMuD1\ooD/3SA<&iZn7S<n$D)a`FBC04Nhh[mU*eAtJhq?R4
%A.RIgD3hNo8)KWQ2LG<!Oo.O.0O$T9m4dVp@S\rffE0f;)]V&Q`jM"8R1gjp:6>XR6"hX>_@8YlmFG2I@(3=mlpJhrSW?8"UZJNg
%RW3^/S2VX"L%H2t#IiES+?([`C!XBFOnPde"7+jSi^0\s:I%XWpFF78`lWk6gt9%7&CDHcR-;4"F!$?<O$Lo1YG?`'/c>sN9UE>m
%>p91eiKVj1`3hBD`"V)gD5Laq(mn,]E_MEK[KIdOjtSj]C?IOQ7V3G[1gs?$N]/p`#</:]_eC(WLbfm?//(`O9QZsMr,rH!D+NEZ
%<,?1`fg]Qu4upr9)IWYI2h--M>/u,$g[jLPFlaSXhV?hsC:pTNDX7^5%N7'$bG(U`V=ZXemAeWo.``%2-4/7bB,Z`,eS[V222:c[
%g$t4>+'BT)WUYH*\=I5a7guP@>KBar`Bn@raEVTI_f3@/D>b:WEB%?7]s4\n)r%1?\Ji@1#X5'05Z=u4]L%g.3Wh5ln>.i64LFjq
%As`=fq-ocf[H1q.44LR#NFBFMLS3I1=is3p,mE.d@%CP=C\,]oXmYc%k058>*=S3_-e8RoJ3N)9VZrd4\*q2BR]IGD?[aQoMl,!l
%MHc9b>6#n/5?rM=b!:H0g.c'SfJp9[:X?1ZkLii^)L-)Ni!5F8_]IUn)JHg$'Ac>Mjk3Sm7juSnMm#b-%br5m!>l5^\ke=?OdlEL
%fK+K!4;7TCKID.fgYS/q)X#/;,]9+bd:tbs1%C`K^%,SC!`5b-6YQB1-dd[?9S*-H-4,[r&;6#:/2hAZMbG=*GtHaG[)MSe\)P)l
%Y3t"E^t[LE`:3N@'q141lC[Q#-9jh6YF:>\M'cEe.`\!5%26h*2$:LFVNM-*6-LZ"^9KWu=/3hO9ap$@C3"j=.]kpjnj]*NA)T15
%)bH!>><t#?]/WNMjnGo,^2df>lK1G*Fr8q.Ok$+I7f2)mF^Sq4X_&b!(6Gu+SMk@*b8$6T"0a(I#M-_6`R-U#BXEE3[>?sJOO5')
%i^V-%DfOg@#!N4/-@Q,'S$pke2GS69MGrQ$\A26C]PDjc]44AcUjHW<[D4A8`lL3De&AuJfRi'6:8!Hj%F&mulY?adAFm>lSLnl5
%I08&qr=HVs;ZJRSB[;TD(V8<g;gSjCki,qjiIrbQ\793)%qJ?/!V@9"`eaT%STE/Z5N_87*#:c2Mt3]@6'>!mS%O0/f_1VJ<#u/P
%]"0$tU[Z4(40qYH&!2F=`Xc-TVM*uGO'f'dT!^FKUc3XHiK`Z2%.F]9[Et`$[L<p(*GD[:c'S-/J_U:[oS029E"jBSYSb3!ZG9XP
%ZIXX@;#!niGj3q@;JK8>CgT0Rp6Ii3+HNq$g\B1MSiq_=\Mcb([ke%CX'b\1:M,)nitLglfTqAtm5uJGl..,d3/7d4qs3F'f.YHV
%/JhJ*@km8pDT-Funp8$JDo&nap^XGs4$X*7Guo$QOdD6(.3,J'66;c67[1r$\=ZH*D%3(RZdLi&91UTXYdE<5Ij0r"BW&8Cb]>e>
%r-H2e0fa76p+0EWiZTYr(TKc8Y^L:c3Gj6bRZ,7V4f0\iBCuH5*'iO<R>FX^`!6B&>fF7(Z?IXA.HIf<@R7[-?[O(Z-OOW[D"9iV
%F_G:VW&MOkA9bo#nR*&26&kTn/R0\Z4Lad"?IkhCk;$B2aKG`[S,?['LY7TZ]C,n:cUAgG'd(r1YpF"7`$Pi?lN4LC1b8X1L0'M>
%C@-_uW-a+&Km+3e-[L'-<Y6gr:>,M0O%WDhp%(nl0D)b20q@??#AQ@iOgHEMC-30a'Ks5&TEXT_QR`F65^-`gE)srD7^Vf04&AlY
%Y@B+a<h]$eD_3mXQ'="b]m4!l<M6422^KmbER5cCClhIABJ]@EZp\m-AERYIop&jq=)W'W#.+jS%k_C#Yc7<JL'2g#4*k]/[F-Bd
%69Q<sc/X^'O__AHADZ-9B=&plh%fadK9rguj`VY<!D.di8"6U,Ph*9lD3Z30>+*)'b--4KpM2?#;S#+9PIG+pYZDT01YuBh5V!lY
%OFn22oM*ZS'M&?>EMV-',(S^?g_c:)Km560#oqengNF$8POsCh]/8&=_r:PfHn+nr2)-TA8dE.Wi\GHb=9E7R-BXPKetIi6k6JQ:
%M;/S)gW1.%fE=R9_lM;$Y4WmGSu_hKf9Lc"Q)"e&SB-os@^^8ko1A#.X!FWfIDoaZ_?&0PBb*X6EpY9fom/JI"3(l'bE3!?62T>G
%Ifmtt^mt[V#i$F:'$b>UXq?TrZkJ0F8Jub_'0P3)=lA(C<X-Cnpar+TpRn/ndPTbQflka3LAf9`I5:\HiO4I(C$/.sdi3JFah!M<
%'If.#f[:3jmj*Uqqr2S(g65B;X"K*$H[gqbg(Xr3_8ZkpfUhX,9Rm-,@U.[+`^2h5*?Sj+#!,7al5;at^qX]MUIAK80St<e)Y^K/
%)*qh%1D2[X2gc>#aGfiO2J:oX$XCk^q5mHTIOg3[`JOp>eg8[M.m;0tSsoE@4LL0r/3l[/JC-$W;q-i4Z-iR=cID<Ks1J7,G'UO@
%SVf>*`nh./4>j;#MAW>H\ZJT)1JQ?$?p#YYe`K\5conIKMWN0BYi^NHE,S'i47S3%-jdYZl>KPT4P4]N)n13SHi>u6heg3"g7%s;
%0f8RMPTS1/*W#/&IuC-oVge:tDY\V9>ju.S!%o<+rD8&([;4gds)rCHrc\8*rbhB[RJ2&om.NdL_++A7_/I47MLIZUe).+cL-m3k
%U?PSSkeM,Sd?-qL>#'RBQ@!gt^bOPr$l^Gid,#u@Tb#ANaTa0c[r3nfgV:N&iI@3WGO;3";h"8tpAXa.`Kt5hB0S"e(LQ&`?f$8&
%[QcD.Y:!tLQPVkaqA;0iY-%/j$bpq/pNZ3[=:dZ%Dqc>mf#RCrf"CMtCY_o2m1Wk,FET)TBZK,ulaFqh-`p0NT&$!qS6[`g/cN%l
%IpCiNHg5+WgToe%:G4>MC99^'4Q]X[.mI=W?b%9IHOmTee0g&'g_U`ULS`#jdf0N9e2P_F=+3@S"kY-tG2N:=9gWc:FbKec[su3^
%*i9ES5#0nWRJ?[9XA,T,L:;V,C!`J)7$^Q>0'"*V[SI\VpL<=Ri;9+e[Yk7*VQ7$a!G]NE>D0NZ03/!<GBE6@R8s>T&5uLL^oe*#
%f8+@;cQLTplJThS4o\o*<9\<6g!j?-:]Jc6c-P#:)n\pqr6L:nQI#R,oTR7l?aVmk$=8(nITgKM:J]X&8pOe=WHKC:Xr#UK0:YXh
%NsiGme)l]S]fS=Ua'1b$jQuQYq;a?@2ud!oq*PXA\bu;i)ujUu:NA%Wlr.Zos)[q3lZ(uF](#I+T;V-$]s!T/AOP1:Xjh+=kuI;g
%8u\&WZ8QKtSsgbag-<4M(GIUBP%T)QHKNGNC))m4Jfk=#+:-[Up*Q7P*Oj51muWHI]taTLG?s1u\)sW1>at'8H*MgCgc;P5rOpI>
%mGgc*3rNQIp'a-V3e$Pd]KR5cr]/\Z^+&Lt1E-EtSm)6+&S88is*`r1Vi#j^r&a0))9ttb*1GB&NU2_%q:lo^CHI0ZBq)Z)T\j/E
%IiimUY0@V"(a[XfW=e)Y/khNK3TMiW"t+NRefm2.rZK[Vgg=S?rKhTeF;E-gN:o101H`7d)#aUF8<"gd3-?)1c/QKtL*n*5I^GG>
%gUc_r_:MJ+N^%;r[^s/!YS4C3c--I(RAl_ep0F[2Ytle7L8L1782AK>BTgjZDN(K>/n6,$h>HeQ2:2\37?^nV$MnR5s'gCh7%9/E
%j2K%6l+[-o3t%[!0F-J54#e&VnFs]2(j9o`qV*+%i,=*/0=TM8hFR5C][KT=2roPq"+a[i>+Y&n)K#<\'#SE1r.-:q*-YU=jI<n+
%mHj3>_gc*6SCDeb;:FXEd:gk8/CUW@q*G]<DgBh,Z2,!ns&os#lT.O.$B<arWR5kdIJZ$0YBK:hdkhADp^es=glnMe5:+omms*Z<
%P*uT8/Ac=J;h:W:<b3^-&!7/qE:6ULpaIfR8E14!ETOFM+;\p@-?"3O1IW/uRF'PTJi!X<h]_p=hW&qq%4eYP*:j<T@s*A].;>j*
%36W7[CO%8-$$1"6<*%L0k=IUT"l9>m.Ul4V%@DKOA!@+#SnX>n,sKX8J5@R4E@!_iM&[Y#K,SI*oV2g6M&H(=TELN/rL7aQ)Q,8E
%0BtlGEKq`KPB#/Bc9Ia%;$uBNk@m[)i,Fu)'6MRFPYJqb7U9o2b1!pS/@(_g5)/%rZ$8!54gGK4baFN;R/=I4gca>\n"5^&k:AO4
%X,qb*!hnWk;k=hped,cRcp[GZPji'7q$HVk'>EQP_HAlOAs.r3Uo6g<iW_f>J?gY`%:LH'.WO(U)IU^XZ!06Yab6-!A]aOqb^u7_
%#cl,/23M$3MG$@(RGOH'h?]N[0=+2\6sX([>YJCRkqHO,BL'4To";b8(Dp8ZoOK:'V9F%4lT0Ek8%)rf0*2*qY\"GG.YS9DCRbsB
%Y&L`4LFFur1$+*2AXY)RF]![bUe,<uXXK<i,lGh8+jQ0Wo,9RJ`$#CNPEo3FFA9_iQ,MA4W[.7GD^?90(3GiCEf6k-.0aWl(7&0a
%1CCklPaS9<MJ]pQYR#j4U<,uJOAjb^q$jGQ;$(;Pl&L&:0WUCjehMoEejt,**t>Ki$Ie>)1PE?tJJO8.f(QV)<MmD]M_\e<.7VAu
%F_`0;Ui&orP(7!bLK_f<R5$.d:f=pZ)Nj$<6^?+h:oK1\ZEA1_,/M,bQ5%^_VRC0\OsqOii7*LC&_dp93N^(DdT'$QQJpg?0=T(Q
%mBd/BNH>o-"(?:OQEY2$3$^40,`PATWG@s"Y=cI?+R=;u#"*<nH:dEhnsP;AHU"[91)?&.We\A^U!g!.bjhu1oG1d'"Zr0;Ui6\f
%lli*fOa7>%MRJV:V^5!R<ghoU&JfYSZ/V\;\<(RBE\_./bHNW?G.NFi\`T0N\45bri.Xa9j[pWZ>Xh%<HG[h^#aA=^!D*Vs;.BQ!
%o7C%_V6jqh;b>bR1OtiG99AdP_[>:>G&@Q+UWj;E)78(*P&#c\.bV``HoUF\b"S)PN/k>e:@QH?%^bhkM>"B&CCn^jg6@JkV@m`J
%F%-9$)DT[''`(D#IKM(1a%T8EZp/Q)1q\WrT$>`i.<?9#ZkeXne,IBCe^R=1P@RfnL]YF1;B-rCe-8Q/jW1DI!bRYXZ9#!0@E`j[
%hA#;FbWlDfN@T4"[bZ/%NJmN_V(B_C1H^#]8EHEMZ*m1RQM$EO@ANt9Q5-d621#m?2?B&A6;s3AkCd0o9WKAtKhC.:8HG-[gLBQ-
%V1kf!gjg-VjM9fMW^M,5[$_e7V,b\((>1dN__O`%l5!YL)VZHJ*p9W'h,9a&jA)u>Dth0s=%7XdbUa"&ET7>Lo)?pHDrKd@pe2[$
%AV:'WEc:X6?Y=iV)p7?-@hS'RN]fp+^XbrA12HG>,c\/Fk7)MflP_9O[G$,n0fMm"S\BjdHnl?nP;5i^2AV35Be"J*6r6e3XBqDX
%W73.afM]RU;u;"j`^Y;n_88K9=&cU.ME<AAG-H]o--F29b<R!uR5VM2nB>E5LItU>B;K8E@goD_Ek\!,Pm0fe.N>TTcYNR><'@#f
%3N+aVe1aT?\rP!Gr!t4[ef,q2<]nUqO0]a5ZQP6XrY<eEH,VjG8\PFJgGE8"Kr!a^4Fc/=rkm`tGW!B1W0An]L!I,"R6mn2O//cm
%?UgMGn!8\--Sc)!DlCcOM$GVZ2YBV>RSs0:b\]'g*-(@1*:Abc0`,,In":^WPI":4m8/^iV1#>-D7uq%[PIiSG\8Pup3oTI,n"HW
%StQ`HX$X6W$_T_mD>iFT<jE%<ku%Zg7XLJ1$<%dk<DRAo=F[sVs#=FY$8sWC+4.cTLK,.%,Jc64B>P`:Y)O\Na[/l%%rZ80ltA\l
%1[PO4FXD!@<f/cmrW!;;]u9s:I7q#%$;<>UgL>Ob(P4P/2"Q'6q8)dPE>6/cJbegYOgP+c<*oa-s"?tW$0Bf]8XJZ-5?uQRT)r5=
%ViYKq^9BgafcBH#0<?8!bN3XMkdV#G!*'')j6+PW"SkIB<YYK#6M""<AQ%L%OAO;,qX;SYlW<h@^AbZlG]`DuWf>LF5Fbj[fi)r+
%s6'E.<pf;CSR(!5g?n5;IuZG5`?s4/p:nNG2n&H=M;Y_t(8\Gb1TR;2B0;W($rf1cB*uV-SggSg`k:m8I&tsip<C-K`d)1mIp<P6
%?Rae/oDE>(D>uHr*oe6'X0KG:0;/=D91AL@d5m;rY_UXf4MR]kGH@:aZ_,25n##:Jel"]cqT$@$I/bkHj@;aTr'*"3Bn@fL`oN<'
%H-3XHN4-M$37fAH:&cLRGabG,&j]jU=X3jbp?(n+Et-L)r7;c-D@cS9<MutSo<$_rO^Ut\BpHj6rNc]Ojs.N4`aA`i"7qr6'?@Ga
%:Cd!a@'k(Sr,DQ1flcePR.67:AIJstQr<d1%LIO_)O:PDGlJCum#I+X2p(.W-P4c)VhqskC#^Q'Ou_']6&AgGF$$/E-=lY+7fMrB
%BQO&]\+aWZ[(gZk;hfZYrKT5,q61=]=!n6dV&a*_mYq^'0+LKBUZ7qd%b&jMf3`6<:Ido>HEYn\N^nlZs3>=KWZV+0Sj]255<1ne
%3BlaR<@hO:^;9[&pQP:=UY^q-K9HDHXP,-M2m1bbp!(a3<n+qQqU*WtC,e9,5Amr7hq</\[rNs1o3cq!_?pYhmdD-M)="EtqBs>\
%IZ.S,e'ahW`no%TrSc(NilUr4I6X;0D7>?tlc5dW#*SCf#00q,]n>t[R_,?^h34CP`R8^VV<K#\eYe%B'&qkWeEurV2>:XI=cq77
%nbV57`r>hnArfElJ(VrCo93$e-'#Gr0=(&:cZROQLHZu9X2X2]VPtp5bdNsp1E-Q;;M2!.Y,RW5q=VEcf8ir75LX9qGtf=Y3U.b'
%gKWIg5$m.!hUt*lX)g;)m2tQB*<5d@#+tn*F?_GIlu/uo]G_f\ll608d"E[X/\fMb451!FO^i%rD`#,qoYj[#^qg>X(SE]nSudS*
%hI-!=B]ffj,hY96H_]F0-WhHb>-G&VEHSY[B`4<C9&5O<<u-hkkO(L_[iOfGf6<miU=Qop)Vdl*mF5WL9IJ<cZ+6M*Q)0\8*B0I+
%7YfnErS"M1N>gsUhXPcM\?^S5dBJNNa#*g+X!l6,Y*']lLTEYppI.s%g<][),3WFQao/a(ob@g`n_]?Sm0@]KTgV4&)&EZ[KP])4
%*]PV*s)W:,JC=P&-IqKArP]p1_l5l"4'G*!Sa1X?YcHT:bJ]uT7b78f+JaFt5Z\`4p8Bh6OZIZn@qh5emA>$k2C2]>0MR4l^Z+?9
%p/TmLg08s0qYQi*BBSLG[s,ftGCL[tBfgbpn(?>:k^<__fRL8q0ZJC:P^0<-?:?>TXR1)@+BB]jO\BMu(=nJ22/XX#m[Z9\A93lp
%V6.2PgQHn);[F+[IVtkP=mQckkN%sd5+>u#]*TI@7d"<M`Rs<UWXY$&rLaXHgNuiZ8KO)mX]9cs3)+Vrf\`'.K^1]]DC]n$LUe<"
%!nU"X6*pkP$1f%ZNdbjfC_1**[anm!h'$WjLI\+f^;bJF;mI`XaIP=(2eG4AHesteUEArCXR'fkpXH?h(8E5h[BY.m]+3@TVKP@/
%l1PA>GCNA+@#N^qg6rdIfU5PLg[D9er]D*7ho5:+rQ3HCe/`I@@C<+^,$it+LI]PmmD!abF`b8P]d^Hn*rOf9j$e%D:,upaZp!&0
%H*a'To2BY5GpZQP*!n4/VY&g)d'c#qdF?82l_Z>[3[^"-l4=r8VbCb>Kd+.*LK\Q`dOLgE+oCAK/W]W:cDFF,*if38Ti2k"Z?Vq9
%MKIumDr\%X_Vt3\dIV\On+S$F5MjGbc*PNoc=WIeUXa<?3kO4/G.Y#)k@X&cStW,A7n;=kpUWK/:2RRNK2&9'jHf[IgH22%1gE6X
%`H7u_N9=\ua?,1+Wm]h$-H#dFReC6E"&9d?RelDh6aABn2a6#ehEQZn\DCZ?[9IO22=P,UnDAk&f@c*Af/(p`FSpR`F:#=6h!o<O
%9Pel?*nJDB41!n<B8lIrGd'"%lP0";NJ;dMVogbP3o8_MiZSt)8JAP=IW,d?fS6:5JG5uSfCq7)%AVU=^E>O.J@V)HCUGikBhK(g
%]R:cccu`;`giuE._\?qOU/Q6kZPj8`pCGPa""S2W9Tug:*NEn5BD)_ZG[p^Akd1YTNJB<6R&K\_*nOPSofdF,X%-$-Nn.s[41hbp
%Uh^ufm2\u@m[U!LUs[$;f)FO*WXnKW:,`$=be%KQLkZj;LUrpjCo[eE3[al>H>iG(rKqZF:MU,HK.PWL1Lpb#C$XG6"5?QXI-Z63
%h0P)"*rT1g@t/S=\'Sl3N(D#2d22T*M6GI2lI,Y2FtarW:RJetAqsm)49mFKRXX]\qn!d#mBIm`e_O']IV1L6%I`pq&RJ\&^$#bS
%pCE"VBcM#1FP?A.Mp7IW70Qj:Smd23+*Vge*J9huSa6e]',G:m@hD5/qo%95I;dFRE1GAC9TNVlX0&>dYGYI"HZ)Cn^%m(sBK(:1
%Y-5Qfro2CdhOiIHcYSs73c4h<)3iVV51]GaBi;s<,SE,mrTdDb/@=3qdPkI7FPjLXcErV4PTf>c@f,%P4"j'Y>GH8Oh:Flom-L83
%::G`*qiA7jSa,,l!j,`j`;![j/:DXG'8f8L:(Uk*lN_H"Z0h3h\&NEdT'l(7%t>Semul<%O$-'R)\8K_,KPC#%LEaDh`H91U&ls[
%f\b@GeQR(PY9'n9D6=t\2)`0t*3oLqoQ7_Lg:AEF.>$\Q=?BbP3&mrb'>VH`\R<jU2G$(4GE0*eYjGAa<j(g&#n=#q2qt*W\95LY
%KB/`8IQ6W?HKj)o6'$1ELr<0Z+$W5A]qb6b+h6ib4\3g,rm&VE-EXb+KHG%kVhHFHO?)-DIDgs+had6CK_VbLPMQ=3DJt$.2\IQM
%1'Hice1KD2POEfi?uPe<@uk#Y`nrl7#GU1U\'6YLp"n!*I.nG;>\T3hUuW*`k[aGj"L%/DYfduI8^Fh0P+r\bH@IFV[!gFcg&$U]
%-IWW/Z]ba54?VC_36Q)qVXW+RVHo9.Z%2\+VtirforHL7V_B1<9u`\5PFUHVm8X,$.iiXB<_diN>gp*umG3TX$3!]3rEC:F.6>]q
%Xg`o%>![8/^Tmh%H*eqPipc?!m6,qk>Y\\Xq9gX>_uB.`fcS_d!JT5mbZR<#%q]p1$kkj15$\-RpD*We:S:Kj:U3ij$5Z3!<]3OY
%Ci=1frOp[$o#d2,A4s:*d?==Gro)2pYI'Zqp,Li11YIFe\q=-q100o\>FdH@kLeVfjLB-0*tQs&)Yjj*pQuX1p?;ZrXba6ESnDNQ
%/:c4B`#6V^GX(3sHIo*f3-F8jN1=rBR20j=4!8DkNUnGmSOPV-E2*"(ShSBZFcLOGA<>863BR$eHUHNKM;$#Tlj>l=m?!\K-.e[+
%Q0t&&e^e"hf`4\=pPrTh.aB>Tkc,qCVjW]Y.^=K/ed?Cl[cW8#CF[Nn4:K"6OUJYlj(*@DDgcuqkT$']99p:H-4kE&cHI^UN6g:`
%V8jmK-h>N^Bga,a,j4p?>e(*;X"@P,mB:/8SI@!#OGqreEu\,%HkDA%[l2CermHj:--U^ke%)f+gWl)OYKj>QeE$bBZ^Y3]mn3->
%q:1P8m_>='G&R?8mDo%Qk>QH.LWd:omXF'*n9F37mH`Bd\(@O=/t:IR(<r\fZ`f];4=qW2*IPHlFS>37==l+::[9NF;-Z_VUP1oJ
%^>D[<ceeOSI<5,]m=V1eUF4_8l=TbHi521'p%We"qkKL1g&&a%Fae]"_/Nh/qV(\K^':(qWP`IZl,qiI_t*?7+.q_R%o]t7]DI5U
%rlXNrO'<.=V3@a0iptj75Ba3'%/.P=np$oCgZ>HgWntDdpo2"d5Q,27YI`QGca3@q/q'>)HSiE_CZ4uPPGRTgRp4AOo5!S09ub'$
%kI9!scKrig]3B>@Notmk+4>rihl\R?e%r6@q[]mD'gtI^dJT@"?hW`fX1oEN2HMNT:"=_um]TAkg(P[eX`'e-2pEGrD[dM<jicu]
%5DlZ=me<pG=)Z>H]D_-Jm/49C9CnpBRh+@<^@^IBE4Gl\Ir4(Hg`$*PY1)IWH?H`Gq:j`m098'TG-3s?2Ka91dn,%nHM&'YE+AUu
%iu^:(A+%&+4PSa4?JE.NoCUn1CA63$G#d?Yg<0;J_j0lFcb$/H3F$fVoS,>,>oQd^o47I\pACJ(RcO,*bk7siUUcr\`NG0YrSYib
%r6"t2D\m=N,q:>rXF)jk*`Vb.?Z+\LZha-/[W1Ofj*e.UKnf68gq8;Sq.SWRQ[<,jK=RU5b`ijh2k,FFrI!ko_O^As=-kPpqJ_7.
%%"@ug=L\Z[PAFK/.JQ,F4]o:6s185RnVOWF^V0D:Y\!:0'p@L!afPdY(2mgn&&6Fm6uQ`+hqS(hfb^5S:GLgT5$,=5W7B[5:Vu9[
%6@+(B'j?S(L6WS;(;;Q9BtZ_^bQma[YeRX9a/t&t4&:;WY-23E4D-QY^V'S[iTl-qg5k34s2F*Ye,EO:6Nm89kP(>,UWj=-n%LqI
%nQZ^cNMQ6jc[`.SR6H#Z-LLd2_Ue#3-F8s+Y2?b^i6o<J1/#DVh(4"LDnVPhhE>264ZrZ4]"%Y0m6dJA]%fJ+1kR`*hjW;<^9kEg
%%pcNuYt?>ZW2Q24[q8C<0.lOdF33J50)]QGfbQsdbf9YK]sZmYrO'\d-f`uuc)+s`S,IPd(B@Zl:AZo^h/BXbjAe!>\pj>1`r$A=
%lGMUNErY:=kj\(b13tZrcVl#-na%)DpV/me=m#-JI9XROI58L?njg**[=HJ9^%uO=8cSUQ\Yi*l>EA(qIBp,g1r$TuSi(6&4=nhG
%R$kDa\N(_TI$f8fG%mgB"Ed(RN1M[Rs1C+]^0]ZOZH8<4]5RGal#!mKdU0JEQOb]d1sN.L`Np=Um]@JrDp<2BD&ZNH;]f@W2_M3p
%$KJ]V\pJRdf(?!^&@/4CAfcGHm!AX0M0)or^Kqf5>X&.u\_CKip3>QAp<<1U6*PM!Om0&4h>]\9Ao2+-BsE-_Nk2cN.p;f23HD?K
%HiI6WFOf/p7h^C#/.R1/]'=V"KsJ$;CAR59CBN"M1Y;K,Fq/ETFt_GhOXe"E<3Lc+SF/Ue^Ucqk.#mX5I%=QDY!/I"r)uag/`c'E
%Krt?^0@?*TC2)quN=.sq+JaP^7^TPFNRk:."OQ(>[.C6BDpl)*]YA]<D)anAI/0(opq+_Y*mC"AJ*jGrT&#mnhL<"l_-K<i[=ou(
%*_e6B?S$-bY<89B2ts-Hg=+_*F$#GHC!>2LYY_CsiV(N*p<CUJlG]NrYL8C`YP\.G$^V[9)je=`Vp"[a=o@rC,X%\i7N6OnVRNbT
%5P2/be4ok'1h@O'Et0+/T"j@d1ol8q-%;EDc[?>qJB\D#rr&gmWgm7;Q$rUMY_XY#TqTjTO9OOn**PK5Lnku3(uq"Vj?N-@guB_(
%k69>Q6sqj)W%Z(sUbZPD"U;(0G)rn^DAYm59-CgH=8l"91n\*5)9O&W_ll1aLOkrC(t8j:pV,O3l'\cu/G7iSf:rX.pu'Zt4niKo
%AqIU.9nn#uIKedp&8"qdOVo3ApeOB@]3Yt8:cIot53NWl;l<'?k.gi(Ut>+.<mj%JiuG@U`WJH.+>7TR[A0/2Y8J3.Y9:lJR4rA4
%Ibr&qerlkI4<%p:,P>l`)rl/[P;=;pj^26*]"&+T:ruEg[1@lYEapeuhm$_[GnOJ/2'Sc08$g.HAA%):[j'g2Tjb)k"MdZkr'?Z-
%jMCXLqKp*#F(1P\htOoc^+shWj#R,c;rG]"R5`T!UsB"]m7,b#p\M)%^-<cno>s:6s6-Z"H*Xn9S#/ELS)l0D?\pArFe^LRPF#A=
%07>ui]/b3kH#_foigY.Qgtjr3=kOY7;J<[>\fCnlIY/IpZn($3c<K"a6h=j6>U,a-`lEr(<d!lK@&]du]_n/1KQp%sfR9E1lM\ap
%[5`;UX&sW;n5l<qRJT&1^Y2n?h-W<Ofj26J\8sh4F_>Es\T6VUN`S/kHR:nWHsHR!Im-*kJh7pWFmVZ2+ZC.e=Zf_rJQ2AuY@$t'
%:QJj74?gFRXU@G0I.V]\s5`Q?f[,qmf2mDR+$C\d>+9J=k%H:F2!nS,l-ipre,9V33LjjcCfU0)oB=<5f#si=452DPP"E@^CL2ti
%4M1CYFDklfX$kcWD^brA"t,H+]DhDuKg4FCS_sFagpso%Hf[>W^,Ju"bCa_5okJOie4g+Qa]c3T4.cU)#dhSEJ'7@92gsWB_8>rG
%)\8d#Qhc8PAAC@C2ZMggqtW>.%qb7`q2/;i\LKg8qPT[3[g\h)kMaB)Sc\17^P"#Q5\/cpW1mgccZ/W/LjN5/0-9MrnHePKll.?N
%S"HH'o/*8f>>*kf5%k^thcF%C[4c,`[Tkq3j*c43`i#+5@jQ!>Fo:Xg_Ue$WbG;P4(:"mKMm=&MS]-oAL_BT*s6@p%l`44co(hFE
%V8^-3DqUCf[rrs7s7YP9+7!Z$GWb`k`@R#2rU)H\#WR*ZV>p,>lC4W()k68N+S5J3PNq>Q`f"BsAE+eWdd>s\p>IC]B)]iK$[6MP
%=T80Iak,]iR`=S>F$H;R,/aH"<`m"Y&XE/IpG8;L&:X*LKB2I_mS8?sjV\p7+iHh-'R'-JcgKL*:s\bX5+$eElf"?+?`o0lCA-MJ
%pD:rjr,ElLrk-"W]_MfWc-0TSqt`Xso>$PDF8[@'61D>X#O&OM5E8K`VONpJ@]>hMl\&d8B^tCS\hSR#osJKK<6NFTMtaYT?Mr2X
%HbKEMHFUSN/:Eu3M4@(7?<=U'*JgW\/F@@MP+0r[?$"1k@lrj/cD)NCkpnd99`OCp7PS(0Eu?K#Y`-=aTU0Q/fX\Ju:k$K'4a@#&
%juCM)6j".[JQg'7K<IM,V3m_Wk4-R1oW-69ft5T0q!%OS203bODr*qs8Hbq$IdM&,gj+*^f!4l$kg#7:QZ$9rOelr@@E,=r[kf=R
%rbQKHq#bGKOZE!6R!X:FIirpL3a01=dql!8/4^icb$;[QX.I$%p=K#OX[a>fBCEQ=d\oQ`Mi6J/+:aB:r;Q*Xjq/h>qmgR4>UOap
%GXuoNiSMH8i;%n?%!-,Z>QQH\Gd@&8@d(RQZSP^YSaYP!`NRD?kCp%G"U'VtDsonRl'JaTO,Lml4#^>DP`9:(^[dSqCNHaA](>8_
%Ir-ltp"2rtPCNW/m,:obdXUfPcKDgo?g953osZk72p1EJrFtC(aj&`jR4Y%;07CP.j%d5<m(ol2Rd'8WAq)r`Nku<oYEOFKEU\B;
%IIu[1L!_`p:0Y@.CMN,1IWM:W>IlOkaT;sejau]/;fb%4aVG3-cO]0Sh<46>mi=7Lpu#sMSf;EJeM$Z8:2ImDmVZo[r#0ME@;6s"
%5$V<\+.8c"[>"9qDPt3J-e[logTu*r^YId>e&l8rQM>Q3B)(d=/Y7ZorE!d@^W$H<daA!dbgW??]1Z5VbsV)?H2cLpRtoj:1iC(-
%mV`V#0!#Ig]pL>,B#eDfs5hZ4g.[Zr9@k7M*&N^?/KJ$tfhUTbM;&\bn&a\jf#%/ST8W"&_=Ti-8_Z0+.PV0ZD/6Khg&$$o`oS^X
%+lrA62su&QLs9t6X^8VcH$/B;V5pXR_HWWJ^\i(6jKR`*9:(\U2s,!aVf(od]p4*6YH;*D&;eWK'p!QHK3D;6#,7::It!h/-''Z1
%c1aGdm5V_0khsn+mBtAt)26r0B7Fp'?T#%$2oW8:>oMj119h/ZKm!/g2l?:dYBdI6r3Wjj%tDm]IrKpJU:Hi.jD"p[dG3&`a,fD@
%pD71$Re]of44dT:r>/nQ55g>Mq76'Tglo^*]`?=D55*%;#a!JbbPVuu&0I?kj)/%-Gd__SrJT_8PP===l?272Zd"3Kh<&m&i^'qW
%-`-k@kP(X/74%DPqba@>ld%a_rSDk/s2VuWo6=nVj6$'#B(53Wr_e5YmioeK>=&E(^k(G"BCg=2/Ne<!s,P`NfuqpFV8[QBqU44!
%X,Cjrhd34?@-ruB=mA5=1KP(/KpD>%.q>SmkJ[nicKA8*XO@PQ<\>TCeQPQ=DkF[e^GME"J#/"ZgK;%+o6*`TmV@4"A@-sZDmUQ-
%ed?>EoD/o95c_<XM`^p,^!\sYZ[B9lFF@`0hu*9Am*a>!Ml3UK<t5Sc1N,e@BCiYE79Gf*3hjB@h8KVMrG)#RI%UC`1ja^eqF5Zf
%BQ\G860:tmC,$f;CmTVEMsGGf(U"otI"kBfg\a[(DL^S9TG9T^IW@BJK=U?geljG]o\/>"37^n%q`g\0e?7>999uF34,'Rb!$A]M
%a<q7\YA@WqFnsMWQ0$=L$-gd0ebFBnoU/*Tp+kAMI+67r[$c?R0`CpiI3lN:bjGA*Rl>4(ZAsemjCuj+n<rCO;)<T0cgf6>f6XMZ
%<q.kJ\p+$\nFO[H9lK+uRp/P;T.DpIVHIG:I_(1SG5A6Y#@$1aB'/+I\_W2:+3K,&I<=u%0@-l[E&V_,qs2eGQd9%2=&3.8iu:[;
%\?N9NI73tbgb+`!A!Xhl^!]T_$D-.gO$M=pe'5_*mQ#KG7c!Fg)(ogn5FOX.h:gDgT,6+oX^%CN]ld?Bfj<*k:%If,4.>SSPm>[Q
%VAA+B=L#\YIAMdJFRp<:j"&IR-I'^*O2Gc%QEHf!N96"]3HBhp+]kg.2qblNP<,7@gmS'"Nu,,1/"82Q(EQqu^4c+-'fgR)n#Yu`
%`O'l;Fle5@qD""347(ZeQZ6dmgqudSOM9KJQT)\-SiPS#[;p_DEh'4Y>e]*!(2bs>[LCdU55VX*ZLmNW[L5[MrRq)R/Pn6u3OKf6
%`="&r,X4NA?LdI[_Ud7i9BQ#kn]]G5S`r4U2qq\WJ#=/E\lmkfEbcC;9"3MqPMb$9a[di2qo,sYqb?q\admmoHut<0">]UMf&+^n
%h0=-`iQ:-+^D9<5^K_22-6C"4K!t'K"4AHem[1U*c``r7F*u`(p\!atdb!O*;bOIK7VhONT&K?OQ&YAS?I3RQ48#AG%W=!RJ#Ls_
%/T.Z_h_':0YAUg+R9*imJ,,(.<0j)@7@k!"5N!r2rl<(V^R"^LAe4;n4Z_8WUP["g8t/li_titt$TGQ`%'0:$ib7l"f#j]tBl]D;
%>5P?nfW3U#p!iV&6qrtMK*g"5I&PW14h@u,E73q0c'Msq>ano!g?Uu"*Hgbhgs:?AVl\S"6M[1:h<N,9Ak3+<c"N6R]Js!L=@/V(
%io]'Nmn.`V#&BPVV_.dPpL!:u^6o5@DZ&"E2:t$8mJ^M`p?/sooPM#U6FtAog5S=6K4tjFh0cl>nS[uVQJI0`bO<1eHt.lpQdGs(
%q['Qj`>MS:;bNJ$iQF_%aWPn#$N%rK3MsoR<3qqCO!.Ntc0H18GA,+4^:eV7]h[GWb?).h*adPloGFCo6#,9Sg?S8>Z#jPRh/+>0
%N?N"/=$M)i>M.[0I#A)$SUk^[q<)K\Q.M<tV@UE5T7".G#8'3n_6q8@ai,q+o1/U[PM^h:Ds?TT2g=#OnVGa3pKLjIN9K$opE*&[
%E/%[h7!f%AB">\Vlf\gV7\28\hL9r'3r0>di9oXu2bsM`,%pd!fu?gSXt=!`HF3#:-M!hd?CkJJI-X\0]A>Q^]K"]V]uaspDmP37
%]R0/uB)a@i\bf6_r,X`Bn&s3PIr2pr8tP8o3T>7[f),@Cd8HW4YiOF5pL`lBIQ^d"XfS?,T>,m$&/SI)RD%XbOm71r8IKP85)hS.
%;AY\&/e8FYWmgToX3DSn*cHNeCK'[dA;_8$k3i0"gK_MKI"-K6`'-LjXgrP&qngBh=?!^,%Y$&UQ`'P%b:bNmhb;.'fY'i$_!?tk
%KNkXUq>Yg2GCS3q6c#)FF1q]re6CiLPV2,pm[:J`Eind*dK`e&W#AJe.[<\R4^>LZgcjL.hj8NRnkU/m7g:.mNa%dG%bCCP[GLpS
%V4$_aT0#Q`e&2+tIuVQU_ctgkfu*D+'COb[Y5^M.HEqV)IBYNm[u(33pAH!0[48Qp7k!HL5<'L^+3):>`lM,?ppM5$\UnHk0^QQT
%2d&+e?Cj%(Y?b.&&$PnAr(LZ.k[<H>J%O".Hg-OH@#nG[P]mk<I_E$P/<n^mWO;4@q+An=qq>X)oIF7til?u7rT!?r45p3Xhm'=>
%H0ipX8Rg`e[p0ts,JfKia:e5&=sD9pq`fQ$4_slu:R\/oWAHL*FBR(b]*(mmn$E,&Co29dj"pbCS2Qclf&0N!.I'L\iOg?H?uS;8
%PhA%+SkeP\,il#W,fsom3.1qd_Cl?>YA?%A:nFM.,.)1\Wk]5CJ7J^`+[N<"_>AL<e!!KF]]$HV!iOKV9a!]j9q);$AWdY,jqfI(
%Cl#9akq'%'W+h:d%?&HIC/a0r9;ftOe@+tk'W+AqF-1*[lqs52Kj'XE$mN`RPKJmpDn7^TZo#=I&]5%kjegA?R&G&:aH@lfRSTD"
%.pPk1Xd'0X&WA!$5?HbM:]$F4]1Issb3?L:>-MbQ_1To*>_D?V;qKN`f[Sj@8&/fDd^iiGb>a:AYbB92D<uZFVWDo&R)XuGaag[a
%VF=P=hG)O"bY]QJ_`O=X\Z'8.=bmDI0ZU:G4AEj5%#M<1U;B@.5u`t'Q%f`Z64@0QdnOoK.BOS`%Br@,$I94)Qo(30/CRoNG/\Qk
%20lAu6AHbsGsQIKjR!\G=49U/[MMVfl@kp.9E<-!jlQj`liK$nM#/NC$]mh#SJSY:Z655/(HF&P4G+uT?^519_b03f'UC.\4l,%m
%</o:H=`pkpUju]s%4+_A>&7>O,*Wu]3nI1uVS_PPdkPm2OJL,<-`YCXHof;0CKc<E[%u!;ZmKWlTM7fFBbj[-0Z=-=-6g^NphQ$R
%4L,qa-!%XCi\2jDl<6J:OU@d(bkS]%/N7#M(?dl2Pb@E`?pjcJ0d;+DiJ1Oi@Tej(nrqH%eacH`PUpp-C"R"R#hT:ZlIN<J_1meC
%9h*//A^/TkS)3fW]m"DJ.)6JT"kKoH9,`Fq1/$;t%;A&`1d.4J1>*$ds$S!3@F?2WB$Bc"-`kK)<c^:cLJ2lIUo^HZR^E"n@+C],
%W+?ft\Dl(97<nN'#fmjK@Lsi/Y!B%?5qWFY;=fMRRPoC7]IGa1g>HWX.<O`@C71.dPss(E<B%AH!c&Zjh.RQppN`N:e]$'aScVqq
%3L"I$<e0Y&R%Do_W@@Tm@S'$>*7e"3A2H-DA%4+,.'m5:Bb`M-Bq0F6gERsG?ol1ETrMaA9@U3(r@c:WP7gn#j%Hm.D-D(/!ZZ#i
%D7YB:M$M4+9WCs5%=?qbbaTt\Di'UE=X/!NJ<CA_MGXa0rD?N_C55GOCDO`kT1#sh'7"*jOWm[OcOr7:"gP*pdu%1G>/r$+9_GR)
%N_k`+S79u**R#F0@Uh%7>_5J(m<BRIZ3mCA;rGgV6#!VD'ZRJtYQPV.8bf0YKbHCMLJks1mgAFF<#ACE`"#A%Ak!OM/Q^Z*S5%h,
%U=N^-87@(S\C6bmUhLa`1lVi9>>e1)hU<mX*THm#h7J:KAcGK1.W.k'aD?eh#*A775WtA>T-$eJ^rHSu;F\_n_QJ+k[!C4@%*Q"t
%4NM'*O'nD0!=YNdOe&LL_?b&nk?pEZ`*(K].;e1'M(o32`0UIH<%<9E1`ZZ/EoY,nXDDp3h+B$Y([b8TOgkqmMissEVE5[I,bkdF
%XgtTBB+rUNC^C5;fQpRBlX9>S)U:u1Zj5T9eTI'i0Kb]%aXsI:lEo//l+H[taZq6*e?b!"dsBnc$Ts6]`0M`A$J'rB6qMUq1qCZr
%4>T*'cMIpqS\bJrQ\d@GiBB+n;esOO'l>sS9b>4`_:E-_Ot3Wq%T;K1ba$eD66eDJnbWbk]FC*[?,qXWd^fL`Ba41),b%4\S[9`U
%4ek:V'XCKb>?Wt[IL)0rfr.1S?M\9_=$t*I,N[P[3eJ7,Vm;%8&Mc?P7'jtsT*NX$>J-+m/ocCO1mGqLp)oe\L6@9ca<tjkM/k^c
%*M@,a_&`]18;'pqr\^Xo;r9pPJc[k_.1@OH1KE(kS"f1jE,7`5,.,88,T!+'+^[*h-'d&X.(]Je,H+MVA>)8[Plf+*nSWOY6nWa:
%>RjTO0+"IE7l$QF@!q1iK'$P]/Tf?2\JWd\dZh/DO#FU>7MK$1BF>&^j&I]ss1O$32M0Q04V.]FC,e2'1dlHh,+diZGWTpNX[N:.
%>De^-M&@[%hDTX.U^bR_%5IV:[OYf`)&Sa'?o>L-j48et,l!XHP@pU=8]#006KCR&aePWGZTL^=dHo6`N-.UEAs:iKFYHSY5Y3$q
%ar6,IPuM3;V.<=Y9q'2*2G$n/r#?4TD$QUK#+fNHr.H>p@pW^l5T+<!6mMqL1fOT%X7e;L:aJZ+[r,l;!IdKo1>nTNC!C<\RPun8
%cF@LL?'f-_d&(M\F-i`1Dq+.lc+q`$4eoAUe4EuSTuhC[PqCEGaAk$R?`QTW0$J!pP&+*CCIWli-qnDG4#!TN`QjdjTSTc\C]4ai
%^nPLV@%'bm@-q*?^j)A,m@;k^kWP0k]n?tVYQQe*HNN,(QuW6^,/=_^)sW/(6d?%-(W6uSDmU%].@:i>/=Z^ba>/jV@N>k/!g%tK
%bk.ff2sq(iCfO%_g7O$p![cDfG!FjXnZeoQ/TE?$$1XZ35"nPAB=]+uNL@BFTd1:?KC!c7:DK+?0536a)jj/C9;Qt-+RYM/;lr1X
%Bd3PF)CDFflq$a=SRVq60WC!o0TMqWc[daRQ_oSO,#*jq0d3oF<(.fb,jV^QC?`XsGohOdp_>WPmPHshX^grU_6U-fWutiiXL@Hq
%NJ+@.:Qp/M1m6OB[i;>))u4rBR0<-9-9eR^;bR=Km6#dP"Uc8sa64njd,KREQI;*W@e<Jg`mfuH:UOU@iKu*sUh<4i<\Y</1Lrre
%s!kp;2u8FQ'^SF`c1*pMd-I]DT-\?q<c2;D?r,+L\oE'JS'lF&-N`'03=mWmQQ0dE#IK[\o:(J_C;_2&EL+_4G`MqmL</W$l9[k3
%8B@p51cfZb3.0n8SJTCBlEZ61K1sjt*W9(WRc"1?[Y)jrMe@"&b-\IEJMY9W9aWhsZB/q`%X&A7VjieYW[*U3_r%L5[lp'o3J4ed
%:0c"V>t`s1j+*f_#NI,^'AFdY,B&W*lJ+7ln^5dWc=KP*X9#7dUcMGfinKtj]9R=\Kg3M&K`pdXfMV0$3"Y5'BP?&0$Oo[q,S_EA
%G]_u@m>-XQ*\q5F=c:?X#W6pA>/@l4L86(Ek][3)fdKal:.#\_Fb&+WjCr$l!RtWcs3Y'b8&]aAJA3KD^!15QP6XBsCWS@d"d0Dt
%o)E!r/fh$pi=?K?OO).qXe8"H/15Kbd;29n82^.9Nt;qr[hOo*B[e^D"a4B7qa;!@Y.>d:80t"gdH-qtiae#_X_q6^PWT>K:_5Kb
%"go>l.MCZk*C@fRbg:YlVSuh+;]Kf2Bda=+R$E-#e:4M?*R)cT<oDbr6"Wee4\19o'_;\YA/3/52)M^HiRjLjJhd>uCc`K%iX,M7
%L4"g^JIehLlQ]m9W`VEGS_^*<F6]b,o)fAdlqcX]ZEd/,mi(2]KB5O1'hOi33)GY*(b>nq'M'm-!%#$C)PLR'96mS_atXXs5snLu
%24HbCSX"&Qb6.AN3>b[aEWptBb0n[5IfWO0N>lFQ2@9HkEtraA/+(/qi#\Ok@We/QF6;)c9Ld]KOI"T#F]4dgBKq($j/669Q9qR_
%4J0oEn*o^`m[eEgX<<4Z@W\mt0K,)2llYh&];5ZTo+HtEm?c.]?/'pD<O+&pN>*NG5*b^@3\JNOaREa,ke[ReY]4;8>0;r5J/PVL
%[]IqUTOh8ikeb6]E3'0R*+ue3<FTbhnqJG#eDRtmpT$;-S:<$9"[F$n<:&J!;GFE),rJm=UoZ*q-2U1dNfe#2!np7e_]'VF8Akmf
%iLbu>K4BhHG.p#*H+!$u`&2PF%noe$/!Fe2`miT;@7<=4]%Bupku&lKJ[G+XM.8,6Sj@HaAp%j67^dMZS3X-'l@o_&*$Uk`E`cs!
%G=fpQ!o@YA89De;_Lfo3)\"?`e3]>2Z,&A7W:2::1Dr"oXA'l'QI\XL6*WOB7M.o*+Iq&fZVq0doT_+YS4(PB(a61PAm"n0/mLo,
%%J(fuc0'K8'Hu")TI%S^X"Go#gD`_*h%SOs[8;_iZHQm>d)mq]]3gb[:q5%P-&$>bV@\]3b&2.;WBsUgK>pptM$t(.0qfn-^t^Af
%_^E2Q>AA1U>Qci7XEM\sgBN>U@?Q0KdL(uNk?_(,4iq8tA"lSoSgfI,b;Z1Hj@Fso'aR)*PW+Hd\#N*>"5EH._1=2`"q\_cb%hTZ
%>^T4"9rl-R<7DnFDrAHA_:DF*I!//;H(&]:&[>S)qk+[--Um,DT*3!aSg4Itb1KgO&DaR)%LL<Pc.km,I!2#J97)jsf=Z=$X"88L
%l:/')VXSq1]5Ums6,P/L72@M\UnKYCnmO+u;SbtV!i"f#Q75dm6qA7N43n%<7a@k=p9E2:_FJ<S7"*T3+2?9cADNo>0bT,or(bT[
%17"1n#TRQH`7k$a,Sa$`ggicl&1FMmj$\L3PcVgaQ%bDB3BH7"O!fJ>X=.!0"k':0"d5_dTUJBo6<h?s2[Ej'Id=j35iX]T<F4[,
%Lijle@P.+#EgEbbeIeZ?j0#UGX\;\*.6s&L%=Ap4d89=>9?@lX6*jd%M,P:F/O^lBQ[h@.k;oj&_UK]X3Tk3<(@S+3KOY_-?kHi<
%EsPFk`er37*>+n0#/Lm\HbgX\MZh[-RqIq*l3,:*/j9kq>?,/#=o4H^5uOjG-\&?_6FS-67reo=C?pbFOk4mH`4PL^R$bfXUn6Lq
%8r-bkb(*M4o^oa?duf9Cb\a+hcJ]C-G*:+YW-PToab#N>8!]Rc\/i5hZ(St:!nlhWZF2(qRfi"PO-(h`"b*;a6q3Yd:@'p9ZR<%`
%>kBLg]6\A1rnJe@b#U"t95']3hPY252KD,*D,uML8FkQ?R79Y=Q+/suJd5b"fmoVJ0],<n'DfYH0'mj#q6#AS$eP]-J$d[#D,&Cl
%DBgHK%'-.@r,.uiEcZ5HmC)AIEIiY=[?VCB^G`k@[^!,GP8_PjgbT??.-(jN/_f7VQTTNLnd6!+XKj2qZ8Y*0a@ORUe8:lN)ku3=
%:#gD#Z/a36jD^j[b,L@),:0ZIh"D2,0I%I9p`+iDH%\n5`(Gup"qZBVmj)oB+4mYPLLLNsgTE6)>s#AQB;SZ_-(CDn^ns;Xqb:s/
%.\VotjDRVIC9+%!U3S7^iODKp*D:\"C!?3(-Ukr38_Nl.oY>EV';9$hJOE+uRDoP9Ma/e(3>S1XSfjl]Xq9$=-&9Y$2Ps.p=aDCW
%#TB4T_PbDJWAsjscsWrOJKSusZ-.%m":dhmEZAZ\raq7iL4C#LEFQffA(#>GQisE):a=FOhasRfSm9f8OMY_VAR@^*!M?K8!]ST"
%=u-\L'lc`s+tks-Mmaug]uA3j2;_@QEaUaH%K[P?:4U@j$^_f2ZN`)9?-%<->8C-b-2*l):(f/G,eK4)L+T8<]9T2Ik2g#%imlsS
%A[EY>at=7r8@e$p$.l/41DTs08HgX$g)lYPi]&O?'XA"T2c+)h9#YWN0<30)FQaq6>$D&kip+_p)4qZ48q<1#+Y.)nM`@qL<ua,V
%N0\0-n_(S!X<?Q'!Cm2)c5#;/NTD4uF+s5g%;Y<-BBD*`/>Cqq2LI^59.`LjEh#V"SB*RfZJ:9M;Ijqsr)+da[Z+gigZWTnTI!]0
%@5>XN.+k&&8]K;A/4i877-(K;a'KW*U\"&t)L%ptL[8(*i?'2HSo`Hf()n,u]abYqm?PW@7%Ei'7V<;^1LB^Z_KCQK3@gj/i<1?]
%<j%Ws=IF!ROXO=oa1:cRGYfa]nsrlAP;_`Y<sLB'EWeX'_]^:T>G?a<909[R2W#-6<E7'7C)QKQ&AFm\jV0Jho&RD0OA_#hj.do4
%1<VGn*+:!H#XWGT2[R2:$\_k/RDi8NroI1D1#hJ`M9%h_\4tfF+Rq[(ErQY.Co-?[%3fA?540\^PN=;qI!#&rT_an00k@\+6X_E6
%8(/bXk.7db0H;as+Au^'S.o^O.U-:Gk6^FH>U@FD?hp58Rai^iKCZBMcp8'Lk>H&"&_(DV#H/Oj<Z/bq)PkCgTG8pC"q2W4X0*."
%*J=Xu,Or,Y"-0?;-j),]e(sX!.&\%6&Ial$RLJk%I6`lqWL4##LOK$rDJ3FNVQ1(C$(MrP-W#kipg_ah+&+!Jg@0i2W"HQ]/KCRi
%?/SIFTe&f<`"=69S7L.e6cnsGl_BFuXX'Gk#*':-.>Eh?&4SdQYWJ#\[E91_:E8coHl$381s?plP>tU@&Z@$OIGYK6';t'ZJjt^g
%j6_T0-PXRq.FVBVR2jdnd[iK1NL>O26Mjki5rI,=Dr&c3Bg;mZ[M8nu2alke>k0?GeA,rr9WiK+#*h@]?:1i\%-VNu7+QFmH2t[T
%9s7*V9K/`+/?qjp+]BN6X+ED'4?>?Uel^JI-r5uKWF.oO_CM/e@OR9`05RKhC&0:\Bg)YJrKS/^5+prCMC.i/!Vf=?,DCmC=>CO5
%;]s>?!;5CVFFFe'Yn#f-/b=T'+?@l2UmK;]]$+@270+=K.8H?0I!.bTSlOu+L=30oXXt&@L><'#eq8rOK5?8b32*!)'B3p:?(L9"
%cnS/#$0,)IgP$gp[j;\/KFq="CKsJo-k%#_9#=DT!`V+HOVB6&W\m>..mV3N8i(2Fcrkr]-kEqoWA5E_ij:B*(`4$YK">bo/K+7r
%1,e)4)GMgOcB_rR*h`"FO9.-J)E8EE\#nFsYS`7]b-G_knBe*cDMTQJ(`Y@N7>3"Sg9dP`gp-\q#FS;nZ%6bJh+Q=tmP$o62QdE+
%FAktiL7M&8L3E^L`hpK=L+:;DFEKko7elLs6X/:cbmVD*ed/;q$)/?D),8hn`!m1mE;=e]1h%c4c?A>`!-46u\F6(U:.KET$8TLB
%Zu2h>+H3!5l:9ukN3h-3[DN6Jk&H[=RjjPoRQ0jI3NP"CW\GV(W2R$od!-[CoF<2pYi4ptCXV'`kVb1T;a,&/]i%n:446mYE!4]W
%g#>90PKsOH"4-;Uff+WrZY9s2X7ca/#VnU-.l^=h'KIq@,eo76kG>!4_ZHtS%ZGETAM"*?N_e<7cJd:'em^Ro#J'nQAus7<UZ]Y:
%i^lq0HA"VmfadB1RtN#^*8Ul9V<\cg(HB+!@gI3`MS%uCI$dsW8Vk@$\S[$b\)r\Za";&3Mb5`<KcHUh,$MoVI"C^m_P+C@8Ac8V
%U#;U!5dLPq$V=e&iE6CU5Hg&c?$Mmn3!!L]1(eXX@>>PRH""]Pm#]:/fJ'pO?:m!=^e"UJ?8[s*<^)o\(`6F"s#\\8<Of2rBmM7,
%;l2)ci>$91#3VM>r20dV:fT+k'?-%;[n?J_'$O#1Ger;>5fusG$7B-?s-UgadU6qT!g7(RT#ZVQR'^*"k7u:d_Z]!,rP1`sefk`]
%JADU'6]E)^LkMIZM@ei(1<<'7$e80.i[P3'@?cmfH]I;ii0br#`bKQKRI`4GA^L_%;j"@qa6ToYH89,JSI4Dt=8F$bE5@'9of%S'
%6f[f(l0^l_W3q#?,,VKFXWB_9X`@(ICn.%tg/8_,*\RuhTghd^V`<C:jTM<;\PCet-H=R/(r>^!0c$3*[WgO&a]u\^T))0V.+oI^
%iT4iQQEs#B>GZnpH+P<lFZ_j_EBr6MdO_fJ*$!6_%1Ek=R3FtSoo1f!S3M^QSX5>[C>k0^iOc"!mF6VsALaIg:El_G(&7rXr&)h<
%jN(]^L>F2`+L<R%A7=lb7_4/1aKu`r4m%AR)'Ua2$5Y!7Kikk$8Pq$DDWNn(ES_I9VhiG7E-)faKQ,WHX\rW0\#LD^kM`hV,9']V
%Teo;C_o+nX\98ACWhrNoBFHQL&uq5WpFK[*+@K[iQ$nre5*4d1(V<5Ogd]Z'Oc'haK%sYsE.(kB\u^e3d6p>gKYYlq:ekOF0081s
%$5oT%;4RXmk;>>!*1A-iefcQ5[fO`bG(tq!bt''8Js;an2'gM>Ku-LF%!A0(N;&X\.72)W"<H5k<q3Y>[BPh]VNfP1.pk('A`InV
%A?'H5[G2)n4sLg\ceYHL]ubTid64HJK6<A&ND!q<m3*f,'K\k#$K\'?0LQ[mDBdq+CYQ0uWrYF0<b$pqo!?BjV6P@a:G\IIXG1Ea
%M(k0#=^fF!U%)<'?HH9E!68+'?p#GKDL<XBBSiZ-[^V>j?7I)qGZn3-J$6u!<fgliEo'BFo16KnEOV`c)6^2`KqY'UA[g*^X)`S_
%@T,iV+80o'VOV"&1hb`DBI!\?(h9YH`H7H+U<u=SotXGMTWB+8kqS+:MC"f!F"sCU%MB@oYR29n150*7Gp\=1"^E@B)q=Q=PS\k-
%'UfPHZ5$"9ZFl<8a!5>8%[7s-b;Eti&<#!!Fr2Jc!i*siEZB&`eNoq+]tbssfS$maZf*dsSM#?Q!c/'n;tD3<Bt8KrlMrpbH#71A
%P=&/o.Q>OZDRaLY8/bh;S\jn,%PqP,\U+oZngG&aU(rco\*J(hk;t-"hQFu^^:eW\)BmqhD1oMs)Jf=`P0_*M9mf;??`-J)AC5J3
%0LhFLg*&5GE05QTN5Pd`^=Z5h[HS)PY1Ih^j:g+W04_AjdQE]@bBk6T>.2>i:$^#C.C4Tie4W+P`T",7D)r[m=A$JK8Rj$:Y4DD9
%=S$Qda;8LS/8P\'/$T4+940Mq#l$k6T,U+faZO0YgeEof[#L8_q-Lo/8o60uXX.t^%2-]ZRrmeo-JZ8ZD&O[VIEcr,X<HBe6N/?:
%IUZ"q0FCm7N@#p:-!#Ls1)^i=.X=I@RqUGZ[msCom4\N$aKn"TC0%QtO__AlMGe<dW[2uSH`d??k,R589hPlRrLGSq=hcVF^$VN$
%adaTDQ*nlMjId>Tp3o-l&XM"k+[<H!I^r)+Hl%W7e>*"WT,*^pb,=/G$tFQs=K"5?)p((`hF(8bYc(7WfP>61@?BGMR`:,q%.F!G
%VqD$J1:_bQQT0".XJ/Q>C$o"nMo%cAoVSj<Q8i()[GsqQS!(nhBENh.AqAH,hL(T<Ln$N%\!U"'!Zm-AG[^D\a/abe.en$$/pq"7
%q!(Q*cARrLVQI![:7mde;n<o,NO?iNXWP?fKXj!,c>h7KYnGZTO?\;-?^L3K)k10"7CfDb*N>pC>F_[0<#3Tccos-Dm>Q%jGA^tQ
%:MdM1X?,61U>n7Or8cFVWj=O+k;m1lR>6U2V:NH,F"tSbqPmGlB&Y*ATom?"k%mm;ROTXf+pe<GeOsK^&145RoiMTum06<6^2=9l
%=-DV,&B5DF[\oiAQq-WRG%K^o"%`L7XiI#iRh;1-!Lkfr(.1!6e7kp[,VsXKVCg2PM]Id+S<#%E%uejjj`#;gC!E0I_Y69?(A#Ol
%j)"83G7eM6Nb^9_CCPAm9-Q94?7@7K+S!HhL9S*an+bLTrfi?:?eM_`CaPtuQU-(\Xi/:m&nh)5KYXl5(S4`I!6U-^^aO(OkG#kt
%l(HDV0=af;QOlt;UmIL_R0+ih,91l8=`WI:jM7ZQ]CE=r#;MY!UR^^i;RtA]g.'H=7c-?C"Q`3be+#D`"D^W8jI%%0@%?\]]PX_7
%9<LS]7jIRUXQeM%bmnKM^*6l:0&>!V;'8nY\Bfc5NW?1rE@h5Q<6/SH3V;W'6Ws5*:(eJrKoP!nF9/37p!>ss7i-n75$iBb9iG&I
%QmqYnP*HB3PB]_%6L-$:V*LJ!&*<+ZE2`n"c9,r@jZl1G:rtR1f<B#f/3%_m'_NE<Sj8>h$tF[ts-8F0lB9[^\UlPnSQ/+P:PDW#
%O0<'$%L,$lL["C7n[[FKKW5."crUY#D4s9,/J'aN-e]YhC/?l2e51MYalpn2@'=(!lIZcbk&lg,a.@S[iRh'r_srB!TV8m)PNfLZ
%mLkmZSU)cA*gHua1Ja"R;U[r*r:mf\l<83+V.b1k,DhiR8OL<c)I2!N<]38j'i)\$/_KZpRl3)nPcB]Z[IZAf)+0604A%28*V9j6
%<1uocWWd';C1J]+iTm)bRDWC`VJ6Ln(l"^E;6DF)q&19!U0ojh4f1rfK1=pK%,K:]+X63>E?S_<L<)gEdPbHodpBKoDZ_g?%<Z:&
%B-BOj+X38ik$&9lgH:g<YnNcB%;lTF^t')AC;#`5X,dFp8oebV_+*`<5W'-%[(tsP!`WYXYd#M9,\TlVUT>EgWe#_9HXrMPP/566
%YW)AfiZ'dAm4i]MgS2Q!]C+>,b6l+c7JgW+^o]$qJp'L+ia<g%#&7!9"amd1C.]hS/SW`AN@AgVk_?O"KmX\?elM&*-2cR9$<Nm_
%F^60KR?j&1j<W^nKqYL$Q=21GjTSohh!$eg\tC"QQDN&b$?EbScC\iRqA]Si7T2gMOK>7O[MXunB60\e^EH/U,a0/Z22$Hb8klH^
%F;dDTo@ht5/s\5QD[Uoo0'DGKGge(V>%a#S8o$:Q0l;*R.k=;`0c$_88S!O+6?h\-[NTNkATe*[0;1\#$NZ-A7-T#Yc=b!C/uY!p
%E'_YGLP@VoXu"74M7Acm``nqdbn7B2b68-Y_DLHjYsDHK5Y%,*X%"aIL.l'>L%p:*cF?0S<MlDk%E6Eqk@4rXL2Ns0i2\7NarpJA
%hf!in.en-TUS%\u72gYcnHTKY:lQX0nDA6=^OSO_6g$Iro&8C52`")GLIlMHh8;-U2&mi:8q3TUef=)0R>k]J\.uC3W=*&LV'Q[-
%$;PKW!uY*AK^XmPbY[Fn*V[NS6AQK3%R")Gfjc9W-oL/ABZJ,(oi#G'0rW,#2Y'9I^9K_Reg&OD<F=^+Qr4Qh/ulpO.r%,rrOD'3
%I<-*GORkk8jY4"'dZ.I0glm@+\T`+0gk.7):kbVU\U?%Q5]O!(0Kk+"M02;QhqN$#A12d9/U?.\(SfD&e$p)_FW-pE\q&%d@=5<%
%93&`i3_18=Lui2V!YBtjnUW5GB`q<j"_aH!Cf+WAD).'Iab'<Bb#Ol'%81?T#'9k[nKL4]JKC@(7=29=`?)%Hk_P8i5rE$I`$$-8
%Tf[u>d"-qKaRUaT\f$AubB>Q?>%5)W-u,i]JtWk#`=Hg(W:4+tb.=5a!u>]Qb(4[_<)_pLg^VdY[]/IZ;q\5,rlQNC$('ZrkTGIh
%2KCd50Q]Ys#/=AAiE'&)ghY;j?7g716(*,$MZ\]OW5:5hM7c4WA7;G\UVW7+`\C_^<sh!ETI;e[TE.D=<+58H5-oI[3%N1^?;]M)
%IZjt0!F"!(Q@PYJW\E'[gWJj+'f\[-_#sr/f[\+1PrfKs6r9,6CN9gU(qQCJ_j:9&V0n`M%b7?Jd&9;W[ae*D`i(7M'o":pL9#tX
%CZ09-g-4*k2^;t!&`L=<gA$@92*lY0CY@XqLlY5lrK1=5HlT!MM_BRca_>QsE":=3Woo@=OBBiD`:`->FXQEIr9ff3O=&F&cuH^I
%(]>/\oCnl<plY66><aMcB1u6<h2eM%Du`CnLD`\?c8FdBj[g3+P5)j)8Zqe(=X$tXA/Bga<>L9D<!D_-Jr8NdTCi@S!o$\u-j;a8
%X/aohKJC!D0C4@,ghP@,(1@?(7Mrr7*[.:8Ff!4I)FE)\df^_7*,Qf8Nj@sDKQq/eA5h-NR#0`tK,Z6(.\?uG[D=_P$"2$#5[,$]
%(./sZ(T\>j_.fXU:Ia['A9&Y3JSeeV@<IaDZG+u.#_o"1'*j9^`:8[f<Q%UI=3rh`K0b5(KpB?p;O)8e3_`GkWMsZQY\S$HF(8Dp
%":bM*.O.YCQ^s`mQ'%[F8_KI)0VJgK/TJ[-nd;1b9FqCFBsgXik6P=LFWpqIqAKoK%[]_i8ucgNk5gOZono6uR+dhPkC<i%T%h>%
%#b<[4X#qikVYRTY`n#00affj.[;_/(fOAnqHYVof7f7@GS(SO<aL!_F`nr+N4iS1UENLXZ^iNAa_X4cX$G+fbNGD2/.1N?=)F&_R
%^g70mM(@Yq9p]f/Xk;Wpgeeee2+k(fm5UR:a",$ck_>,"'Vn91mW&QQagb-2[;%0#*ji^+IR[_8XerW9TV8k.ZK9MJFrOZAY9aH.
%NK(QtBq$:k_d:j$;7$TE!_<pU`mGup2EhoL*[5;lB[+ZX\nPlL!$=koZ+H8BJnY@jV%uT99d?kmqW#J-_S&9kdhGM;SjqYVV>#\@
%Flb-sgPB#9M`=V6,4ljR;^doM#ED3qJ4<mc(;+Nga^[+MY/Wgfp)6g7X@;%Y6]34,!]W^h6o0NJ<NR4-!NLdi"N=]8\$q,L8NJKs
%.<)Yg;I6g!1B/8oU>JX8_sVX%)RZ")p?@Y?[jYsOEDj;DLDoE`OpfW."O"kjB`u]AIQHXjZ$t^sE[0<=L\-bRQDc%O_S5f-U+1J'
%M`=%]fds<6aaAroXL1boUclf6B;:UIA>H@[DVVmd#>*<Sg:1:#PO5^g.LJi--t?t"/VGl[Ec.!a(6hoQ7*\/3RaR2%Y.`dsPcdb@
%)3.`nU:=:lm/2AZFBL*9_`6>1cCEnc>i?T-WT2,\h(g2,l?Hm$ZYMQKRuL_q<)uUS6-_pWn?n>aEKUs,KgZXm9[4DL)/!+%IQGJg
%HWI!rOW,0VWFKM24%citQ/UmBP.7M.Vn_B&p,ER5Dkn:aWL,B"g36_AhCYY$B=[(O',8dXju*T+XXcIY&rnFnCq3+iQg8I,IUuSq
%RDW&FFJ<r,Q8U,>-M6"n9]WT.@oGh^1bV"8qd'glh:tR`$4Q+;<[?bil(B!)g+VbcXr,O0,du15OOtaiJ+-1>J^qYY%1so"/*"&B
%"F?n4=>!h(TG+Z`K=2PV`(2[g^(p%sj;O;/b,PquELu:c0Yt?JU*$pb'2hm=j&FYJB&@7_<!h0E2KhQPZRTlC@h%.*2CfgtP`FZl
%P"A(r;@Z7(E92p+\XV'%g3&j)eP(<-c=OQ6#K@h?VZjh#=aKF>&]dFk'%a,4%;/SoAa(hskB#tN6mMBNHdi"4rr$ct58F`WIbKWU
%RW=fW:=)FgdFAJW@c\:c$b!5W-ud#J]cH;r&fG@ARFe?U=cQaO>!6mj2qK,]:Ng+4+0VGZr/Q(oI.K4d0ba-)2&?m"*T:NCn/L?f
%bV6$9OKef%7S^Lq$@=jZf?hTcWVi9TbC46VR_lRU8U<f#417#/T.?b1OP*Z8AK-r1`7N@bm_Cdm.'d04&uD_YU)3K_/6g6BjB(*S
%]tm$:Rn7MRG<EddeOa`C&g\ZA#@h*F!Ac0p/YC3_;\Ud$=?-tBGP?pU19n;_1Hn4"edR`jEfnNs3"<`]?mA-`"KcW'+Mq2PSk.?g
%X?Khj)s3"e5e8sq<_P,i&B"-KPtNj'0[8VjTh\ng*D7jTkiZP:QD:1?lWqfUYhlT'@+_7nHY_8&6b@;]"J8gka:/-t.629u#R0]T
%p`>:p1JDPaE)kLV`b4?H2!16i%\-5Q-CW[J\\oG>=ZpL:fBl((A&;dn!Wo;u3>b%V];0#Qj;4;Y?J27>OAX_r\V$.U_o9_E<M/jk
%B9fm[31*r2b7,!3<ub7.;+/pW@p#/'Bp+hR3`?/KJYa^&;Q%@`&L37"m,1b([OufO*AC]g8oNM8$oJ-p]6LDhW]d8Bclni2RHH!W
%O20Ie/-mXekuJicOqJ%CUD&sR$DH5#M^#J`0oieCjDaWaMO*G5gdbrXaM]h\9,3h&nkKd)#qk!EXPc'n@p(]:*8qe`5:+u^I*Wf<
%a;)=Z$AO_I2&+KKC^F-I7W^T>h0D4h9D2*dKFdkq*.bGo!=VU=QJ&_YrT?;VI#&m[r/JJaao4k3\WkniG<R2fQ3*I`p2bNO!AUo)
%aDmV-;(?Ec7t:tj.kM!Qbl?DROUR2gS2>OeL>>ccd%Z2,D:[@hM%&*Xf71ag`V`c9Z(u?aFt#dMd_\F*PA*4!WXq[?r#N[:L_#Up
%m^5Z0g+\e6SU'&A8?M+lQq>FN58!"V@.(<1em42s6)^n3SjdKH5Hr$ND?rSlmYV$t)((EV!QN)TmIjc]bs.P(lUf\&]+p#^A++dm
%COa3qL57QXb(Th],I8hNAPsdtBKm$c1ufFF6A[aJ*(AuGV5bui$VD?=.W]n&JF-9adD1%,&qg9&O%o0BQBaS8@H9.?IX#.9!8=U[
%B57[]@'Ri/'C_jC]k!MBKPpQNb5`ueWr14ml@:a,]1'f`BogG[>Dao%[n^T]QdTABN1Yd0ZN^Wm/e6cYe?_4`#dGh?9.^6--'B<W
%^T)*Uf[LXOKo9kfF)1dXXHpHPXFo:Q+<@u(oQ#OVcA>5E.F0:-H<Dc3XAr$H9)"EePt7JXLDUAtgMEt;)8T.]]=-,,!%&0lr-52-
%M)*sK+9$rMX]UDPRb=aRn9MNk1!]p9;M-Y5?\;lVJkO#ef[.1K&g.KTbKR[d.2[=K=X<S]P(hd-'),^+l.ifZmR=-ROb1M(Y6Ses
%=TV^tJ4,uJ1YZlq'DEN:da^9Gc'+ilS"_?KAJ`(b9!HGQcc-FU\r&cC*!C45RthHfLjs4U8=nJ8:fqC"k#XWrY:_9>1eH^d>[*eo
%Yg;lr[4a1tKgCajj1d>Wk;U_SPCLmR1+o;5CfHZ;Ndf.+4d@73H4M#ackQ4l-(q:mF@-dtkZ(^T0=_(1phj.?29Vaa0fBQ%k\4l2
%."^ICmh0NGLZ339'S.Yg>YqM3:a1ToLO]>nK&Sg+QENX<#jS'fSS,!11L!P!=,KFfSJ)MRBOK!O2O1CABdhiDiS3fBW[Yhq.tuBD
%BN,"i99P!.CZ[8O4WSVLET];'>M5.+i$A@U;]JM^JuZ)M/d@s&:P*V58`MK=3*qsT76X7>[1IE^'ak+L';.tU_K`\dPCsj3OX#::
%:ugr]glsC,CdL(X`BE9j-1s7%_0%YJ??d198;5;CB[*C&@LS6L7U".nEX,4"Etg4*6u;Y+MHq[S?a>_"0(LO`(/_o/Fo/V"/d)9Y
%5Yiokf't4=D^'QjV3(I7F:?hrNIi>rZXslQ^fA3U!HL:eQIu-n5[c?GGb`/$bOM)GS@6eF#7ZBN9u^gX^0t`OTYEf05cW]A[H%L%
%IL$s(<E>K]M$uZC/Zl`>$biIuTXZ,9gEFG%.PrD[KnC-\8?/Li^L/QgXK=pU!tF?<$RnU])Bu$'NmOKkTU6H8C?Z,Yr#e$i)g"u%
%-9E3mX@?$CYMs,YLl*=l;'09AH"14.95M:)h\HCtQSmf&MZsZ4D:N[pDQ;[c1a=@N!<[4A<[P:/FSjok[Kq-p"&2qJ(5@(Qfesa%
%W]ucc1I]4VfRj+E3+nV-.Pl@DK-*u>CkU&##8%Y6?L?SkisO<O-53;hYf]dUK5Gj,Am-?5ks:FC"fS]62WX*J?7)W)Q=3L@flWm\
%4>k&inZ&:^m1k)2:4]b`H)M:12rbHD@isP;6f)lncFD9IGAp2Z_Mrmq)el.6jWt/&N.MKQ%.=iUG!k5dK:09<</:Vf4rPe=(*":1
%F&o0"RQOMh#r8Io-m#1>,2!;,'_i[r4qrdOh;YO=@:#&_!TuC,q'NeG.Z7#PU,d?m:EQ`DA9D)O;;clE8mYp6_juiJW&W8Bf2g,6
%cO-CQ[f1f?<X4Uq(ccmX)J6AZVS:nb@(ng*(Tjh[2"&NE+WC+?ZU<IJ;dXIbmS-_CGZ<F#Y`EX?Gmk3'BOGE'_BA]h)laIV&eb0[
%A@OrL-_/l,2McA)Y@-^BZeN"U<uq]!7NR&5hW.)1DO:ls%&0=;BVDM;L?>!fQ.FNFL@_H2WNA'7`4#b^jRiUELQrGWmhhbh(SK[q
%a4+M5o%(1K#N1-[W;'2aZM3(jpDSq#6BqW310.6[7o9`#M'.+<!K*U5F\gu%Zuj[MH%@!d9PQYE>WA&`^DgC<cpMe1?QpobFs/MF
%JM77M;@%+?R\LQ*^@g\taZ!a0WI>kDDrt-lm(.(JleZo'$5.Xo5Y%B^ji5Y%fV-%X*_7dAd%BdtVgQ$&!-pDKh]BX*?.BNXF2C<?
%'V..HJ;qXgFW4&<5^4uZ'SfW3BJ<]^7\TCGL^sN$M,W'^&3>P,m#VZ=J"4V9Z*LhX6]IU",PPP?D#E;/'pGG.1^LQYOg\g6^$l4<
%1h[+2ha%r;JFHSbG)cq:r+KpTMHY?YUe#f'ZF#=m`Z&uQGd<k$3fs4I($BfC>2TF)20*ZK5a@.F(28VW/99kp0>UQWVUZe/1`i)`
%&K6:V,#?eR[MT.^s5XlL!n\^?6Q)m-2Y)Zq7V.G@TK4J2>g/>CC#:ek6n+P50pr'BVZ6sTGrc81^P?UIa01]"8qn$ch9^\'0D!i[
%XJ^[=nru>L&kGqd'IKmJm8BGib:#EFr5PW;D\\!5:c14sS'%0X,8=)d/rZJC)?unQ+1PmKVl$<\ELY?p<Vi@?rS+,6VZr763=>%n
%F?o"(H0A=FHj#tm9F_O-$,$UKJ>cd;cr1a"Ke\Mq<j,:fP1'+/$E7e`O2duX;H4ja#nQ]Dg1,3(>`f^W5/Q5_OjQ,*@*1Su'gN?Q
%!n7euY_=6Z%5hhsJmTKM.j[c7e'(!;*m7W8W^VMPr4'2e"<akM8Dm,5eI>N,nKg/IP6PSmg):_(hJM&=#AS:spYF1&MZe5Vq-5(H
%,Sat3BkcSL&Y+7d`%Z`61b#@:l[[:(IcsidP1i*pXW#d32:!e4:4ZBZ!U9t"ke]$n`iI^JU.VO$P_q*L9T#'C6oJ$2A5Rn72a#S_
%G<k>WJ0HJE'Y.2kW+HkV+-Qn6!>Md_5Ws62>8Y91@#'piU>;Xr$9VM46"<mSi07N]IZ,HS)@.,Zfl.Bj66$]u8LYq'hCp"(=!/d@
%2KEsVTK00tA5Y'X6#lib0CiH5,j1U#YiZr\*\sq`p/%h*]^_>!)Hre3)*`?1qbSD*$tFBU:\Z&a\e0Zl4<HVoW+)hF5jhd<=<?KA
%j82J#P62N+V06)E6T7tSLb9_nRE'7Y,#hN4V<fLGi"e%h&49<4Y6EtGTeMdp;q>pCdVupJNscJ0*#-8Th4enX^+)bpE_C/3?Giho
%*59bhAh(+.EC!^`SbA_%0kV.P3q&cnoT^eX_rn6GF2"%dSYU'5g*0RTQk[TidZ)NA#H6]Rea:G:"pkCoj\#hWX@cFg,5WXaB4-8[
%bK;)kW't<#E)G:*YKh0f[$om/_UDe88U2^R2P6r^1ri633=ekkA4?8S',C^W=jXfd]QS\1:nCBD.TSG'F4BZ]-.)*A_%D"1<LfEp
%@s@?E*hsLN976#9Mhb>H87:Ac"T#(Fq#WtOi];dhG#)O]m(ISl&_4+:L2h#QF4DBOH2aoJ(;A$j0Xh^Yj*$^d/l9t*%:=$B?q`m=
%B4&@t#Lf7(.S,\4&W'dI^*Ji:nXq6peb=rqDQ';oGGa]%.o3fGJO5!p]Gs=X`\a?@7N)j(Jm[1J6l7+]Apn2#/JD)f7WbWfQ_<Q+
%&s"p5WD!V"*us9=A*m#l)(<p?-E_Rsqr>b;<1qIL/'$NOBI[Wr(*/19a]q*$dWTEhXV#d3P*a:X\b;s?KO[@S^NA_/YU<$,$0J,a
%-M'gV-(_;8;?[2VPE$O!N\r5H(Xk(0$;!0D@BSu$oh.uum4-Ek:(iURJO(>LqPgD#l(_qeCb3QE2cI;*Erg9cje5L%O#_:GO,E0p
%jhE:5i?/IC'Q;k=3p:*SCQ!k>ORY[U@!,c-P+SPY,dk`)CCmmJq,33UGu?T(B6P:BYOJuC1PW`TKir'Gb3GWCf_Bau@I5I!9<B3<
%<NANoVA#s`FP&-:`q5,tm*mODY[1c%L5o'Ns-4k.)J(4ab5+o13+On=m?Mh\h:5%n`f;-.MbGbWC7h\!eem:jd(g8_iMsQhIH=sD
%)VQN2=C:[IH)&6C+;[&>NG4LdJ/WA$^)Pen\(8RT.++W6c**G/@pO>XU':lYT.]2TAC5A@!!fUqGX7l'pG7CHE`mdG00N:Ic`3n)
%3FY%J<ei?n=,n,"<]7BQSHB?GTSf>?+[s`tO),L;W[X^V$C8+A\K4b$dXi\m"u[nGkK"O=3Wr;qj74e0E)\7.<5_'3%1L/8dZeH/
%&Ju^Tpg2)u:4T@#Ur"edWjil/RK-?.(.R$fSKQ'cZl-V2pnAh><+knn+qLgG#XI[,a!,!o,lU#H^)Ca?2IPR\$4TpVlTk6P7ej&9
%F@3\oC9g<;;\7JpJ9pbf2F!#fdAd2*-7T.+l8lD2c5t+1.P_h!aE%ef1jP`^9[LPp-"3&o,0>H3e&p8&;[qh7/re+AU/!kue)kY(
%!K<"[@eAdSI'a+N&,9-.`",NcLG(Nf,*ad\^sIXe_MdFfqglc6%Fl<N*a`PjXpBJ),MQu96VY:7d"-qg!AkRA^sEP@(u!++Z%p,0
%.P3[TV3$JF=``a!aN?kc4@!>Vf7Fr#*fsuE<_As@LF)X3[=AOc+5\+G4aI[C46&X2^1$F&Sq&GDFKY`1M=]rJ!6.O/CjSkknms)/
%Ub7(\'aM\ncR_h3Gu;Ta,!K*G/H(Ggq1,EZF#P[s*/ODu0D;?!=GV-F%UB''I.0s.S4=A"0L!q\fJJZ@#W=-B3/HSdgt/^-I(=ml
%.2YHig"@3p3XgX>01b,@4\;h;mfdE<6q2bK(;k&AD&gic7LC!^n2=!$)6,F,nN%,:H63VaTWB(NWsgOarJ;h32b'tWoM@N*VJ2go
%L+3U\9dg3J6=Ud#jEkQ@8u[o>=kuo.Trk4L`V/&2bRm;T7Hkn`W2VIm6PY?90fqS<@ue(^Th-CKF$.$OW5<MrR,,7AQm7P"RNlaP
%c<@"/L2%,;@s36W`uK*Fmt.Lkm-o?1h,'(sCDopLrGFP8RE"B_C8Y&pG=*T-"PPr2)M?aP4/%P;h[IskfpDu[p7HJA&-Z&A<1+QY
%:lQWc(#;]o";PM(cuI=+57*cMUXoWpW*0916T;A>1MI$rc(pc(am[Xp$:?cE'[<F&%[otM:1Nom[0@>"DJ4f;dM)r2Udq>nf;129
%L2Q3(RRpEt1m8uO`oq8?[E\i.DJ5AKdM)r2Udq>nf;1?hIGP:$UmX'I5r7bfBl(UT5JLhBF.l6n/#^ILF_SJuH@JjLrQb]Ls3pL&
%4T&GrAYK%I?$Z7V.M^0H`C-=(L\!JM&#WY+ZrYL:gOpN1+gmAUF4DbSEed"Sj;Hun\Kg&RF%o9reIBY<-73Vtf_b=]-,DH*"]DM.
%L)+7].s*E'T__Z^#t:M*(kt?!-:P=42-ufLjS$8nc^G8B5q@452m<i:9q5X:2ERO9P7lYm__9%gC"*]l(8]2LihtcN8@-*!0hj+'
%^nV:d4!k-K3,E-0Y\ZWNB4T/3RL3en<Xhqc.t9o#@4?h!RB%a+bb>.`,)T,*,%ud>iJBja[URH!M"K1dhLQrW/*^jX)R?+>!YE\S
%DBiO5B8KL:.L).G;+OmPGNA_D-#'dPFg+EUR_T%BS8.,!eD4dL%N5jPK`O%8%;fo-2%Se'1bo6)[9?%mOLM6`86e#sbrq`+"EdN^
%]O-<G0R9[cBHL&m)81U-$L#C.GZC,P6m_q%F;<]F9Wq3iMQSE;';156JZ];U-(SJOh9bSW.pe&aRS7AA=tXgB^6hP!B'([:71"mZ
%ELNV`Z@I2De3G+aTXgRg7L2h*-nAJ,(!-/eT>u'#3`&^J^[c`$;uXeXXuu5H/'T,*1g+-Hr).i?h`9r:&F9\8paXlKFW**.;K\<s
%e-lMZ)AAb(AG%4@rk9p09k4<%Ys_I>%?6ODnanrq,)_aTg":(l&Rc`Z&VoheTokH,"61_LgIc>?B^X#O2?n);N/\=`/K_'<PaU64
%Oq5>XS$&6&m/'84A6[D==dIjCYbh"LF7A0B=87f%o0A9oI,>BmR8_YEBMTmLFfK0e\=*(V706imCG2.WN'=/A]J=?cXIu$95ZKa"
%QD^UC4,C08BP>If-`<58EHnP,['Oc^^R*cj:M+RPai[QIbM6iG(bpnjNleF*lL,ZrOt5s9C]rVC5,EdKlfDTOdRj4u'PCq5XuD':
%X+f2Eh:2-1GM;cO`cbctCe(K<X&UFQnYMZS_UU-]W5b,?TW#,"Qgtu=+U-J;'-#P#q&S9Jf-#J<s)[oe]9_e;G2U"6s$Meca@,6o
%(`I$*J4K89a1/GXGiJ`%eflP_.3eJ.?!#]bm9/R4Ypi;>,`:SKW`%F8_iQb2RE.D,m4M?U**j2*6F)M`2kY^GBn9qqf%mDraH>2U
%V`?NG9Z8-G'#]YYA'dQ9^d`)bl%.d>cHS\Fk]K6#5dDupj!FF!2@:,7Dl)6[AB/%!_?%jbFcpfZ)uYU3K;]$799)!lBK+);V^-ZC
%`nN>@iU8<hFZ"B7EZ)ECG'J`iJjTih?RT0/B6O<IYe!%^cEI>M*X]YfW>Y^,MV@k?,nH!0ePIMeb`P_d"[A`1Gl0Q67nsUNj99tV
%+Z)`@1;0c*W"s&:!jOeYYG=uWT\=0Y8FgbJ.l[#,&`p8FSPm%(r=pS+%69?G-PQ@1qDZf;)[es4ThSlu(Pl#UaSK2\]5-8rUjc3K
%HFt+F6XbW5BLRZo$rLdi"p.B%4?ueC5R':n'BZdl:0R'+-o)YAd=V(-!ak)ShU<Tp`TF(4%5^/hMm3V2ZFWjl%*oN*$GfV-?a"QY
%XAouA=:;cK2^q-Ido)QC.%!H'NinrtO*V7N6r*8U`!U;>na&Vu]Wm7#0aH@)3>5crgN%sf'?UbaTp/#m@\FKRNd;@2iE@E,Q;C32
%EbD)15mZRZ-'[oj#q(5GiucejSK[=@f01MDW\Qi<Y?>,SO!R3"Z6*;dfB`'k;6V6Jb!sYZj(G)Ip*<hK9t7_&L-VL+V#)KB.B=tk
%nTM?drR!1)$^Jn?6&^VW(64E.4Qt>(2Q4!'d)%.mk:'RT592SLS-^BC6g#Xa#5N(]==t:$U>6qCl9M#!ZR8DLOcd[_]2?J!I+XL#
%'+G\O^DF!O8$<Iq$;T'*72'1:S0H-a9N.UJg8AuA`6]k,ALIsD)bHS<G%c^S9g!9BN^EZ>bE<1CKPgNtbHB!7fZOu8pn@8UNA&4<
%<At.OcHbWhggsA>l1<&qmI!:6As%hZ,d6n3JRnNM;<\sJBlcC4>L$%Y`6*IbPBiX1N,A:"R2DAM;3cB?T:1\XoF*I9#Do(_?9)uZ
%!0./\Q1,_YFt(s_*rIthRKL2f,7YS+"joRMAGN59okA+)KHTWWjP(Tgr*+X>*CY-t?"^GK9%OIq1jHuk>eY>4X47]dL4flA]%9'e
%l4t6D"FY-"qf]^4C_$[>OknP`qf.LkFgdWHF]mb6G'&O?Yd7UG1@n/'ks"bcZW^5lCtFlpMM^ZXY4?IooJ1>lO!Po5aATBlSaGF\
%/tborTqqJr!FK82Z>]WD81%rR(Thhge7.rRTBHpIHq.W&OfBLTL>#2$:^-t-!Uc-5K%;mKFOm%Sr]Fs^RZUS2>t3\R5RjUUJB<V5
%i(ZfR-^.+==-0$F2e"WjGQ;KWC+ci6c_7noR3]P7b=aaSV@b5>O@Ci]a@N=(>Z/V&)n](NeK?*[,;/s[1ub(@[Gt:^<XXV)?n$au
%04e:\Ma]t,UoJHLqHQio"\'3P#/_]]8#4bf<(6:<4^jSAMWT5h]!sr8m,IZPj:0;n1X8'@8gD7Dgp@a,-VsBg:un>%,(E#='r9ae
%A_6$2E27i;FrCfY6DPo=,f7cFDVmbG[#\_#[p5dj<o4`,WjnX(meTN+RR95j;sH&'=XbLf_uC9:3:EQ^ki$aZ0pTR'CXJ7O5M0N"
%q;P9&42m2Z2&G<aLam61+mWlO6^:#1K:V'kdqCBsqt)+T%B5P].`0+8Q7V:DYV2Hup.<ih"6GQF)W>(%[M0<;-al]^BW,Z.o2-5:
%5*ao/W!_AQG!/69gnMclJ:Q$]3I?p[m7FH4a=U`mRSI3-B=>7Xd#1crm8ZNE_E5mSrZ\3spI\,+s.C01%4gTZBu=sL3F)MMR%uhU
%?#N\TpZak0OT$4KQ.PZMqUI.T`TKX!U#7C`ho2<)Ob(>Z<gS6.468n!:-:f"]&1,XVsGrP8]4?An^M,<`lObCE=B[!Emu>U1D1X5
%YB6n_Z(]k$<W5hd1]_AD!@=J>`9Z(?[.p@R(uhp<L+`A:0P:n<:V,#(MF\r9Jg[%[?9c"IOO-k1p0`B-R]A'?k%gj>Z-.kZqM%2T
%C3pCY6H,1jEuWQ7fB/76'SEcoW#[0c9k:PgF$mg`R`^ktW8N<pCp/f$AWT<#[E]\,Y#5D?d>LkeI79^D43A9:RS6B5;-BB6n"24B
%[7DgsnQ\`D]-g`.ATQ4i4K2)$3UKsLG93?i3;9BKPj!R^i]_e%pR//]8_2U2lOVWNZ`V#DBA#u3L$b^WadheN2t>D"?),MJaBn05
%a&3K6_4ec'[.gQGPG"Or?9C'VNLiY;/6(,TDX6Ml(Rt``ATRnO]@4pTl=S+))#$A1:D0$O(]R=]s.hP[S<7mN6pAMUZQnB&@C1aM
%T<0)O:<Oero*[eUA8m]"(h7r:6k[^k3DU4$\!=aB<_5?7T4-h8Q>1lm[6_Yfghu7QNI?'*a\Ch9Z?CrjKbB;Z!8k$6CV/.>j1(mD
%Tq3iGrZQ"hU">#[AZ"sW&d<-Wg3/.aLeir;f[PH6Yg<^:^<j2`([$4#OjpUh48bm;>Epbpk=sMcfHb!8[Y$4n)U3DIG@Gi]JrqXM
%]R<o5Zi?aiR#;s%4DqCu[$:^\M3?A*E1Sq1OMbL<N"U-afQY.N*L1%!Y^J"Sjj1Z',g9h\@:n%[oGtUQ+A,Dgs6KP(/#FI%+?Pi&
%/?u_GUmje'jY0KhhBLBn+7YA_lLuOk4u4fo4q8Vn]&Z"t/*=C[M[b@!Rkc3WA7EXYnT!$nPrftn6B3fVlT.-4_lZU==).*'oep'>
%Mi9\iM9!,?OQ\RW@EOI=YZ6r#:B?mMG/GRk^D4k0Gh*mCP/c&\rtNVuJ#1!a;VIl;kohhrmk_&unF,1CFPImH>#&/(mbF4s`&7m*
%k8ZteJRla$6I(:PHK3mgXK9_12Xo/,Ral"tRh(+]e$.beH1E1"e>+sY9UEY@=@s(QE[UDaV@dtM5+j0XhXbs`IRX`G0&,Y^A*Za.
%Uek<sh`&SZ9MaEje+BMc<#a[Y@X5a`]e=RJc0YHlpu$"/4]LG[gO4Nte*:,G-4/gklp49pI>3"kOU!5prYaQ>dYW@'BdTCc%k*L\
%lM3MfTAQ>\[E.7k5Y:d0qa<KV%H!#D?0>_0-('J6)uK\cfPaX0<db\#D7Nf[-E1Pq<iS6s>-r[r#hojQQoO]/ZNbiQct(s6M<$^W
%WHCD7;:JW`Ie9UM3)=B98Jnj1n7%VQXq&/;SK)&sk#D<,OVqA7Qt9Dg.72@@F/?R&&TkpX22C/Q%%AVC$s$,JA'H_+q:JPZ3;64n
%:puKkf\X3WcKHJ:rOI.MHSa6BjM6C.[[W5NVQ$G0@i6YYKfMg[X3Yb7GDp<UE.d*h*03GU^c\I_+nf?!,VsBK<h%IpW]H;@9V(mr
%Qd50,/k&Jdj2ecIRG<i0hmu;s&(=o#j_Uk<Nn3;k=#0<7edA('ET[Tke^Jl?BM?,0:WIbu3b:%db<UcWYr'G^]Zp'U\bgnp'9*F:
%iApoJ9:D>4-i0&ohRAQ.@mBT5S5u4PVW%%Dose)2G#qNHk0Bc9(;mhDO&<4#+M^pdClHR4AZL6!CQi/[a\cPcm">%\T4'c&[;&m&
%T4'o*M9%'3,guMcJFZ75T"h&0@h[rc6RntoSZ<_X[*of>N=;g*he`ISDPIOOa('Q7M@3sO<hU0UDI[qtCH;FE1Yrj!Jsd):aZDQ\
%2g[/KC08o5DCCLP4@cjO,J(.8l7=)AHL<K9BZLTddV"g@o&+b\m9U,sYe."#9td?j\#a9A+&Q<$RUj7/jea44h4k]^7N"Sk;FsoO
%do"W&0$m]97HEIs"U`FfHU@;`SukngIjdaPDY+40Q5t)h(I@?0ZeP,.bC<">;_agTp=uu28#9;C\3Ru6M`XCu3@\>Y;FoUM@br/r
%)>7onF%'UPJ(e7#p=I=]$_'o=HZSZL/S0X7jJN\67dbK"/Y^rUr7^3t)D<>5eG5UFee2R6V#$'/+AZ)QqmO+t4Mbs.L-IuT16EPs
%eU!2(qNkL18j+cl`sdbBE1:_m:n=VH3,1oqMrUoMV@8r7fMYGuVrqIn2N^+s)'`2J?gf64%rLS!ofM!_7<a[d[KWkpPcNIgWd;-6
%Hu1PY0mYmX*]&Y#J=23H$05@!2U\3[Ri\=e?eZoTD/^C<Sn8p:j9*UomOfq>Sg`]eoN?;n<AckB_ch!T81&$;:`IWqO@uE?>8n&F
%9fjeD]1=+VBiTM<moC,![VK/;/-UG?:i>VhOt^dE?tXSDU^fQbrk;gW'?uM>[G,h9_,?kO15E_h;Q&-OD.joLGU3_q>BuBrl44Ef
%%/ZX*BjJUTl*u`(4%[K$efAp'(J3o=ZgYVF]r,A'bqD`+@"_gM=S(8*,rt]&0*Y9"G_&WJ"&(!>ZGEamG%>KN<`pH4<%DT/pq":5
%/&P[P+s12?o%.s[5^]m41K._aYt]>BhS=iMUn"W'?40etE=o[5Z"'E&lknO8XEHb%GbHpV-n4jKT`4qF2JDk'`LCr"\k9$)(U6/t
%YH=9ns(cFh&cN8kIiiXUbi67ARN[VNjCj/)=Q6t74.Ogo:(;I`\]*!K^3J]TWdV@*qTjRL]G\_JUT]+,:hdY9_6*Zc#B/F-(c*I2
%D[F?34@gL6Dr\T/*NERdL]2YUm]-fSCkjb1Qbt@%KJ&,RL0SbkP5k4DOS>.R0$,cLlNnmk\KVo9m2uc9V)eNMhugV_pg+KU<_:,0
%Sf]G4J@bj_#FT(!G6/lE7:K?t&?@,is2^@qg>"n<WH'3Tg<b5MA7SBn"&(QDamN+e>=hZ?NcK&ZU:3%unp9%]I"7d-5ElJ!GQ4Z-
%=#@rq%16g\)t=Iq9[h6S5/9p(RZ)6/Iqq(+f9Qa*-A]_JG\^GU.rVQ0o%GS09V.&fJG9'BbG3BVJ)'q6WKdU)MQRWg!#(L.c[2^n
%F*jqtDrdJ1#C(/ec$`4dp6M$^m4CE42;pqe^pfVJEZLVbC:MCYKPtlOm<lJOn0ckFr3cP.q*4B.H#%Q>[oUI&6X@/Z+s12?EbcD6
%jrXB4eHt,:4Y2]X7fF(f7../u)H(TooiR>'4LZ[F0=62#`-7T*r,ql;I"3:?Aa$8@EPIRXDX/Q3^eWq@A4Q(bPjWB`pspjVMcQtI
%Yt=7C9LSlTjBMY./c/_qF0!8Y1\LZZQ&JV7f.?RJcjYi=Y&'=K'hS1RVP\fRf@JZ1+u98&)%2.T:8<5@6<r6l2eXc=U/BX'L7p@=
%/Rp8A.2VG+SYW/(h!TJV0Z2fL-.&bXWcu8*>IT22>.Je`N0]$<rYC3&lQIL/E2K/b#'%*lc1=:MB+2Imrj<ha>,(Sl9!YLOT,eAs
%4$i8`ro]N9*,CpLf$!;AE`i6Cgmc98:_Eo16X&s<5q&U8*C:A$*])#Z)qae*GlRa#?;$mW<1CnWZt'ZEQ^3VrP/)YbUjh79&*\[[
%m:DCCSJ]8;g#-G7Rt`M7-enfi;&9G6^aQjn2\D09PYFO_)SDoZb.pb/X$6]M1PT3qG7fC/,U"#Y7hOR7Lh"C3ni!q:VGeR60<;OG
%Fm6W86[fO$4XE=$l2<Dq^]KKZ?jc?N%3ffcMR&1eO5Eh"nR#J,[&r.1(RoWEG##^^RUlrE:bB#.lR\\AkH%65PqT8qWKgQTTfd(A
%JY\u+"$ADH$GT?qJIY/gJWH1dd'm%`eQ`s`iTSQ1MZX'5V[eH=V?6PDg8P`KXZVl46V8[>[%_^koW9uSNPY;Hl:$G3)-.LF[`d'o
%A)JT\e>`%;F:Ma2PbC4d#Q[<S>+-%UUa'!p[;I)K\X=Us@u/).nK9f[,iKA7S+HLk"Pk+qj&OsqpE_YbP^I?F&os4jcRHN%2j)<o
%c<=9EWA'M5CgbU%"*4*Mqi(`gjug"Oe0T2">O.]s\Qda2eKXehaX];"SEe!N>&D>?KR(Kt/=cN)CqJ6]K_s[fV6hC+!!pT^OEa<Y
%fkeJd$PHJE#;&sT0V+Lb:n#2k'LNK/TS]G=:%A@ZeQU7sZ[IS:+^K.G8ZRfE#%!Tdo+Y>r12If=NKVq&O@'N4LU0[=826;)jGY*S
%AZ'71YV0QIj_c7mNr(SXLD?i/)X8cn7&jIpYHoeA"n)gs<7XsU%o4_:MDe5Ba"u4%G[>jbB[VBm8AU'b\osE&>6885C4,ILB[sa>
%H!n',i$\uF;g:h,-/b4$U.`I^AF4fn1?r5;Km1HjepF^A+Q6FUcrT)_WM.@#CCR:&b+i=%q<$+\%?D!iaUpqc&j"]eEiT_scE`2a
%J"<;^6ZHk&&IBk3<"G0^WHQ2k%u-iN,>X`_g_d"rh\]d-m#pt"4rc^8Bd6+ZO+sEn5pA8"na*G@YTXLh\%l55c\A<s<FR+_0N(FR
%T2#%EBuR2=TIeQjV6Hir"bf0=Z/)[e603%^@@h*R;!-`i[q/n$U7&PqXV<S.?A$<PnIh0UC)hV,>\6bo2.]^Q;*P^6Y&@%DY9!(-
%aCj'6;g"Wt0BuhTUSQkagUBs"lp+cC,e;!t9J$QEnLCb>a\.67TjkoUj4qJ)6/KJ-,9p;TXeacm>!D,,!#gM!RI40P\A'8k>j?V"
%><C+oUke<b"u0VLSWQq->5^g)'cg'a:9KU=M>0uNG/9.tPJ^[7nT\brc]W9Jn]p3-Epl/?%aC?"R8e-jJNm0:=6O".8$<B(E*kEo
%fI=J.7,b=.T)gt&oM`[Z*bsJ^`YNdjg/(bg[BsR7i>j3Oo8u?R8n32fo<Zt%"`[&9%7N/)8`(u0UI='D<Frnkpcp"qVkc-$-=EP%
%"<cT8ZLi$&i>j3O2?>'5@l[/t>8d!D8*WFI34qjA@>*qi=UdZQ<mAVUk(TO%2X1r;\^GFt7i&uGRIZP=-^6g5Ze_mMF,8RnF>:;H
%GrM>nrF/WCY.DUYaV;ND>iHbNMCZqc>t9U>dPcnOA"dO7Iq'[H<o)_ZgGI"D:FcIS5(pXum,T/?7`3WqTT`U9GkQ?&7p,aA/oM3u
%%;T@gT,9t14JFn)@p.A`lpIbELO5&GL)3C`VdFTVm]rV)GG:TSf8&JY"PUo4Uj(Ys2&VLg1kH[[_c<3^8X&#En9D(+9e6%]+(A%;
%5,HBMPt3_9VA)U;85:Di-In`B-hr/4j'7dros=^e0>2.[_$noB6_=poq4oe`.Z(%MLu^FV@?[[9E+k^rZE?i,$UgFRKQ#O0(0Zf>
%5;Y<MpjI:qX$EgV0W+<I5iYJ>UEg=YEd!saeTR&6\`0l!cRM5.BN[)A#uV>-NO)@NS-(e_]6QVDS@;*mAC_j&g@'%L,ot40`fs+\
%e[u%5QqD[sBD[3)s#t<7U<"bK=\J9OV=-._D?b53O`-`E/5XUmeHKq0p+tD6+Uc^+LGnKBCUQ0aNTkbK'P!sTS+VN1`8]!sA4m!'
%[3HYlp_AaG3TEb^Hc/k&DTqobiZ>C*01KV>P,(X6o:ohbRT<;;coGVZQor):BS2<JcUXr-LZ0,JfL8X<Oe`NMGeY</0Pa<n(-h7X
%MT-4E>bSLiFp60T=o4l#a(*EI3Z\YCa\lq7ZIC5)3rD$PB_mEQ)g52tcrGcR=+/,A6<<t<=b<mZqP9o/&XF^@3@ptI70^jLn>5cs
%XT33^]-Wqt1^;>s40I%8N7:E+)B`h4fYTla$D3DAFH?<Fj3IqC-;DH4J*?KA!8UA@2F'X\l_Tpt(^-W`RCI8(L(V-<5?Oh(3B8JI
%bJo7KY]Y+DBJ'bX^u[[qH;jqX`@,jiA]+WY(JbN`aMi).2&hKS%=QHYe=N!"%g5);$V5g`!@`\K*Ne?f5n]gf7S3q8^M&B"Qt2G-
%=IEeJB:S%XXl=,SQN:W]OH[1%XlkL34N%:3Jn(p?@(`^W_qo?7^rdjNJG&A$7nKo966p[mp@cNfKWOgu0l)PkH8giqhLJg"4*+HR
%>LA9!+_Xf27Q47NG<ASu.H</DneZ=k7Ie58lZI$e0N1,;SE$2`>brmFJs0V=k3"DN1qL?Hi679;7Y53I2F02g9t5hfOG!U_l-#/(
%ogZ7Vdk\%5MT5S;]rC;=$KqmB$KL<T5KV\%Z]2,cc]c7,l9cAE.L7`*,i)mJj[I$bV6MYi&3E9P8BP\W6NcU6(e54H$?rE]jR@_A
%FmCsPK2.a.5mk&t)6:&Js$U_>h[s/pL*Z_tNZ)pa]^TUPNp"DYV((bLfq'O1Miqjd(on*u"Q+V&I64eU9^9tp6sZ_sheXX/;M5.)
%"<B^Aee=\h(*_YeZ#0D2k=g.Gq;`.Y!iSTAIN^[:I6h4"ZuO.:>n.G@Kj4O[F>SiB#;ega/k+);Z]8^+S>KfK2#J11Pr^6a0)_]l
%=Dd>/KM`h,+k4E@=h>9!s*^)H-j3`?-^r8ZC!1g55<,0c?8^d;Drc+677.d]6!d%+SF;RVBB]'kL%-0i,C?]^fZ46J;2.J.*>O]o
%TeR7.)b";K#W?j48/<="HsJ%t@.+.glIk'X+V'?.^Kt'5URi%IXE_[9ZAeWoJUX78c\n-a_R)/N@<quSK1leX695TJi?r?1_0`DD
%3Z1N`CG8^Ce6e(SWqt;>Xb36HCXli\lD,e_Y/:42jAg^qV6L]ah#N3aWWV7nRB?fAitk%CL?9F=U?"O(X_fJL<b1nR#hTSQT'"XE
%Ec-uOqhg:kJO'qp#W9/r9\*SIaRQ!fSKP#3H-P!_r#9tJ<R<kHf1plo0RiN#!Egh3]O$QUCePE5b/(/0JZ0MO09![@'SN_H:49%E
%#(CaB>RCNjI`,O=\@#d+q0Ca,J>Qu--6%uN'VP.iHcUr:i]WrP5KJ;8;nR[CLV'<J(d"Jg-LXorFJtT$5S*!l2S,_61"E10S8m>0
%p_8\#m5[]WHJXNZ4k>C6F^Ce+jI&,n5nX=s4eo;ADW63gP[-BWEea]cLO:4:JB96):U]/VUZ5LdX>ain3s&C%dKp>FZlt\0n1j>M
%$q]S=%Gi?%e@:"+Q7^'([5oK/oX+4Y5(m*F6Xjd5;6tpNrg]MQimCu%BE'JFbQO`,X7N;^;!F(;0!oh`%H4R21th"Ze1=@JRl*`c
%MhE9Ei=F>0'K:%8nR+=;q/^;O'9D#HZV3Vf5%q#MS/;UcDU.i#`s\]N(h#"1pErBrM*O2uZ24^d?,l\d7u7:35E:XN4^1Z9O%@'J
%&!db`4"g+U7h#211MW(EjJMiQ]-QT;*]Roh5&@ggM&\h2/tnIp-b$\Wln8Z+rKRLKNpHOhQT%li'^)%r6"5KP_blUkVIoDBc+9Q<
%A/.19hEDoh)p1X1+<Cq]NBa-q47V[>$Ta#@oB*<N7k#0sga&Fe(2BZC/9gh!68o83^*%Fk+&ESbip7]A76QP.Nj9(cGE#adl*.hL
%)j/O@-6Cf9,Z6>b)@IJ:;=<;HE.:,3$E&2Ogfgb&Sa:[i`I0&mGtlU$dT9p"MXQsN]*4nPAPRaC)TBQa/#AOi'_VuApP-[sV&WcB
%ASC<A%%==Ke7(Con!=NIZ5V]k,12+GX?-6]W]EV47_`QBWY&lp&Y;9;APto5nfABVH7BL_?=$`W73n0Qr<14e-,P=]Rj!E/HMt>A
%kjF?AX$(j";h='=O%>"SV"7?WMDac'\FF]V3r)RM\.iVZ)/u8ER($uGU`Stk\j0lCHgm'@IT_G]!Z34P$O4=VIH=kDY-MDSW6*L'
%p)P0_"3Zc<RleH.c&irR/35#&oq@po(DbnO,B?&Fc-7OY\%EP;eGTop7M+t\KI2Q;@qtW%TP!GMJZVQX5gY9ldtWd>M]E[s^;QZF
%Z1&5pN@6+(UFdB5]d\Rf1b-Far._gfL;:oE"nr/:3UGPJ3?6##-#@l4Wl;r&ieUp\&.J]7Vj9.^E_DtmG$49a9?S44p>H=qT0S/Y
%k!=JcMKF`5k($jhK^!dtYu_a.Hd\&45p=D$:HV0?:fHbBhOhj>_s#'QJb@5`Vso^%Kb[#_ZaA/9?_OkG@@>>nd>QDWP_k_ui>lJ:
%0<`.&T0hnt'IHqYef^W%duIan_XjKKbsLe3hGL/S#,+_'9[o#)K@#\4C8!pqBS"^gkW=KBPUS`.1mSDHf\,A57/s&nS+A@A\L)W>
%-sW#bl4i)PU4CK#5''1=Xl3m?BakiOZ28K"Km/b09F[lBIL4Ce!(F:(!-efIJXP`@BT]A/2Y2jD43A8g*5f:)oFJ?]b.Uh\WYiDd
%/Wr]AkV!;3-r[Y=m'oW433>"O##/i&r7E#TPei(58g-VoI\T_ilnJVHf]PnsG7R'%'*aNsMoaimM0FGaG=)(A7!XF!I5h]=9crHW
%*9),^>mrd)eW"3kaYAO\lH=l*U5jFlN(,pc>Lt)@oATrd=,nJ."&E/i/nS&ELb"*g1pZ5)ndf_=YYIr6%WT+6:'R8ZGN7*.YC0K.
%W3.MFq+:KSD\.$n0*\7N"tn-h4$Ou(S33LRfjJD_7-:"rQIgo4@<!SgcCroBXIk=9g<j\'n^r.W:osAd#+qW7kJj05^%9/pq$kr2
%CD7Pla11?KrHD96c,g*FXG37i0e3J[5!\_508G-OWF&W;QTC$]\4s;t5DT.%D.9XWD#0YD-$!EPHfR6;U*kFtCIcktO`rh\e"<)[
%'<$Wm/i9:=;-r,\+jC,W_AWma.)?JtN2#-,?>^<JE!3d36^87eJRjh/;-\:o9,5g`EoDb&`YS6VrDX#tLtJ1HcV8)N[:Kdq16TM8
%//BXkicZMNM`KeE4mb>>W$=0@Oj3UT)c=O4alfl07CAOs:mb3aa)6!@.uK496K7&'V'[4BjhS.MXKi#n%I'!^,E/B$h&@XH)k_p8
%FKhL,T*>W=<SaEV34+ljluHhkQTr8K9hZmFYuS/Ect2+7MmDC`!<Z43pb2p3#m44mkJj=AMcC2p+DaX)ZKo.>#Xo,^ciH.)(Q)*8
%=\%j=e#sQ/D;6Emq_[Q!OVQ=]C8ZoD_Ve#FnfiJ&U2h=*_(Qiqmm+WbTWFD06p\)%nLf@DY[s8^#80YME$-H/D+upA)WX7fAIppG
%B9s<Q!(G'Mp;5fGnJ&*$/U.T1cJeLCY'hEi[AFN/'J2QuD.,:lOT9YMPpBr$SdBuloZ;EePqLH<eL4$M9qg2je4@S(O1Qi734Z1h
%/%>gJ=L?NeShFB>/**A-W;c$n-uR\sK`Pt0Nm\r$[fnL5=+*9J3@bV"1.Yh1e-(bWKt7uKq]NV<@DP&u+X/qr8f+O?*%/";SJO.B
%ID)q"_[`lg+AVK:2q'1'N5rHi-RBr;kVc&HauP"'i73S@9Jr:`P=?2eBoQ>*^7;XL_D+?bcKM+?,&15[_]GQ0:g4VBS[FjZ\i=cD
%nG#Glr+[N)q1-8CF[k%Ik>'97S*fAla.81gj(Q)KF<2at'%H/Nk7&PV'qPZZf.2p.Mr[*J-)YMh$L=L2^J7Mqg+QUm::jkAhGJM@
%(^7K)]q[uH04_77EFpR\DY$.pA;dKA6a]f^$V.B0Aa3%L*@2&%.]ZT(BPXhArTW13UJ0Aj]VDq?9:P>og`TJqmc_'P9\Lr.UULF`
%Hqi*tMAenLi/V+_b+tTF4*ki7Ya=^Y_,Mt2^t,0R)sKfM*PF<9)fn[H*[4>NNa<[IUn,@aH>@KMGM*nQ]&1nN6^b;[GXlZ]L3-c&
%p5JYYC-n>q;g:fN%3d*u7M8RN!KNC+H>P'oFpd^%hB7"!r)a`NIBBp^O-^#8'].5AK5fI88&$p;=GIp12O$cpKm31?+=^e>nKp(Y
%*$"!UapDY-:>m5,2(02ce%LMO'aN1#LQ4-(Vso`7%K;Cu/[^WBZ]Bp5jM1\ls/Z.&F!:FYFk;*@Q[]N1ZeZ%C\ru?A.rS2YY]?N!
%m*,'P=O:hNZ^#[EZsMk(K!gXf;aB`NjWsPOb%o.6XY%iT;53OrLu?O-`dA.5kX[7n[sr&9;4-cm2jP$\;q#B$k]jp9p-E&N![=8`
%+g<hW4,%mCL4VC37<p;oa6tGLpb/a7SoQUdX+"g],An9"$>s]KTY'KumjJ\n?<rR9ImbT!WNR5PXd=;4(?)UY6(r)$c&KS,q-+"$
%X4,HXb.Z1!_S'm6d33;1<&r7[$u>0Q(dC.N-@bkKC6!30TN(am9VSrEWL[4%ZihmT[nr;[Slo<Uc8n<a%FF!99A.e-KHe0"(o'<?
%j1!>UdXsLXRa:YQ>W$Yko5E:4-PBka25;SC`h/uqG&6K\)n?_$i\!6[jVaSE))!Woqdg2^+_ndEk#6;,hUg6YH0/j@6hMgk2\Buo
%*Mpb6RB(;BFOq2dEO:icf>cAshBp-mbGsso)kt$6MF7Brc8upr4Ct91a^!;C`PK_s,PlYXT);n?6+D#-fp*l"d[RE$F@?J\=`o#:
%T2'C5#+cM]T?rn+ZM\m163$0AIZuk8S\d7h5)qBgR0"AY@<q^&nut)dn*'-eP7XU75Ed+!,&h&YO$g][mYFed7p.a41-[u56UL%i
%6R6#e*/9-pYt#Mb;&[[A3*Ztm`64WnKC2Th"jEK2T@jc=4SXbd?AoY18j'DP:>m4)$M+Qqh@,?,OreD>%HU=O2hkXt%N1$V:jH1X
%hGL.h9;sPIAjL:P;.#j@jmuG5SYOek,')@aO,/C\qX"YrhkKb(_$k)A=NIs@-b;6o;G'G)npc9)Ktm?-MnV(:%8QQH?s#%#9]7"7
%$?KGA5JjrD^:S`e'AXTjifY6!`!:Ud0S^ET#K2pY^Yotn\k;>g4je%8M7O@F"o\04<s/e0H&CPB,ZmgCb1mu17%#I9UO.VF>;:c4
%6256:8[('C.$5h`n*&UN%S+XR[PrG5`dk`g7u9'"GXqK49@[kF>C/^HMg?3%p';te:>clB>=7V`"JBSU%4sF"j5)pcM)%qQ8,!5X
%^8%liggJ8\PaNI9PXlIAGP'JE3/"-Bj45?Y:M?gW2b5?\Fpd^%hB6,>di!$4#,K*(mFEDR7%,O:UO.XRFD7l7k7F?AU8_u=&k\sV
%_E5=dLs8YW.6KLIKY2(\iiQ'ESNKhq7j"3>rK5A7+og3f$)J;e.(l>P\\Xp8\\Y(if4WT/#c@*O50aW6,9=l_Lif;1hu-+.rk+sY
%8+PBm\]m;_'t-"@jTBuEGQmgWBn,=.jFkl-?Y[k`VX,#Rd9D7;^N5$J6H%W7&B^f>_E3'Zd.d::_8C#?mL:e58NVWMo[_sSiOM*3
%+[WiLk9s88"CAoKCVIQ)F*^1.-dY_flkJ=(>D'N%LKfBj+kh465Y%6L;g:h$%Ee[!n"H6_rB>dmDPS)&GP'IZm-jnMM;&>VT0Yu8
%Zr;3>D[jkghX2Sf-cA`R$"_O[i>oW!1]Oc<^gp*9$WC2`(LO?/6K9Jc4eGfYGEaL<Y?^C^p9S,/kjmm"\Bhop\_^2X0H]h7rTF3h
%h7Ah_>OD;6@%l24-9B5=_E6J]rP*b5W:1IHE$P@1%pFoi]0tTur<M,NkjXe*+n75@&5)=&Km3/rccu%S`n[!K?p<XT%9J\;2s+f<
%+_FS)n^GV>0_CB#$J-faMbILjqn>s#X7DY'\$h`+bqMJjjk@F,$L]B?\AoFr8%ip?Z_?/9KZNBFqi4SC?KcF%lS8-Rm^)!F]lQjq
%pWb5#UOUm.,kT_Lrn1-5*N<*../3O/Qi$+V*V[,+(QJg`hDp:6o\&F-mp@LCc&\&/.85pD!kXc<rW.?CajhK4<"\Qf>*@Bf4'Knj
%Hr1G3>HuQRgQgZ76aJ,]g#Be.hUU<lmc]N%qd7*>JmNseWp;gYD20Wc^IMc-LjVGK(6aSnHOfeQ4U4J)^W/Oq&h/"-&%Ro-6@4?F
%;Y>SnM9P#U)>37sTFfib/q$%!q>aH=8%na!F7tK/6a:t8Ndf&uh/h&`L%8[gOO=L]Pu/NM##C*CVe<qiWU4ud,uZB7KY3dO1-dO>
%BK@c-dfSKd\W/&BGcqG%i=`2PUtc>JH/>hTVfr^,e<Vm4r8]R'50NO16dY9gT8ZRQWi$iXNF>oip'%"9$lHYaFuVaia7uHjYi%?/
%#0(L$F4J^/NWL\rDZJX\6]cJij#QF0Ill'M#@<rpc/abO2<\i9OQ>lH[]Le8ori#%<Ud>C9hWAi=p+DD7dGG@Sg^87\bo<1%;F+3
%W3oH6cR3J$9gUJp9)Q?krK:Tbj1IL`Q%\"Z1:(c&$p)PjL/O_GWeI5$p:qu,[B0K[Q:$3H9ot4g&SObkS_.+,:UXC-rNA=p8/3]l
%pMJ1]-,K4KD.pKgZ*Q@[r=_MG>$06QM]ekX-@Nb&>l03Ig@)F[cm<4kl1)Ig36E7Y<os0&9%&R7Ff"fX.'4G_n;bos&neBr9:P\N
%*Skr2hS[KBiq5DN[=TG?akkV'Y8$9c*A.In#%g/^d0t:JfS;o5,^uqS*^e&UGQ=o1d<i>>-E?9\:Gqod<V-:-*9M%O(iI,_RBP_Y
%U.=[-q60U<D4GBE`Pj<Q0]Ws3(tFKbBXK(iddL>dK9<=F884>d,YJ7Qc<7#8!lVpYlqG/SP$CK0Edt/$&)+HG5ohVU-!R7G=jR9K
%((2D^Jfa]qG4>jBJf^:`8a##s,/B*@dr@qcN-eo3M<r-_YGQCa'''3Z(nD&)A.#kXHiNa_I%&!L9+oaV+9A;/K[,nPLUj02n4qp_
%h3Yqa07U)EQ7O?G%o<R8aFmk]lM1P-,?dp.j:?ca$V9[6CGJ]-_7U'U7LN'3>&7irqUsGkC#ssano>J(CAB!LB#QF5=g*thro0(6
%%oIfQZt*I*56+OGh&;@^8RM70Z&Fd55G1IdKKPUdbT@t&[Ald=i[/QAOpF+3_d)>UFsL]ragMh%@:=rs_,8At5ieg7;S+4:?r67@
%o\m;8=P>^W+)ms7=ZY^['hnkR-mB[8cr"ajH:M8.+FE.7ANhiE9+X_G6I'Q6db_q=4M%B0rIC'8$\`ri)[E?C#WU15i;HULSG2pn
%AIb:p]AB&QDE]EgkrU2T&#)P=TN0<ac;s<=N^5O^!Q!S>7S.QU<#ohW7,/T>0!BQ.\C)=.0fHP6aY"tbj^j0(At2a/_#f:]iMR';
%,r6(fVPfi@G[*p"[7j*!Orti@a<Xq20buh4nP@o<3O2hB@)_0ObJbkRf#Rg1N\'9hn]4pB7(G$.+Y\OC[iCr'4O1pi,e'Fp$l3$p
%R-2k@%/m.S=XF*f\91.NMjgd%$HIP-cD;s283V%CE1:D!TG:P<7Dq$RTrOTgO=VeW.<;eI0VYf3+K1HZ#2*tU\:k4kkZX'5nRaEW
%U/No'Q&r4P)usu-MJAlj8e(@ajO&U-FdU,]"_l/RNVr":p_4h.Kjs*h&6Gr/cqt&dUR[Hka_&Uj4=q]<gSnV9L@/2nH*[mIH@r$_
%oFGBe8huWhS3u)7UQ`G]brbI^/VX*Y;j&34kfj-Wb:O@\Tu(IbK>eQ=Zjk#Ao:`]WSK.QEcT>24I@JNWR=*VAaFe>XSE([D#%O?b
%_*uY]na,]rj<'kp`!^M3+_RcT'j:\I)gB[^^pbQR1g-(2i4iBZNda<WP/q(!(3!GuYE7(SlR*%fFUaadl0>\$q`?hflmMorMk%`1
%r*GKtk!5q1kt;ftOGm`K_:/nWr&PiP@U^:0Sm\V;Ar$]9Vt(6^%se"*i)1sU0H^U=8t7\@_c,;iXm->)03:eL,MBtK>Eu_JE>fKY
%,I['UF):Q`q?<]-,8>2$MqAo2L(ESY69,(-<h2XUg,`O,C7laOocljV<9]#+,%4i>_f]fqfn;aGRQoQpQ0J.%1tT;D::-c#6'[gU
%UccHK'H;I^/<PHT/><MpahrPZ0Sg2c'F3YS@XT45EeDtQb>NUXRom<skj+4F4#h1I86.?W*Pp5iHGL=b9j=fif+-\u;3uLYNd-K0
%fXP@*NEW<.<,i^CCfA_PrMF.7j?AjRVMCmM1R12=e_5u7/1"$%gt>o=&NUIurkbGU%;\><9!ga;(/<E3$bYo6AVTD_>TJ0JRe^7c
%UScB]+f^>k/g/g.^\"uN2k;KMOP--\aouK%'$>$4,^Rr#hsgB[)g"RmksS_&A@aEFc4_/U,&ObQ"f[dKmSU@ZfqmocMac#dIeBt2
%rb8*Y6,u)<:0cSTK/ji@*L\Xh4j4(teW=q<9g3?]qGaka3qd+oiW/l9$u`me=L<'<3/1D$Q1q]H%-t.Knde8CJAOBuP,]G1f//&O
%Ir!I83%>c7"`2?LK'Q%9b:$D2n+LT29rY5J'hR\K#(\VUWcU@m^cct52B'5`7*BogM^F`[?e["r1Dl57'6`87"+ioXiJ%QXW_X`]
%(',oofgb\3mBhSEe841`?,m)AW8:G&U/C2t#Eg&J0:^AaW6Bd(gUMg@,smgXL'<gR6<Lg2`'2/qNgr:Em&=c`F>1SCLd@(=_G^$X
%-aJ@,R_=8"IG#/MTa0>d1s@Ul1aMluCkcQd4aV;:;L_P=.cbIRq:&Cep)#%]Le71ba=>R8/4`bp)g+Q6BL2_:s.H-1aHF%GKs$,q
%ACTWogE$.eZk(u;2!,s@Rc'iSP"pADZ.]5PY0r2PkKp<.<?Lp0)(85,%GqB3"=b@UjuAKd8#eJj7\saH5_=%4TEcm^,L+:Yfqn\0
%.,DtrO>''5%S_gadAK&L.E]_mDVQ-<![blMdh-,kH!CDE?*LA>e(50&?n!RAe(8E5<Q_bBEUIEWIK<DADnSkd47pHiZnZA\.ElZO
%`@*opSAX2?c(m+&eT>?r26Z=EPQ"nbXXL<Ob?&A'0Yf@!f9YR0*8DPm[WsLG;hl3P+14d8^$'9aSh2A0;tnakUFk#'00It0,;<6_
%1.[:33J*aR`;iM!_-ZFYLD)4>NXkpmIAs&M9!A.^;!PQ%Rdtu<i9Cn\f28?BVPQ$^OB%.k+c1E8OLuu@4Vmh14sNo/e</6KNc217
%?m&s[VVp8+m+qg+&d+Q-UC2grSF%6EZj)Jaf7jbAW=sC]mjM'&b?$MV4@5=uCpg^NIs.PS..KV<hGL1ic\+f70(g(dV'j<:;X]FY
%48RB<>QSfVqq8@McBK;[?Ll91][2)k1HZDDI4"h'ca0B/UJBbgI@FlY_XK[Co$V/?R@!M^p7HH1gLV/0O"e=NrG@>CR21,9ki$SJ
%'].6SrKZ1f[!RGbg@f3Ad";JW.D2E[KE"jVH2b:"oSiBVkg4alr.`\#FrYHY%E\N:`91T;Vj7flV[H'``E<%JG(gBZRW?KQRjC7&
%%qc!f>'jt1@N08Cn_m8r`Z#:WEO$M8=GD5f:eQAM0DRV#G&"kiW-PErUZr=?U=fu,g!*l2(5EeS9\$X.,6LlA:j4OhrDNj3cKsMa
%!H)#h/).Omo7ZMB.O=,Gf*>O8OLE^Le">BE[SNS;Kmq'oRbcfCK$c%_5;*,fZ(*)f=g[j029;gJ3ZCSDbmq]KTDPNRWN\mVC;kB6
%CRTHFJ*o!s1n0Mq\]_)6)i*e5e"'s^D@,d+O`-l3jl/,"4Z^CP>V'`MQE7tY[2O>BKQH$^Ec\/efqC(@6F3ggjB?:eKXTr.f^)F=
%2:L`dds;1\&uNiSl=r8F94l%a,EP?=*-lia7$ZEFH?B=qVQi9L+L@8dXD#7j8`m7Z,RD4k,=lL(ZG+60et0b])e0SWNMb9u@;PaG
%D!3E66PNT^V.U%SV1egtU!NRs44$*^VC$]H@&h14h:l@;a]^FV;JV(*Pl(`k9F0\H3GQhc6F"Ns>eTW&.HlN=fSrs5:tJgJ!KWAd
%j^(UF5SbsMq?+B)?3tZrIt/i/LB`A;-RO6<f@:<*2]-7.ojN.kZJb+cUg`I_+qAPI.<tYQ+2*%3eTG4*GaGFoi2YKfp7OVrqJ.f8
%*Z_2)3eQ*[1``<Z6%gk)GC%!q^$0C#BPB)+qR"Nn02@ZaDOfY(VN^Z/4?NPe9?@.W'q>b5.?/c5JC1i9H;$ni,_iaYEHmdT@Z%KQ
%'/r[/S.9)m?_0LUAO>P0SK_Ls^c4I0FFpPLc[L@.4n6D:UR1ZE%2>.Kc%N?YTu3?NK1:3*TQ!ed[ga%JG\>tdRsp-+IrTGP]p&'D
%o>1C6H`k,$];O.r3$,[Z_7WKghfcMCkuHS'SO)-r$00l&\opjpb"2Etq;@lhcdSnUDGEBoO?.U3D(Zgb3fV?#a"/t<$<Qo<SO?(h
%VpZC6h\nBs+(--d@dkDp"OT=2!T"i]_Diotd_(i:q%5T"q>-Wl_*!N>EeNVfS.j,!854P`GH[#<?j[:r8Kg3NTspf8l`F0B2qFP@
%#P^J<6cC"5_lWfG-#gl%b6;a\K9q_4f-J6qO'Rs]I"\I3Nc5X!7;iB6mHs<T]J8EZq#KmVE5j;<WF>dqlesP_Q#?j6>B;t-#'Q'9
%!IKPD.u?'dU*['YUCN`6S,M-Vjl\u?3f^e$)XL1AQ,VE13[>Qn_DiLRH0fM1F?kEOUU8dRitg+AM`cCA"KH`n50`(H",<;%d@A0q
%#23-F3V.,%!jU)EVrp(F7-D+&BP7KjqfH']daD[E_em;94:&Ci<@56j'Pa1])%=Tg?7#GHCR6^!btWN@cSR#olJuccQc+03]r*mP
%^V@=(a^K<3Vg7%@]\ds)S?K8qYG>,++'#Y`WD_FK'YM<\/oZi$#Jei!2/R_lF!P(8PmBuhFK<m;PGUu^(cj,lmb/P3@o0GIWrXk'
%;E8XlRUE!5:u>T^-lXN7C"TK'`&H9BBgend"E.f@*'r<koIj[Q`jF5:Ci&F[NIos[FnU<u;G!",cM\P'd7T-A1XfSR?h^sr-+m@2
%8\<ko9L]eUd<srms/JIs&]IgpptB/Xgj6PD'E8gp,6*D!gTrfGG"8::""Ke@Q]k[[Z@ofan:i@Af+-D2%I)J6Uu84B6Z.ZI,cc*f
%+3t&.@3OIUNQ,F\m)28P5:lLLi\ca`\C="F(#3`U&XS)i=<%$]g/f83mbl:TO&j2oinBl<Zt$ghE\f:'6"m&WS,VhK]8;Y0gm9p*
%@tLPVAKn?6Y2MGnEN4KDRkMORiUNR((W)B"9j4#4[[@kI9Ir-tg>IS<)]!9_6pAC[jPM)^6hSWPHINDke=(Qt/Lpc?dkaiNqHW?%
%H/^>G6R!8Jj-5W,p%%dt?Z3=9)D>^[+ORZ]Hp3tViF0;I*&JpdRP^^3rXsFRZcjkQmt#-hP%bS1f^#+%S/prl^Vh'b![6)<hP<nW
%Q"[XiQh=&%06J^Yfleg__.A>47Mf>`A?Yt"M8QYkT`OR2%RbYNAEN"C<UU(YC)BIG\iB5i4=MpXDZrpX?_L#Z)\)BLI6jpFDnUi7
%AP)N=CgLe%LBjSC'p`.$!n*I'7j\P!IN@`KU]NX^`(%-@i!XB;.:h"l-&`7e#oRE!0>i.A^`B7Jk#?MK^IYMlNq`?3\%&(qQ$9X(
%D"*GX'WH/DD23?ppHB)%duGe9Xj%kg>W%dmRpq)ZHj71VaWR78SeZ[%UV&4(aXT&<i_,LTh(O$BII<D7Ekp`)BYjVMa2q_qHSd7d
%.VIYD'TNFcF_-JCI0=i#B5">j!>cP?piiF+jLhd4ePkNf'i.kaWs+[%%pt:8f/rABANOMHSsG//UT(Q[>%R1$8;XqMT4iqnOV1Xq
%32TkimKPXki'DFtP?s5lXZhVY7T,]-=-$rs+&c+8T&]-&U)/k]X%.QE&8t^;qKF=#Q>EtG]&TqLPjNMK,nMb5cac]ML#5s#-JKfa
%LB8"W/^FTIVbHEANqsEEauL!6Wr>`q0&qm_djR,Xs%#m2+`[*9'M\92-aW^<7%R-D15<;P,pui1d29a*>gd+jNnG4EVV<k\.ufRB
%/G`h6r^hGhj"W;8aD>_:\>%n]ROci>_6@RqMkR<5WPI"DhqO<D&tVg`3e^R7>+OqPSFsL=>olOkX?N&bMT(<fU5dCZa1Uh&B[9`<
%aJ_-^YMq9=CDG=04Q$]T6b0>Y"'M;!\cAl.(YZ2qH&iWZ87'9FXNc&9ZnN$cR!(&56Hf-hn@*^Fd[GY/]c(133%s<7i:F7E7l[\[
%3ph4+^Q;ad`DTWJ$'S-%X-0k)>/R/baF^%qf7UH6iVrumOJ$j=\2TI?4>VlK*TFQN-nJLT*Q..KJc_nV_C95>+p_5.';:b3Z(hi9
%V:G^$@lDE:KTIT=/#INi`AB4*/P<?'@@;54?Beu.4`f2F3(O%oGq((:]3n)qRMQ*=:odQ%]DY+X?;B&)5Rr'+&Ar&@o*(GYhL'"D
%9DJ&amo3PV(kU(Ze#-hF;-!&6%on0AZ(7OQ1)M')?6i'j$bqV:hfW2%'M9bb3N2W8"aGokEmW2Q*#FH_3@,re:94pi?i>0?2eFar
%7=<13Y\t"C%hb4o&jbD9o"ESZIFrX:V%F"k?moc0SSt&l6aJfAYuI9M3-Z$!I6BngZlkYg#`P<BW3On`iPrZK"&%0@qb-8/N#PUj
%Lb]"P?d9b0/EbBf1\D*XTDta1L2-!/]0WjHT,gWEjW&8sgEe)IlQ/\'$ETgNmiN`u)2AZ`F3*)6dbbu.XJ6VHL+2'`==it=L1ZEg
%6A<HfEb2PmI(Kq]rCgM2lU/0"j^+;o6.R[`G*H,$6$riK^Ibhq!jCYV8Yr$XZQCdh1bN0YVr]$o%t<F(Jd+05GQ^?1!>,>8dPhIa
%-fiXSp>9%%;8HMfacpHV02InuiK=+AZ=^ZCd;#&Bogn;STd8^"6]=Sb-nQ%nb18:kRQKT/<NlV6-=oIY1G<#1F!Jhg%;Em?RQjsk
%;QDJ<,JR'D3@F;'ddK-BaOQO@F'cb6X8l^IR8=TreZ,?#CC;UmL%&<ih+i&aJWj=(^t[rSP>@)knII@Kj_.>J+DTNU`LrE!h0AX[
%S/I\EgLu&;fPcVZ.7oREXP7b(_>fE:il][([@@hkK9cL3PIWG>IQO1lkX,VifZ>^YCY-tQi$.@?GkCa"<P6's]l:"u%p]CB;<&-A
%B$'>e!gM'SKjIs;1Z@h1+GuU[[,Z)#Ir!0kS/N*I3pDQ=!QC>;cXTSH_3)GR#S35)SP>(L%Z,QUXp3X@Iu&&`8Q!rLjD0EAP,p6[
%7Z4,e^[:;A2pe_XH6^(bUjOalb=PBk6I'YZG(JYN&eia7N!V@(XeNE?>bfR'er%[i"_lB![H_5A'C0RIM3H\Np&\.[U\>UO$@V'A
%BJ_Ge6$!_t%>t]Jgu.]fU!R9Z#ji8=Ut"J'G^`dXfutE-[ECp@GB7=Md\iGSDi9%=.3YYGL(3UD=RtM'.]f-go4eB!e]'3M*k8Vt
%,$/h.B'`EKk":,+VK`QP@GE/`G_+MHK9D?]7G:-^K&:N@LU3cR&C4)pR9[U8/fg$m)]I_V>ke=RSbMlID,OtK<6:g]klp!891S\*
%j-\nLCT7VAaOY9?)O(=Ta;[q&IS5f=r@#_oW`i(_PRZD/To"=VW>-^,U-ps#f0quQ-eWN.+NL<:8Km;\i:GWc?B@HKr7])i"SiM<
%^)EXuBPHI(cu!s&FJi(oDb0CJ"d3:jdaVPi7m>kNqPC*I,_$mX(*2@,f<drQ%Q(3[pGf&?k$.1>pdRaVho`(1_#f82#"@>1`F2,3
%0PE&ukA^<DM;cOPg'Ti4[T].,\OhZr/)n3Q>4ae*d''cjYa$WfOufRPi2nQ?`Ypcu$XroEV6QKI1eA]r8u"e.%B-4N+Mr,#I3L$1
%XZDE.5j6*g3L\%63pYYjQgP1APR%,(<nclIdhhC(c@nZ&W(.;GA)?SdL"L+J7\k5p\gVZA*'3:^LRDJ4.m[AU[gQV2;TT3?IM'(_
%_]XusG+1S?bsd='XL=k8\QfS4"_qY7g:ATUr8QM\m?'Z\1!W&gFL$`W<QQ#b](54Zf0;3Pr:d%-bT+L@B3!nCs.am2MR(%6?IB_p
%OS4-2Yt4Gh\OsmcEH^$1O;GeIPJ5Bi8]FDXf_#gHZlJhc_bpjpo\.Xo&\E6$WO,jEhLLh`1AXm(oL+Q3U;eg@^9t7b'`4bW\G1&Y
%cJi[6l]lIQ7Q!Ac@Wdo89FI?$((FX7V2'`DL%hhgSZn^D?oq0;/Z"QnXTo&Yl]i%4E'gCc2Vu3>g^?'eh&bmVBEQm%:n?[fmYsfH
%iuW=8?@!hI9sg1'ej*Kl2#/%4H!4+39-i^oDa>$Wb_0A**aG737V0n)aYT9i(ETt/nUT\WH0.AD-M.-uZ+#X)N.4F!:Y?<"jsYpJ
%OmPNV)gc*2SS(,Pi>Q"@@n2^VJ]a>ILdPQ\Y+!(ZaDhFmMWc`7.1!/q69@<+%G32OpcLQa-DC2^CKBjtn=,a)!JiZuo;O(n2Y5iY
%1nYt`7/A*CB0r%1Jm^o?WiS"Fo_k&r_9WTUok"XF;]Rtnpa^U'_@GOh*2+,a\2[]W(AlF,P%%"4*A)D\?q+`Q0f)N8rM\:)"9u]I
%M]h$#d;``\78D>:Qhepj61WdZ9)SL?p=;gb(:&q;!Z-'=f':,cVnS2A8ORVGW\u2-(5AP.n@ZrJL+ZUcQ;<NgZ$bQl&u5#o!e*a1
%;Wn[kBEc*tfkFfOp-pPmTuPJOm/bJ'OA0GF_?M=B?L&h.fZ:H2iSV&5L-Fg-F0YYD(Pla8dcmq2Tq#`V:LWU!m%?Lerq6fmhu9IP
%Uh2*ni5eR3O)F5$#DV>:/1Z8#UJIS`?7\Z$JC^B3U6np-.]ujYem?>mNSO4=8(DIKL6%I!FJ'*kX!A)72]Pi$.6?c0^+Cf"G@>55
%:R]j:6W3G:eb49$PJYrXIotpBUX?9t7,]//$NFXgs5Q<*e-")8rS5WZ'ma7LGH3ZRA.oWC7`fZA!G)>1Ar:lSQLTr;H3Mu8NdMdd
%!6YJ\'JQ=?39:LUctc.B0Tm?1/`Rl4?MX%STL#\#f>cDIPUOJ<KD,JjN-TVS_35Z<ZCXTR=gj;6-]TO_gfbrPNPL\[7d`1,d%HuS
%66TN%^(2Wt^ftJ1;>>[QKK*K1TF\s*m2NLgEKNa^*GS^COnqX3Ek*V(H+7ll$csc\$$=F"r/Ne<`6p0W@dg]d9$q[bRiNE-BDr_o
%-qZ]/-us4f-&=+FN1/^maA)7][7b[V\9]/En-`%2Gp+-/P9Yn;F`]A%jAn42r?XN^F6.T/.PG*!.8!G$OZ4"-1G;,6Q(ufI9]W'r
%RCR?"F=eC7a5<GbBbRlXD9Y,Qpm]dG'9D"]'cKgcm?l(:^*YUMc[YH1B_c2Ma=;Y9Rrqq?0_4q*AIp%h"Skt?Td8=O[*L>U:EVeH
%12:`WE:ShLg]bs5-AcQddV&H48-X`(2FNQJInCuN=S*2Q"o"o_3#tQp1m\6e!jkV"8*c>cZXl\H]68ja74M:&gF.`Ol_P)o;anhi
%S5OQ?(>u?2nJ!iNBe#'_gB36N?T\UI301:l3)k+p@$,:r`FM7cVhAZAjWJSZ`4]HJ)J@D]>hpesm1e&WGXgb'UThaMXH0*!;Aqp4
%4Wp4?NV!if@YUZt[ETtjXac/N=sd`uFXUsVGRtXJM1UKtOn0H>Lk;d137_dJ%=2StO>IeRR1u.I-e(S*>jaI"jZCQ(QN-pd8fEZ[
%o`8V2k>:cn?*A74(jh4XorpCQm5l4]/Q$ogW?QNAm]]+?jWdl@fVMeuMYcOUC']j\5Lp&TfUVGHL(75Q^@`mOZtWLYQtjjUAd.G-
%9T`a\8kM)8XX1bn^!_ZKr3__md+0hC71D"C]m#puG'3uX<2]A)p@la00Z<DSd$V,8^2#kWc*E$kI'_"`N^8IEk/Kn7BYn=+5npcG
%0O4(A@$$?*0hY$=%uZLc,Ze;BJ^DL]>`'d@`OkXS"Z8ED$?uDGU`QOFV)sfmh0*J-X9`R"1XqZBf&Y[K;=qJg5o0`e+kI-F<sBY0
%5a!:U(reop'c#m+Z,n.X>ETDi$c6i0>;9Ngn&Ap4Mu+X9=s*Sp6Nr/f>10$(Ralo:WF6<)e-EBBTl7VFUdIi7lU)r@&Tneuq]qL8
%orEmZWlQc2:>a$(43,,Z-%V#R(,^Ug(^I6T(=f@#\EkC85_a44.(c:53MRVK;XS1TN?$Y%EY>oB+jjtCE9-DuJuT<';T!OtD-<6F
%lt^hmA>u@L:&Z'<Y/:<YU_b_H34-9oV35_0ZmS5qI5J3EL\E2`8[,0bARmN:F:nPIca!p5F]&90f2p&;XqkO.71rMKbSKo<WL^!8
%b%!sk[1f8n+EaRe,S@qEjA#cW8jHsF0E#U=O0*i^oK/$I;JI%1Pj_HWR(].bX4^BF.X)apD0e<B(N=LkC%!Hj3(a7JobiqdMHd74
%C=P.+D,W57!R5Z@"=cSdJ2@g:\cB2p5aj#jql2`2'H<.VYPM\CLWqYW+$$t<MFO<,C<[4XU"7%1HFgp9>iKS5'4\e@Q+HXr<ttf5
%%&oWDc_G1Q-L=T4pSb$W!;o`"BnP.+1*-b\-a.Y+ON(Xj-S^;;qP$,qFRDuWNm=a8D<M#32SA4%8_.b#i[`<\nhr4H;fjHh7^!8l
%]\QCpR5ebC6m:-!TdG^4k*FX"fK@2_:tJgX?pi@h0dTps)_q!BB&T8:017b"3XbPc?nV@L/+m7Q\j5ZOBXG-,o:!$e\Z;_Vg(;L]
%&7Sq9MDq6Uq/=XUJDa.Gqe]3"A6hc?@?d*,(D1a.9S;E8AJsX^LDf'aAWjA];5SMph5>EQ[E"'m$-dW6S`>mWh-L?T-j&(3P`0YR
%/KprJ*HFY1[!%)J)/U]a[C&eIDgg1f7BFtT6^!,2D=W?QAsp;knWGIuMBGLrl3:'L$(Z-io]R`A6XJ`"Y$]T3+K]G9jq,0&SXMq$
%XJ8YMSR=q6EgY8[3*AM%d^nJ.']X!Af*5SCV9Xjm3H0'iq=rt+f6QIKKVXg39h[(+JOnK'FtAnd:)D'CBS,Qk'FDliK4sK\MY-+I
%ho_i:L<7<?Tp]]7pk$6Q:,&iKEVltD5eBs9K_A,1=fkgThPT@f%/NCQNiD99,QOPr-*D\^:"ku'M,rh#m?A61A!XEP9-YX_`ZWZb
%,_:@"<2ZlO$VCnSI??n1SrsV?RY?rce=9A/'#(EQ5,*-#MdeuA<oYTu$?/+5)i@1RUWZqRCa^._+k!o^P?P+:#'=neY%d%>Qb9]P
%Ss/9\"s>4rUpt_2m?_8`O@r-p!cu,=F#V0[Kg_t9*6!d=1p^q4OD)Vn_a?L?5<Pg66*i=V(F+_nl@hQ]lJmgGEekjM/+NmmX#[b^
%g:@$Q%#Wghg9dM8%oIg:rP*Q3[rq_iK<4kH_='`2Vge9&(fJ]e`K?go%b3U<BR,4?obfJab*JsDARmr]Paj]?LfnE!]-&osBI"jO
%#\@/GX$pnl>J#P`"rB;g`j<F]L(IEeHWJXXZ+"n%k+!jFoO=B0><PaM"moPTMWd"H9-uYu>cW(Oi_%W#Pp8iL)h"))=ZqmgLteIK
%0f[9P2]hq2]sZ`N]r8UmmQe57IT3#b)gDs>^B\Q4e2t5RJ1gdZkb\qe[U)9!rBG[8a$)"+`8Z,%T6l[oB*5=HCf+tk?JFr+;(!L4
%DKrTdkKL".XZsDjopr<YL!O4.l+9^*GTMa"1LJB``?8bN,W"+9kfsAYH6VZt<h(;o&JU)VWnElAPrM5+rR*":=3o'r!R0(0m+ZEI
%qNL8^D[:"jLH8Df4(in[?=P@/0oE;LH5AVrGEaQS`D"/eHlT&,miZF2l[lg[(.Vm+U[eog?jc&h9%OtLi20JGPs8Bq>^:p`.NBB>
%S:ag<DQm0B1TJ[P3'ZZQ#1*2)rMVW1r"8g^:2h/`p%rt*5+od!C'l4@d_D;q.1hed\d==;YGRe.4iu"C0Eu"L&^d_l,[dUpC*A7t
%<u]Hg%4KOKOUYU<baR)'\6eG!#BA!j0=:b&+,pDu:.Z/52T@A7B"(VqXs_0'a5$)rYh4DMgrLD3S5@0JXbRHScX%]8m8e0nEC&m%
%ec*\XjU\`VV!49rU%<RaNuNrlD=H1dUFqCEr7gP&_Y$SERS_]_V*/iP[HXX4loN3N_sd7EM*YB$)LE,CGlJf=@lZmtl:0ubh'R0^
%cBIQI)ERmC"n.G3nBuFehBQ"T#4gUu`l8bXR)*,0RB*L"H1!WaLf!HJ@<B2*H4:R#?F]u\R4`dZCGuPi<Li`(]-[P-@WK4V,%;=J
%EgQ:eYUn`p)U)E6UOZOSa0RYF?#u5!#Ic8C]isus9u:>VC?Jm>;%>qc>*eY*Kbk'A8$L`3&(q7&I,#go$/GC3c%l*.l>9I()k*Sb
%We20X0j:#a`8bch5amGi"OUY".!eI63f'%dMrE>T=pu8uE]Yj*>`+@:Ctqg.mun,C'-Ii4%6K!+Ts3-^Jc67Y'Sa+jNh.Y;P^bDF
%j5u&4?OchH=QJPFrrAR7AiDmi89:+"/ceK?L_>943OKFEO5LWlB'L+95Q;**:h?cd*6p<s+We2Oq-#0YFonl*m_kBQ*(2qk&;$Yr
%@ZF$<h_>9K'aQb=^N"L5fqb/jki:bGaINu,:i7MAAqd=Gkaa#0'ouP]p@&Pu;-<>#5FXIo>C&b]^YJEne4OH_"^!/DB9\qSLr'DH
%"iM:*#AJ!TG@//s6.L8Q/E]ViP<h5Ag9Q&a&BH)Ohq*XZ'tbV"QE+7H3ZZo_q%6-\4L>p0\P#(fk$?.084RhU.)=>NY*Oahi-L.q
%XDk/?%Q[O3@XFH@1CLP<)KbgrGnE5H(oI6<Dh4ml[%]K2Qt:^cF$cje.,K*$o.s"eMLqF_Gj5CRdcqN1TK[VGfK8:@k1tFhDgP>3
%)BnpGPN"92a$-/;j\V'&d#;&G0W/5"bSO57.>:J<i\e=%bbKu6(:07jDb[9INX<mbIS),!N?uQ[\'sZeP2_""O9!CflNYQMa.<ql
%j5hW5Z*<\Y7RdR=P2\1F1o7MUG+g]D%[rq,fV*19$q7GqaA3gEEqTUmGodprdfRQ9hNHl+R)c&9D;Sn42V+rh):[)4)a,\]30k[V
%q5mV)'Hob1Tmgc[ER9O<gFNjn0I-;jc.*7j?W2m\TpY1u0ds;A%%1=Qr-"cLH';@$insYXId11(@6]^?\dZ.91Gi`K[#U<f4+UK&
%[L>oqHEi)m1-)):;aO&O6E_D(lGkA&b/r57W'nO88c2Ps.>Lq!SD25UF0S`RY^LaIVf_OhA&s)n#SeGqTsbQDl**\FOq/WO4O*JF
%I9:+^*F-r&R>_'11u1/&/6^-Kanf;P&>jI5=\H/9HrZJ#=*#G$99Zo+GKu.h:buoQ^Vf/#?:rR6)%%cZ4:$UPM/%*@95\J-8\iZ`
%DHcAD4u5&2.$d3eZoeQY5%[/iW5S[NS<6Im.nG7K`3(6&3^aV/T+.#/j!(7.AS@_UMfXHH*cF(JJL':NI;8-_#f$A5!FTSIT:*/a
%&M-u/4&ne-JOcW(C$Q?8oZ8\*llflUo6a6RC<)!f*)8L_-[IN$:Wk&&)K#FWo[M](1_\!L?Tt5Q@<)"$12#6Ai;%Q;hS^GNPssLu
%\K_L<fN8jEd9D5,J[`0m&9b<>XpI[.-/$[4Y73't\`GRb2%<(pb="2V52FG&3L?8H%Xk>@USPcj`@0S`;kE+Q7uPmG9m@dA%u^?U
%F>]"(8a`.RbB@+X0Udgj%XrC4#r>N#B%;f+&eYJnL"4D:&CrDXr32mHN["*N);@np7oRr.D*u_IH$"ZWWmCbr1ED-n@L:q2@%9uE
%iq`fAYX+@cY<-9ioqfE''ICS.%T8aL%7MP$\8Y/AmdrQ<fTt7T'gZp3^W_q8-m[">"e0a8TmB.Q?5]mA^`Z-<Brg9"TdU^#*MH<\
%G2.\kK]MV&UcD0#Gg!X_U_MU;^@W[E>%iMbMc#p^U;3_;*jT`mO,mI3"gS>$WuQm@A7V+HY$4YL(s4m+^(OG]bD,fA^8tGO?TP*@
%Kb$c@m*HB9ke;"MQAGH#MS-MdlU`cK2$'e#9]MR=f)[>qFTaO_^EE30Be^GSE@?H'L'jP6T]\m_^@[3;^Ie8u8)/F6^PT"UOU-]U
%QVCGu-Rk4b-r!(Q,\NhsbHQX0.ZY2HhLd/A+UOK7+NAiaLZiMX$8bu*pcD*,oCFk^[42r\?Bb5lroaD99d_]u\i>A/;n_$?eU<$I
%GXnT&N'>QcC[W[Zp(nXKVYt#R8@UYcF)YjJctc"2Gp,nGd+h_fTm.uT-J[/*4%cXR_e8VtM*MQ/%^d)t-9b=>[?oK*8$<pRGL(t(
%Km2#qr2&QH+bSeL;#f/e,+]s8H9<-km@^=h\FuQ0K'VTLEM1*HV>Q9[%0S=9XbruNq?%e(Ec.tFUcRTX*ZsCdim9YA[#u%s-q@F.
%E-*-`hT.aLS=9\1r@^@j-Kj,=oe*C:Hm#$@837X\?tqk\atjp!.o'quZ"c;")s"XE9"Zp*C8d(J&pkl-Ogph+5+\QA\o,!+mH;Q*
%K-6WRIs:k]3JtOZro76Vqm+OBl9/\+%t<$\erF!R=p(Io*tX-Me1")?g7]"G:et*_7gYVO*G#tuFtcN4Rqr'"/%C'-]'OL)jB8d.
%<iq002V\;qh+">ZaN\H<0,3Pgo.2!`MFc,_coaJ*e;g[[P.[W30'i@%/KpWCJn/'uJ)]67k_hH.W17P!V6'E`YCk";+iq1hqH'26
%X,F"j+,K)>ZGJpk.%5:s9`J-1DPA#W'-!%10d-r;Y7'02FVM72i;MSn+Q\UX\b#/+oX.>DTk6,[)l<SiQ%mi1;ig]_m:)Q+6>%*9
%,<cYq]*<\sNoU/X_Z+!-'D$-dLY9-]M10/R:UfN>T,k%;&6a[32FAhNCWqLPhenMf;ZZsOl9ZUrD3/cpeXSgu;%oH,3jZ<_BXL07
%4,),rG4$cApDk#Z53qQ+!)oBgo,'=L3_XmFbBt2&Dh"V#0H@KfWD,"65?g&n\p)Hk;(r"PiKTq.K@5>+q(8/2Y/*Wcel+q3H&Q-?
%`lnhBr`"T%!qFLkXPQKUAZtPbY(Yr602!4f2"Q^ATq:9I'Un.!Gt$spMC<j;I0?+GGL4=X]DDs'2Ys#OQBU$oWYi.A.R;Oj.jMeV
%nq=E^6'sA(U7Z/s&>nOanqA'+?08HGld2`jJC)`u%ng.]T;oI*F3Mc8nl,c=ofO-W9Qc3OjGFGa92\cJ^C+eApSTKq]RU*Xo;N)q
%8>V_IMc=Y'BK]?MBE]BkYrj*'Es)\>$[_HVKoC)/C&;k>Uh?0W"An#q]]9]DDcL)c#gMGoZ[r:n%:-Xam&^U/HYV`Nd'k@WBI3'M
%II#O`mKS,fLp#?AcRi&2JK]ND,'7FGB=ZI"WYbK[h$@b5D>Cn\OdNT5+.*qBonf3(.HJf'X\UoFW`-r"b3RM*HpE+23b.WO02V-*
%/,6qPU/suZb\nM85_S_e8GVZ*JmW)[q+mluYp0^:HN.epYe]"Q!YV9XB5>TM(&"Pj-asn_4RbUi`q5aKja-=Z'BVB=nTX1i2u0,[
%:iLj'LQ#-)OH)Tie.Ie*i&KriLDB,74!@^J&jU_`8Ki$lWhFC/]CQZ1U^`tH<1%QH$ghs$)+4K@_g!h9U=R?[d^jN'.4]Oa<Y?hT
%b#B"FK>^@`S-Mr)Fl6ou#:g+6q@XnP"9qsckfZ_(;PoUB&1Ip=RZ]qSVNUH0RZmq04&7l+\Tnaj'Z)s;"Wa)t3(Tba((q,e8-6YW
%F)E$e2YC&cB]eFX3k#gHc%DW]O^WU4/YM=_(aQdWkN&fW`@ANB"iU6K7'F.[>%AM5>C3ukbD1U(kT?sFbhP>1?cgPkD%tRR88]If
%KJeLIS#>8tCS]Re8'K?U-p^=24%N3\nsF'//KuMOnK9B)k2mh-5/Rn.:t\&ZfBu3\rFZ?u$P.&[V^^<fW,EF6WRXa-J@)'8pE*5X
%_F&^!5`#Q"'uX'9U<_D4%'C-0d.^ES3,+Bq]//a4=CQ!T'VC&P;LsNL*)SAk%Uh.Z!C=74/?ncO;\%=gdCJ8<nJd>sW]>/-Y!H)l
%kSg1(-8gKM)0X])RUqc]JBEp1D(NV+h*NIeEQ\7u!Z!-srFF!;FjN4(eY`Z5lM>RTa=;d4<(UREK;s^%5q!LYj\__+BJ_A3<W]Ws
%rGPkFm'ip[d'@V%.QW%OpbV?eJKZ)t#pL!:UG/Y1UCB5+7ZVEV46mQc9h-s73!qH[[ZN7a%W*H!5[j,;Z7_1`Aib#863uC7h?:3p
%>p$dAd_+9"@:ZAYZO<<kGWeQ><uC;2K>U6L+.6FZ)i-t5*NjrE'P>N0rEp9?Y9<l%k;po@ZGTFo+-ju"5FLH;J]CsVr;1]f$/C]C
%6[;AGbfeB)PdHkW^p&_NUnaBGs8!b4huC*6?M$S*ND45)lr\rlpt+u5s*ekp`P,O/)k.['L+H49UL1d2rd3H3eMJ#b1aOKKs8&Ae
%YPO=)AL`N9jit,EftD(p,qV\>1+G"B-_X)A@(YRSZkt;Z[f!@_#crO<1u]^Y<Ho?SQD(;$P=[``C$oe3m;IR(\-lI]L^D041!A]T
%T653UEFPmE;^C_W)ZA+EEGi)-$%^fm*F'WQA(,+c#HhK\NZ[`&.-4ZEhsZ_?:$kGqDj?PSG_^i.K@Onfc%u>2&Y@@YY'i#.XNuXp
%,IVV:Fr%\jbsoHI0J*[AJL7L6`CA^XC+@f9.kW'r6qp*pV!,S'SK.B<1!%QTRUX`1'N:%Qs&e?$:D+Iug$G&^>Z5PABCIX)gU?,]
%/T-aCD,-g!J+TaRks?^HG=(OJp<us#T7t'N60h6*LiShArJ9$`.JG_Jnu[8=V+"PE8Po.NCa%T2K9J0j[J57DPD.9]kS`UBrubsI
%UKAYi;GbW0&7W^HP\>UoMJ0gQ[PMI8[pEKA55OtYS\r*reX(i2E3\Q4(B=,XqIM5UqTo1Y*CoX\,Wn>fB2OT&6ssqc?@Y8>W7O>E
%*gX?1ZYZSp5jS,F`'%p$?@^Ch+%ufj>5q#*MPQN22@TB3PJF\1?VO!;TtN,:s4HF"<slr:m)`tUO%PB>fop$fe:icTHqJZ0P\l#e
%%7A0.(doc7lJMnCjRBl/Mr*3Zd'k&)o>T)M#/p/!NL3)g.\W'>8^+g9kj,Z;4%H4*a3D1Kje*X5>?eKF>'11([ZOr3JaZ"o[$!o&
%PX42QRn</NmiUP@Zhc9'2T/*pTo2(3k+-bhp?PF_c0"UI)%@*NkolP"\;2\82l@_`c-c89Ko4a3f8eMNSQWT[M;1(./'7ih]+^>j
%Z('J3+.ecdMoZJum1MGtFE4E$ci15'pg;tfMtVYM%OTjt*JG4W=XV78I)%j=&91-PeW:LmLO+5-<thl$ObO\"LG3U[-Pndu\6VT@
%K2-<,j3caC)1a_9d:<W&C`PT;e0SR;7m21/lQO`o\9RBP/efo&[^jc=i5o)N&NNh^R.j!_FTUHD_Fl48s/Zr.B'I5Ri`6AVloDW,
%M0iT43Yk61N=qDk'!HEcPtY60]i4hP$"8PoK`[V1iM)(bUlD&SR(=K\&a;*=iN7<f(dU7m$XMO>C>OYK:VZn>1OtA.fW+U9(9L+G
%Ribq9iTuktlTc1*=HSfE/4%#'<hjIa>%\KThc_]I3d*VG)X$/>V>E_3;R&iW_Z_o_*`[^H2:Eak-oE"<MQ?[,.t;^E`/n!jBTl+5
%VI4-Z;8d86lnhF_-BMan;a"H)3>;7Xf<3U#H"Nm?1j[*UW5rN$$:7m*Bq^9(aX7UtT3?^4al2p=["SJH2.M@f3W:,0+I4+#@I>^+
%$RWbj"J'5=U\jZ7pe.sLQ7T9CbnaNf;d&>(8A[r<Y>qpF*gOkWIXj@mkTEgUP5m<C*@oun\\O18=;]dU-uXa+%r^k<Ht.(GW;31S
%ocQ0FMDu#\-m<koXrCVRnT?b@Ig^>Jed[*90Du_GP(\*h#_mVL&5mt<L14,0)YL4HK<:T[^eec$cc:sK/St?3f\5P(eE:*9'SR]k
%=V'=:&n[+2rsgi_5,Rf4?6`qWV(_Q_GKAFpWl9l$AkrfL=&<iql<t"_3IH(ep8YfS)X6Jg!Q5(4G#RQ0iW0jkos@5i%]b8)!X3>b
%q4&TISIeM(Y!KTp#Z(8`Bd;adHa)BY(GgJCbU:<A1H*H%M&@*/N5:achJ0?*187?W=OaC`NekRg:+Y%+*`u'c/,$u0FK(:KBQa1d
%L!Nd_Pl_buJKYeL]hQ>Ko4?//Ot8Y:7MX+u&s?t3)FZ(,""[)V4Z$U.9n8@.[\($)Of-_f$uqbK-u*;W[nUn3DdsD_]EoV621E51
%kI8PbZK<5"!SnBS%!8$+d0h!u2]^^42rsWpn+$#Y1CY&SlZ5A)TsWO0[s+&MQRkp`E'PF.2<qnk::Zu9Cq]rQ/'E]=Rhu_7e.7.A
%k)ll!4q7T`pT?lQl]4Dj@*=Q_Yf,A9#F`&Pl&>mVhotV#KAl9]/P`_rlHV$<':mPF.inn7)`[,d[h0k"!?%&g-KWau]Uul%'>AUQ
%VjM-ORc_aI<4a?r^"%J&gb<pof\f\dc>ODVWAjgkSfT4GW1mnAhG8V8@nud*C#e4U+e/!&LHfdE@%5iL#$NT!h@4@Yf"KCL3:'Z2
%:)]D=HbYEqKB\;,:(#;'F0uH:=h;Ln/BnsSeUfo'hMAZfGl/:Veba1g)*6@$#g_7I'=rCtb`h/k][9!(W*2B[4?1X@43BY+=DjMT
%aE&hZ6))I"=O%$_EMDu`IW,T4Q_D2iO&cF%r":F`E[5m;R9UaNS3[u*f*T-]DK+/@f1^4U2q0l19gOp_L],CSF8J!e_ROT@S^0aP
%]CYALmlns!?3T:W0D_^%30/+ERCTsu4f^JW)jgfT12]c`>Y))C0QVBib&MQ(s-2p"4JSX@Ugs;C34p)NP2;mFhnOU(N@Wr3q>Fqr
%M`t1""K#=hIZqrgM9\;YS%p8fqfD9['Gkc4V^b@SI6lUP5#JQ_8U8.r`hRmQS6#EAFY%Ge=%WbQN+j89O&XOSoO>2dJS_"c0263Y
%,WHpUD6no)a-lda_DWO?'>!1_n2o@bJTL7_G_6L(RT5od1g>;qn`34LcTZi/\^Q&]l5>pH4GMcI0R`oP6"S'*$""Y,Ue"*=f0Rse
%('ZRYLc>,1jsFH5)/A'1>`[;fa=R*r=#bJeFniPa6*!"N2^0>O-h>mg(DHn%*UMABKQ!t^h"iBl6pAC]6uS=2+?mt>8X0TrF_j!N
%LT__Y@i<;*bTcTY-6dqVF18XDEj<%;0U!k.+5ji_IsJbpal.06LW$Z)A0&6Phr/@+6dq"^f1tB/9LMp(GOAJ]?iAc+<LK5lJN7`p
%+(-I:\+2>1P4:&XHg`>0lTONJ:RHrcJ;M?Omq!MAe'uVKhg-r6BlW3%5/9qSd<f-)9piE#cXBH52YR^Q,SQ:NnE\lY3hj1JF]=cr
%_`Z%/j9,<=F&*cnF77r?k2'O<A0URFI[tiKOQW4Ha`Gc^:GNOX!'fWF?QP5+O6RQL_s_cC_HqgEca9qL%D=ZA<]IZK$L]B?n0&[B
%rY>D8X&W,lg<aV&;^YleKm/b0]Ssj[IgjEj*ZHIS$JgMp.1A(Rh7U>[$i2GnS+$Y\?)l+hBm@tl@GYG\,e3<Q4QNTh9W(?$bpu@e
%X2fe.g3.gr[]eZBVhG[hmkh\P;o(tTCiO\]:uB:Z2'K-&h+,iGFP9En"S^oe%Nc_Y+EEpPXA^:1G4DC,4ELK(5LW/CX^AhO(=FZ4
%59$O]d/pTt8i2i!OrGu0WOL:n_p&8eno,W109KI!c!O+P[=G'9P1!*/(9*!*%&k`81C!X$,'b$eG$8X\+]##IF9["F/D2_6A-5Vj
%,`&[CmE\X<T&EIt'`cdM+?(5T[H*)?SD^7Jqgp*M/36<j/HZrHidb%4EX[.L6\>+XQ^WJnYlH"-/i8PBq0BD(;>fZT!W/Z@Z2Xk#
%.&A2P1gX%+*!;'7``2*(,n`TM1u^eh^2?tg$UgIpbR3R=]Z,N#6_]M[qptS!#d^<[Og_1;C^is(eqQ&);#/[6??#aN9q/q0<Tfro
%C%gV/7eFc$VA`E8L)3BD"2j=L_Ngij4R0%_:*<$8O/%EAI=raLW#^+-nc>?2+Rg4<G\[;^ite,DPLEcoFs;`!aZ2Ou2_Dm!SN5$-
%5/*)6mBK3B'uEFPN)`!a(M9SjE(**Zaie)$[e&rq^M&7U`eAkr4m$c0nc;2uIdPP&i&f037\0PZ;s4/^SReQfS\0p4cu-dCp"$.\
%gE<*]W;I6>+t-KV9Df`r=D%h&^dJ;gMD,>3Y&+J$@RM]bH86HP=ON\@\'_a;==k@qUpF<*6p987^UpU+7Qc:*h,JP#:nS\fr2.]d
%`4jW/=RX];Bg@-K3):1ZE.dX0<V4=b>3TND3-QcgS+\ULdm*NnN9sKb6Z5-VqOme`5@<I#oTYR@nH&$ghR@L6NI73>ht&)0@X?`$
%Huu?^FLCKeG`^c9)A#6!eihb9Y"=,cL[MH&+a>ZbI8dua7<4J66AK<mf+,,p7\h0Q%s]IgQO"3!!+SA6SIq5,I#"+\)B5RgL]%K7
%K1+c&9V'4;jhkQXpO+qiXV-,!Q!bq76pADqr<d/0ZR-WC',`F!eY]n7mW=?:I/XCi4<gQ_n^the*eG\pMD+':pA,X!1;cdL_TW=/
%k6!hnC&Q*N-D'O>O.,ZSK<#]J"e"o,I.klos-!tAC^2G.[gJ$D6%l"#%/Y?=rk>\?Aun/jE7`b90+TS89e2Pb?b)-@Q-0m)b,)Op
%iI]7/1nNHgeWnIZKk,^*c!84_Fc27KM$q?d7qORni$05`G4pmi*>uAWVMsb_m4@eINh<+Whq6oFOjCT*M#6(aq/A$FWbF?h@Z"s5
%p9o6Va#e`0li(J%r&D!e93V(G6_i^"AP)3tDQq77oe(Ek7`PI*en#E@b^<mXT@l\&*LH&)%UU0&TNFjS0`408%`S["-GtcJ7^XT#
%@4&iFiW@<5#\#f/WV_5e>'DQUQOs)$*5hP'pdD3m<G7;%Y-*K,5`Dg9SNe!]/:G3mfsRD3A'4((3e!8M_[H_`%uXS407iLb7*nC&
%@.9\V5a/uE'N_<`##+GkP$2]gZaZCjihV]BW"%")O$>I-"!lGPeC^%r2`(T^5-dHXKqXF[-][5W+_`YS#:069'X]"`f"0Q;Xr79^
%&Vh7!IN%n,#R@!QZ?:W2oMVgOYk8GeS9eL'*5qYG^W_""Hf=V_PBi$;<+?o@7*4nt54m"jY?RjdKjHhZMrpHAQ(k<hmjAf`)(\8f
%PeOIdci?_"BU9*=`[$`LFu<kirioSsQS.bAT#h=.M`4^"mESb7%`1Qa,t(oFRLLQtCc1%ek>CXecqp5)/?[L6KHcVIN<6Tg!VY[E
%L1M8SalKJAUiC4ro5qfGj@tC0@:uMd_&*UsUY^!'rY:*DoeM/Q-Kl):<\50":m[PT):()3^'ulq^/\s;k[L/4Y&6E.KH^gI#H`\c
%P/m56YNYNrnS\e<FSBbh$>Dmagdk6)>BbiB6f,Q$1DG+B6+&kq\6FuficUDiB^B>dBWL,5M`f>_;N^..YAF<N<'U9T:Q<`2hPs5D
%]IP#r?Kb%/U:1<`:X)1JD'V<\7,qi!iX)Ve];Jpg*PF?Fc`OPG0<^ggQtSSu;q>WcXktfXQnISR41KFZ$%.81HB%kJ)#`!!g_7U'
%a^UW6m[[:$8,oa8^9"ifGX[gT4^4O!h0MRAo,W;GF@&[.[G\ale\Jkq28]<5&g-%E^MaVcYQ*I>51kY:LValSf7i'j-QH!63pDTW
%;rVL9f"P;<6e?p%hl>eH6grVmZ@@oUUQV'*p&S,oh_=--R0oA"7s=2gG<P<q4Ghj%["g_A(U*%DnV*O89>[.3]$SBV.j?4(CB(?<
%h=@?4O??$o2rd@IT6fVufjX$1iM9n;^fiLRLR)uiPt'p`cApkU_Jo<\2i(:0X,d^hT^%,`Au_C]rQ"2r%_,+p5&Q*%B<h%l@0Fo*
%?LQ^bp/eUL0/g,?A(Ea;cR+lH0J=ZGVjXmilV"'kdMN3u2X<'E38e$uKjmp;D]`62"e^W.a4hk'@:SFNC5A>J-I9a7/6?u2W]j,E
%U-FZdNW$G+E;Xd9On_?s*OEm60t"6hXU>N&dD1@"#;E(6bJmaq/?OH0D*?I8CM&33DnRG=Q'ZLh[!$8ns4g#%2M"="<&@+d/qG*P
%-M"m)rWg_=%#9ckYK%7#_8QIJj.XePNa@[)9@LC'WElNbq32ia4*Vl2^F'H@[W_;M8R*Y`<+O#k:f/Ge6V3IHIV[Z(M$D48"ENO%
%n&5&q+29dfYW68')HkOKrbNT/E:6e'9D5dnSl)OV\3P:la]]Mmm`gp^fHKMoTh)L&cX0)b\9[&en#>gId(l5i;W0#H#2X2p(V7j5
%iq@`/c`3b]";<+C>C/lN[4N1C!o7%k0aSKri^ifuOV_(Ch<sKPi)YD`;lhMJmX[-*%obEgN<00=Nb<-5c05$i4kRG=LlgRg]G[%I
%94s@):`;JJ`Mnud8;M[34=U&SJkR/1=&%<o;,?gS6eHMlgA")#6#lIF8,*!aZ"\XeE=kJGqb&pTnoh?fMJ)JUTXrL0K@Pa$FS5"+
%fOq8bZ?LSa=Dt"974u9K4*.b!qZi?I/^aF)*c0^DSObBq+4-"&eVeYDhW]JkLAs^=8(0CrZ"Rt`/p&>O./^j1>t`N*\8g=Dn:0Y]
%Qe`3!Od)/,_Z9fE8/Bk`K.f#UJ@'0PN<K(OiMd'-8tt#t&21[Z=1;:3HkjbLbYb8,PD5[po39Qs,(J2@\3bHEnX,c?Ogh?e"Q*$V
%17Y3e6o]RPL`@id4%BA`?&1Le;t@J8('T>e;eeCCM^ZTi.J*"5MFHC9TkuD()KZ/t-TD.gP2]_e+5Di1,VqnG6=rJ)RM)sh212l(
%Poj-<$5-q^JkL2Cfa6FjFG`U8/X=OS)C5?!@iG_9l+:EX3j:oH4V`P/<YpSAf(a"%+W$PJW0t!VUXc@BMVNu(d2*6`&RTWOC,QC'
%d30027l&;>*kg,Qk\$^5B4qRsW-N4hEYp_*KL=`\oV%hP_3FS#[@3L&DF0IN$45#o]TJ8g6kh=O)aN"s=C'fU22]=h)C;s1RE2u<
%V4nkKkf%5h2Rr;0!)FM_'@9$(A_jSnBk)82!+4PV)auqP@g1[noKS@BN8d^/HMZ7R[%s/s>q+',V`RD:/t_?haRteMeC;37Z9#W@
%]uI)(8WI*Xh(UTX@HZooPB0^Opa4J7BPicif)Ehi=8eG<hq',R/iHV_oC[4^0Otar44&o5FJP$bdg8]6rr:&"Pr6;LF->7if&kYO
%DP?+K`?7:\SG;mZ*$kZI]KK0N$E;?Qam4H5`&05>M^uGV-MR<4'HDUP$4B(U@LXMEJH!I%.tDk`1"t[V;fM[5+XrpD@DK.@88fYX
%3%X7n8Z)LU))`'_+-m@e`>"B[*2W!=aYWoY"hu:X<:^aC9,KDH;+H,YKp&345\XgBKfMa>@\5,u/Bu`qqTo.NkS6p#-O,8b8e`=%
%pUN^5$SUCX`kEUX3jJ^3L.s^0;WaT3G-"J4mb!Os+-&Q]_+2O@?8cc(P(L8^[Vo>U`&#n3oEqNr\aqH;']pf@O@6S.l6*l(Xe'<(
%Ri&pkJ8M%t]CQC0T;.$hR(S>Q[*_u[ei(N#`pcI%D^EQqK$s\2C??W[8,WCXV(!86s(h<MR/O'r<XTj\=(7O(K[R4Q$?J%?NaliS
%&mq5Km5Z*>_pQo[6!t%[s+f0M.2m;R.3b"BMEtVWL5"jkruUWIGr$jA8]LSV*8nme4X5B[SATqO)oL_QQ[?-V)[mtd$k@g4"T2/T
%qEX#N)*oVNb?AMVg"uhMM5?W`9[`a*M*RDOr3LX!CQ*Xq%u:op)";[#PEmf38JpC>*<I6n(*u?k7>M(W\8(_?:b600bgoI>EKc_P
%Pj*7.iQO!n,WC,;'8!c)M9$&E>r_G48i!;+dHc'#9C24h%.LiZ_cIH>HCA2$$E,o459iJdZEBh@"#2$]oQK(Y9/89cmotgE,5qN"
%_(N#c"t[q2S,Ac&9t`@b`MCm]TlJ!2ms2jZoM:CW)Kfu;N05C*mQik3jn0Ag5)7lM]G4(>KcL*!k0AjY]!_9)65h@daYB!X_U46*
%4bh"MHRf;:k^ub(<b.*IK36FG\76W7QdW(r;k2VY&(;,777b.0g#lU%r-*j:(k.><N#%0#$g`MINQAE$mPmc/T\sY$5$W@NV?,"2
%?JmdRRdp5#D+FARZjO"So0/c`VIcREbLCQ[#A2Ocqo%L??=5*H%)0M3oVQO9"W9Pc$7h!gVqWuc$L\Ldcl<U";I@&3b5ij[TSt9"
%JgEkbN<fk<Y0SHHeabdl,u=<M`dWH1CH?jnPpC;[$`<[Oqqs;p)f=qQg\L/N:1RJN"^[*F+'<S7DNAhOo1Lc1f+&jjQg>HaI>aSB
%JYOh)MILLn7jmL%?8<.KY%<.8%3,b#5mcphmd7H5QbBA0c+\PHWf2Zh!FJsEgJDaE/R/.[)>tW,@1.=qqLTGY>JL>0>EqS9@fZh,
%kITJ5L""<2Y2us>6hJ#n2tmKgoV*R=!ACu$.IsQ"<cAVs>.8!EAtEZ>0?EUgm9BLq]:/F.4CFrr6>Zm=MS:W_j0XD*GV*c-T>He2
%;_`\(LZgVi83:1p"$Dn70ZIF,>/A8%;rI"i\coKU`;i@H-g6VuKE\GJ<lVYJ$$X#C&<-4@@%Lc:>)(p9\5Wp8(>*YnhdG]Nj$=X1
%?;I=)?V;B>.\rXS#[RkkU.#HEZ4^@(Df(c.BT#bV5poi$;u/c7C;8TC1&*@Im1rBKiABO&$l3"$PZY?I<kpVAHiGe)[iXNYV5")`
%j(g!Y,Y)-k5M5[cY:WIERRQA9o0]-Z*b[El1u=S!k<ZetVuj7hH5R=CjUk'eE7&+abWH:]D"Dh(B?-`Y(iNJrA`l]_hlYhKKR%mu
%XX5m-M#rfjrI!u+nCjo<IM?=[Kg\,%D7t].1X(f;('@`d.(mG$M($s'c\P,/&?mn[".Z05FHIj@HOt$</Y*g'JVqF9#Bh2X@6]RA
%kZp0:*DD&n.l#52k/_&un4CM791SL>T+X_,CVp+=1'P+sL6-(2TK7$.'KeCeFGorW1X#q$:9*W$>S,*]J;CkR&e(`WXoa5sR#'5q
%:/8iX^+mh?&s3utK`;@#2Q[<#c4t1X[.L'$7L)W:M8gNpVi$r0p64hV[#'#1b%1U`R:'d1f[,2M$F#[(T,=Q-pO4o#/K[j<!,,*7
%=kt6$m1p!d!sNg?)9)q<7<V=hRYkCqqC1ul8@$%l!RLl4AkPD6':fH@/])@gftqQc:PUnN!$*=LoWe=prk7V(!RTCLXO9JRWe0N\
%>ReA'/DH&7=MB9rFQ\"[C]cRP_PgVGJR\*Bk7H$X^EObJ[InHK7L?;9)&:2rU\BsO-`lWO:B:P"?`RhWiD7W5cNKE\os`V!?YW/M
%78#4TBGqq>*lDhD1na*@C,1Uk,<6*e2G50'4986'KE-@>P_u^;3_#omRSJ4Q:H^^1^lTPT7h<Fl#(`doe1@(22^B2a^lTN^CHjV&
%kj:PfHWhM>O0"q\S*#-d5kh7\nP^\]?@2$e4(U6B$]Nc[3>S+-W$0cFFetst.!2_)d?Yb`"+f"Nh:!W8-q0Xb+5._JGS@eZ'ROah
%o&0c]a\as[Lg[pl%"iG!LS!2or:gY_=3>il6OPn&=,WM"11'(jYesOq[h7t1i411Ginn/kJuhp@A.G5""BV&;i#H>QbuW:k8FQ$j
%_SX(',lCI:OrsE\`[ZB#?"peQ?>o<J@/+J\#mQM.R#1SgV-G.scY]*E.!OHFXZ-"^0_16INWtU^R#0UjAIEtYN[gS'\]2:u=+k?0
%4[MPC?m7A%V_Kq@O*eq?#%%s+&ofaa]YJ/Vr2]I8/q'<a^Wj`FJb/W4cZA@B>l&k$jpR]o-U!%jXP5Xr^'Sd7(qNuoq::)TMP:lu
%pa6n/gjX\j";/rdK&!YAYh\4/-(0D]e"K5Y(pMD2(l$$WPB:eVE`9nD?u@@"S6"]b^oV2`>2&%;i0Z58i1lk4nQ*[Uc\ZC3;U)3j
%lGKN0:cQRIZ"aP&7K^d2W>`gsWCTKQ7AP[7d%L&p(G/hU_P0I,UYHI2o6YF",'gW8n`i_>*&AGiCju*\Y4+rhf/nXij+n%pgG0fm
%S7^5rG'-+F<=^jL]]=2qIG7*`MA/5[fW+e'0f!.4?l&Npn9R_&>&%_:qHH@b-qbIgh[C(,=V[MhpJ=LgjmQKtXt!=?a1ggbK(#J9
%<JJsrWt@hg/e(Er\;L<'Ns$,3$O6I%eehl.`3!#JbZ0Q_.M(dre8G"$HaT5J`a""#ob:MHg:hHDf!o=,8\,un<i5L=Xmmq[a$6q4
%4?-;pmqsB3:_VB7pM;1(SY_+S7sl($rcRWe)l5CD2hs87KYqgJ/1#X<L>)b*9,m]GjsfZ3ZJfnmos;&qS->nAors3t5Z5M2TL@;4
%!G=A,i9i7+E:pY0#_mQr>%Nk[It"`D/O9GI;=gqXCtH#dB1[O!$rsq*b'd,Vc3WK4/9kQ.Z@7Zn,Y&NIfe?'&#,^FpaH"!i52GUC
%GYgfed(P+Pjkk#&-lS1L[0(EV+l3'!&lrOV=<JW($#+Vpq_u?\<dn),Q>`R4JJE&b<R&qk<F:W`Vg>RBZBq:bH\r3q:?8!KEpWG]
%Yi1"g[FJ%IS&We4\gbF>)F,$0N>Df-YLkj=#=sZ$l6+ah!(PkGksb0Gn]mIbVIWJXETX>51!'ZX*=Ds=@uB6Fd76S9BpnHE6k,cW
%T]SVpC$cWo&`BE4:L0l&%:uK\VNP@pD_l30L+\63IsgMXRjWV$FGk/UReMVs_<G#AV5<h.1tuFTF@b2f*+5&c+T"/7\$h=<MbCi>
%r-[^HmX;bo90fU)2s[pTZ*`#hGGY3tff=>"qMG1-#/1V.aZ-lb!#RqC:VNmQrJqAp71D'gY'"XPCL.BN(CglX2sObSUn\A^^\iMC
%[eJD`f,i)8*;uq@RbKa+V]^nijo>`=P4cs4L,7/j$0gdE.+'^'FZiH4J#Yu/pYo7UreME,VKFF;#-Wru!o$Y]<23.Q8:jmMg3q,e
%c5;.(0NBmA@*>Hpce@Y#H3*?"^]J6eH@_fe3t%%/b\5pU:YcCR5L#,:Nj5MIZjZ"tBd5DP@eu8N;]M4Q`0K%S-cf4D!_B#sD',1n
%[M3t\.piTN>Z6NP>.oa<p/I#:>K02WK]8uBD7WEgDk=IY\tfD">?\o:0]_aLGOe^m1;ZTL\!-!3k!faJ\4?p9liitD<MMNk>A&SC
%A9?fO2;XV9Vr.)GLd,B5,;qBskb7[GQspl$)J9KoNt^VNl^.$UVZ[5[)BP8%8@5rN':J+(R=FqpnkEU!C0hbmRC85tGe%=[&OJEJ
%`m44(??"(EL%(/p]R;gFS.fFh<'mPTa95e7M:<Wn2cbT8*,S2"h=^P;p^Yej]UGhs%Z9U*[HE-QR,%?mMm#K!aB=T%J;^85^C`L'
%Hk12a.=Rf'CX+lP;WDD6CsXP6NI][:FS'\Aej</*XP[>_$KG"hl1u\GhNeTAiFSC%4Vk_2IYV(aU\e?B;0&S'naYC+T3'X3d$b`D
%*Q=J,Eu#5<BW'j!foun.eE9VKEG_0;J?`@o=Ih!4;;nuYo1su]bUU`#7nn19s/q,=HAkXhV17W5&)qHX6"NbY94fu\j>=5Z3U1dV
%e\$Rf?oG.\KQ(*(]bQRg`/)6Bfu%fUfH2X^-CGb`;Q?%#s"pG7W!S;oQ%4rO#Y"9DeBWV=%sR'.?>A3!&"OoiAcJ!j6/=qf9p3,1
%A[%%!CL_#kQOX<fW^H*Ia!Y@a%8pfH*FJNG>%HDsj]_t;i-!>Hq23NRBSnLl'VW.Zc4WRA69Fq?.E>sZ6kSlDI!N(V[;+F67S#$!
%,3IX@?l:#MRaPQoS6Z[!P'Qf+25b3""m&=mK<ZUQqRD?t<:;q0Ad3rk&c?>^^cb?IY3nZ9YsJYPROf:u6kC)/7DmmuL=qTdM'2"\
%&Z9qf8F99?]T>HN:PBK,.[?9(SfCMYM,1VJH`p3LaCFFQ_C_QrnI/)$=+n5(2C7.0J1t[%cl't[nsnc!OpB+#4`iO;Tb#td1hH@T
%:i8ntH4=lLfQJrc<^-\hHDC)*6,hApF!B89*<\Tt\09D-\5fYjGc'%4l`p8+Kd9<YU1s#J;=gY$31!,(C2mdH7oK>]7ujs3,bV5O
%a(47U27!<bYjX&.W'sD]$ecTiEN5cuOmHe"\M"W\;]&NXb[D5WQ_N&4)_0+<m"JFp1f[X(?)MPAap/"'LZZo_e(%AE@ElZ%_GT`m
%C^Je4OM=82]n@)<ZbcHBnW79r*ML%7n4g-W,#!?n/ioXg_IS6?I=:>KU/e:_UmsT.fZfGEmC>k2"TJ%8O%n,KQi#87-B9`><qKQ*
%*2kZA*7h^2"^c!SX'QPUU.2$%6V:p^NhltVL=m^uksQSbmUZe_geY:EGJI<*"3*c\SsKXQ$)5&>m[1@fgfL(2mIDBF2,pW>f7%qK
%ahUh4D+YJ>#<S'>IG34?h+L`;p/mZQqJbeH/+!WW2E6_7rGL;Ce%*JlZ`<UB_`/#c9LJrPr5u[ikI*5mH2"\S;E!T(r,>XZ`(PF*
%g_sB7=,c,CEoM67h#3-#`0FNA7e[)]e@`;D+<7PmVH%?@kX?b/\>;o!-Bm?,ig?LHN9aT2jf(>QN]gG^5plT?S&V35CH]PdBQPp+
%?;e)i.3k9+3f?M>B&\>h],Z8)\KM"Okr\iV\Pt-eq*Q!/FTkl6Eg<HG2<7;[TdHn6H9!?9TI3!:'K,<BI(F!^9#Vhib<od@WQ_.)
%WPC%@6QXU$3rHPZ>Wnst9rleKO%FW9Y>K\m;@?-TUT.Ctfn`mZ89Z"!&/egk-M$5.>_JW'g,\/?qPLVV#>1@q3)H**;hq3\SFmGn
%l/92pYZ3^]We^E,R4C!eYY>+8aepOCjk/05!`/AE].;m.jP6@keJK7<L-?Zk#2#a5QMM;ck`r%';3&?tn.as6NCBPkNI0^D<G)M#
%8*Ac*mQu1P1OhCTBg6UYbB1j7)-mO1i`.[-h:-bgaa]j#NA,2@H8$t4&3[D9*8;\tI(po/Y3ejSkf)UNQC6Cdgb(g(.qCHKgS6me
%]fj6MOZcSK33qtUiHn.W\t2q?b?WgI(uurimiN3Gj_cEd,Vl0`ietQ:E^WdCdjKF@BkH`MFd`0Scao>WWk:I6:r'tV_4/iJ(`VKL
%5pYo6V^4Zi\/bkDFOnFVLH"d(bL5Va[`9/?W.u\op#)RC%gt%Z.dqupP;oS$5-P<f.+ee[MDu+cVA!nOOPbg,`7j[tM89d:'QFL;
%MI_^[W@[WA<V=a%?MeMMhjhR6\A%Se]15Xg,(g/En*^NdIY9u:0D#>SFSXh>A'J7]W5>6U]^6rFWfq"U=CAYF92nKeV\[.jT\nSE
%=gaLenpkZoEnbmTaQ3H.Q3c'rqaf3ViZe]G94$CiUhXZ>(c#:Y8uKfKl\OKE//'%54`rI8"m!Cu/)/r>jd[be\tdjt*J(^u/u*;A
%7,ggU#gYXuQt`[f@kTcQ_uY.mOQl<*<rJ]BT/\(:qB4E33@!(WA7gC>"Ki8^^43f+3SIt`71FZ6lTr(%k&.5WpV05[b5'hb5<LJu
%BVa',RFuO+en@%dXeoA/d`9Fi?i+&k34)2;[6q/%k6@qrSe;E>;SrfOhs9[i1#b>]=4C'-V0Ab)kXKs<il2#oL<j0ijk+/=^2[(_
%*#uBXQ%TU"9f8^$`t:RJZOPiWmQk%X&)/&Kfik9:'b@pS4T@#I]]nuLmbqCpN-JDdE9(;Om]&6RY!"e!mAd7L^8k#9(Y6meDhd;T
%b(B/dauJj]9IJa(BW?o/Pq"FnEm8c-#'j9]]^Mjo[dU40=f/e\%WV<9Mb(PV*he4,Ufu>>R'#4YeMGDL`N,S8+8EZnDU=N&2JEq,
%pgUh.CX2jsrJCAX7k_=8EP-TRQ?TfU4H`dUPnu:Rrd(8Zd=-Zk"/G)<;&;#^:flMNJ)IolQ10"eW0HXdeZUt)n)t@U>l3+Yp=c-<
%nDq.QilUkM`ifs]qksK4n0$3-[ZIjjA:<`:<LVY#Z<<2JfEn9InSO=)J>>pIcQ9`p1b`XsD;,p[(/s\HD.0,G9_%c*I,h1r@gWfn
%hZu:TnJ8P`,lLrjrSo7%<dL]n.6!3/.u)<n/.`g@&95Lt'slXZB#-S^1MU>$Ak&n^aNUSl$dFX$dB+5Q3Au$*nn$S%Er1+Ugi$`g
%0Z`N&\=5NQ[9G;J_=M[$7$IC+QH)8m?JP7!4ZZH_8.;P!/b8rP2?W:]5>rRC6S*msKOa1c1Je^UNCJ[@=U']dL-*"8FU0nQ!cNhk
%4!,_EqBP/T*[F.pX_0^lgH:"f-%aD&%n-<MAe)mu7F@Q88[iV^J%$7_).OBngj(37?)WSa-LO;OiE\>GRZ!nZg>@s<=F.c.#mHa&
%4SRF6_@*K!"hfJb'm-2o6.j8'(Z7J$Lh=+,-Z\\[(B$r+5RgJ:E05WF`5r9o0dC#+5Qhrpbbp0(7P)VP\>An7@/eRj*oUr_a"WJ+
%3(X"*Jl3+9I.)bo6gkR-HC=!0i@t@!)jbL^0AZ.1b1!4`H,t>/.f,%t*B\@g>'f=T]NF[@AaK2UEVP!$b0?!If`;W]OB?G2MsHg^
%7I.ug4!8s`j8FpsCo?M[f'f8RE_dQa]TY"sH?,@Rl"dj^C9=n,alUmX1ZVdU^Q8/0Jp0jp<Fe0!+K[m;qfWaRp194di$Art]6)mo
%DT;BVr/e'/GGr?qq!$iL4/\nBq:nd6OqJl_6rZVC><&>^`n1i;NV:9BpipufVK$EbN&3o#+53.DfFt7_Y^teB/Y0?['T_6WL3O]l
%+e[T-HtX$M*R8;-nh9N#'^%I#9XI@)rR29#Lj@,jj4>=/<:]?Ejolf*IWD2tQdZNVK,'^rhr6j?^(Gt_IYX?6)a;?u)b0X=]JA@_
%G50q`U!Y3J#$u6mF)MmM9%gEA7LK^`)Er>h&UA<Q'd$uS%A2FrUP4oDQsf>SVXfJVpG)S=]\Y(J,00/)$Q_>LB0'u+T^u(rU>cSe
%*t90:D\mc,__`R7kTKEZhmPY@N5iP.a7$.I:V5XTk7&e"5FKp/Bn!-;R;b,h9.tnOB2cT[g&sHTGaqO5CV&qI3cPfqT0h!`EL>#j
%I[a0X'i-5qJnJ&uC$Gg^Dg7dMbS<o&DM%%N^hN?B3cB85<6Q(Q.W0hc<PW>>"?LIGS5_ct1r=lSBnS:f,FRf/iGjNH>e/S/M!*C-
%ZrDY7CfsD2,?5#a,)uoPIR?bMhJf@@CF[6f[/Z.SUXhWof$kXf73!sZCVM$!WVnj&FRE9`,6.B:Dg-Jp0&_VXTBY;D-TX%HFT$X"
%bKG2X*/V@@H?d>aNZX*ArV@''7WhqcWU7#!fel(%amn\WDq#u[H,D.RU5pP*VW!1eCRT6\K'Br,\#/aPD]4[&Z_eW'-CE't*h$D'
%p[Z8M#AVeI<kY>:a$_WZME%--Q^s^?f'hWmk@If[n'#u3ofa"?H+Es#4P7%TqA7sWi-!=fjr<QogB\/[.cJ5!-9?')d2?lDo1aLu
%Dl-A`CsDBt*ktpiqp!(EILo<QhR$BfNphH=-T_"!Ac#$qUM7d;:!5GZSt5k8':hYBVquDWRPt*#[$VitWRt:"d.s.9Cg[4hJ7&=T
%rjUe_mbb2irqFI*5C[RdYQ!X=hu<DS5QC5Fs7PEu^\l&hs7jK]s7ki6hu3!;J,8,"5Q7ATo]`hLs7jW!rVkt%5Q1+:IfDVtn>H8@
%?iB7Ks87qmr5J[:AS:6E~>
%AI9_PrivateDataEnd
