%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: vector_423.eps
%%Creator: Adobe Illustrator(R) 16.0
%%For: Max
%%CreationDate: 10/28/2015
%%BoundingBox: 0 0 1003 1046
%%HiResBoundingBox: 0 0 1002.5118 1045.9673
%%CropBox: 0 0 1002.5118 1045.9673
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 16.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 16.0.0 x682 R agm 4.6676 ct 5.2591%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.3-c011 66.145661, 2012/02/06-14:56:27        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Basic RGB</rdf:li>
            </rdf:Alt>
         </dc:title>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:CreatorTool>Adobe Illustrator CS6 (Windows)</xmp:CreatorTool>
         <xmp:CreateDate>2015-10-28T16:19:18+02:00</xmp:CreateDate>
         <xmp:ModifyDate>2015-10-28T16:19:19+02:00</xmp:ModifyDate>
         <xmp:MetadataDate>2015-10-28T16:19:19+02:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>248</xmpGImg:width>
                  <xmpGImg:height>256</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgBAAD4AwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4qlvmXXbbQPL2pa3dC&#xA;sGm20t1Io2LCJC3Ee7UoMVefflwnmby75li0rzDeS3knm2xfWyZTUW+pRsv121j8IxHNFwHbicVe&#xA;p4q7FXYq7FWLfmpe3dj+W3ma7s5WguYdNuWimQ0ZW9I7qexHY4q8MsPKd/8A46m06LyHZXemRRXI&#xA;it5tLUQGGKzElnc/pJiTLJcT/CyfPv0VXfl1p+pWutaPqE+hrpMqavp8CX6ab+iJS11a3P12xKA/&#xA;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&#xA;BrirP8Vf/9k=</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#">
         <xmpMM:OriginalDocumentID>uuid:9E3E5C9A8C81DB118734DB58FDDE4BA7</xmpMM:OriginalDocumentID>
         <xmpMM:DocumentID>xmp.did:60F86523E17BE5119F9EF5F1308E0236</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:60F86523E17BE5119F9EF5F1308E0236</xmpMM:InstanceID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:5FF86523E17BE5119F9EF5F1308E0236</stRef:instanceID>
            <stRef:documentID>xmp.did:5FF86523E17BE5119F9EF5F1308E0236</stRef:documentID>
            <stRef:originalDocumentID>uuid:9E3E5C9A8C81DB118734DB58FDDE4BA7</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:3F831BD7736BE5118671ECE021D48F9D</stEvt:instanceID>
                  <stEvt:when>2015-10-05T18:14:57+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:60F86523E17BE5119F9EF5F1308E0236</stEvt:instanceID>
                  <stEvt:when>2015-10-28T16:19:19+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/">
         <illustrator:StartupProfile>Basic RGB</illustrator:StartupProfile>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>1175.000000</stDim:w>
            <stDim:h>1175.000000</stDim:h>
            <stDim:unit>Points</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>White</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Black</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Red</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Yellow</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Green</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Cyan</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Blue</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Magenta</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=193 G=39 B=45</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>193</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>45</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=28 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>28</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=241 G=90 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>241</xmpG:red>
                           <xmpG:green>90</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=247 G=147 B=30</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>247</xmpG:red>
                           <xmpG:green>147</xmpG:green>
                           <xmpG:blue>30</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=251 G=176 B=59</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>251</xmpG:red>
                           <xmpG:green>176</xmpG:green>
                           <xmpG:blue>59</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=252 G=238 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>252</xmpG:red>
                           <xmpG:green>238</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=217 G=224 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>217</xmpG:red>
                           <xmpG:green>224</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=198 B=63</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>198</xmpG:green>
                           <xmpG:blue>63</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=57 G=181 B=74</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>57</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>74</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=146 B=69</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>146</xmpG:green>
                           <xmpG:blue>69</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=104 B=55</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>104</xmpG:green>
                           <xmpG:blue>55</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=34 G=181 B=115</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>34</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>115</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=169 B=157</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>169</xmpG:green>
                           <xmpG:blue>157</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=41 G=171 B=226</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>41</xmpG:red>
                           <xmpG:green>171</xmpG:green>
                           <xmpG:blue>226</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=113 B=188</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>113</xmpG:green>
                           <xmpG:blue>188</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=46 G=49 B=146</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>46</xmpG:red>
                           <xmpG:green>49</xmpG:green>
                           <xmpG:blue>146</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=27 G=20 B=100</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>27</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>100</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=45 B=145</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>45</xmpG:green>
                           <xmpG:blue>145</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=147 G=39 B=143</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>147</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>143</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=158 G=0 B=93</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>158</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>93</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=212 G=20 B=90</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>212</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>90</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=30 B=121</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>30</xmpG:green>
                           <xmpG:blue>121</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=199 G=178 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>199</xmpG:red>
                           <xmpG:green>178</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=134 B=117</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>134</xmpG:green>
                           <xmpG:blue>117</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=115 G=99 B=87</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>115</xmpG:red>
                           <xmpG:green>99</xmpG:green>
                           <xmpG:blue>87</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=83 G=71 B=65</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>83</xmpG:red>
                           <xmpG:green>71</xmpG:green>
                           <xmpG:blue>65</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=198 G=156 B=109</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>198</xmpG:red>
                           <xmpG:green>156</xmpG:green>
                           <xmpG:blue>109</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=166 G=124 B=82</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>166</xmpG:red>
                           <xmpG:green>124</xmpG:green>
                           <xmpG:blue>82</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=98 B=57</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>98</xmpG:green>
                           <xmpG:blue>57</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=117 G=76 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>117</xmpG:red>
                           <xmpG:green>76</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=96 G=56 B=19</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>96</xmpG:red>
                           <xmpG:green>56</xmpG:green>
                           <xmpG:blue>19</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=66 G=33 B=11</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>66</xmpG:red>
                           <xmpG:green>33</xmpG:green>
                           <xmpG:blue>11</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Cold</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=56 M=0 Y=20 K=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>101</xmpG:red>
                           <xmpG:green>200</xmpG:green>
                           <xmpG:blue>208</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=51 M=43 Y=0 K=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>131</xmpG:red>
                           <xmpG:green>139</xmpG:green>
                           <xmpG:blue>197</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=26 M=41 Y=0 K=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>186</xmpG:red>
                           <xmpG:green>155</xmpG:green>
                           <xmpG:blue>201</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Grays</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=0 B=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=26 G=26 B=26</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>26</xmpG:red>
                           <xmpG:green>26</xmpG:green>
                           <xmpG:blue>26</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=51 G=51 B=51</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>51</xmpG:red>
                           <xmpG:green>51</xmpG:green>
                           <xmpG:blue>51</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=77 G=77 B=77</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>77</xmpG:red>
                           <xmpG:green>77</xmpG:green>
                           <xmpG:blue>77</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=102 B=102</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>102</xmpG:green>
                           <xmpG:blue>102</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=128 G=128 B=128</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>128</xmpG:red>
                           <xmpG:green>128</xmpG:green>
                           <xmpG:blue>128</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=153 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>153</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=179 G=179 B=179</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>179</xmpG:red>
                           <xmpG:green>179</xmpG:green>
                           <xmpG:blue>179</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=204 G=204 B=204</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>204</xmpG:red>
                           <xmpG:green>204</xmpG:green>
                           <xmpG:blue>204</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=230 G=230 B=230</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>230</xmpG:red>
                           <xmpG:green>230</xmpG:green>
                           <xmpG:blue>230</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=242 G=242 B=242</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>242</xmpG:red>
                           <xmpG:green>242</xmpG:green>
                           <xmpG:blue>242</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <pdf:Producer>Adobe PDF library 10.01</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -1045.97 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 1045.97 li
1002.51 1045.97 li
1002.51 0 li
cp
clp
35.5205 175.802 mo
36.7451 175.802 37.8252 176.576 38.3296 177.548 cv
40.5259 176.468 li
39.6797 174.956 38.1494 173.533 35.5205 173.533 cv
31.9014 173.533 29.1108 176.036 29.1108 179.745 cv
29.1108 183.436 31.9014 185.957 35.5205 185.957 cv
38.1494 185.957 39.6797 184.499 40.5259 183.004 cv
38.3296 181.941 li
37.8252 182.914 36.7451 183.688 35.5205 183.688 cv
33.3237 183.688 31.7397 182.014 31.7397 179.745 cv
31.7397 177.476 33.3237 175.802 35.5205 175.802 cv
cp
false sop
/0 
[/DeviceRGB] /CSA add_res
.0980392 .0941176 .0941176 rgb
f
45.0234 181.456 mo
46.896 176.288 li
48.7686 181.456 li
45.0234 181.456 li
cp
45.2935 173.731 mo
40.6665 185.741 li
43.5649 185.741 li
44.3213 183.706 li
49.4707 183.706 li
50.2271 185.741 li
53.126 185.741 li
48.4985 173.731 li
45.2935 173.731 li
cp
f
62.4312 181.275 mo
56.8677 173.731 li
54.2388 173.731 li
54.2388 185.741 li
56.7954 185.741 li
56.7954 177.908 li
62.521 185.741 li
64.9878 185.741 li
64.9878 173.731 li
62.4312 173.731 li
62.4312 181.275 li
cp
f
75.5527 181.275 mo
69.9888 173.731 li
67.3604 173.731 li
67.3604 185.741 li
69.917 185.741 li
69.917 177.908 li
75.6426 185.741 li
78.1094 185.741 li
78.1094 173.731 li
75.5527 173.731 li
75.5527 181.275 li
cp
f
83.5786 181.456 mo
85.4512 176.288 li
87.3237 181.456 li
83.5786 181.456 li
cp
83.8486 173.731 mo
79.2212 185.741 li
82.1201 185.741 li
82.8765 183.706 li
88.0259 183.706 li
88.7822 185.741 li
91.6812 185.741 li
87.0537 173.731 li
83.8486 173.731 li
cp
f
98.6636 183.49 mo
95.3506 183.49 li
95.3506 180.753 li
98.6636 180.753 li
99.6538 180.753 100.194 181.365 100.194 182.122 cv
100.194 182.986 99.6177 183.49 98.6636 183.49 cv
cp
95.3506 175.982 mo
98.5557 175.982 li
99.4199 175.982 99.96 176.504 99.96 177.242 cv
99.96 178.017 99.4199 178.502 98.5557 178.502 cv
95.3506 178.502 li
95.3506 175.982 li
cp
100.5 179.547 mo
101.634 179.313 102.571 178.287 102.571 176.792 cv
102.571 175.189 101.4 173.731 99.1138 173.731 cv
92.7939 173.731 li
92.7939 185.741 li
99.312 185.741 li
101.617 185.741 102.805 184.3 102.805 182.482 cv
102.805 180.987 101.796 179.745 100.5 179.547 cv
cp
f
104.728 185.741 mo
107.285 185.741 li
107.285 173.731 li
104.728 173.731 li
104.728 185.741 li
cp
f
111.856 177.008 mo
111.856 176.288 112.468 175.82 113.549 175.82 cv
114.773 175.82 116.069 176.234 117.042 177.134 cv
118.464 175.226 li
117.276 174.127 115.691 173.551 113.783 173.551 cv
110.956 173.551 109.228 175.208 109.228 177.206 cv
109.228 181.726 116.142 180.267 116.142 182.355 cv
116.142 183.058 115.475 183.688 114.053 183.688 cv
112.396 183.688 111.082 182.932 110.236 182.05 cv
108.832 184.048 li
109.966 185.183 111.622 185.957 113.945 185.957 cv
117.168 185.957 118.752 184.3 118.752 182.104 cv
118.752 177.62 111.856 178.898 111.856 177.008 cv
cp
f
73.9321 8.91846 mo
66.8687 20.5249 63.1509 33.7871 63.1504 47.4893 cv
63.1509 61.1914 66.8687 74.4541 73.9321 86.0605 cv
80.9956 74.4565 84.7129 61.1943 84.7129 47.4893 cv
84.7129 33.7847 80.9956 20.5225 73.9321 8.91846 cv
cp
73.9312 94.2544 mo
72.0659 91.4863 li
63.29 78.4653 58.6509 63.2515 58.6504 47.4893 cv
58.6509 31.7275 63.29 16.5137 72.0659 3.49268 cv
73.9312 .724609 li
75.7974 3.49219 li
84.5737 16.5107 89.2129 31.7246 89.2129 47.4893 cv
89.2129 63.2544 84.5737 78.4683 75.7974 91.4868 cv
73.9312 94.2544 li
cp
f
17.3057 108.564 mo
23.9971 112.343 31.5342 114.325 39.3066 114.325 cv
47.0796 114.325 54.6167 112.343 61.3081 108.564 cv
54.6167 104.786 47.0796 102.804 39.3066 102.804 cv
31.5342 102.804 23.9971 104.786 17.3057 108.564 cv
cp
39.3066 118.825 mo
29.4414 118.825 19.9204 115.922 11.772 110.43 cv
9.00342 108.564 li
11.772 106.699 li
19.9204 101.207 29.4414 98.3037 39.3066 98.3037 cv
49.1724 98.3037 58.6938 101.207 66.8418 106.699 cv
69.6094 108.564 li
66.8418 110.43 li
58.6938 115.922 49.1724 118.825 39.3066 118.825 cv
cp
f
26.8228 59.6313 mo
29.1196 68.2217 33.6255 76.0313 39.9805 82.3867 cv
46.3354 88.7397 54.145 93.2456 62.7358 95.5444 cv
60.438 86.9541 55.9316 79.1436 49.5781 72.7886 cv
43.2246 66.4355 35.4141 61.9297 26.8228 59.6313 cv
cp
68.583 101.392 mo
65.3062 100.753 li
54.4834 98.6445 44.626 93.3936 36.7988 85.5688 cv
28.9712 77.7412 23.7207 67.8833 21.6143 57.061 cv
20.9766 53.7847 li
24.2529 54.4229 li
35.0771 56.5313 44.9346 61.7817 52.7603 69.6069 cv
60.5864 77.4341 65.8369 87.292 67.9448 98.1147 cv
68.583 101.392 li
cp
f
121.041 59.6309 mo
112.449 61.9297 104.637 66.436 98.2837 72.7891 cv
91.9326 79.1421 87.4272 86.9517 85.1279 95.5435 cv
93.7173 93.2451 101.527 88.7393 107.881 82.3862 cv
114.238 76.0298 118.745 68.2202 121.041 59.6309 cv
cp
79.2798 101.391 mo
79.9185 98.1133 li
82.0283 87.2896 87.2788 77.4321 95.1016 69.6069 cv
102.927 61.7822 112.785 56.5313 123.61 54.4219 cv
126.886 53.7832 li
126.249 57.0601 li
124.144 67.8813 118.893 77.7397 111.063 85.5684 cv
103.237 93.394 93.3794 98.6445 82.5571 100.752 cv
79.2798 101.391 li
cp
f
86.5571 108.564 mo
93.2461 112.343 100.779 114.325 108.546 114.325 cv
116.324 114.325 123.865 112.343 130.558 108.564 cv
123.865 104.786 116.324 102.804 108.546 102.804 cv
100.779 102.804 93.2461 104.786 86.5571 108.564 cv
cp
108.546 118.825 mo
98.6875 118.825 89.1704 115.922 81.0239 110.43 cv
78.2568 108.564 li
81.0239 106.699 li
89.1704 101.207 98.6875 98.3037 108.546 98.3037 cv
118.417 98.3037 127.942 101.207 136.091 106.699 cv
138.86 108.564 li
136.091 110.43 li
127.942 115.922 118.417 118.825 108.546 118.825 cv
cp
f
76.1816 139.75 mo
71.6816 139.75 li
71.6816 113.94 li
76.1816 113.94 li
76.1816 139.75 li
cp
f
220.606 179.205 mo
217.905 179.205 li
217.905 175.982 li
220.606 175.982 li
221.614 175.982 222.389 176.594 222.389 177.602 cv
222.389 178.593 221.614 179.205 220.606 179.205 cv
cp
220.966 173.731 mo
215.349 173.731 li
215.349 185.741 li
217.905 185.741 li
217.905 181.456 li
220.966 181.456 li
223.559 181.456 225 179.691 225 177.602 cv
225 175.496 223.577 173.731 220.966 173.731 cv
cp
f
234.827 178.449 mo
229.155 178.449 li
229.155 173.731 li
226.599 173.731 li
226.599 185.741 li
229.155 185.741 li
229.155 180.681 li
234.827 180.681 li
234.827 185.741 li
237.402 185.741 li
237.402 173.731 li
234.827 173.731 li
234.827 178.449 li
cp
f
242.853 181.456 mo
244.726 176.289 li
246.598 181.456 li
242.853 181.456 li
cp
243.123 173.731 mo
238.496 185.741 li
241.395 185.741 li
242.151 183.707 li
247.3 183.707 li
248.057 185.741 li
250.956 185.741 li
246.328 173.731 li
243.123 173.731 li
cp
f
257.326 179.223 mo
254.625 179.223 li
254.625 175.982 li
257.326 175.982 li
258.334 175.982 259.108 176.594 259.108 177.584 cv
259.108 178.611 258.334 179.223 257.326 179.223 cv
cp
261.737 177.602 mo
261.737 175.37 260.188 173.731 257.686 173.731 cv
252.068 173.731 li
252.068 185.741 li
254.625 185.741 li
254.625 181.474 li
256.498 181.474 li
258.856 185.741 li
261.809 185.741 li
259.09 181.167 li
260.387 180.862 261.737 179.709 261.737 177.602 cv
cp
f
270.142 181.24 mo
267.225 173.731 li
263.642 173.731 li
263.642 185.741 li
266.199 185.741 li
266.199 177.081 li
269.584 185.741 li
270.7 185.741 li
274.085 177.081 li
274.085 185.741 li
276.66 185.741 li
276.66 173.731 li
273.059 173.731 li
270.142 181.24 li
cp
f
282.129 181.456 mo
284.001 176.289 li
285.874 181.456 li
282.129 181.456 li
cp
282.399 173.731 mo
277.771 185.741 li
280.67 185.741 li
281.427 183.707 li
286.576 183.707 li
287.333 185.741 li
290.231 185.741 li
285.604 173.731 li
282.399 173.731 li
cp
f
296.566 175.802 mo
297.791 175.802 298.871 176.577 299.375 177.548 cv
301.571 176.468 li
300.725 174.956 299.195 173.534 296.566 173.534 cv
292.947 173.534 290.156 176.036 290.156 179.746 cv
290.156 183.436 292.947 185.957 296.566 185.957 cv
299.195 185.957 300.725 184.499 301.571 183.004 cv
299.375 181.942 li
298.871 182.915 297.791 183.688 296.566 183.688 cv
294.369 183.688 292.785 182.014 292.785 179.746 cv
292.785 177.476 294.369 175.802 296.566 175.802 cv
cp
f
308.806 183.688 mo
306.573 183.688 305.15 181.978 305.15 179.746 cv
305.15 177.495 306.573 175.802 308.806 175.802 cv
311.021 175.802 312.443 177.495 312.443 179.746 cv
312.443 181.978 311.021 183.688 308.806 183.688 cv
cp
308.806 173.534 mo
305.168 173.534 302.522 176.126 302.522 179.746 cv
302.522 183.364 305.168 185.957 308.806 185.957 cv
312.425 185.957 315.072 183.364 315.072 179.746 cv
315.072 176.126 312.425 173.534 308.806 173.534 cv
cp
f
319.335 173.731 mo
316.76 173.731 li
316.76 185.741 li
324.412 185.741 li
324.412 183.491 li
319.335 183.491 li
319.335 173.731 li
cp
f
331.36 183.688 mo
329.127 183.688 327.705 181.978 327.705 179.746 cv
327.705 177.495 329.127 175.802 331.36 175.802 cv
333.575 175.802 334.997 177.495 334.997 179.746 cv
334.997 181.978 333.575 183.688 331.36 183.688 cv
cp
331.36 173.534 mo
327.723 173.534 325.076 176.126 325.076 179.746 cv
325.076 183.364 327.723 185.957 331.36 185.957 cv
334.979 185.957 337.626 183.364 337.626 179.746 cv
337.626 176.126 334.979 173.534 331.36 173.534 cv
cp
f
344.626 181.33 mo
347.795 181.33 li
347.795 182.77 li
347.309 183.22 346.318 183.688 345.256 183.688 cv
343.06 183.688 341.475 182.014 341.475 179.746 cv
341.475 177.476 343.06 175.802 345.256 175.802 cv
346.517 175.802 347.542 176.522 348.101 177.369 cv
350.208 176.216 li
349.307 174.793 347.741 173.534 345.256 173.534 cv
341.727 173.534 338.846 175.946 338.846 179.746 cv
338.846 183.526 341.727 185.957 345.256 185.957 cv
347.417 185.957 349.127 185.075 350.352 183.707 cv
350.352 179.097 li
344.626 179.097 li
344.626 181.33 li
cp
f
359.621 173.731 mo
356.65 178.539 li
353.679 173.731 li
350.762 173.731 li
355.371 180.826 li
355.371 185.741 li
357.928 185.741 li
357.928 180.826 li
362.52 173.731 li
359.621 173.731 li
cp
f
273.052 128.908 mo
281.283 128.908 li
281.283 98.5 li
273.052 98.5 li
273.052 128.908 li
cp
285.783 133.408 mo
268.552 133.408 li
268.552 94 li
285.783 94 li
285.783 133.408 li
cp
.0952911 .0952911 .0952911 rgb
f
276.555 14.0947 mo
273.66 14.0947 271.305 16.4497 271.305 19.3447 cv
271.305 22.2397 273.66 24.5947 276.555 24.5947 cv
279.45 24.5947 281.805 22.2397 281.805 19.3447 cv
281.805 16.4497 279.45 14.0947 276.555 14.0947 cv
cp
276.555 29.0947 mo
271.179 29.0947 266.805 24.7207 266.805 19.3447 cv
266.805 13.9688 271.179 9.59473 276.555 9.59473 cv
281.931 9.59473 286.305 13.9688 286.305 19.3447 cv
286.305 24.7207 281.931 29.0947 276.555 29.0947 cv
cp
f
301.313 14.0947 mo
298.418 14.0947 296.063 16.4497 296.063 19.3447 cv
296.063 22.2397 298.418 24.5947 301.313 24.5947 cv
304.208 24.5947 306.563 22.2397 306.563 19.3447 cv
306.563 16.4497 304.208 14.0947 301.313 14.0947 cv
cp
301.313 29.0947 mo
295.937 29.0947 291.563 24.7207 291.563 19.3447 cv
291.563 13.9688 295.937 9.59473 301.313 9.59473 cv
306.689 9.59473 311.063 13.9688 311.063 19.3447 cv
311.063 24.7207 306.689 29.0947 301.313 29.0947 cv
cp
f
276.555 38.8525 mo
273.66 38.8525 271.305 41.2075 271.305 44.1025 cv
271.305 46.9976 273.66 49.3525 276.555 49.3525 cv
279.45 49.3525 281.805 46.9976 281.805 44.1025 cv
281.805 41.2075 279.45 38.8525 276.555 38.8525 cv
cp
276.555 53.8525 mo
271.179 53.8525 266.805 49.4785 266.805 44.1025 cv
266.805 38.7266 271.179 34.3525 276.555 34.3525 cv
281.931 34.3525 286.305 38.7266 286.305 44.1025 cv
286.305 49.4785 281.931 53.8525 276.555 53.8525 cv
cp
f
301.313 38.8525 mo
298.418 38.8525 296.063 41.2075 296.063 44.1025 cv
296.063 46.9976 298.418 49.3525 301.313 49.3525 cv
304.208 49.3525 306.563 46.9976 306.563 44.1025 cv
306.563 41.2075 304.208 38.8525 301.313 38.8525 cv
cp
301.313 53.8525 mo
295.937 53.8525 291.563 49.4785 291.563 44.1025 cv
291.563 38.7266 295.937 34.3525 301.313 34.3525 cv
306.689 34.3525 311.063 38.7266 311.063 44.1025 cv
311.063 49.4785 306.689 53.8525 301.313 53.8525 cv
cp
f
261.71 140 mo
316.158 140 li
316.158 63.4473 li
261.71 63.4473 li
261.71 140 li
cp
320.658 144.5 mo
257.21 144.5 li
257.21 58.9473 li
320.658 58.9473 li
320.658 144.5 li
cp
f
309.316 133.408 mo
304.816 133.408 li
304.816 113.704 li
309.316 113.704 li
309.316 133.408 li
cp
f
299.316 133.408 mo
294.816 133.408 li
294.816 94 li
299.316 94 li
299.316 133.408 li
cp
f
269.576 73.6841 mo
308.292 73.6841 li
314.434 63.4473 li
263.434 63.4473 li
269.576 73.6841 li
cp
310.84 78.1841 mo
267.028 78.1841 li
255.487 58.9473 li
322.381 58.9473 li
310.84 78.1841 li
cp
f
319.62 63.0928 mo
317.196 59.3018 li
331.674 50.0439 li
334.098 53.835 li
319.62 63.0928 li
cp
f
258.249 63.0928 mo
243.77 53.835 li
246.194 50.0439 li
260.672 59.3018 li
258.249 63.0928 li
cp
f
261.71 58.9473 mo
316.158 58.9473 li
316.158 9.61914 li
316.158 8.25244 315.625 6.96631 314.658 5.99854 cv
313.692 5.03223 312.407 4.5 311.04 4.5 cv
266.829 4.5 li
265.461 4.5 264.176 5.03223 263.21 5.99854 cv
262.243 6.96631 261.71 8.25195 261.71 9.61914 cv
261.71 58.9473 li
cp
320.658 63.4473 mo
257.21 63.4473 li
257.21 9.61914 li
257.21 7.05029 258.211 4.63477 260.027 2.81738 cv
261.843 1.00049 264.258 0 266.829 0 cv
311.04 0 li
313.61 0 316.025 1.00049 317.841 2.81787 cv
319.657 4.63525 320.658 7.05078 320.658 9.61914 cv
320.658 63.4473 li
cp
f
450.354 179.205 mo
447.653 179.205 li
447.653 175.982 li
450.354 175.982 li
451.362 175.982 452.137 176.594 452.137 177.602 cv
452.137 178.593 451.362 179.205 450.354 179.205 cv
cp
450.714 173.731 mo
445.097 173.731 li
445.097 185.741 li
447.653 185.741 li
447.653 181.456 li
450.714 181.456 li
453.307 181.456 454.748 179.691 454.748 177.602 cv
454.748 175.496 453.325 173.731 450.714 173.731 cv
cp
.0980392 .0941176 .0941176 rgb
f
458.543 177.008 mo
458.543 176.289 459.155 175.82 460.236 175.82 cv
461.46 175.82 462.756 176.234 463.729 177.134 cv
465.151 175.226 li
463.963 174.127 462.378 173.551 460.47 173.551 cv
457.643 173.551 455.915 175.208 455.915 177.207 cv
455.915 181.726 462.829 180.267 462.829 182.356 cv
462.829 183.058 462.162 183.688 460.74 183.688 cv
459.083 183.688 457.769 182.932 456.923 182.05 cv
455.519 184.048 li
456.653 185.183 458.309 185.957 460.632 185.957 cv
463.855 185.957 465.439 184.3 465.439 182.104 cv
465.439 177.621 458.543 178.899 458.543 177.008 cv
cp
f
474.565 173.731 mo
471.594 178.539 li
468.623 173.731 li
465.706 173.731 li
470.315 180.826 li
470.315 185.741 li
472.873 185.741 li
472.873 180.826 li
477.464 173.731 li
474.565 173.731 li
cp
f
483.69 175.802 mo
484.915 175.802 485.995 176.577 486.499 177.548 cv
488.695 176.468 li
487.849 174.956 486.319 173.534 483.69 173.534 cv
480.071 173.534 477.28 176.036 477.28 179.746 cv
477.28 183.436 480.071 185.957 483.69 185.957 cv
486.319 185.957 487.849 184.499 488.695 183.004 cv
486.499 181.942 li
485.995 182.915 484.915 183.688 483.69 183.688 cv
481.493 183.688 479.909 182.014 479.909 179.746 cv
479.909 177.476 481.493 175.802 483.69 175.802 cv
cp
f
498.451 178.449 mo
492.779 178.449 li
492.779 173.731 li
490.222 173.731 li
490.222 185.741 li
492.779 185.741 li
492.779 180.681 li
498.451 180.681 li
498.451 185.741 li
501.025 185.741 li
501.025 173.731 li
498.451 173.731 li
498.451 178.449 li
cp
f
509.087 183.688 mo
506.854 183.688 505.433 181.978 505.433 179.746 cv
505.433 177.495 506.854 175.802 509.087 175.802 cv
511.302 175.802 512.725 177.495 512.725 179.746 cv
512.725 181.978 511.302 183.688 509.087 183.688 cv
cp
509.087 173.534 mo
505.45 173.534 502.804 176.126 502.804 179.746 cv
502.804 183.364 505.45 185.957 509.087 185.957 cv
512.706 185.957 515.354 183.364 515.354 179.746 cv
515.354 176.126 512.706 173.534 509.087 173.534 cv
cp
f
519.616 173.731 mo
517.042 173.731 li
517.042 185.741 li
524.694 185.741 li
524.694 183.491 li
519.616 183.491 li
519.616 173.731 li
cp
f
531.642 183.688 mo
529.409 183.688 527.987 181.978 527.987 179.746 cv
527.987 177.495 529.409 175.802 531.642 175.802 cv
533.856 175.802 535.278 177.495 535.278 179.746 cv
535.278 181.978 533.856 183.688 531.642 183.688 cv
cp
531.642 173.534 mo
528.005 173.534 525.358 176.126 525.358 179.746 cv
525.358 183.364 528.005 185.957 531.642 185.957 cv
535.261 185.957 537.907 183.364 537.907 179.746 cv
537.907 176.126 535.261 173.534 531.642 173.534 cv
cp
f
544.907 181.33 mo
548.077 181.33 li
548.077 182.77 li
547.591 183.22 546.601 183.688 545.538 183.688 cv
543.341 183.688 541.757 182.014 541.757 179.746 cv
541.757 177.476 543.341 175.802 545.538 175.802 cv
546.798 175.802 547.825 176.522 548.384 177.369 cv
550.489 176.216 li
549.589 174.793 548.022 173.534 545.538 173.534 cv
542.009 173.534 539.128 175.946 539.128 179.746 cv
539.128 183.526 542.009 185.957 545.538 185.957 cv
547.698 185.957 549.409 185.075 550.634 183.707 cv
550.634 179.097 li
544.907 179.097 li
544.907 181.33 li
cp
f
559.903 173.731 mo
556.933 178.539 li
553.96 173.731 li
551.044 173.731 li
555.653 180.826 li
555.653 185.741 li
558.21 185.741 li
558.21 180.826 li
562.802 173.731 li
559.903 173.731 li
cp
f
494.134 111.669 mo
497.983 136.866 li
547.255 122.4 li
541.748 93.9297 li
551.385 66.0605 li
552.975 61.4204 553.782 56.5591 553.782 51.6177 cv
553.782 27.0156 533.768 7 509.167 7 cv
484.563 7 464.546 27.0156 464.546 51.6177 cv
464.518 57.6187 li
455.013 85.4277 li
466.157 85.4277 li
468.491 114.811 li
494.134 111.669 li
cp
494.313 142.634 mo
490.345 116.667 li
464.377 119.849 li
462 89.9277 li
448.719 89.9277 li
460.018 56.8706 li
460.018 49.3677 li
460.097 49.3677 li
461.277 23.3237 482.835 2.5 509.167 2.5 cv
536.249 2.5 558.282 24.5342 558.282 51.6177 cv
558.282 57.0566 557.393 62.4087 555.64 67.5254 cv
546.395 94.2598 li
552.45 125.564 li
494.313 142.634 li
cp
.0952911 .0952911 .0952911 rgb
f
509.2 26.3701 mo
495.272 26.3701 483.941 37.6958 483.941 51.6167 cv
483.941 65.5405 495.272 76.8682 509.2 76.8682 cv
523.118 76.8682 534.44 65.5405 534.44 51.6167 cv
534.44 37.6958 523.118 26.3701 509.2 26.3701 cv
cp
509.2 81.3682 mo
492.791 81.3682 479.441 68.0215 479.441 51.6167 cv
479.441 35.2144 492.791 21.8701 509.2 21.8701 cv
525.599 21.8701 538.94 35.2144 538.94 51.6167 cv
538.94 68.0215 525.599 81.3682 509.2 81.3682 cv
cp
f
511.44 63.6826 mo
506.94 63.6826 li
506.94 39.5552 li
511.44 39.5552 li
511.44 63.6826 li
cp
f
521.255 53.8691 mo
497.134 53.8691 li
497.134 49.3691 li
521.255 49.3691 li
521.255 53.8691 li
cp
f
689.577 181.33 mo
692.746 181.33 li
692.746 182.77 li
692.26 183.22 691.27 183.688 690.207 183.688 cv
688.011 183.688 686.427 182.014 686.427 179.746 cv
686.427 177.476 688.011 175.802 690.207 175.802 cv
691.468 175.802 692.493 176.522 693.052 177.369 cv
695.159 176.216 li
694.259 174.793 692.692 173.534 690.207 173.534 cv
686.679 173.534 683.798 175.946 683.798 179.746 cv
683.798 183.526 686.679 185.957 690.207 185.957 cv
692.368 185.957 694.078 185.075 695.303 183.707 cv
695.303 179.097 li
689.577 179.097 li
689.577 181.33 li
cp
.0980392 .0941176 .0941176 rgb
f
697.333 185.741 mo
705.832 185.741 li
705.832 183.491 li
699.89 183.491 li
699.89 180.753 li
705.706 180.753 li
705.706 178.502 li
699.89 178.502 li
699.89 175.982 li
705.832 175.982 li
705.832 173.731 li
697.333 173.731 li
697.333 185.741 li
cp
f
716.02 181.276 mo
710.456 173.731 li
707.827 173.731 li
707.827 185.741 li
710.384 185.741 li
710.384 177.909 li
716.109 185.741 li
718.576 185.741 li
718.576 173.731 li
716.02 173.731 li
716.02 181.276 li
cp
f
725.685 183.491 mo
723.505 183.491 li
723.505 175.982 li
725.702 175.982 li
728.151 175.982 729.447 177.621 729.447 179.727 cv
729.447 181.78 728.061 183.491 725.685 183.491 cv
cp
725.685 173.731 mo
720.948 173.731 li
720.948 185.741 li
725.702 185.741 li
729.447 185.741 732.058 183.364 732.058 179.727 cv
732.058 176.126 729.447 173.731 725.685 173.731 cv
cp
f
733.872 185.741 mo
742.371 185.741 li
742.371 183.491 li
736.429 183.491 li
736.429 180.753 li
742.245 180.753 li
742.245 178.502 li
736.429 178.502 li
736.429 175.982 li
742.371 175.982 li
742.371 173.731 li
733.872 173.731 li
733.872 185.741 li
cp
f
749.624 179.223 mo
746.923 179.223 li
746.923 175.982 li
749.624 175.982 li
750.632 175.982 751.406 176.594 751.406 177.584 cv
751.406 178.611 750.632 179.223 749.624 179.223 cv
cp
751.388 181.167 mo
752.685 180.862 754.035 179.709 754.035 177.602 cv
754.035 175.37 752.486 173.731 749.983 173.731 cv
744.366 173.731 li
744.366 185.741 li
746.923 185.741 li
746.923 181.474 li
748.796 181.474 li
751.154 185.741 li
754.106 185.741 li
751.388 181.167 li
cp
f
725.138 30.2388 mo
708.122 30.2388 694.278 44.082 694.278 61.0981 cv
694.278 78.1143 708.122 91.9575 725.138 91.9575 cv
742.153 91.9575 755.997 78.1143 755.997 61.0981 cv
755.997 44.082 742.153 30.2388 725.138 30.2388 cv
cp
725.138 96.4575 mo
705.641 96.4575 689.778 80.5952 689.778 61.0981 cv
689.778 41.6011 705.641 25.7388 725.138 25.7388 cv
744.635 25.7388 760.497 41.6011 760.497 61.0981 cv
760.497 80.5952 744.635 96.4575 725.138 96.4575 cv
cp
f
750.141 39.2769 mo
746.959 36.0952 li
777.395 5.65967 li
780.576 8.84131 li
750.141 39.2769 li
cp
f
781.235 30.6621 mo
776.735 30.6621 li
776.735 9.50049 li
755.573 9.5 li
755.573 5 li
781.235 5.00049 li
781.235 30.6621 li
cp
f
692.028 30.2388 mo
675.013 30.2388 661.169 44.082 661.169 61.0981 cv
661.169 78.1143 675.013 91.9575 692.028 91.9575 cv
709.044 91.9575 722.888 78.1143 722.888 61.0981 cv
722.888 44.082 709.044 30.2388 692.028 30.2388 cv
cp
692.028 96.4575 mo
672.531 96.4575 656.669 80.5952 656.669 61.0981 cv
656.669 41.6011 672.531 25.7388 692.028 25.7388 cv
711.525 25.7388 727.388 41.6011 727.388 61.0981 cv
727.388 80.5952 711.525 96.4575 692.028 96.4575 cv
cp
f
694.278 137.25 mo
689.778 137.25 li
689.778 94.2075 li
694.278 94.2075 li
694.278 137.25 li
cp
f
708.583 122.946 mo
675.474 122.946 li
675.474 118.446 li
708.583 118.446 li
708.583 122.946 li
cp
f
694.278 137.25 mo
689.778 137.25 li
689.778 94.2075 li
694.278 94.2075 li
694.278 137.25 li
cp
f
880.259 183.491 mo
878.079 183.491 li
878.079 175.982 li
880.276 175.982 li
882.726 175.982 884.022 177.621 884.022 179.727 cv
884.022 181.78 882.636 183.491 880.259 183.491 cv
cp
880.259 173.731 mo
875.522 173.731 li
875.522 185.741 li
880.276 185.741 li
884.022 185.741 886.632 183.364 886.632 179.727 cv
886.632 176.126 884.022 173.731 880.259 173.731 cv
cp
f
888.446 185.741 mo
891.003 185.741 li
891.003 173.731 li
888.446 173.731 li
888.446 185.741 li
cp
f
896.476 181.456 mo
898.349 176.289 li
900.22 181.456 li
896.476 181.456 li
cp
896.745 173.731 mo
892.118 185.741 li
895.017 185.741 li
895.772 183.707 li
900.923 183.707 li
901.679 185.741 li
904.577 185.741 li
899.95 173.731 li
896.745 173.731 li
cp
f
910.282 181.33 mo
913.452 181.33 li
913.452 182.77 li
912.966 183.22 911.976 183.688 910.913 183.688 cv
908.716 183.688 907.132 182.014 907.132 179.746 cv
907.132 177.476 908.716 175.802 910.913 175.802 cv
912.173 175.802 913.198 176.522 913.757 177.369 cv
915.864 176.216 li
914.964 174.793 913.397 173.534 910.913 173.534 cv
907.384 173.534 904.503 175.946 904.503 179.746 cv
904.503 183.526 907.384 185.957 910.913 185.957 cv
913.073 185.957 914.784 185.075 916.009 183.707 cv
916.009 179.097 li
910.282 179.097 li
910.282 181.33 li
cp
f
926.231 181.276 mo
920.667 173.731 li
918.038 173.731 li
918.038 185.741 li
920.595 185.741 li
920.595 177.909 li
926.321 185.741 li
928.788 185.741 li
928.788 173.731 li
926.231 173.731 li
926.231 181.276 li
cp
f
936.868 183.688 mo
934.634 183.688 933.212 181.978 933.212 179.746 cv
933.212 177.495 934.634 175.802 936.868 175.802 cv
939.081 175.802 940.505 177.495 940.505 179.746 cv
940.505 181.978 939.081 183.688 936.868 183.688 cv
cp
936.868 173.534 mo
933.229 173.534 930.583 176.126 930.583 179.746 cv
930.583 183.364 933.229 185.957 936.868 185.957 cv
940.487 185.957 943.134 183.364 943.134 179.746 cv
943.134 176.126 940.487 173.534 936.868 173.534 cv
cp
f
947.126 177.008 mo
947.126 176.289 947.737 175.82 948.817 175.82 cv
950.042 175.82 951.339 176.234 952.312 177.134 cv
953.733 175.226 li
952.546 174.127 950.96 173.551 949.052 173.551 cv
946.226 173.551 944.497 175.208 944.497 177.207 cv
944.497 181.726 951.411 180.267 951.411 182.356 cv
951.411 183.058 950.745 183.688 949.323 183.688 cv
947.665 183.688 946.351 182.932 945.505 182.05 cv
944.101 184.048 li
945.235 185.183 946.892 185.957 949.214 185.957 cv
952.437 185.957 954.022 184.3 954.022 182.104 cv
954.022 177.621 947.126 178.899 947.126 177.008 cv
cp
f
954.757 175.982 mo
958.269 175.982 li
958.269 185.741 li
960.843 185.741 li
960.843 175.982 li
964.337 175.982 li
964.337 173.731 li
954.757 173.731 li
954.757 175.982 li
cp
f
965.972 185.741 mo
968.528 185.741 li
968.528 173.731 li
965.972 173.731 li
965.972 185.741 li
cp
f
976.737 175.802 mo
977.96 175.802 979.042 176.577 979.546 177.548 cv
981.741 176.468 li
980.896 174.956 979.366 173.534 976.737 173.534 cv
973.118 173.534 970.327 176.036 970.327 179.746 cv
970.327 183.436 973.118 185.957 976.737 185.957 cv
979.366 185.957 980.896 184.499 981.741 183.004 cv
979.546 181.942 li
979.042 182.915 977.96 183.688 976.737 183.688 cv
974.54 183.688 972.956 182.014 972.956 179.746 cv
972.956 177.476 974.54 175.802 976.737 175.802 cv
cp
f
985.466 177.008 mo
985.466 176.289 986.077 175.82 987.157 175.82 cv
988.382 175.82 989.679 176.234 990.651 177.134 cv
992.073 175.226 li
990.886 174.127 989.3 173.551 987.392 173.551 cv
984.565 173.551 982.837 175.208 982.837 177.207 cv
982.837 181.726 989.751 180.267 989.751 182.356 cv
989.751 183.058 989.085 183.688 987.663 183.688 cv
986.005 183.688 984.69 182.932 983.845 182.05 cv
982.44 184.048 li
983.575 185.183 985.231 185.957 987.554 185.957 cv
990.776 185.957 992.362 184.3 992.362 182.104 cv
992.362 177.621 985.466 178.899 985.466 177.008 cv
cp
f
953.104 128.808 mo
914.779 128.808 li
914.779 116.083 li
919.279 116.083 li
919.279 124.308 li
948.604 124.308 li
948.604 116.083 li
953.104 116.083 li
953.104 128.808 li
cp
.0952911 .0952911 .0952911 rgb
f
960.507 128.808 mo
907.38 128.808 li
907.38 124.308 li
960.507 124.308 li
960.507 128.808 li
cp
f
878.692 93.5952 mo
989.192 93.5952 li
989.192 21.999 li
989.192 21.5186 989.003 21.0635 988.657 20.7173 cv
988.319 20.3779 987.868 20.1919 987.384 20.1919 cv
880.502 20.1919 li
880.018 20.1919 879.562 20.3804 879.218 20.7231 cv
878.882 21.061 878.692 21.5171 878.692 21.999 cv
878.692 93.5952 li
cp
993.692 98.0952 mo
874.192 98.0952 li
874.192 21.999 li
874.192 20.3193 874.847 18.7368 876.034 17.5425 cv
877.235 16.3462 878.819 15.6919 880.502 15.6919 cv
987.384 15.6919 li
989.075 15.6919 990.66 16.3491 991.847 17.5425 cv
993.036 18.7358 993.692 20.3193 993.692 21.999 cv
993.692 98.0952 li
cp
f
878.692 98.0952 mo
878.692 105.314 li
878.692 105.798 878.88 106.251 879.22 106.589 cv
879.563 106.937 880.014 107.121 880.5 107.121 cv
987.384 107.121 li
987.87 107.121 988.32 106.937 988.652 106.601 cv
989.005 106.25 989.192 105.798 989.192 105.314 cv
989.192 98.0952 li
878.692 98.0952 li
cp
987.384 111.621 mo
880.5 111.621 li
878.805 111.621 877.219 110.963 876.034 109.768 cv
874.851 108.591 874.192 107.005 874.192 105.314 cv
874.192 93.5952 li
993.692 93.5952 li
993.692 105.314 li
993.692 107.004 993.033 108.59 991.838 109.78 cv
990.665 110.963 989.079 111.621 987.384 111.621 cv
cp
f
888.276 84.0112 mo
979.61 84.0112 li
979.61 29.7739 li
888.276 29.7739 li
888.276 84.0112 li
cp
984.11 88.5112 mo
883.776 88.5112 li
883.776 25.2739 li
984.11 25.2739 li
984.11 88.5112 li
cp
f
931.693 74.5933 mo
931.693 50.0562 li
922.606 59.1426 li
917.166 59.1426 li
907.57 68.7388 li
907.57 55.9106 li
904.338 59.1426 li
886.026 59.1426 li
886.026 54.6426 li
902.475 54.6426 li
912.07 45.0464 li
912.07 57.8745 li
915.303 54.6426 li
920.743 54.6426 li
936.193 39.1919 li
936.193 63.729 li
945.28 54.6426 li
950.721 54.6426 li
960.316 45.0464 li
960.316 57.8745 li
963.549 54.6426 li
981.86 54.6426 li
981.86 59.1426 li
965.412 59.1426 li
955.816 68.7388 li
955.816 55.9106 li
952.584 59.1426 li
947.144 59.1426 li
931.693 74.5933 li
cp
f
255.618 393.464 mo
249.946 393.464 li
249.946 388.747 li
247.39 388.747 li
247.39 400.756 li
249.946 400.756 li
249.946 395.697 li
255.618 395.697 li
255.618 400.756 li
258.193 400.756 li
258.193 388.747 li
255.618 388.747 li
255.618 393.464 li
cp
.0980392 .0941176 .0941176 rgb
f
266.255 398.704 mo
264.022 398.704 262.6 396.994 262.6 394.761 cv
262.6 392.51 264.022 390.818 266.255 390.818 cv
268.47 390.818 269.892 392.51 269.892 394.761 cv
269.892 396.994 268.47 398.704 266.255 398.704 cv
cp
266.255 388.549 mo
262.618 388.549 259.971 391.142 259.971 394.761 cv
259.971 398.379 262.618 400.972 266.255 400.972 cv
269.874 400.972 272.521 398.379 272.521 394.761 cv
272.521 391.142 269.874 388.549 266.255 388.549 cv
cp
f
276.514 392.024 mo
276.514 391.304 277.126 390.835 278.207 390.835 cv
279.431 390.835 280.727 391.25 281.7 392.15 cv
283.122 390.242 li
281.934 389.143 280.349 388.567 278.44 388.567 cv
275.614 388.567 273.885 390.223 273.885 392.222 cv
273.885 396.742 280.799 395.283 280.799 397.372 cv
280.799 398.074 280.133 398.704 278.71 398.704 cv
277.054 398.704 275.74 397.948 274.894 397.066 cv
273.489 399.064 li
274.624 400.199 276.28 400.972 278.603 400.972 cv
281.826 400.972 283.41 399.316 283.41 397.12 cv
283.41 392.636 276.514 393.915 276.514 392.024 cv
cp
f
290.375 394.22 mo
287.674 394.22 li
287.674 390.998 li
290.375 390.998 li
291.383 390.998 292.157 391.61 292.157 392.618 cv
292.157 393.609 291.383 394.22 290.375 394.22 cv
cp
290.735 388.747 mo
285.117 388.747 li
285.117 400.756 li
287.674 400.756 li
287.674 396.471 li
290.735 396.471 li
293.328 396.471 294.768 394.707 294.768 392.618 cv
294.768 390.511 293.346 388.747 290.735 388.747 cv
cp
f
296.367 400.756 mo
298.924 400.756 li
298.924 388.747 li
296.367 388.747 li
296.367 400.756 li
cp
f
310.139 388.747 mo
300.561 388.747 li
300.561 390.998 li
304.072 390.998 li
304.072 400.756 li
306.646 400.756 li
306.646 390.998 li
310.139 390.998 li
310.139 388.747 li
cp
f
313.719 396.471 mo
315.592 391.304 li
317.464 396.471 li
313.719 396.471 li
cp
313.989 388.747 mo
309.362 400.756 li
312.261 400.756 li
313.017 398.722 li
318.167 398.722 li
318.923 400.756 li
321.822 400.756 li
317.194 388.747 li
313.989 388.747 li
cp
f
325.401 398.506 mo
325.401 388.747 li
322.827 388.747 li
322.827 400.756 li
330.479 400.756 li
330.479 398.506 li
325.401 398.506 li
cp
f
268.309 306.587 mo
228.142 306.587 li
228.142 284.587 li
268.309 284.587 li
268.309 289.087 li
232.642 289.087 li
232.642 302.087 li
268.309 302.087 li
268.309 306.587 li
cp
.0952911 .0952911 .0952911 rgb
f
222.642 322.253 mo
218.142 322.253 li
218.142 252.253 li
222.642 252.253 li
222.642 322.253 li
cp
f
359.726 322.253 mo
355.226 322.253 li
355.226 284.587 li
359.726 284.587 li
359.726 322.253 li
cp
f
270.559 311.712 mo
345.226 311.712 li
345.226 289.087 li
270.559 289.087 li
270.559 311.712 li
cp
349.726 316.212 mo
266.059 316.212 li
266.059 284.587 li
349.726 284.587 li
349.726 316.212 li
cp
f
233.454 273.908 mo
236.179 277.75 240.63 280.087 245.366 280.087 cv
250.101 280.087 254.552 277.75 257.277 273.908 cv
254.551 270.067 250.1 267.729 245.366 267.729 cv
240.63 267.729 236.179 270.067 233.454 273.908 cv
cp
245.366 284.587 mo
238.583 284.587 232.249 280.927 228.835 275.036 cv
228.181 273.908 li
228.835 272.78 li
232.25 266.889 238.584 263.229 245.366 263.229 cv
252.147 263.229 258.48 266.889 261.896 272.78 cv
262.549 273.908 li
261.896 275.036 li
258.482 280.927 252.148 284.587 245.366 284.587 cv
cp
f
278.059 313.962 mo
273.559 313.962 li
273.559 286.837 li
278.059 286.837 li
278.059 313.962 li
cp
f
35.4121 397.965 mo
32.0811 388.747 li
29.1816 388.747 li
33.8096 400.756 li
37.0146 400.756 li
41.6416 388.747 li
38.7432 388.747 li
35.4121 397.965 li
cp
.0980392 .0941176 .0941176 rgb
f
42.7549 400.756 mo
45.3115 400.756 li
45.3115 388.747 li
42.7549 388.747 li
42.7549 400.756 li
cp
f
52.9434 394.238 mo
50.2432 394.238 li
50.2432 390.998 li
52.9434 390.998 li
53.9521 390.998 54.7266 391.609 54.7266 392.6 cv
54.7266 393.626 53.9521 394.238 52.9434 394.238 cv
cp
57.3555 392.618 mo
57.3555 390.385 55.8066 388.747 53.3037 388.747 cv
47.6865 388.747 li
47.6865 400.756 li
50.2432 400.756 li
50.2432 396.489 li
52.1152 396.489 li
54.4746 400.756 li
57.4268 400.756 li
54.708 396.183 li
56.0049 395.877 57.3555 394.725 57.3555 392.618 cv
cp
f
64.9678 398.704 mo
62.7354 398.704 61.3125 396.993 61.3125 394.761 cv
61.3125 392.51 62.7354 390.817 64.9678 390.817 cv
67.1826 390.817 68.6045 392.51 68.6045 394.761 cv
68.6045 396.993 67.1826 398.704 64.9678 398.704 cv
cp
64.9678 388.549 mo
61.3301 388.549 58.6836 391.142 58.6836 394.761 cv
58.6836 398.38 61.3301 400.973 64.9678 400.973 cv
68.5869 400.973 71.2334 398.38 71.2334 394.761 cv
71.2334 391.142 68.5869 388.549 64.9678 388.549 cv
cp
f
75.4971 388.747 mo
72.9219 388.747 li
72.9219 400.756 li
80.5742 400.756 li
80.5742 398.506 li
75.4971 398.506 li
75.4971 388.747 li
cp
f
87.5215 398.704 mo
85.2891 398.704 83.8662 396.993 83.8662 394.761 cv
83.8662 392.51 85.2891 390.817 87.5215 390.817 cv
89.7363 390.817 91.1592 392.51 91.1592 394.761 cv
91.1592 396.993 89.7363 398.704 87.5215 398.704 cv
cp
87.5215 388.549 mo
83.8848 388.549 81.2383 391.142 81.2383 394.761 cv
81.2383 398.38 83.8848 400.973 87.5215 400.973 cv
91.1406 400.973 93.7881 398.38 93.7881 394.761 cv
93.7881 391.142 91.1406 388.549 87.5215 388.549 cv
cp
f
100.788 396.345 mo
103.957 396.345 li
103.957 397.786 li
103.471 398.235 102.48 398.704 101.418 398.704 cv
99.2207 398.704 97.6367 397.029 97.6367 394.761 cv
97.6367 392.492 99.2207 390.817 101.418 390.817 cv
102.678 390.817 103.704 391.538 104.263 392.384 cv
106.369 391.231 li
105.469 389.809 103.902 388.549 101.418 388.549 cv
97.8887 388.549 95.0078 390.961 95.0078 394.761 cv
95.0078 398.542 97.8887 400.973 101.418 400.973 cv
103.578 400.973 105.289 400.09 106.514 398.722 cv
106.514 394.112 li
100.788 394.112 li
100.788 396.345 li
cp
f
115.782 388.747 mo
112.812 393.554 li
109.841 388.747 li
106.924 388.747 li
111.533 395.841 li
111.533 400.756 li
114.09 400.756 li
114.09 395.841 li
118.682 388.747 li
115.782 388.747 li
cp
f
73.9316 229.503 mo
42.0884 229.503 16.1816 255.41 16.1816 287.253 cv
16.1816 319.096 42.0884 345.003 73.9316 345.003 cv
105.775 345.003 131.682 319.096 131.682 287.253 cv
131.682 255.41 105.775 229.503 73.9316 229.503 cv
cp
73.9316 349.503 mo
39.6069 349.503 11.6816 321.578 11.6816 287.253 cv
11.6816 252.928 39.6069 225.003 73.9316 225.003 cv
108.256 225.003 136.182 252.928 136.182 287.253 cv
136.182 321.578 108.256 349.503 73.9316 349.503 cv
cp
.095291 .095291 .095291 rgb
f
73.9316 240.503 mo
48.1538 240.503 27.1816 261.475 27.1816 287.253 cv
27.1816 313.031 48.1538 334.003 73.9316 334.003 cv
99.7095 334.003 120.682 313.031 120.682 287.253 cv
120.682 261.475 99.7095 240.503 73.9316 240.503 cv
cp
73.9316 338.503 mo
45.6724 338.503 22.6816 315.512 22.6816 287.253 cv
22.6816 258.994 45.6724 236.003 73.9316 236.003 cv
102.191 236.003 125.182 258.994 125.182 287.253 cv
125.182 315.512 102.191 338.503 73.9316 338.503 cv
cp
f
87.3467 281.165 mo
85.2783 281.165 83.5957 282.848 83.5957 284.917 cv
83.5957 286.984 85.2783 288.665 87.3467 288.665 cv
89.4141 288.665 91.0957 286.984 91.0957 284.917 cv
91.0957 282.848 89.4141 281.165 87.3467 281.165 cv
cp
87.3467 293.165 mo
82.7969 293.165 79.0957 289.465 79.0957 284.917 cv
79.0957 280.367 82.7969 276.665 87.3467 276.665 cv
91.895 276.665 95.5957 280.367 95.5957 284.917 cv
95.5957 289.465 91.895 293.165 87.3467 293.165 cv
cp
f
49.2188 270.243 mo
45.7734 270.243 42.9707 273.049 42.9707 276.497 cv
42.9707 279.943 45.7734 282.747 49.2188 282.747 cv
52.666 282.747 55.4707 279.943 55.4707 276.497 cv
55.4707 273.049 52.666 270.243 49.2188 270.243 cv
cp
49.2188 287.247 mo
43.2925 287.247 38.4707 282.425 38.4707 276.497 cv
38.4707 270.567 43.2925 265.743 49.2188 265.743 cv
55.1475 265.743 59.9707 270.567 59.9707 276.497 cv
59.9707 282.425 55.1475 287.247 49.2188 287.247 cv
cp
f
77.4502 254.956 mo
76.7285 254.956 76.1416 255.545 76.1416 256.269 cv
76.1416 256.993 76.7285 257.583 77.4502 257.583 cv
78.1748 257.583 78.7646 256.993 78.7646 256.269 cv
78.7646 255.545 78.1748 254.956 77.4502 254.956 cv
cp
77.4502 262.083 mo
74.2476 262.083 71.6416 259.475 71.6416 256.269 cv
71.6416 253.063 74.2476 250.456 77.4502 250.456 cv
80.6563 250.456 83.2646 253.063 83.2646 256.269 cv
83.2646 259.475 80.6563 262.083 77.4502 262.083 cv
cp
f
51.9629 301.603 mo
50.7222 301.603 49.7129 302.612 49.7129 303.853 cv
49.7129 305.093 50.7222 306.103 51.9629 306.103 cv
53.2036 306.103 54.2129 305.093 54.2129 303.853 cv
54.2129 302.612 53.2036 301.603 51.9629 301.603 cv
cp
51.9629 310.603 mo
48.2407 310.603 45.2129 307.575 45.2129 303.853 cv
45.2129 300.13 48.2407 297.103 51.9629 297.103 cv
55.6851 297.103 58.7129 300.13 58.7129 303.853 cv
58.7129 307.575 55.6851 310.603 51.9629 310.603 cv
cp
f
81.4844 312.218 mo
81.4844 313.46 80.4785 314.466 79.2373 314.466 cv
77.9893 314.466 76.9844 313.46 76.9844 312.218 cv
76.9844 310.976 77.9893 309.97 79.2373 309.97 cv
80.4785 309.97 81.4844 310.976 81.4844 312.218 cv
cp
.0980392 .0941176 .0941176 rgb
f
106.572 273.811 mo
106.572 275.056 105.568 276.059 104.321 276.059 cv
103.077 276.059 102.072 275.056 102.072 273.811 cv
102.072 272.566 103.077 271.559 104.321 271.559 cv
105.568 271.559 106.572 272.566 106.572 273.811 cv
cp
f
90.6582 257.893 mo
90.6582 259.136 89.6523 260.138 88.4092 260.138 cv
87.167 260.138 86.1582 259.136 86.1582 257.893 cv
86.1582 256.646 87.167 255.64 88.4092 255.64 cv
89.6523 255.64 90.6582 256.646 90.6582 257.893 cv
cp
f
101.34 305.763 mo
100.178 305.763 99.2324 306.707 99.2324 307.868 cv
99.2324 309.026 100.178 309.968 101.34 309.968 cv
102.497 309.968 103.438 309.026 103.438 307.868 cv
103.438 306.707 102.497 305.763 101.34 305.763 cv
cp
101.34 314.468 mo
97.6963 314.468 94.7324 311.507 94.7324 307.868 cv
94.7324 304.226 97.6963 301.263 101.34 301.263 cv
104.979 301.263 107.938 304.226 107.938 307.868 cv
107.938 311.507 104.979 314.468 101.34 314.468 cv
cp
.095291 .095291 .095291 rgb
f
69.0137 283.622 mo
69.0137 284.865 68.0068 285.868 66.7598 285.868 cv
65.5244 285.868 64.5137 284.865 64.5137 283.622 cv
64.5137 282.378 65.5244 281.368 66.7598 281.368 cv
68.0068 281.368 69.0137 282.378 69.0137 283.622 cv
cp
.0980392 .0941176 .0941176 rgb
f
63.9434 260.41 mo
63.9434 261.654 62.9434 262.66 61.6934 262.66 cv
60.4492 262.66 59.4434 261.654 59.4434 260.41 cv
59.4434 259.165 60.4492 258.16 61.6934 258.16 cv
62.9434 258.16 63.9434 259.165 63.9434 260.41 cv
cp
f
73.7637 320.613 mo
73.7637 321.856 72.7568 322.859 71.5098 322.859 cv
70.2744 322.859 69.2637 321.856 69.2637 320.613 cv
69.2637 319.37 70.2744 318.363 71.5098 318.363 cv
72.7568 318.363 73.7637 319.37 73.7637 320.613 cv
cp
f
441.281 390.899 mo
444.792 390.899 li
444.792 400.658 li
447.367 400.658 li
447.367 390.899 li
450.86 390.899 li
450.86 388.648 li
441.281 388.648 li
441.281 390.899 li
cp
f
452.495 400.658 mo
460.994 400.658 li
460.994 398.407 li
455.052 398.407 li
455.052 395.67 li
460.868 395.67 li
460.868 393.419 li
455.052 393.419 li
455.052 390.899 li
460.994 390.899 li
460.994 388.648 li
452.495 388.648 li
452.495 400.658 li
cp
f
469.489 396.156 mo
466.572 388.648 li
462.989 388.648 li
462.989 400.658 li
465.546 400.658 li
465.546 391.997 li
468.931 400.658 li
470.047 400.658 li
473.432 391.997 li
473.432 400.658 li
476.007 400.658 li
476.007 388.648 li
472.405 388.648 li
469.489 396.156 li
cp
f
483.637 394.122 mo
480.936 394.122 li
480.936 390.899 li
483.637 390.899 li
484.645 390.899 485.419 391.51 485.419 392.519 cv
485.419 393.509 484.645 394.122 483.637 394.122 cv
cp
483.997 388.648 mo
478.379 388.648 li
478.379 400.658 li
480.936 400.658 li
480.936 396.373 li
483.997 396.373 li
486.59 396.373 488.03 394.608 488.03 392.519 cv
488.03 390.413 486.607 388.648 483.997 388.648 cv
cp
f
489.629 400.658 mo
498.128 400.658 li
498.128 398.407 li
492.186 398.407 li
492.186 395.67 li
498.002 395.67 li
498.002 393.419 li
492.186 393.419 li
492.186 390.899 li
498.128 390.899 li
498.128 388.648 li
489.629 388.648 li
489.629 400.658 li
cp
f
505.38 394.139 mo
502.68 394.139 li
502.68 390.899 li
505.38 390.899 li
506.389 390.899 507.162 391.51 507.162 392.501 cv
507.162 393.527 506.389 394.139 505.38 394.139 cv
cp
509.791 392.519 mo
509.791 390.287 508.242 388.648 505.74 388.648 cv
500.123 388.648 li
500.123 400.658 li
502.68 400.658 li
502.68 396.39 li
504.552 396.39 li
506.91 400.658 li
509.863 400.658 li
507.145 396.084 li
508.441 395.778 509.791 394.625 509.791 392.519 cv
cp
f
514.793 396.373 mo
516.666 391.205 li
518.538 396.373 li
514.793 396.373 li
cp
515.063 388.648 mo
510.436 400.658 li
513.334 400.658 li
514.091 398.623 li
519.24 398.623 li
519.996 400.658 li
522.896 400.658 li
518.268 388.648 li
515.063 388.648 li
cp
f
522.118 390.899 mo
525.629 390.899 li
525.629 400.658 li
528.204 400.658 li
528.204 390.899 li
531.697 390.899 li
531.697 388.648 li
522.118 388.648 li
522.118 390.899 li
cp
f
541.561 395.778 mo
541.561 397.453 540.605 398.605 538.752 398.605 cv
536.896 398.605 535.925 397.453 535.925 395.778 cv
535.925 388.648 li
533.332 388.648 li
533.332 395.85 li
533.332 398.821 535.097 400.874 538.752 400.874 cv
542.406 400.874 544.171 398.821 544.171 395.85 cv
544.171 388.648 li
541.561 388.648 li
541.561 395.778 li
cp
f
551.801 394.139 mo
549.101 394.139 li
549.101 390.899 li
551.801 390.899 li
552.81 390.899 553.584 391.51 553.584 392.501 cv
553.584 393.527 552.81 394.139 551.801 394.139 cv
cp
556.213 392.519 mo
556.213 390.287 554.664 388.648 552.162 388.648 cv
546.544 388.648 li
546.544 400.658 li
549.101 400.658 li
549.101 396.39 li
550.973 396.39 li
553.332 400.658 li
556.285 400.658 li
553.566 396.084 li
554.862 395.778 556.213 394.625 556.213 392.519 cv
cp
f
566.616 390.899 mo
566.616 388.648 li
558.117 388.648 li
558.117 400.658 li
566.616 400.658 li
566.616 398.407 li
560.674 398.407 li
560.674 395.67 li
566.49 395.67 li
566.49 393.419 li
560.674 393.419 li
560.674 390.899 li
566.616 390.899 li
cp
f
503.949 219.503 mo
501.386 219.503 498.977 220.501 497.165 222.313 cv
495.352 224.125 494.354 226.535 494.354 229.097 cv
494.363 293.265 li
492.9 293.812 li
480.613 298.401 472.358 310.297 472.358 323.412 cv
472.358 340.831 486.529 355.002 503.949 355.002 cv
521.368 355.002 535.54 340.831 535.54 323.412 cv
535.54 310.297 527.284 298.402 514.997 293.812 cv
513.534 293.265 li
513.544 229.097 li
513.544 226.536 512.545 224.126 510.732 222.313 cv
508.92 220.501 506.512 219.503 503.949 219.503 cv
cp
503.949 359.502 mo
484.048 359.502 467.858 343.312 467.858 323.412 cv
467.858 308.956 476.638 295.797 489.863 290.18 cv
489.854 229.098 li
489.854 225.333 491.32 221.793 493.983 219.131 cv
496.645 216.469 500.184 215.003 503.949 215.003 cv
507.713 215.003 511.252 216.469 513.914 219.131 cv
516.577 221.794 518.044 225.333 518.044 229.097 cv
518.034 290.18 li
531.26 295.797 540.04 308.957 540.04 323.412 cv
540.04 343.312 523.85 359.502 503.949 359.502 cv
cp
.0952911 .0952911 .0952911 rgb
f
503.949 309.161 mo
496.091 309.161 489.699 315.554 489.699 323.412 cv
489.699 331.27 496.091 337.663 503.949 337.663 cv
511.806 337.663 518.198 331.27 518.198 323.412 cv
518.198 315.554 511.806 309.161 503.949 309.161 cv
cp
503.949 342.163 mo
493.61 342.163 485.199 333.751 485.199 323.412 cv
485.199 313.072 493.61 304.661 503.949 304.661 cv
514.287 304.661 522.698 313.072 522.698 323.412 cv
522.698 333.751 514.287 342.163 503.949 342.163 cv
cp
f
503.949 309.161 mo
502.706 309.161 501.699 308.153 501.699 306.911 cv
501.699 229.097 li
501.699 227.854 502.706 226.847 503.949 226.847 cv
505.191 226.847 506.198 227.854 506.198 229.097 cv
506.198 306.911 li
506.198 308.153 505.191 309.161 503.949 309.161 cv
cp
f
537.79 283.519 mo
528.29 283.519 li
528.29 279.019 li
537.79 279.019 li
537.79 283.519 li
cp
f
537.79 273.084 mo
528.29 273.084 li
528.29 268.584 li
537.79 268.584 li
537.79 273.084 li
cp
f
537.788 262.651 mo
528.288 262.651 li
528.288 258.151 li
537.788 258.151 li
537.788 262.651 li
cp
f
537.79 252.215 mo
528.29 252.215 li
528.29 247.715 li
537.79 247.715 li
537.79 252.215 li
cp
f
537.79 241.782 mo
528.29 241.782 li
528.29 237.282 li
537.79 237.282 li
537.79 241.782 li
cp
f
537.79 231.347 mo
528.29 231.347 li
528.29 226.847 li
537.79 226.847 li
537.79 231.347 li
cp
f
670.497 392.024 mo
670.497 391.304 671.108 390.835 672.188 390.835 cv
673.413 390.835 674.71 391.25 675.683 392.15 cv
677.104 390.241 li
675.915 389.143 674.331 388.567 672.423 388.567 cv
669.597 388.567 667.868 390.223 667.868 392.222 cv
667.868 396.741 674.782 395.283 674.782 397.371 cv
674.782 398.074 674.116 398.704 672.692 398.704 cv
671.036 398.704 669.722 397.947 668.876 397.065 cv
667.472 399.064 li
668.606 400.198 670.263 400.973 672.585 400.973 cv
675.808 400.973 677.392 399.316 677.392 397.119 cv
677.392 392.636 670.497 393.914 670.497 392.024 cv
cp
.0980392 .0941176 .0941176 rgb
f
687.329 395.877 mo
687.329 397.551 686.374 398.704 684.521 398.704 cv
682.665 398.704 681.692 397.551 681.692 395.877 cv
681.692 388.747 li
679.101 388.747 li
679.101 395.949 li
679.101 398.92 680.864 400.973 684.521 400.973 cv
688.175 400.973 689.938 398.92 689.938 395.949 cv
689.938 388.747 li
687.329 388.747 li
687.329 395.877 li
cp
f
698.183 398.506 mo
694.868 398.506 li
694.868 395.769 li
698.183 395.769 li
699.173 395.769 699.712 396.381 699.712 397.137 cv
699.712 398.001 699.136 398.506 698.183 398.506 cv
cp
694.868 390.998 mo
698.073 390.998 li
698.938 390.998 699.478 391.52 699.478 392.258 cv
699.478 393.032 698.938 393.518 698.073 393.518 cv
694.868 393.518 li
694.868 390.998 li
cp
700.019 394.563 mo
701.153 394.329 702.089 393.302 702.089 391.808 cv
702.089 390.205 700.919 388.747 698.632 388.747 cv
692.312 388.747 li
692.312 400.756 li
698.829 400.756 li
701.134 400.756 702.323 399.316 702.323 397.498 cv
702.323 396.003 701.315 394.761 700.019 394.563 cv
cp
f
706.442 392.024 mo
706.442 391.304 707.054 390.835 708.134 390.835 cv
709.358 390.835 710.655 391.25 711.628 392.15 cv
713.05 390.241 li
711.862 389.143 710.276 388.567 708.368 388.567 cv
705.542 388.567 703.813 390.223 703.813 392.222 cv
703.813 396.741 710.728 395.283 710.728 397.371 cv
710.728 398.074 710.062 398.704 708.64 398.704 cv
706.981 398.704 705.667 397.947 704.821 397.065 cv
703.417 399.064 li
704.552 400.198 706.208 400.973 708.53 400.973 cv
711.753 400.973 713.339 399.316 713.339 397.119 cv
713.339 392.636 706.442 393.914 706.442 392.024 cv
cp
f
723.653 388.747 mo
714.073 388.747 li
714.073 390.998 li
717.585 390.998 li
717.585 400.756 li
720.159 400.756 li
720.159 390.998 li
723.653 390.998 li
723.653 388.747 li
cp
f
727.231 396.471 mo
729.104 391.304 li
730.978 396.471 li
727.231 396.471 li
cp
727.503 388.747 mo
722.874 400.756 li
725.774 400.756 li
726.53 398.722 li
731.679 398.722 li
732.437 400.756 li
735.335 400.756 li
730.708 388.747 li
727.503 388.747 li
cp
f
744.64 396.291 mo
739.075 388.747 li
736.446 388.747 li
736.446 400.756 li
739.003 400.756 li
739.003 392.924 li
744.729 400.756 li
747.196 400.756 li
747.196 388.747 li
744.64 388.747 li
744.64 396.291 li
cp
f
755.403 390.817 mo
756.626 390.817 757.708 391.592 758.212 392.564 cv
760.407 391.483 li
759.562 389.971 758.032 388.549 755.403 388.549 cv
751.784 388.549 748.993 391.051 748.993 394.761 cv
748.993 398.452 751.784 400.973 755.403 400.973 cv
758.032 400.973 759.562 399.514 760.407 398.02 cv
758.212 396.957 li
757.708 397.93 756.626 398.704 755.403 398.704 cv
753.206 398.704 751.622 397.029 751.622 394.761 cv
751.622 392.492 753.206 390.817 755.403 390.817 cv
cp
f
770.433 390.998 mo
770.433 388.747 li
761.935 388.747 li
761.935 400.756 li
770.433 400.756 li
770.433 398.506 li
764.491 398.506 li
764.491 395.769 li
770.308 395.769 li
770.308 393.518 li
764.491 393.518 li
764.491 390.998 li
770.433 390.998 li
cp
f
711.702 255.12 mo
726.202 255.12 li
726.202 223.003 li
711.702 223.003 li
711.702 255.12 li
cp
730.702 259.62 mo
707.202 259.62 li
707.202 218.503 li
730.702 218.503 li
730.702 259.62 li
cp
.0952911 .0952911 .0952911 rgb
f
687.297 341.866 mo
750.607 341.866 li
750.607 307.311 li
746.302 310.238 741.224 311.812 735.905 311.812 cv
728.902 311.812 722.316 309.083 717.362 304.128 cv
713.258 300.022 707.802 297.762 702.001 297.762 cv
696.505 297.762 691.318 299.791 687.297 303.496 cv
687.297 341.866 li
cp
752.857 346.366 mo
685.047 346.366 li
683.805 346.366 682.797 345.358 682.797 344.116 cv
682.797 302.538 li
682.797 301.941 683.034 301.369 683.456 300.947 cv
688.411 295.991 694.997 293.262 702.001 293.262 cv
709.004 293.262 715.59 295.991 720.544 300.947 cv
724.648 305.052 730.104 307.312 735.905 307.312 cv
741.707 307.312 747.162 305.052 751.267 300.947 cv
751.908 300.303 752.876 300.111 753.719 300.459 cv
754.56 300.807 755.107 301.627 755.107 302.538 cv
755.107 344.116 li
755.107 345.358 754.1 346.366 752.857 346.366 cv
cp
f
703.402 249.891 mo
703.402 254.506 li
703.402 258.545 701.829 262.342 698.972 265.198 cv
696.112 268.054 692.315 269.627 688.279 269.627 cv
685.443 269.627 682.776 270.732 680.771 272.738 cv
678.765 274.743 677.66 277.409 677.66 280.247 cv
677.66 349.462 li
677.66 350.007 677.873 350.521 678.259 350.907 cv
678.643 351.29 679.155 351.502 679.699 351.502 cv
758.205 351.502 li
758.75 351.502 759.268 351.288 759.66 350.898 cv
760.033 350.524 760.244 350.01 760.244 349.462 cv
760.244 280.247 li
760.244 277.405 759.142 274.739 757.139 272.739 cv
755.133 270.732 752.467 269.627 749.629 269.627 cv
745.586 269.627 741.788 268.054 738.936 265.196 cv
736.08 262.345 734.506 258.548 734.506 254.506 cv
734.506 249.891 li
703.402 249.891 li
cp
758.205 356.002 mo
679.699 356.002 li
677.955 356.002 676.313 355.323 675.077 354.089 cv
673.84 352.849 673.16 351.208 673.16 349.462 cv
673.16 280.247 li
673.16 276.206 674.733 272.409 677.589 269.555 cv
680.444 266.7 684.241 265.127 688.279 265.127 cv
691.114 265.127 693.781 264.022 695.79 262.014 cv
697.797 260.009 698.902 257.343 698.902 254.506 cv
698.902 245.391 li
739.006 245.391 li
739.006 254.506 li
739.006 257.344 740.11 260.011 742.117 262.014 cv
744.123 264.022 746.79 265.127 749.629 265.127 cv
753.669 265.127 757.466 266.7 760.32 269.557 cv
763.172 272.404 764.744 276.202 764.744 280.247 cv
764.744 349.462 li
764.744 351.208 764.067 352.85 762.839 354.084 cv
761.586 355.325 759.944 356.002 758.205 356.002 cv
cp
f
701.15 232.731 mo
699.458 232.731 697.869 233.389 696.677 234.584 cv
695.479 235.78 694.82 237.369 694.82 239.062 cv
694.82 240.755 695.479 242.345 696.673 243.537 cv
697.868 244.733 699.457 245.391 701.15 245.391 cv
736.754 245.391 li
738.446 245.391 740.035 244.733 741.229 243.539 cv
742.426 242.342 743.084 240.752 743.084 239.062 cv
743.084 237.372 742.425 235.782 741.229 234.585 cv
740.034 233.389 738.445 232.731 736.754 232.731 cv
701.15 232.731 li
cp
736.754 249.891 mo
701.15 249.891 li
698.254 249.891 695.533 248.765 693.491 246.719 cv
691.447 244.68 690.32 241.959 690.32 239.062 cv
690.32 236.166 691.447 233.445 693.494 231.402 cv
695.533 229.358 698.254 228.231 701.15 228.231 cv
736.754 228.231 li
739.648 228.231 742.368 229.358 744.412 231.405 cv
746.457 233.451 747.584 236.17 747.584 239.062 cv
747.584 241.955 746.457 244.674 744.411 246.72 cv
742.368 248.765 739.648 249.891 736.754 249.891 cv
cp
f
898.606 394.229 mo
895.906 394.229 li
895.906 391.007 li
898.606 391.007 li
899.615 391.007 900.39 391.619 900.39 392.627 cv
900.39 393.618 899.615 394.229 898.606 394.229 cv
cp
898.968 388.756 mo
893.35 388.756 li
893.35 400.766 li
895.906 400.766 li
895.906 396.48 li
898.968 396.48 li
901.56 396.48 903.001 394.716 903.001 392.627 cv
903.001 390.521 901.578 388.756 898.968 388.756 cv
cp
.0980392 .0941176 .0941176 rgb
f
906.364 396.48 mo
908.237 391.313 li
910.109 396.48 li
906.364 396.48 li
cp
906.634 388.756 mo
902.007 400.766 li
904.905 400.766 li
905.662 398.731 li
910.812 398.731 li
911.567 400.766 li
914.467 400.766 li
909.839 388.756 li
906.634 388.756 li
cp
f
915.579 400.766 mo
918.136 400.766 li
918.136 388.756 li
915.579 388.756 li
915.579 400.766 li
cp
f
928.704 396.3 mo
923.14 388.756 li
920.511 388.756 li
920.511 400.766 li
923.067 400.766 li
923.067 392.933 li
928.794 400.766 li
931.261 400.766 li
931.261 388.756 li
928.704 388.756 li
928.704 396.3 li
cp
f
943.59 388.756 mo
940.438 388.756 li
936.189 394.104 li
936.189 388.756 li
933.633 388.756 li
933.633 400.766 li
936.189 400.766 li
936.189 397.075 li
937.126 395.94 li
940.763 400.766 li
943.913 400.766 li
938.818 394.392 li
943.59 388.756 li
cp
f
945.081 400.766 mo
947.638 400.766 li
947.638 388.756 li
945.081 388.756 li
945.081 400.766 li
cp
f
952.479 388.756 mo
949.904 388.756 li
949.904 400.766 li
957.556 400.766 li
957.556 398.515 li
952.479 398.515 li
952.479 388.756 li
cp
f
961.749 388.756 mo
959.174 388.756 li
959.174 400.766 li
966.826 400.766 li
966.826 398.515 li
961.749 398.515 li
961.749 388.756 li
cp
f
968.552 400.766 mo
977.051 400.766 li
977.051 398.515 li
971.108 398.515 li
971.108 395.778 li
976.925 395.778 li
976.925 393.527 li
971.108 393.527 li
971.108 391.007 li
977.051 391.007 li
977.051 388.756 li
968.552 388.756 li
968.552 400.766 li
cp
f
984.304 394.248 mo
981.603 394.248 li
981.603 391.007 li
984.304 391.007 li
985.312 391.007 986.086 391.619 986.086 392.609 cv
986.086 393.635 985.312 394.248 984.304 394.248 cv
cp
986.067 396.192 mo
987.364 395.886 988.715 394.734 988.715 392.627 cv
988.715 390.395 987.166 388.756 984.663 388.756 cv
979.046 388.756 li
979.046 400.766 li
981.603 400.766 li
981.603 396.499 li
983.476 396.499 li
985.834 400.766 li
988.786 400.766 li
986.067 396.192 li
cp
f
967.629 357.955 mo
914.508 357.955 li
912.135 357.955 909.902 357.03 908.222 355.352 cv
906.542 353.671 905.617 351.439 905.617 349.064 cv
905.618 284.661 li
910.118 284.661 li
910.117 349.064 li
910.117 350.237 910.574 351.34 911.402 352.169 cv
912.232 352.998 913.336 353.455 914.508 353.455 cv
967.629 353.455 li
968.802 353.455 969.905 352.998 970.736 352.168 cv
971.563 351.339 972.021 350.236 972.02 349.065 cv
972.02 284.662 li
976.52 284.662 li
976.52 349.063 li
976.521 351.436 975.597 353.668 973.918 355.35 cv
972.235 357.03 970.003 357.955 967.629 357.955 cv
cp
.0952911 .0952911 .0952911 rgb
f
920.118 343.454 mo
962.021 343.454 li
962.02 311.706 li
920.117 311.706 li
920.118 343.454 li
cp
966.521 347.954 mo
915.618 347.954 li
915.617 307.206 li
966.52 307.206 li
966.521 347.954 li
cp
f
896.603 253.362 mo
891.512 248.271 li
889.649 246.409 888.625 243.935 888.626 241.305 cv
888.626 238.676 889.649 236.203 891.509 234.341 cv
894.692 237.521 li
893.683 238.533 893.126 239.877 893.126 241.306 cv
893.125 242.734 893.682 244.077 894.693 245.089 cv
899.784 250.18 li
896.603 253.362 li
cp
f
898.476 226.956 mo
894.642 226.956 891.038 228.448 888.328 231.159 cv
885.618 233.87 884.125 237.473 884.125 241.306 cv
884.126 245.14 885.618 248.744 888.328 251.454 cv
907.867 270.991 li
928.163 250.696 li
908.623 231.159 li
905.913 228.448 902.31 226.956 898.476 226.956 cv
cp
907.867 277.355 mo
885.146 254.635 li
881.587 251.076 879.626 246.342 879.625 241.307 cv
879.625 236.271 881.586 231.538 885.146 227.977 cv
888.705 224.417 893.439 222.456 898.476 222.456 cv
903.513 222.456 908.246 224.417 911.806 227.977 cv
934.526 250.696 li
907.867 277.355 li
cp
f
953.975 250.697 mo
974.27 270.991 li
993.809 251.453 li
996.519 248.743 998.012 245.139 998.012 241.306 cv
998.012 237.473 996.519 233.87 993.809 231.159 cv
991.099 228.448 987.495 226.956 983.661 226.956 cv
979.826 226.956 976.223 228.448 973.513 231.159 cv
953.975 250.697 li
cp
974.27 277.355 mo
947.611 250.697 li
970.331 227.977 li
973.89 224.417 978.624 222.456 983.661 222.456 cv
988.697 222.456 993.432 224.417 996.99 227.977 cv
1000.55 231.538 1002.51 236.271 1002.51 241.306 cv
1002.51 246.341 1000.55 251.075 996.99 254.635 cv
974.27 277.355 li
cp
f
929.933 286.253 mo
929.054 287.131 927.629 287.132 926.75 286.253 cv
925.871 285.375 925.871 283.95 926.751 283.07 cv
927.63 282.193 929.053 282.193 929.933 283.071 cv
930.812 283.95 930.811 285.375 929.933 286.253 cv
cp
f
936.296 279.89 mo
935.418 280.769 933.992 280.769 933.113 279.89 cv
932.234 279.011 932.235 277.586 933.113 276.708 cv
933.993 275.829 935.417 275.829 936.296 276.708 cv
937.175 277.586 937.175 279.011 936.296 279.89 cv
cp
f
942.659 273.527 mo
941.78 274.403 940.355 274.405 939.477 273.526 cv
938.599 272.648 938.6 271.222 939.478 270.345 cv
940.356 269.467 941.78 269.467 942.659 270.346 cv
943.538 271.223 943.538 272.648 942.659 273.527 cv
cp
f
936.296 292.617 mo
935.418 293.495 933.992 293.496 933.113 292.617 cv
932.234 291.738 932.236 290.312 933.113 289.435 cv
933.991 288.557 935.417 288.556 936.296 289.436 cv
937.175 290.314 937.175 291.738 936.296 292.617 cv
cp
f
942.659 286.253 mo
941.78 287.131 940.356 287.132 939.478 286.253 cv
938.6 285.375 938.599 283.95 939.478 283.071 cv
940.356 282.192 941.78 282.192 942.659 283.07 cv
943.539 283.949 943.539 285.375 942.659 286.253 cv
cp
f
949.022 279.89 mo
948.146 280.768 946.72 280.769 945.84 279.89 cv
944.962 279.011 944.964 277.585 945.841 276.708 cv
946.72 275.829 948.143 275.83 949.021 276.708 cv
949.9 277.587 949.901 279.011 949.022 279.89 cv
cp
f
942.659 298.979 mo
941.78 299.858 940.356 299.858 939.477 298.979 cv
938.599 298.102 938.599 296.677 939.478 295.798 cv
940.355 294.919 941.781 294.919 942.659 295.798 cv
943.538 296.677 943.538 298.102 942.659 298.979 cv
cp
f
949.021 292.617 mo
948.145 293.495 946.72 293.496 945.841 292.617 cv
944.962 291.738 944.963 290.313 945.84 289.436 cv
946.72 288.556 948.144 288.557 949.022 289.436 cv
949.901 290.314 949.901 291.737 949.021 292.617 cv
cp
f
955.387 286.253 mo
954.508 287.13 953.083 287.132 952.205 286.253 cv
951.326 285.375 951.326 283.949 952.205 283.071 cv
953.082 282.193 954.508 282.193 955.387 283.071 cv
956.266 283.95 956.266 285.375 955.387 286.253 cv
cp
f
11.3447 607.038 mo
11.3447 606.318 11.957 605.85 13.0371 605.85 cv
14.2617 605.85 15.5576 606.264 16.5303 607.165 cv
17.9531 605.255 li
16.7646 604.157 15.1797 603.581 13.2715 603.581 cv
10.4443 603.581 8.71582 605.237 8.71582 607.236 cv
8.71582 611.755 15.6299 610.297 15.6299 612.385 cv
15.6299 613.088 14.9639 613.717 13.541 613.717 cv
11.8848 613.717 10.5703 612.961 9.72461 612.08 cv
8.31934 614.079 li
9.4541 615.212 11.1104 615.987 13.4336 615.987 cv
16.6563 615.987 18.2412 614.331 18.2412 612.133 cv
18.2412 607.65 11.3447 608.928 11.3447 607.038 cv
cp
.0980392 .0941176 .0941176 rgb
f
18.9756 606.012 mo
22.4863 606.012 li
22.4863 615.77 li
25.0615 615.77 li
25.0615 606.012 li
28.5547 606.012 li
28.5547 603.76 li
18.9756 603.76 li
18.9756 606.012 li
cp
f
35.4658 613.717 mo
33.2334 613.717 31.8105 612.007 31.8105 609.775 cv
31.8105 607.524 33.2334 605.832 35.4658 605.832 cv
37.6807 605.832 39.1025 607.524 39.1025 609.775 cv
39.1025 612.007 37.6807 613.717 35.4658 613.717 cv
cp
35.4658 603.563 mo
31.8281 603.563 29.1816 606.156 29.1816 609.775 cv
29.1816 613.393 31.8281 615.987 35.4658 615.987 cv
39.085 615.987 41.7314 613.393 41.7314 609.775 cv
41.7314 606.156 39.085 603.563 35.4658 603.563 cv
cp
f
50.0283 611.269 mo
47.1113 603.76 li
43.5283 603.76 li
43.5283 615.77 li
46.085 615.77 li
46.085 607.11 li
49.4697 615.77 li
50.5859 615.77 li
53.9707 607.11 li
53.9707 615.77 li
56.5459 615.77 li
56.5459 603.76 li
52.9443 603.76 li
50.0283 611.269 li
cp
f
62.0146 611.485 mo
63.8877 606.318 li
65.7598 611.485 li
62.0146 611.485 li
cp
62.2852 603.76 mo
57.6572 615.77 li
60.5566 615.77 li
61.3125 613.736 li
66.4619 613.736 li
67.2188 615.77 li
70.1172 615.77 li
65.4902 603.76 li
62.2852 603.76 li
cp
f
69.3398 606.012 mo
72.8506 606.012 li
72.8506 615.77 li
75.4258 615.77 li
75.4258 606.012 li
78.9189 606.012 li
78.9189 603.76 li
69.3398 603.76 li
69.3398 606.012 li
cp
f
85.8301 613.717 mo
83.5977 613.717 82.1748 612.007 82.1748 609.775 cv
82.1748 607.524 83.5977 605.832 85.8301 605.832 cv
88.0449 605.832 89.4668 607.524 89.4668 609.775 cv
89.4668 612.007 88.0449 613.717 85.8301 613.717 cv
cp
85.8301 603.563 mo
82.1924 603.563 79.5459 606.156 79.5459 609.775 cv
79.5459 613.393 82.1924 615.987 85.8301 615.987 cv
89.4492 615.987 92.0957 613.393 92.0957 609.775 cv
92.0957 606.156 89.4492 603.563 85.8301 603.563 cv
cp
f
96.3594 603.76 mo
93.7842 603.76 li
93.7842 615.77 li
101.437 615.77 li
101.437 613.52 li
96.3594 613.52 li
96.3594 603.76 li
cp
f
108.384 613.717 mo
106.151 613.717 104.729 612.007 104.729 609.775 cv
104.729 607.524 106.151 605.832 108.384 605.832 cv
110.599 605.832 112.021 607.524 112.021 609.775 cv
112.021 612.007 110.599 613.717 108.384 613.717 cv
cp
108.384 603.563 mo
104.747 603.563 102.101 606.156 102.101 609.775 cv
102.101 613.393 104.747 615.987 108.384 615.987 cv
112.003 615.987 114.65 613.393 114.65 609.775 cv
114.65 606.156 112.003 603.563 108.384 603.563 cv
cp
f
121.65 611.36 mo
124.819 611.36 li
124.819 612.799 li
124.333 613.25 123.343 613.717 122.28 613.717 cv
120.083 613.717 118.499 612.043 118.499 609.775 cv
118.499 607.506 120.083 605.832 122.28 605.832 cv
123.54 605.832 124.566 606.551 125.125 607.398 cv
127.231 606.246 li
126.331 604.823 124.765 603.563 122.28 603.563 cv
118.751 603.563 115.87 605.975 115.87 609.775 cv
115.87 613.555 118.751 615.987 122.28 615.987 cv
124.44 615.987 126.151 615.104 127.376 613.736 cv
127.376 609.126 li
121.65 609.126 li
121.65 611.36 li
cp
f
136.645 603.76 mo
133.674 608.569 li
130.703 603.76 li
127.786 603.76 li
132.396 610.855 li
132.396 615.77 li
134.952 615.77 li
134.952 610.855 li
139.544 603.76 li
136.645 603.76 li
cp
f
66.9946 569.541 mo
80.8687 569.541 li
91.7944 514.631 li
88.7886 507.253 li
59.0747 507.253 li
56.0688 514.631 li
66.9946 569.541 li
cp
84.561 574.041 mo
63.3022 574.041 li
51.3921 514.185 li
56.0483 502.753 li
91.8149 502.753 li
96.4712 514.185 li
84.561 574.041 li
cp
.0952911 .0952911 .0952911 rgb
f
99.085 516.66 mo
89.5127 516.66 li
89.5127 512.16 li
99.085 512.16 li
99.085 516.66 li
cp
f
82.2314 516.66 mo
48.7783 516.66 li
48.7783 512.16 li
82.2314 512.16 li
82.2314 516.66 li
cp
f
96.7051 529.027 mo
87.668 529.027 li
87.668 524.527 li
96.7051 524.527 li
96.7051 529.027 li
cp
f
81.3975 529.027 mo
51.1582 529.027 li
51.1582 524.527 li
81.3975 524.527 li
81.3975 529.027 li
cp
f
94.2373 541.394 mo
85.2354 541.394 li
85.2354 536.894 li
94.2373 536.894 li
94.2373 541.394 li
cp
f
78.9648 541.394 mo
53.626 541.394 li
53.626 536.894 li
78.9648 536.894 li
78.9648 541.394 li
cp
f
91.7773 553.769 mo
82.8027 553.769 li
82.8027 549.269 li
91.7773 549.269 li
91.7773 553.769 li
cp
f
76.5313 553.769 mo
56.0859 553.769 li
56.0859 549.269 li
76.5313 549.269 li
76.5313 553.769 li
cp
f
89.3184 566.134 mo
80.3701 566.134 li
80.3701 561.634 li
89.3184 561.634 li
89.3184 566.134 li
cp
f
74.1074 566.134 mo
58.5449 566.134 li
58.5449 561.634 li
74.1074 561.634 li
74.1074 566.134 li
cp
f
73.9355 449.333 mo
70.3989 449.333 66.8711 448.477 63.7334 446.855 cv
62.8711 446.37 li
62.8008 446.325 62.7344 446.278 62.6597 446.241 cv
62.3765 446.08 li
61.4072 445.542 60.3203 445.135 59.1968 444.9 cv
60.1177 440.496 li
61.6851 440.823 63.1978 441.388 64.6138 442.175 cv
64.7505 442.256 li
64.9385 442.354 65.1157 442.464 65.2949 442.579 cv
65.7676 442.841 li
70.8301 445.457 77.0508 445.447 82.0732 442.856 cv
82.6919 442.499 li
82.8257 442.418 82.9604 442.339 83.0938 442.267 cv
83.1987 442.205 li
84.6572 441.392 86.1694 440.827 87.7427 440.496 cv
88.6694 444.899 li
87.5381 445.138 86.4507 445.544 85.4365 446.108 cv
85.2461 446.219 li
85.1655 446.261 85.0845 446.311 85.0029 446.36 cv
84.103 446.872 li
80.9917 448.477 77.4644 449.333 73.9355 449.333 cv
cp
f
48.353 502.753 mo
99.5103 502.753 li
100.213 500.028 100.569 497.128 100.569 494.111 cv
100.569 482.319 104.462 476.298 107.304 471.901 cv
107.569 471.491 li
109.174 468.995 112.912 462.546 112.912 456.649 cv
112.912 444.708 103.199 434.995 91.2598 434.995 cv
87.5776 434.995 83.9458 435.936 80.7559 437.717 cv
80.4404 437.886 80.1758 438.047 79.9077 438.209 cv
79.7202 438.316 li
76.1709 440.152 71.6948 440.152 68.1426 438.317 cv
68.0068 438.24 li
67.7222 438.067 67.4409 437.895 67.147 437.738 cv
63.9175 435.936 60.2856 434.995 56.6035 434.995 cv
44.6646 434.995 34.9512 444.708 34.9512 456.649 cv
34.9512 462.546 38.689 468.995 40.2959 471.494 cv
40.561 471.904 li
43.4019 476.3 47.293 482.321 47.293 494.111 cv
47.293 497.129 47.6489 500.029 48.353 502.753 cv
cp
102.854 507.253 mo
45.0098 507.253 li
44.5127 505.682 li
43.3716 502.071 42.793 498.178 42.793 494.111 cv
42.793 483.648 39.46 478.491 36.7813 474.347 cv
36.5122 473.929 li
34.2476 470.408 30.4512 463.484 30.4512 456.649 cv
30.4512 442.228 42.1831 430.495 56.6035 430.495 cv
61.0518 430.495 65.4424 431.633 69.3008 433.788 cv
69.6094 433.952 69.9395 434.149 70.2734 434.352 cv
72.5215 435.487 75.3457 435.487 77.5908 434.351 cv
77.957 434.13 78.2734 433.941 78.6021 433.766 cv
82.4209 431.633 86.8115 430.495 91.2598 430.495 cv
105.68 430.495 117.412 442.228 117.412 456.649 cv
117.412 463.484 113.616 470.408 111.353 473.927 cv
111.083 474.345 li
108.404 478.489 105.069 483.646 105.069 494.111 cv
105.069 498.176 104.491 502.069 103.351 505.681 cv
102.854 507.253 li
cp
f
217.067 606.012 mo
220.579 606.012 li
220.579 615.77 li
223.153 615.77 li
223.153 606.012 li
226.646 606.012 li
226.646 603.76 li
217.067 603.76 li
217.067 606.012 li
cp
.0980392 .0941176 .0941176 rgb
f
233.539 609.252 mo
230.838 609.252 li
230.838 606.012 li
233.539 606.012 li
234.547 606.012 235.321 606.624 235.321 607.614 cv
235.321 608.64 234.547 609.252 233.539 609.252 cv
cp
237.95 607.632 mo
237.95 605.399 236.401 603.76 233.899 603.76 cv
228.281 603.76 li
228.281 615.77 li
230.838 615.77 li
230.838 611.503 li
232.71 611.503 li
235.069 615.77 li
238.022 615.77 li
235.303 611.198 li
236.6 610.891 237.95 609.739 237.95 607.632 cv
cp
f
242.952 611.485 mo
244.824 606.318 li
246.697 611.485 li
242.952 611.485 li
cp
243.222 603.76 mo
238.594 615.77 li
241.493 615.77 li
242.25 613.736 li
247.399 613.736 li
248.155 615.77 li
251.054 615.77 li
246.427 603.76 li
243.222 603.76 li
cp
f
259.802 610.891 mo
259.802 612.565 258.847 613.717 256.993 613.717 cv
255.138 613.717 254.166 612.565 254.166 610.891 cv
254.166 603.76 li
251.573 603.76 li
251.573 610.963 li
251.573 613.934 253.337 615.987 256.993 615.987 cv
260.648 615.987 262.413 613.934 262.413 610.963 cv
262.413 603.76 li
259.802 603.76 li
259.802 610.891 li
cp
f
271.285 611.269 mo
268.368 603.76 li
264.785 603.76 li
264.785 615.77 li
267.342 615.77 li
267.342 607.11 li
270.727 615.77 li
271.843 615.77 li
275.228 607.11 li
275.228 615.77 li
277.803 615.77 li
277.803 603.76 li
274.202 603.76 li
271.285 611.269 li
cp
f
283.272 611.485 mo
285.145 606.318 li
287.017 611.485 li
283.272 611.485 li
cp
283.542 603.76 mo
278.915 615.77 li
281.813 615.77 li
282.57 613.736 li
287.719 613.736 li
288.476 615.77 li
291.375 615.77 li
286.747 603.76 li
283.542 603.76 li
cp
f
290.597 606.012 mo
294.108 606.012 li
294.108 615.77 li
296.683 615.77 li
296.683 606.012 li
300.176 606.012 li
300.176 603.76 li
290.597 603.76 li
290.597 606.012 li
cp
f
307.087 613.717 mo
304.854 613.717 303.432 612.007 303.432 609.775 cv
303.432 607.524 304.854 605.832 307.087 605.832 cv
309.302 605.832 310.724 607.524 310.724 609.775 cv
310.724 612.007 309.302 613.717 307.087 613.717 cv
cp
307.087 603.563 mo
303.45 603.563 300.803 606.156 300.803 609.775 cv
300.803 613.394 303.45 615.987 307.087 615.987 cv
310.706 615.987 313.353 613.394 313.353 609.775 cv
313.353 606.156 310.706 603.563 307.087 603.563 cv
cp
f
317.616 603.76 mo
315.041 603.76 li
315.041 615.77 li
322.693 615.77 li
322.693 613.52 li
317.616 613.52 li
317.616 603.76 li
cp
f
329.641 613.717 mo
327.408 613.717 325.986 612.007 325.986 609.775 cv
325.986 607.524 327.408 605.832 329.641 605.832 cv
331.855 605.832 333.278 607.524 333.278 609.775 cv
333.278 612.007 331.855 613.717 329.641 613.717 cv
cp
329.641 603.563 mo
326.003 603.563 323.357 606.156 323.357 609.775 cv
323.357 613.394 326.003 615.987 329.641 615.987 cv
333.26 615.987 335.907 613.394 335.907 609.775 cv
335.907 606.156 333.26 603.563 329.641 603.563 cv
cp
f
342.907 611.36 mo
346.076 611.36 li
346.076 612.799 li
345.589 613.25 344.599 613.717 343.537 613.717 cv
341.34 613.717 339.755 612.043 339.755 609.775 cv
339.755 607.506 341.34 605.832 343.537 605.832 cv
344.797 605.832 345.823 606.551 346.381 607.398 cv
348.488 606.246 li
347.588 604.823 346.021 603.563 343.537 603.563 cv
340.008 603.563 337.127 605.975 337.127 609.775 cv
337.127 613.555 340.008 615.987 343.537 615.987 cv
345.697 615.987 347.408 615.104 348.632 613.736 cv
348.632 609.126 li
342.907 609.126 li
342.907 611.36 li
cp
f
357.902 603.76 mo
354.931 608.569 li
351.96 603.76 li
349.043 603.76 li
353.653 610.855 li
353.653 615.77 li
356.209 615.77 li
356.209 610.855 li
360.801 603.76 li
357.902 603.76 li
cp
f
332.254 504.519 mo
321.456 504.519 li
321.456 500.019 li
332.254 500.019 li
332.254 504.519 li
cp
f
328.873 519.201 mo
318.726 515.507 li
320.265 511.279 li
330.412 514.972 li
328.873 519.201 li
cp
f
320.265 493.26 mo
318.726 489.032 li
328.872 485.339 li
330.411 489.568 li
320.265 493.26 li
cp
f
256.412 504.519 mo
245.614 504.519 li
245.614 500.019 li
256.412 500.019 li
256.412 504.519 li
cp
f
248.996 519.201 mo
247.457 514.972 li
257.603 511.279 li
259.142 515.507 li
248.996 519.201 li
cp
f
257.603 493.26 mo
247.458 489.568 li
248.997 485.339 li
259.142 489.032 li
257.603 493.26 li
cp
f
300.841 574.768 mo
296.341 574.768 li
296.341 547.016 li
296.341 539.605 299.471 532.475 304.928 527.454 cv
305.055 527.346 li
305.331 527.127 305.596 526.897 305.847 526.655 cv
307.939 524.634 309.091 521.918 309.091 519.008 cv
309.091 513.148 304.324 508.381 298.465 508.381 cv
296.618 508.381 294.804 508.86 293.219 509.767 cv
293.032 509.87 292.875 509.968 292.722 510.069 cv
292.525 510.185 li
290.323 511.334 287.543 511.334 285.342 510.184 cv
285.145 510.068 li
284.992 509.967 284.835 509.87 284.675 509.781 cv
283.063 508.86 281.25 508.381 279.404 508.381 cv
273.544 508.381 268.777 513.148 268.777 519.008 cv
268.777 521.919 269.93 524.634 272.022 526.656 cv
272.272 526.897 272.537 527.127 272.813 527.345 cv
272.94 527.455 li
278.397 532.476 281.527 539.606 281.527 547.016 cv
281.527 574.768 li
277.027 574.768 li
277.027 547.016 li
277.027 540.887 274.449 534.988 269.951 530.819 cv
269.584 530.525 269.23 530.214 268.897 529.893 cv
265.917 527.016 264.277 523.15 264.277 519.008 cv
264.277 510.667 271.063 503.881 279.404 503.881 cv
282.031 503.881 284.617 504.565 286.882 505.859 cv
287.083 505.971 287.298 506.101 287.511 506.238 cv
288.397 506.669 289.471 506.669 290.358 506.238 cv
290.572 506.1 290.789 505.968 291.012 505.845 cv
293.25 504.565 295.836 503.881 298.465 503.881 cv
306.806 503.881 313.591 510.667 313.591 519.008 cv
313.591 523.15 311.951 527.016 308.972 529.892 cv
308.641 530.212 308.287 530.523 307.918 530.819 cv
303.419 534.987 300.841 540.886 300.841 547.016 cv
300.841 574.768 li
cp
f
298.465 500.657 mo
295.838 500.657 293.252 499.973 290.987 498.679 cv
290.779 498.562 290.569 498.435 290.361 498.302 cv
289.477 497.871 288.392 497.871 287.508 498.301 cv
287.3 498.435 287.087 498.563 286.87 498.685 cv
284.615 499.973 282.029 500.657 279.404 500.657 cv
271.063 500.657 264.277 493.871 264.277 485.53 cv
264.277 481.387 265.917 477.522 268.897 474.646 cv
269.22 474.333 269.575 474.022 269.951 473.721 cv
274.449 469.55 277.027 463.65 277.027 457.52 cv
277.027 429.768 li
281.527 429.768 li
281.527 457.52 li
281.527 464.931 278.397 472.062 272.941 477.085 cv
272.813 477.195 li
272.538 477.412 272.274 477.64 272.024 477.882 cv
269.929 479.904 268.777 482.619 268.777 485.53 cv
268.777 491.39 273.544 496.157 279.404 496.157 cv
281.248 496.157 283.063 495.678 284.65 494.771 cv
284.829 494.67 284.992 494.571 285.151 494.466 cv
285.342 494.354 li
287.538 493.207 290.328 493.207 292.525 494.354 cv
292.715 494.465 li
292.875 494.57 293.039 494.67 293.207 494.765 cv
294.806 495.678 296.62 496.157 298.465 496.157 cv
304.324 496.157 309.091 491.39 309.091 485.53 cv
309.091 482.619 307.939 479.904 305.847 477.884 cv
305.594 477.64 305.33 477.412 305.055 477.194 cv
304.928 477.085 li
299.471 472.063 296.341 464.931 296.341 457.52 cv
296.341 429.768 li
300.841 429.768 li
300.841 457.52 li
300.841 463.65 303.42 469.551 307.918 473.722 cv
308.296 474.024 308.651 474.335 308.974 474.648 cv
311.951 477.522 313.591 481.387 313.591 485.53 cv
313.591 493.871 306.806 500.657 298.465 500.657 cv
cp
f
430.842 613.718 mo
428.609 613.718 427.187 612.008 427.187 609.776 cv
427.187 607.524 428.609 605.833 430.842 605.833 cv
433.057 605.833 434.479 607.524 434.479 609.776 cv
434.479 612.008 433.057 613.718 430.842 613.718 cv
cp
430.842 603.563 mo
427.205 603.563 424.558 606.157 424.558 609.776 cv
424.558 613.395 427.205 615.987 430.842 615.987 cv
434.461 615.987 437.108 613.395 437.108 609.776 cv
437.108 606.157 434.461 603.563 430.842 603.563 cv
cp
f
444.162 609.235 mo
441.461 609.235 li
441.461 606.012 li
444.162 606.012 li
445.17 606.012 445.944 606.624 445.944 607.633 cv
445.944 608.624 445.17 609.235 444.162 609.235 cv
cp
444.522 603.761 mo
438.904 603.761 li
438.904 615.771 li
441.461 615.771 li
441.461 611.486 li
444.522 611.486 li
447.115 611.486 448.555 609.721 448.555 607.633 cv
448.555 605.526 447.133 603.761 444.522 603.761 cv
cp
f
458.383 608.479 mo
452.711 608.479 li
452.711 603.761 li
450.154 603.761 li
450.154 615.771 li
452.711 615.771 li
452.711 610.711 li
458.383 610.711 li
458.383 615.771 li
460.958 615.771 li
460.958 603.761 li
458.383 603.761 li
458.383 608.479 li
cp
f
462.574 606.012 mo
466.084 606.012 li
466.084 615.771 li
468.66 615.771 li
468.66 606.012 li
472.152 606.012 li
472.152 603.761 li
462.574 603.761 li
462.574 606.012 li
cp
f
482.016 608.479 mo
476.344 608.479 li
476.344 603.761 li
473.788 603.761 li
473.788 615.771 li
476.344 615.771 li
476.344 610.711 li
482.016 610.711 li
482.016 615.771 li
484.591 615.771 li
484.591 603.761 li
482.016 603.761 li
482.016 608.479 li
cp
f
490.042 611.486 mo
491.915 606.319 li
493.787 611.486 li
490.042 611.486 li
cp
490.312 603.761 mo
485.685 615.771 li
488.583 615.771 li
489.34 613.737 li
494.489 613.737 li
495.246 615.771 li
498.145 615.771 li
493.517 603.761 li
490.312 603.761 li
cp
f
501.724 603.761 mo
499.149 603.761 li
499.149 615.771 li
506.802 615.771 li
506.802 613.52 li
501.724 613.52 li
501.724 603.761 li
cp
f
515.027 611.27 mo
512.11 603.761 li
508.527 603.761 li
508.527 615.771 li
511.084 615.771 li
511.084 607.11 li
514.47 615.771 li
515.585 615.771 li
518.97 607.11 li
518.97 615.771 li
521.545 615.771 li
521.545 603.761 li
517.944 603.761 li
515.027 611.27 li
cp
f
529.625 613.718 mo
527.393 613.718 525.97 612.008 525.97 609.776 cv
525.97 607.524 527.393 605.833 529.625 605.833 cv
531.84 605.833 533.263 607.524 533.263 609.776 cv
533.263 612.008 531.84 613.718 529.625 613.718 cv
cp
529.625 603.563 mo
525.987 603.563 523.341 606.157 523.341 609.776 cv
523.341 613.395 525.987 615.987 529.625 615.987 cv
533.244 615.987 535.892 613.395 535.892 609.776 cv
535.892 606.157 533.244 603.563 529.625 603.563 cv
cp
f
540.154 603.761 mo
537.579 603.761 li
537.579 615.771 li
545.231 615.771 li
545.231 613.52 li
540.154 613.52 li
540.154 603.761 li
cp
f
552.179 613.718 mo
549.946 613.718 548.524 612.008 548.524 609.776 cv
548.524 607.524 549.946 605.833 552.179 605.833 cv
554.394 605.833 555.816 607.524 555.816 609.776 cv
555.816 612.008 554.394 613.718 552.179 613.718 cv
cp
552.179 603.563 mo
548.542 603.563 545.896 606.157 545.896 609.776 cv
545.896 613.395 548.542 615.987 552.179 615.987 cv
555.798 615.987 558.445 613.395 558.445 609.776 cv
558.445 606.157 555.798 603.563 552.179 603.563 cv
cp
f
565.445 611.36 mo
568.614 611.36 li
568.614 612.8 li
568.128 613.25 567.138 613.718 566.075 613.718 cv
563.878 613.718 562.294 612.043 562.294 609.776 cv
562.294 607.506 563.878 605.833 566.075 605.833 cv
567.335 605.833 568.362 606.552 568.921 607.399 cv
571.026 606.247 li
570.126 604.824 568.56 603.563 566.075 603.563 cv
562.546 603.563 559.665 605.976 559.665 609.776 cv
559.665 613.556 562.546 615.987 566.075 615.987 cv
568.235 615.987 569.946 615.105 571.171 613.737 cv
571.171 609.127 li
565.445 609.127 li
565.445 611.36 li
cp
f
580.44 603.761 mo
577.47 608.569 li
574.498 603.761 li
571.581 603.761 li
576.19 610.856 li
576.19 615.771 li
578.747 615.771 li
578.747 610.856 li
583.339 603.761 li
580.44 603.761 li
cp
f
470.527 543.096 mo
462.128 543.096 454.529 538.438 450.695 530.939 cv
454.702 528.89 li
457.763 534.877 463.826 538.596 470.527 538.596 cv
470.527 543.096 li
cp
f
537.37 543.096 mo
528.97 543.096 521.37 538.438 517.538 530.938 cv
521.546 528.891 li
524.604 534.877 530.668 538.596 537.37 538.596 cv
537.37 543.096 li
cp
f
443.792 523.09 mo
444.938 536.834 456.491 547.668 470.527 547.668 cv
484.563 547.668 496.117 536.834 497.263 523.09 cv
443.792 523.09 li
cp
470.527 552.168 mo
453.252 552.168 439.199 538.115 439.199 520.84 cv
439.199 518.59 li
501.856 518.59 li
501.856 520.84 li
501.856 538.115 487.802 552.168 470.527 552.168 cv
cp
f
510.634 523.09 mo
511.78 536.834 523.334 547.668 537.37 547.668 cv
551.405 547.668 562.958 536.834 564.104 523.09 cv
510.634 523.09 li
cp
537.37 552.168 mo
520.095 552.168 506.04 538.115 506.04 520.84 cv
506.04 518.59 li
568.698 518.59 li
568.698 520.84 li
568.698 538.115 554.645 552.168 537.37 552.168 cv
cp
f
510.474 520.84 mo
505.974 520.84 li
505.974 519.705 505.05 518.782 503.915 518.782 cv
502.78 518.782 501.856 519.705 501.856 520.84 cv
497.356 520.84 li
497.356 517.224 500.298 514.282 503.915 514.282 cv
507.531 514.282 510.474 517.224 510.474 520.84 cv
cp
f
443.699 520.84 mo
439.199 520.84 li
439.199 466.715 li
439.199 462.884 440.691 459.281 443.4 456.57 cv
446.112 453.86 449.714 452.368 453.545 452.368 cv
455.988 452.368 li
455.988 456.868 li
453.545 456.868 li
450.916 456.868 448.443 457.892 446.583 459.752 cv
444.723 461.612 443.699 464.085 443.699 466.715 cv
443.699 520.84 li
cp
f
568.698 520.84 mo
564.198 520.84 li
564.198 466.715 li
564.198 464.084 563.174 461.611 561.314 459.751 cv
559.454 457.892 556.982 456.868 554.353 456.868 cv
551.909 456.868 li
551.909 452.368 li
554.353 452.368 li
558.185 452.368 561.786 453.86 564.496 456.57 cv
567.206 459.279 568.698 462.882 568.698 466.715 cv
568.698 520.84 li
cp
f
646.467 613.521 mo
643.153 613.521 li
643.153 610.783 li
646.467 610.783 li
647.457 610.783 647.997 611.396 647.997 612.152 cv
647.997 613.015 647.421 613.521 646.467 613.521 cv
cp
643.153 606.011 mo
646.358 606.011 li
647.224 606.011 647.763 606.535 647.763 607.273 cv
647.763 608.046 647.224 608.533 646.358 608.533 cv
643.153 608.533 li
643.153 606.011 li
cp
648.304 609.578 mo
649.438 609.343 650.374 608.316 650.374 606.822 cv
650.374 605.22 649.204 603.761 646.917 603.761 cv
640.597 603.761 li
640.597 615.771 li
647.114 615.771 li
649.419 615.771 650.608 614.33 650.608 612.511 cv
650.608 611.017 649.6 609.775 648.304 609.578 cv
cp
f
654.998 603.761 mo
652.423 603.761 li
652.423 615.771 li
660.075 615.771 li
660.075 613.521 li
654.998 613.521 li
654.998 603.761 li
cp
f
667.022 613.718 mo
664.79 613.718 663.368 612.007 663.368 609.775 cv
663.368 607.525 664.79 605.832 667.022 605.832 cv
669.237 605.832 670.66 607.525 670.66 609.775 cv
670.66 612.007 669.237 613.718 667.022 613.718 cv
cp
667.022 603.564 mo
663.386 603.564 660.739 606.156 660.739 609.775 cv
660.739 613.394 663.386 615.986 667.022 615.986 cv
670.642 615.986 673.289 613.394 673.289 609.775 cv
673.289 606.156 670.642 603.564 667.022 603.564 cv
cp
f
680.793 613.718 mo
678.561 613.718 677.138 612.007 677.138 609.775 cv
677.138 607.525 678.561 605.832 680.793 605.832 cv
683.008 605.832 684.431 607.525 684.431 609.775 cv
684.431 612.007 683.008 613.718 680.793 613.718 cv
cp
680.793 603.564 mo
677.155 603.564 674.509 606.156 674.509 609.775 cv
674.509 613.394 677.155 615.986 680.793 615.986 cv
684.412 615.986 687.06 613.394 687.06 609.775 cv
687.06 606.156 684.412 603.564 680.793 603.564 cv
cp
f
693.591 613.521 mo
691.412 613.521 li
691.412 606.011 li
693.608 606.011 li
696.058 606.011 697.354 607.65 697.354 609.757 cv
697.354 611.81 695.968 613.521 693.591 613.521 cv
cp
693.591 603.761 mo
688.855 603.761 li
688.855 615.771 li
693.608 615.771 li
697.354 615.771 699.965 613.394 699.965 609.757 cv
699.965 606.156 697.354 603.761 693.591 603.761 cv
cp
f
711.141 613.521 mo
708.962 613.521 li
708.962 606.011 li
711.159 606.011 li
713.607 606.011 714.903 607.65 714.903 609.757 cv
714.903 611.81 713.517 613.521 711.141 613.521 cv
cp
711.141 603.761 mo
706.405 603.761 li
706.405 615.771 li
711.159 615.771 li
714.903 615.771 717.515 613.394 717.515 609.757 cv
717.515 606.156 714.903 603.761 711.141 603.761 cv
cp
f
725.036 613.718 mo
722.804 613.718 721.382 612.007 721.382 609.775 cv
721.382 607.525 722.804 605.832 725.036 605.832 cv
727.251 605.832 728.674 607.525 728.674 609.775 cv
728.674 612.007 727.251 613.718 725.036 613.718 cv
cp
725.036 603.564 mo
721.399 603.564 718.753 606.156 718.753 609.775 cv
718.753 613.394 721.399 615.986 725.036 615.986 cv
728.655 615.986 731.303 613.394 731.303 609.775 cv
731.303 606.156 728.655 603.564 725.036 603.564 cv
cp
f
741.292 611.306 mo
735.728 603.761 li
733.099 603.761 li
733.099 615.771 li
735.655 615.771 li
735.655 607.939 li
741.382 615.771 li
743.849 615.771 li
743.849 603.761 li
741.292 603.761 li
741.292 611.306 li
cp
f
749.317 611.486 mo
751.19 606.318 li
753.063 611.486 li
749.317 611.486 li
cp
749.587 603.761 mo
744.96 615.771 li
747.858 615.771 li
748.615 613.736 li
753.765 613.736 li
754.521 615.771 li
757.42 615.771 li
752.792 603.761 li
749.587 603.761 li
cp
f
756.643 606.011 mo
760.153 606.011 li
760.153 615.771 li
762.729 615.771 li
762.729 606.011 li
766.222 606.011 li
766.222 603.761 li
756.643 603.761 li
756.643 606.011 li
cp
f
767.856 615.771 mo
770.413 615.771 li
770.413 603.761 li
767.856 603.761 li
767.856 615.771 li
cp
f
778.495 613.718 mo
776.263 613.718 774.841 612.007 774.841 609.775 cv
774.841 607.525 776.263 605.832 778.495 605.832 cv
780.71 605.832 782.133 607.525 782.133 609.775 cv
782.133 612.007 780.71 613.718 778.495 613.718 cv
cp
778.495 603.564 mo
774.858 603.564 772.212 606.156 772.212 609.775 cv
772.212 613.394 774.858 615.986 778.495 615.986 cv
782.114 615.986 784.762 613.394 784.762 609.775 cv
784.762 606.156 782.114 603.564 778.495 603.564 cv
cp
f
794.751 603.761 mo
794.751 611.306 li
789.187 603.761 li
786.558 603.761 li
786.558 615.771 li
789.114 615.771 li
789.114 607.939 li
794.841 615.771 li
797.308 615.771 li
797.308 603.761 li
794.751 603.761 li
cp
f
686.446 441.142 mo
675.137 456.989 li
673.139 459.791 672.125 462.748 672.125 465.78 cv
672.125 473.676 678.55 480.1 686.446 480.1 cv
694.343 480.1 700.767 473.676 700.767 465.78 cv
700.767 462.744 699.752 459.786 697.752 456.989 cv
686.446 441.142 li
cp
686.446 484.6 mo
676.068 484.6 667.625 476.157 667.625 465.78 cv
667.625 461.848 668.956 457.905 671.474 454.375 cv
686.446 433.395 li
701.414 454.374 li
703.97 457.948 705.267 461.786 705.267 465.78 cv
705.267 476.157 696.824 484.6 686.446 484.6 cv
cp
.0952911 .0952911 .0952911 rgb
f
686.446 475.241 mo
681.23 475.241 676.986 470.997 676.986 465.78 cv
681.486 465.78 li
681.486 468.515 683.711 470.741 686.446 470.741 cv
686.446 475.241 li
cp
f
729.195 502.083 mo
714.664 502.083 702.843 513.904 702.843 528.434 cv
702.843 542.959 714.664 554.776 729.195 554.776 cv
743.725 554.776 755.545 542.959 755.545 528.434 cv
755.545 513.904 743.725 502.083 729.195 502.083 cv
cp
729.195 559.276 mo
712.184 559.276 698.343 545.44 698.343 528.434 cv
698.343 511.422 712.184 497.583 729.195 497.583 cv
746.206 497.583 760.045 511.422 760.045 528.434 cv
760.045 545.44 746.206 559.276 729.195 559.276 cv
cp
f
729.197 465.484 mo
700.23 506.077 li
695.172 513.163 692.607 520.684 692.607 528.434 cv
692.607 548.607 709.021 565.018 729.197 565.018 cv
749.369 565.018 765.779 548.607 765.779 528.434 cv
765.779 520.693 763.215 513.169 758.156 506.072 cv
729.197 465.484 li
cp
729.197 569.518 mo
706.54 569.518 688.107 551.087 688.107 528.434 cv
688.107 519.728 690.954 511.326 696.568 503.462 cv
729.197 457.736 li
761.82 503.459 li
767.434 511.335 770.279 519.738 770.279 528.434 cv
770.279 551.087 751.85 569.518 729.197 569.518 cv
cp
f
731.451 541.28 mo
726.951 541.28 li
726.951 515.581 li
731.451 515.581 li
731.451 541.28 li
cp
f
742.05 530.682 mo
716.342 530.682 li
716.342 526.182 li
742.05 526.182 li
742.05 530.682 li
cp
f
899.114 611.269 mo
896.197 603.761 li
892.614 603.761 li
892.614 615.771 li
895.171 615.771 li
895.171 607.111 li
898.556 615.771 li
899.673 615.771 li
903.058 607.111 li
903.058 615.771 li
905.632 615.771 li
905.632 603.761 li
902.03 603.761 li
899.114 611.269 li
cp
.0980392 .0941176 .0941176 rgb
f
908.005 615.771 mo
916.503 615.771 li
916.503 613.521 li
910.562 613.521 li
910.562 610.783 li
916.377 610.783 li
916.377 608.533 li
910.562 608.533 li
910.562 606.011 li
916.503 606.011 li
916.503 603.761 li
908.005 603.761 li
908.005 615.771 li
cp
f
923.233 613.521 mo
921.055 613.521 li
921.055 606.011 li
923.251 606.011 li
925.7 606.011 926.997 607.65 926.997 609.757 cv
926.997 611.81 925.61 613.521 923.233 613.521 cv
cp
923.233 603.761 mo
918.498 603.761 li
918.498 615.771 li
923.251 615.771 li
926.997 615.771 929.607 613.394 929.607 609.757 cv
929.607 606.156 926.997 603.761 923.233 603.761 cv
cp
f
931.422 615.771 mo
933.979 615.771 li
933.979 603.761 li
931.422 603.761 li
931.422 615.771 li
cp
f
942.187 605.832 mo
943.411 605.832 944.491 606.607 944.996 607.578 cv
947.192 606.498 li
946.347 604.986 944.815 603.564 942.187 603.564 cv
938.567 603.564 935.777 606.066 935.777 609.775 cv
935.777 613.466 938.567 615.986 942.187 615.986 cv
944.815 615.986 946.347 614.529 947.192 613.035 cv
944.996 611.972 li
944.491 612.945 943.411 613.718 942.187 613.718 cv
939.99 613.718 938.406 612.044 938.406 609.775 cv
938.406 607.505 939.99 605.832 942.187 605.832 cv
cp
f
948.72 615.771 mo
951.276 615.771 li
951.276 603.761 li
948.72 603.761 li
948.72 615.771 li
cp
f
961.843 611.306 mo
956.279 603.761 li
953.651 603.761 li
953.651 615.771 li
956.208 615.771 li
956.208 607.939 li
961.933 615.771 li
964.399 615.771 li
964.399 603.761 li
961.843 603.761 li
961.843 611.306 li
cp
f
975.271 606.011 mo
975.271 603.761 li
966.772 603.761 li
966.772 615.771 li
975.271 615.771 li
975.271 613.521 li
969.329 613.521 li
969.329 610.783 li
975.146 610.783 li
975.146 608.533 li
969.329 608.533 li
969.329 606.011 li
975.271 606.011 li
cp
f
914.653 562.636 mo
953.229 562.636 li
953.229 535.679 li
976.576 549.155 li
995.868 515.743 li
972.521 502.268 li
995.867 488.788 li
976.576 455.378 li
953.229 468.856 li
953.229 441.9 li
914.653 441.9 li
914.653 468.856 li
891.307 455.378 li
872.016 488.789 li
895.36 502.267 li
872.016 515.743 li
891.307 549.157 li
914.653 535.679 li
914.653 562.636 li
cp
957.729 567.136 mo
910.153 567.136 li
910.153 543.472 li
889.66 555.303 li
865.869 514.096 li
886.36 502.267 li
865.869 490.435 li
889.66 449.23 li
910.153 461.063 li
910.153 437.4 li
957.729 437.4 li
957.729 461.063 li
978.223 449.23 li
1002.01 490.434 li
981.521 502.267 li
1002.02 514.096 li
978.223 555.301 li
957.729 543.472 li
957.729 567.136 li
cp
.0952911 .0952911 .0952911 rgb
f
922.665 554.619 mo
945.217 554.619 li
945.217 521.795 li
973.643 538.209 li
984.917 518.679 li
956.49 502.267 li
984.917 485.855 li
973.642 466.327 li
945.217 482.738 li
945.217 449.916 li
922.665 449.916 li
922.665 482.738 li
894.24 466.327 li
882.965 485.855 li
911.392 502.267 li
882.965 518.679 li
894.24 538.209 li
922.665 521.795 li
922.665 554.619 li
cp
949.717 559.119 mo
918.165 559.119 li
918.165 529.59 li
892.594 544.356 li
876.818 517.031 li
902.392 502.267 li
876.818 487.503 li
892.594 460.18 li
918.165 474.944 li
918.165 445.416 li
949.717 445.416 li
949.717 474.944 li
975.288 460.18 li
991.063 487.503 li
965.49 502.267 li
991.063 517.031 li
975.289 544.356 li
949.717 529.59 li
949.717 559.119 li
cp
f
929.967 518.49 mo
927.737 518.49 925.638 517.623 924.053 516.049 cv
922.469 514.456 921.602 512.354 921.602 510.121 cv
921.602 507.89 922.47 505.792 924.046 504.211 cv
925.636 502.626 927.737 501.755 929.967 501.755 cv
936.693 501.755 li
938.054 501.755 939.331 501.227 940.29 500.268 cv
941.253 499.306 941.783 498.028 941.783 496.669 cv
941.783 495.309 941.254 494.033 940.293 493.075 cv
939.329 492.108 938.053 491.579 936.693 491.579 cv
936.693 487.079 li
939.258 487.079 941.666 488.078 943.475 489.893 cv
945.284 491.696 946.283 494.104 946.283 496.669 cv
946.283 499.231 945.284 501.64 943.471 503.451 cv
941.663 505.259 939.256 506.255 936.693 506.255 cv
929.967 506.255 li
928.937 506.255 927.964 506.66 927.228 507.394 cv
926.503 508.12 926.102 509.09 926.102 510.121 cv
926.102 511.157 926.504 512.132 927.234 512.866 cv
927.96 513.587 928.934 513.99 929.967 513.99 cv
929.967 518.49 li
cp
f
931.192 535.613 mo
929.607 535.613 928.12 535 927.003 533.885 cv
925.886 532.764 925.273 531.278 925.273 529.695 cv
925.273 528.114 925.886 526.627 926.998 525.511 cv
928.118 524.391 929.607 523.775 931.192 523.775 cv
935.468 523.775 li
936.175 523.775 936.84 523.5 937.341 523 cv
937.838 522.504 938.111 521.84 938.111 521.13 cv
942.611 521.13 li
942.611 523.044 941.868 524.839 940.52 526.186 cv
939.168 527.534 937.374 528.275 935.468 528.275 cv
931.192 528.275 li
930.81 528.275 930.45 528.422 930.183 528.69 cv
929.92 528.954 929.773 529.312 929.773 529.695 cv
929.773 530.079 929.92 530.438 930.186 530.705 cv
930.448 530.966 930.808 531.113 931.192 531.113 cv
931.192 535.613 li
cp
f
936.19 539.335 mo
931.69 539.335 li
931.69 480.912 li
936.19 480.912 li
936.19 539.335 li
cp
f
933.94 471.455 mo
931.953 471.455 930.336 473.072 930.336 475.06 cv
930.336 477.046 931.953 478.662 933.94 478.662 cv
935.929 478.662 937.546 477.046 937.546 475.06 cv
937.546 473.072 935.929 471.455 933.94 471.455 cv
cp
933.94 483.162 mo
929.472 483.162 925.836 479.527 925.836 475.06 cv
925.836 470.591 929.472 466.955 933.94 466.955 cv
938.41 466.955 942.046 470.591 942.046 475.06 cv
942.046 479.527 938.41 483.162 933.94 483.162 cv
cp
f
936.693 491.579 mo
923.852 491.579 li
923.852 487.079 li
936.693 487.079 li
936.693 491.579 li
cp
f
942.611 521.13 mo
938.111 521.13 li
938.111 520.427 937.837 519.765 937.339 519.266 cv
936.838 518.765 936.174 518.49 935.468 518.49 cv
929.967 518.49 li
929.967 513.99 li
935.468 513.99 li
937.377 513.99 939.172 514.734 940.521 516.085 cv
941.869 517.433 942.611 519.225 942.611 521.13 cv
cp
f
936.387 535.613 mo
931.192 535.613 li
931.192 531.113 li
936.387 531.113 li
936.387 535.613 li
cp
f
936.387 535.613 mo
931.192 535.613 li
931.192 531.113 li
936.387 531.113 li
936.387 535.613 li
cp
f
9.68164 824.246 mo
6.98096 824.246 li
6.98096 821.003 li
9.68164 821.003 li
10.6899 821.003 11.4644 821.617 11.4644 822.607 cv
11.4644 823.632 10.6899 824.246 9.68164 824.246 cv
cp
14.0933 822.625 mo
14.0933 820.392 12.5444 818.753 10.042 818.753 cv
4.42432 818.753 li
4.42432 830.763 li
6.98096 830.763 li
6.98096 826.496 li
8.85352 826.496 li
11.2124 830.763 li
14.165 830.763 li
11.4463 826.189 li
12.7427 825.884 14.0933 824.732 14.0933 822.625 cv
cp
.0980392 .0941176 .0941176 rgb
f
15.998 830.763 mo
24.4966 830.763 li
24.4966 828.513 li
18.5547 828.513 li
18.5547 825.775 li
24.3706 825.775 li
24.3706 823.525 li
18.5547 823.525 li
18.5547 821.003 li
24.4966 821.003 li
24.4966 818.753 li
15.998 818.753 li
15.998 830.763 li
cp
f
34.7202 823.47 mo
29.0483 823.47 li
29.0483 818.753 li
26.4917 818.753 li
26.4917 830.763 li
29.0483 830.763 li
29.0483 825.703 li
34.7202 825.703 li
34.7202 830.763 li
37.2949 830.763 li
37.2949 818.753 li
34.7202 818.753 li
34.7202 823.47 li
cp
f
42.7461 826.478 mo
44.6187 821.31 li
46.4912 826.478 li
42.7461 826.478 li
cp
43.0161 818.753 mo
38.3892 830.763 li
41.2876 830.763 li
42.0439 828.728 li
47.1934 828.728 li
47.9497 830.763 li
50.8486 830.763 li
46.2212 818.753 li
43.0161 818.753 li
cp
f
57.8311 828.513 mo
54.5181 828.513 li
54.5181 825.775 li
57.8311 825.775 li
58.8213 825.775 59.3613 826.388 59.3613 827.144 cv
59.3613 828.007 58.7852 828.513 57.8311 828.513 cv
cp
54.5181 821.003 mo
57.7231 821.003 li
58.5874 821.003 59.1274 821.527 59.1274 822.265 cv
59.1274 823.039 58.5874 823.525 57.7231 823.525 cv
54.5181 823.525 li
54.5181 821.003 li
cp
59.6675 824.57 mo
60.8018 824.335 61.7383 823.308 61.7383 821.814 cv
61.7383 820.212 60.5679 818.753 58.2813 818.753 cv
51.9614 818.753 li
51.9614 830.763 li
58.479 830.763 li
60.7837 830.763 61.9722 829.322 61.9722 827.503 cv
61.9722 826.009 60.9639 824.767 59.6675 824.57 cv
cp
f
63.8955 830.763 mo
66.4521 830.763 li
66.4521 818.753 li
63.8955 818.753 li
63.8955 830.763 li
cp
f
71.2939 818.753 mo
68.7192 818.753 li
68.7192 830.763 li
76.3711 830.763 li
76.3711 828.513 li
71.2939 828.513 li
71.2939 818.753 li
cp
f
78.0972 830.763 mo
80.6538 830.763 li
80.6538 818.753 li
78.0972 818.753 li
78.0972 830.763 li
cp
f
91.8691 818.753 mo
82.2905 818.753 li
82.2905 821.003 li
85.8013 821.003 li
85.8013 830.763 li
88.3765 830.763 li
88.3765 821.003 li
91.8691 821.003 li
91.8691 818.753 li
cp
f
95.4492 826.478 mo
97.3218 821.31 li
99.1943 826.478 li
95.4492 826.478 li
cp
95.7192 818.753 mo
91.0923 830.763 li
93.9907 830.763 li
94.7471 828.728 li
99.8965 828.728 li
100.653 830.763 li
103.552 830.763 li
98.9243 818.753 li
95.7192 818.753 li
cp
f
102.774 821.003 mo
106.286 821.003 li
106.286 830.763 li
108.86 830.763 li
108.86 821.003 li
112.353 821.003 li
112.353 818.753 li
102.774 818.753 li
102.774 821.003 li
cp
f
113.988 830.763 mo
116.545 830.763 li
116.545 818.753 li
113.988 818.753 li
113.988 830.763 li
cp
f
124.627 828.71 mo
122.395 828.71 120.972 827 120.972 824.767 cv
120.972 822.517 122.395 820.824 124.627 820.824 cv
126.842 820.824 128.265 822.517 128.265 824.767 cv
128.265 827 126.842 828.71 124.627 828.71 cv
cp
124.627 818.556 mo
120.99 818.556 118.344 821.148 118.344 824.767 cv
118.344 828.386 120.99 830.978 124.627 830.978 cv
128.247 830.978 130.894 828.386 130.894 824.767 cv
130.894 821.148 128.247 818.556 124.627 818.556 cv
cp
f
140.882 818.753 mo
140.882 826.298 li
135.319 818.753 li
132.69 818.753 li
132.69 830.763 li
135.247 830.763 li
135.247 822.931 li
140.972 830.763 li
143.439 830.763 li
143.439 818.753 li
140.882 818.753 li
cp
f
53.1104 712.199 mo
33.7217 712.199 17.9482 727.971 17.9482 747.359 cv
17.9482 766.748 33.7217 782.521 53.1104 782.521 cv
72.499 782.521 88.2725 766.748 88.2725 747.359 cv
88.2725 727.971 72.499 712.199 53.1104 712.199 cv
cp
53.1104 787.021 mo
31.2407 787.021 13.4482 769.229 13.4482 747.359 cv
13.4482 725.49 31.2407 707.699 53.1104 707.699 cv
74.98 707.699 92.7725 725.49 92.7725 747.359 cv
92.7725 769.229 74.98 787.021 53.1104 787.021 cv
cp
.0952911 .0952911 .0952911 rgb
f
44.6543 700.216 mo
110.216 700.216 li
110.216 697.234 li
44.6543 697.234 li
44.6543 700.216 li
cp
114.716 704.716 mo
40.1543 704.716 li
40.1543 692.734 li
114.716 692.734 li
114.716 704.716 li
cp
f
123.191 737.109 mo
88.3833 737.109 li
88.3833 732.609 li
118.691 732.609 li
118.691 729.626 li
84.7422 729.626 li
84.7422 725.126 li
123.191 725.126 li
123.191 737.109 li
cp
f
55.3604 694.984 mo
50.8604 694.984 li
50.8604 652.021 li
29.4043 652.021 li
29.4043 647.521 li
55.3604 647.521 li
55.3604 694.984 li
cp
f
123.191 773.548 mo
118.691 773.548 li
118.691 736.619 li
123.191 736.619 li
123.191 773.548 li
cp
f
120.941 764.576 mo
115.993 764.576 111.968 768.601 111.968 773.548 cv
111.968 778.496 115.993 782.521 120.941 782.521 cv
125.89 782.521 129.915 778.496 129.915 773.548 cv
129.915 768.601 125.89 764.576 120.941 764.576 cv
cp
120.941 787.021 mo
113.512 787.021 107.468 780.977 107.468 773.548 cv
107.468 766.12 113.512 760.076 120.941 760.076 cv
128.371 760.076 134.415 766.12 134.415 773.548 cv
134.415 780.977 128.371 787.021 120.941 787.021 cv
cp
f
55.3604 709.949 mo
50.8604 709.949 li
50.8604 702.466 li
55.3604 702.466 li
55.3604 709.949 li
cp
f
107.89 729.136 mo
103.39 729.136 li
103.39 702.466 li
107.89 702.466 li
107.89 729.136 li
cp
f
53.1104 734.609 mo
46.0801 734.609 40.3604 740.329 40.3604 747.359 cv
40.3604 754.389 46.0801 760.109 53.1104 760.109 cv
60.1406 760.109 65.8604 754.389 65.8604 747.359 cv
65.8604 740.329 60.1406 734.609 53.1104 734.609 cv
cp
53.1104 764.609 mo
43.5986 764.609 35.8604 756.871 35.8604 747.359 cv
35.8604 737.847 43.5986 730.109 53.1104 730.109 cv
62.6221 730.109 70.3604 737.847 70.3604 747.359 cv
70.3604 756.871 62.6221 764.609 53.1104 764.609 cv
cp
f
478.803 828.512 mo
476.624 828.512 li
476.624 821.004 li
478.821 821.004 li
481.27 821.004 482.566 822.643 482.566 824.75 cv
482.566 826.802 481.179 828.512 478.803 828.512 cv
cp
478.803 818.753 mo
474.067 818.753 li
474.067 830.763 li
478.821 830.763 li
482.566 830.763 485.177 828.386 485.177 824.75 cv
485.177 821.148 482.566 818.753 478.803 818.753 cv
cp
.0980392 .0941176 .0941176 rgb
f
492.249 824.246 mo
489.548 824.246 li
489.548 821.004 li
492.249 821.004 li
493.257 821.004 494.031 821.617 494.031 822.607 cv
494.031 823.633 493.257 824.246 492.249 824.246 cv
cp
496.66 822.625 mo
496.66 820.392 495.111 818.753 492.609 818.753 cv
486.991 818.753 li
486.991 830.763 li
489.548 830.763 li
489.548 826.496 li
491.42 826.496 li
493.779 830.763 li
496.732 830.763 li
494.013 826.19 li
495.31 825.883 496.66 824.731 496.66 822.625 cv
cp
f
506.794 825.883 mo
506.794 827.558 505.839 828.71 503.984 828.71 cv
502.13 828.71 501.158 827.558 501.158 825.883 cv
501.158 818.753 li
498.565 818.753 li
498.565 825.956 li
498.565 828.926 500.329 830.979 503.984 830.979 cv
507.64 830.979 509.404 828.926 509.404 825.956 cv
509.404 818.753 li
506.794 818.753 li
506.794 825.883 li
cp
f
516.981 826.352 mo
520.149 826.352 li
520.149 827.792 li
519.663 828.243 518.673 828.71 517.61 828.71 cv
515.415 828.71 513.829 827.036 513.829 824.767 cv
513.829 822.499 515.415 820.824 517.61 820.824 cv
518.872 820.824 519.897 821.544 520.456 822.391 cv
522.562 821.239 li
521.661 819.816 520.095 818.555 517.61 818.555 cv
514.081 818.555 511.2 820.968 511.2 824.767 cv
511.2 828.548 514.081 830.979 517.61 830.979 cv
519.771 830.979 521.481 830.097 522.706 828.729 cv
522.706 824.12 li
516.981 824.12 li
516.981 826.352 li
cp
f
526.935 822.031 mo
526.935 821.31 527.546 820.842 528.626 820.842 cv
529.851 820.842 531.147 821.256 532.12 822.157 cv
533.542 820.248 li
532.353 819.15 530.769 818.574 528.86 818.574 cv
526.034 818.574 524.306 820.23 524.306 822.229 cv
524.306 826.748 531.22 825.29 531.22 827.378 cv
531.22 828.081 530.552 828.71 529.13 828.71 cv
527.474 828.71 526.159 827.955 525.313 827.072 cv
523.909 829.071 li
525.044 830.205 526.7 830.979 529.022 830.979 cv
532.245 830.979 533.829 829.323 533.829 827.126 cv
533.829 822.643 526.935 823.921 526.935 822.031 cv
cp
f
471.531 756.91 mo
501.698 756.91 li
501.698 703.632 li
471.531 703.632 li
471.531 756.91 li
cp
506.198 761.41 mo
467.031 761.41 li
467.031 699.132 li
506.198 699.132 li
506.198 761.41 li
cp
.0952911 .0952911 .0952911 rgb
f
482.401 742.152 mo
469.281 742.152 li
469.281 737.652 li
482.401 737.652 li
482.401 742.152 li
cp
f
495.522 732.523 mo
469.281 732.523 li
469.281 728.023 li
495.522 728.023 li
495.522 732.523 li
cp
f
495.522 722.892 mo
469.281 722.892 li
469.281 718.392 li
495.522 718.392 li
495.522 722.892 li
cp
f
471.531 780.021 mo
536.364 780.021 li
536.364 680.521 li
471.531 680.521 li
471.531 780.021 li
cp
540.864 784.521 mo
467.031 784.521 li
467.031 676.021 li
540.864 676.021 li
540.864 784.521 li
cp
f
465.031 676.021 mo
542.866 676.021 li
542.866 654.521 li
465.031 654.521 li
465.031 676.021 li
cp
547.366 680.521 mo
460.531 680.521 li
460.531 650.021 li
547.366 650.021 li
547.366 680.521 li
cp
f
537.073 671.048 mo
532.573 671.048 li
532.573 659.494 li
537.073 659.494 li
537.073 671.048 li
cp
f
526.782 671.048 mo
522.282 671.048 li
522.282 659.494 li
526.782 659.494 li
526.782 671.048 li
cp
f
516.489 671.048 mo
511.989 671.048 li
511.989 659.494 li
516.489 659.494 li
516.489 671.048 li
cp
f
506.198 671.048 mo
501.698 671.048 li
501.698 659.494 li
506.198 659.494 li
506.198 671.048 li
cp
f
495.906 671.048 mo
491.406 671.048 li
491.406 659.494 li
495.906 659.494 li
495.906 671.048 li
cp
f
485.614 671.048 mo
481.114 671.048 li
481.114 659.494 li
485.614 659.494 li
485.614 671.048 li
cp
f
475.322 671.048 mo
470.822 671.048 li
470.822 659.494 li
475.322 659.494 li
475.322 671.048 li
cp
f
232.135 830.763 mo
240.633 830.763 li
240.633 828.513 li
234.691 828.513 li
234.691 825.775 li
240.507 825.775 li
240.507 823.525 li
234.691 823.525 li
234.691 821.003 li
240.633 821.003 li
240.633 818.753 li
232.135 818.753 li
232.135 830.763 li
cp
.0980392 .0941176 .0941176 rgb
f
247.256 823.56 mo
244.284 818.753 li
241.368 818.753 li
245.978 825.847 li
245.978 830.763 li
248.534 830.763 li
248.534 825.847 li
253.125 818.753 li
250.227 818.753 li
247.256 823.56 li
cp
f
254.238 830.763 mo
262.736 830.763 li
262.736 828.513 li
256.795 828.513 li
256.795 825.775 li
262.61 825.775 li
262.61 823.525 li
256.795 823.525 li
256.795 821.003 li
262.736 821.003 li
262.736 818.753 li
254.238 818.753 li
254.238 830.763 li
cp
f
269.467 828.513 mo
267.288 828.513 li
267.288 821.003 li
269.485 821.003 li
271.934 821.003 273.23 822.642 273.23 824.75 cv
273.23 826.802 271.844 828.513 269.467 828.513 cv
cp
269.467 818.753 mo
264.731 818.753 li
264.731 830.763 li
269.485 830.763 li
273.23 830.763 275.841 828.386 275.841 824.75 cv
275.841 821.148 273.23 818.753 269.467 818.753 cv
cp
f
282.913 824.246 mo
280.212 824.246 li
280.212 821.003 li
282.913 821.003 li
283.921 821.003 284.695 821.617 284.695 822.607 cv
284.695 823.632 283.921 824.246 282.913 824.246 cv
cp
287.324 822.625 mo
287.324 820.392 285.775 818.753 283.273 818.753 cv
277.655 818.753 li
277.655 830.763 li
280.212 830.763 li
280.212 826.496 li
282.085 826.496 li
284.443 830.763 li
287.396 830.763 li
284.678 826.189 li
285.974 825.884 287.324 824.732 287.324 822.625 cv
cp
f
294.937 828.71 mo
292.704 828.71 291.282 827 291.282 824.767 cv
291.282 822.517 292.704 820.824 294.937 820.824 cv
297.151 820.824 298.574 822.517 298.574 824.767 cv
298.574 827 297.151 828.71 294.937 828.71 cv
cp
294.937 818.556 mo
291.3 818.556 288.653 821.148 288.653 824.767 cv
288.653 828.386 291.3 830.978 294.937 830.978 cv
298.556 830.978 301.203 828.386 301.203 824.767 cv
301.203 821.148 298.556 818.556 294.937 818.556 cv
cp
f
308.257 824.226 mo
305.556 824.226 li
305.556 821.003 li
308.257 821.003 li
309.265 821.003 310.039 821.617 310.039 822.625 cv
310.039 823.615 309.265 824.226 308.257 824.226 cv
cp
308.617 818.753 mo
302.999 818.753 li
302.999 830.763 li
305.556 830.763 li
305.556 826.478 li
308.617 826.478 li
311.21 826.478 312.65 824.712 312.65 822.625 cv
312.65 820.517 311.228 818.753 308.617 818.753 cv
cp
f
319.507 824.226 mo
316.806 824.226 li
316.806 821.003 li
319.507 821.003 li
320.515 821.003 321.289 821.617 321.289 822.625 cv
321.289 823.615 320.515 824.226 319.507 824.226 cv
cp
319.867 818.753 mo
314.249 818.753 li
314.249 830.763 li
316.806 830.763 li
316.806 826.478 li
319.867 826.478 li
322.46 826.478 323.9 824.712 323.9 822.625 cv
323.9 820.517 322.478 818.753 319.867 818.753 cv
cp
f
325.499 830.763 mo
333.998 830.763 li
333.998 828.513 li
328.056 828.513 li
328.056 825.775 li
333.872 825.775 li
333.872 823.525 li
328.056 823.525 li
328.056 821.003 li
333.998 821.003 li
333.998 818.753 li
325.499 818.753 li
325.499 830.763 li
cp
f
341.25 824.246 mo
338.55 824.246 li
338.55 821.003 li
341.25 821.003 li
342.259 821.003 343.033 821.617 343.033 822.607 cv
343.033 823.632 342.259 824.246 341.25 824.246 cv
cp
343.015 826.189 mo
344.312 825.884 345.662 824.732 345.662 822.625 cv
345.662 820.392 344.113 818.753 341.61 818.753 cv
335.993 818.753 li
335.993 830.763 li
338.55 830.763 li
338.55 826.496 li
340.422 826.496 li
342.781 830.763 li
345.733 830.763 li
343.015 826.189 li
cp
f
278.574 705.713 mo
252.071 732.214 li
251.304 732.982 250.881 734.002 250.881 735.085 cv
250.882 736.17 251.305 737.191 252.072 737.958 cv
253.606 739.492 256.281 739.493 257.814 737.958 cv
284.316 711.456 li
278.574 705.713 li
cp
254.944 743.647 mo
252.659 743.647 250.509 742.757 248.892 741.141 cv
247.273 739.524 246.382 737.374 246.381 735.087 cv
246.381 732.801 247.271 730.651 248.89 729.033 cv
278.574 699.35 li
290.681 711.456 li
260.996 741.14 li
259.38 742.756 257.23 743.647 254.944 743.647 cv
cp
.0952911 .0952911 .0952911 rgb
f
243.411 768.229 mo
238.505 775.101 li
237.616 776.347 237.165 777.649 237.165 778.97 cv
237.165 782.414 239.967 785.215 243.411 785.215 cv
246.854 785.215 249.655 782.414 249.655 778.969 cv
249.655 777.651 249.203 776.348 248.312 775.096 cv
243.411 768.229 li
cp
243.411 789.715 mo
237.486 789.715 232.665 784.895 232.665 778.969 cv
232.665 776.724 233.418 774.482 234.843 772.486 cv
243.411 760.483 li
251.977 772.485 li
253.403 774.488 254.155 776.73 254.155 778.97 cv
254.155 784.895 249.335 789.715 243.411 789.715 cv
cp
f
238.134 746.62 mo
243.411 751.895 li
247.937 747.366 li
249.344 747.979 li
251.12 748.754 253.004 749.147 254.943 749.147 cv
258.698 749.147 262.229 747.684 264.885 745.029 cv
312.504 697.411 li
292.621 677.526 li
245.002 725.144 li
242.346 727.799 240.883 731.331 240.884 735.085 cv
240.883 737.023 241.275 738.906 242.05 740.686 cv
242.663 742.091 li
238.134 746.62 li
cp
243.412 758.259 mo
231.77 746.62 li
237.362 741.029 li
236.711 739.114 236.382 737.122 236.384 735.084 cv
236.383 730.128 238.314 725.467 241.821 721.961 cv
292.621 671.163 li
318.868 697.411 li
268.067 748.21 li
264.561 751.716 259.9 753.647 254.943 753.647 cv
252.904 753.647 250.912 753.318 249 752.668 cv
243.412 758.259 li
cp
f
288.113 666.656 mo
323.375 701.917 li
327.883 697.411 li
320.193 689.721 li
336.585 673.33 li
339.241 670.674 340.703 667.143 340.704 663.387 cv
340.704 659.631 339.241 656.101 336.585 653.445 cv
333.93 650.79 330.402 649.327 326.65 649.327 cv
322.888 649.327 319.356 650.79 316.701 653.445 cv
300.309 669.836 li
292.62 662.148 li
288.113 666.656 li
cp
323.375 708.28 mo
281.75 666.656 li
292.62 655.783 li
300.309 663.473 li
313.519 650.263 li
317.024 646.757 321.686 644.827 326.643 644.827 cv
331.604 644.827 336.263 646.757 339.768 650.263 cv
343.273 653.769 345.204 658.429 345.204 663.387 cv
345.203 668.345 343.272 673.006 339.767 676.511 cv
326.558 689.721 li
334.248 697.411 li
323.375 708.28 li
cp
f
315.425 667.449 mo
312.242 664.267 li
319.881 656.626 li
321.688 654.821 324.089 653.827 326.643 653.827 cv
326.646 653.827 326.65 653.827 326.653 653.827 cv
329.203 653.827 331.601 654.822 333.405 656.628 cv
330.22 659.808 li
329.267 658.853 327.999 658.327 326.65 658.327 cv
326.649 658.327 326.647 658.327 326.646 658.327 cv
325.291 658.327 324.02 658.853 323.063 659.808 cv
315.425 667.449 li
cp
f
245.355 728.679 mo
241.82 725.144 li
245.003 721.962 li
248.538 725.498 li
245.355 728.679 li
cp
f
252.378 721.656 mo
248.843 718.121 li
252.024 714.939 li
255.56 718.474 li
252.378 721.656 li
cp
f
259.401 714.633 mo
255.866 711.097 li
259.049 707.916 li
262.584 711.452 li
259.401 714.633 li
cp
f
266.423 707.611 mo
262.888 704.074 li
266.07 700.892 li
269.606 704.429 li
266.423 707.611 li
cp
f
273.447 700.587 mo
269.912 697.052 li
273.095 693.871 li
276.629 697.406 li
273.447 700.587 li
cp
f
280.471 693.564 mo
276.935 690.029 li
280.117 686.847 li
283.652 690.382 li
280.471 693.564 li
cp
f
287.494 686.541 mo
283.958 683.005 li
287.14 679.824 li
290.675 683.359 li
287.494 686.541 li
cp
f
913.385 820.996 mo
916.896 820.996 li
916.896 830.753 li
919.471 830.753 li
919.471 820.996 li
922.964 820.996 li
922.964 818.744 li
913.385 818.744 li
913.385 820.996 li
cp
.0980392 .0941176 .0941176 rgb
f
924.6 830.753 mo
933.098 830.753 li
933.098 828.503 li
927.156 828.503 li
927.156 825.767 li
932.972 825.767 li
932.972 823.515 li
927.156 823.515 li
927.156 820.996 li
933.098 820.996 li
933.098 818.744 li
924.6 818.744 li
924.6 830.753 li
cp
f
937.289 822.021 mo
937.289 821.3 937.901 820.833 938.982 820.833 cv
940.206 820.833 941.502 821.248 942.475 822.148 cv
943.897 820.24 li
942.709 819.14 941.125 818.564 939.216 818.564 cv
936.389 818.564 934.66 820.22 934.66 822.22 cv
934.66 826.738 941.574 825.281 941.574 827.369 cv
941.574 828.072 940.908 828.701 939.486 828.701 cv
937.83 828.701 936.516 827.945 935.669 827.062 cv
934.264 829.062 li
935.398 830.195 937.055 830.97 939.378 830.97 cv
942.602 830.97 944.186 829.314 944.186 827.117 cv
944.186 822.634 937.289 823.912 937.289 822.021 cv
cp
f
944.92 818.744 mo
944.92 820.996 li
948.432 820.996 li
948.432 830.753 li
951.006 830.753 li
951.006 820.996 li
954.499 820.996 li
954.499 818.744 li
944.92 818.744 li
cp
f
913.692 649.521 mo
913.692 764.771 li
913.692 770.181 915.799 775.266 919.623 779.09 cv
923.447 782.915 928.532 785.021 933.942 785.021 cv
939.353 785.021 944.438 782.915 948.262 779.09 cv
952.086 775.266 954.192 770.181 954.192 764.771 cv
954.192 649.521 li
913.692 649.521 li
cp
933.942 789.521 mo
927.33 789.521 921.114 786.947 916.441 782.272 cv
911.767 777.599 909.192 771.383 909.192 764.771 cv
909.192 645.021 li
958.692 645.021 li
958.692 764.771 li
958.692 771.383 956.118 777.599 951.443 782.272 cv
946.771 786.947 940.555 789.521 933.942 789.521 cv
cp
.0952911 .0952911 .0952911 rgb
f
923.692 702.931 mo
923.692 764.771 li
923.692 767.509 924.758 770.083 926.693 772.019 cv
928.63 773.955 931.204 775.021 933.942 775.021 cv
936.681 775.021 939.255 773.956 941.19 772.02 cv
943.126 770.083 944.192 767.508 944.192 764.771 cv
944.192 702.931 li
923.692 702.931 li
cp
933.942 779.521 mo
930.002 779.521 926.298 777.987 923.512 775.201 cv
920.727 772.416 919.192 768.711 919.192 764.771 cv
919.192 698.431 li
948.692 698.431 li
948.692 764.771 li
948.692 768.71 947.158 772.415 944.373 775.202 cv
941.587 777.987 937.883 779.521 933.942 779.521 cv
cp
f
966.442 649.521 mo
901.442 649.521 li
901.442 645.021 li
966.442 645.021 li
966.442 649.521 li
cp
f
956.442 756.339 mo
946.442 756.339 li
946.442 751.839 li
956.442 751.839 li
956.442 756.339 li
cp
f
956.442 745.658 mo
946.442 745.658 li
946.442 741.158 li
956.442 741.158 li
956.442 745.658 li
cp
f
956.442 734.976 mo
946.442 734.976 li
946.442 730.476 li
956.442 730.476 li
956.442 734.976 li
cp
f
956.442 724.294 mo
946.442 724.294 li
946.442 719.794 li
956.442 719.794 li
956.442 724.294 li
cp
f
956.442 713.613 mo
946.442 713.613 li
946.442 709.113 li
956.442 709.113 li
956.442 713.613 li
cp
f
956.442 702.931 mo
946.442 702.931 li
946.442 698.431 li
956.442 698.431 li
956.442 702.931 li
cp
f
956.442 692.25 mo
946.442 692.25 li
946.442 687.75 li
956.442 687.75 li
956.442 692.25 li
cp
f
956.442 681.568 mo
946.442 681.568 li
946.442 677.068 li
956.442 677.068 li
956.442 681.568 li
cp
f
956.442 670.884 mo
946.442 670.884 li
946.442 666.384 li
956.442 666.384 li
956.442 670.884 li
cp
f
956.442 660.205 mo
946.442 660.205 li
946.442 655.705 li
956.442 655.705 li
956.442 660.205 li
cp
f
705.318 818.762 mo
702.24 818.762 li
699.521 822.868 li
696.766 818.762 li
693.724 818.762 li
697.811 824.614 li
693.453 830.772 li
696.496 830.772 li
699.521 826.378 li
702.527 830.772 li
705.589 830.772 li
701.231 824.596 li
705.318 818.762 li
cp
.0980392 .0941176 .0941176 rgb
f
705.226 827.387 mo
709.547 827.387 li
709.547 825.443 li
705.226 825.443 li
705.226 827.387 li
cp
f
716.531 824.254 mo
713.83 824.254 li
713.83 821.013 li
716.531 821.013 li
717.539 821.013 718.313 821.625 718.313 822.616 cv
718.313 823.642 717.539 824.254 716.531 824.254 cv
cp
720.942 822.633 mo
720.942 820.401 719.394 818.762 716.891 818.762 cv
711.273 818.762 li
711.273 830.772 li
713.83 830.772 li
713.83 826.504 li
715.703 826.504 li
718.062 830.772 li
721.014 830.772 li
718.295 826.199 li
719.592 825.892 720.942 824.74 720.942 822.633 cv
cp
f
725.944 826.487 mo
727.816 821.319 li
729.689 826.487 li
725.944 826.487 li
cp
726.215 818.762 mo
721.587 830.772 li
724.486 830.772 li
725.242 828.738 li
730.392 828.738 li
731.148 830.772 li
734.047 830.772 li
729.42 818.762 li
726.215 818.762 li
cp
f
741.552 818.762 mo
738.581 823.57 li
735.609 818.762 li
732.693 818.762 li
737.303 825.857 li
737.303 830.772 li
739.859 830.772 li
739.859 825.857 li
744.451 818.762 li
741.552 818.762 li
cp
f
668.952 656.021 mo
664.679 656.021 661.202 659.498 661.202 663.771 cv
661.202 763.771 li
661.202 768.044 664.679 771.521 668.952 771.521 cv
768.952 771.521 li
773.226 771.521 776.702 768.044 776.702 763.771 cv
776.702 663.771 li
776.702 659.498 773.226 656.021 768.952 656.021 cv
668.952 656.021 li
cp
768.952 776.021 mo
668.952 776.021 li
662.197 776.021 656.702 770.526 656.702 763.771 cv
656.702 663.771 li
656.702 657.016 662.197 651.521 668.952 651.521 cv
768.952 651.521 li
775.707 651.521 781.202 657.016 781.202 663.771 cv
781.202 763.771 li
781.202 770.526 775.707 776.021 768.952 776.021 cv
cp
.0952911 .0952911 .0952911 rgb
f
673.202 759.521 mo
764.702 759.521 li
764.702 668.021 li
673.202 668.021 li
673.202 759.521 li
cp
769.202 764.021 mo
668.702 764.021 li
668.702 663.521 li
769.202 663.521 li
769.202 764.021 li
cp
f
731.952 714.4 mo
726.667 714.4 721.384 712.389 717.361 708.366 cv
720.543 705.184 li
726.834 711.473 737.068 711.475 743.361 705.184 cv
746.543 708.366 li
742.521 712.388 737.235 714.4 731.952 714.4 cv
cp
f
705.952 714.41 mo
700.439 714.41 695.258 712.263 691.361 708.366 cv
694.543 705.184 li
697.59 708.231 701.642 709.91 705.952 709.91 cv
710.263 709.91 714.314 708.231 717.361 705.184 cv
720.543 708.366 li
716.646 712.263 711.465 714.41 705.952 714.41 cv
cp
f
732.702 704.326 mo
726.906 704.326 721.458 702.068 717.361 697.969 cv
720.543 694.788 li
723.791 698.037 728.108 699.826 732.702 699.826 cv
737.295 699.826 741.613 698.037 744.861 694.788 cv
748.043 697.969 li
743.945 702.068 738.497 704.326 732.702 704.326 cv
cp
f
705.202 704.326 mo
699.406 704.326 693.958 702.068 689.861 697.969 cv
693.043 694.788 li
696.291 698.037 700.608 699.826 705.202 699.826 cv
709.795 699.826 714.113 698.037 717.361 694.788 cv
720.543 697.969 li
716.445 702.068 710.997 704.326 705.202 704.326 cv
cp
f
730.202 693.555 mo
725.552 693.555 720.901 691.786 717.361 688.248 cv
720.543 685.064 li
725.869 690.388 734.535 690.388 739.861 685.064 cv
743.043 688.248 li
739.503 691.786 734.853 693.555 730.202 693.555 cv
cp
f
707.702 693.565 mo
702.851 693.565 698.29 691.676 694.861 688.247 cv
698.043 685.065 li
700.622 687.645 704.053 689.065 707.702 689.065 cv
711.352 689.065 714.781 687.645 717.361 685.065 cv
720.543 688.247 li
717.114 691.676 712.554 693.565 707.702 693.565 cv
cp
f
721.202 725.242 mo
716.702 725.242 li
716.702 679.574 li
721.202 679.574 li
721.202 725.242 li
cp
f
702.857 728.394 mo
702.003 728.394 701.309 729.09 701.309 729.947 cv
701.309 730.801 702.003 731.496 702.857 731.496 cv
703.715 731.496 704.413 730.801 704.413 729.947 cv
704.413 729.09 703.715 728.394 702.857 728.394 cv
cp
702.857 735.996 mo
699.522 735.996 696.809 733.282 696.809 729.947 cv
696.809 726.609 699.522 723.894 702.857 723.894 cv
706.196 723.894 708.913 726.609 708.913 729.947 cv
708.913 733.282 706.196 735.996 702.857 735.996 cv
cp
735.04 728.394 mo
734.186 728.394 733.491 729.09 733.491 729.947 cv
733.491 730.801 734.186 731.496 735.04 731.496 cv
735.901 731.496 736.603 730.801 736.603 729.947 cv
736.603 729.09 735.901 728.394 735.04 728.394 cv
cp
735.04 735.996 mo
731.705 735.996 728.991 733.282 728.991 729.947 cv
728.991 726.609 731.705 723.894 735.04 723.894 cv
738.383 723.894 741.103 726.609 741.103 729.947 cv
741.103 733.282 738.383 735.996 735.04 735.996 cv
cp
705.547 738.9 mo
708.737 738.9 711.728 740.466 713.547 743.09 cv
713.645 743.243 li
716.145 747.576 li
716.72 748.57 717.797 749.191 718.952 749.191 cv
720.107 749.191 721.182 748.572 721.757 747.575 cv
724.357 743.089 li
726.18 740.466 729.167 738.9 732.351 738.9 cv
732.667 738.9 732.965 738.915 733.258 738.939 cv
733.498 738.972 li
733.647 739.001 733.791 739.023 733.941 739.038 cv
734.313 739.082 734.665 739.101 735.042 739.101 cv
740.093 739.101 744.202 734.997 744.202 729.951 cv
744.202 724.901 740.093 720.792 735.042 720.792 cv
732.831 720.792 730.7 721.59 729.028 723.042 cv
728.677 723.437 728.347 723.759 727.999 724.052 cv
725.554 726.253 722.321 727.492 718.952 727.492 cv
715.587 727.492 712.353 726.254 709.846 724.007 cv
709.522 723.722 709.193 723.396 708.878 723.046 cv
707.199 721.591 705.064 720.792 702.854 720.792 cv
697.808 720.792 693.702 724.901 693.702 729.951 cv
693.702 734.997 697.808 739.101 702.854 739.101 cv
703.242 739.101 703.588 739.083 703.909 739.043 cv
704.113 739.023 704.258 739.001 704.409 738.972 cv
704.649 738.939 li
704.945 738.915 705.238 738.9 705.547 738.9 cv
cp
718.952 753.691 mo
716.197 753.691 713.628 752.21 712.247 749.827 cv
709.802 745.587 li
708.819 744.216 707.234 743.4 705.547 743.4 cv
705.403 743.4 705.266 743.406 705.129 743.416 cv
704.883 743.459 704.645 743.493 704.396 743.516 cv
703.947 743.572 703.425 743.601 702.854 743.601 cv
695.326 743.601 689.202 737.477 689.202 729.951 cv
689.202 722.419 695.326 716.292 702.854 716.292 cv
706.21 716.292 709.444 717.526 711.962 719.766 cv
712.157 719.961 li
712.376 720.21 712.604 720.44 712.834 720.642 cv
714.53 722.163 716.697 722.992 718.952 722.992 cv
721.208 722.992 723.372 722.164 725.045 720.659 cv
725.302 720.441 725.507 720.235 725.744 719.964 cv
725.938 719.768 li
728.449 717.527 731.683 716.292 735.042 716.292 cv
742.574 716.292 748.702 722.419 748.702 729.951 cv
748.702 737.477 742.574 743.601 735.042 743.601 cv
734.484 743.601 733.95 743.571 733.454 743.51 cv
733.252 743.492 733.02 743.459 732.775 743.416 cv
732.638 743.406 732.498 743.4 732.351 743.4 cv
730.669 743.4 729.088 744.215 728.104 745.586 cv
725.654 749.825 li
724.279 752.208 721.711 753.691 718.952 753.691 cv
cp
f
685.893 686.884 mo
676.813 686.884 li
676.813 682.384 li
685.893 682.384 li
685.893 686.884 li
cp
f
694.972 676.884 mo
676.813 676.884 li
676.813 672.384 li
694.972 672.384 li
694.972 676.884 li
cp
f
673.202 780.771 mo
668.702 780.771 li
668.702 773.771 li
673.202 773.771 li
673.202 780.771 li
cp
f
769.202 780.771 mo
764.702 780.771 li
764.702 773.771 li
769.202 773.771 li
769.202 780.771 li
cp
f
906.301 1038.46 mo
900.629 1038.46 li
900.629 1033.74 li
898.072 1033.74 li
898.072 1045.75 li
900.629 1045.75 li
900.629 1040.69 li
906.301 1040.69 li
906.301 1045.75 li
908.876 1045.75 li
908.876 1033.74 li
906.301 1033.74 li
906.301 1038.46 li
cp
.0980392 .0941176 .0941176 rgb
f
918.828 1033.74 mo
915.857 1038.55 li
912.886 1033.74 li
909.97 1033.74 li
914.579 1040.84 li
914.579 1045.75 li
917.136 1045.75 li
917.136 1040.84 li
921.728 1033.74 li
918.828 1033.74 li
cp
f
927.323 1041.34 mo
930.493 1041.34 li
930.493 1042.78 li
930.007 1043.23 929.017 1043.7 927.954 1043.7 cv
925.757 1043.7 924.173 1042.02 924.173 1039.76 cv
924.173 1037.49 925.757 1035.81 927.954 1035.81 cv
929.214 1035.81 930.24 1036.53 930.798 1037.38 cv
932.905 1036.23 li
932.005 1034.8 930.438 1033.54 927.954 1033.54 cv
924.425 1033.54 921.544 1035.96 921.544 1039.76 cv
921.544 1043.54 924.425 1045.97 927.954 1045.97 cv
930.114 1045.97 931.825 1045.09 933.05 1043.72 cv
933.05 1039.11 li
927.323 1039.11 li
927.323 1041.34 li
cp
f
935.08 1045.75 mo
937.637 1045.75 li
937.637 1033.74 li
935.08 1033.74 li
935.08 1045.75 li
cp
f
940.012 1045.75 mo
948.511 1045.75 li
948.511 1043.5 li
942.568 1043.5 li
942.568 1040.76 li
948.384 1040.76 li
948.384 1038.51 li
942.568 1038.51 li
942.568 1035.99 li
948.511 1035.99 li
948.511 1033.74 li
940.012 1033.74 li
940.012 1045.75 li
cp
f
958.698 1041.29 mo
953.134 1033.74 li
950.505 1033.74 li
950.505 1045.75 li
953.062 1045.75 li
953.062 1037.92 li
958.788 1045.75 li
961.255 1045.75 li
961.255 1033.74 li
958.698 1033.74 li
958.698 1041.29 li
cp
f
972.126 1035.99 mo
972.126 1033.74 li
963.627 1033.74 li
963.627 1045.75 li
972.126 1045.75 li
972.126 1043.5 li
966.184 1043.5 li
966.184 1040.76 li
971.999 1040.76 li
971.999 1038.51 li
966.184 1038.51 li
966.184 1035.99 li
972.126 1035.99 li
cp
f
998.942 982.589 mo
869.005 982.589 li
869.005 960.583 li
954.528 960.583 li
957.603 960.583 960.492 961.78 962.663 963.952 cv
964.295 965.582 965.377 967.62 965.814 969.837 cv
998.942 969.837 li
998.942 974.337 li
961.532 974.337 li
961.532 972.087 li
961.532 970.214 960.804 968.455 959.481 967.134 cv
958.159 965.811 956.4 965.083 954.528 965.083 cv
873.505 965.083 li
873.505 978.089 li
998.942 978.089 li
998.942 982.589 li
cp
.0952911 .0952911 .0952911 rgb
f
956.778 962.833 mo
952.278 962.833 li
952.278 930.449 li
956.778 930.449 li
956.778 962.833 li
cp
f
946.37 962.833 mo
941.87 962.833 li
941.87 930.449 li
946.37 930.449 li
946.37 962.833 li
cp
f
935.96 962.833 mo
931.46 962.833 li
931.46 930.449 li
935.96 930.449 li
935.96 962.833 li
cp
f
925.551 962.833 mo
921.051 962.833 li
921.051 930.449 li
925.551 930.449 li
925.551 962.833 li
cp
f
915.142 962.833 mo
910.642 962.833 li
910.642 930.449 li
915.142 930.449 li
915.142 962.833 li
cp
f
904.732 962.833 mo
900.232 962.833 li
900.232 930.449 li
904.732 930.449 li
904.732 962.833 li
cp
f
894.323 962.833 mo
889.823 962.833 li
889.823 930.449 li
894.323 930.449 li
894.323 962.833 li
cp
f
883.913 962.833 mo
879.413 962.833 li
879.413 930.449 li
883.913 930.449 li
883.913 962.833 li
cp
f
873.505 962.833 mo
869.005 962.833 li
869.005 930.449 li
873.505 930.449 li
873.505 962.833 li
cp
f
873.506 896.149 mo
873.506 898.431 li
873.506 904.855 876.007 910.892 880.549 915.431 cv
885.09 919.973 891.128 922.474 897.553 922.474 cv
952.176 922.474 li
951.662 916.902 949.243 911.731 945.236 907.725 cv
940.694 903.183 934.655 900.681 928.23 900.681 cv
884.405 900.681 li
880.152 900.681 876.296 898.948 873.506 896.149 cv
cp
956.779 926.974 mo
897.553 926.974 li
889.926 926.974 882.757 924.005 877.367 918.614 cv
871.976 913.225 869.006 906.057 869.006 898.431 cv
869.006 885.279 li
873.506 885.279 li
873.506 891.291 878.396 896.181 884.405 896.181 cv
928.23 896.181 li
935.857 896.181 943.026 899.151 948.418 904.543 cv
953.81 909.933 956.779 917.1 956.779 924.724 cv
956.779 926.974 li
cp
f
249.766 1037.02 mo
249.766 1036.3 250.378 1035.83 251.458 1035.83 cv
252.683 1035.83 253.979 1036.24 254.951 1037.15 cv
256.374 1035.24 li
255.186 1034.14 253.601 1033.56 251.692 1033.56 cv
248.865 1033.56 247.137 1035.22 247.137 1037.22 cv
247.137 1041.74 254.051 1040.28 254.051 1042.37 cv
254.051 1043.07 253.385 1043.7 251.962 1043.7 cv
250.306 1043.7 248.991 1042.94 248.146 1042.06 cv
246.741 1044.06 li
247.875 1045.19 249.531 1045.97 251.854 1045.97 cv
255.077 1045.97 256.662 1044.31 256.662 1042.11 cv
256.662 1037.63 249.766 1038.91 249.766 1037.02 cv
cp
.0980392 .0941176 .0941176 rgb
f
266.598 1040.87 mo
266.598 1042.55 265.643 1043.7 263.788 1043.7 cv
261.934 1043.7 260.962 1042.55 260.962 1040.87 cv
260.962 1033.74 li
258.369 1033.74 li
258.369 1040.94 li
258.369 1043.91 260.134 1045.97 263.788 1045.97 cv
267.443 1045.97 269.208 1043.91 269.208 1040.94 cv
269.208 1033.74 li
266.598 1033.74 li
266.598 1040.87 li
cp
f
276.838 1039.23 mo
274.138 1039.23 li
274.138 1035.99 li
276.838 1035.99 li
277.847 1035.99 278.621 1036.6 278.621 1037.6 cv
278.621 1038.62 277.847 1039.23 276.838 1039.23 cv
cp
281.25 1037.61 mo
281.25 1035.38 279.701 1033.74 277.198 1033.74 cv
271.581 1033.74 li
271.581 1045.75 li
274.138 1045.75 li
274.138 1041.48 li
276.01 1041.48 li
278.369 1045.75 li
281.321 1045.75 li
278.603 1041.18 li
279.899 1040.87 281.25 1039.72 281.25 1037.61 cv
cp
f
288.358 1041.34 mo
291.527 1041.34 li
291.527 1042.78 li
291.041 1043.23 290.051 1043.7 288.988 1043.7 cv
286.792 1043.7 285.207 1042.02 285.207 1039.76 cv
285.207 1037.49 286.792 1035.81 288.988 1035.81 cv
290.249 1035.81 291.274 1036.53 291.833 1037.38 cv
293.939 1036.23 li
293.039 1034.8 291.473 1033.54 288.988 1033.54 cv
285.459 1033.54 282.578 1035.96 282.578 1039.76 cv
282.578 1043.54 285.459 1045.97 288.988 1045.97 cv
291.148 1045.97 292.859 1045.09 294.084 1043.72 cv
294.084 1039.11 li
288.358 1039.11 li
288.358 1041.34 li
cp
f
296.114 1045.75 mo
304.613 1045.75 li
304.613 1043.5 li
298.671 1043.5 li
298.671 1040.76 li
304.487 1040.76 li
304.487 1038.51 li
298.671 1038.51 li
298.671 1035.99 li
304.613 1035.99 li
304.613 1033.74 li
296.114 1033.74 li
296.114 1045.75 li
cp
f
312.315 1043.7 mo
310.083 1043.7 308.661 1041.99 308.661 1039.76 cv
308.661 1037.51 310.083 1035.81 312.315 1035.81 cv
314.53 1035.81 315.953 1037.51 315.953 1039.76 cv
315.953 1041.99 314.53 1043.7 312.315 1043.7 cv
cp
312.315 1033.54 mo
308.679 1033.54 306.032 1036.14 306.032 1039.76 cv
306.032 1043.37 308.679 1045.97 312.315 1045.97 cv
315.935 1045.97 318.582 1043.37 318.582 1039.76 cv
318.582 1036.14 315.935 1033.54 312.315 1033.54 cv
cp
f
328.57 1033.74 mo
328.57 1041.29 li
323.007 1033.74 li
320.378 1033.74 li
320.378 1045.75 li
322.935 1045.75 li
322.935 1037.92 li
328.66 1045.75 li
331.127 1045.75 li
331.127 1033.74 li
328.57 1033.74 li
cp
f
288.934 1002.29 mo
273.349 1002.29 258.228 997.807 245.207 989.332 cv
247.662 985.56 li
259.951 993.559 274.222 997.788 288.934 997.788 cv
303.646 997.788 317.917 993.559 330.207 985.56 cv
332.662 989.332 li
319.64 997.807 304.519 1002.29 288.934 1002.29 cv
cp
.0952911 .0952911 .0952911 rgb
f
237.944 979.56 mo
233.547 978.605 li
237.415 960.806 249.743 945.862 266.525 938.629 cv
267.927 938.025 li
288.934 959.032 li
309.941 938.025 li
311.343 938.629 li
328.125 945.862 340.454 960.806 344.321 978.605 cv
339.924 979.56 li
336.471 963.671 325.69 950.252 310.947 943.383 cv
288.934 965.395 li
266.921 943.383 li
252.179 950.252 241.397 963.671 237.944 979.56 cv
cp
f
291.184 968.752 mo
286.684 968.752 li
286.684 962.213 li
291.184 962.213 li
291.184 968.752 li
cp
f
312.702 967.752 mo
308.202 967.752 li
308.202 961.213 li
312.702 961.213 li
312.702 967.752 li
cp
f
291.184 1000.04 mo
286.684 1000.04 li
286.684 976.499 li
291.184 976.499 li
291.184 1000.04 li
cp
f
302.202 978.502 mo
318.702 978.502 li
318.702 970.002 li
302.202 970.002 li
302.202 978.502 li
cp
323.202 983.002 mo
297.702 983.002 li
297.702 965.502 li
323.202 965.502 li
323.202 983.002 li
cp
f
288.934 936.182 mo
273.728 936.182 261.357 923.808 261.357 908.598 cv
261.357 895.934 li
265.857 895.934 li
265.857 908.598 li
265.857 921.327 276.209 931.682 288.934 931.682 cv
301.659 931.682 312.011 921.327 312.011 908.598 cv
312.011 895.934 li
316.511 895.934 li
316.511 908.598 li
316.511 923.808 304.14 936.182 288.934 936.182 cv
cp
f
265.857 893.684 mo
312.011 893.684 li
312.011 874.339 li
304.714 871.167 296.958 869.561 288.934 869.561 cv
280.908 869.561 273.152 871.167 265.857 874.339 cv
265.857 893.684 li
cp
316.511 898.184 mo
261.357 898.184 li
261.357 871.447 li
262.66 870.842 li
270.93 867.006 279.77 865.061 288.934 865.061 cv
298.097 865.061 306.937 867.006 315.208 870.842 cv
316.511 871.447 li
316.511 898.184 li
cp
f
291.181 890.774 mo
286.681 890.774 li
286.681 875.768 li
291.181 875.768 li
291.181 890.774 li
cp
f
296.434 885.522 mo
281.434 885.522 li
281.434 881.022 li
296.434 881.022 li
296.434 885.522 li
cp
f
432.814 1043.5 mo
429.501 1043.5 li
429.501 1040.76 li
432.814 1040.76 li
433.805 1040.76 434.345 1041.38 434.345 1042.13 cv
434.345 1043 433.769 1043.5 432.814 1043.5 cv
cp
429.501 1035.99 mo
432.706 1035.99 li
433.57 1035.99 434.11 1036.52 434.11 1037.25 cv
434.11 1038.03 433.57 1038.51 432.706 1038.51 cv
429.501 1038.51 li
429.501 1035.99 li
cp
434.65 1039.56 mo
435.785 1039.32 436.722 1038.3 436.722 1036.8 cv
436.722 1035.2 435.551 1033.74 433.265 1033.74 cv
426.944 1033.74 li
426.944 1045.75 li
433.462 1045.75 li
435.767 1045.75 436.955 1044.31 436.955 1042.49 cv
436.955 1041 435.947 1039.76 434.65 1039.56 cv
cp
.0980392 .0941176 .0941176 rgb
f
441.346 1033.74 mo
438.771 1033.74 li
438.771 1045.75 li
446.423 1045.75 li
446.423 1043.5 li
441.346 1043.5 li
441.346 1033.74 li
cp
f
453.37 1043.7 mo
451.138 1043.7 449.715 1041.99 449.715 1039.76 cv
449.715 1037.51 451.138 1035.81 453.37 1035.81 cv
455.585 1035.81 457.008 1037.51 457.008 1039.76 cv
457.008 1041.99 455.585 1043.7 453.37 1043.7 cv
cp
453.37 1033.54 mo
449.733 1033.54 447.087 1036.14 447.087 1039.76 cv
447.087 1043.37 449.733 1045.97 453.37 1045.97 cv
456.989 1045.97 459.637 1043.37 459.637 1039.76 cv
459.637 1036.14 456.989 1033.54 453.37 1033.54 cv
cp
f
467.141 1043.7 mo
464.908 1043.7 463.485 1041.99 463.485 1039.76 cv
463.485 1037.51 464.908 1035.81 467.141 1035.81 cv
469.355 1035.81 470.777 1037.51 470.777 1039.76 cv
470.777 1041.99 469.355 1043.7 467.141 1043.7 cv
cp
467.141 1033.54 mo
463.503 1033.54 460.856 1036.14 460.856 1039.76 cv
460.856 1043.37 463.503 1045.97 467.141 1045.97 cv
470.76 1045.97 473.406 1043.37 473.406 1039.76 cv
473.406 1036.14 470.76 1033.54 467.141 1033.54 cv
cp
f
479.938 1043.5 mo
477.76 1043.5 li
477.76 1035.99 li
479.956 1035.99 li
482.405 1035.99 483.701 1037.63 483.701 1039.74 cv
483.701 1041.79 482.314 1043.5 479.938 1043.5 cv
cp
479.938 1033.74 mo
475.203 1033.74 li
475.203 1045.75 li
479.956 1045.75 li
483.701 1045.75 486.313 1043.37 486.313 1039.74 cv
486.313 1036.14 483.701 1033.74 479.938 1033.74 cv
cp
f
498.01 1039.22 mo
495.309 1039.22 li
495.309 1035.99 li
498.01 1035.99 li
499.018 1035.99 499.793 1036.6 499.793 1037.61 cv
499.793 1038.6 499.018 1039.22 498.01 1039.22 cv
cp
498.37 1033.74 mo
492.753 1033.74 li
492.753 1045.75 li
495.309 1045.75 li
495.309 1041.47 li
498.37 1041.47 li
500.963 1041.47 502.403 1039.7 502.403 1037.61 cv
502.403 1035.51 500.98 1033.74 498.37 1033.74 cv
cp
f
509.26 1039.23 mo
506.559 1039.23 li
506.559 1035.99 li
509.26 1035.99 li
510.268 1035.99 511.043 1036.6 511.043 1037.6 cv
511.043 1038.62 510.268 1039.23 509.26 1039.23 cv
cp
513.672 1037.61 mo
513.672 1035.38 512.123 1033.74 509.62 1033.74 cv
504.002 1033.74 li
504.002 1045.75 li
506.559 1045.75 li
506.559 1041.48 li
508.432 1041.48 li
510.791 1045.75 li
513.743 1045.75 li
511.024 1041.18 li
512.32 1040.87 513.672 1039.72 513.672 1037.61 cv
cp
f
515.576 1045.75 mo
524.074 1045.75 li
524.074 1043.5 li
518.133 1043.5 li
518.133 1040.76 li
523.949 1040.76 li
523.949 1038.51 li
518.133 1038.51 li
518.133 1035.99 li
524.074 1035.99 li
524.074 1033.74 li
515.576 1033.74 li
515.576 1045.75 li
cp
f
528.267 1037.02 mo
528.267 1036.3 528.879 1035.83 529.959 1035.83 cv
531.184 1035.83 532.479 1036.24 533.452 1037.15 cv
534.875 1035.24 li
533.686 1034.14 532.102 1033.56 530.193 1033.56 cv
527.366 1033.56 525.638 1035.22 525.638 1037.22 cv
525.638 1041.74 532.552 1040.28 532.552 1042.37 cv
532.552 1043.07 531.885 1043.7 530.463 1043.7 cv
528.807 1043.7 527.492 1042.94 526.646 1042.06 cv
525.241 1044.06 li
526.376 1045.19 528.032 1045.97 530.355 1045.97 cv
533.578 1045.97 535.162 1044.31 535.162 1042.11 cv
535.162 1037.63 528.267 1038.91 528.267 1037.02 cv
cp
f
539.066 1037.02 mo
539.066 1036.3 539.678 1035.83 540.759 1035.83 cv
541.982 1035.83 543.279 1036.24 544.252 1037.15 cv
545.674 1035.24 li
544.486 1034.14 542.901 1033.56 540.992 1033.56 cv
538.166 1033.56 536.438 1035.22 536.438 1037.22 cv
536.438 1041.74 543.352 1040.28 543.352 1042.37 cv
543.352 1043.07 542.686 1043.7 541.263 1043.7 cv
539.606 1043.7 538.292 1042.94 537.445 1042.06 cv
536.041 1044.06 li
537.176 1045.19 538.832 1045.97 541.154 1045.97 cv
544.378 1045.97 545.963 1044.31 545.963 1042.11 cv
545.963 1037.63 539.066 1038.91 539.066 1037.02 cv
cp
f
555.898 1040.87 mo
555.898 1042.55 554.943 1043.7 553.089 1043.7 cv
551.234 1043.7 550.262 1042.55 550.262 1040.87 cv
550.262 1033.74 li
547.67 1033.74 li
547.67 1040.94 li
547.67 1043.91 549.434 1045.97 553.089 1045.97 cv
556.744 1045.97 558.509 1043.91 558.509 1040.94 cv
558.509 1033.74 li
555.898 1033.74 li
555.898 1040.87 li
cp
f
566.139 1039.23 mo
563.438 1039.23 li
563.438 1035.99 li
566.139 1035.99 li
567.146 1035.99 567.922 1036.6 567.922 1037.6 cv
567.922 1038.62 567.146 1039.23 566.139 1039.23 cv
cp
570.551 1037.61 mo
570.551 1035.38 569.002 1033.74 566.499 1033.74 cv
560.881 1033.74 li
560.881 1045.75 li
563.438 1045.75 li
563.438 1041.48 li
565.311 1041.48 li
567.67 1045.75 li
570.622 1045.75 li
567.903 1041.18 li
569.199 1040.87 570.551 1039.72 570.551 1037.61 cv
cp
f
580.953 1035.99 mo
580.953 1033.74 li
572.455 1033.74 li
572.455 1045.75 li
580.953 1045.75 li
580.953 1043.5 li
575.012 1043.5 li
575.012 1040.76 li
580.827 1040.76 li
580.827 1038.51 li
575.012 1038.51 li
575.012 1035.99 li
580.953 1035.99 li
cp
f
477.88 902.693 mo
475.261 902.693 473.13 904.824 473.13 907.443 cv
473.13 957.08 li
473.13 959.699 475.261 961.83 477.88 961.83 cv
527.517 961.83 li
530.136 961.83 532.267 959.699 532.267 957.08 cv
532.267 907.443 li
532.267 904.824 530.136 902.693 527.517 902.693 cv
477.88 902.693 li
cp
527.517 966.33 mo
477.88 966.33 li
472.78 966.33 468.63 962.18 468.63 957.08 cv
468.63 907.443 li
468.63 902.342 472.78 898.193 477.88 898.193 cv
527.517 898.193 li
532.617 898.193 536.767 902.342 536.767 907.443 cv
536.767 957.08 li
536.767 962.18 532.617 966.33 527.517 966.33 cv
cp
.0952911 .0952911 .0952911 rgb
f
553.608 923.011 mo
548.508 923.011 544.358 927.161 544.358 932.261 cv
544.358 937.362 548.508 941.511 553.608 941.511 cv
558.709 941.511 562.858 937.362 562.858 932.261 cv
562.858 927.161 558.709 923.011 553.608 923.011 cv
cp
553.608 946.011 mo
546.026 946.011 539.858 939.843 539.858 932.261 cv
539.858 924.679 546.026 918.511 553.608 918.511 cv
561.19 918.511 567.358 924.679 567.358 932.261 cv
567.358 939.843 561.19 946.011 553.608 946.011 cv
cp
f
553.608 930.011 mo
552.368 930.011 551.358 931.021 551.358 932.261 cv
551.358 933.501 552.368 934.511 553.608 934.511 cv
554.849 934.511 555.858 933.501 555.858 932.261 cv
555.858 931.021 554.849 930.011 553.608 930.011 cv
cp
553.608 939.011 mo
549.887 939.011 546.858 935.983 546.858 932.261 cv
546.858 928.54 549.887 925.511 553.608 925.511 cv
557.33 925.511 560.358 928.54 560.358 932.261 cv
560.358 935.983 557.33 939.011 553.608 939.011 cv
cp
f
451.79 918.011 mo
448.597 918.011 445.04 923.864 445.04 932.261 cv
445.04 940.659 448.597 946.511 451.79 946.511 cv
454.982 946.511 458.54 940.659 458.54 932.261 cv
458.54 923.864 454.982 918.011 451.79 918.011 cv
cp
451.79 951.011 mo
445.481 951.011 440.54 942.775 440.54 932.261 cv
440.54 921.748 445.481 913.511 451.79 913.511 cv
458.098 913.511 463.04 921.748 463.04 932.261 cv
463.04 942.775 458.098 951.011 451.79 951.011 cv
cp
f
528.153 1004.51 mo
512.877 1004.51 500.449 992.083 500.449 976.806 cv
500.449 964.08 li
504.949 964.08 li
504.949 976.806 li
504.949 989.601 515.358 1000.01 528.153 1000.01 cv
540.948 1000.01 551.358 989.601 551.358 976.806 cv
551.358 943.398 li
555.858 943.398 li
555.858 976.806 li
555.858 992.083 543.43 1004.51 528.153 1004.51 cv
cp
f
454.04 915.761 mo
449.54 915.761 li
449.54 887.716 li
449.54 872.44 461.968 860.011 477.244 860.011 cv
492.521 860.011 504.948 872.44 504.948 887.716 cv
504.948 900.443 li
500.449 900.443 li
500.449 887.716 li
500.449 874.921 490.039 864.511 477.244 864.511 cv
464.449 864.511 454.04 874.921 454.04 887.716 cv
454.04 915.761 li
cp
f
454.04 955.761 mo
449.54 955.761 li
449.54 948.761 li
454.04 948.761 li
454.04 955.761 li
cp
f
488.733 964.08 mo
484.233 964.08 li
484.233 900.443 li
488.733 900.443 li
488.733 964.08 li
cp
f
665.464 1045.75 mo
673.962 1045.75 li
673.962 1043.5 li
668.021 1043.5 li
668.021 1040.76 li
673.835 1040.76 li
673.835 1038.51 li
668.021 1038.51 li
668.021 1035.99 li
673.962 1035.99 li
673.962 1033.74 li
665.464 1033.74 li
665.464 1045.75 li
cp
.0980392 .0941176 .0941176 rgb
f
682.458 1041.25 mo
679.54 1033.74 li
675.958 1033.74 li
675.958 1045.75 li
678.515 1045.75 li
678.515 1037.09 li
681.899 1045.75 li
683.015 1045.75 li
686.401 1037.09 li
686.401 1045.75 li
688.976 1045.75 li
688.976 1033.74 li
685.374 1033.74 li
682.458 1041.25 li
cp
f
691.347 1045.75 mo
699.845 1045.75 li
699.845 1043.5 li
693.903 1043.5 li
693.903 1040.76 li
699.72 1040.76 li
699.72 1038.51 li
693.903 1038.51 li
693.903 1035.99 li
699.845 1035.99 li
699.845 1033.74 li
691.347 1033.74 li
691.347 1045.75 li
cp
f
707.099 1039.23 mo
704.397 1039.23 li
704.397 1035.99 li
707.099 1035.99 li
708.106 1035.99 708.882 1036.6 708.882 1037.6 cv
708.882 1038.62 708.106 1039.23 707.099 1039.23 cv
cp
711.511 1037.61 mo
711.511 1035.38 709.962 1033.74 707.458 1033.74 cv
701.841 1033.74 li
701.841 1045.75 li
704.397 1045.75 li
704.397 1041.48 li
706.271 1041.48 li
708.63 1045.75 li
711.583 1045.75 li
708.864 1041.18 li
710.159 1040.87 711.511 1039.72 711.511 1037.61 cv
cp
f
718.618 1041.34 mo
721.788 1041.34 li
721.788 1042.78 li
721.302 1043.23 720.312 1043.7 719.249 1043.7 cv
717.052 1043.7 715.468 1042.02 715.468 1039.76 cv
715.468 1037.49 717.052 1035.81 719.249 1035.81 cv
720.509 1035.81 721.536 1036.53 722.095 1037.38 cv
724.2 1036.23 li
723.3 1034.8 721.733 1033.54 719.249 1033.54 cv
715.72 1033.54 712.839 1035.96 712.839 1039.76 cv
712.839 1043.54 715.72 1045.97 719.249 1045.97 cv
721.409 1045.97 723.12 1045.09 724.345 1043.72 cv
724.345 1039.11 li
718.618 1039.11 li
718.618 1041.34 li
cp
f
726.376 1045.75 mo
734.874 1045.75 li
734.874 1043.5 li
728.933 1043.5 li
728.933 1040.76 li
734.747 1040.76 li
734.747 1038.51 li
728.933 1038.51 li
728.933 1035.99 li
734.874 1035.99 li
734.874 1033.74 li
726.376 1033.74 li
726.376 1045.75 li
cp
f
745.062 1041.29 mo
739.499 1033.74 li
736.87 1033.74 li
736.87 1045.75 li
739.427 1045.75 li
739.427 1037.92 li
745.151 1045.75 li
747.618 1045.75 li
747.618 1033.74 li
745.062 1033.74 li
745.062 1041.29 li
cp
f
755.825 1035.81 mo
757.05 1035.81 758.13 1036.59 758.634 1037.56 cv
760.831 1036.48 li
759.985 1034.97 758.454 1033.54 755.825 1033.54 cv
752.206 1033.54 749.415 1036.05 749.415 1039.76 cv
749.415 1043.45 752.206 1045.97 755.825 1045.97 cv
758.454 1045.97 759.985 1044.51 760.831 1043.02 cv
758.634 1041.95 li
758.13 1042.92 757.05 1043.7 755.825 1043.7 cv
753.628 1043.7 752.044 1042.02 752.044 1039.76 cv
752.044 1037.49 753.628 1035.81 755.825 1035.81 cv
cp
f
769.542 1033.74 mo
766.571 1038.55 li
763.601 1033.74 li
760.683 1033.74 li
765.292 1040.84 li
765.292 1045.75 li
767.849 1045.75 li
767.849 1040.84 li
772.44 1033.74 li
769.542 1033.74 li
cp
f
718.943 893.103 mo
726.955 893.103 734.506 894.481 740.222 896.983 cv
746.53 899.745 750.003 903.642 750.002 907.959 cv
750.004 910.156 li
750.004 910.619 750.144 911.036 750.432 911.433 cv
750.705 911.806 751.094 912.086 751.55 912.236 cv
773.788 919.423 li
774.01 919.495 774.242 919.531 774.478 919.531 cv
774.478 919.531 li
774.948 919.531 775.398 919.384 775.78 919.106 cv
776.631 918.489 776.701 918.062 776.701 917.644 cv
776.702 907.958 li
776.7 891.824 750.801 878.697 718.967 878.697 cv
687.109 878.697 661.202 891.822 661.202 907.955 cv
661.202 917.304 li
661.202 918.023 661.537 918.68 662.12 919.105 cv
662.693 919.524 663.445 919.638 664.116 919.422 cv
686.362 912.234 li
686.813 912.087 687.199 911.807 687.479 911.423 cv
687.748 911.053 687.903 910.561 687.902 910.076 cv
687.901 907.959 li
687.9 903.644 691.373 899.747 697.682 896.985 cv
703.398 894.482 710.949 893.103 718.943 893.103 cv
cp
774.478 924.031 mo
774.478 924.031 li
773.772 924.031 773.075 923.921 772.405 923.706 cv
750.159 916.515 li
748.796 916.071 747.634 915.23 746.794 914.082 cv
745.948 912.915 745.504 911.56 745.504 910.158 cv
745.502 907.96 li
745.503 905.609 742.854 903.047 738.417 901.105 cv
733.258 898.847 726.348 897.603 718.959 897.603 cv
711.557 897.603 704.646 898.847 699.486 901.107 cv
695.049 903.049 692.4 905.611 692.401 907.958 cv
692.402 910.073 li
692.404 911.508 691.947 912.928 691.118 914.07 cv
690.274 915.229 689.108 916.075 687.746 916.515 cv
665.498 923.705 li
663.461 924.361 661.196 924 659.47 922.742 cv
657.736 921.478 656.702 919.446 656.702 917.304 cv
656.702 907.955 li
656.702 889.025 684.046 874.197 718.953 874.197 cv
753.863 874.197 781.2 889.027 781.202 907.958 cv
781.201 917.644 li
781.201 919.693 780.268 921.41 778.428 922.745 cv
777.275 923.585 775.908 924.031 774.478 924.031 cv
cp
.0952911 .0952911 .0952911 rgb
f
669.202 908.091 mo
664.702 908.091 li
664.702 907.953 li
664.702 904.854 666.024 901.757 668.632 898.749 cv
671.568 895.335 676.138 892.14 681.842 889.516 cv
683.723 893.604 li
678.602 895.96 674.562 898.756 672.038 901.69 cv
670.154 903.863 669.202 905.968 669.202 907.953 cv
669.202 908.091 li
cp
f
689.097 988.076 mo
684.597 988.076 li
684.597 980.958 li
689.097 980.958 li
689.097 988.076 li
cp
f
753.308 988.076 mo
748.808 988.076 li
748.808 980.958 li
753.308 980.958 li
753.308 988.076 li
cp
f
718.953 929.925 mo
708.418 929.925 699.847 938.497 699.847 949.033 cv
699.847 959.569 708.418 968.14 718.953 968.14 cv
729.487 968.14 738.058 959.569 738.058 949.033 cv
738.058 938.497 729.487 929.925 718.953 929.925 cv
cp
718.953 972.64 mo
705.937 972.64 695.347 962.05 695.347 949.033 cv
695.347 936.015 705.937 925.425 718.953 925.425 cv
731.969 925.425 742.558 936.015 742.558 949.033 cv
742.558 962.05 731.969 972.64 718.953 972.64 cv
cp
f
721.203 959.939 mo
716.703 959.939 li
716.703 938.126 li
721.203 938.126 li
721.203 959.939 li
cp
f
729.859 951.283 mo
708.047 951.283 li
708.047 946.783 li
729.859 946.783 li
729.859 951.283 li
cp
f
762.12 983.208 mo
675.784 983.208 li
673.654 983.208 671.659 982.385 670.165 980.891 cv
668.662 979.375 667.839 977.383 667.839 975.273 cv
667.839 943.22 li
667.839 939.833 668.892 936.597 670.882 933.861 cv
672.871 931.13 675.626 929.132 678.852 928.084 cv
690.02 924.472 li
693.262 923.422 696.029 921.413 698.022 918.662 cv
699.748 916.301 700.785 913.494 701.029 910.534 cv
705.514 910.903 li
705.202 914.689 703.87 918.288 701.661 921.31 cv
699.109 924.831 695.562 927.408 691.405 928.753 cv
680.239 932.365 li
677.926 933.118 675.946 934.551 674.52 936.509 cv
673.093 938.47 672.339 940.791 672.339 943.22 cv
672.339 975.273 li
672.339 976.188 672.699 977.056 673.354 977.716 cv
673.991 978.354 674.856 978.708 675.784 978.708 cv
762.12 978.708 li
763.048 978.708 763.914 978.354 764.559 977.709 cv
765.205 977.057 765.565 976.189 765.565 975.273 cv
765.565 943.22 li
765.565 940.79 764.812 938.469 763.385 936.509 cv
761.959 934.551 759.98 933.118 757.662 932.364 cv
746.5 928.753 li
742.343 927.408 738.795 924.831 736.237 921.302 cv
734.033 918.287 732.701 914.688 732.392 910.902 cv
736.876 910.535 li
737.119 913.494 738.156 916.301 739.876 918.654 cv
741.875 921.413 744.643 923.422 747.886 924.472 cv
759.051 928.083 li
762.279 929.133 765.035 931.13 767.022 933.861 cv
769.014 936.596 770.065 939.833 770.065 943.22 cv
770.065 975.273 li
770.065 977.383 769.242 979.376 767.747 980.884 cv
766.246 982.385 764.25 983.208 762.12 983.208 cv
cp
f
6.729 1041.47 mo
8.60156 1036.3 li
10.4741 1041.47 li
6.729 1041.47 li
cp
6.99902 1033.74 mo
2.37158 1045.75 li
5.27051 1045.75 li
6.02686 1043.72 li
11.1763 1043.72 li
11.9326 1045.75 li
14.8315 1045.75 li
10.2041 1033.74 li
6.99902 1033.74 li
cp
.0980392 .0941176 .0941176 rgb
f
15.9443 1045.75 mo
18.501 1045.75 li
18.501 1033.74 li
15.9443 1033.74 li
15.9443 1045.75 li
cp
f
26.1333 1039.23 mo
23.4326 1039.23 li
23.4326 1035.99 li
26.1333 1035.99 li
27.1416 1035.99 27.916 1036.6 27.916 1037.6 cv
27.916 1038.62 27.1416 1039.23 26.1333 1039.23 cv
cp
30.5449 1037.61 mo
30.5449 1035.38 28.9961 1033.74 26.4937 1033.74 cv
20.876 1033.74 li
20.876 1045.75 li
23.4326 1045.75 li
23.4326 1041.48 li
25.3052 1041.48 li
27.6641 1045.75 li
30.6167 1045.75 li
27.8979 1041.18 li
29.1943 1040.87 30.5449 1039.72 30.5449 1037.61 cv
cp
f
40.1724 1041.47 mo
42.0449 1036.3 li
43.9175 1041.47 li
40.1724 1041.47 li
cp
40.4424 1033.74 mo
35.8149 1045.75 li
38.7139 1045.75 li
39.4702 1043.72 li
44.6196 1043.72 li
45.376 1045.75 li
48.2749 1045.75 li
43.6475 1033.74 li
40.4424 1033.74 li
cp
f
55.8877 1041.25 mo
52.9707 1033.74 li
49.3877 1033.74 li
49.3877 1045.75 li
51.9443 1045.75 li
51.9443 1037.09 li
55.3296 1045.75 li
56.4458 1045.75 li
59.8306 1037.09 li
59.8306 1045.75 li
62.4053 1045.75 li
62.4053 1033.74 li
58.8042 1033.74 li
55.8877 1041.25 li
cp
f
70.6475 1043.5 mo
67.3345 1043.5 li
67.3345 1040.76 li
70.6475 1040.76 li
71.6377 1040.76 72.1777 1041.38 72.1777 1042.13 cv
72.1777 1043 71.6016 1043.5 70.6475 1043.5 cv
cp
67.3345 1035.99 mo
70.5396 1035.99 li
71.4038 1035.99 71.9438 1036.52 71.9438 1037.25 cv
71.9438 1038.03 71.4038 1038.51 70.5396 1038.51 cv
67.3345 1038.51 li
67.3345 1035.99 li
cp
72.4839 1039.56 mo
73.6182 1039.32 74.5547 1038.3 74.5547 1036.8 cv
74.5547 1035.2 73.3843 1033.74 71.0977 1033.74 cv
64.7778 1033.74 li
64.7778 1045.75 li
71.2954 1045.75 li
73.6001 1045.75 74.7886 1044.31 74.7886 1042.49 cv
74.7886 1041 73.7803 1039.76 72.4839 1039.56 cv
cp
f
84.9404 1040.87 mo
84.9404 1042.55 83.9858 1043.7 82.1313 1043.7 cv
80.2769 1043.7 79.3047 1042.55 79.3047 1040.87 cv
79.3047 1033.74 li
76.7119 1033.74 li
76.7119 1040.94 li
76.7119 1043.91 78.4761 1045.97 82.1313 1045.97 cv
85.7866 1045.97 87.5513 1043.91 87.5513 1040.94 cv
87.5513 1033.74 li
84.9404 1033.74 li
84.9404 1040.87 li
cp
f
92.3906 1033.74 mo
89.8159 1033.74 li
89.8159 1045.75 li
97.4678 1045.75 li
97.4678 1043.5 li
92.3906 1043.5 li
92.3906 1033.74 li
cp
f
102.291 1041.47 mo
104.163 1036.3 li
106.036 1041.47 li
102.291 1041.47 li
cp
102.561 1033.74 mo
97.9331 1045.75 li
100.832 1045.75 li
101.588 1043.72 li
106.738 1043.72 li
107.494 1045.75 li
110.393 1045.75 li
105.766 1033.74 li
102.561 1033.74 li
cp
f
119.698 1041.29 mo
114.134 1033.74 li
111.506 1033.74 li
111.506 1045.75 li
114.063 1045.75 li
114.063 1037.92 li
119.788 1045.75 li
122.255 1045.75 li
122.255 1033.74 li
119.698 1033.74 li
119.698 1041.29 li
cp
f
130.461 1035.81 mo
131.686 1035.81 132.766 1036.59 133.27 1037.56 cv
135.466 1036.48 li
134.62 1034.97 133.09 1033.54 130.461 1033.54 cv
126.842 1033.54 124.051 1036.05 124.051 1039.76 cv
124.051 1043.45 126.842 1045.97 130.461 1045.97 cv
133.09 1045.97 134.62 1044.51 135.466 1043.02 cv
133.27 1041.95 li
132.766 1042.92 131.686 1043.7 130.461 1043.7 cv
128.264 1043.7 126.68 1042.02 126.68 1039.76 cv
126.68 1037.49 128.264 1035.81 130.461 1035.81 cv
cp
f
145.492 1035.99 mo
145.492 1033.74 li
136.993 1033.74 li
136.993 1045.75 li
145.492 1045.75 li
145.492 1043.5 li
139.55 1043.5 li
139.55 1040.76 li
145.366 1040.76 li
145.366 1038.51 li
139.55 1038.51 li
139.55 1035.99 li
145.492 1035.99 li
cp
f
80.4453 925.513 mo
73.9663 925.513 68.6953 930.784 68.6953 937.261 cv
68.6953 943.74 73.9663 949.011 80.4453 949.011 cv
86.9243 949.011 92.1953 943.74 92.1953 937.261 cv
92.1953 930.784 86.9243 925.513 80.4453 925.513 cv
cp
80.4453 953.511 mo
71.4849 953.511 64.1953 946.221 64.1953 937.261 cv
64.1953 928.302 71.4849 921.013 80.4453 921.013 cv
89.4058 921.013 96.6953 928.302 96.6953 937.261 cv
96.6953 946.221 89.4058 953.511 80.4453 953.511 cv
cp
.0952911 .0952911 .0952911 rgb
f
82.6934 944.765 mo
78.1934 944.765 li
78.1934 929.759 li
82.6934 929.759 li
82.6934 944.765 li
cp
f
87.9453 939.513 mo
72.9453 939.513 li
72.9453 935.013 li
87.9453 935.013 li
87.9453 939.513 li
cp
f
145.613 951.783 mo
127.209 951.783 li
121.692 951.783 116.505 949.633 112.603 945.731 cv
108.701 941.833 106.553 936.645 106.553 931.126 cv
106.553 912.72 li
111.053 912.72 li
111.053 931.126 li
111.053 935.443 112.733 939.5 115.784 942.548 cv
118.837 945.602 122.894 947.283 127.209 947.283 cv
145.613 947.283 li
145.613 951.783 li
cp
f
133.344 964.052 mo
80.4453 964.052 li
80.4453 959.552 li
133.344 959.552 li
136.02 959.552 138.536 958.51 140.427 956.618 cv
142.321 954.725 143.363 952.209 143.363 949.533 cv
147.863 949.533 li
147.863 953.412 146.353 957.058 143.609 959.8 cv
140.868 962.542 137.223 964.052 133.344 964.052 cv
cp
f
80.4453 964.054 mo
65.6724 964.054 53.6533 952.037 53.6533 937.265 cv
53.6533 930.103 56.4419 923.376 61.5054 918.323 cv
64.6841 921.508 li
60.4727 925.711 58.1533 931.307 58.1533 937.265 cv
58.1533 949.555 68.1533 959.554 80.4453 959.554 cv
80.4453 964.054 li
cp
f
147.863 949.533 mo
143.363 949.533 li
143.363 930.475 127.859 914.97 108.803 914.97 cv
108.803 910.47 li
130.341 910.47 147.863 927.994 147.863 949.533 cv
cp
f
54.6567 939.134 mo
17.7896 914.593 li
16.9639 914.043 16.5952 913.018 16.8823 912.069 cv
17.1694 911.12 18.0444 910.47 19.0361 910.47 cv
108.803 910.47 li
108.803 914.97 li
26.4766 914.97 li
57.1499 935.388 li
54.6567 939.134 li
cp
f
12.083 924.805 mo
8.85596 924.805 5.82178 923.547 3.53955 921.264 cv
1.25732 918.982 0 915.948 0 912.721 cv
-.000488281 909.494 1.25684 906.459 3.54004 904.176 cv
5.82178 901.894 8.85596 900.637 12.082 900.637 cv
12.0825 900.637 12.0825 900.637 12.0835 900.637 cv
15.3105 900.638 18.3447 901.895 20.6274 904.178 cv
17.4448 907.36 li
16.0122 905.927 14.1079 905.137 12.083 905.137 cv
12.0825 905.137 12.0825 905.137 12.082 905.137 cv
10.0576 905.137 8.15381 905.926 6.72168 907.358 cv
5.28906 908.792 4.5 910.696 4.5 912.721 cv
4.5 914.746 5.28906 916.65 6.72168 918.083 cv
8.1543 919.515 10.0581 920.305 12.083 920.305 cv
14.1079 920.305 16.0122 919.515 17.4448 918.083 cv
20.6274 921.264 li
18.3447 923.547 15.3105 924.805 12.083 924.805 cv
cp
f
133.344 974.052 mo
80.4453 974.052 li
80.4453 969.552 li
133.344 969.552 li
133.344 974.052 li
cp
f
89.4453 904.97 mo
71.4453 904.97 li
71.4453 900.47 li
89.4453 900.47 li
89.4453 904.97 li
cp
f
134.531 894.97 mo
26.3594 894.97 li
26.3594 890.47 li
134.531 890.47 li
134.531 894.97 li
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 16.0.0
%%For: (Max) ()
%%Title: (vector_423.eps)
%%CreationDate: 10/28/2015 4:19 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb"-6H]K8jE@(Ir!.BY%a+1P/C0/,!1Nb>dk\bQj^$nCNm'SL*`IR)I1=n>CJA\Xqm\dg>cABWBC/XV]*kO<ar6:?%Mls-_Ak'f#
%`5t7>PP]R]]`%cQgL&dOqgX*APNmVgPE^C-8Z>J^0t/8(i(s@5^V0I=l`Zp&Ge<@>n`Y)L`]hd\gpZ&pgYM:3mV)OXh5bJ.I/WcV
%cecE`p%n!X+5VG9meta%]m9DGbI9E[q=7V\S!Q)6cg*6uGk\C#pKtR\p!;4Oma'X#:N*slrUfOVQS1SYfVKuIT<[qDIVl4R"SeDU
%rn3onBqetIrp[blcd%Nfs5`?mG(76%8br205Q(HPYMO[*iVgq1Dr/2+T0L>hGCR?meA$8,eP#kX:1d:9T-)`>DdL*Uji_SVpn2EZ
%*(S\C++ATi;uGgJ^]"S'YM!["$RL6[s6*Z*9+[_f,lDj+p@1rR3T$'jWpBTLB.n4`X981`VDe<op'0cV$UF8-hB^t9hn8sZX"Re.
%Gg0RMRp@+c`=HsM]mCesC:1\.CfJVj,9s\_7i\)rqHr*lrn!e!r3t925C`XgqsNnNLL7^is/_8tE&@RU^\IU`?bCjf[r:/OYh,*g
%RsOUSq<mk+?eFnh$(ekUaf[`h('!tProW>>?bQGH_t)V"hr)3JoO_q0]>+4)bJ/;tldltbaY35:?bLpc2t-_NDtPJ6p"NABZ8X^[
%9<1#+mCr&f-?$dkENM7tWK3OUbu=Y]'lZ4(/2#E!2*\E%pt+ulr9DP]T4Ya^l0ks.p1NjOI"%#LRpAC2nUYSul2MY$qgI4'q!d88
%gN\gE5C<1Kdl?6&s7-u9o]+]P+5VF&%f%#Mmqm`m[DDm^]3kAPO"^F%S`6-Br)kHCm'#8KK/[^giZJ0XYOoHsg!@D-`d[_rn)&Qb
%eXsVTjguW6i(&!`^\c('2uhq2Wt4[U>8Md<o@O$;^[0.)DgoVbGk3l_?bWgef_9O4mE7FqrV580TfqT9f/NQ.[H1KepQt[LgU+Er
%C:`CaJY\?Fs5inin%LiRGY)5UrVYgH?G?I)gRS1S?bCd`o)0#IZ-N:aDuR_)o?psuEV;cnX\NY!k::mNCrBhT?/i=5E;J+o]%"n6
%s('jVp"Rg-?>%mAB/_L&[lNP'If8@m^AHp7f3bZoSgE^cDg?OK?GD!ef5Gf$n%\\pT5OYjh7G>#(SLs/=%=XQs.D:MDD&4)rmV,<
%QiDM1rp]K:0AcWlrQDDDl-68)Sc9A<?PiPJD84ULHH!AmW@M;)[4_/mMgnOSM*^e/q&<7]^L:=Gemj1!Y:i,QqBo2ps7lTTq_t_Y
%NOal5rT0NX[e/GSigVkK?6B.=m`VeAYhf6:T3csM0ogWB*I40aI:`l*Gld]^:O`2h0Q6C:Sr`ZQpFea\@r'CdDglg.`AdK[s7t8i
%k2U)Yjmp[pk<Jm\5Q(!UgMP]o?>P&En0R0Z\)Lb8R5s[0C%SNeJY-PG24:F?DuSh(qtHFUE:MEapnO;87-g=UC_sSB3,KU0J`ZI/
%hu*uX?iR:\s*_)RCYuld\h%1bDs3'CHhYMB2_Vo@q?-TRpgPVNd2DuY%tB["q]u&Lrh"8jVqS'%B=C\"B@pkfs-`?BF74V9k6Lms
%Yg4OXG/gHX<&XZ(q'>s3G^B<opqQf-s'),8s8DC.rd[6%r80uaJ(8s3npED!jLpLm=747!Gq;`Kg$P9n>$LB:e628*K7+g,;qkK]
%PL\7<DP#!eGO<+-[)_n4_]S674`#Zm\Bk+k^Y`DbO8Dl5]"(2Ap=At%qWrG)TtffP@iNNr8K$[eN'?C6)u&B$4H?>MfdeQ$mX+B.
%cS=nNrHuHY:;$8e]DbC:iKNr>1ZI<Xql]iRIeNH>VqLF^\&lseII?oVYg3^S4R-EhI+k0:&c36Fr6aBMUV4W:HcPL=`/cd#nRS7^
%qrl@YII?KDB:in1_2l:;(\UU22#C7"Ie\O3`BG,#aZd@gLF;s]g'9"QT6pIjfk9$ZhXEnqB=Erp*;]?%n7/6_LHg#Sp9BC`J%C,e
%qrUcNIA6YeDXHE^rr2>7hN.P_^YcNtH=(J6Vu,lLl0cr:qr-uBmd=uLNOsYKhmL(B=)>7A]59`+HTUpt&([`/3k&<@[ooiNo1X3E
%:Gr>^fPTL"J='j!d+E2k<#[7=#0bYjqP1`[LOO.DC"e+&2QU_nfDmE[bYm>Ah=l)k4F;`<dcBS/II>_M@=;I`cf7Nf-[[a[il19%
%7XMHrTD-j,XEPb&2U"'qDH*)Ok/>aslgK1i6)3j+S'3aiWB=>`5M0512WlbE$g'?ZrpN%fJ*S2iO'?t%)qGH[s*U>42L(GY8[6!D
%ejnQmC0I7c>Mm,u5('YESZPtop$Q_24KQ$\XOePqpE/jrClBVY&]I4/Mq@K8#3Fb;q+^JNj1@KtiU?R2Rce8,ju%eYN1.SO].mZd
%b=aTBQhJqXLhF?[AAg=12h\Gqd66m!@=2,uhc]!o7e]&pajJp(\nu9<aMp'NkGU9rCnnSoLe]k&?eB%`*6HaNn7HG,KrND1IJhKI
%"CCQ+4%bS6Ud'q>TtYiIY'IVAa6*?LjN!k`ae%a2[uX7@-^t052WUL7XC2IhRsq^nC8\liBYB0k)c;YSjrWpG4cW%%iK*[B*nS35
%WJs^8.Y;eRn+\\d4h7oNpRkO*5#5Ed['nVooCZ\ICQC?mee2>&2H'oaCT;N?esa_2k/"XuE=M6kroZ3Lk"dTeVrd(:kLjm*)?)JH
%EjFFgW$Rj\fb++kh=csi(co@U/_e%Ki1%hUHdPNY3DD3ua`.+4cQU1XRB<mW@!fe6O8'(t$dR+?X#!q>rRN=C3*lK,Bs$]=dju!c
%gt$<Plc,VQqY:PUR.=*jg$O.8M-@6`:8b`!rQiH0_D/KDNT)><bad[R[;C!K1$3=/leuZkI]$6(d9uq-[r5W&q>0]P?b+5dDO@T!
%&t_;o%.Qj>Iu2m_LA'YZM$<I494+E=>A;[^A]gGBqpAA7Vn]E"*T,?B4/PQ+Q$\_.,h6ks8n"Xj<+n4-[$MhI,>Hl]40>5D>A0c@
%oO98QZV$BY3n2TOQs;N=o6=/.&#"\1ZdF`cfm!-uS\6MuHAfV'1Hc8-jn("Rl+=Cr).7VSh'4<gSrN]qcc;Z]o5._0^8%cYEfeh4
%``VlG<b'h5h/2C<g<_L%lPP#B=f-1PUX36_NC+e?FJ,5he.ar-EbZqlRMU']2KN]qf'IKpm`[M70LK$(N@F"N>alPsdEMSXa/5<F
%lt5h1\Tq<FN?"JJ/l).0#tpGpe?pF\hmOY93T>XDjX:n?=H[,j_Qrf!gDT><'.l2sE3S=/XcQ"VDPpbqB[KOXFa(2rmV0GKTRDUA
%'<F=^I(1l;KKh2P@qh,)[')[*>C?^Z-[Zs-h"/7l\*7u+hP^"eo,c-4LIX#S?2N#]A,\'.#q,E0bMg,@=7l`e<VG\)X)M4demct*
%DnU@]qg.mP^DIt5RiKCof_X7EN2)`icUUc\Wiu<bn&^U]5)0NE5.BC0?N4nkFmjbO\7XB=Na67bp!keCc96<upRgXup!Y:7WZq61
%EDK"fAacO4:SFD@Sl.dA:]4LG'tk?g1$3!<f@)*@6o-\\.kr]tV8jW14dK-P*W<En^Kl3R"_Xk3mG"(mhtbUueh_ctS39A8g)>#K
%%:NoI=@54&m5Es/04:kI-YT#YPT<%>BleX-jjA32`meC@l@k3FKr0%Zc9%&Z-\Mf*[3rjh:GtCoNJhZpp:q4R_G>TI08Ru=oe=9Y
%bN4#FPB0OOB$c!?Zl3=*CpXiS/IU[Z@AEbi#G8G&(nnKMCo0!8o;uLSk*:CRBT'o7m_2E&`SSMAMRT+N/bE'ckc^F\C[W/bOfG(q
%DYM5fa:!_lmMHr.ejI[a,frD!0<>EIXWJ-'koM<'#aWu"iK=ucR+riq@_LY:2Q<O#hcJ_0eb=Lb8*[.5]<g60i&p?0d#QjD,=H-.
%Zr)!m(!$?HE-Zo!f'[(@^a%/gS59+SpN:*%-_6\!@p\,^1R%eIBBHZbeM#3C[5g%8E3#=nogqO:G;:WXa8EK+^4(!54C%Kjrm(N;
%24@NU"C)uA5JRt_EH^beMLXdqIYh<9A!TX'nnplIT*GYeD[I%0Eqsg7?8=pa#c;'u&]G_[,kFq8K\pKSgB>VVJJja,p?\B!pXmm\
%gsY!,VkXaZZ/P.5O7lApU](!N6N#SM7C1ZECmH?YoFnN42M3]I9MaBT_X+9BBdo!?odu2:MaumCX;-[h[+j9:Z<d"*]00r#f+fC@
%p&2@9mI@/jK6F^V2Ug'brSE:F$QBdU2G@r<g@/fq9&MhIdC+W#_T'jCWr4#TIF7B8b\^Du\<k29dduT-oeC6V_LDK:,/^l7ftqfe
%XT%'(q[Ha/16t0'lecp)N_b\fnN;clJJTUE,P7_gb7T2#!9OR'goV.3_[=6D@sUau(k"(@=,-^2c;.o@5;TLXo7LQZ4]#@omgF3P
%a=&iS:#J=V+"[-,hfi<&n[Yut<urI/pES2B<GM\X@-c&F>BbTl!*5cq>[]!26oSqZ!Zu:8HEbrcc;q32BC=fKKf4kU]\Vb5ceWh$
%::)Ae=cYDH?MJl(e=)P9K--rBG.u_nWOCgN2Y@+[[S=jk]%\kJ[(nI:`pNk>7nK]P,;P-eaOi_Z2SXYZl/t36-Rcs]dO9Qd)C$&g
%AZ)F(<4)?\2Z.tnqu#MgT>,Hop038f^LMNY>6YnY@j(,BL;ElTG;a*JV8)RArLj2>B>(0*m$2`&aFmX;nX>WO-;sBADf's_LJMJI
%I_QQpDt+>:m[r?`Gl:uK<Issdq>Pegj$-dp_`e4Yh/hO3LVFJYdKjjG$$5?a\dZG]icDRmr*sAenBVLB\G:XCY/U-LPlE^WP](9T
%S]BI?BuKhf/<GX"T,6,*pZ\.H39cm.IC;!s4rtm71es(9EZ-Yj-B<(e*BSI"C;*IOrC9EefpJ0c:*/frZ]0LkqX`S+oolB:@OeY;
%0Y5:sn?>&dF0YFoDCXhp(5[g%(Zq3*09Wk[JF']\h%\KuQ#LYredF:DSfTgH^PZ:mn&+5dEPgd)idY%5q4i`^_;Z9Wq)A,ohiEW_
%a2I^^iqkJ#>K=\$?12XRl+ihKLFimG\>A#dLS&V5^LP/GMECeXX6NegYKC\s#au"uhr"@TCO#:FpSN+5N]#=^hsL[,[+=Sh[X+.d
%]X<;iFK9W^kO8Ecs*g^r_$fc,^Xi/ZDEn.SPQ%VRmH-'?ro&?E2kU,3XaZ94i_jdURkGr`k^#1;E=oAnqht&+4tXI>!qh5=rTW/8
%%kleP695(hpV4H<.F3G6Vt]Z:I/t5jIk@:lDXt.2Q`pDA?672q55R?Ud/OJWr*T574o'U(7V@"?a8Tk&gMY9L0OkJ>gPS"E=T>Tk
%XJ3A_`lRpd<J^\D?a<gK\!p*iRpL$29e:cAOIE4he*UM3;E#0>Pfs\Hi_dK=V')+o=):sYD&U)RRR[Ts`9*s>[l)EE!dd9d:LM:1
%:[l/3Hb-V9gi#Zn[23&h`)4rpkF$Me^"DHCD9m(6)<H%BA,,.ZC9Kd!3YD3G6,S,?+=B70Jl2'OP^T-mD3ULHP]V'KgJ-$eQXH%A
%,q/S6\sBqQ?E5*tqCROm!0"D!hMZN-]o/<G,nGL6[boA2&qlHeT\766EARK/0#4";4+[E9^,<kEcZU)U4fMkh;j,.,0hL3q+c0pl
%UM7W6:!2&i6/PSkENOCURa,aW2qm@tla2?AK%Y+icKCPs<"eOje!p-7^#J<op1j'7]$<-m]`Tscm%&p.Xk4p<"P2,"i%FcYDD"Ab
%ghfTM6;-(C28tQk;K(%Nehh6QWRs;L^t;02.;?nMpf37h4U/jkYW_eT1(!jeQf&hiAIQWX69HNb>:htar!mM)dd;eE/$E]9-:tXk
%m7m1h2]nUMPeFiR"bQ1`:MS@40*;[4N.rI=fs5LuDDjar&Dae-=2#;OC^)2L&$Vnb;,`DpRh9g^lJXLQSU*-i4aLbI)2l*IGi/;4
%hBTX:(PR*5M0gj:%rD*bWB#@s:pR9o2/t:=+4th*Xl`W]Dg3dof\EC#Q'nB*\BPt)'09H$Yc$hliRmAK"ptt^@@3*6q"IY[GXuUQ
%D'?6JeN'gF]sZt.6SL4Ro7g'u`h#o7])/Trb#rW1D>)8mEjl'+m:AW;;1LB7!jaQNWElc9RhX(14F=>i2kcE>^Mc%*otAB::"+4'
%<0g,#L9^J5X]q^ZS_^D"r-18LNaX<r0;8i\FYVbdXp,VQL;e#G1p`c)F#-,9V$cqfqkOpk-mn$eJRHB09jj.em;.V7(S64AQ"\eA
%dNGrAJa_DibO]-&;h3JYb:TQQ;mfrfWN"'A8/u->f']hIhk=9A/_^UfE8+1orc"_A0m65:Rb?0BMFZ?6p+[^UZ',(4nWHgU%8qP2
%OE/W4:s_S<51i"u$D8a9I:)H]KIMsRC%5dSOq:-i@CjX"2bs9#qLIm&LX*/[65T+8qTK_BgnD?^'>%DV&5\/Zj!A!7GE#E<i235B
%KlsJ!)r?a[<4hh6klOWIFZiJ`PF>r/3XcCb$+Q#dNc60JcHWe(H*WD?e$LO`TJAP3W5%G>l[$'W>,kOanc/bgRPk1$^?oVn'*$Ut
%<ID7XXd;@)fj)b2o58ITMh?uo/:qL/ll@RtI_i(RF`UGmOP76]L#rc`G?u;A%6E273XmGM^h5X6IIB)6+WW@Q<NrNt)('u:#og<"
%R&IT!3gZnErG-#KS\8qs'l88c*E2cQ)<r5gd8k!r'_J`"iY[tn'IB1g!sX9uDsPccG.ES"[KWn)Re*quqr"_J!\9ThLq,Fh'WK5i
%UNG49K_LNFlZRhNMu'kuP=M=FO58H^-r$pS7E#j8A':C0_oDnE)?j6+E:sL--3t5rWgPO6erIpjdhIqH2J*:2Spm&6KLsNLh=ec?
%lnN[ipAEmbDT6*o;KSs"8Ch+bU1#3uNJAruVVmJgq:.5(nIQ^e@.5SIES^<,7i!A>rDKNWMe+,DR`DmVdG2_uWD0>uBrbG91T$%X
%`P;>bm>7t1b_Nk4^C4$*$OY,VJO&oC"IrpmqV'\ldMl;HL9Hn)eegN2rL:.[!&m(fGSP+Hf%i=0?7oSlDUQP(R>kkaj%ZfA:U-^8
%&n*A[\eto.RR\5G;(ArMpd<%'V0L`AjTm\W(ag8Eo]`uIpmnP8>'aUAA)5=:5ae9Q11o>7OF<@/kBUiW0pg/#isJcT#Yi#L9hZKE
%NHZE#LO*p-[,tGsRgM56_[a(]>9DZ8HWloO[#D#qo6;W@ba-p_FM(2S"uF@(4-#)hE15L.h<^u4SS>s9h:ui#5h`j(dF0fN[49q)
%QV,e3l&TJdALfQ9b(^sh@%+71Z%$'DA8)WLE0t[$dc&,tWJ"sr!Dl`B(_\]JLS[,CVTsV#,EUpQD'&Q6A1`BE1n)eb`b*U1gL7:0
%NA8mR;EOSS`Q#Csd12_e#nEHOmX)uVGmH3uDnERSA<*'P<?'t;8#bQ!FKB3&C/`4O^M%7q+'pSuM'=h+b`@<A.2d3&%+bnA@s`<)
%O[0"Va4&`9$o0sO)J4R-&f9(m0$e:@fk]R;e4R?8!4pga_??&=mBGUB9onIP/nleSU"I1i-UX\tG;A(ig@4-<_Mk!rWAtn)D-!d4
%:f#ZdmrE76&T%l^AtpOQ\sgl^Y(Gsn1F+H90rh&n4.9ZUSS^s:!NHTl)s\]n)!D:-r3c@sR':bdi3h;mbE.:^B2aN7],C`SD%LZ"
%-Koo*M'f/TnlEAZM.KS-0a,+&;8+'Pi]'f-'#4kKG&F3\ht)"ib.M(r%VXT*0@S2K>n&rnQY@f0DTX!gS<`<NmuGrT4_D$\jSr^1
%5I@:ZGr\DU61`G1#/S(nPn=SkcW5AudH,QFKZiYZ9L6r@"?;IE3#%>E2GL/Kh-hGD2+8VUE$0"Re)E@j2ELQ>!\`eW2ptIIM$d<#
%HF.L+[ctC7BK*-G613l'1uJpUS"M(7=@a%YTGq7$:0um#@S)H>=V9ucTcK:6,r#$db4Q_!,sWVM^GED&4g:10V4^b7A.En>-8"2l
%d9hG)joU>5kgUDrIB-Z<HGa\@p`8<^F:)hm$L07Un5*RCaUg@OTPWsE1FHqG28HmUL5[f"&X,LHs$QE=-[gQ^Xq?uEMo*W9$"PiN
%&I*u1f&\USZ7-=&EhMD7@)rWUR]l2qk,->\YueOH)Apn]hLbg(Y9k[(.^I*4/6sW.O4T.)e(/6_r4()$@>Hb$_.84tloo8?*hE@X
%>ol6ARk?.7A8e4eZ;G%?g=g$9o#=pm@4B#[QVcejT!ifSO)SMA<m2O>F(RRr9lmaVC(63JU0b+n^#J^Z)%>d=.r^tJ1KnBI^+dQG
%?+dNai=ZQFN31<+7]:!g$+WTNUtToDp'PEO6<t1,BX@lM6`Yks_kTVU!p^QW>k5&X42Th-_j2%b0I[6k8aB,543=!>odQ+R"R(^q
%kA3$)nqcN:bGutL?P@*Q`psE'1'imP<aj;ti$+dEfl3jp88oa-Wo%N9B).O(Fk*S#Hg,B$M?XTp+sogt1F$)1^+]3d^=[E:>RF\p
%DNT==lapkJ.S+L=_PXO>>d;*KIJR&mDKm8#H+)gsEMZVkm(S\uofk,rda$cKDD8pbg+*rp9PjhGbEq>i(8PsT@$\_/cdbB::]l?I
%C%F;N*iJcV`&lN\l2eON8Bc=?U_au/O8sPPaVKpJEJB*kBprO3CAUh+%L'!\CRX`2$ut"%g>OGl$t[A=YV:+>b;RgrpJ=(U#<ch<
%`H\'Q.htT_bdC[i3Qn9[C;TJZNT"-R-o;@63'E!*&P-rB/g2`O3N[[f6$cI:-7MF^SJ"[P4=Wf$-1I,*B^VdVdVlr?$*B9KAG5PB
%'@(/b;IE@1!fjhZ2k=au>7kZa=m'8R5Y%S8L@Tt*BeGe_\J9"U6Juor%F&]^)mq_EK5m+1I8qsaJ&GGFb_\mpZmj@?*hm@*b^,K"
%)U8M=1irVkKBRNkH-d=9-r`_OYJl.0,btRP<Kb#oeWL[l`!q_acUAY\i.YPn_DMo-Tu7.Yghq8$^LX/uO9+Wa\0/#I0hnn)iGB)B
%f.5RPH%j4l0h?u>&62CuK*S)->%VJMb2lV+gnZ/<hKL$lB]:^.fX`?@=2Y=u#?T)02Mi;Lj+/)a01H)NY.8V52[SZdMG'q<9j::j
%-/j"d^N'P@jGOTs"]+(8ZgLc0%Q?7W0,2o)#SJ9L4ZJa>EWptPYc[6l@]7hR0Lm6^U`>L`0%;[+m)c)Rp3F#eKAFI&M5M:r>jE!l
%V1_p*;*WZYL7A[(JBWr0JJhh]].tc3'r%ptKio@[F(dhO!@U]iK+'976TIFW\r8Th"1n19(frenG@n'XRLpuBe@ZGYAFf3,7cta"
%0>*1PjQm/6S)0g0``X-hL>%0,0L8#HA@fYI@CI[&4.FHO%"#]<`Il9b#u(Yir<'r':RADR3]mg\:)MUTQm^l<)rAc8-"(>qH0^&&
%TeK"N=!H^<CcY@9g*f3WecZHJltX!Sc@Jq5>Y1LmesHcd?4-pq\l4\co4kYNFrB6[4<R/;oSao7':hk0nQ@&BK4t]@F)E&^c'tTj
%fVITu?L4]JB:mNL-J-P=:e:?k"=Lr/E<ZGb2%X/1Y%D]3MdD*_2Mt:PABZaIE.n%U&=e@0VJM!T=NHZRc%ceJbmf`F5[e`ER77+f
%pRMa]>Rgd43/3i9Xt,0/Rb"O:CTS9W7(<GsYi^#Zfso)EY>"BCpUQetd/\a)m?NG]U1o4%.0Ro,fn4RP`X!ML"Y`]2;$b@&K<*?H
%aRINKd:SM@XCd9C<-@SY:C%!OQjFTfV4\trZ^$Z5<ckKV<VhiUJb<CPRW5tY_GcSNnojf9%9OQ.).ineOo[[W%LOd/jq]Z!HGmtM
%EO-Hl_g:anNb(2(m%iU+;R96</CmdDfe8,"G,&5S%I"_h&I+G09N'gL%d^0FqU#`#&Lgtf+uoHjb/&'@Jn/LbP%h)Zq3#Ca9anZi
%*scg'WhKrhKYqM]<Z/-_hSJnqLj^efrj8D86b+sl?u!Lni%AAsOYpEbcOl,O]jYq*5,Q;8;gadl8G2,V7N04h2Og(R@%N<k%-T[b
%+^C;K:IpMH+p>d;UJ$Ba?JV8.NNOE:iQ!qmY]S'lGsZk!Ig6G!%d?/4mEP'm9pkrjl"ah\'b.J5K0TVFfjlQl<@*^tmQMI>cl!37
%`,3j.b=YoK7ST9tca#uQbes:/Up%$7E!/_"PG9E!D(oi#OW/91&>7BcGfhq9jWVDn^bE$5]kq'.`.EMBF2Q9ES.#%NE6#]bH'/nt
%@%PksdO[[jB_Q[TY]_+2X5*sn"k)JT%%t?t]c>PHF(G0ia$DdJ)2S#p2*tW2"0,Ci@E\]qlN2E^?b'>Nn5`UM=]&SU['DVMPsZ[`
%@:YI)QfG;Vog8A3/fjM!%/_t._,jSM;KGAOjk)pEap&:WF;SLYb!8=7[-gF/Xr)$I+JB)YNq9$5dt?5e=V'FW7l%pi%T"H,Sr?[O
%.Ls`0epo,Z]"u.n0iV]!`'G%TM,E<DmDjE1K^33&/-uNFVD$B[F3p?VG(?h;s6d(paCmSob)-a7h_;=C";R'\H+\D/Z0"EcfOJ`M
%SVQP7dd`j)FWMu4#k>VPCS%l12FPino3Dd<j#YLp*(]&,:QHD'LB:n\_Q\WB!uun;L-9A#(^TP'%5tlpOdb:-7/(fA64aXrS;;b&
%J4iW&W>](a"h;f#'-hYTT%P.bnmL#=SgH7,K65IS1',;?VLTN*:YhWVJn8gcb1(?QGG\0toXJ!Lh<%,L"jOL+"%X_UQ&2/>JXFGY
%%ptMthQ\M,"7lk`q]Wsh`MbIhCtIc,Kq7-jENqhW^t'L>Pm+sr0N#oFQHbN"1-sdmE1<S/&Bn'/Y3UnF1NELA!l+dqWp)%n69+?]
%?b"#GQjCJV7YU4(^alNZ2=]5&a5Q$\`#k((=N["m@Z\^&/6G/Z>Aug:gM/)5=MZTGP`7A-=3Ia72bbPZbQ1F:\L*:/V5bu`C1]qk
%S3@3d\Q03aH9P3d]'%]:"=!Dpn;ZrtbV<si3nOM+ZcOk<\!i2R1%FN:o9b*=P/&q@Q)D,%1Z+)hgAiE&#o;/bn>H[o=?X#$6T@LM
%+MZ\%?nYB.WTf6J0#9%a5(W1?4"g(MV^)'GJfe*T@1m'5.!-5jMF/Z$FhVsV#eA5m3C>mT=:,)W3dnPT+e0$WV#*Ofgd=Q><+rg_
%*U9]KVURNJHZTjI`,7aa%eGp-'ljSb9%]r_WF6!)&N>(`Y_)C<,^GNa'!1Ga29!E`3*TKB.DVHZb5_^"99bFsZ.`amW"FnaBVL$=
%R'T^71?+ei[2!5r><AEoFJ`H2f>^4X3f72Jglosu,,gKJ2+`(88?k9D+A^71/`NVb=lP7MlrCt\iP/r`+!*ldM*MGW<S>c^aIT(^
%^"k"k[;=:H3HAA:hJn@!AGA8<S*3*8/cWQ#Dh6U.jNcC9Rg['mia`0_o&j<u3F6o?i.\e^+nYnDAhXdn+nCPq+21uXAj(@Y;_^V+
%GaP5OM#5$"%Dd'#WS`9c6n")Ob0t.+YZEPA.Mp?cfYH>n103UC/SDJ&of6hu7RQJf(2Hf#E#%=9\ECi;[<70NX5^#L&tQ*2rg8d%
%)kJ'@!XP02Ll=M$itPlHKFMQAHn6GoKTufT@$p)tD8Asu;[C0oQkQjO?s)?a3$a46i(AUKT`E]W4d>&2MKOX1&`X,-6]obj6^htT
%S;q1a/S,If5X>&J!a+q+5a*>3#rh`]"="&m8:FUXk7G`d7Bn%Y'0S(>P%ikj&8nhH)&@q($%OE6b$D:MXXQ.5jN8'S"m1buFE)pS
%?5qAsK#*luRlh6+D!EI6e7lBBK[!Z;^m?PT*l-^lVNgc$N.<lXFs[aSiXJfOi+ed:S"f.rQ]k6V]MUio*3R-Fm;CmUiR.JImBMm@
%+jhflrkJREl]eP@DXJ>cGf>$$l;'!U'@5FdREV3&a,2%0G6'.$eP.6SasiDWWTcW>2Zf@sSD5Xd6^&D)JP!`;U6+5Hf1O?RJBXcb
%_SYb@[h+'I3Z#KpeSI#HMnR;94)gTD=7j74ciFfb&iN,UrNP"lXXQ8rLJF>M,f`8rNuVVHDXE)moQ0C&jED,-@\.Y_lY[S,s,U_\
%6&M!0OOtm=LIpRd=pG*ulR>s#Yhj(a,%Jh6pcsqf('i<2!^E0tJ;kQ,&9,MNf`:T[$A"Dg9Q-EO!p&.!p.$lu8T[5aTI4hA87@\^
%B?,r9Ed!7^&_1%7%Po13^uekGLe`Jbk&,hAf*2%^7LfKeh1U2/6ah,gYZ_XENDMQ93J\_1WW=3ii=_[Mrcge5+?2@Q-3>"9YX3!C
%-,J[JK)Gg%b6f6Wammmm9F1jD!E]PP&;%0A(]fVA5g"=T+tsUBgJ^3!/Y;b<D=1:&k&58aa\Mnq,Q^0CCM@[h`u`*gi:U8rq[1tR
%6m7\YA>XEdo$;l(DTaVdZkEYG!6X_F(')XeVI7X>4QDt(`be%fmYV#&3us!.p4T(HQG)ViRdUApK>&A*ffirs0oec%B.1^FVICQ`
%CO.17pD>7,1IEc[kou`nCb_ZW<U^W&@SJlfg4ee'Xm,[Y65Vfr0E;U!MD9%bL>)9QOJ/]!"8b%gj7QXdF>]GY9?f4\$%*Z_"-HYM
%!%XRSU9B[Da5aeSghE3X5ZN]i&^6l_Imb!0Wsf27S#9LO9LK>^LpCsi;A\1MHUS:Q!:06Wa@=N,hAnWYF'o)h"p13OKul&s?gpDg
%l!6Wu(!6Xf94Hg%geL/cM-!A\SSM:i%^'+M!84%XX&=D*%.BZ0],l.Qf/Sm1c$]*CYfQAE\mBD=_[^A;+nG^`:LCW=23.lfA0r?0
%]2+]\rTGU/(FSPF+5d"\00[$uoCc6E5J"VEHhHZn07Wuh"#p.+?=W-%?()Ep@3dM,pbKe)-pT=fX33;qKFjNqEE!@m/nbiLE("Y1
%$p?u"maiS=QBKKcI[FJ(;NSg1+OS3e5-N*K.Qko=+[ink+`W]U(Dc-mDK=qca0j+XngrFrWiq1k-C5B7;tNoEGVNKB;jZGX#!5g1
%#]N=@%U3r^'OK`FHVHI0#a.i6%=crLe$9<8EB]Vkgo!X[85aR;,h,o=h,Ejpd(%!le#5PrPR&E3%_t4!bHcr7"sJgkrusJM#Pkml
%IE=GPC3Gp/$n5K=fnDM@J?a,#P'8Kd3bScII'mH:IWhRb-t(Gm4WiUI'Qefe>3o#iB@'uCn.](RT[?_-O4Z?i(UPf\Z3+F=GsNbg
%]I\NbgsX1TLq-:^:4VW4'oo!$M499"A)%Fs!9p?E^*sSF"4kUbT,0"IF!uB:NY*QL]K1.);AP6Bh8=8an`gZu@EpfE'o*1tShX]B
%QF.kq2n?f+*M'=k)%F/G%#m&eR=X%C`n@hB8A-u`HJ_t1(/Ms/0Qnbk+,-X`Re4d)UFsU(a*Ln*YoCpi"R1.P/GHb0j5+VD(Z*qk
%#m=H;N"H7FXDb`t"<Cp)q83Z\?b&3nks7bVVZQk.qHOAYVcpZprTc-g\6'itQr#7M7LMZm.N"JVPM,tJ@j%A(>[jU*JYX`]h,Y6O
%@ThN5\E3si,:4d33_m!KBlUZ;E-+S$5[<\i+<hfNoaq6b^nYZk@lm^qm;a7KnradH86U%SS+:RqjoE,1!h<rmN19';,3;=&[QWAO
%PbMY++3jj15T.C6'L0B>.*FcW`@k9rI>1!E?rb@(!Z9uP,7aWIorKkf*hnpEfVF%Ga>6c^<.u^4?)+PY%;"Bi@h0eB%dT`Y,QDZ4
%,HZ91j?a@si_eq>p*AZX'1a`hpJF?]*#Hl.F]`?M]6+>^++brFh:oJ^1l]i*S:mH)fE'3K(mddBbdoR95^EOqOW5[UWtbF8js"To
%i+t[AcllY_#l24Zo1lV1ks)[?-=G>`3BYqnF<'JC*W7[^NQ5urTLZ:7"jeOY[R5CM^;INOIQ(l+K#Cm3!ar@-"".UA&(0.=Z>^Mj
%gP.utCE97QS330C9c<]u5+mGrfZ;A0.83*="QMSg@9-08?L"ICch+#tXCiRhhmj4sfl@c<'i="$X@K&KJVm?a5NE!9+>Fg##W3ai
%=gS3V\fDA4a&$3h-gh4_*0!pE9*MjaBK.Wc#_^*cE;_Y^aIC([3&#!fMPE]IDmsuI/[FBr0Tm!:@V$4k)OXHGP-jnM,_QdS:VIf3
%Sro;I0Z4)_*#^Amn2ZEYl;2MQqC.!.%?GJE(EsdObIiYq_t.rc?eCMS?mnO+&//!Tlrs?i]SN#,aTYIq=CWj1=[N5]#g#G_Ce6;n
%_W'ZBR<X[R?o&3RoY@9E=?W#S809Qol!2D$!$fAd1aff;<[nWUaHJ`A*9[Y]lrZo_5l6AinZdVZ,=W58`a&U!'s5++#d4QimtY`i
%U.E34f!>L>`#P\\:)EA*\;MMtPi^Lnr5_5)_`It%)IW*"-V@COQ]aTi0StXC!)/hY-b%:gGgn_:J\E,CW';MC"+?P"`'`;ebB%ip
%#?h3Rr0.fKT#ff*K!QR:LCmj[;ikD&G8!813SH2KG-l>".S_Vt1I[)PaNLiC5q7\h:So,0O&7#aQu'j$am&&?R`B?YEqm_'+Hec>
%!Jig[FB\5,OtObk_22CM(d2=s-,Mp$ZX"lCbZ5O+<NDdg74Kk1+[G8qZX?qhGC4$?%4faa?Oi4g`oTQe*j@5W],\[m?j?(n,4NOX
%$ihUt[(hLr+A)l9fi'jC"9nI!6UBYp71t-1?m[f^U!/Z#"p?`7*ik]a/AYQ<=JV@=K\Km*j0COV#*X2h.,Cqaq`nSA]JkB<8Z6"Y
%._stmAm4u&07Xli)jA1mYE2>C^'h5M4ii=or9@/PLM.ZZ8jD!j*^uY'.QYQ_8gnsj\H:0&/Z&oU8WiFPjGoLoNm<Z*I/n.#L-2_Q
%+!J#tXeA4H+BLMl.)9+4B@,,,S]6.@db47!;WoLJ`W4*:2<KtH)LJjsR7C;j.!_d-Sj]WH6FIr7X;^mp].!_=%8RKCULNMX3*:2b
%8+OYHS1pb_eH7I%0KcYr7Nr1i'$ch9#Y7h/Og?O9-tj%R3*ICOU9gOeMT>:fN,(iXp%$#kS6h'*]Mc^kog<hm6?pBkB=)4eH"T6s
%.<g"l-(eFSVYIF95Y@+qOT:)<S?<26=5tSW&91)XJab0mAX0;#^-pV_4$?%^Enn=rP(LM]QPXpH.Mpp4l9gs^V5^DkX)>qA+J;"[
%(9Vs\30Y+,d,AQW&R8DtX"R>;^Uq`mgo]TK88&"kfk3OW_h)'hf448UX9&ER(+<ca[(1Eblj0?'Sgr2DGg/sEiYb8;a^^?uIUbLk
%43nS.<!,]k31P9=MuEa(7&I57h5\fl?2e1M*m(Cn0IpuGeI;Pb7*UWt=#5,s,DqP*1,h&OjS0J5ATMl$Dq.jhdMrG8=sRQA!Y&;'
%^S3]1MK`?,\Redc%?JB3`TSo'C%5kTlfU5lOudPrE)Y8.`F0#`YcnK:,^1A5JMg!!NfnZkg]h]q\/^c:lU!bKMH,hRAfXL`U.RfU
%Clj^3+A"[pEFoP8K?`P$H!J*^niDQ3!g8Se-m!tDmC:e<r?)8G)Gm:Uph=0$%c:'KlQT1S&U7jA="#rF*<FpWGTMI'\qO&sk6ILW
%"Y?kp[<S%:m+mLE#M<`ZASC-J@ZHC"9B`VlE7AOHPX3+TSRg0MFpp4#0!T_.#k%sEIFWPY!fC%Z\q-&%*oWC*)Jos_b"fs@<Ep:g
%\7NC:EJA$q6e.W)hlJ-(Nptk\cTa'I!4iGViYa-M(i)aXl;5i-??e*n<%N$SCJ51VA=_uKClW\]*Y;IM2jEj_mF$HY]c["fQE"##
%9FQ?Yhf]HMPV85r">=W=3H;A?jsm\bM?\AK9[>=$:HPH5X&WeUqVYVIB8[*?e=jM0']L.YlSSk4Tn"S#9uGM?a9GUTd=d7IU1Pm"
%[%<cRIfuqT8ik''7kE>]oPCI7:lXHn'&7-5"ZP)r&DAHX#@@Nj4UFH.7"6H"#jZf??M:gSV'cSXqM>E81C-l+a'^;5B5\r$7^&B<
%,Fk<2+qicAhLdNcBaM`3B]:4CM4>%?%i.'Xaj+1.F*qYs-Sr-o*d(Ef_ubB*!mgd]/*F"OB(soO>$@^+)2pgh7uMV-,(tH-'9<M2
%Nl%GYljl*r!<4e87T*W.[Gn2J]F^9P7u$m<0FFIeE1R6;5R%b%96X`!9a?W#:GJd+1$jAJU?R;rcT2F#Oes=k&7[a(UL'D"'Mo0t
%GhcT*/19_af,VkYg'L+(G2CTY>DLHt1$BJTq^'li+L<@7].[.i]OCl$.!Q]V4>QIf7>tT;8'#s;-ii7LA.b>.O:dJag9F(W7`.Mn
%M,U/=0U4f\H9E>ODqB].JJ:X=<kZ<^!8`:&(B?378keWOE='3(Ec;1,cZC!JBG'KuYpO6AP'K<4.)f^b?Vt$%\TZd6(;A6b1r4Xb
%f'0"4h6Uc[AE"KsSHU:f9Ajc\K;?X!(?Cl#/-M4W4WhVs\1UOK^'r"4>TlS6^]qjgHA*>[5T%RI1D$,4'm+*HeZY@9rJ%NQC^7A$
%?p,P=!a:Q#$d)O4^1p3DOL(/][t>@!0Jfb--4'6ETSF8dTLi()AX34M'ptL)I(p#73;gT7cjADKQ?+n#3J.HC3)p-f"F<;k]le,S
%3eg"V'(uHB;8T/fQ&?\+R7A=Da(o.A0.LP-.ee%RY&(N?I3`c_T%l3/"G(+e0ct-S"TF5!j!cI!kBt2u7@gF%*R)-K_&F"g']#=A
%FWdtJe74G#%YpoC!Q.c>6jPm7SDa%4-f/?9>t)b]*+dYJ_"]l]X6"mtbAC!=,'0`1_'G(%&4'T1F`dr&CQU#W0.N%Ol!-%WZHVMA
%!TUI(r-=+57L^3XN%ec7;NX6)3jcGM6[Bp=q&hInE+:#>g;aMKjMgT<Ih,mY>a\Sp>uD;4-SWPDgX28a[rBLJ4Ad\ne(!juW]Yen
%g>RuOZicG"eQ2-;]n!t$Y1<`$WF5F)/<BuLJ/Wt4-c]#ZW5)u#:Go2#CB7g6N[.qmTgEcjBI.K_f9*&+3"H?^C>KRHLFo(R5:Ulq
%"OMQD2d]jXcX4+?cn;s$+B%cmGFOULH>YW(r4rgu+dE"'BD[Z9qZMQAT7?gm?bUpZp9TNu?iBi-GJ>DunXmLEpWZcgdSDgtq<P4j
%^\mTto?ZbIc`]NNIe;Zi^]-CnpbD1+n&T_NS2;.8hRSt'r@qo&6HIFQo?a!f\;h0-!n.57Z-M.F"W#G:(\Mc@IV*4VL.r'2b*i#A
%IebC%nK,TU[4<oaA,'HUiLO,4!CA-lTp$PX475!dO7Ad<`gQFcNFWYUCkab?+?8f+43qPea1t`MCb4e1&^(?3UY(SG&8%<D-aI6T
%^Jc_BlPKf#Rm819Up,C!q2,]_j0Osq^(kf!F@d#afAZqF(S9Y*1sEdW>[a;gEmPfXU8#4LcZ+*CXj\77IbSh*U,d,*dU$UIJHlph
%OL#o_&RX#'Ef;]61r>[A(m0nbo"f=)qHTm',$RH_5T\5gNWBAUD&`]!9f/Q%hO*3pBB7&Hc?X@Jj"t<&#\mjSXmPd!ZZ/@LNTslh
%`kZF,phrH7%*),='5(Y3!4=F_j5&D'(T['i*,'KW1kr21**:,@[<J<VK@(P%[$M:Fp(`qcI3*LMI@fYt1#\k4mE0&]<E`.1MupQK
%m)EQlm_N^_+Z"jEX;n<_)>E)R?VhX7l6Y\--KFO1O!$29-\e=`i%^g0XEU?m7Tnse:5\!Uqp+t;O;R#))HR8UZsiL6(lY@/$93Sk
%X=`)j(]NF!.jZ,+`L,1p?A#p.pC:!Z6=('S)'"Xo/nUY.'LZmVF-._BhLu>`F%\F$Mn)SD#r/uK([UP+>ti`eR0^LgFOOF.EZt3Q
%m,b`rJaIJtK=Vo'+!K=1/iK>S.IT'6nT:Es&/T+oK+Z[kMn+]iE-<BWQ?:]s0+7l@LOJ]XD5t[h0Gefc+N36W`ADW/EG<DUk(U9h
%H6>(YMnsO%jH?9O;4,`,Q*Y_8"?[NZ_g;a-ior1t$XYWAQs;pYMuX#jlG6M[qe48o]@q@p\B\*5GlWm_TY&#6&X%KM.\?.,>?aM7
%*(2]BSYm=J.?*<q9efaZiJe"6ELUG0%@6#9$n)pTioZ?A+=RN6""%`$'SG?Fq__V,MOVZ:JtX$(caZk,']]';2UR/_&@mo(J?nb[
%'0opEU*k\$!DEI::/%+Z1_r+AXpel<'-kMWnT1BNAtAI`K:*SG.A$iKq7PkM_Fn.IC+4Ca5p=i[Y!?M%Ba4<OAL0ggTSh]q.LOr:
%H`N'g(uMt#Y)dg&&/GHp0lnk\r/$NF<q-`.pkXhYcCcCOi4G:<fSEsW2,c1F11IgpZNM(ap15\OLn>W-8)2Q:buhtUhQK>c./j2H
%8MnAYfjNen/QBK8/S>jY+Op`1@\sH#@)pl[7TmJj8rB)?>_@SE=!H\>1CH.knmcApo+//OA0*;@XDB4<S#Rft5)05\-6G]GId(on
%&#6L;Di6SG,eu/XNb@A1k3f_M%-(Y((1NZ1<G]MWkqGZ*&aKkN@=6s(_PUE:^9_);bW(RR5H&%DE1!sIKeFV_>[Pg!_^HA?Je`+>
%k'N6a/'*Ga,)%L/4h-6/Fbc4n<5Th6hSg>5HA3baJ.'aYllMO`_(uK?_pjOl%-.*GN!mgJ'?rm`$mT<gdlf+6)lfiW].sd^kj'/[
%'YZs1#JVt"9"gAq_aYk8X)eXN:5J]XeA@lV!I)nE=Vr#QgoqG""(!ud?G+/*pSGCH$57-Ye\s!He:Z5+;E]R7(s;`m.1?h^Pe.-r
%0O4q=XYU<:"-f#H9IL>)>cDu\$Bt"d[DaMPmqJ(<ST(00apU,dX<;"l$):4/=!lm(1q&rG(hmeb.>p^+'YTb>NA.Y^=kr?``4Lg/
%(-D#'p:4Js_BFm)7kRF=i!A/V?kD0S'$>UA+Ddg>PTq@``_rb<EkB+fjBA1\#GZU>on,@DY/Ag$mbgh8e15Yq3:2#VR"Mraq8"#_
%;>jd&K<]SClkQ>4^i*[*=erm!m_XZ5(rX0k2\oomVW,Q`(d(7<FQEm"(2rMs/f8^rF`@Rt7hT,D?=['`WBh9CK1\=pJu@P&=/+V*
%*OU-D;:Pp7/SKarqh6=UKL$55'ch8i?gt89B0T;tUVLu;73dcT@SqTFGcp`<bRY]1TEdrK'@+5BJUPUFaFP]pfl_9:K5LYn9i(q1
%FJq'D&+&Dp63T5#E%%e'%r1$^0Xig?eA.HTij*`Fi1Jr5@]sopi/L1DWEdPr;%ZHo95k!N%P)s)"#Ddig6ENmP`h\PEaiDq2q3hF
%(RQ7hGt&0XZP>8?fZHHD_Al(M!^g`WZuTRY`[dnE&iBk4fsueCTS^67o^RkS=EJ-=huqo,ZS*_X&\]^Sap<qS254,;#Rj\Yek5E4
%6Q9l#7P8eu=E"7Y$8u9G0sFb0MM)Os.cneVS:(o$VZLJ\2sCd)"2K+_Xqr;?lrggU!CjY)lq@mTD$h5Q=b'qjTf+i3JFTXnkZ/N@
%:e?=a/f_YM$jpD#=N3mi!gmn[lm4#14CD#'2F.<OX9+VrnGhMBU`qnlrt^[#"oWB03qm%^"Tj2kW`'KNWOe3&EUI1q#Y_Ob8.J7#
%g3[Jp?e?aQ5XG;UN<dJei:Ljl-(sdrpm9!L3J>V(T88!Wqh=fh$(^k#@Hj_3nbt^2Et:>L&SWUW47iGdUQ_rrIoH#LZGl\K^r-ph
%k/@.dMC4`,mk9]2^*%ZMZ'Cb9lF??_;G;UdOS;)9XA&-_-5K/?q&/WS:`A\ZUZLq805,haiU'l`Io?Xdm\'LnDlY[l.76J$#;B3q
%g0ZVO$Y1O:?aNde,\V\LAD;aZpjh<h/-]4SrP];bo1QH%p]Ij-(Y2rUrRQ"nrpg)H@1(Rmr[Kp4nj*tULR/SWlS#SP>FPl`00=uI
%oYUH_<0_K5cMEHCV$'Dprb;]m"a=SWAVuM0<[[hld4Bo<:AW/i!uN;sOT+5H_I<c705a@\\fgt58K$m.Yl:L>b_!\-9:-L*C4l2G
%&rubqm4Xq9[cXs3PRrE`[(h^,HK.Wp9>4XQ"(_@!>a/f,Mt`S.7:ltS[(ji7BjNgg0>g:P`qdiKc%38=hHqs:'M!_jZN^d`+eumM
%MquL^;r3r7GIAp0Fj=>8f%WLdM\E@]i_9-*GRuqrpjO+S;B:Tmro-e>[_#B8cKQuF(k61=,XW.B+t\qIBE-oe75Ro3a*F*NE9PQ@
%qh9RMoG=snOWBAsAA8\3P0pgh,Bn1)qF)9KlNbfjj)`0u:%U]b"$*PQ^O0pNI"U[M>rXsDVg[W`U7W6rhoXSGBDFtAN.Ej!q8IP[
%c"E2HaGRKQ)<&F=(lNNo?dbN`mE4pf2J6h6L0k/J3NaQ9NR^l_Q=l(^l8>kY#K8@R4JUJ&n]R8QhcqRY)92,V1&UT(9ZCK8V8/LM
%%u+GfJ6H:g^WOsJ]GQ*c`;sblL#Ehl:"q$4IT^?;Kfg3$nKai(4Z!"VIgX+?K&RRbT/4M:Ied;P2gFK[V%cS8F8W>"*:`ITpk=7O
%M[RQYUd5I&CBAZ2<l+<!!OnjdF8QZa8H=inr,R:RVAQc2%q%-->&b_]'qWmW(F6aXN.ms#nsb6"kecp!.J"Ioo,Fo0dJP?>+H7np
%08)_b#0SY'=P8>gQND(#F/Jbe/f0#Be,3r*L:IQ60='lm@2GA>8Ehr6bqB2FAI4f4$<ZPA-Mj"W?:>G(njKRpFJ<+J=RgDTqW0%>
%G`!X?<FlFkS^k-^Dg$(CqUKIuHW`bOfSG?AH4^#VeQn]7pE9;Yem!OZ_K]$m??VoIIcp2aoDDLd7$FQmM&7ng,KST;62Z5+q%Z:[
%/)NWD$+G&/*=t'B$iPLIq5"+jH0RN,GYoMRE1UE9$L!6QcS*5RHj.hL,eeXdcS$T'%pX@.e(T;gBmt=[;G@A?06$r4H4epuo8<j=
%2&8$`>cj8EG"+T]5g0pKG^bLp!k'CgIaLuWI6mI_QQ[]3$dC>4qG(Da1qsl:!]UD/Ded"Gk`t:sAO<)V"Kb/7;@jhGq5*UVb*b'1
%0;Z&KK'$,I^C;'/+.<'TQN1cD'-.#0q%^G.DN!ZoHC%`KkP<X^R/<03QVnZ<_=NSk';-@.^CYA;](#VQKg3L]+;16i)<ZY8=+Xb^
%4MSBI1Yfh<b?6#E:RYQk4.Pg-!8JaJLPh=(q.6-SVa]PP"Z?!o-2N=9o0as[+;rmG&";Ar\n<NpQ<snVVrJdYL)D%PquV$M/+ZI)
%b?YDh7V4&eGO@+K#%)"==+9&?YClt&*P4-"3cQfr(2aB1YKS)$gN"1)N\L'VgGcj=\UBgg\UB7:c9^.l,$S(sSZ.%Lf2Af)6oQ.!
%^AdfLl5Lr1oX1/9DSeD^a2WVSN5!3QmXro2Cn<(q35BJ;RL>bVn7q1Fo>Q!;^'d!ZZ"Y%^fR1="DA6Wqh(c^]jU2P&;AGe&I*(\X
%b@:&(pJ_rk07r"V&/QBp#VkOq`Y[Me@Y2Q8&TQ7sSk4>,k*]'onO3j+fs'E(AP>4a.u!H[ejM4e@fCq_3#I$iD#A6!n-(Dq50MsS
%`K!DYjTU)$Scp]*ZhI?ESn"Y'd0:P##'V`QPaXM=>=_HWNg7:0k$B<7;m/sO$dQ#KgQf77O@PQ,3c-Ou`S0?KUaOA<P^XqGji4b\
%^_LK8l3@Nl_4@kJpQ;]mm[:>H2Zlf2-g][FB+2L\;Qp0(Ff+J9YoD2VZh:UL%cbdTHB48[\9ccXV,#P[gPKiaC-,9GkWKd_na.=E
%M3W;'*[kZe?=;/[2!P<?3F0JKl]bipL0dc-JAG"g)dd$f#!m/=Lg9_#LQ_`D5;0hN/ELnu?4[T6MdP+^Vddc+S/8=Y2t$1pl1f_)
%k$9`Tjoo*%a_22Q49P.e>2JLS42K&IJ'RipS=>D_DX@sXYjt+1d'Nj`7%pu?Q'[Mge*Wb#1'QhTb;mED!F@=8h,i\(3.d7G1Fk*o
%3i_=Mjb5Em7,u@_b2N0l$R[Si/gLgWPF)$NkpYHP/#rm=_T>IJ!Y69@]J;(WBC%l;hdZAtah+X4i8fTB.BqakV1@[aB22d%BY8WR
%j<Y6=pPj5hhN*V[LLn6u0faLsWIrp7E:QoL[(g\Q.XkIqU>TT^N^WhY:0tqF@.FFJ03L)UH?&LNVb4Hqo&A']pBN#5nh$W"(#_%H
%L)3HgD2Kbma.nGs5Zh+SE0oN[0;1aGrWl-Q#i5_00?YDVG8E_TL9E9pK9;MJ"h8EcaNNcQZfu*lhIT_K,;09Ik#a>.*nt"k)0sP+
%Ks*VI&<+9_aCtNEa@h>;<G#Ch*@+)!I1c#k4<S9'?G[bgU'DjFaOo3KKY6M?qFh\l?50?R0+CBWe6%i(:;stH)lHs)G_)l87W9hA
%fX"^P*1n,%G:5M9nM6KKU(_2"'pMagCTGe`K(b.^=$fdg$_PN3L_VN,1pcYjH"Q):1m"Of?9P^8DJc-.AJcqq.j$DG4n)d0Nd&!^
%$T;<lNoYI3j)m74BB&;'\:LHJ\r,&k4M6ajQ#%)"f=eCH=EqGRM[KhE!-Vn?;C%tuJS@sMp=NR9beVt]hjttKmG/.nIBXiI6d#3\
%r@YP<JA)Kdh&Q^^Q59?Mfg4eM-/SmB'0/[THl!2f[C*ue91Gk/A_u6Q:CRp)mYp<3lgF14`XD#`_'idPATf.WP[p'XCD3`q[[dff
%0"7uQ^<RU?=eMA+,2B;\o"+>X&dpDjU>*ZTOarZ!gFd/->COT#$V(oq[344X8$J&b\9@B_B_;b`/c[T\\\OVV\NNh/MeEpFYk?/E
%Ms=.";M/MhTt#2!liMnDeGFr-(W,&&`NK[E:2>:*j9"0?Vrkk!gDEYRMd3`*]?sOr]CBlPejUTB1$['`60fQJU%@QDUkX-]1T`8H
%41MhZZg'I+(H=s.;%<^QkmOCAKF"CXV_7?$,`$Xu"6_"C7U;\C!Ub(s?0!oUoBX8(!MMj-r](5\%A%dh]'+7p+(<q/Rk@<JOj:Iu
%kt^u6JkL=ac:gO#$b.tVp!-OJ5f+^O+&'8]=2U^B,$j-1&`u1HkQXjFBQU/mc@\P%hr@%]7@+;]4CGDW7cZa(FGGMD0-%PO?DJ\/
%*4jVP'SA_rH3!cXTSmUh0k,J4Z+\LI@(;+Ulb];f.40KtkU'2sk.)=N)+;dh!!e31G=b;l0dq.KlndW;'Y5`:SN'R3*[f^;Ra6+c
%E9OT:!C><FLFtS((is[,>pa3p#J5'@.T]m@Ps^lB)Y`pg7h$TmP]kb<ojZPonZY53Msg5A_j*W6`bt<ATo3;snMhm*'!1uP.<Q.$
%c?,ej`Lf5)D"6WZ\S0#7c@nEJAXc[#6'CD+YMBX[>Xdc0\3-^2<><jOks4Ui`T1ouk8jr,1OC`+GW/#i.0t-SgL8Z@h@'%G$Ni!`
%L4T$d*XNfTN4:Ap.+Y_c)JY>0T[$PCcqHBV4-pT.!F<3Vf`I?_\9%K$0INDQGC@5Fk;&&k^'!QD<@RO,M`[99Zmmic'+rUR?>4BA
%63%kQim+C&/5Fu!nKj,F(lCVMMr6gD"q=rp%ObfO4fEFI;l),/g_AL0"EQ1'(8,+ibdisYWiuES>h(fT0%CqRf7c5O[\7qd]?G^_
%<.d.H!oDae3L?<dmbOj`M8"Kj):Z2r)'`LVF6TX_`<C<8"uqsq@*Vc\Zcjq@/dXScrP>#)m!DKc3u=js^=3O7/m2(Se_o5n&C:Rh
%mTcS&g4&//-.W-+W8PstTSP+BX.G/]=6<cKo^p")AE0RMY$fPo&^<u=&*@,i1)Nmtk$4e_E0ESE$eS371$O#T@OQ<3Ne3N^h?kXU
%7IGj3j[,IF.FWPte\Sgbq`C0dOX=Pul,&r`hDb52_41l6A!t0'9*+CE$ZdqgOK(Xu_E3ht$&4$fkHZ,/IEp'IM7DnU(3;+NJZB_0
%g,4Dm^a#:n@a7shD(CN)QhT<H2/)HSi]Lumk$1H"3G6W3V0NN51ZqX9&+@B*$RpXM_48]dp_KA[QY0(=#CFet!HcAt[1eq$Mhuci
%mbB+uOQRZ_B@"Q]);>F#gdLdV.9H4JjDl+p>DHeaIY'`W&=hEpQSd?9;c'7nHZ"ee$[HWiqr5k3Pr64Ii6>h&9fj44:dGGdX>s!g
%Usn8I"Doc4@RUmQUU#N)^8_:($Fg\[F4smu('`oT2j]b<R!ul@bOhGc>n+8+HWAaU2ja/q)cm@:k$i!1Tb4rJS6DN:5&VN@Bfn@p
%0#!K80SjcnTM9MOc@qM0fO3"$_"Y#IKF.c-g<\!RI,-IVSN3$>hhZ3n&h(B\Z[H9-79;!G(!O4!60R#e<a_fkKo-]/>[eSVR-Z]L
%ZSMV8l<F`^DZ4dTc@rdIl6/Q'nPnD?cD?1#ndBRmcU^CFT["kCNsYBMc@nY?[Y$T,(+F=1cC@OsQ-:quS4d*,=TD4@\P'H"F1G1C
%hpPOGM>'I8[gR70`#;q,S-o?rWf&m(LPV8hba_<\HRbD(7D1UL936c^=_dFuSP'Y>o>!Y_$`JqRZ6EnHU.FOkS]drc?[ZnVZ94Au
%.4<*r%,eIa\T@$*UdI+oF<]?SQf(3#HUs^NLmsV'%_AAgIVtAL&ZgJJAWaXc7%:67r3TRI@H>m1$dr:5M\5BkE9?SG@4]RV>laH7
%Qoe:IIjN;r@2D)0`X4sP9ZoD$mYG^0cYU/]#5<2.c9eS)b'!XIPq!SMP,O7W\-9<;&]K[s,*eG^]Fa0+<Xsug-d"k[%FrG65RRp,
%mLjlDab::NojGm1$ud/D,8VX/-l0Bjj8sp>\9k"gEq+Qu>=^L0i]BcU/d/_\)Rd0gr3ua[")Y=2%bP4d)(.0uVI9`ieg?3b=3u;b
%)^kb8M7HFC\3LIRWCkmQ+M`P;4(lPb4#^>-e)J6oaRD!U'pi.pD.SjhJmkm$iu'4^.0;%O8mELq6$TWV5Ti=>lH4nj.<:P:Ll:j)
%cb9[)9@4N^=$GDk%1'8lE06SX)-Dh7,f._<]lN(4c@WU*E#E,SAMN/\q'W5ZR0XW!NdB(1U<l@;[*f#KHf%BDEag2F&@<IoJW!!]
%X=PEufX1&1K`MuiS*W-_^a3%`r#4b5"Y^$GlqDm:LeQr35q80*C'0$k+MWUbaXuT"S7)]41<&D*\#=pb[("k,+"s_)aN[@IT;4OV
%7Sqs9%B2M9PdeHiADc.%<LVR9F72D>$Q*"^,OE6jMao&'Y1)4d'lXq6$ksl-Us0/U-PpbcYu`\J^_D)8Ms?V-rR%cA[h-E^$)60&
%V@K2%B)JpsgmR;j>?R3%=Dh2/XHVET0B9d.g]Dbg7=Qc]"#aq02(3>Sm=i]r0\hhT,L&Yrb<7rfJ8s`[hqJuLH<UYPYoN,=T]eXl
%9p",h9$,1mQW9'E2,F??D$uOXO0Y-i;$'djn_+Th!Bc(bg4K/(ZcH9dnJ6W_]o^r7Lh&klg4C"P_>9h3"VH"Jkt5Y/*&YQGMsoSK
%ECO/["]jVLBT#pn>;c1lbO4!gk@m46"dShMbn``D/:^YB$'*+Z0.pHC<FI(XW,,W)J1uD4c!LV#%jG4g9)!e2YsghiqE8M.nJt"K
%_.&>kW33[mf]K2CmDWL<I/o,@[ScucA$AC.`G<PbJ3D<:%fTW?>bW@doX-$A,8b!0=?2d&Fn/^(S7'cNaD30hm*idV>?Ql1:tJ%%
%NU_t<[Y[dn&_A@:;4Y03K;,4nD=-6kltN`U%Z]\(ZkdF(+8O,`$aL*0h)f1"Js/JsbPe,Y:UQeXC'F95Cpi("3_i_F]ccT4<bm<r
%]H)p2eo@pPWg:R-c^AOYpLZREC:12qRTfS\\AX)u(6S$1@]@>Vjc0mI;G2sEH,`]cAE*e]D>(A!(i!4Oh!1/t(>t7e07$gs*_e^;
%Mk(W+:g87k:2>8SlQW6Dh#9)52_ETK<_-Q,Bn`41]B@tV#Z1B+h1E+PX9FpcH'$K!H7uSm&UaOkP@*DS808_hIsB]e3Y`>)6;@oq
%!esNjdfrfP:t$VB2HmdLe&&AFJJH,1-kV4h)n`Q&$P4tuZqsRt!)Y+>R*6Cn]aVW!rVH"H=r&bi:spO`#oI>0dZTu/Y?+'EjqXF!
%PQiKM1h,suJk*edA-X(@8E+"`+^Aqf%F.BMp)f'J*E9BW@aPH2g?C[I3"mlg4/"Ve7'qc?_heX?>1<R-DO/j38.96>=D5`O&Qc3`
%%ehi5?FG3hn\RSM!8^]2#),.'&e9'lgA$,*TFG<@cuu<Z%:\#YbV0k0=eJ5%=E3:j11#Q[G'uSrc\=-PB=ir$JpFdd'?,ZM(:`$I
%2Hg9/S*ZB4Sa?p[]s,e*hp",OB=gNOJmoK_]r9<jAHlp#pD7tlg#;#Y5r]7N?>uqtb#q.$MRJRTLkFU(.A`SsW_ck8^=hI=5!_+h
%I)DeRRiT4spk<R.\>S\(ZQikJc8?Pdfe_/pO<b"YlkmGQ:_:k]7t+]gAqqa)K4]9B(&A'V/6HbqimS.S/;:VcN`e7YGu;e[8-`)S
%_D"'4XlL=L,_'aiK3spe0"G9PA\lH@0N54!:+tL/jKa0&^;8(1/N]IQ1RMa9"]<OB'?fBA\=`AH=#L>;(Tf7VM7&M_.Z<""<[h?W
%AJ'M>nTa3n;HZJ.ar]_*;p(+kBf`$U:mrcq@q3Mck[]8('O@j)A4P]JJg@d+Vh2OBab!<B4G+eGZ=b4PZ33_mq2@i[bTbf5%N\bN
%NO3]PaEC(4>ZbMu+TGc3/=&AB;10E(Z6g,!hh=C?7teFNK0g>[.le#j6Zrd],dN2%/@)nZh^fDhSc]jRk)^n+L53;mJb#6m3JT^'
%L8O0@XrO_If=*p:f7G;5SWD,(ADtC9%nRfk9Ve%RnWWM0,No]0WWWCS7UOeX_5.HScQ\E=G)^V&c5kYl_"bbeMhEGO?utU8qGgfk
%Tno$,PXREM$hAiMWT%iHR'rH;^08I[n6-Nf47gHm";b!#hDbWaWs^mU+_\L)T1`BsB10bcJi&d`*4%3Af]Ui0_]RZ?qOTM:]5bi2
%IkKm_TQEmK4"Rm$iC5$[i3"&l&EJpH,n%%GX,d2MoMuN9@Qhm[8)E5<6`qBlP#Z9]*Pgl6Nmfh9;S+l)6R/6gf0-&gpljBFi/%b&
%V$n6@%6R&ci5B^I-q]4M_8G"i[</9iKr3%&pF/GfYt.dI%<ui34Xk.gGmSF,V'*`K*:R(3JEk:kq)GmH_EIS:,ViM2nOgn#4Lhr3
%MI)d-F0J1*!U`(,ZN<XrH0$J#A.r?3R!TuB;UVOYj*&>n'cuX^ZuHCW?EBYk]3ZZ]51VV#br79<^;9<=EVjln>NE(EerOiND'YVf
%:]O`mFAe6l+pA"J]<pP%7k<QME[0fH.-TZ&p9<#MQZ\u+h49oBgKg!fQ9-kLHNe]Co"DDO'Bn8X'E4/l)Urkj@*%k"hK7UV)S+RY
%'F+O`9-8,M*UmLqJ6Qgk`>og>fqU/p]8.2-;Tos@FM('M&EBW`Q+OM1H+GDQiEl&^BZl5Z@[l2N$L2q7(;nls\:"LV(\X4=%$Os#
%[gnm$cpbaac.oK')__g9O4VG_pEW9'rQ=YR[=;=LGSX.acIXc$-qW`B@4ZF@cH*acU8S\W^m#W\H)ToSU0te/V4Wd.pM9,q\AQsl
%G6$'=/t^c%nq:lu*_+W8esKuFiQQ_P-b&F8/]08f85#_^(6D&i2/c6t84i82&;4I+1d]<.jcGLgKtlMV;rjT=TEK8S]_P=%P,r-g
%kp<SG$g1"m>.1A9ArgTarh[OH7A',lM"]]<\:H_aC-)`8l)]ljL$Isd(JHQA>C\3D\D[Esjq)DiGBX1X#$L>5bSF%cm^5g&Hrn+A
%#AObS>_Dq-O^OsLoS5cl%cPV=NsJV2c:I4FK]96mL4EDL?@]'F7kNH_OW/22C'?23i,DFTFt`RoJjZnS9b^Zp'MZhFNXTNj!RK,:
%_Y*CUX]Ml(<U1pY-@7gS'Lt6_-Wk#1(#;38#%nc6HL:``HNh\TZ'l^_S2$:8n>As/8bgIScN<(F9YM;cK5p6n$kmmQFX7;:k2(h5
%K]8IjW7F:Ch6=L!Di?(0cp1Gtb["BQ5,+FD)ZXZ1ja[JBIRo3:K?0i4Ml,0Q8Ur*3o*DuVE^bV!R/)(a*`/#a6?QQ<^+)<:pZs%R
%&I4S.61b]A?Q!<P&fk-e@V2o:`K%.5#:qX+T@k7?9M&A;2p+3Ji@Zhhp+FL$Sr)u./h^-2(>"tNYt=2OBPPG<M-UCt.1a]a4@k0G
%9?'_@,8=(<CC/9@-PK(5GBJ=Gl4:[<NeK#F!+59.%kdG5F74l(M.9W5J=B-8iaot4E'"/>M`RGl@gI`)L'60ZD@ahZ.7dW*fj`\.
%JK58n!YXo@JP-!D:'m=90EC]13T/El#u&?4=k6t=!Y'GH-Xbn<@dkq?'GUll7*/S+WoMt38s#:20hIVon/CgubN]dC=nOA(Mm&Y-
%&@'kap0t6I6!&gje*u9Jc.nY2O*uKO89[B/:9h/2rtU-:GbG\ig'&u+Crmr%[STZG#=qr;#9j`5CQQn,0&kK@VGZhT7m(L@/og9G
%X3Q\g\KfbhoNRQih:6nrQ?=<Z[_c-GV\P,,0M0mCqQ_cj.(tPUN66_kV3#biqncq%^Pml2V24ZnDg:l)$EtL3CCa15ZQrBcYj#?R
%aed[57dbB@:!44_.:O.P0i7Xi"?Ncj_B9U!417Xmh'jR."IeqaSg6ZSIERol$OA'n=.^8_K#7\ogkW62(0;V6)%5f>a7_@Bp3gtJ
%[Gm[q<8T9c`Z3kYR]`'tW[#%.n9NJ^96t*0Yi:EifmhcXG\s./]>N"DN[b10%RE+b,H__^G,T!HN:3IM1nTPDgQ^%qmmBMrgqQkD
%QOS3uX/R.mSFE#NTo)Y6s"h%TX*+]"U`FnOO0+'.:gHB<g1.Sq-jQ2\]B?gJ_W;?X%gQ=hDDNI=_VR?'Qe]+$4e<)u[l<+G=6+m"
%2FIHZQ<S6L$SW<:ITc!ehA5Oa39*2Gi$HGR\QG`N%KpJW@KC=/&("VKV_^FH0+%=KVB?A<&gE&AqCuo'$L;,EVl2XfIpuh+r5Y9)
%^$V4;h%aPl4j1?CF':Th&Ls#J0u1_T1LQPo5--4]HQ7hN'Y.?>(m!G*`:e$-/mMUqe)qOa<4"ZA)^Sc'0bC(r=gK+$0At>O<eI2+
%g%@0VX)%#8_(ejC*9k)oGX=1H&@gpA2\%;(*AYJ4Y4<=?Bip=Ico;)e:CI:2o'0bh'?0a>^T#gX+BhXlJX[bN$&"cPJp/VZ8U)\$
%M*h@i#g/&lgmf$R(h)&6?lg+c@=N0(jL(iVY0HNZ>aApe6Ze)P,Z#!<nts%b9L9Nu&JPYA^jP"XOqb04HHRW.qE`,H)$RiW%&n!T
%E\l,i54HJ83t??CNHS>Aj"(c```n2)3?pK)$@)s%IX9:ToR[DS<epE`(Q_,@1i$ln^(4?^CR6`K/+M3E_'%ZYIscCN7sNk:RtNb0
%*Y@?>8NjS/<6E2/:#@Ts]5saB]'lL?hZZ/hBL-U?d823*J#GKH2isNSh27:2k:J*8le;"b7qETXELLX[2mXrT4]ilEM$#Zq,@Z9c
%8jG!2WC^W"b/70;9j)#JVKHbO$g38U]QVhk;R0fBTjX+84u?i\MM*V&<(eE^'j2@Uhh/uYfkm5A>dVa7fPm/26MRp4`V(u=P@NQK
%b0[(&Za3j[fMkoE+(EbgOCKdd/IVoD@u?CCQ&1_La<>7M`rY*O@PjubK@dRkj]EKo[`dC[O3."D<#$'#!D/qeHmI*_ADFD64:i.t
%T'LaNr+cQ$.`a]F&Y'Fp.E-oHQ,^a?84uVX#XW'YAFl5<iiPYdWNXYXpkh&j+PsF!gdE;Tpa>\F,Yi2A%s,.CK>V_N-qP'&m?2/Y
%B@."$Ms"rL38TL:m[bpq*ONs5i.ni>+g))Y@ht+Ip7r@akU*GObUDlV<!=bi3iM_g"j=61Sb`1;&c&C+MWVAUJ4c@/Z9L][4ZUO<
%8W*(<)NGoM#)Dr7GL89ZJ.+.bIK-ZKoHH<-1RXfS/S!0Nrig\L*Y.-10)*+A[pCZs>KPF)6-?9^6*/$0%;gc'`Xt4bF;NI5ZkJ%Q
%JBa4:]1@K=_!4DsC:jV()2Yu4,i5+o8G\nadW*pTC.JDd9Je&uN<'O+J=PFm`H*_uMC:%-(Hj/@a>sh7aUk(Z;ghmth?m=9^;E,&
%U'Blr@Zad^.EJsGQ.r&:!?k"PMU1)seg>@T)>&3oM1<2[2UaqO.<\]Yo2/_">'Nn.@;/mrE1gQ$3-D6O@<c<PUV*Fiqk<>d.832?
%&9(PB@?=2'`HL6SR%jO[;_j7%VNM-rcIM/-J:4Ld-W?+h$u]pJLrdhQ_Q"3/bJ"Qj-M9@E.TSG57Ld-6Ul&8A4SWeP%p!2,*BXW2
%2usc99LhGgTF`p9aA]qJKLG8/QUJBk,QT%2K\Ks^<8Z;c1&L+nNI:%t-09C+%*bth@SA:ijeDeuK!/^7B>gj4[1\'4einbg?\EO:
%n:lU->!.iD#mp&823,3g/IC<dP`\9R#:'m,U:];&g-Wp8j<8H"M5+`7$788&=1"/bnth6"g]Nn!i:\4K%+`[D$Z!aW6!OS(/2rsX
%lmH$1g/]D30-LU`6fiL6Uiq?ClT)aRA;Gh;>o!f+i(F'0AD68V`k$j.M<DGimg$s`ljuWiQTCCD?oE[;`)(3j$-dGHX@11(Sb8e'
%!DP/V_'HWKqjX=j`/T&OU>R\W,Y&Q3",36%6(`,:@-*l$@.:S-EE15k*A\YocIBX+`@K92R/5ap^cYjBC73Zjim&S^+'Xs!_)G:U
%`<E*U0etmle[>ISjQr[_9QD:OL=a4m"e9Agk!WqTK`E)MF"'??GF06$FkYct*>($02u/4CTNI5X.Ks)o`M;Y,%GiV]27a9.:ciaU
%`0">g:U?!jEI:i^YSeX]`du?u@SD\>BPZ<+^jC2"50;9KfuThk*cXkTr-1e5iDUXMXqI0bP)-,MT@#.H*Y&M<jQ.`S6iaB<+$a?`
%#M1IaEq[b7GR\,PE=DX]YiFmYn-;LU1]T?*dfER+]?P\)#eG94L+>]^:3`C+iK"TKV6uCVX56!'gq+?/VCN^%UZ-C)MNQrTa5.i$
%'QTC_m0+dD7LZOQPp-'#-5>9CjglWL3WRq%CY]17^%p7@$rgaSA&J';VRM\WF+[BLe^,]U'@&p!WKTTFU1@I?lO,""@UF6X&p>]o
%69BHB&:-SC"-Ajc=W2FS/m/>s7P9W#!o,B&OH<EZ&&(=Pm[qP02)VbY4*)2ho4U.mb8G2)[@f7+B=$S`&<fMO@]kLU<Ace6Vt4kd
%B#.G)iFo6>H`"l7o%Ga6Rpn"%A/BmJ<2$ZXFd+;m^71M-TW#o0KXb=SN,2oJ4^g@VbQCseY$VIBd!UFc60]`a_/=s0R?()(S3;X:
%mI-Nm0uPikrD.U?<.O%7DNGSVAi:Q[RO?!8?nu$BTK"idP2iReW<\Nhe='@m*f8]mEbnK?]o+;@gQ'R&KB7]&'MTM2E,KV_j-gZ]
%\E#s2SX\Y=Tr\U<.2[(=Q&q(]m@JNGm\$@K'_=R^">K4H/h7A,i\g<eQO!ef*Vd"1$I+,_-'#LkW@>@fe?4^9]SMc(JT[V<TA2oE
%4:E!OD$idQ:I.O)8)M3@7/!7(MnZ5Yd^=Ak*F\j5$V#02n*^)F5f*\cL\*ckQ<SN_!R"0H?mspD/!*#QnqR%`=[H'EEN3\46_?!n
%COn'n?%Y@I]e7@M+5[c-+admI)cMIoK#.j,IQo*`63%'Vrr+m]f6BU66)c8DjqX]m'Wcg;`:sPA5_NOV-+]314I[Uj,61PS)&!R>
%mXFn>$RO_'4Uu!<NRcq`VB5E-bqXYIf/(94AmZ)=/&!oF<9T<_+Ds62kAfErif!m\V%SLC!\a\P`IG@m:7[;SO#i</pcT"UTcfO,
%r9ZPWg?H-61%-$WSkHr!r*inj`)Z#"E\TN0)Tf[s?7I;V`[OE[1i&D!3[@$#4IF*E3HM*h7""hF@2cih1SWI4+"%a<Ga-:l4WK)(
%aU6B*nDl@m1poO]POK!iTJ1C2Jm]uAL=eBt6Af:rh4dW$,.'^oh_0o8#V0:P#Z.6aT*8pPoZ;E_<.P_tAI"_2CK+K,4gXp&EO'U`
%BH="X0:5V(q';#)dI!q<$KnFIU'fY:1*hR4(cQ,9'"9;na/J[`4?GgVa`u#V`&D./=dRo3S&4LrF/Rh!!8l/ECU.at!<RQB`_?$e
%(j)ibgJjhP@6-s%\Z'LUJAg.!E<9D'>fqh?Wm?=YS6Of\fcn/-5T4k6Aq8+KM::07)r&-g7@W-s(BUi`kcQ!R.*gt7$&W"WCq/n7
%()Op5h]ZT,"Tf!GhY2:LrNt*qNu\^lBqa+0U]`1L#OhInl1BFQ]2EO0T"@IE12aHddTN>u7$#J!f</D)Oq,^-@jTeXTe0#r]d0aZ
%SEor0E!F9UlDb7:Jqqtpno;')NVO=q70uX[82u0MnIfGEFCOKA/W8*FC(#f"@M>I%BlI#qDunrQ99EY($G$f8R-nR&9!MOJ=THb(
%[6sma4<:-<*G21(S=.J#B+%!AXPf)T4=kTKks.eC2d(^mcV#R73ba^>ljACu=%q?uH.3B,B9)K+Ij(L[_dhs<ZDIN2F')M*OIqp[
%eIgRQ0Sp4p\7iB1T'?nt.3bs*<1[kViG.-\"-K;01CVT$,\F0==bJ$A\'<8TiJu$(beQ:jYpDNOdmNV0M_gc,LJ&8t/P2<o"n%]`
%%<I]^-q.X(K'?/,7R14%X=M*n[B5@)Z*D=b]Db5;&-5TeIihg'&'IlJA+D<0_F`/omUR8Y)AF]+]K6+RJ^:\bU8W<mPPP6?/5K?'
%0*#WD_FJZP"(:;hR$bl%(j0k8`D&.m\CngNnaO')EZ`+oD&1hXU#t>l:<ZX3;I;i/]<)?TFcO%VNPJR`\;6%%#*QJ#+WI@Z((Y<P
%^Hf)CV`:]LLb.U^16t?7M#.-PjUV\Y#bQ)XcPfi,m)#h9lf]4$`127Jn\e&p1lgPUih<3,&gfPfYbACh]i%UmS'm@pig;/9j<DO0
%40+GjHH>-0ra@th=GHMX:e];j+qR]&?!6e;%)]?/(ua&"'LA7O1eaD9b!D7^]K<G:>B@MgFN+o/#'s,AYO'O?]PHdJ&e&R`2UR-i
%paJ6=/(:BT-Z5d!$)T<<>a+Xg.QETdO&P[F8]/dR]uf<cbZ9eeQ__cZUbBcP&7Adp5ura+=LS\FZn(!$Fp=`e::SEZK2fHY:8]ng
%gCR1q[b*jkG;IZ^MBY\+fTk)uB^D`l/&&3m$6OZ!SKk5(aHkC'hMF-8dq\Q"c*Std#17GORb3[e<-IPjU8eV+Ed.njmG[";XubrX
%[&NJmE$s,jJXhpHoUB?^!*Ws4#mdFo<M:S,Z^Mm5%Noaii_TpVm\*V(*b)^Hhk[SYm;3)L<&KQc_jP:SpE1b`PJ$6BLq/i&lHb;[
%E0/WhAkuru+ZY^M?'HX/<Y>fr*2ASMWdk)J!prqU8^:*p-ieS;N8gT(.,[C2g,3M9i"%YsiU=0cW^+c0na?8n1Vq1X?h\Rm8@4@l
%&Rk0D.52#nQW\ilVQF+0-SL<c%4C`IR)<!&JUA%tOe>.3<oib*ZdEQ]<1IO?+*I@%QuLC8!UX3+bT[7#kC=3jmo<.rk@kH%<KQ8R
%L(DCJM4dbV+_js*2<6UtGA"I^\2?S;ZtnR0WA[];kmsGiF-e8?!)?hD_*$CZ5i$3D;s[$F&3c2Y$="o.)?DC$FLJ5f?dTTX,D_Ih
%b[M.XmdPE;-$q2"KYJ<hWVg#]N$d2jcAf%k6p8&I'4.t0^:Pk#GkP^Pd+8i3+,[5b'J_4jT-asJ,_;BY)ZbQHlCAM)o&)-B]q?I?
%8PP-rMH,bBr+1=D820<#NL6+2i(];VCf:DNZW'r$5HCcll,#%`N7r-?*T;QCH>n:09DZV#@B8/cSi.66OeG@*2DU4U<3Aq8g:gs8
%Ud!8cD(K[/qcs8aPaU<`gqZ)`*!.Zkhl1t!.5l/c*.[hN2,<M(esBs5SR]3kfHn'f2(,t;[VK:P-4a8+;Fje.#;I#Z"=hMfLeD\s
%C@Yp1foJ\LEPa&7HNkWjr6E\SG/\L@r4,V>b<0bVeKGLQ^1YT[UM'p,PIV9FG$NWrb5l+:OBu>WH&\PPF8(d:a*-b\g&(sD9[e=H
%^><635r@fK&.]L4c*6iOr+o"!l4k`$.=@_+?]7f^\(e943$aI:,F%#sG_PiL/&g4>%-5>_l?_$2FG4"^:a3F^K<.c"L;XOj?/(Vd
%a/S^'j_f)J,L)%8i9%=EGK65XJ<(Bs<BN>7-*`Ia,.t0?#J5<5jl.QqG)2"'kIpOF?'8bTC?p^h9fGkJ-HB=fdM.T5WhSQC:E]'e
%dZH*g"M:n-r3\H-fG'r`&f++Ea;6GIW.L6RSY"nU.jf#/pLmX9<*(nlodDtFer/([<3:tq+DK]QUafd$Z)=?GRE-dOc*P&4dffEV
%/m>naN%;M)BQ4eX(l*Fa?oo?j&V,V2QA09[L`YRLP,(KW/+^,p5^FotUqJW/aSVs53%PZaDP!QM?BpW!J(T-u:%GHPeLacPVgqE=
%m3Qc&0qPS<i-*OI+^aBm+-t)F>l<AFHA;T&CBWc%PftNt%S[GuDH(5LVV7^K>@'$mQFU.;idM*q7c<O0Oq8-d&eZM;ndna)(>j+s
%')"#C84@Mi(*P8R;Ur3X4>Ac;kT3?,OHSe$fac#SA&sug3ha,LQ(r46Lh_SpM<!Q!6P8l)bcZJqLj5*k6'B+W4Mk'/9!1JO*YQe)
%p"7#1%R_4ll`=559'F/:i\2SVa?]lqI1L=n8e;r\a_7fL:l25tF%VJ29d&#^U/HYNr/A`+[Q.((mQ^sBh*`AEp63Q*1XLMR&r<sB
%6:)_+Cc;Z=Jk]8/\'(+@WFD9ca@>)6[HXh1[OHlPKab1F:&;#'QelXr;.PILA=A[Sg<:F&+.^W)eI-"tFn?CZ5m;uq>#k)$KY;7U
%8s1?s?;5b4geBND!uMBlq)iOe^jH5[/sTEOD"3fcRrCa.JHGq$^O%Oo1NW(,`O9?G#tl2eYOIu=Y7mZ5Q<@>J)#p?r$ZITKL[.40
%BrebJWd*nV6!a3TR[87WV,f?qXX)n7Wg%o@?"WY">P[b<as4\lK^@GPh^r=JYH(&pO;\LFBRs6QG:d]*8eZ0IT<*(\9b#5!_XFQ%
%MN`ZV4jF:641!M8ku?FpL6A?M3b^iYSIctH__>[Jj601$17/)h-p'nW1[6,Q!a15B@SMH&Op@$u04u1M@ri@&H:.1[BVYX0`pudB
%i2U7*ZH%/:JTa<54<?>):mMgt'MOQlcRD#>"PK`raKOc+et4pB>`,MEXC>MP%BEDA0rDUR*F^.*h&tT?+</\-WI*;HWBQ6,3b*9Y
%CiKnDI2f?W=ojk267ET`7:M?.'ou&t%r89AVK3;-NEo<g$b&q8FCfng\:r_!V?/fpiY/\@BGAkRbDp[U0TjDW4m6SfMqbC)&C:*+
%_o&glO>'C\fk=A:A[KCt!C+LZQ0Pj!:*n&L60`J?<QN.1PsWN3/b4i_j0mIUX>VWHKH:70'XPu5+WSG3DB.dM#aL.k)R4_d>Y%Fg
%C(1tHbB:L`s,rW<,[b&))k3Gk>//$'JH-U\b:GUKM24?:5;,@ZM?@ZD3C8MU4GepQ+hWMEra&A5ls`mp<;-sm??-N8:_J^R_t#%E
%i",:*Y`(u?:I>4iKqmFZW2UD"]G2P3jJF>E&=M;Vk+!n-a/%h(k3C>4\ss&SAES)'3mK73FuMFEY8qZMakc<1Auj(@\9uk;A>+O@
%!29^d/p&M_!c_/YUM9'9'\AGbZYD#Ob_n5(Q(5o4&@oKSI]9@r__Wu<ECN)=nhFGe,#AFSF*m9Ca?X!MjIpbp?F>+0CU*[<=[b1&
%cV43[(8]S]X;AL(Hd``:`9d<hdQD``3+&+troR/QKo!]:R35&U&.ODOAUWD#E-)M#pNCB/Ydl1gr(e62nRK?^8(hY5*>&A8s.^VD
%2'4$\GPYE42AJ+E%_^YXK>C=P?M.7mKeda!$8t^0Z[4<,gbgqmO1d?OGgcZX5g6Gf&d^8+^`QaS`.oQY+LQ<kAX"L!>UEsj\:V'G
%M[l]^?>`Fp*uSRms,c7L:cjEN;9G^TX:I.*&)Xs)pL1HY7HAM>Z`p(,891I_0*0&C>g05Rlh[XfCapj*,>O%(!+QNYK"NMj%0N8q
%b,M?Gio/2dL-V^<W-Aoh$ti6;Cc*dmb2/knHdLGV:]7$UN]Hjr$R"UbAsPqrX3Zgc4>%'51/Nd#R.:U3];QQ+U6@!?jckM0kr9D^
%F!!lf>$-#7_,23T1"5;2\FllTabX/?(@td:8VF[Wh/lb;ldb'&`I6I/`Ckee'K*G$Iu$j"<>T83BH_a2XQo=e+s%RiYPI8:.n\"W
%CfYFDGRRAs0hEq[#WM=q$D/<S<:8m6G-e2aW;L?ATQTFVU#\%nP)$fge=7P"iYD1e5C7>")s;4C$f;omJ*<@%p4l2AH.]j:kTn55
%oDgs5gVCg`5Z97mgDk;`dR/K^=)4m`H]VRe;S&@c3-!$YlKT9hXmoPSe3?Q-0!nR8]V(YsY5<cD!eZ?&[L'NV!>3.ghE8IUONJOi
%Qpk-ELVY@$<*BU0EFKT?5K5*R/Kf]nDh3$r:_*7)WW6!9(C3q.0lIpY^!7!5j8dle^sP%GUCu4+Mk@e#"j'5*CH-"0?Arjr"<0cG
%2$pbrKY!n95=)#OB.Sm^;om2"gt.WI_?b4j@'9Y/e)6EiEJYD;%*4[KQ3cV!Yt#H6<-][O/VZKX)))7=".`tA+r?)fHPH\2"`h%:
%J)EJT@O.*-[BO(K5=sd,D7oBfO$4*DWM5+NA;lWA&d&3Q`S`;[kSQCKa`4!r%GZsVqRtCcJ_F,rQ'eY+BNhCML(&5t80c,o4d82N
%9&W6I>XKPL(o2jL$>(m4"3hh^A3"!$(Cs@nXG"Xt2Ql:7W</&)Y#>$o,RPo6HRaILOhASuAd/csG],RQB]V.B%;Aou132Y7g6cG$
%cQ3Uu]7iOeL'<7g,lp/++p*#.e]*8B<7#+TA-@Ve6S.%'b77"bi(Nk+R6K"DV7\@1.q<4G4es,QF=>Vn-DkGh%7gO;]`pJu=l5Z=
%;)\Vsju@K\r0Jlr&nD[<\5c.,8!$saP_$.Nml%a];>JXQ%Gkg+'7'-"iQKL1fkC"($9]XmN]G-Z[h&/"6>o'D!mj+B]urt!RO>.r
%cBAAnW%*Du-80BGk0kdI66N^@,iO>/8Ku"J@4"*'U`p2%BIgq2NL1cANrAq]@iCU[GSTf+6GOJ5.6t<Hb-Hb%7MK:C0F%gC_?J4>
%ar\NOMP;RGdicV+Wda4VC)UH2Bn1rde.HGd&5k;]VQ.R]:ff@!PjJXBo2X0EN2I*dl#8$P2@0:I`o/]dB,q8kKV&q,_lF)W!3eCY
%g;d*)SpYDID??Y%D?-aG$;Ec$N#4%;"J&O^e72j!(c45I%LVn0b8<]'"jV.C)WM^q>V.2K6+KYu?:(i8@arH8*7>uhL<>ArIK>B4
%L>Ob;?)C*Hq:lAiM.qZ'`>e2P(cGP,W?phG-(DC&k6p#&R0WU9`a;]"J4<.t8YA\TjVW3YYQr3#R5;As;NO%-pDW+EbCIDPX;f'!
%aaI;/ZH3l]/6O;B:5I4:L3?Za*:oOI7n"i&L<1g,,jQ=;6isUaaKAjL:BSWDrKoo[3O=foU,PIn66r0u%--eg#S^5n:)KTe#[#.:
%0o-Q5)6aAb:N`Gm]a.dPO<Nok.JV+fJDhuB6&(4OYQLX_m9+f:MgFB;"PHY_7LOZ\Fp!F_.co'.%*CH'A>6"'(2CmGTb5Te3\]dM
%<mFK,gG<;B.7Q1fR\C],-Q9N4@bU,mO4ImP,GejS0qE^G:X;k5'Pdf(I^9XA'LMpO),,$=d@1N.9&[8omf]7&+Q5^DWeHOu?o!CS
%BEam+nl9m9BgP1C^fq@).4+^N:/(Q&6nF7/`/4kgSWiuRQA+SG@Kh2pj*oqP*VDk\C1Sq!r?MOWJ5[[o8gC)R&hJRX=d,5@KtYM`
%3-lV!#GHf'V#psS!s5eCiiE][CmEpP!GBFAZ%sjRRC0NH=sR^o8$j[J8lGlaQmN*ckeJ!kja&B[6m.9k[duHeLO"eQ.WO]#;%s!c
%L3k-KZa6=]Q=ecA?U^=5<q1nL_cT?m*J'U%NO#:_'W(:m/K0F!BcYsEXbGlUHqT^'!<"!&4$mAAOr:f2)oConc30574_%<_VMU.n
%Y(I*_Z<gu5,^tn,G@98Q8'<S)5b@$PP`?&8l4C0foT*KJ+:cbk,^Eb:&?SVI"ko;:GrfUIG<M-;PJ_@\_@`N=YZo=$5bGFF$"5fB
%oTJ)I993.@!$66=,Ig`oN64bU;rgnU1^;\qKS)!s6XY]ed-M%r2Gb8,JiTi^mE!ECO1NCMlLG[CZKi@8$(Eom3Ud/KVGB+\#V=Se
%6>Rsd-idZ`?[E3sUWC]O?t(""(84J`&rhohV;-L96$ALWfHZDQeP)-3NA<_kKjd/-/!pT$!m3AYa[T/"%+P^P3tRCe=Cf.rO[F=I
%6pc/@WeZGth=M25:D._F0s#:^"?Unl6J`=$r9XL/-$<[SB+EKOaI6'fF"j+G"Y[oZMe#)@J=6:,*biSK#Om3-SY=7n5XtCi$'I:o
%V\W'[)uuC"SMA)<#Bc)4R\S[[Ej5mlPYoX:?mh:pJsZXk7$A5$*'\'b(C(Cud!\s1nj4YmWr0#=r;r*5puPn$6Gok>QU=p7ioqKJ
%kiG][8AWIO4$aRn4E(_p'YD"V3H6"GFUT[2jDk6M6q!RPE&dnb6--eBQNo1/XOqt("lcV[(*0nIE7hPWQ@g%ui]%gb4N`jMig)q?
%0;9PE0caa@!]g;-cAMu>J\mokWZ[08<'\VMFW=]`Jm",]'s=W'Q=DAX=?9nOPgsh]nB1:11drob>-/gH*;VoK)8ReXYJLRD#ul1\
%ZpmJ6#IB^l[Nh&insC<KTgSIH?TQi";k=id?X_)UiOH<.U`>7/H&c@O`ttD"Z.u<DPf#:pBZ[h*L6$al?j\G>=Z[Tc+p(BRj:n7l
%1AqoZ*.a\!jTIl3J5H(=3d<P.dZH>S_9"FSf22SO#-6l/p^&0%H"P6X,*Os6#eb*_9TIgn,T-'39+H8;@74aeh$8@]^deZq*.DOJ
%k70+A"\hK0ae<c<KRua$\H)::OLui^&.9O>!,6tDXDm5S%kQs'5pNRe$=PG%3@<L+cBUX^10+W'XN:e&]AWfS$:^%E63pGY_8q0o
%/sQ_[\OFWp8jk5o.>Fo&#SoE5-lBBdT^i_2dt1!uH8n6c$Pkb$9]uPK5`o,#Fg"?s:f)l"#nf7a1I8Y0"GrYiLtg$riBX(>L<QlN
%L(c`u:ujl2"<ToRa%A"aN#s9kli`-W1>9J%O@sRAJK]e:PfUGLJrmlK!oG:8jJ%kf!dQ@1AN'[P!u7B2Jj0_lP0?MeW.Dj*U;0ZB
%AiJ3C-T_llO$hlAKQ38Rl^HM]0nCANKc(n'Jim?`U!b@Y32A6<m,%qi4E2MsKcQ4S,Vt/qf+df_l?MB_;FVZ3r"?A?$0XA,QV^tJ
%&T^'liD1T:,K'+&j>[\RYHl&sJgZ@PMA^A<Wkf&!3/2*U2XLc/N\1pe.Bm3[:$fS/XDorej8#-ONIrSco+hID*(&6Kb&CchEj\Ym
%`e,PI$.*p)1R-mX6V;%Q5gp3!%R-"_-(;QQ3<9)PiY;kW%YQAUpM+6UhD"&F+i_nIS`lYRln[](TbV)<(^JS&pIaqo_4O;%;%,)f
%_Ar]B:XI'dlD[YqikgbI@Z.G3Nnn<jOm*u-@".nS=WI!_$9;kkYCJ5mIT=B&#>kJHkQFpkOCT&**.=cG;s:I&XZ.IOR,Xbp+eZ#(
%MSo1^as]O6=Nf+1'gQd.^YnVo.V<?onmir7\C;IhU5=NC#Ku!1R!9`f8YO)=+c)73'.!+hAcRMoLJa&HiZKNP"paTFifOi&'LWoH
%TI27E3"Q@m@"])HG`'R%h&)"Mdm`<0!/Pj9L`\7kTF)b^`Sr?1iA"49dM+f+8l[X_%L77L_uS_/N/V!NEIo0j3@tLQb.uu/;j,Uc
%EPiB:\^DgHfPh[-F<*1XJ2e)c5qp2d@'A5d1*!7`IUZ,6&1g1STTKt6'0Y:p/KA2(*+Ofb<!#Gd$W]4e3>&R8#SdgZ@iW'&Ka5Es
%(81/)"atj<#nIZP,;A*7N?`gX7LAh[(/I34+Z'2hJd!A]E4ibKKR3`\T-/f6$%EP?E2ZT;q>!=,E%G/8&J6$*gd/B.V9]bE%Fo2m
%E,bRh5H[.p%aI.B"@34sP>]991'Rr<P?g33>&h@Z:r#Zm#/gbn"B,?u:/o2Z$4<BWq'JL^R]<,!T(QkY.9ro_J-8@_06TbQ,WUg:
%#B&143/%It%,HpJDV->6@,Qdqcr2K76b%sn$J_<DgO[.+%'qH<i:'E<.Mnk1#;"\(EW)-s)9A:0_#Q-%oVR.cJcIa"/ZT08PoVna
%!:\/!8AY<q"fR''_ljo,0mW.,8%'rA2`>1@(ih?1M?mNSrapeU!e2T?X7*RU8smDC.ofE\.iUPQb8[RG2Ko331U<iYS$>5\Lu4aW
%!.HFqn@kG?^C&c**6SZBGK$e:YRn$W:pr&%:9_GAg-$>']*H\L*u$=s=Pnep&7!9P2Af3Tb6lh05u^Md:LUKr8)X,OltJrd"uHR2
%KI:Hj+JpCg#,%VH7bU\?D^PPE'<#irg!NA88Db.n>RH^I4+sI7^KA>JL7BJ5T\^GM,e/rD^jJLE4b;Td@(npY,.0pK^(#\c9=T\r
%.b0qR!@B5P*`5EVOH8$&XI&$^91)b^6g:K[hi89f']Ie.9$^=aDd[/ks"r_^6Wa^cT*`0>GO-FgFDl\.Vf9rogtPCD6G`A=>U`jM
%]n(^No`Wt&Z#`fn]chbG8[JRh(e;#s9jkY#QD=d_#,T/Kq*O\l4@k.\9k?$_oiA)#H:,UTVH=5'2m*feD*9BN0k.*(/:"K_-XnNt
%2mbgb@fkl]`PO$Jh@M&cq;VP>%27YBR\&Yu@/\&f0Q1<dGmK_FL?4Ckh@N24$qubq+ZffMiWZ%qJ=1Af'-qMG:]*IPK!uk)YtCB+
%H$:__H,n'nH3*SC'?%M]%ZH7l#Y-"UWjbqgN]2^f@G7FUH"24Hk#"g&]]&;<,uYq)BLpL<!osgf:,Ucq+E+&bJq:^WdqM<+B<FXQ
%q7+PK!-uJ%,>8jN@%t4bN8oo4(C#dU!u??_i*++iL0.1u=GC?K`W.Ja3O0[G)^-sjF%(&\0eO.\7tTc\!(iT@abKk$+;:P,j*9TR
%Z/^i7_Ao?-:LUmjZ3G<.)9*V*C.^&u`Z(CL`]bL6q&k:ido?Rk)l%9_qj(['+_HNq+t#)$(pm)kbRENK&SW-3-lBrC%Ocl>:LLgi
%=PMqtiXH"nMbk++_O:gS"i]5"/t\sgh@M>/:/!tD`lMf"FAH;WJP91<!oo9FEX4nS0]#@91I&_G`_U&INSo%+"Ul*&isc\Zp.o\@
%@:G&#/MQ#mIu`cF$KR0Y<9QppEP/RSZ<Soc(4]PHI$>'#%9<rAS/m0n_(:B(@_qT;Ob.`k`Z&YC;U*Mg`OeU]lt-fICmAMNn:lCl
%>s[t_Jjq?mhIt2%1UCJ6_b;adD2R9]8PjX\"N%cSL,KbLDaZg%jDtLo#.lD9^gmF`#g/hdDoV7c-ll+F1cp(D<-ZG'AjPki!Wf)P
%GW1"&0YVbOmKTFo,i8qY9PARei!Vj=`p3&HdQ/Rrj0ThR;ogD"\,r$aG=*-bMJb.;m]N/Pi>ChlCjLbmbHTf)/3ZphNnOqAcVWA0
%f77b[oLtY.=@AasI2'!A@c2p91c;E^,Ug$OfhJYD,Y(SLlmAr"c\6)<[N34_0Id^oYlM9:o)&f+2ioIAS0>M,!7cAuZ5X)Op>$n(
%Oc1/\!niRjJCOr/Z5Y2k'QjK1%An!,PSCDBdl.j!5Tm[I8do]%6?Zka#R4lKAiF7/&29P\G2jcD`p!c_NTA<G<+P3sR0.O7Zl9Z<
%;!=9sG%2GMidI#XO?%qc5eE.F<Ad:nD@EPAO=CJ%`X5QKs!Oc$n9e(UaTT#@_JJ18"go9g7Re3U6M0V:RK@].n3^2.)7Wo2E<Wfj
%#_CC44)?iP.<(P\]9.Um2Zh`n'IkOiic_)RO3l"^J?;H+S`"[di<oD:"Lf?#.L]_tghrbfE^_^#2c9p3@79N11'SUNE]8/2$,)#I
%%0S/r0gY6Il8BJb+irK83&$XW6Vlg(F5N+lWVg8cWhYfpjB360jDNIg"D>=kG@UD.o,Ru%`X$^u+q37d'Y4YsE&Ws53>]dgQmkF)
%EP(a&$1qZEmA?P+8'/,SGQ`dGf*n>E"c;B6ic_*p83m._g^VFr_2n`R9kFu4M&epQ^c4[V``:BY"$_8:geFZ/`+UM*ghjG?%HDVq
%TuHnhgPs4@.UXY&9A<E;RM4Io'GegB/da6o^6lc!!U^-qK!KHor"3U;PRrb_h$A4;g"G/#]@!oX[5f)5)\*ik6l!2c7]E(Dic\hc
%(e+]9DDr>aUpqbkm7,JFM],9.]9/&HU>U2.`Pdek]rj4$)?hg,,<62?g^UDWat=CdDMrHW=Bn_!6,6bo4M;&?2j,Ct-7+'u.&:1"
%]7E:WpClJ&+K*),)MAK0\-.KeG7t.NDBj*ZHmr&9'B!ctOco6eEP'&`-kM4U[MrMHR%bn2h#R"rHrLZfJcCQKXs8.C_3#_U9Ec[n
%8g%X!mM$p@BnYjXWaX'e^-+_(clr\]:8*HKGF]k]^IKHZPHZBJQ5Jq&$J:oZ;S(k1"([s2lT3b>TF?/en[hB4MHh$!W$PB6\:SiR
%@05$9W=7?`puPQcDLfd%'XeUS4%ITqct3D=Y<^q7qZNd#M$27t'1^IX82hZ2\@@nmF<b0Rj(tIi'MR;\:C9EI&?&@_#ga$Q,KD89
%F@5Ma"![Nq`UM9I^iO.fSgN[VJ:^.r+rQmi0OG(sFN!<22!.'s41*<V!Nh0:bag?G=,t)O5f@Fe\D0=TS>Car!\c#1Ed(%8cDCjG
%ToTm!B$b0=T\MfJ0Z+2DG@Ht/+h>G/MJ2&PadqN/%uB!@=bgtV!m$q.J?n*Q"%XqS4A=\COifB?(b,NX_g9*"`n^o2<h!K:-d`>>
%MAtor<4Ipm0bfOn!lU(lWEA2AEO`gk:K@IMiJ,n%HB&XQDQFCUCBrfnOpWcXgb9kp31<*Oj04&J$3E.;20&d"i!'5ip*9RF!!FeL
%2J,sDgsNUOIQI84Q>dW+m4;!`!SUTB0L=P"W(P3RB&N(#`?H!k]1AdB$1)h,*-/7-.VXbI\ddVS0i&t%&RJELTTH&S8J>aTm385V
%'>WuZ(uGD)%;?jH+V_S+^_On&@fj,F%3$8jD&`+bFJgqI[f/J,g?qppg'2pE.79($Ck[j-':eG>peq7#%6CJG/<gd!nbZS+Yet8Z
%R<0Q+l=$bj*+63P_\2b2?K2p?Yn6:q@((WL*CG!K>mG%AZ_,$L_`LMpLVR`X^q^D2Z42['*fUKIG+0aDZma!R%La.V5dh7+Ta2oe
%c^b)f'B^tjgPCDW(pBHe8m3[q4os?V?,bS1#2.#VJc7t:fgZ<W"cje\==@-\6,n&/&ZOb9JS_M_:+%Mk]ha`,1d<1QfE>_(aV]gW
%+PUFmoXR>(UUcNPIZ,E(BFi#%-3;eSD<C:pODR8#_uhg3fS28VbY,e)mL$7-CsuCf>Yh(uJK75q/&jJFE!B1aUIg-rWHj`5D%pJ!
%-j14,&DNRZMgT(;YmiLc#WmUiL1<cY=9>`:&g;tI9d$mVr2W[0E*cE5(Plp[odJlGlO_eQR3B#D^b\%J"C`;u(u[A=fLE@ZeBJ/*
%gEQPUUCIhn!^mA?gR01#_[32*-pcM*n3T_ZAqY$RB$/o#+DaEJ*eL9r`&8mC&^3E$UK8r)1r\($pc']4J1:YWi/[b?I"r^+3>6LO
%Zl^GM(O0f(+(:7c^hY/@Y+f\F2:<j,//A'!N,jL$`p]^L`$;oQR7%JnL%=\k+^:`$CY'aikQAUYA.tZ19(95]-4O/;[5#;7&WCm'
%f7lUVj=A39#_G=h>:%YMR56!6^tM%AXspm7=gG[D<]eJV)H!n.254"<Ci7>r2Ct6LJ67WRli^3JF,_nCeBV2pa;Ien!85^'1uN(8
%7A.MsiTOmnck"$+'\G9.3?s0rLo(WCBS]_5B\LRdon(#e&O_U@eK%7DBh][=dY<2T)!rS4g'NWp@\GKa2?m)f\0</"@(Ia[,8c$!
%kSW"b7"N?HJ^=UN+W=Vh5s%W]h?6(_1$0s>+el.Rckhco$[d-='GE?Xc\>7LapVhRC^BCJjDP(F%MB+'_9Rf),Xc2Uk\R?g`oBJ'
%%re)W$>_W]-POW+ULm!t%2-`u:oc:nG(Q(j<6>4$"FQ$36IVHT?:,tR6,/@tfobl%'J2Ceq;pRF#e)gJb1;/;Js;6%#AUs]PRX<>
%kiA8lAA][k$5LHh8#`RB.+s\i7^]BgOR+CZ'EXF,3e2>cQJIi/7RS8V&D?R$TNsqsZJfrK%%3*[WKFOVV?#9lnm_]5_8h;hi<^<F
%C^A-4#_=b(@olP!"<>$C.DNsVfJRXkn;*&56.-Uh/'uq!LP^`o6,lC89J;(IURs-X)$qp=AI!n*@KSp1Y/=_DK*>[?";Y3h+Gu$c
%JSAeDS:G(8/CcEk'Y=^tWF01:Z+Q-Zf\kb_I.="=!.emH3,MWc4BIs9OP!)nRtj7<>JqlNBL.q@"673k0X616&LB^sYn;HnECL'E
%gM1Sp#q#Am,D0G-KlF:"'\ced!1\XM,L?_aSUb1Es#Vp='31Di#`'$m5d=0k7"I]jZ-hfpc^hj\Y=k>?DYT6#YsIG)>SjoF@b6JK
%'oIhW5Qb,<=Wjt8_Q\u]h4pa\+bY:p!Q51oj1HVT_hQL2QYZ_YNN'g3X[P)5b)k2+ED:W"&6H*?&J2ii\u@Lh#YkMG(,YBoK/^YU
%UK.t!8&If]%Y>&k$ldHjP%NG\XjO(>nDF_0NJ$hr@pu-O*k8N<oTS@9'J+'r&9;HMX;8h_2^9.tVQ`mn@0XWhR:iU+b$`joR=J_`
%-OD.i^p)dd@X/.]_Zooe:pS@PL(.[nr%)7.5_2b@Kn<a.aNb@K6P;'YFGO*L=P*Un6)BhQ$6*4-`_E\AEGW\r)%,,5M&Cl]`q1'X
%aWhKX;?I`a+Fl8@+?*aXCh/<gJhqtp7WDCHY=T,,PhrQ6fKc./L'\PPlHr]C9<bWPjofu;<MiUn6RcmV$6'^q(K-%*#%a/7?N^_*
%grrlfCkTYp6O_tF#S]13<`JdF_6=N10(<pD)#5>@JWaO\$ld%H8gP0.g0l@bCD/C<N-R_D)hVQD_)(_+U>gE[&@k:ZCiH$;-86,l
%7''4Q/qLlo2RI-2-u?i17.Z7#@ABG07k4ks+Og3")k4N,KsQZD*B\7nc,*$(TQAO1RNQ%624H:M)$q6m;GmW#$6-&XA7(fk@2!NX
%FWCf.@i+Ar1))WE0GA:)Kh_*1flni\!Y[r.j!9>$,+m]u'K4\+"W>!_C6<'Z8YE:b$RMnK&IP!IQ,\"rCn(ML=>1FIfYn[oA;%f(
%14L`=@AEd[#00Qm83n3D":?*h"LZ<If[u3bKV>WTF3BBb*=<`#,D*K=XAOd//6nAQ]j46tTOA@AL;SbL+G5ZH>b_U_JdY%-CsY#\
%5c>-_k[agN4]"U-lqS<UCfC]iP^q_sjnMTuYUs@R:hUiA"^j`N!+DWEP=qS@LejgI(*/5<J0,HT/Af4m=!V@0NB#Q)L<hrufU@s$
%I"I!1D,=f8!+Afb2:N3R+De?KE9R_84+Q.fE0]o&KT-PC#2RW7KT48)"O%E"CqPZ=D(q8*$7)&G&iL:63d(Z5)_GV,:bk>R7QV98
%2@(!T;WrfZ-u:/*'Z:92NOs^iFFh:u(HdtpAghIL-W"^H":?(k_uc]";o0&)LGKan+YCZQP3iqj)e2[6<5:c-hur%DYcuOQJgK>&
%=P,l.*-]B=7LF%!?st8`_^d*:f[qE<&.'+1)I]j@\mSsAS]9_*-u>,u*S1F&@iJnq.24[d/I:]PKYm.fJ\oFiYGU$IY]8KV:Ff8o
%5c-=b:tS%,cn9md`\n[>21`V612`LF@2$4\YoO2k@j%a%bF&!YZ(6WS]fj'\M:dc=@A??6Z"Vt0YgG9;/5O*d0t/%<-O&NK,S!69
%SUt:Fg1:M(Q&$$g7odD/$+j+RljKj8EOBgLP\XI<HdF]jj\8uRENhU/ZX"sf2Jb<QOAZeZ`'rgc+P;Oq/rG4NfHRF/fS+;tV?kh.
%NK/m*c&)B>s168`SA8JJ[.91u,KsW9^+PpO1W@(_]K(r'@dIkm0@:*u2$CF^211"'/O773HjrASaQs%'g2Uls"SWgjKXAk*fALp0
%V1W*L&$,OAb\P8p64.uIKZ_8R#pBG)F>gdUpc68*#Q9DXYG'#DAqfOfX6@nThDM*B+D.gm>mgXt_HhL;&3`ClL4Cp23=+1n7Qc;7
%,#HmA:UPdqmA!4C%!1g4K!V+TUM%c7'p*5#N0@b10s2\g!R#3c`jKI'P6o/b&CJrW#hNBL'a<P7]O=pgHNJ-qks*^@G\ce`OB0.e
%$'K,/Iea-%3`Li4(MmkD)HPahXcnF4:6;To@h],PCP\->83MO3L<:#dapG(j@Z<W=Xl4>W:bA'ccnX8Q-BQdiC/GigSrc\iq9IM#
%BFOuqGQ9+9ekkE=cb.%r6^S=sQ\&fY^2Oc^-XbN(U`%=k!=_'ljH\Y*__5,FBEDZQ8g=u]`#=n3\>4^b%3NJK2\QU80]6W%#::#f
%N^XWbCPWLC>Y)@,=MoLm1n4$90o.0>h&agJ(`lQ]+1c7KS2$r"eJQ@=aK:-0<t)Jbe=o<3!u3UR"h@ff!X-"o#q"U6[i.p"Gg\`O
%-gd>WN*>TPWF1<]%5FdU,RS3B?mm7KU0q"lL(p(A<[22cBJ,6G*<cX@!3:YN-DN"r2,H"0?f7pba9JbqJlW?<Aei&6p"MhL,JgAa
%OUe(!"f`Kskc6u!i%dTFTAWZN9FtMkJZ8>_+uD`fp0,+k6)l(AKeQ4=UDgDt0T'\bW)f-1JZ&bS4cAY>"9O=a9G"5;PQVPJC&mln
%?6K$mMU+J;VhUEs9"a41,\VoC(4fDr`0Y\":$j3B:nXf(/KD;='m!'%ME8SM#%')K)1kKj">#*hYgcE_V+sjdRiF[Y":@aAjEr[/
%F[Z5:$:u8#9+Hd-n8P$*=obP\I&"`&Jk$h)f?],A?O=r@*7Bd8%G!!cXA@3A.lq2-6G]T&f7@!Sl:`Y3.o=a_26DRS%.ZkiI^K?8
%RU]s-37J+S0W)^N7aZj.Td\CoTpJhHVu`(cCLmbUF^[F0&?*Pl^Oe\p0j=uLSYb6IUJEsC\!s*f-d!e#i6rZFWS#\`E`dsc7RrBt
%B>Wcm-VJHWiI"a&h<VT"O:?tI'EU?*LRU.<\hqJ?8K6rfe"27D_45Zm,m`QgB(@b/[N\I6`a>Iq;j=1F+,X<)So8f,0.q6-_G,*]
%\tDbfZo-JG2Jk-t+Li/jBaS[u^4T.4H'VoS"`,(Z;N4L04pqI!V'0GC!/7F"$JP-`_#Ebe!as9+V`LJF#PRO6fX,&(.FrT_%$s//
%RKe*A_/V6Y1k:9VQ"^GkNfjW/_3kMK&<pZ-Af@m=aSEt,dm2"0U8pf3Yn<K\VSVe\&R>Gm%IR+C:t.jVU?!6!SK:+)OeX[N1_d#,
%pS,Mt(X#WE9LK$@kW64q[:GAd@S6e<o0`^c\k6ZPJX-M-?-Jk-+A5eZPpHT9)Ud$S2TX/$&*O[s^e0s1KsV"a\o=O&U.#0k#@]2W
%5c$8(?RRdOri'@!.q&K./Q>0'#3S/#&f$pM#Y[]^H@dLR!QARm@VW0,)G=blrRVWT>,[<)NDS98F=?B)kU[AmBo&u'JhIQD<K8'H
%-90F=O:$r!,V.F)"[tIF&=#LMkK*)@$&18ZHr1JfJrhT_`Bb'2i>sF5Z=6@kaD"3I+cQVs3eB1,bACJbO=gU$`V@i7Mo#dL1tJ9p
%E<SNE0JU[`cKNXe>)GL>#*4KU;I%BOG-p7m$$8"u?_TWBOeW;Z<DS1@+^9k^b[sQpUf+Z')\(TBZ+7TD7O-IZ%N:>!.o%go!K7uV
%fd;g.Ff^o9*"MML&JUW6UG2es`>-%!5X[sYR_V?ZC]Pi\0Np<9Y4X;Qd=i`^"Y(F,ifp7_8C9,aR/@XH=s1Zs-Q32CWP&?H>s/?7
%:LU!V%V#"%TL;jQ"VQp\Z(m<k?,SrY&CH3e@gWGmggQ'N%DfXZ6-]2OJCXp_WMn-'0R2U\*?(Xc&0"TIi(^BW1c0s;kIQ6R%5'2b
%F(J`mp`71-)&G=QW?sUA6A&pPE%4!O;]5i?'2W@]Z6=\Z";<gbb3;huB[F'tG>pi$PqYLXmSnpp:5g3iR)GX=>>:\%:hZeG5fJpi
%Xb"EnA8Ohj%[Fn5VkDCecP:^[d2rU>P=lo.)AF[AB%QGY#-A<P3!Fs>jXkMH6G.M-5_3nV#7[?9#VmoDd"(+DV#hJB3X[Y;!!\uR
%`(RA.;9R.k@mM?@XS45AcmZn:gQA-t1KGc7e=BNE!J1M=)rYOBblal".1A$E&?1)0!Y%+p=O:&ETFm?`q@3S?.N+eiF4k>Y6(g/F
%41G4hdf09Q^\apY\UMO]+X$pGl'F?\?akUC[BVoA`:PG#+5414J,/Sd043_r$N9A6mJX(%g=Jjp]Y6SA>!?/dO$>IZcT_9B/AD#W
%_[l2*^Jd[:ZhVl?e,M>[c\o%&@e&@U@i!DELVEZJ_[dga"Rp+5rkBtV`0;_:QAMN?6pm5^:+%.@8E>h=o;KB<s+5%f:sf\>ANBSf
%Zm:HAcOf+D#X45T2r+I_BK&.!"YE@Ym7q0]cop=;2+H:i%8n:q_2ClQ<'M<6_SI-PT2#Q$%[;*mhIMMdNC1>Ggd>r)#BoFf3ErQq
%TRH_uo`3jJMLY3X,e?l7Qj<.+'h\#CU&sfugbWc-daIBGISSuT5iU'8aIc/aYK.i0),#&[HQo2:#8E"3_a7^6JEJ0)'gb&+H3VP:
%%44!<>R)/$BP?mpq)P.$2D+QiML8oWM*(J$J8H:4Xr'DLS'$)?^]8R)F9geFm7$!u5Y?=O%0AdF,\"Ojot^#Mdj%T9P)Wh)7>O;A
%OAnM67k-:AD*(9Tc]/r'&[Mg!$#sMliriFE^QO!r+<'c?]M,QUg&l8CrU<kOrK%/\A&*R\a\u7U2\>3cP_rD5f-&\`BDu4.^TQAE
%HQF?'bBY.PHgc'aRp6uqmU-ep&UfcF6n?6rZ(2<@NaS<M]4S\c)]YB1knoA&Wq7##-<aJ^fI6>(dI<Q2lZq9Y$ChLE;^"clNF.R0
%L)GTE8lLTA.`;m?U=o.7\!EgsDVXk`m_J'b=b).eWT^Tj);7(8XP[\6Ler:TRG``+ROlJme6`!k[O"VcgHoD)*r<,kL.;l,=7N6p
%8/iI=M.s57$mu.D,.fFI,LD[>93%'-)BC"`9'Eo5LEc-G82&@F=0%_o"0s+f-A;@g^Y&=@I5#BFZ2s%%/"o$ToHrqQ=s]UEnJJ4p
%_8Km[TXAj:CDH)2TuQ$53u'd\RaN&Y8Wni0HV!lG_HSpYD&i8lQg1fE]HckU"HT*gqc`B+`gI[>'+:DDD:@`N0Zlj%83,(=<I+(o
%'"dfpUhk^l)t,k:V4Z&'1'M&?POl@+T\fu\GlrBRWR.uV]Z=q4Z-ueNl!K!,3rBT6rOEQPX)anMP<0OJ9S(b._D#8',,3t:alZ!;
%a=JRO1WnJViJMk*G^=mrkm#!ggX>^8W[fh/!3tI"D6h#ZP7Uf-dC6(bJ&8O6-$0ZL$QnV<GpMTrU4*0YK\M6:82.?L3QkY]_M!48
%*FRnE:51>Y[`GGKI<^hu)RK!H\cS9Z!F;Fq6k$&g)oQ.P7(;Pjd^'r($%i%1h'_GIALk]4(E:CQ%_MC27'[3<akZTdhT/W'_'qai
%@$U+H#Rh@cO(BLQ8u6C,d[%F$"?U3=(+6eu$uP&=nk(kKlVp'!H-Q9gj4PB66uhqTQ:)XH.Z_\<4-aeRj_QFlk_"e(Do4eNdg$[<
%,(bJ<^''9*F@\)C,f)jVR1Vo?8[-?`S$'O[K?I+2=-8s]1u:3Fo3pm@2=`-Qe"+I()'(3]b$sJR6YHpe]O:*+]XJL4.(Q0G9FRN\
%m`'0-*VZg1@Jlt$%aWZ$8%<uG4I?8`G.ONBOY>jcH1qd#4-_I"VE3moBje:_&V5?9+"3jnEGi?A'@0&<O[[4jBd\:SI'(78;isBC
%RKpQqU>1F!5Y0q6pU:J)6<oqrG^jMZEsrgPSY"4LZL)II5K<NL]8+t?+Eu/m5!43?Bm<@R>KGDfA*6H3:<&sE6a-ZXbof=C9'JgJ
%O"2Ie,2dt&4$0],Sqmn$;'L;!AX6c78l$'4UD:nEIsP[.j*>@u'sD`[nOjZT<%IMlGV+d9X2lU^>VT+=L*g\Ad,9K].k0_37p0D1
%K7Cdq_=ArNF[[3]AT+7lEFfpG4'GY^630j=d:s$'D:Rl$=KK`cLk&JSpPXh=n>]P6=-4`.cZ4MMo)-_,T"K%O-c>eUbD81ahbQJ`
%.\iKSbR]n(q/D^_Q'alRi[DiLRq71KKcY#0b-*:KXGgT5n>tmoW'[iWj`?[@;WA^V7sj=XRGfZI_ikCaL$*S;2C^kYTM#uP&Tl`m
%q*DH?V4/3VKBS"@XOdZ6P:'gqUb6`f1(i8n,;$5:0a;%[^#d88$5ARcZTMRIq)@)RjUR+)\k5XV8I)1<d6h]ocpM@:euQXo-#j!W
%.tGL`*Y;]bM)g?BDkO/TPAXEs0db'f1&2s1beb?Q>t7,<TmGt>P(Z^Uj2nWbBN\LjCjSNY8S&aVb"eHV*AE20/f1Y*Hf6^l&YEUo
%*r#%lgjWCQpmN_,#A9HsTT.l/gXiBB=:2^:=C?]@*8O6>C:7,GHHl;po!*rXBVTBZPR#O?p:c6G6R]W':cB9FF=*mf#L#B3D86[N
%"M-9Xl:=2fj.+1T,.1F9#iX!\JH<be=?uIe_1OFGa6KCM5Qi:jk?)+h%M)]..W*\<FZ:Vo>j@gs@qU(9h@=$D=j9.S7]Kcoi%8*]
%Tl#r%-36g_IRp#.2A3+t9NrS?*O$tfH4ZXuOU7BkVeXCYLKUFQ4V(#GOcJCJ6<*U[&5(N1@H][2jcN!_1.>d2T^9b6AW^`UU^)=<
%XdESUgI>aE-ELR>WZ,#03`[,u%X5q/6aqM@mBAWG#a689:(K`BE]r3I7_ls8VlAu/ed]RB9A%u;f,#S+%3)W^G@/6^S5'(g.jCE5
%/-ZX]`[a0V+gD`u@CrO<aR]psgFS5@L$^(Y81071Qh40UjkW2bG6ROK<Il[;\jPE]H>NrJkWH$t7R[f^oDB#J%5l9n`$,c(oE?^S
%N(i:4MFXW:M7EslcZCX3*ecn(h)7K-,L8g)@&*pOqRVic#8+s<]fLRq]\4uHG$Tr8d2*4ib^\'6\[kU+M<n8?>KtN9@PJKX,"74u
%MeLF*=R4ZJ:PC_>!)V<Ki@U<Eel<A`Xb9M4Rtg+?dqe+>3Hh#]+iHG\%sucG)-$O$Ot'bdO\A`O,)W3o/,,\k=`SZNZep%p3j@0r
%dDld_V5<T18D6:/Hfb75<J(g<+X-Bf?"''p\+CnPOWXig&Z=fJLb#/HrX+J+.6Id,`u(4^.W-IDfmSt`[P06jp3`TA)V*=G(,pNg
%Oj9h!bc_KHV,?=a"S+&N-9<"f3tF:BXBu<ZF?rVodIM,YH<),(/h#3pX9C7LO#+lOOdOXm(ra#goMV2CU#LX!T(NgU<I0Zs[Bt_o
%r!d/b@0:g_aNR^@i4iPHSS]9r/AOZ4<VU0GBOF/9(*UGPNZG,jB<ssu*-re5(B":@-UdU7ZfC%l%j="U>9oa@]4KGPf/DACMfF@.
%n&;db3J!9M`',1IJ5;#''k=gH\q*EJ+<t]S7jT@aq[FS3G=(^oQEq7SWKsdZ*Bf"B,lU`9@q[+9O^A2FZM?6(j1DR/AJWgX45R0n
%=":*6"F59Lks4I3&M'o%0ea2Vc$Z0`h5VIc8Nl[g!FM`O(6M#:a"UglnU7sa%0cL9X6>*;Y(YJhQ5d:L4pb*,N!eEup8jS:6p_.l
%]h!q+<[CM]cr\O'IT$@k^(S"QWZSQ[[j&tJgrN/q:^G"A7`CrMatCWm3g%9*$3=UWeJ*URp$:5EZCm*N"Yp;*Z6sZ0+g0$Uf,nLh
%/+ZC:pq0LN.*?Q"2+8\laV(k#,"ob.S&"JId[?M7Z$.<F8Rn&12iL%X#F@#u),:T;GVufeY-UPY%1oX*F'']<L^)jcM.lO#!*tj)
%[L-CQC(jD((0hf0R`V6;Xj^q/MDH%mF/-7Yd,iDeR?H2:\bbQSc(4Q0)1WSmUML`Q`'U-'GnAU6\QaTO`=J'`."p\T]f:YVeHDPs
%-/9j5a8&/Zk\p#2XUd[`!f@_g`9\FEq+Bo)qLL7e&Uj>*G5jT::UCA14g7P7`%$a&$,,Y73#Qn>lN`e+f!e9%>P.k,d95Rh@RQ(l
%hS>_3h(GW!1dgU4]2eNBk]UMGj7'.iajf_fJrfEH1>X`!9bn5t8L2;@CCqm396P`!CCkYef[#P:7@kp!4>Z;5(l&nb3iGC7KFTYW
%?KJjAlR]k(2=eT<^3UiPdCCt==@i)?6u;0.DG/Qh:59B;C^6_^2bl[LDZWU9G(3"#`Kee5#E;-o94XbCI4NI9Om%Z6X_:?m%r;AX
%FcVAqab(rNhq\`OkQ59?88W18e9s]+'893J%Z#K=+KcZ#\O_ZZHKaoE[*;Xmek0-V?V?b`b;>5m!DoRqLCU1+;u%Js\4ETP`:GHg
%#$mG"-1E2nK/Hpb"bAk72gf6iFEettUPa<)p4Y=;J.[M@*[#uj]K./T?3soe>QgQ/_&oo)kZARW<[)!amnOYU!-ZR1.R\END##t3
%@K\WFO#AFaM'gCjCW)hUoYe%<-:@g4d'JjidcDaFAEUJ-O3'*g!@`gA]^J!F%VJ2b`k[Q9q]o)^>>cCS-stte+9a8Bg%?P@R@#-?
%>9F8m>npjh95ag]&QX=\+("k_,%ACiD(HR=Z%lkC.-pra0\.9G?DF=QnMUQs\=tp4VB%MM'B&%UWJ'Uoa%$hLV>Q$5N>BFK!Hq2'
%*l(:j4VVTJEpXm'2OVW.F"29b*9'%GC)28fCf:X+^FXE?\bar?p?WiUCsXYk4\'<6MIcr8TH5"8f.Mk]!;)H9%&2A6<9W>5-mUDW
%d7$(dGbfnH)5_dAI*"E-J064j]hh-6l6-C0CMZK'%s;Z!6bQS,JSqTrE[Yb^YJWknLm:P@b"YhL9h-=ToepH#l)RXbDC?+90a7gd
%5>2%l-Eem909%"7J-[DojAj93#UEkQOiLYT^'8\9N^WA%c],nL"p$N-:+cF)2>-a^7KXPbiMY(Y!sd.]77e[Ab)u1.g!CeY@KRe5
%kl"9W&S*GbkK6I;9118YB%RciQ_oUA^1oZlSH0;^JmMMZPH,$1)2^*%hE`d:?CXmk];WUiOn?a`N]TlX*?m4o;Vo)r5S%!9Vp(>T
%auf^+U,#Faj$\?,m/RYD]fhM'#ZO$pZKN:iQ68o3aA$e'lKUW7<ka$>p`"hA#\-DQmX]&)=Of87F>Wn.CT2Es!OaE"o,`O^*WR#'
%YXh[MNh*i)]Fd..%4-PCSOfPY<--PYRgRQL9(7tf:1+L0ie\@e$<@h+>d-WHd"CM6#/U.-Sn"i7CY36&ZPCpseq:e6fHKiIMihZ&
%&E9@XN(r<]JqW;p[oj-p=N<mX0OA"d0j&-@Wa6f$13^n[$fm-+_<r&fV/!Vn.^3u_jn_KN[@G@V!^5;P_N+@=<>#CbW/Md/9^SNU
%'ko1<#g63rM!1k?A7F)F1\S22`:e*4TuoE("<#Cn?3V_lF*QE;iXO@8MK7b,rYLutK&8if,-YJV`+kP<D3$tq<m]/a'mUM"/=>i1
%M&R,SR-rH)T-tG,LlR`QO:GqkXM/QXPch[AW[SGM5]5khm!e#>"NrBS%"iB(J"Bs+;$,el<alb1,K6\`/MXSbR8N&uU5M[#_k3@<
%:K\kt4V:&E[40Z;,7)^P7bF:^4c9n.;t(`$,Ke(O=U]jpXUpET%tUS"'Qej6cOIO5Po%<[;dtR)195FV2PYg0M4Q";>3CRl=XV//
%R5BbZR_=J-?3:Ze:&t%,OiFK8'2_(8j7jYt>+i1?C?X1Kj<l1j!XPr&$o0^#,bt_0Ss,S:Xs>8X7_/4e)0\cm]LHMX54fnT%Iun5
%,D$cJ+(l2a4BnkZ'MT4V&\/Da-.FGSlL9Yo9IV5nM<NS>!)JiXQ%?>LP;I)+&WhW[@j*3S1IVV]#C=l"T>4b7W#lsH7<?bf5rTNW
%<?do3_E@iH#E<;3!#MfD2OH.nTC8[50Ujgp,CuTc%Buk7lq\0nCBE2hBWRIH!8KAiC-E4M.le%(W]`mLCmVQ'EDZ%fT0klHN5F]]
%<R$%]<uORJ[':DJ0k;rn@`Tp(9RSURVbA"t>:Or>^kImF)atBk`^tH4Zgr7%Q%St,rAqAu,rMD!lp=^<OdHiAW;A$B,Y"&;G\p83
%:sW-!HFY9j5%=n&SR+Zd1G3<76oYtI'6EN4#(K@5`i'[EAs.rSi6p#0lc,tt#N_%-^]6'#:#a1D#F8$rLWT\X,.eIMeWjR,A^tE!
%b-$Vg'[R?BaGQ/PWAO$_!/?1dK%:]tR'I.1Zg*qN9aBG^]s&>%8]6]Y>"6++GAH:LW'0tqctk^61.q`nG,p@L+Ipc>-^oj17^Rs%
%*RhXINqAbfJj6>(ADWY$+,GcT<5OL=BE9T8,JJl+O_d;/cH3so7`&?Zg)Mt8U11B@&]^o+H4jW!4Oe2C"c2$:LS>,)MU7r3GJ:9r
%LRK!e6"==VOfl#(@Of@!Si#ZIkUl"-$+-%WPc:Ym&]M-\%hUI+U?^$G,XTqa-&leqn-:k?-T.U[^1?&;PNe@[*b#n>04C=bn]1D5
%QV=Z"26""6;^iXP6*_JWb%ltTr>*JW:ILG]l*9G<6iaihA`o$6`<>Qr/i_NLYZG*7GcZ2rd>9>e`L.JjQ'2sr^n$kF?hCG)G#4IL
%M6)R8[F0]K=$[<M4@F2t_&k0j!-D7PiAtu4$32r)-lB0l$F6kZh+1?j)RKTC0%pEAW_>6!L:\WNO;b_BUBrFV(S,eo'%U$E2mKA.
%GmLf*1^;)[;(mmYJ/Lq.!hp8q:i^\;H=;=6+`!3ea<[*?"N<qp23Z/V":e,U4A=uiBntI1!l`*/CQnu>Nj]!CUSRIHWi+oG'j2P[
%'YCtUOnZ@bnR0OsL7R`70UaX,2'WTYYT.9\:MeBqX`-)'k@bBg6[GID8$H25F/,U-QQA%&8[`,a7of.Q+R;0$R'V`O0?!Zud::N=
%e^kskhKMO)"ol583Nd=SD5DU`]"qB6$Oab"8>a&\GEo0GRinDD'QGFP.:O,PWS7UckZ/TLFqPNViq!l5c/I\cbtO.Vmb@p.)Ocpu
%fF*uMFduDiTLh1nTP=Wk"EA`SLpS\f\9Qt#L@YNU@`$4p?#&XfA51eF8`MK`<q??,M;AC=eZuLE*)]stRWASaG]eG:OY;s#ie"F1
%gd@=MQ)K.h8-uE`((3]#CfjY+-_)nH#3Oe+=-G`$%49`6&[;K/WD8."U&m$6.aC&LIc\BX-lSAKW.+-eE(l2AE(\'8dW#,GKdb4j
%:S=lUe3s7m:6g[Inj.=<I(r3<[0F!ZB-q*E4h&Y::'9<Pl+okrA?S1`*Y\s(XkABhWKI=D%8bkLbenO_;k\slM*9DZS\_n:&m_&f
%K]A!^a:ZECpZr0M_kYgAEkK"'ed]*FLm=T'7eb7N`$"*i)%VY,0dO:@9>W,N&lJ(9#-bs1r3ZeLc\p@1s#Era"O6!mR#07<aAu[Y
%d)<uZTlKiS=rGsnQZgd?2J^gQmPMMWkj:&i')3"C@5rg=!jS;&"HtYIQ_0%m5'pup6-*`"Ql^'6#&P^\HlHG40k=!D:YiFN(%$P5
%=.D^B*^Uds6.<<5O0TQJ90e+?\j7W5HrPq#7)^;U?LpkE`D;YgfVD>`ad8UE*r7oCMPWhSjAnPM[4M,3eZ/Y`<(UW=J8ag@^]lo(
%JPMIO,igD:57*alPJfu5>C`$.$=p^V>`u[(*2,5>J!MX896iTe$lo=:G[o</!,#<n!9!?Q66*9VZkQ-$i*4"[#=E_n&l[[qHpQl0
%]+02joHZ`kGQ:M#ePH#uU;NF,I4(Ag=r-&)#Fe.V0mCo8j'q)$JGQW\6-X0pZgV'LU@u]Dk]7!=Jpb'ZqV=^IoLA<l,ioV'pGg_<
%pfAJ(9*t,HA=S*:U;(<k-Vrp87[9u)ak\GB-Qd]VM(5-SYbI!BU8f_Em[-SG)H@G^5B<APTY3to4Q]tKL*d4@KsIZYoIiddA!>,*
%Fd-9GLZ5;uIA6$gET3a^WOn#>gI1['cM!>C<\$JGcq8EI=2GsY@+:(VT/E<!\8GY0_i,nu(<UE<JM)hUSY;lK?`me;g,1HnL+kb`
%Pd(Ac4-I%L[Mh*c&l<)[V.NgOqDroL4@RR>;6rqm9^gQ(gp;R&$s9So>jh@6Q:PY+S2A>lJtb[[G(SD"7'@i6PL"#f.=tD01$Z.W
%*&ioN5VtDs1\P/l`EfJ`*q?4sSsJQ\-d4sfjMebM[BbY:b#6"Y&UW<.k>6$5;-D,6Xm8+ejX*"ZkBi"1_bpK^--8hqYOh8Zi$@-N
%TaQB!HEO/4g14%p---P[E^7*:_K?6+4u@KK/&ul:5dZuQJYKh];*+gh-Ua^M<qA&b*saH$Qi_]6\DDkaP0/=c8i@6MU8SJdXO1K"
%`k%ms27Y1p%=1"`9HI0M9ed.Mlsq_NeqSutNs)jA73TZ!Dg8?%U]WLC=X`m)rJo9,$B:]j`M<NAIK2JsH:Y't<OL4$Fl!TAcPccg
%_L<2naLhqkb!#Ji-qCUUY7+c7:LSJ66dfB01qIf4=Msa8"FtWufKGHoLd\p[4mWaD@W7+oA&LZfTd[:2;$S5X,##D0.9NL*4T@f;
%fk!fGUdsWqluD%[)P!a%1A"7i*jDPQ^JUjq@[6C;\\%:FXJULr*573IQUG^X7jJbS8u@78d-LR>WKnS9/.:U#3&tf1b-L(7l<a!'
%)+UP#[!Rm`lCN:KbroJ@Bb,TWn2$-X5?tP-@pY<JA8OKk>\Z6NnWHYdg*@6#(F1QTnM5a_)^N[3L)ts%'J+P*LdESCS<+mB6\<Ug
%JtmX30gJtJ*.roe`2Z'RW<uLUCHm,k&:%W'gqEJTZT^BU9X"ih%ERr..c17i)<"F@&Y'3AgP[?Pa;03erStt:mm<.*[(ofhV//Y+
%K"*HCS[3I[DaU@_)InYq:E=9a>4sdskB+XEN)ub!5uc3k0dbRPG_qQ-V5VLhS2uP4;OTHj.?r=ahEt(hOW'c:Z$&F?2N5pZB&lmR
%@'HdB3j8O3`ts^g&kBK8c,/ZT2,k.1daGXqH4Pk#3(RpUHdG8X(nu'iYj<e;WqVV9!=m4CkSoCkSqFmk(';]gLC?i^SeF2_m<LF8
%8:fa<'+?keBIchR]F,X$m3oZ2Lcln'K.Mir3<^F`8JlcPrH7Yc3)UGF/K28$>T+l?;QR$3)K`#hL/]9=Aj2Jao7PI6ST(;-KYlFc
%[O_M7^-qUN$A%<n\VI6r&PU!6`cV8mE1GPc7)d*eh7!o+,h.':1sHp&R]_F;BVh%>ng`h4-7G7T%(C6q)O/q5(X^])^u&f1QbDE%
%>Ar%@!jVtmIR&i!1f,GD,6=`c?3/OUU=XK==a:/7Q<`<bi<23m$)4UZUAn[<S!?K1*48o</#k^-EFht#<$d1Fq&n$ahoV#;*[%Jg
%,PTAkS`9/Gk8nr\O68@ujKWY7h^$5S283`L$<A_)+[?%&4=D@eF>F^.&R^^=4Nq=.FbN=/+29I.iQ>*#R>.8!@lCe!/51\U.g=@2
%[h=eaX.m@T_Y!%T7!WGWTAii6`Uq1_O`OEN'$rCr6r:-Z1r?[5I#<6)$8k9r/4cs^&&=iq7?1rr;RsYaZ,/'d&-ee5K[um&%2ftR
%@+^\bP("WGY<W7>7ASr8"Xq5t7C'hu5LGL^**EIL"_&6UJA\O@<95I#@a1N@)T1<0+W+4gL70<]&hc/Y:?c&;@Tl&:LH%u0B$Ej<
%P%^Dj$C?8HdEN+l<A..Ir^=t:m^TO%O$RV-<Uf*u%M4.Al6E')@8#]`d>o:b0mq,mU6AamVkRasm@>_e@_tH3+q=^Q3Yes=[s:S-
%<I2&Q74nqDLZ1'\/>BQ;(KPZGj4tgq[l"XrbS63O'72-](T\8mQ=0=ge2[6UN=9,)-\*TW/=n%fJ-a#DYVk<JDBl1CU'Qkd!Jn`%
%ee'7L'/APl^^WHR0KP1CF<phedHa0;[P]7<Po3c`Y)5_mB[@nLqf[j*eGEBbLk0$!M.q`/"u%9[NYd)j`ms;M*Wm'sd6l'KNZ&%O
%8.IJ/7*\7_rtV)D#tfde@GqLCaZX$;N?g.cZ-#P[.O5tM;T>#*gc/'&R39b]"6\W<SdIXHS]*HrU.Y<6@s_]3fF5>VdVU#k>9)H?
%l_'RuN#jlVQljq(2d++]E.Tmj@^rXWNlo>n%n1oQRLbOTMZ4e?EXr_*.FXGJn['ki2@b<Bqgktk&4P@EjT2++qk1*+Npom[8:=\r
%V,oJscQWao:h]taLGD4G+B?A`nU_\B..0-orB^K[)Xe"jFm:=8lprCBN8YTi6'8AiBg@5-'Yu?2*MUeM+9:eZf8+S=[p+^/ZT^uk
%!B<U_W.<7rY35g%2tWcB&VdhL`k0<B)<-L)/..0'+=n-!&EludYEO3['Y#E-c]W.;*];&`@VBDknrT6:imi\b+tXlYNiG)SHLr*u
%lM+K7+h&X.8fM31C\V6q.fp]pPL'HS;ZVm#8]58!I+Bj:b@p(5#$8[n-&Lh<XNJLC7"/Or4;#PTOpI)_?eQt3Q6hPs-VYkC'%'ni
%Y!`qUp>@bt,<Lm5N>U%jd7=h>X^%`*$)n9m=T`-]Hlr&O+d$E(kquH>,u.Gkn!ghlQj#938jD$m:bNeB1*$H"L#L1s=$h[1`gSc?
%dG!#qOPJtdD!=p/ZTMk`)\i]V<m@8rU^;EUFHO8.A#K_V-$'?E3)AYt'"<!/7@8n-#HK36Y@)kgH5!=IYGZ?:7&?POL#-=#3LBi'
%4Z9a+CuEeaPj"O_ScqM@d7_B_6.KXR-QS##QH18F_M(*#E6/q,_,@Kg:QAEPBJgAcP"Ua\0IfpG&m8"aSlh3WQYpCI8*j$6_Ae&:
%MaYGn4;UD]/0UsDYRoLt.h]$c,KgHkSQ*$!"63M5X(i<nR\0bJK%Ob9;3qT)IS+cpmLfcGFC#$DZXX$L%Olsl-O;#Uf_5OO;[s=t
%q7VGX)(/c=/0PXT'T[gUh&%JrA#L#Ej]NZ6E&m]lF06b;GLji4FJs>=3D,rZAA^5:jb1]r%3i-F'UV`l!Nmuq%?TmJ[&CZIJN4oX
%4cHp-WY!9"6Rub*$U%];ao`WX!_!-"ejh28Ko/K5;!iR$P""D-?<"au/2&Y/j="`4?IJ!M<5BufR#(eQ:gMO\"jHdiZm@r.kXOTe
%/]E9L[mm+gKO]OYWR8.;<f5C%H%6bA!U$,\m.eHH.S+qaU)F:uL>jJ+RW/jX(0,Vla&IgbSl0;0Wr..7Kk<QSI3E"DYsr:\8J4<&
%'unW]La<`K%s<B;4>47h&ipPWX#,l(:S_&SnML*)Jfc[O0NIR@kV:4)QT2;uGc`h+F\moX5T)1-+C-"@&fQZf_aVPDZ1qOj9i=Vc
%KhZ'5-26=G@u7YIZ,shEobtI(+=Aj<[*LH]A/,0=MQX7`aP':+MF<U21ETe0q,S7Ie:&2p<biJh+!?G<0+0BF&B/"J7p?h[d:7N%
%<j;XNkVtYoq@Ur5hi(.-g4KZ]\MF=TQ#(-]p_aH/'bFalDA\#VLup%XX2t_73_FKRUTQK6^m-_3:T.:L,@3H$)-Edn4/VYJf2msV
%8>NC=h7C>q*=8d!<@>)l&2C1EbK7LqQnN4DHo-K;b=9$OOq\-J3=X^)J1Db"DiZ4-'=$G?Q%qBd)_H]*IDjuV.-fIR=&;Docg&OQ
%L]haA6#B+FE(Ea8'MqZZ$r*[QY>RBo#0-Va.TCRV-6TVL4iuoCR;l&'VNN)j1jXa:gT[C4,?ka8_4[iK<*Zn7M*epO,-%r%1#aZb
%7BeIl=?X_s.NE/1.F:MQj"q-]gf%EZM#d]qe13HpPnU"hdJ?[I57f,=&+3+'dr/*S?uRFo]h!=)Ocp4dYJMM$]b:Y5K[4@9',mKA
%Pg/iHW1sQRoIK@ANgIk08jop5_]Gi$`WlYQ/t0`I]CWFCSq@>4$+&/I)5*uni2mg]][rR.r=_lr*JU8$#_U1%4lL)X\V-OS/%e#d
%.]!A`""UE[oAFktqNPAGYIZOn)$B08)KA:n"^Bs($Zph#8YaO9^'A;--N$LT/Te%``)D=8&;-RsR/4?OMC/F7VR(p-0#H)aW(TO(
%;YetO/#YceZV%h:)<4Xr:l-[?'m,fVKW;;8cc&$pY+J*QJlb;5rHrqr`8gW(5Gi<!P_PGS,S\_XnJCld"f'-ZTu./@V.tDe-]4DW
%252YM,C_$3_AS\Z]f9qUbXfiAZc-L\,GCZC5XT+r$.D`tTV3W2(aMOrD%%d!<g>,HbEMm1bCq'E/9dZn=:GQ=i8<Vbkr]*]@=bm$
%kok;*0+Lig7(jDkT@;+^7mM\_[(dI"?c3tAacfduf+8]m(aYn9^H@iO!b0Z03nnZ&'7&f@#@Acj2ERm='=<Cd5q-5umtNc)kg<IG
%SCKDHJ<&rZQlb7KL\U"<i!.`-,gkA!^GDO)an$3f$u/294lT=Fn!Um-C8(22A#tHBWplA)_+VbcT6a$3&1+LmE=*c#(-k1F-K2eh
%`mlK360PfedkRAO0VF<5K6HIZ:)@==K++.b"i!KBjP.5X8rXHgi-RR^(5UCuBV?@MVW`YooO^Pb8GujpGk4=4QQlUNWbI]FP[BcR
%(GqD@$RS+L7;SoSjh*d3IdK:0TQuK1kgc8^+0l/+(II^JE`(.Gaim:t=TXF+6"1`Xe['A5bp8Rk$5\IKIOJ=<#Z_naeq\+lC`5j(
%lEq>-KW6:6V%SO7gmaOde>D_)1+H3UV[.Al5%M%doU6"..hW1:*Z2j?%[o&^5.5I=SJG['4[N4SN7k:.EgDUuDbTM#/iedgXN0`O
%?)%u6f3/3L3aa12H49&\a1YI1OgIYQZdE_GX'%S9;s:Q/)Y`^B*Mi2VP&9="/;NIN**DYkf63U4"ZNRHXrpr7p]a%GF<l]>A&0j(
%)oKbta&k1ZfYn??.#8L2i/*Ru-*8>SaFH[ehqQ1=3a5Pd(/&7%B(K1l,!&;0R=,$Z.Km"8d%/Q_@A@5iA#taJ_%'`mHY(+fISNBU
%:V?f^%hPZP35c]QRLtiF6m,=s1D?nQ\8i3/!hROl)DfXDNfXi'BFL%aLb=T["$7B/>K<=X`/R%j"B)1]o&LJm_"j_C?MGi?baG+>
%Yor$)fPQ_.CkY<Zc`JutX_`OS:cD(b#N4_p6pE$TM9?ehe>HOIko3Y<=cdD7>R=\8;uiraB;/Ut""3"o.]d4rCZ]-'a>G0A.i#h&
%8h#?7GsdkX3;Tqrb^OD>I9h^[NJnNk-$6246rG`PLg8IS;?79Q#3&aN38ara]j'#7M*ENJ33Joba"tGnY+SjcW`6DZ]kCFZCd+Ag
%(K2U%/@nk&R7=EX98@qU*?96>$n$[4:ogB*f)b\+;Qq4j9<T"6d0%SiZK,1NIANQr,mp?b!aL7QZ\kFESQO0l*0uWJ-?]O5hMC!X
%VM_.RKAA@sL"gPB]i`;-S,k&Z<j\ZigsAE.MW;bF!CZHZ?Pp\9Y0Z*<R,CU"3l.J,,U_%K.V^I2$eL[kiXfdA<Lc_S$o(V1<MS;0
%3JQG:6Y[t1i*H`'=t/!$#?QDY"uA6mepGfh:$kDP(&UK#6F,/MF:_!F:4E`*<.)24<m>Dh41UC1WbJPud0PBh\*69]s3W?'VO!62
%3p3e[Ehf-S?/;Z;;idGI'sS@='%s[X$*!c3bL_`M0hN$f20r.8&78t>9SrXM)FK$k1?HKFDWs[+_Ae2P/X3Yb-$4.C(<SQ\U)5Um
%;qM@leFHNd^Z=I`4\4jYpC"'`JbGh;EHUg!a,BEcC[L:LIJ3F+oInhBT%r2;HL^[]h;.YqR]0)K5?qGhko]lqqYKPnq.tWC"k+82
%If,mBHj7aQG<^TP_*.eL/F:735MuDH^\qgBl$jZ>k=&L#Z2!ef0oK]36f3=@k*TX4$iJUVrs_9.1;/H',0"(rq<dhJU!lS?mC-m+
%iih(N0N5!BIBZ;2f^pEk-)B9uCZ>N_]XOU5:n3;H#Er6o5l^;uHA<'l>71rQ^X\ZG5$]HR5aQNOLc1Cf_dLZ$IkL,\p@[gp"'#t'
%*?YUhi^6Fej;-+^B*Z>ps4%*H"I!7\'<\dT2P?Sk"q#OUb(["/M[cK@e'HpnC>sGViJ4i"E5qI%%^C+):PQE2e3Ar1oSl)q0S)Ln
%LVmqHH,=PJf@VIPG&FKb_B5eamG6`@Y(-94?i_ItjYDj(")0gANDj#qU@75Jjpfr5S_m-=D8XWbo_3Pcqfg-Ki]ScUMmn#uJ.="R
%N=JjWhV1_THJ?Q-1ud&RD5HuFI2=iSG:[s%VWf;<KM7_PFL&&s?]Y^B*3FFSB<d"O0SnW2%>J3J5")qm%L\H=JUY0sa/uB%PZsob
%jN.J*9P"=:J*695,e[FC%O(<U+[I7%0[NTsk`aJO1TtfR_G6OPd`.,[*!oE&fn%+lGhBNL(-;OCR8jCd;MZ9dc67f2Ej\':iAE[j
%F%J.9aos;)!2ZFsSc_$*i:sn=EZmBgZ(K3hO5*[k3J02Sl7*:Uge%9>(n'VL7G6u\Rbu.uXc*r0]j1V%Qk6(3#MDq*Co<o.cs];$
%p#C_JC[&'s;<[t*\'^!"rS@BP2eIJAHiX55Fi/;_*KIc4[uSqk8dDabY:mdOqK1E!/b?u!q0`ZUO2C`1Y?j<BD/6J#/KoVF]T,0c
%c$h&+eq:4+V,si@Utp&5J.D!-@e!Jflot2]o]]mF0#@t-Z]!.9%f<Y&MGr*2Ku\#f7T1WiI\jla,]9s^TM---(?!^Q"%(FTWuO:t
%OEb2t4<M7"4?V1(M_OORGlF>,Ie)1Zh<,U;G8E3iB=GW.rW?gU!P1O2nojhRn]A7a[hmX\/3\CNjKnILql=XQm`qKqa,</Ldneq0
%H@b!T<N>tC,tphccqL]SQ]oFnK>nC&E9Q9:Npnp0gT6_o!qkfE2qMEG0=u#WpZN4<nHBp4o&0g\^;Rch6\#%-s8MDh(RM8)%mThW
%Itif-o%b+[?f!nLim6(6^?/4`/jB-nlLMObnPL7`mD\hoGKX&IgU:(jB<,mp?X-i"]3Wj2\A]hF^V9#`KR_hVqJqFBr5]fJVdVm3
%7R*GLhK,_6bDRHKghga100_@1,ERY0hWsG(I.?Rk`JiJh]3S.nk550aT&2]A\\EUELABomQT*7W3?GPW?=2L$RPDQKlWqd+ZbJa'
%m.07rZ`!NAe%9i_@ogri=-K%nqL4tiLL9e&$JS>83/(`3LGt36hg"/:rU'@RQcn^djdT>'54uq7d*?jAV2n>uo2NFgHaWe;mIL;5
%\!bQ&UFY_U2*(EnR9e]WI<C!_p="$l;]HbFC/3A>hqhYoSSrkML8hl'G5o(^S2IcIlWm3pY1K-jG.W-EIlU$[OG5QZc*f@]f8]UN
%n*]`gDdjX&Qs[W!Hb:dDf@t2tj8k!9]/j46f5I8#c-,59g"jp?N4JSX]:.*U2tsfEbJ2l)]mOg>5%fdcmEj/IbK8#ZbF;QLGOqu\
%HQ!(1^Mb1/-_E&a00VP!EdKd:UFNa6Wa%N`E^s,I+*cf:gTr6M?[d9An`o']F#+4N#HGtli#>0lm\n;LFh+8"GLY`7]%dD=jhep`
%j^q6M5]jQ6jZH]F[(Q>1`S%SeT-&a@lB-Dng<R?&4D]G$*Z.knhsL$@YNip(]4[`hJ%FS-Nu::UfR-clqYp&7gIl\);Y/ekmU*Z=
%34jXFI<PK>2pXI$cfX`4BD\es5F]OlTDc(af449[f?NpMYEjC9\IAdkf>#25*TSfe"Ap#1q9En2Df5U8k82nGQH;5[lfB,@+Lg+U
%R@=fNn`p,Iq:YT7g[has':LaBZ@q*mNE7d"k?m%`]/RKg+7.'A2rhia=l3SXh>ZN&QT*O>lT*Ets2`J43.HB)2qP8$cJE;br?DQI
%E&=DlrTDF@oWK-jnuj)!Ncs89p0@i^ZY&`FFl<!?@si]GEIE$lcbfA<pG\%Lq5U$lgi/?AcWf*,Nh1g8PmmZE1="j'3VJF7b]jnP
%ga;?GRfSLlFgU;T@@I:.15E*co&Pj\c5cb2cXG*4o&C3eOLJW-HiG"Uh-SmM\6@b6nL5R0X8!b7jZBb2h0j]pYuO.R5)tDt"M]qm
%pJ><[^0'7kY_89(882`97=1F!nQn_*N:Jtuq.uR]I6^XnJ!c1SPFJ&b-b%:\^Lh`,p-4XQerAC1/+/?V4R>$SqfkS6p[-Y?Mu,M9
%9cEG76_@XhT$;71+/!NF:dWE=bi)rWZ?,a"/K":YV;@]rQS35/Dgn(iZM.0)3O5p'B4DI'H+g*iXF6Y_Oa6npAEa=1%m)9RDVqYl
%%"HIZh!]HW0=/h0I_\gb%ko_ef#cY?]5Hb%N!Gg-59i/`R,-)0gPbFtn)n@;#P7H/R*;6d49l?mYV!S#]Ie3R'6]n40]u:"IfRTC
%GWNU3ENBY*>KrPZhKr`rS)K5bH#\"U]tF8dH+?&0B/<`kaKF\"bmZPUgWsg:,<L?k5/2@8o()-pH*t<!qr6u(5s@;1B<Ac`52:e;
%FJO;;=Y/-Q[$)Th4CS/-N^P?+pR3>pr>RW3VKOq;e2rD1ga/"CJRm[l?H4>bS%m5%Mg`>\F)iiC'(9=bjl:;trJ\k2lW_,B\*a"8
%GcBjBQ^@;1_(Kp[9l,1T7uJT+24A#hUisA=apd\l9M3(t9:Wg;-b%NQ=-L;2\Xmg5cCclBrG*DHPF2l>G;ZK^itstLK.KEmFu>96
%-0e)Y2X&i#Mn=n>Ao3Seh;ajtq<cGW*+"EFG':r=BRi$_oY6mOc/J$[kHeN.>a?]bgn!9H'Ig!BY,6;dEP4K(OZ[]6G'X)+c(#c0
%U$5<0MmM`-X'%R[cgPWP%fi!a;46r2*$\>;ruB<+;C'DTaW-36iY[NX:\NIE-YqW.qL^C=3!ZnY(lQ7PgP]0uo7n$<11r@to(3oH
%/BSCKnj$Y]Af[oMO%"=*O6?=+MFEphR:@ej0c&m.n_+sm;>*]8Gs_SS_i.$P`=_kDNI".#.!$_V-kc3Ha.gf3Mg`>\%lG-ar#s%R
%baH\Kh"l6ZV)cJ]RTY"5(0k@9H[49%H*\^-N]V6*i"UsQ&asiV],\Y>_CtiRmnZ/<9UMaHfKs\9n(/P;h\#*ckC@+SY5%QlU<FVQ
%g=u,)FQ@3nQJfj9NdU68f+*D9rT1IbNoJd1'%`GRWCO+7jD'0\Y'(N1*gEmPjD%2fp4qdFUIXP4%fG)Y[NmYpi:jfn&'=ot]LHgh
%NUlTXbufSX2*,'=adIut&SD79dA4OF'uMu;h3BhjLT0h9ou/T-bHESFIXSe[SB$%>bI>ZqS#rn&LBcUUEW'_Lr8N$LiQXqrf?<:/
%h<2*u1krHNRb@k\V0N_]4G)!tRb8a4db$R8n;']CUKK`F,a;@`!=S#6;u3Ue.(d#Y$i?nZ$QIj8c(b1*e+Rk[s%hAk(@NV&A9Ss5
%gE=5sRqVGuCARlJ']%T`kKYP6IP=(co;;+L%-'P\(WG6DP](,4L[%<sH"6Q=5G-h<]tAX@<7e>A\+-HTaj5.P#YnoR#K[-])#Jd;
%AkO%$!ugRNJ1tICgO)VW3J8E1c84Ue/X0s)#J]/;R.H.3\AL8d/LBGjIhU.G0CE.O/aqganH\_F^>5Q):iGEA!ag<dO5qHF,2R?Y
%%ji.WR-AheruV-Rqs".:!V#$]S`QXHpZVW?qL=S*hkU3qdgdDs^CRmg`pTWmn,PQAktF\>kk!V/bLW9>99)3nUX/\uo6kC/B82Lh
%nbi4]X6%IJFaG:8kFAfb:[IANrOTYS]_VBJ;nTd<iPf)<nE:hl3+pHSo`I:>;Wi(TDeC9I:Km3\C7)i[mr+gWZ$,QBVTnk*p[.iN
%bLcUl4\E%nFL7./=lX0=4'K_^NSZbWm6-o[p=2i[/Db_1P9%nYmmKtIoS;2_o(pf^,q_E!DqDr=2kU(kEHA\'qt,(-m*hHYZg4`B
%mA'Vr(Q^^7XI78Tp=i8fe'N8Nm(CQ0e(MJgY3tbe'cWZ^5\[c=1X5)!BS\VO;.HN/.A)fuEQU&_5p#pCN#o8nj_0%oCZE=5QcntI
%oA73jb^o^UFZf91r:7/X'!i"OlQ=g5"D>@t1>94A1p;DiBQuNU?B0c,UZ(<JGW?[KNeWmqiT6%P'pr.FnA83C[(dRi070dO*Xsc@
%@sH[tE:Io,I.kR1oIVRU#AlbQBIU>"%VF_&N%@J_d4RH.@=q:u!=1Z::$fn?p)RsYc5cNuCgqi9gA\jE%i/j<4dPZkOfX$+p"@;b
%Hi*>Qggc(^HlVlJ8D3aXnKB#0]qnbMHm&1`5rk=AnVG!QYRm2Y@UG2[91SWN>ohBY$r53Z0@$0Fr-U%no?af6B:r!?Zh!i[,WPR@
%p)/Q.T?X<6MN)e%[-#S@gH.*W__:n94nbIoh)p2dC3^&niHG$5-;-P049$&@nW0UNr0H/eR**4YmE@pLQ@790*h7ss^%p-H:[!_u
%]Z;75\>pFlL,m`Yq;U)/0Jm[VZfh2rVEM\(Lu4cIk)kWZ%cA<EIYT-F]Lg<ZidWuB1%mpI84Pb]!U2EGDoX7:^lC-^%S&V#hJ0WW
%G3=p0N2%D'hfe-qa#Md-%`FCta3g1@c=TLM4`ip[o@pVC]<f[6D_C1jS($QW\/sB&:8W.4Nh^lC'/BB/"r>GWB<RVN]j:WPqrRMH
%*'I]+rN>9@#6j8drp$P-0RoOV8j,)heYK?d^:h.g45XW\SQH/jh*3MEB?b;AH=p;oL/%2G:mU6;k+T-[,LFf=K=Z,sTfF+l#gTbj
%ApXO'F2[4o^-+Quk*[N'4hn\@R`#-/g$WH-UZg+]boF:mAp:R@@O9:02\W9gh&1_!"ub[n)1MR)J,B3CAU>4(fdM)55M7fYh5@I$
%;A0PY<;Ui1?:RBI*#lo8$M^&ISR]I%Wk3Ud`9pFZdqtN9LD9A<k6UL$aOcq24R@U%]/PRXLZV>cO3PR"`Qs@c3EkEfDL5fKL[4X&
%U3;R.gtFi;eE-\s\)sX6*OWGQ2L![5G-B08&3,a)gjVrU@;Bop0KdQAScPs4T^(<kR2shgUH3TukDni_au#.DgejVh39jar=R+\C
%koA6arDMhXlfR?_&%?1mR.&ntEf]Phd,sIbiaM.o&$9N]%#*jMaKYQ+MjXnD#>tcoi,L''pm=QVM$(\]f\tm4%eG!*!#`C'7UJ'9
%Rd-.;a7kp5k<FF,+O\NXZh'*e?iOW%C%p06YEs=3eD+qCkAFllp4KnG1Zrg-fBBDWn.,")rAL15UQKV)0?d9SfHF=CKohcO%u[n;
%G.kO+kT=&:oAo$PlZph(&lq6%Wrr+fMcjc^QWtC*dHe<`35O,UltV!U.r9W\IPsiXS$_&&XCfEB]Xkk+IWiGq40<5gUB:>)VD5^>
%m_QP/o.()2E1iCO")DRqfm]E)*Zj&'N(*R\m,[M?(K^@;r.3RB=7a8+B*Xedmn8')quUG_ds9g35JPNq+;6`rVu7a7\VDg+*$p6N
%Q42WMf^Q^J#BKn?AEJC;jlOb[EgDlqrfK@p,%RorT`hNJj<t]_Kqe;i'HLbZG<V+,q$nLR:im+BhK.HM>DWeZ+m<V+IZK*+O5&BI
%RfSLlFhD;l,<p);lVHXSp3R;(+F5AUnG>A(3D[bX4+'W^gHG<2<BRn,\9i5'S5lHETO,Zo(5.'\EVK.Z`E!`Epc.[r6T[Jlq]Vd%
%qr9YK%f?5b^84kNHm&1`5rlZ=L]97RU':?pCiEa8T(g,a%VJ#_lR3866p*^CT8-EHr#l0d*c&G0)C3]L_0ZYoAijs>U8tWOh$h)X
%KAb^3@JHHh5:P^=Zc+$L>VBf9#WHPf+0E;c:VV3M8D4)c#u'OXicTH^^Y-QCP)^S5`5hc$Lth#33d?UB7l+]H]a)Z(oFOhShOg'I
%-e%nVhinY`bM.N^+;;M$HOdhmo&)k$hEq4sH^4Z7"?:E$G`ZUSLE/ePG'gRi8'T=.H[LqGoXIaSZ3_'/(*1%QrQlDTGL)VbJ%`AJ
%U&AKYG51Llq`298&CsF^R,PQj$3/nnk/U'Z*HRFZhHun)F-(5!+W[l/H!qI!rL!QNGg(>Zbj<5[Al!Rg*.fXMUce\;p?_Y+o/W'M
%p@-;@F^4pnlET5uk<[2:FR"$"8KUYKRs#$(hEJQa4DHjjot2>5/Dj6Zja.o^>8BO$dq=0>k366UT4p#*UdZChrUT+IldcGQ$pA(r
%PN<;kfAg4%r8>bbdLZ?IgL%.u^UXKFfDXO]c1T+!R`/n]IUErKrVYUZpE+kRs4tR456o>4n1TWbq<h>Zm6B?$s4_3O0<A<(Z2!ef
%0oK\HKC?O*5IU$,Pb[o46`k?j@s!dli_##!3CQQ?X-@EBB.G8&SNgU*B2]%%...%0kT`LcTm+?fpXiKT(jbl;EAVjd^DR=4%?CuJ
%V^mrJM7.PAQ.RL^p2@8^+_]b,_*O]RPWl;-Y=s@U%9lWS@=^Y@@@7$7<tgI<>_4Q_AI6'NdB7YLPj--RlF%+c[X^8Ja$a+Jm.qOp
%1/dteR5.I+.;e'&7_b>_*I4#m/CqfXm=rk'M)o/2MH9tr0):&R*2%:'><botLVs/>5Hj#q5$Rr(HhQg#M;4$[1#@IO(%-\pilI_,
%R5^09r26ZUCI^"B"V^Ae:%%3B];oZ3\?0n.s*Jec2LRfXgGb^0kSoT4P:,b?s7=,=C27#4E7`^nq.feMXAHo2gdYH(q@1K_XmXec
%bU/*[4Gk'fm!,U-[N+r4bHR*ahP/2YUZ\OFDnM1L6(8k-iI5T&Yj7'j\gQ[qcRa`<cTAM99hNm0;YkR=*a6=\FUf?#mHaXU4g\Gj
%`eBs'g3.*.oX'H,G>l?E:J\kP[>C2<^q"pbc1:4a!q"p,MiZRZkeD#`cgpe@IX??+.!G!Kr7gVXZi@A-5ajo#NVpp0XhSS2kGu4!
%F@#jm*rJ5cD=YK+S"%Sme%].?l/HXU(XH3rqU8BPhB?9oh;/TH_0c1rY2Vqn0>@=enaYciHdaM%jMgS+TZ5g14+>L/3*bf4pC2$K
%mT8hg?b*YnD>8Oh+[3X!GQ6;k08k&'X$XSqMh8\Sf*$RF/kPM//kI/VanGU/hr8slYil3tTj'/T$t*$"]^]`Qm<@r,D!Q<D@SB3K
%>n+9KUMaX5=+=T1_:SY"^Ab/pUcUR&keP*f:;H]D=lJ5<V^gDchqb0ec-!#5c0t(?Xs,d`!:3,!UL/d4C0/]ZSOe"ZSHsIg%pj<D
%haZmEn,7Jh>^_UUZ)R+KM.:>9)ruuQD:bVDIh!ID4AO0>&*GtX)et*L]IiLo0TTL[28c&61:_5tiO^mNm""Q'mg$MJn$Er52o"X)
%h:nR]\@+RID8#N_kUH=NH$4Q6@eCnLMpG`#>@Qc2K3b"Pol3^:9N;gs+,A;<*KE^9luR_0Zgi$+m0pcG=_bs@F1T<OEO'hKL6aCj
%%35e0^\<*i':jIi>3Cf8Df#V-h^]E;C`hW_Os`#,\2%D,bp:Knac"E14FO;f.J@c&ajI;QSILR&_Y67f-,rBZ+[3?K35#4W>1Hdh
%nV>,=g7:ms]"o5PrX5&l0AbhI4u$k*55Fd3m[N>6c0_hq7QQc<#%^0A6&!?>2"%u!3DMd8qqlXYs*0!6HR6cDF?J=BI<P5\o''e:
%Y><oG^4emU:]!\[V\n"I]4^HQl/&Y7.iaaR+j$!7!Juj1b(CSdl:'`H*?,shI!/FmJ8!t.-Xu^b-]j_j_/%!UM^MuUNJk'i!TuAV
%_rfZbRNU<]Ue`2f[uF]*O]bg3`fdA6I62sM/D3NWU-No/%s)L3/fdgQf!n8hi*9ZaYDug6lTGc\0m+FTBYIa\?a@DID)"TA.?@-f
%H9oJckfk]?X5s`>NXCeJB]mfpof94_"`;_-#J"@gVUuXfM/AoNLXlraFWQhR"U"(EYJXhZ5]l<D/q"rk+#=9=Od6H49l2(`;\2*Q
%%Ho7^dpAd/`be,#LrR!H`*+ri)5RWj-ZW1V:PCa]"C8Fhf##S/E4?pJQ3o7uE.$6_g;uIk&O0Sa!XT7KZ`RHQ*k4Mj/8*Rq^+GC_
%p@S5,q1X'$[WG:!@E@iTSo>+B"h)H03.,h-CF?YJ-V1,*+pUSicqZo])gWjcXf!;WDI3_'LQDa%+-"3/b?#oFj7m"ADa_AJkqO_!
%DRD2bDGG`2SoqLem8YA8f"Z4DKiS;JJ=9a3=,[<BP6Y1"Z"s@_U,Up`d<dP/4rC%9JXAT,8HT?)q@Q8d/p1C16Mrj\.B//\CM,ng
%-c0fU9Z+4l0VN[NQl'OR#t1N3@rU#Lc>QC9bUu4q_Pf40DfC:<DEnegdl,nlB.uMP-CU<hkX%N/m1rgXOL@rafZl+TNQak>Eh<"^
%_?-fVrq)kjNrR81kK0@^auLra\[?Y3GZV<.fG1\31h*DL76b9Sl"cI:<Mp^7O;W:;'!*8&1`0#hh1!:X%-qQ3j!?-<Z8dqEj8IbQ
%43[tj(gQ12OJfCBL"<htn_EVgiI3Z<qCrQ@E59>:@p9="[RmZD224U4Hq9fZVIZ*?KdQJ7#&7E$94@=8B^^5k0(VO'`A7%#bK7\G
%W+@Cs_ff/m6+an;P`6_W$G7Is3k<nok*;KAh;sjFRnnVs(b5PWX:aLoIEI[J%6f\ghM,l)=Z7nGpe]`^9rTo`[jL4F!(J#Z\Fd4o
%Jc5q_S&V2,EGF[.SmBsnZ`?bVnCXt]%jX/j4h/Nid!FFn]TnAsZ_tg(:mfKC?^8&?\3naJ0GrMcT,P0`3<;m[Fo6u>-MCRJ;=s"Z
%]d^'?cAtUigc-USeTS<0i]#J8jhi2DTM3afd.en^U('8R!rEF#&fT4B#T<)6Ctp?QR7,-eP."q8Mre)Z`Hs[Ph6jA8\$<8qiU;aV
%1a,NA5N-*GIY?E]2&4@K9shuAN\q=d-BOL.#'^MM,n3%iQq]tr@rVRQ7Zf3i(rRBDj8aU.>(7%DNAe&]_I\`cOr+;1Jn1HrELJB#
%mp/k>jiY$^c%YBK0XRApX$Q'1p:mTm^s])absX`H+Dk7CD;7+:.jubL?q[($XFohrUM[ZkBEsN4'6a^)UH-!+NL1aCil5=7HjY[(
%r!KqlD6&Y5SDlpNVoC<.J[:qmfCkANa,j\"pW.r$JQq8qO`ap,Mg;/("iFQ75SKh1Rc@r1f+,mDk&YT)>N>k_#-:>l+a=Nq!+`7Z
%Seo-oFL?t&p(W\:`P4OP$WT</a3Y#4aHlB[kVM4X&c6E,kFbt-aO^_X/:Kc!j\);!,b:kmH2AMbm4I(k49upKF[IEDiJCc_At(7l
%+9tDr+0N%G$-1^?^KgFpCMT5,Dt`h?/(7iCi+j<ITh2G))(]#RcsRf^0C?:O\HB5'%83,I-pDZZ0nS_%J[N@*XTp/Fn=s1Wd^9sh
%e?0G:^2U7B/U?DC*c!jHnY<KTHNnb:D1\d+B*)mM^[Z*3bl6>9-e`dL/JDLGGs2_e9gE<1%M:u#f?Y59?C\]60!6nJ@aq%+MV2V'
%omB9eJo@j^*F+YKJ.d+tY2h2[0-rn_3*LZ_4?e7S.$)2`5FKUH)EcbdV/bF[OB=nYBtp5=6lu$J:2=@-kAj&fon$shEoP++=gl8e
%6VO4-<.iV,qpqWbgAWue)3$Y'9N?2[l4".]JAu"Q':\EG%gHj[MK8f0mnE@OaCbgtJpII3pdT@#'\8AujFJfHd)P3FDh=n.n:5T?
%_'l=8)XY(>\56^\DVsQgX@)="A\?`Z?O;$;q8$qZZPPuQh[:d&M`?qN5,_t$9?[Ts9baJV"`.%L=9)Y:Y9I3$g'a6EpB2-:mj>\C
%o^XoB,#j#^ZM/nkQ_rR'kF6j+k](<G36Th^e9HipBhR%,GUBjJH@G$C$e,D6<ts_Hm`8AcXGSThB^+c)TVr'$a&oFE6K8I1>&G<0
%.:XKIo>&#=5Y^K\8l?kmTKRn[+JDWYB'^aVM;[gDcI4i>/%p,0?K:qmBH8KB>fa]g;sU[t$1t$:o[_Z1V+lDlH8o`1`tpl_f4pMk
%]XsTWBM$"N/+QaH04DK9m5gU9P5_>>2Hc_&X_n$j.R,Pn14/tZ?i+C%f31/0FFc\(Dp(7OY:PWE]Xb7t<]gX1#:7maS">loO9d,k
%8?:W9!66b'0drq-nQa!G34tH`m2EniklK1UBr\:i_u#ks<:IG5@T:F6%Y4/hA`+c:#1>+t+t:.+6OeUm%s!RA\K-(+OY)a#$&1j'
%=/gURlT]8M=8Tn=/,RmI8Jfl9OXUORCua%-PK57U8PnmPMTO(r"/si#*f@,]g/3+TokIY7N$#3h,7VeIp9Vm?#+VlI3t:lp\2u;g
%SD/3l,8^f%-Oa.@1@W:1GeaKh^q%:_%"bhU><^g05sZrqBt3Q:m@`DIqi0M1AG5c7D%"b?cC#BD2sc!WFWG$B;BWZXV&OU78d]G0
%`Sk^B-_n%L>md.rrWXOQ.2X[hN>HcC4lbpt!!1Hc\@.6RKmN5L50D4\FH4Aj1O=:sJ(Z5?MnDYi&coa(mU>E;K$&m],]IdBpaF4G
%)=>=YcG%C9\<ao">G'.<<Y,k#'bN:(9;'%"HF3(b00icGJGh(,%;dK8fP(:Jc;_,[BBh^I^YF6\]0+j1:.6+%A+'U(Sf64"7>t45
%gt!h%RAO\"0V4DhC3(dUkT8;6`U`1\=ED:_\2U+pSTr+MP_@phosZ>e*c*k8NEa-64b&uVn$ZV!D,#KY&=RoYaq&-S%fLRN^Vs*H
%;nr/J[s[k;;ZoPo@&Pg-%i*_b42HsVmgnBDLSOM9l^.?iX(TPegTtG"+!LtKlA#Xo)\,a;iuslj7P-P=+up3/Qg.'GIN+<-49F#Q
%qAZhih9c6FAUEl_N:]Ja(>OO)0Y\nQT[;T1^:\Carp'C\?(Tr]PD2j.`KT'R="b=rS6_ccYe47hFo-!#qsg0T\=gU.S6]H-r'9Lp
%h"2\*,sGK,`QPm6Mf6C_nB$"2p(4\sVOt*T[3&Q;T)*,mq!+c`9DLh7(11@V[='cDIIcCapAF(>Eq*i5f4Fj>ns8$/*t-qa%A3Rl
%ips"uqW#P)?H'ADdl%&_qsgi`E6Ck%N-NHm@I\PDCA]a`Da6mBrB,SipX;ui?(u93m2sq*oHk\Kpb.-oHi3;?lL<oq`6Fg/^['.u
%F@otdlfXK:rQ.B:g%<BQrdeYXA:\_RG4#jSl\TGi3&#0[3i`pe2Z1*SLg0mWjY(^GfD_@U'd*W62>%":b$]IRq"FLl!^3[rXpj4Z
%pU3PVr[*b%m?RP/s'4IZI#YnWlh&SS?Mq0XqR:B-?@;<TRhMXV[HHkRV)J/1KIs?kpP#5S#NF`h5u%@$WFYduELT12rn+](BBMLn
%iF>[/?<s's5'))Bj7;jbEqmi>=1?u[cRX:(CZ/fr:d^i7@_3J_+hR+@kO)(!gW4BBiV2qKfDGkbG7n,Z@^/IiQc-1@3DPgWM4K'[
%A_D'MNL-7$oATN40*#ltWFWWebaGB$1ZqGmq\BPB5S+(7c-AE;_78(Rs43WJ[)/e&W#UlC[2uF\:<sm@>!>.(^=YN>,gtcrUU4+d
%nP]2#Uu^prB]]!9dAq-]DDJ1GC?:^:OSd-p2Z%urBu*BY>Rpe%[0hJ#V\0e?9OVo77ok%TNGWIC6FhAI\UgG=U"]O:Fs*q>10cNU
%g6j^`iPrPb3`gKe^W\04Tn@&2m`p>I+S:BP0CD[5+4nZs.U"kM*Gtg,3dO1.rYll68J+O!.L(:,o$>_Q!h$;X\jNH>?hPB,_8X7d
%=74<kp'sk.U,R-T1ZI98gbf>]?$(q6:NY5(1ai6a$/2:SA\!t1`_0qs@hRt=rTLMT6iqDVi7=<K^=q&>%h;&_fN9lZ\$"'Oe7Us@
%pj/PhnDV,YF6O3bs4dCS8P<"NJ)UKYp[`O82'@5JcQDD[X/`++$6B9P.eRCrWV'l1*@f,ED)7jr<12ce\+;q[prCdu_=9b,(CHLm
%W^&Ej\p?CU*JKYfY,d-a,[oi;W2^tUpgEoY5qHqJJQl#;C/sAQhr>g$0B)G9?XB\2b%QP@W$3_n408>fR(=9.&&K^)Wc0/?kr2OT
%<+mSbaD(5WKFj;]7ot:,jX!ZtnIL^`H`@I`(N+AhW*2h%ZAa[bi+lnf1m3mf!.EY98*;-IEaY0'QtNpSb[ag&#B-H(V^t);WsccE
%j[-5Le53`L7TW'SmZD$tbs4<#=9N57P(9Ye<*;O#5;+F9:hGr3"ZiO!4[@R.$uTR/+0F2*0a%H5,a$7irWtD;:=C\uO@ED\XE31I
%8MlDXkXSW]Q3-fI(O6#ji+\Lu-M"jW:f`]*"EfFYWlU0^NgPC%O"gJBR27;1&/2"^K(N0`[Pt)Sk@=r]IfbpCOP/R+$9O8]A9=>N
%:(7<MRSYOkBLj&'1(jd15K!HL)4bfQ`i6WeL#%OHX[m%PEJ7)d85`+Bntrp>.eC]r.\n>;YcGJ5#cgZiZD;Z[SHTC)`a5JKK:>rX
%MG)/G'>F]A?<K00?7(jK^n!3O(,72A3E0f)&;WAC;+OsW63V,0*hb>hg6S%L>_gVsfHH[3b><\"lnb#..P2TIf!n%?^;@?o&C]@C
%UK#;WAY(\]7S72?X"m&TaV+=l=oAYDR8[MGeAp*!F-qVfa@dNo?)=O(JiUGAQ/Fj]W?c&?Kg&-QECWQ'.n8BKLu$>6)?l[Z&k\J+
%Z*gFH:(V%iS=R;XG)V:#YFmgW-W!FIh6E%VWB/4q+/;rK_+g!c7g820Z$AK^$:mf&<-n8ZgZ&UA18fRM90kseP`R`eqa=kLqE@2N
%!Z_YBW1!UMJli&/P.TRO=Xt8PWbflB:be/*^;fo($p-*0OokVle&n[AM%`\dY1`k1:g7NXLE9PD^<6>h1*.F1m\[\Hc=Q?[i2^N3
%#c5uo,MU:ZO[P=o<%=Y;?#=7=SHXAV?-fPZ.!ikf95^Q]cNFZgo5R5-16TMbLT!hgAT0<>la"\.&?b8J*AgA8I7K-(LipkMob)*k
%)+"[F(6QY2;W,A8m,V'+j+l#ag0n?8Ro)/fcs/VlF;<K8Tq9*-#4>_o`rr^A80@V3+p'KF7a>@DP[',798ZG@iqSoXP'X?EhR'L]
%$/2+-!0hE6+S`X-*.Aakr!6+EK,sC+JAD^7feC"KU_!dpiE@mPRF-^3E\Na,#/;AW5hA3:H>c=*+N)^0<QS4?[.T0.Fu1=IAV7?@
%8,pM4^HsQP7_p#O]g$2)<7Hc!T.TW>.LS#-gfTVE_"^DX<LG>37WPMjecDHQ3A)S'dL*U4:*Z&:Og5URm2]AB7+k+u9p#r&$@Q;%
%\-bH4]5]29\7jZ,c4VI9MHWftgn%FFe]M-\Xd>gmB*C803CCu*XbWcH+TMmMTZIQ;*6;>A6a%'N;*d:R;Li')&$`:X6:YO#Y##j6
%a\g)VC[4)?$tdZU;Opb$`SEW:_h@24pRNqC*nq8R*>de8I90XIc(-bMT5N>LS-A`Q1:(829a`=Z<f[d">MY4Do.+OnOpM/JQWkF+
%IpDet-tki;S<I@<;sqJf%"/S$8[sks!`QKOH;U@h-=>e,b-:D[);F9W\C6N&!hV-a_5,:29u3PTZ:__T,s]:HPC)if5dN`dW9$8R
%ReGc.8e&dH8]Cd3-agPd`@mONGAr+k[a)ih'?D,7R6%`?0f--\3kAkq\L=RM:eHk.LWNV_PLBNtbO#;rf(80VGZTsWLO2i6=K%oC
%Bmh"TbP4<['Zb3W0Xi5\j*uL,LbT9T,Ck8311d.n`%#3`6,PUf(H!B236PW1DQNlsk\BD-3(_K@(P>)QfVQg>WSekdejN<LTMD8Y
%%0'&=!rOFW8\rUQ\ikan?rU.Js1k2[2Seh+ec5-G"hA$0F2:)9HP!2"Y5mFq=T8`g;JCpZb"uoN_LL$sXXrbt--Rs_:^,&OQ&W(+
%mZo4&%*Q)e5<Me[#@RsFFECnEFt)E)a5Bb&ls2Yi^2:`:]s2+264=hEi1G"DARnrsj;MlJ_EUXT2Nh39[N*it#f/u"'.l%X_5Dkr
%S_7_W-uCg!s$.37GY.oobUk7VP1\:R:IfDQ.4/muC?Ek(jnjC;k=PZ1-0E737(2a&jn:PWp&?>-7,i?*r(<;dm6;Z=YHJ!hEgO#m
%"RdBB0+LKBkM<uM^`NJu5f6`D!n[s<%6mY&:QSW<h2R$d.5Lq#=sdPQ(Y@slYPu0*IHp7Jg%XA/Ve:'PhV&6hnV8W55n;\?V>pDl
%]W/F6Nj_7?X.S7%ZCoX*dJ6G`aYhSeMbj@!KKV@[])!UH.!KVmg`LB?91WF^he<f)\frc?)tVALla?C,mZY1^caZa9ra0UA5OT:u
%J%r^%^p8G!,=abL0\&-Hr!U$Ls%sH#4WE>-(65*HBWc9Qs+u32EV5N?s(Qr]GBN#RSU^P@m/-e`:O\&q.0%o+I@fC856\B#g,s\<
%gcn;U]0ELL#t*+TKEKQ,9Yf^Lf2kT>O1jrPT@X_&Q2F:r2Zof9p72"[!ab]`0!Xre?UV+<:N550VQ7YHne#3O`*Yqa^DU^Z4Boi[
%@6X%=G0XHcmd4>/%mD^(rm>("YTT!@YPqnG%=EYba8uRY^B>X6U[u;[KO"N]Au^?KR9SDuDfRG!A#0J=?$5huG\_9fAor'5E987N
%Um"IFkG<gYB_r7!&ari`l-Gj>-^0$J1ZuMJI=<p)hRba`]c!@]+'c>383qjQ>+W2i7L2>iMj%31!&rOOND<^DVk^TGH&GCuo.j:s
%=fY^Z7V=qiD['k;UXQpVU)ct0*qr6g-(hi]3'Xr5^Zm%e&&B*4rP?nL`F*o>>!G3]3:T/?m]?iXCHWPODb%+a_]003p?Q&Jm,[rS
%?>a_dkC%sUhJ<"!YO+%.T],FWBl*^m>,u^aIN2m73hM_I]S3`dO'lRL$p*')4V%$V.(]_1)Oujl>I^:9>&_,reN+S<5hhjs*F9]o
%QqHDdPH&bc%n`B$TRRCMJ84heTm0tO'N,cKG]7uCFZ_Y>DLn%mV_%q7?]8`jI(\6WM=&_lZ"k+=%1*S.[9QHZRWBgZ/B`=KZ>ekJ
%=*W]!0C#Z]H#WEQi+sY'1JaI&qUFcuUDB_P>:\HTkC]nMK>$kqjN*#BZ9C<43uQE]EBKQZSc$@I5L6*/8c/K"%<T8W?U>/A77&L_
%AM1]85[RV_JR9C82jnU8g'M'e9_Vr`B[f'JJJsCq<ci;&^=Rs#2=R/O.[TP(c/4Z<n#Z17%M$-0hZ;J>_slufNa<[*2b"$J#NtT%
%s*-L_5hC-J"e%sT:`;_DSZ[+!ZMaGkSD%H&%?9);N&01eITH%RBMd!fU9LgS#2&LKroj+(_%hWY#C@h?,KmpeT4!;`TRu*ifJ,8_
%aXR%XRGX^g_/`u:)&s*TN08[3im%)ipX/43Xsh5FlD+!?fIO.fF^4TjNK3<nCYbk=,Sr'%RJuVVY``i^Z<TGVfWY.MD'2V];4ed(
%.]k4>XfQI=q9&&:f;S(4%p`6Id3Rpe_fFJgE;[P4f"m@^#798J6ua)=C>#$)S&D,Bb._n>]ogri2Q>>@oEF#2WJhi5+2,!m\PtN2
%V!P.n'j`8Z_1oP8[]oC(lEW7MW@qKNC5&MG->:U=\u*Ui`Oa?8*ZZ4@a0+7P40k28fuN1Q<3L`b-V]YN45O]c_83s=+"r'(Z#.Lp
%^uM6;+mOYQU3oD7Zi.S$/PsZ?XWQ-;SV"124W>Ej1"OO+_N9i+es2DCRCP.q@D#*!5<I_*45)]4Yn?%H78IB-C[_1?J8T\Wm9!`7
%bFe,Bm^KYZ2E9RHC"nKKO)lY659-3]T8f+S;L;%8ibSbcNZsV<>M2$!-LIL]8#->Qa_7X<m/3NiD/#+qKXPZnMoAs^2DMh>m)_.l
%Dg$)AI4e:'YG>nL7q0T;-9X@LFlb5S1_b!'qW7n[f[PFJOJh%+p65m&P#Ptuog#Li6g1B6!sf[G=7Z:ajD#0Ad8O*G-%+F`M(MJR
%<IrKODJf@"lCRGBSij2Xs8FEdr8Vo.lT1M?l=uSe@aH(>7TYrR=YD_bmSo,lCKGb\mEsVDmSVGTYL/hW\Ra0c1o]R+cJHD$3X#b$
%ehLIp/CX;0(]!!rI@*\h)N,#bO.b1PER'$$**>$+G?]5,k2aCWg[4$"N!]e!nQ`cg%R^C`O&,d+Ap>5PdGT>)S$j(#[P,*T=3*&p
%k1R[^B/&op"_q*Sr;?soc\<eP_`obn:U\X>kj22OL-k'M#>*?QJs=Vi#D84UW5B@_9E6!+7W]<aV/@-.SV70/P73h9=a/+O`[,34
%im7AE@i&m<EoOkB*Zd\bRP26_e@hm/nFZM:W\PEFm6PE+<Ol%OD"5Yo0lsQV3'FmT!Roucaq5sLIEprcW\>N-XqC=\:9IH_NH\G?
%k+":$URe1Op@c<;hTlru3Sc\Z]%$C]\[.3rcmOaKeiEnQPMAN(Of^e?5YGU^T='_L]7Y1Y.t1VMS8:IOH?OuO@6k`VNio$uO<_G)
%&?sj66,Bn"!snTjQY?h#NQs6hEWl;/I5KBQ("5mks.:\+1ugph2&/1nMrcBrd8Y4s.I:t&k_;TnP&"ge=O<qGXsaVZhW;.SH>enj
%U*l0f4rI\hEN$h/A^+!s[P+eM'rZP*70E\`\?ft0(fY>7ib3S)Z.MAq(NFWoS=%G/NfLt+`$NC*S1tE_Gn`./[_:(+]cV+!QB,H@
%]A<<=[IO7HqNq)]ho2CZfce:V4Sih#.%q3tZ1c2#aCCHN<cNBZa/&f=/9sojh_\'(42*hL9_5nh)7+5HHiG'+XH-,#7cT?[rQu]+
%G)^$c$0TUUa_5Y9qC<f$1&-1h!p3g9-O6DA/\gi5RE"\9m2qjh6f5K]MXrU+*UU=TDg*_V22CO</YRDE3""Ns?c^^`\XXH?+3,bl
%2GKJ!';$:`[9hOYG\0Y8MPVuT@SJ?kogORoUG)^n[']"=db.`/>;Kh,oWh1M7GO#$?JYSXE;ogQ]t(t7l"@uk=#3L-VlPS;B6TDS
%4R:gjT";DD2e\i><c=V5W*?TdDc\$qOABKc?gbU04M;TshMQPdmc7:&b-JAADr'76m.TGo\+YHnq<=*L`O"ae&QH(rf=u=j90G@D
%g3rh/^Gml:)p<R9O,)P7qqgaC?2a/O:nd=Nm`arlX68<r^+RN'1Xho4j8Kou_YMN5O4C@j?<?!4^\$9s4hRDh]9>D4C8?#W=$-97
%ld&p!S'12CPAB:AB"otDn+XOKcCVES+*ORN>kFmo[s+J`dT>nXpK&0eSZhMTd_XqZLY85pTBFB^oqsq"aH*sh@G_$l3</'rHV4X3
%5$S#pqs>7"])/P?[_6ioBu^'o]<a55lc:jO@Bb.\ePs:X4WLU5bL]\95NVXMq9GPjm_blfdm"m+0&M$1>97'4Gl7!_Xe0[PiF!c-
%g3^?8e,O-_cEg"CICaY"a6_ZlBA6&aGFmTZ3IU\aU=8#0q[3S;^GtuSB*$P]\T_Bs4%I28LCY2-bWXC0?P`@BIWW"sFA@U,q8<0a
%4HLP+T:NXtc09R"rP$@]BD7]6%A8jT(CO.te"``A]maX+pt3?f\@a_Lli"tJ<T4`8h6kSoemlC@r9`J@]C!qN@dDTHUAO`L%Z'aZ
%4h-3jnl`Y-YE)L[O-fS/Wu5QCn$`*rrq4j#m\@Vrh;4-HT2)X0Kg0r0.T?PNagQ)i8c"d/O*gKdYPIoCcY`L>l'3?VReS;^^k+d]
%%j+#BR24U+]*jYGqh=jVmGD6!UXfhn"2.c/V6:(q/NjImI#T]<;[[NJe4:3QhH9&l-ZsW'B2>?"Uja8+2S6^em-Zu^rbH(!\9E9k
%D7t?\s0V\%EG+n+n@Z)VHha>A.1.n_NrJnF(4<LfC$!6n-Po'Aep%jDrO*fIR=k4t;r;71O1RIm/)-jtTKB[`nF<WkpU6?K1/tUN
%4b*6E8Ubp8><G(Iq,YeTGlNG#acq.M$<lr8oY[Ncl<@P`WT[U[?<+FROVCbNpMf)#Wn0DTQa18c/Gs!8gTuPSX0(F$\]s`8S]tg1
%(ZX5N[3ehcDuC3E2\=_3TD#>!f;Yh9i_;;q:#.tC^\h$Dq6[Gmbs1EP:/@dodJC^bi5B@UW2%,]q>MomS"$&GdDIU6]\Qlj9b3a1
%YcVXuIN:W@]_])/U:7f,b[gP@XmP!9p>JO4U^c^q\oaS\hFHSj]YErMl07?4Kc1V$%Ic)ueQq"G1P32Ec_IfqZCT\Ca5d*Kb73F6
%l1<GhRp/ncE)+-Kl""Z@k!I7<B7#M@kKN+3EW=VDdjWi'B_Lj;o]\=/dE#WV>^5u,RBLc-$i%(1I_F3[Y^6:sqlmEsj&u-(hSN7<
%'%jbh<-:*+*:GMogKY]i<m9k?:sJpUCun=:aN;TsnOq9AX(FR]_d?@n_u3qdI1=\'%L1KYhu.r+&&*)C?K]SLaTGl;p#%:/_L#1q
%q>$]>H2_gD#c_;Sh&#k#\>er2>42FEb`a42_;4NSkME[Y89iVLID:9l-OBhaph0e9X5'`Rl:h6dlmF"gqtpI'X/j8ke!n5Y:ups:
%d)A6)Ie\.R(%c9S@s[ZYH#N0E2@=X1MemR/5CY`CRpRW5e#t%AmXl`gIe1P<SY^sO=W?,]F6ojZ4P>'((Z0'mdd'\9]ZIXs^$QMX
%DqnY2pMYOcc<$A0Mtkn6Yk3;d)f<h`aeu&&T*4L8<0McAM\:dE\qD,FRD,JH<?$AV)Ll%ccU//bLb2b-Sb\\F/n_b6`:m%T.p-='
%4Z&HpU`8T&_GW$3+^5CVR*o(FlottebY\s_B:X8k-;YU'e?R5jUfM)<$Pg%*fGmbHeI[_OQB:@.>3TD-dZENZW_iP*%Y#cjSj[GL
%_T89JjO*DNl_&n?;JE(ASkB`$nF<@BHgShO[00H-CCL(Pl73Jp5tG"T7M\Otpod(8<4s3<J83L:IGA@XQSsb5Rf3Y7fimFN3_O6F
%O)*AP(@DF<U:o&.f1@bq?OKn8l9S`$$W1Xir2N>l[4Vj;">qg],RnLV9kc^]fia?md]^&^IG;[MaQt6fg;hTcWA#fse'M[g!fQB\
%NEB,%de$(s7/+:XAkZHE1o,7N!Rt['rj^&hP&R+Ur]+Ja2K;?Y%lFobDj8B4^S8JZ'*MIGHIq!SGQ(h*#/[B]e9SC,q]#[_k9m\-
%UU0daq,)&bchF-%eN9hh5qV2_@M-f&lT=^On)p/N(?`!r)\6$,I<b%t[[Gl$`aFoqI2^)JTg@_O_$2bN.R.I-\%I;!c1<6(%q<EQ
%T-mCCo\??nY>afFIR^Ys<2>:+I=Q(VnZtombY7KHmdhg@,d1hEql',KB]ErBj*^65j^J2:<;PoHDm?lpio_;"m`4R[X^UVgk-*(2
%je[*WCg>J4R-4aOW>M2&ZEaa(cOJdGl0'eHhK5B\55<MnTMn&Q]%20+r\_^BNjlKAp/fRHND<bQfN1^"P^dD&WC?^TWQ!uj$48fk
%e,lU`rV#R@H$AHEfuBf#p!41IYP_S4_0@,@I_L3<1i]MueaV6i1fP17:;fA=?M1nE^&PgZpR?Ic[rZe,(II!a3N2'0&$=`*+!Ytc
%0l1kBm`*)p8.#g[;>]6.nPB`_io"g#GNSl<>JoddnIGo`?JSibq=*G8UV4\UZ`^u><@(S/IB`]o0@#m2Vt"q4InEE8[2-5*bL!`,
%mqe5.125$RpTZUMfFQQ**oOs]:(Pd`!FrOk+$Es8OgZA*IXHWMF]Ufm*LO7<LeOnm(Nm<mDqt@jS&73Y>O`I.Ghq2$qf!:_G-<Fa
%Dm.fr8CL]]&h<4c^<PQkT@CVtn(ZG![sBPp(I,j/lHjbhR%M+kkd/[Srj/HQl\cn1a2=5r&TI:1:?V;nNH`)(rGDR%[/&aoRGP^2
%>0m&k[nbpV\t5E'TD#O,Q@F@o1&LJ1lM'c(^:q%L);EK(p0Tq8^jgb[G2?BGb'[FI(CN1]%j>ACc#+UEA2pI!7"p,JGnHP\2Uq`p
%Y1a%U06np/Bto,ljPAa\Y@1?_c9;2P';h-]Dkt<YFZ*:0ItP143#.?iDcG3re-HF\(Li&P[mNBQ:OD[(m"/EPH4;JBWqeOQ)Ok@i
%hbWgF`OWJPg+93Mb(H1)3u@4tFZ/+e5!f^b#?gN=@KGgXSI*$AT'F+=g-P1PB9M*3U$/BB`gka?]5`rY+YW<+R8BHdh(:Y@\?[&0
%:9Y]+U-\PAY92!]]&b=0nF=Q&&&q1I,9+G^p/s=\l@8h*.`JiAXI`^>gMaN5(2%"R[NEMj9m*dd[-Y)T@"L0^^Q/'"O$:c>HBm>+
%4o.28p&e<@k."X_/i\(OI\F]B?S!53HAoaF&rsVh9<Tt*:S@,7B.FK7W#[dL7I*<n;R^TC15iL-J*kMJ4Pe^sSGggpUoaU);uCA<
%o?]IScVK$i:Ph%McX"q7$E!FX6YOA5F5>6cX$4K>l;h9K6;2KnDn`_!ldtS8qO9204h88s4ZiMoh:_.(Jp:l'pr,\">jQiE)6P(:
%Y=2;@S%3lY+1uB3;kH4!q6%'W?c;qGc&Atn5IG_s;dFLrh`U`r]D'S:5c_YLJ8N2u*]lP;49E.Z5Cg!"bM1nJ\Y"rJ[>N#>%\]_C
%D_1m61*"7TYe;YMB'X!:SNhN]m4`3cN70\'s-i1H*EVuN^ZA\u2%aPU+W$Pq3O<gHR-fFOm!hooB4$'lS3*_@ET(._C)\S$c0OBp
%'2)2bg$S1/?fOR=c#g;We%OW/8F:UZ]7YLq^t^]5R/XM&3;`"6!Atd>2Ij0`WuDGa&"fQeFC0.HCbG]*2iq6VbBjUMc5(&>G6[>h
%qQRR/Er"OT&2l"&hWXdKiTKX_nBLfmHnWdc>6!?Z)_dXiYBs3oT(K(]?[Clf5^!Ui#'5-ok+:Julu[GiI?f-PUqI1&db]UIb(bO>
%D.dsL[eG(Hrp;f)dE(KP[N9iX8],SlS(YH$H_^?6f%gdsnDT_!DnhhR.;_)JdadrSXec8$:sJ?bLW/H%k2tJ=M9.k_$Zu7uWT@rk
%DdB[Kf.Rf=jQWf'Ep"skNf.\?*UIpH2p7:p[/<u%SX%H[Y28MGo#K0%Lq/aE/:up!!9[8SB9&iJ6eDV7[*<ejp(um6TAVKPd_Se(
%[t2P4C&d&cZR,G;k1cdA?f\n9am.m#KZ[9k$WXOJp(F5M/'#:)Wl8Hf+.ltn'Eg%H>;1^)<(._3\[h79GQ6_"H0>"DI%/ZtnGMBk
%GPeV5:0'K-[jc:mYP*182mt@7prC^DFkO"m@GUCiQcHj`GH,9\h5pp/GH1Y'e+m>5i92NL:hrOQ-@cJUZS.XeIH`qF56&^DE8pQ1
%9Q)67RHi%?hV@b*qL/bUK$?f#U"=S&V!ab;h6k)8SM=2fY^R\$oCWPReopf`g.b7_eU#[AoYp[IhI:[-*?+ojX*<U?F:Rot\+ifH
%TEc2rTKbUpN,J/nlFrg>l:q6%07PS1W@d'h4j<SredadlcS$qiot'HB2L9RB,l!f%UYWmul'%'sdR?[q=,ab)+g@_#DCp(j^J>[/
%BA3*LX2.\X=#%hp"\Pm2j.5SgIRd-b]j7$eg\Qdk-*QVb4.H4;N;u+dk2YN;2Yp)+rm#+#NVqY>D4F]mmi;@Tomfi?0'ffRrF&TK
%Ba4ohqp2X$JF+YoK8nD7X*7UZ)DIWY$Wd&8htma-Y]uYs'3a[s(g8N*kdFjsS7fk==A9n3*o*Ag&08kS0[j,dTJap';)Naaf(%7r
%[p2t*X*>h7F43).4Fc/7peZFF^!iHs^0:&m-BilVjVIi7d+R&4fs)2_Tl09N*SrWfYlJP/l,g-U4l^cSe\!Qt#C>h2X7acX`EP&\
%^m(bQ[DT[6(rqpPJ].`AqsiZ@2*!.22*6kUY2pJSrEIN`mK3ns*BtIFC`Pa2\Y@mAh=k8X#!^[V/fd-gbJrmVBe1TVo'ul>pE&&o
%:nu#ki0^T*_!HH(L4&jU(PLga0>eo,cLeTpHQRQX02=u0nmVp&680Qq;g0^33+]mr[T<s)If!u1Z+IICqRl]AC9!'TWG?\=WH0aQ
%UkiaHr9i8J?hH3[?>YL6qb=o/Mf;I1D56buG@!N/%V+Yj0^$aWfu86Fp3Cepeh+Nk&@N!+B4$,B]'0+f-4\GOMQf#=M&Xs]BSh]Q
%f]0(\mUZ3e@BB5Xe_Rc_E_Drf5@<W&5A38RX4dA.]aHE4p-?rQHanVW8e:6);qsSe+@qTHNkBT)\B<\nJ(-3RBBQc8!<TsB_2$"9
%q]B^!T0N5LX#ldMFu)%FSItd]0Pp3JJ1(0`8Bl%c\pN8Zn_4C_?Vd<f^7TnGkq1a2D5Jh0MY`6P2LaMe%\r^VbYJ<U:9UgL17MWO
%[Pg59]=[1\]p^;V:<`U=0Q:6_jdKb7RKIaui)8_.cd23tHCa`JPM$ab(WU5J;5moJoqjfU*pe(mloc9Pq-mpBnnD`R-)<Asa9M;8
%N?4*[K8u@6ho)V<.X<_K[.R4@o>f<M^$\=EQ8`/<(ijPlgH4]5J.ZqqrmLf$r/;"fC*\#>fkju1DTC!Eeh]@]YAZ%YpNsErAn?=t
%]?=HW/$O<BC"fQTD<K/`s+bpuli')?=JM=Om`kK-VS=b>J8`D89^._S?o7kgLIupklbTpqeq_Wlk]W#ZY($:tnq.ookXH5m*u`43
%()OcWch)+Se(7Bf5X=rE*;8u29>jb"WJ];+k@dlelL"HA,NuFOVgEXY.@=DUIP]f.G%2o[1>'Gk\U+!cVaD[smnR69eqf*uBPG/l
%T6?:,43(\M;PL-Fna/I=P/46jk3>D4jBLgCVu%g0!,a6q[kbV+q9?Qu>&76YoWu*bpZZn.F_LoNc'@>C:nA<rZ+Tt?G7W<P9u:up
%E2$Apa1on@iKfU-h62/ID^A'6d1skh)n^M0<KKn_?UJZ-U3CPK:@IFUQoDhilM^*npY!Gg-*R1'r:\9PCO2JY-+k$i*.3#&0"1b'
%%-6Q7*;N[L3;7:PU9hD3^Ve9;)^aR*Ad4gdcDVPiZW)g]cJ7F7f=+ELBPfQoIbjrP0JBYMYkZ:<"4sfl%39G,*b8$?e<SnHec&.q
%lI<Of[sFt%Zb9YP3V2d)=Lg/mo]YJcp>C,%qu.:sI>S:&Qh'7O)kZS-^NoT^poBn?SiNMg^V$iL+GVD`iD#[J]\Qc1FR,L1pcji"
%#/PCS?C*97\^i[WWR#>b#8aaus7itoh`6tR]RLeX/Zs;Ehd7?F*=mXk*ZpERa8\-)fB%u6`,6nEOFY"\"HVL`SZge-Vc`ckn\O(Y
%B2:Vlra#aT-=3hTZ7QS^lkKnTUJ#fIs,#4rQYBq#FRS]&meFOdg%E2LBIu5l0tr@oQh>R;>eB>85;IF#(N2dTSDhYu]^.QGG>9eS
%Xc`,CL7NXXgAD9%e/Fj;>3A+?/U+(sFZ);$Q9&g[j6,X)FZ0"89lb4&_T'5ahg*C6]4_Z!nAi&peR+BcDS81X_XPl-qcuP`O5l/L
%$++4.po$'U`^+ECU:^3IinfgrY/Ta@\cifR!_4A2lhhS+%7dN`3^c,E*=V:YJ)EaJK9HtQ>'m[%fu<G.1;%e[V)*F[R'#&l#9(5T
%Y)dcN6[NIJMkb]JGHF$%TDH8(P_Z/`-W_8qn;Yiu_gXi(HFGj0a#.&UhC>mV[""(@iT0el\=hSFQBF$j'7Id\.;1PE]@'q^Os\rb
%jD,]I5G%SZbWB[3&&=0s?@LroF_1@5jPDbb+#G)W,8j27n?-SNs4,;n%QXE)h!9$2YR_W_/qkXK,H<nGm*OkoEI>?I9ncI90%8dB
%Zas,&H:3*n)uU@q&pqJ3QX28=/u`FTFR[=k4H&iZn)t,=Z<q$/KCdLQc\o]CUVYg'F^2SkLglS(\9&1<#<t\Hf]38a7<t.l:jg4U
%l!HJ^Dd7*ediKU%^HigMNWPl234q&L24Z>Z6O(n5/igMeEnoTfFu0=,>W82[+'s?tc_!#aV5nJtQs`JQ6D)F3Ug=!9[,uF;M$O"N
%dFQ6TNO@s2Q:;V@9Pjj+=54I3*BuS#&pbV<KHREh3GWkr5\KEXp]$i6Mdb4[6I=$IoQY.jhB2YM3j%9>Fa7IRqkVC]9fqI(TU//i
%jJ4/jn"3MjO7N;"n@5n9c+CHk(QNiJUQ8c&):mnt-<8W!QatQ0RiCQe*'^M6$h1bkX4;U<@bkm+kJ"nc)n`Grb=gB?(4(gs9fgg2
%T+\j#pLh9p(4NU<08BjHpi1Zgb9$2U4_f!BT1-TfE.;M=Z;C;%cPlB+Y&r42=+198;ct<uhtm6-VPnSe^Ye;ud<$;.]'2QH[qf9:
%?JEocTsUAUBA]EXgMjV>1AW"ue=t!A5Q'R1J%MBRGOJXL@39hq3m3b9_QC&']'1]N:QT/eA[KZF@ibRDPODZ;#4FdBXdLBVgCg,i
%4[`,Rl#FFnk,)f2@l-NHSQDWg8@J&n3J<8J52j#1T.6L88R!f'>.49`Q>J2]JLE[f-g5?.MlJWZWX@Wm7"UGcJDd2d>.6".%54X&
%Fq3RaH[$Q@!gWB^U]!*F<BJ)g4sRT^cg`SX*NKVTIN$jKjan%(4lV8a6toA"iF?9=p04^;h(D]F<=fmYg@Y:U=*)oHZAS23&J>3F
%2HoTj+9oOO93!Bf"dMG["VE?%7S!]F>\Ms)'u6_/J,e8U$g\p?pd^UY$[adm>+m?#AaMmnF^\9LW6@,A"cDg7$tr)5"<&Y>!&b*7
%5nd/G;2*?HQ?<P]qPG/u,q)kL[ec!-p.:duMj!%Yhk[glD%T497(Xq*4K&7+RJ,^$f.n*.2\N@U+2%RLhZPd=`&F4F8(C(X%hTNN
%.WLGBOl:Xo@NrtV6ja,LD'B=H>7,3uC9TF.RM,+6<p%@H2!)O]d>WD!XOoj)-d7iH7EuVZ*YU.Z^q:"1#u+PQgYh/4`!@b-)-G7R
%b%kRBK^LMY8df=L6P,t09goQj6AVXIjW[Lt"b^B&JStS@.Q1\NKc3H3I*OS5"/:lbA!J$(Tjd8/$OqPVf'*qR55[GgcksO!CZ)Bg
%MEL8EU&aA<99jZ0V!kuflidh4@c)uFPMe@hG'\1/3BlPbogk&q.?fgSTG+#&6@r8jX91,KC/lO@^]te"7<13eLKERh,UZU.gK@&e
%%hbEaUEg%iOd7k!"Z4UV:agEg2bN/dAA$546UhsVg+%IlQU:saBFLDX<4*I$pINSoeg-b5Dp[,lCGuQ+4.!Js&<Sa4;rY^5*-Dlb
%;b2WenOsX7bf8f]CQME(Z+NQ5^di30Mj&dB"WaJZlZLQpb+h?$NLW).!^sEB\^_cbh0bS*GA)tlC?,35rKI9a@0k1naDrD\"MMu%
%Q'#&J@F#"im:>r>fGXl+,eGhB@,*TC]c>(I&d,Y6)\:(j(APC]h00#Z1!2bT)<DQ/M5<\jF02Bo[Rt)/ld)<DO<iF1!%>Y1M%Y+i
%fE-\%$OU7U<K\.t?o.R!-U@t*`YPSi8&9&M\h$AY6:pLHD&8J_@6i57W*JN7p_9W&i6:_V<ZCSnX<M88o\Q"/TbSirX"l+0T%BDP
%e:A(F&27X:V"A3u25hBp5q)qqKXQLN"7[Ff5[t`3+q6pSlp.?>JDme)i],FdmKS[gaJ#&6;@Fhl-+O[/ZuI3(,t:+aZTb3N25n/c
%[VbL9TAj@PeEkg,WFV#Q%gH76Vi5gq'X],4=_<OJ]LB49Hsi9WPk`mK`B=uhTI7M[p=kBIPtJNq8O4leS(8%WB4FQt#ZY[*Id=mu
%5O3T6iMS6D9j'jo*7t5ork_50KbT95=%3bNk(=<5#O!!nL-m:)+8i=f,o"N3\5o0`%`4n>qEDXIDTsOE/C=f4>_pmMM,k'oFfZ>W
%$#L#4@[T$>$ZI@h$6Ll;Hresdc##NWoT6TP6ud;s_#C\J<Q!u.i]K\pKY^GI2(LBE2-0#W,?#Ak%]r[6,;B'u,6&3Qd(@u,@>n-)
%oZ$W85W'j%6oZJmD4.)k&2^Q7:_74B#.5MN@8*/)R.8+01%:t^'0-fSO39!e`*oLHDk_SnOs>g4!_VfF";%P8+`KgfQZbBG9'jL3
%i7OVE)rS]3K\=MASO8\\GpAC4$=cni/7@NfU%,?%9i7X!(=4LAA`pqgAMQ^G&?$@VKm"Z]b)1?C0VOUU(mG%Sdpb0B#^up%nKNl4
%)VSm>(lD`Mff"gjJK-O;<YhdnAK+Dq)\"SEH!)LjhfTc/eB8kJ%a#[@ic;E<*8S<&VY8Q&Nq"i4*&'(4Xd"o(Rk6.0XoLcJeL5d#
%KEl:S"\6stCcE3O$2!gM=017i44j$,1U%ooC.*(RR*3(h*TSQuNknPRM;cR9bM-EMcu1%A<qmgV0>=o<B]j!sXg2g-,8eXs8?s\3
%a+,\[7R/D9(^)q@\$9d^6/ga]7)3r04roe$3%Y^[ZBZS_'gB$c^'Ooq@5n9YgL4q'WIT:OfeT3<F["F%qR5(7gicSCn6V>;!<>!/
%UTiY=-&g!f@9'"*1_>j`QuK">RmH@J]jO/ng$oY!@#9Ff1'mT/*WncoN1<)a,_l2p/N]]#\SL]+er[poaS[&PKQ'aX3MA<!RJX,r
%'=-C#%rG6ADF>@O!&I9h]>4tB*>=1k%&Y48Rk?*=.L>\_AL5I`":d[Q3+Nk[5m;Y0Be2aj%@V<<VsnEjdY_"e?c542.Waq*[46"E
%Je(\;TIZEJ@FJ-4AW7k!"_P+Ej_gmFV:@3:9diG9g*WSI8LhrO$Ep\8n5Ir]jHWfLW;InUk#B@.6<9e8`W28tN7nVf7'D\^$RBQr
%o:$)=bg?,"7@QabDBT)J:haI[RSloP)ZatYZ4c$\KQTX#h3W*SW@L%NeYmoE!Z?#R_$g&9dTJXh&VaMA+PSJ!K,BPY7Hcq^*8jCr
%9]hlS25!>Q3hr1oN9cQ9Z3j*3l!#=;ZWmpHF!4Y,;>d#JMJT&&RR^1Bi`k;0D<T:7<HVq$\Y`u#Ug@h1(dZ#d*N!2l>?tZ?/[2/-
%+9B`N-C*f3/;-K/Y\=I16_1WOQ&kbb\2UQp85pl>JXQ%V#Ppc&>hg[,K0WIK'd$3,<)o94bb2bLi+"<Pf]_$+M[`VkC-=b0Z*JA.
%AMh;t(b-"?B4R)5YpccGNJ2CV>5^-aABgo45/J4P^IU@qA_@>.M0c-g`Bc<?)Irq$f'Maf%C"L[&Ci9p,!p6Zn1c4IDFVcbJAhgj
%@?Q`iHYXp$1;IXDh9`3;""Ytd7RT_kO.0D9EI_U/L4W)-:MsFoBQ[j*l!fG[0R]/7ii9B'.h/mGd8/,<JjRGQb+*;P$I'uo:n-mc
%S[<@seq<sL_)R"?eh;!,()>0!*[6L;Oa>G/U-*3f5ep8H@j[p$XVYbG;-X)4MP1T,iG4Z1T7r[6L;4K9'TF]i5k%u<IYb?ZQ3a!>
%Lr_>[Ki3*>9G:8JUp(2^loVR$<6RLF$68_);*YKm<`ocr=eH'5LR;0PFc/k^S7ALKo4Z2K%#Uq)Pl3=8L*jhB`%N>/@M.>WB[YTg
%BIYlO!s),"447t80m<g6(nlnp7[-h*0NP0YR"QfV"U`L&Q^B/]$\QVjWiYjnnA/[=NU[)O8QciCk1Oo!CGYG%g.I&"F(+>^Ahp^(
%qC5*1eNjT\o.bO1\7OoLA>Q#NMPoJB#c>$"C#'*u6UtL_>h/]13/**/]Zb>S0Jgph%oX1ZG6<C'oL'PKH2:d_#?k/>g)D1RB]hfj
%2o1#b`CQGMR;sL/N)t_<W1`8%)CTI2W^Zuuf0\"bM"o01fs!@q\#9?iaBT'Y@^^gq%k\62Kah3(`jS3&5\g_YI<"%'9Z:sa9t9Cr
%3!G?%>-d:%8I/#pjrFtfJ2`:VOZ/;PirM_TS=F)fJb/)M?ikr5:;>qH5r=Ia(H;f%)7,!fTrDiaRPY-MX3c^A6kg<T=XG\W1Eg&5
%&E!sD9!u&\.5I9<)HigHdA3kJ3R%kD+pCXLB[*9+NbPERN[0?3(`t'l#_Epf!S&^?`UomB`t6?ZHlnZqXlGN\ob<[kUX50H-RT;G
%-d+PRQm4#UCQ><D>NUt8=.#Z%e/cX4P9*,a\KdnW'tWOP)CS!t";<DD)uRK%@5:=5-)dj)+@Nk->.S]4Y9757\-Q(O[j^TdU.AOR
%/*rQ(@2#KYK#E+VF7jDu$@WGj1,f2aHU*1SQN1HD.OmO#@g,`AH0+&fgkrrlN!)d^^Q#2HMA"%A*5#\P"phsQ%'kIN%)3U4bDUFA
%BpB5e6X*D[X+[E<@s;<74hJ*.hB$YC6V7Ws$c*W6ADsHXDD-l=+Kg?Q]"KM^>\N"L4/d!cOgl6;PA7fPcr/"+QSb_<)0%$W[iR,0
%khm$4N1gIIYV6+]E`)(phP>:5;9,K7"/0jDPQ`GT+BC-_4bJ;j'OtBS54V+EI#F(EcpK5+gBf1#]KOpLjt8[4\7-k(,*9l4,j3p=
%eJm77igQB/qC<mT6EKXS7>P"adD0+^(5*NgFr4Kj:;&,UpU1DFrefE)LkmC,;1h$sZ-b%q\>l#[1t:*8epM-f?`i^;2DnhNOd&_U
%OekP5W"c]N"u4@WeD"1M(TfIBS!^D$D<dE%KSWmDeOE>p6*+CIH3OI3-H;FcgjC>JgjCh6>@eOfH'CjF2e1*b6!P?@o`iIXH*_&S
%1@rK_Dd`c%L_;/Oj2dBn&D'B>"+u_@&7\C?B##RT:V.2mongi,%%H"CkKn[8)N<U=7k$Mk.-9P9:-D9g3"reh0!B"`8=YYF%SBDl
%(+/4ISO$NSLjIYoWHh4D>+*Na^!^G:;R!s-0Q)Qa,e1d\QL]ZWL&MZS2r#j\h3S[Lfb(rmjVg(p6`?Fe4d/IRNAC!dN:7sEVQGWY
%+K"T_5JibePR59.&CJY'l:5m"Dab]9:'_964fMPB$s)*P>ubQ[+KWd[(@jHp3"Qn4mD]-D7EoMQ+u$Yb_egs1[YM!'pc/j(HV,++
%d3akL[Q`chU_CX0;SX:sI_R!n,"2rP*k'#S>ue$TU'UuCXG_C9@mZ.;hu$d_1f0^jmFM"P@+]3>%Wf/?,fAFf1u5tW9dN=,$(BmT
%);"m4Kk?QHn2X^A>WDRtO3F;Wr!W7Y$p,IIMYe5RrCEV"AJCZ8\R8#)1e!9X+I1t^jh,[s,Y/6Q/Z@b5MUOGpFY,7&i!MeR#%<Ii
%,jcjh.&K[t_/BE9bfUU0=KdL7<a`Dc+r%u^HAu0_GeF[u$q>8'N,a,G6Ci0t0l9lL92l<gM*)/"hb][n@1_$[7(&RC1310D>oOh/
%D3XE#=*T!V*E;IK0o4B':sWMp(W7/W[p^-Z-Q@c:[6AIQ82n^O.LR(PKIuDW+@8Y("Z/&N,Sun5f#qp+`,0*GYD`Y&;I:[c+^T(T
%"+u_@&7\sODBk)jAg:4-A.hfnD?+].pa0A[j,0PE;'WWuoSb;4,P\an3D/7WN?!S\2BqE(N9$]MA+DP28@0XI^"#I!r.mk2Hb^X/
%'nd/-_ArtMLmfD_\3>cP-$)^Z]-;9sk;Xm_,GALe%tP^Q=M5:U$q>8'N,a-4r<P%?"`8pQmnr3gPd5WQ3Q/<;:e]p0?>i;.b;!jY
%..ngi?uQX->_I@8%.t#uE^>Y(Gq\n:gdYbn&'Bn"+Z)K<P.$7HDcGkbI+,En_eb!KHs\S=LHpkcXPSa;"s^Z$`ji\+IY?HHm.`lW
%d63.0?kD?JU7kF/\^9u-.qU$2j+i664Tod;9!f1-cX8"7`>Fdtg.50#7S3`60YtS5;eJ#>ThKe6e7idWUOA0^RB.%qiq5<cAs?6H
%@;@.BdYA.Co!RIh@/GpRq]*TB3gllf-o@]h6B';sM?g%9P`Fg5.4E]ABKne&[2epCob.\WBH!1/fiXqaX>$A2if+Y@dBl6sf\"WX
%KIKMo\D9S#/$rZ-E8-I:8h,Kc;jeBnjtq7&7#I#R9`jk5V:G+C=lF-JEH=fV16h"?jKd46hOIRZ3_hUlZ866c^<fn;@ph\>2M/_M
%g1B@kX70A#he#Q(JK*k$djS3ueJ^,F=o]ho;G-&W;)PqfKlJ9WRV8c5QQo4%PUR&H>-oY!P59+uNOF9_]T&&5aY2N<S8OLMS*D`$
%Zt[RJ3f;+O<CI:!6IWC'!Y6/YF97tDQ/.-'2Ge)!(8gKp+kj0&E7%_'bdn?GQ#g5l!fW!p5^R1t\TY83_)ciZG-$D$'s9@NVSH:=
%mP2NEP+J#gVL;+a"E!q>9S4<^3@L?AA-+b3/2q=Kd7jeF:Y\q'6NYDQbg6EX:ijcbg\"2"Xb?2KL"<GI#o"LE,%mFtLCp11.k?r9
%?1q?70.M7tW(rC)]?ni<^0ppZo-(u[Y5K8B%=D9olbKXc\r\d]0ImA(iESn?ODM:k)Bl!=EAdG/#H%OC*BjH!3Uj<U>LC$j*N6&Y
%=(#(Tec[hO^f6"^+AG2U3aSm>7B;N1F/Zs^3P!HYicZH!`2.S\]'VaNMp>-(c5T/^gOVshO+l\5[iL:2+1D>l1p4T7$67#1DTU(f
%Q"c.-F)0C7I);R*(.[2(+AU3:eA-><NM%.C5?^/#`DO)WX0T6J`uWc0=Zg%*cZL\\=:9U.ckSC1red?6;Ri$"q;lmGY"Rld=sW.=
%/fNLZFONo3I]a%b8f8E.n@05h""%;8f;3Fb8`k69\:Pi#3'/IC>!RbsIS!lNONqu_.n(cZ\LnB>\LqGXNMnqjKocil?gC+7rGh\$
%3(Gjh;CCRFKjVcN>m;EF>l3V7)SD@fa/*,cE!NuhV-[.afS-Ct9^=3p,">U4<RrqIMU$,8m526orfIM9Y_tm&c5;>F,s;V/.PoK3
%2FRk_<3*k1liIA"GjaWWpGO]s!4V(!](nIo_W9t6`[>:^X(i'^%G1<<HcuOIP^+Tprp?_7`&`MJHU5]mCMDi6)>[)f*83^aEOuku
%$pi1q*2j5"_/8u8"GBAndbP50^l?C3[Q?dkYZ0_9mnU[%$R>F57HB0+?,1Q_S^S0a<Y5#h(Z%mFmK=$=[0r#+h$K3K1o.&PDK16D
%=>5WkG:.?T_sRZ1RCG>0X3g6/@!_MeN3roVL]YY^.d=3_TKrt1QEW?eFV%EZKZ2(/p)UUEBDiJ?LNIFiDp_Okjh\*O`=7_;9l(?L
%Lm\&<WJDlJ*U,JWCbmF$X:aP.Uimnt1R`7u-o@]_[V175ih6m#^8S"DD]'r[2d\Tamk6/aj^eq,VIQQ/Y`@e=<JGf5o7[1pqOCZL
%G"-7B/L%:I#^Yn?XXM)sY\`j!Z,@EmJUY4'en\,$=o"VL['\%#`Y1_q@PsqCD4&ilD-5ag<$]?h)Veng;Mu*i2PPc;81mFf->d#a
%<]F$s_`[2I@8E'<7tcC><iRr<SnKIFCmRVmXVm\:G=1?ERneG\[]>sqZZaqqLWhdr`)OcRDf(&11s&R4@_2j*'YY+4Jd,I5c*nlW
%#-iIll5:#kQl'?(Eq>8qEV%^,k44[S#ULrV_sN(B>T4:J(<=LA]4CRi"4iap#TO2G6o%QZ0o0TiU4L-O/r25/0/HuujQI9rpMMD7
%\01bLGe`OhdC=BfiO4M>\ntraG=0cdDTQZnQ()ch,G/u=10Ho<+Y_2h^e#amK=LC_ockP'kB4o3AP0/iHB>LAE`Eroh`uI`eF(a#
%^O8Jc*2b?9bPM/V$4f=d_Hl7iq`"$9b`mKj?fWPjJW,./Af<4gd[c+#q_pLQ[1H3EIj:,7r@;W6G=7r_W]V/9WaN8a#7&DP.dc!3
%D;jDdgo\DpW>SG(E.Crs/"AdKhG^2Th.R@0DiKP=78\t_JHbPBoilAlq?Al-Nj1B-RA\T"MY#e8".E&*7q?DCNCe,l9cQc;\;l)"
%FI9=AFEV="-TX4I""k$L.&HjS<(\'iEGI+M5s+*^D48o2EVNFHQfS4d)qsVp:n2]?L6aQQYZnG4'\>s9/j,TO7]$mMG+En*a0W#`
%?*qDhVp-2"S*.Z)P.'^ILl@SD^2ao&9N,5#m\SAA$j)J9nEBYo[Y.$4i%.Pr2"Yu`-RpfWRgF]Y?DZ`o770#<2Ce&b)1.X%h<1pj
%j!1uf%gO&ogOc7Ln]..$Gs"&W7gKTAaI(X:m0`,5V=EE(c;;gE&Rr?7V=/e3T"Do.FF;XWYEZC>=h/l*#_fetD+_^@[a=.BR%T"8
%K5iT$WJ[CVnJ*EH)KXqamLln7-M#O1c3aG=#%%p)!$-$;j<E[N?+/<e3oe)X<P3J:p/VS_[[_V1`5<33)aj.k':nZkXjp/[j*JIV
%-]m3q70:mT$UL+(fju:pAX'K2.*eA+Y`mXO@(aWB6isC*:U1s42[Md>"DYG(6(1ET@^Q5WJW`0s((5`;c8&#@H>4&N[73!W(T9bG
%`hd6^Z]$?;p'RiJdfiN;Q[&]JgHTa'U'9S-'-YY$7"+J\P/F@!A=Y4UdG+g7Nm[>4$6$,h-_r++TgTh#%1EG];2fL?QcBjgdu@iS
%niO^cZBlEVCo6^EpLlcW'j]7%qg>3dN%t`"k>p<I#[4E`TYn30J];"M[%F)VM]Kqg1o$2MpgN%ZnR[6#I0fnJ.X-K18#6DO>uoLM
%;NAbq'[ad8PkS%S!@Lbj>F5k3.<JV!P+^=_/V[GdUnA"VR9WS2Tbrf0e-2\=S;T7M]eLp(rlQDk8l5qfb&K]rLgl\cP+WMD0lX2d
%T[_nu-Bb#9.GDbD&8OaQGYj9\`'(H8TVtuB9L1+_QkgP(K$m1B`0s@-/1<pkAW_YG-jId7K2RrC:uS9,(R/qsL7d7gRaEB/23Q7[
%nS(&<*k2k^eL0eoAJ9)$KA0C/jHIu10b+h8H(8J#?960BDarbZ&*Ku"jah02[i)=(c=^h$fHoj>)JKH=7!Up!DSTJ:T8&A>W_)=8
%>0SJORqa/UA7>Cj<266R?.ar[4Er"f_&ul4NFF`A*,;epUYNOG2-M%qQpCeRSeX,-@of2kZ7n%#$g0OnLN'3!S#N[%0\#2O,.YM9
%39+h_1&MlIQ))8i,3l(Z36KGp8sQ&)/?h.!$0kT,35hYN./<//6LiIc3BuPOa-#4d(8NAEIFspA:&GF]U=(kiLrj>sXp16ZNLC-Y
%hTEQN7[X;q?VP3CDF*,k[+:#-7H4fPbagk<Z5iN?;^A8DGHea&BYa=3Q>coKTt!e?;0VpZWKf6Lq?"ZM5BUE>#u1Lj]m:_UU.M+[
%@9KlRAOl+s?ADfeZAq7fRFh&5aFCAXa7:2!e7Td-;a2ThSUQss&eEB2PVjqc^sTAc)L;rMU+2M*U?-\2`C'8;Fbf0@3QFquk7`%p
%](m-83g%hH5lpCO4,^oe/#./:*l[["8A"1^=\fSP\q3)SP6-JjdhK=..$DIr^;/c<Z/,HiX`;.0Std#QcI7'I5`S.3hM=W*"1]i"
%\@cX(`ORJc\Mhk?hW[C3mlX4)QkL*N(4b8Y+Kg]Si`89)=WbcEeNRQ(.h<)kD\//k$>>.:Zqa.^/jcNq!ZDmajJ!LOnr?MLd*RG_
%4hP[5ZM.m^.qiRIE^4kJDJggnPpgI+#5:@hD=\qdmR+<"%j?+^.][r@W0+KYYS,=.Pp&>2e^7\+;W3T@.G@Qo0KZiLKmJ18c3Y0L
%[W-:D$TmQSD3Qeq'ZPF.I.$+.;\?12j4u-hQW[0H,hO:.XsiLsK4(e^8dm,BTfWEuYrdYcPO=*&<kB)#p:J2P^.9kC]\\0."p6mJ
%'uo=rh2--j\s)W?UhGN$-3gQ5hHD.gBZ$UM4,K>ko%ba8`Ocd9r7TkG.&\7,F$b1n!D;X:BOENUMdhXggX)Lc8&3%"md;aj?9R"<
%:eZ-ASVLq;ALO=XA)3K`P7fMc^hKBUKsK&c6i/<ibC:"5'UmE?@H[ZBK`C:i8:6LE_eU)XZA7G$i8!bn9O@pZE:S;\&Lf2.LG:TO
%Q3L$96/PB^&hM&X$1+N%N+CkI8H^r@?pF8Y"MhNj-u)V&!lrB;9:3SN>p;]kQeG4b&hK/!_JWOC,U)%)EIO)WZ!.8Efe0U!q]oRC
%EF6$lCD7;W/K9L>J1!eP^l3bl-afVa\6N]N]u3uZl?@Xg9M(tG5-_=!d:iYtQFhuAb04Kp;VK:M7p6RCSF8X#)u-rpr8mY2I@CY+
%rRgH8fKDAsLDYO#VL_:12-d-98eOoL!Xt:H]W<E2&ica'$$OqPqn++\i5U]9Fq:USd`J(51-n$XWKSh@!5fdpa]H+g/EYIqfY<?_
%8\29;;L;(k&u1[e:Pr1i@2FKCMNKU-ZlX:IGm8g="?Nq9,Jfep4Ng80-ub*t6cKhd1QkEia2<gI\::&&Ij\?mOpJ[),9n(HLg25W
%gIR:cp555>'UNC,k)8/J$,<Fa&rm8<F,PmS9n8Ft,K'c&hfm&fC-Wi$X(5eT00oT.LM[/'E7uK*N^gWbG66!/CW)'Vo-u2kE=tE0
%42<9m6(A8NU_I#C4WGQ7i^Q7lcsW\MC*RtIX&T!8QNZ>,_Vd*THA\f[6f"_ui,`UUG7Q3-\TJcZO^YnC"p[<o8LDcnj?r>X,BI\Q
%'#5CBSRENGMPa%5n=XVa$'o6O_JZDO68Ecl<]bLR\GJ\:1+fLmOt`&X=JD5i#=]TQ+OIXb6g!!?`SXr5'$h:<YT#V/o=#mS!s=()
%$(GnWN]UDEYk#F!=Ac^=gtrT/LC4)<D0KPr4C*J5keK=0^:"f<(JnQ0MYqi&&WI`6khH/GV-E$>-O^!p/Ks(F/QXcMBoI#P+Mm%l
%K*6?&%BN*(]$)4d1e=iqe0'=u=Td)Mr@pQJ^+dYT?:3<c>*u[*EJI")Y&qP`#Ctp[./\o(@Qk<Lb*;Y!:tX(*_k@/V$Ef*O3[C;)
%jJj4^T_@=0:Cuj2&CG?j9<`[-+Fuo<a_]6C4D6KGCV3'O&$td,/;uOB78_541R.do*642CSd4@r63F\/AXT%o-f-ni2Z^'EIKah$
%0J#iA,KYS-40&,dWXMYE#9ji>>%A%+#i;K8)$b\'GkK7l-9Un`qm8HI5a^r%r&rCHD[XX^Mi.EuLE')\<i,-4p-DOQ5%^q!.uu5-
%O\VL'm16HM*XHb0"8c.c3QA]XL]+iXOX.9lW"<k4O\oH7b7i_:jcYBD%uHV3R>42(ma+=qGi-hm)_m\@j11GV86eJVcP]\.O+oZ\
%-mZYn)Wi;TZ]A7Fmt(7)TSqscd(s-TFPsSU^\QE@#C%;R;I\n;6!6kFB@=M-l/tlOk^^1l-:61d,KHdR]=!`[*E_#Z.hTf3U^HX>
%_$:*R8sX$p)`qlEd[u857I_*_k7@LC_(dikE7g3l=M)[dai=mOZ*Ar!IdE_4X#-fL'KAXB9q+uTRAq(JXNoJNJIbj[F/<@O12jY]
%n?E''X28O6G#0)<gcOg_$1L?L7b%8J["erj(gkdG,EZF0?l0tL)!m"gDKgR)BJ@hBe*bZ+f7QpSP5?c?,Ym:ag`l>C'mR6\_@fpY
%lk1V[Qq4b%Y3b5r%a,J<lCElS&qRZ,PVKZ-L:1"/W0Bh?;a-)5&nrQ63FP<&^hKo-5G;;6m+*&%A0uLRD.NbZ_^BCfJT9]lh'l9X
%970(678T7^mbY"=<0Vt9K;Wp^Eng\M>Q-$WJK!<!"":3Jpf8'*d#8PH.r^h(A[#k!*&6b^r4G#)IFgK#l3NLRq'LG9&(P3pGN#kG
%N`!e1l33VLH2^J54IiDF@WKO=A@YjDIJ*^T9':ZK/%_m%kZATLgeZirkp`,=et89]0o$:Bd;9QX\D7T!&egA,$N@\W)?sV"n#5T;
%">SqY(=h_)MHj:o38!CR1HHs+.:bE^dMeNQp>:PF$ce9L:Q(u?.N2VEkF$3B2-C79(`!hBT[B,PMpKO7@;,87bZm@Gr^k]Aq`M$p
%>q*S?=RAlU!ZrBu-+@Z;eqRL1)7j-Od6%Ed6P4V+\qOp/H7_RO.0a-E$TX?TAo"=`,iu6X;MV6cQEtDu6H#2U!ZA[LK`#<efoH;[
%DA,IH_],J]UIlGh]%h,gWJ?U1%!*93oJp8T=a,XF2sMqr&Y2rUn.AJUPpB#O(+`+I,G@D<>0EVaHF=8mF$"3KAfM<K4.+Z1'Pus+
%a0S--eBd^6@2)$'+Mf'hZeW.u7kc*/R:=AI(n<YH0r6e_4%-lQpk4J1r0tkRi)W;cjTF:6?p)/2WaJ2ca97kDM9V&1Z?9Q"iiArD
%gOA8CIKJQ(@H$O.6mf^>aQ/\BndJ<PQ*cAJT8(7A*Y&jNY1(dp;m%l6bb?UXZk>!:N`Q4;WiX*L@3bUdI%m4`QYWhAji"5+lO3@O
%?B#61Ju1;i^mTV3_(H$2GK"J-QPa42PoAXkV<THmmnu_!jS3Sg.1Np7b[/h_^]lG5,#-IKZejM.(q5,jUI#%"SmbEOhut:tKgQ@5
%[)'tX^PH\^Pd?onr[m2q#2TA/`bOQg;_.dd>p>lW3/On?ns3g*dZU!kP'Y=l.bq8(lfbhZL/m!Ck]V*]b=g56]Yl7uHfkYn\^=TP
%#Q#quX\ncY4$A`bnP2@6nNKqtcj](1EQ`gJeH@]?T_kZ[bSN-hN%6Mr1E(p@Y)gobgN)phNiuG(g=qYS>N>g]Ha)_Ec][-WaYei]
%TJ)6E_DmDh0&rj\)@fu=>@Q-/BP;<BZgW:GJp9Gb//^="YZ`7ifSe72&ED3E>Wudmg/A?#9q9NW#*]8-S'(fK6WnZ=2hSUm!brg+
%Y$-c(0M6P6ENW9RedM(gPZ_N#EDq.NOpb*\NJMlb,Inr:\@aPEO#LsB>#S]<V96Zg2%rhur=V:YA+QY;-Y>=`^2p7k0XQ%WOpg?i
%Pe59^+aSnEDZcg@9;ttGCqkqd<c4g@$%gP2L;(ET<P.+e0ks%4P-,.cp;JOjO;FBr#S;!>A%"boK(uFR1tkqrNu9ZCg[-R[HcrEV
%"lA=/(K@S8_UqnfE%-B+G]#E`\",u&#1j2(6boa".bi!l_dI.G(P_I7+[tQt-O"R8JImtpPt#f05j=Z2f@uWDb@N,-j27\84j\h*
%\5Q7pkSSYPZ[IB]G!PsjWEMg2A0ekZ`6.$JUp^@r]=jV"\G<84\)Kn72`<AN<`Q[HAB)l4=S#c7gK0-A6$bd%&!(>6jp!'Qr$^^7
%E*N)_:tU^+qFOs!>2^uJ3CE'-8fXRAG8,.+Ck,>gG:&QLb(cKY:1fc!X>e5Ap@R:H'V_8O.-`rh"Rp(S(0!e,Z[P5kK6[5mnY5g.
%Nm4J2@o*0I+XRpk@:k9N02Bg_1X:4"`e.@:b(@*e]<dgK4!uTp6/L&[qdqYtfWc6;MG0t;%H6qba?#.X10riVBmOc3!m907l[/58
%./>cAe;Qk_P2;j>==Js,8Q+R%_AFZ??-JF](`m4jqpOmp6ksT;+33_[,lY>@LJY11/f`ELTW3Rl5(A%f*u5W\odRImd]L@(@E6cn
%G6lW'3DLaCXRL'G&AVD1E25He^k>KG7A&ZT;'r5BoXsSpbZ<53WkEm^ar#nNHW?Q2/:lWa?/QkIH7CP?r<1)T/KMt^9L,Gf+-.fe
%pUo>c'Skjk$I(!ZCra7olA/"*Qm05?)Hc]HT;.,&W2J"$EXM4X&rkY`Op^`q&<W^c"D'W''UmFV6CY;P*WW0KdG2>16Q9Y"oV?=h
%q[(E7WG5n9JM,,Mi&cPaa]qCbCL+&B&CI9O"D&%f-o@]X69Sb@VCc2#`5PHepid7I.`mB2';M%GEV<5g&L92F6SDfo".*RjUBI!p
%UqI7<'cnNTAarbsb5OE-/TP$8`(,A6@p6<Mg(e)dE\lohOi%/.mH^KuSf\Ik::j+iMcH>g>m!dD[(b7*(\?f,ic,`$d3+F<ad'/r
%>\pDWP:KKhj#U_ma[5$:8:%_c=%=/EmND[YO:t"I_C-@BcJV?e\jk@?6T]).D=`":R&59bJK4VSpPsoQ8U)dWX426GM(1f3FC?BM
%_,8[lLTk+.T]$'V(^[`mH'd!uR3^[)mBj/8@(<ZX</UA_1ri6\S>A^_bp]@VQVN'=[`<!:BRX@UmR97-.V5"XCm[Dn:QD>$hU%Dq
%l^5o=[)m*V^W\2'*;Z.!`MI7=/*FUMX+d@"MuE/AM3&A>Pm&_4)SU)YPK5B[:3^.L,+C%bZIF@`ME)YZ[7'.thiU+Y^TKDSfJ2?E
%)li2IH&N-)gl9_q5St"e@roigf!4p):6/j&cDFDU!FhQO3_2Li(i<n3\Qr&[e1]Z'.P%H_M2ft##b,$-qVg0NnPYlNq,k@Q)`=?(
%*_g3UTe3/R;<0^[94!p;W597%rO]=QTamWdQ(*1e^MRsONfs[5Q]kk%RK_Q"6^L!H9MoNK6JE3'6j7HRQ9L8Zi;#BDF#)27(/`4b
%iO=@X9qrl]B(^HU^VpRul)mBS&5Ta6MN_N]X#Hc(_+6270eP+pB$OE#N!U?cm%M+CP!h@lSR<.B#hOb8D&u?Y(bM6E8iT`JidHAr
%7H7ES<_Ure&On5mM&$0V)2k9lpZ#`&KUBPB5:Y\6)g-\?!Rk8V]Xotaog1]'WV&XjLDRSqRaorI:7)3B_YVa2BEdLu"E/.)pFXPt
%[ttB1[5$08=X4f"0iZ>5(0=Du>UV+(\R"H^)M;/"&InY,E^>R;Bt;>TSs[J4G^ND.Pf09_GL8/_`)RDr?tkan\&QKeZru0n<`Rq^
%;&1<Q;?9D^&5gbYU_Z?8'9u_&<'e:/?c4R&M\7]1b=[N_;\YaNAhVcRSN)js,8:fKFA,LXkt+1-B]ZX$11#hcN"ek"_EOc5-'Bsd
%E/9>l;:JGQ]onNLMN$(@I7q4"+]!tq?pm2HR$Te$PV,*hjKkq\fNj`Y4WmH:kq^Se??"/JZDT_F;iIPDgO,AG11$\8U)5SP:WsU#
%IVJ9'9&+0uTL8qq`G__`+;['R;a'Gp^n?j91:3:npe+:CTsSohf&q5aY60R>qd9,3F[*.+AsCs\R%@-b]CIRoQ6cZD2DhH#_E2J@
%FH;k9*Ye&\*m<sX4Ln-)5:C&^]8\fh*NR?L<o-Cjqd/7&>`W/06tjfq>lFpUmVi1k#INaG?t$AQ\LHpH/.i&dFA-(GJI\P2#i@GS
%9ET1Q#UiGe98Ofd+BRLS59q'2%1l\H5!ELa@0d$NMNs9]&?hFoT#!rMLs[=uS#gY5\2L"4QZQrH7roET_KV)]T4NZgD+%@7bq"nr
%^9k$->]FUgnq9mLTqIFJi5dX/CEoL'_+627d3.oKGfk\ZVe"9a9QKK`8--sifB'N[2nF!E;1oRaR)#9"l[P%%J]ZC[G91emP?pF^
%"n?nqP[&l>XT[-0(s)q9)WYbD&Z(jQE2+3i'_*UL>MokWO-,ksM)HP](`W6>EqJp#N@POM+\^@U<j<bgr_(?fLhe6.J\al0Ls[>`
%Zk7bV-4]X1[X$kA[l..=kRR'q-!0)'J\1qTRkQ=3dD&?tS2De>?psOf>YOE=Ed3cWOc/mYaFtrU73/Y+`%6=//jd3WL3a%K\KJo%
%]\H0t="7s[n2G7j']V*tPl[M\%>PR56r_gV$B,s`!Hi7(aMiC%lS9ofK?=9Vh:)cD%1G^H6&]f/)dGspkG`-5Vg[B#g"i@3Z`-n4
%UkblsW5CYPE-;O5+Q.9qo)hU14G07e@[P+bE%O.P)BbL/j`\[X7"sG8_MCX6=3=C\?)/6I(mgM+g13mBG0Si'<E%9?5EF71B9"Fr
%XT:<sTi;a=/TLMr.oN/*_.lYhBP8&=ReGP@'Eos"C)l3Da?p&Sp&_WM`43/`erf+WESI=:e:Nj-f$Og55kCLsQp>WbeDnf_'deVO
%PiMH'_Ijc,Wf>iG*N<c.`*-Vo%(1CpBW&[-YB3YRcZ>S?>(Ck*%/'NeE^>S&Bt602^X<EDk?EXeTur"DL`eZga\sTC(""_;%+GWr
%R`fJh&:H%qA^.k1^=m-rC(]IUEn'UqaTX-5Ui#`M`]^ne$hcp>$[?Am@7F;_;="KRgOaY\Jh/l,grm&lg\X*:@Qp"g6fhEZTiM]7
%?D&SR%j%Qp)CNOU==6I!F,X38@8,7jQUIE%dffMU^F\ZkP^s!3QKBrR\0_97a/*`2,pNYi:0eYW)VU.L:c`5;mDquC0dtF=6j&'m
%>SL[AhIn!VX)m;!ahPJR;4B,q$V<;[TbU$qBPDg%7)8uk8l>Vc`HBs*P@:0p6Q(3/-pk'ufY%Kj@"Hq!VplpOWZ>90i)-"1Q_MI?
%_#Rc0.]M#ecCJ,;@_!mTTJe.!c.b(Y&P^O."lK*IqlN@-kGNYs]</'/V9X%)EVS\kI"6q>\#.i!;U+%PbMop832=+@%lm6TGIk0Q
%(ff3*$?sT0QS"oS-N`@L%//mr/1>M9G"OAPTjB\$n0m.TUKWd`JWE<seHX)hgFRiU@$Jo5)jg9UX'@q\9604-b?VO[@moR+K<tqH
%3`L[JPK'M=n^NGCc,2n9)q!@E!*DNqYOLW6,38$cD^,U=.@%A%\_KCHbNj;4cVHS+6bt0?+?(Y9^K7+Pg`bRlZ72$oU*l7D%sBQ+
%PCmFX(lAh<BY2-An[-XL;M;[M)(OFJ%#c*BcSRhbAukTdZTL0Mq/Rd+":E9RZ%2=9,Ns@[PTp-;K(A[^reaVeXSU;@hZRLO"%kRO
%-a^YtVbSA;LPXre#g2I&Ep0r0Xutc+Y?crl"Y4uf0qf?o?>BNCGEGpf@8,>Rbj^7K;9F:7)o0m.=NOCPO29aPE/n#?j5(#g;OCu.
%3!H"&m/o2PlXlt:(EX#s0"oEK"j#:ghaUT"duB<VIoCsLlQNakjVWp[UMte>R(WH2+,P@#BrMjAG%AJX;!"Xa06#qh-k@3.Dq(p/
%g>aL\E\kTg[iR(7`(*(-j<E[MV/IS.h5$L%/+C!MZsF!b[uis`OGVr<NQ_4f<iEW!E<`nI6F0`oTb58E@*i-@`a&cm,sI`&[Hq1e
%A1.p242KsaA5Js:hBQ=$'d6ZCcuoeX9)G=fVcEdCdTRYJ[*,59]213(&BKh;qsW(tJ)ni`kH9%T#$i)?<k&5EFI`EF,G!fY>05-?
%JdQ(mb3@[4V;m$e"uN%3G0E]L--#s#AXkWQOi!-,I(Ckg@Vd%<(TF]<X->W)8isZKgW,-:Kh@P*]_B6OarThd`:.j^?M0Y64TUO/
%0Wlaq9FXkQAs>lFccP*$?Zr%t0W_[qXqfhsZ>h<@U?LSR0cB)1b]A!ib6/O*9B7QbN*KA3%6g(Xp@c]K$?:)t=2?kMJF^!f8T7^(
%7(F!l-8gd^ULW#Wm:DpqNP]Q<q@<0Gn.$8L3Bp>uBYoh)'4[6A*<'pG#K=7e<)>ir:jdMTDQ9Ug>+!-k*5[DE]WYc=pV1\^PF9;%
%]r^^PQcOK*N9kos]ajCp^am$mIE2T]?m6=EA+i&Q0gh%BGG+F.[h6o/kZA^X\53ckaVs#>_l,S5)RtgTS&3c_Whc?DPAU#u`2'4H
%b'X:40p1!S0_bj%_f7KP4[]"S).]b**)/\d8Oc:@dF;AGmhsjrb_"sf;m`o5LacSVbn<g(n+B#SX&F(;;V;_$.45^%FH-`aKp[f+
%H_M8&dVfIf;:2Og;>:("a=idWUR9q\a(+@B!<Vf,So7;iig25D4n^pA;JT)Bg\aDL(Xmd?A:p_.at&;,d8W*^W/LdJEBCDGH07I2
%7-XH3;!28KHNn*GKGAqd@ZK&HEcR26#0n02-fSX`iL"+oNVFpJR(Fk!X2>XJI1Xio/>8'_KOQR7cug'#='=&mPV,k;=/PIbK06>?
%g)./Eel$ap&RMRQI4RP2/DLR;mDHcX8rgQ4/N*(HitV@V*GBs$1(UeV\\:\c)`OKr-LI1lKI.E&b\B9@j!`MOjK'4n67mSadN1XE
%S`2=($[^^3_EIP63;4h/7Lp'eG#1d8Tf(i[SLQ(SgDbi,Ym@m4d@E[i1To-Nb.<dn..+LCF<-Y?rD[@`,D2e'=VW.>gHiceE=]"d
%Je0,a6:t"56*=PT4JJ@dTYs=H93u\gp_^/.UiSK>;<OhHI9\?\<t%98l9,/he+bmY]gIl8&lEOqGRpblMsD5&*&?A\>,X/4[R$^>
%r6lAt27g<h_8f7+:SV;4?'H+H`5MD!\j9-I:BPN)aeIpqUE&&b1R*#77Y.>S*Eree)J,#=)8)GN&9H;/oklfgo3Qa5n*$T*LA8?[
%:%(%[RhoGZNQ7;':u40o_?;\"6lPe*\7<b-W/lf)qm%dF"H8%&m-=skCk)^1>\ipN`Y;QNbNGb0%riWDO>Y?u7DbfL0>RGJS.puO
%3!j,WXR&,gCsRps-2tF*M=VEUYN=^<H'r.U(DNK<7Z[8pg';^3c0;_T?KRikm_DX]CG.Anf'Y;i!ja6GauF!Q-/F'243?h8#YGFC
%/Jf%<`PM>;EiqB`'GC/5@9htqi"6bff_**`9\\0")(c]k/(uktX&QsN#!f7U#?#Xc\X$QP,)+gkkf\.b[C:_kXgmoF52g5+VeOZ&
%l#KS#@skLC6G,#s)HokoKoC8G8o37%,@IKiXrmSlbolM?H,W#Ps%>Et1![bPNDHtiiL6\plrlJ7OUJIWast#+$QDjPjqS^ZR07!Q
%6.FQr3!^`:5B3W$5q-/GG`))KKaHu]8c951)"3m"G)>pG7Mqi;J-2h@if$R[9X:`&o`s3\R-Mm]eG.`\g)19egg.i:a[IUlX+4B+
%D^g[do#MeA#\[ds@_a>Z]s,[<jt*(V0ZDuL3Gr;9-u'\CZS(c'DV@TPD5'ifjVD]r`[dn!ighq^D-ej**K6CZoBs3d>Lc$1TL*t6
%Sbu<<=*t_k`@3OteO99:$bY/P6!Trm`Ee*rNcXAK%NM!hR2^'6%h3B39/eK0K"/^^Sqi-_,/if,BOENW$Y#(<gXtVlIqu.ccoNuJ
%*YCimW1E-4mdNspY)Rstb$HC2a=2=!+m7!6eEkmq(;gL=JT3'5-PrIE)\M`O7WLeREI">,1d4pqX<6JoMiED[`>3(hL#!$W+^qS:
%>.4FSU;>m^;ma>%hpG[(9!J=d4Q=:1hEsXlTbSm0TGn7Gs27GN`usO/!ZH=MVl1CY<-#B!CQX-&KtVr'(8F4Q6fTb1$//0PC$uDs
%V\GTI87@;RJ9qJKW_FrOBKnq^4bhH^.5[f^6E$"6"K/Z.XGdl@BKnp_[gls`RaFYLPn5TB.*A!/%SYtO+((6i6(5XZH!2#E3I!\p
%>+%n0g)rAS4N]'/UQIlH+hf(Op7,1IdBl5Yq^Lb9BV]&'eb8jpom5p%g[N2^r#4"aJ)=_EpK8hEi@n]Qhi"8:5ZG*!cBiY@0.b#!
%]*r!#,T&;T:N;kl5Mg2!#s<FuPA'#fnR4KG%WKDq^5T9tr6O$m^$M"9=L?NUHlq25K`n*Qq'1BV^-l;'n[IKQqn3Eb;)Y$X$Pm0U
%aPH=(+hHRS^9AYU]&*n*_0Xp?+Fh-BL[]aGHWM[eh>LXcj^Ea1JMZk5Y<M'Gj\X@u^1LCW0D[*7rEdk;#+'E=8r_L3^*ks1T$,!S
%U\P;3$lsZ%'6h+J9B53XT6p1m_N5]_j'@%U`dui&3p.m8N:8dYLF^(uKNEO=qoWA9m1j!6`=34$',J10@"C3n?j_;A>dum<*DA[k
%dDB4SO,qmcG<(3*(^*B@rCT/(n'd-SKVZFGCKqNtC(,.5P%b,b*<S)A-6jF+i>tXkTt$L3>1hbRNUTGhX`>ZHX:YfSGF+RnD0K+1
%'8q[I'\Ns=k:`j>)>/%%P$J9aN\g*RAo?t2gdph(Te1>0,1thN^61+-_?80[TEBs+?JTK<KV9^SGOa?lgo-Ck\n,7bCL99df.5e>
%S7@mM6nf\U_p==+Mh1<_=oa[$q^bLLC'N(VH\#ml\q<jNXjH%@"?a.RXt-rTLG*"\LZ>Np34+XuLF)^1#R2Z\IdrF`6qZ]KB+@Y%
%,"C>C=U`7/8^n#s'S\kV[s4/J>#*alBYT\o^3^r$Z4lkP9)UFmcH`S6'_c\em@20qi+VAH_[EE:F&Ot7N(H]j2`lS(bDm7mUYpZB
%:5D_Q<IusT^j-@X%F--'ZDrnC%.tiTl&:7SGk`V-jg/B(BV]FrdNK<;[(3s?^^c>X&Q*EdOU[<F&7/]<Y2[LA;Z#Nj(`Q-J2J4$#
%n?mqdY;(^8&bjU`AMT'6]]OoTIE<$Y1'TE@N&398q7%7R2Cq>EO,>7/fFs=)'990PpG($]\-lMA8\s1F^)%#C][bb-J%^IV'S0P(
%r%/7a:h7b8ISdtNN4U1N]3/BmF:8&k+6-T\=#)4,\[TVRqd9sS'I+M#7:oJI:`MDX2^m[4`Qm;Z'@d:'nm"CkhN4GTTtkKtNUtCC
%o9)_"HO$"TjSR#"1YR4V"hmWHhhOne1$f*P?a7U\<k>;^+uGBC]M>DT&iE,B3ALN@_'P#Ne6;Z`Ek!mF).i-#poAh1L>Q'GnEdL5
%$2FqK>8C7PgqA@MhoF8?I.uKAM>s3[GM0AM7CGV!T`/B/98\g`j#l%rRT$4eIDNLPhJ/Y^^PlS*%".p,R9:D1-.PlXBZF4=%582E
%%!r,Apop<fNj9d32f&$u[3&3cr$\i?$jNSQY\b=BBR::R.`TNp:32!?r#3@,3eh3U7V2=Y#N(WR!<qL\?>&@9mU/DADkEq:g!UdZ
%@b\>P\"%30#MRRT:e'<i?tP=?GV'HmFVbmT+!5?E;D:Unp1,IjW-J#-76g,Zqt%=0;BtIh$^,$1MC)!^+QUO[,43O],9:#2N_r'R
%6uIAi/2gY0#@I2R3)@YsjC16=*5iV])@0(rO,[1%,<I[@KshLHODO`\7oBkOPR/!D8Nha^SDLjlfFHR'?Z"m')9S/;9>h`sSEhPA
%afYL=)-eXbK1#?tb%Ggq0VEC]mHG2trCSJc5hEaH^k7.%?&`&mB%1^PEn*q6C&4R[dFX+>98r&h)h.t4mt]F1LZS<s@HjD6Cu:77
%qV':qq7cOU#X!_0qr^N%@Ektb[h/fTQXGZ<GbGQ6#!#Q;es][aR:ok\n`>9m64k2Zk@Jk?KuRkAAmRQ&m)"Z=r*9aJ5r_dC\l^a!
%&C2<1s&j&3-7f\??`YUk4K`&uFm^50.HF+aJW/OX+k,XY<6HD>C;YFKg"J$6,%M#iPc$$[LW*Ni8:q59RQSkl(8+hBIZ!@C@dtGu
%__sWL(:Al*U.;^NgJF?!(?LAHfSFsO]"*GjSl#<g@h]<UNeeFQg%Is`(F>I,C5..i(OM'L7-ZX`I"oB%fPu#Wk%d>4f$Qn,I&`^2
%nLdu8DShmNM[>R=\D/r+-l2[5;"F#CUG?"Y76\RC=WJ>!X+c'"l^lCT6_)*U3JuCC\U$[W)WPfA6iXK=G6hV,C$M^2%&\).GA6#I
%VclmmO`B7=DEti[7'@99532;phsXDG!!g6B#0HgrKciT6m.Hk"\m`eC+dX^O3J0J9rg;Mq2ku(I3VKd9Cu8:KB"/cVNm\Q9XtL<H
%Cb5'fD8X0B/1dd1964[1o98'C$W^*fU*\a@Id/%*1(HH<d&u?Ib7'nIT9q@CBEP.mD']JT%qC?uClZ@TaCn.i?pQiU67<O!a?0)+
%.g%aSmOGI)QMj1(YOT*P'1ZK+EC5!DJtJRhds!Taq(,d-bI#CE8Z/k]2X$h*hj7XB*UIS'#ZdJ<oM3t7Hq'[B%?1#%?K"_rU.aju
%M&d&iJ*9#TrALWCR:<b>g&NkpST3\`B!@s<pY:a8fPo+FD(NrWXpk"ks)K1mc;So:Xj?N/2[rMqmrMu=b;-!/0+`hB5/'\oE7@>@
%[=]1(b[7].J.#tAl;m:5mK.e4*f2BnJcncqPP+dF*6mU7YaTZ0_kl("Z0T`PlH]bdo-GO/jbrgf1Wa'C\fTn?.4ZO":mWkP=L#4%
%nm&s]X(<WllDZl)?+_3S[WC9b]]Ou/K<6IKP*"\.$k(.(#EZRnnn)P2"GAG#fo=k-([6bk\O1/@"C8@AKD'tLf*)F(k-&\YkT0;/
%S#j?(UQmb@>)jR2m;dm;p@6LCe8GfY(aGO*JA/H$EM+sP.hcAf'\<W^fX41@+]RTqf(JZCU6E:OSoq[FSH;$pP7E1+jI;clZM>pV
%^8Ai7/S>9u%r4/U=bODG:QlO[iR,l4.;LsVL3"E6::_ugOcC3)%BL)P/G]IK$!X%]ROk&IK[R.4i%iQ>]C[Fd2CRC!>7s?:>T:'D
%^'0Nso6OY7&%X<\jgqt(3*^m"NdRUXN,77XfZ,R**n$jVnA`:^Dg.,GleQu%DrXsX004FW)<'t:<s7F01'78ZV%b=\D(5I-Tu#/Z
%#W^D#kWJT_l0R!/p`m@QIJ+3N4OC7_+J<hl;aj/;TWa>2"8-0@Ph5SLGR`+5C2I@IqSZPMC?nN5%C@W=9S(;\,FAekX65G^d+S[0
%#6Y42;Z%iZaAAC.CmFh^aa&dUQ1!<>FWRVMb_^_6K5Ft%*3//XoAa`i0jK=i"K)Ki%2!mPZ.g$n3pqDdL3Yj43&+)hKK=J$D@[t@
%oiXb17fIKq_@/^d+(g2Y=?:,[<rOnMl?YXLIaOZ#fE4lqj)?W^JtTF<cn5cs-B['b[XO7pgfCflkg]5GA66uHRBof%B(J!`.U7RB
%OteS*^]FfE"D.8(@PUKhH180/qb<O`gQVXoqrMeA&'%MIcD$-/6XPm@YVq`\h`]q*oOI[bInri:K,VWu<S`APZJ$BKT+n0)Z!:Vm
%EPX?ueB:K,Z?l(\VLF2\C&RNnPH2eG/p?EJBSW&6M.lX8k,0%Is*bMrY\O;01!M1s(rXmJj[l`WGs:dD?lESiIeJm4pbkC'o>o3'
%+gSpT/6_`4NoaCXZ.SC7L2A/?E3g`c)bKMMdh'7%F3s6X,,\'aD\J1IkR9pd;[M>nM`]a'j@m.>Q\@)T%VJR3];*>[ZefBV_j-3#
%l-#@[>lroqrR1Loo2.%gE`P._H"%r2+e3QF1GFC@/rB$bf"u'ne=>Yo3;REUk0n\ph*s?^D&A2P#?Zf[`IadtA6l(#^NmfP^;\+P
%I@]M:VrgKompkr>cR0Qj(g$>ZfVf=%N?F\_2'(B-BeO_saVrG0G`6[%*u@WZ+5XrDAkR]\P@5?_35U"%);a;Rd8%:72b@6C2P<M"
%'+>1A".o0*iD5'H^R'/V:<+M$Js_1\hr"X$UW5qJ+iO3LN?s3[/W?DLRu!eV`Y%'2?19cO7H=Pu(X^7#Y58Y#Ma>OmDV63i@I6]P
%@K,W)_>Sm](qpc\lLeu`)83;O:ME&Uj)sZr^eO(+D^c$3>sXL<g?s$XYk1AQquGXO#VRu`:m\-hFIc!ASInuG0/(4=0S@S=XmNVg
%-GI<Th(!Ue+&FufUjJ_AAb[2?#C%&pFd@_;c4)=TZ,SSq9(Hg]QlghnAM82eL53T;0g0FimRh"\d7W.`&#C9b"mV\GQusqVqJTEN
%4Eq>B*R031M(G\]kS&gnVKETXL3pi-$<](*aj8o+7ACBg.fjRahcQbr.)n)Yn_aSK3(IV2#.jPLRq*\I_6_kBd"0i71pUtc%]!3<
%KpqJXBh+Zg`[a@Ddo5_M<,qq;*Y;,GDWF>ZbD)5OB4r\E*ACo#'5Bbcq7&:idou++!4bN15u-MdddNET_IAq,9Tu15&?LbOWZ.Ib
%BPiGtks-GW%E"GZ;4Vcq_+9,S/9PY`TAY^M*QE_&AoC0K'cO?["td5uDJ!'<^Ikn(+u6s?Sft'ahG65am!?iP*QF>_^O^h#g`Gre
%n,>4#.0KbRgRHE'.A3&"CU6sY3ea]W9mG?S?mF<de[idL#BER_AFIl1ah)N;IIR(B8d__0(n/JB?0EUV#O+@qC$t.DRd]E%X%Z>6
%?t930p*7cS/E+Dnc')ZEfn5Z@I41Q*F3/c^:X'9coLop^!DiC;jPc'kL@Ucic:9_Y,\E3@W1#>p)7/N9LLX#s5[P0fm;;51%2]E;
%bo=;mhO_-p75!;kKRCi$[9[RkLhQ+FB'E1)em=[*Q%gQQV)sEWXd>G1Y)@m*XLZ<EcbO8\5i@;1JSXNpM:*1o8:0ZMHpVdd5+4'7
%,Z1@9oU/L%.3!JJF7'953qs<qhU5ul`>aP,?)(>KXoHpI3[8@lnYt<p?f!gQr.Wg:0(7<OmPM//ELjcag%r9OhKVNV3rt:9SA#).
%9J4);+`oB)4dS5ial3S7%4u+lc4,IT%Qp'2\F:CFMihLlN]$]9"i_^1J1Yb'cbLgJfBLh/mi&=(A+g8SqZu+kE'G5jY8,<P,n<HS
%n'uUJ:2Cag(o44)o"*LtOu"k2[SB$(Q<hb0Q4\c9%!cLB[^oLH7Z?KUO<i#54^\V&3/4j7aJa'0+no=WbGO?Jqpa9$!;WFuY%,Kd
%UU-SX8<9oU2U>P'q(W!aP'#C'-V5.bo6G5UA!]SM]<?(mG_a@K**l)F&l%FF"skd.3JK3t]&5Lq)(f+<=mTTPjdgm.s12o_-2.m+
%:Ru],k6"8DF)-%'\><Ebc'/?`RtZo]cigr6=qLNA/uX7GVL4RpWiJgP,+kGOhjBL!I2\N6?s<d8'tL<-YN6CY:"4@0\Z?L/\JLWk
%ot\t_89.RO7VM*trI7!$:Sg4Imbh6#nF9"u[)i]q>ROUnV(4S87uA4?*+C]587:P-4tQ/U@f,X14BB:m3#@L[Xm7HE$"egF:uWg1
%RI6A?b01@^gTM$/[F@uL-7&%*_q^)<lX.ungWiI6!S\Dpf<aZQLD6eabVN]!bsuaZ9M^G@%Up!0QP.?&kkI%0"\?Ql.MT3MMdf2o
%@pU0?V[!X1rmoZukN=D(Md%u\&G@Kl!QFAkFre>8js/Pf2ar$Sr&(.SGNWhuhu=f\B'D7R<r^k>R'[BH5tUcfHQC@*18s&ERNOa7
%.Q42^RdQL8HX[.9^?@:0IVtp5`b7AKPBgt(7P0el]f^]'kL&QVI/Dl4DR=AS8BG$GmcX%@q6b?/>,"plq<7o[dZS"E8+0sfgUW60
%[-.h=R:jOL$_Q@`g)Kg<CEuVm<eAl+6ju@Fo>a$SR*ira3KqQE`\"c?3>Jr<r3q>3/)"UM7Oua^/,FaX%APk>XcE#8kjo/1SfQO$
%Lo7C`X$^gcrm/\</(WiA\V1n,Fs*()i*L(HGiRsG\aA"VPEfYfj*_EH4Zlqd5DR:'.O)?Y/LC9Zjd+PADM#p$&!_"R-sK<Ugo_^3
%O8V9i\$kaqGHm^nm?B!ODMR;4h_)/s_m[0O;3jpqrcm0L=#7:irn>rMKP%EsNLBnek?_Ajck9i4N7IYgs4prAo!8,]]%8^@5TAHm
%JU"WKbW6Acqc;Ign4_WGg4mal<aL5mCrFKO!6K'V4IpPso^,%MRbK;RA4K\)N'!g'pPkW2"7tHTU%6AMX!4hFo/?+<SA6=X[afbl
%=SS\X\k27?Cn%i)[W'u6'A^8o^_R]fhQdEgj[m$O@(DcI_c1sN%!Mrm<kn1rHJ<&FSb-^8:+Oc^2!Y+"aPM,D$:ru2fd0.sai7'9
%[S:p:m+TmDjYXE[(cHs&G"HC^DQ)pK^@*\BgODB*F7$5aTgP@$[t4S(S./S(<[C%3>%klmPN7IUT(iVl>:`QR])Lq8$\*LQjKcfY
%Ci+Xef@qXqL1p@Qg8f<cYh=*rH/Q]h[bY1BgLg&\Vh+l]XSop%!](1Rr7at#0Q/bk]J)pb^NKl$/<2JjeS@2J@OB<LLuJN^m1[>^
%+Xn+hHE7W[rtE\OJEY=5EiTsuM0;O7]/]B"KhR@/mk2,bk30Od"d_V&Y62V^<4dZ)6IO7!Um>-hqJm&.G52VD>B%Sk'?KpJ:p_MD
%r9ZfYT34,^hStF#1/e=pT9Esk)i?J#5jY^+-b>/bc[9<g''S'eD`,r(_e`*>UrFn1iBfF5Eo]We[mfMS_e4tZI[chANEpMnK3LWm
%0ARLK%G4qA$d**'j8b,b#R-XC[kZ`shlRE1o$@BDdBLP'6A>ktY7gK7\3(M+jRn8bV9d_,aHn3-Ur9K.'>uZdFh:X>?Q5GcD+$W^
%Ydj18:k+O-N%fq`!C^/,@dY)]Y@gf_CsTIo6T6rRr2u6kSJ[cUBFUJF5ARpM/4_JrJO5]+cbNpS)\QYSB^I'(kA.K+'8sY5L2+ne
%II7q9]Z:C)m0Ym8\B)p']T;ekhH8B:LQmuAc1E$=I>k*MQh)rMP4#E=i+[Yj8dZpH'J!nH+c`Gc3@T[L6\J]WV7$rs_Z[Yg6>CWB
%I@T3<RB"(d1JjI$C<lC7Km$X5c7WK>M%IR;<+W^2RG8&>oT[ur04YHHpM[B&+"/%A91s9&+R&N9oHFni:`Vu?*]UI#DqqlTWJCVS
%9JJYZLCuKN8>_ia[u:Rd,M^\`5[BkMbIeNc#O.uF\>,W<E$l4:/)?3i:O9&DHK_MV*T4,l#JQtn"j.%%4Z;LYm.@DXe,8q487@oI
%;.IWR@Hhrml8^GlgU8E,%LQ9m3]<-+<%/r>"Z,Xq5a<q%B@#ds%5lSoj4(3[CKO(j-Vb@u'j^%CI\kCpd#.Z0.-/B3.IG94MTU-D
%r^f;T?As/l'1gglFEDJaS&9ImYAC0.=4pDQLH5[rOZ4PRHH*CiLb`J6^'cDJh^Z%e[AT`Y?oVoT5.o[sFcd>.RB]TWT26JZGTZ>,
%<b$^`CM^IsJRODs^*XYr6Cl8kf/&)(j`<\nSS*%Oj\'QT8gfmn-@c/_2&qt.3)WuBUmcg#_D=K5Ub-Uc*`os'\BsO*@^/,@#h_CA
%'2V6R'm+P:Odj75+0Q%>qPsrUdcc?`Fj@2.C*$0]=FbL-JO@Y7e.>)`;kt1D2XN-f@C?!C:n*8!3l04O7;@#GD4DfUaHZ"Lb^[(L
%D"B:cI>LtNf8`lfs#A^Yn1qA:IaWA(]5OBG>E!NU88$a?&`HZOo!Nnup%'0DOC1sd84?p[-UZCJg0g[4/,Y,<#.$Y"&'Nqn!MEjT
%A3N=gY@A'&?kj12b]Ui#,TN]&K]m?t\Cn-E'=g!(N[Bgf2^4;"LqURFLH'=pk&rVHjV(1QYg@")RugjtC::2/YBTIscL$96;e"_6
%J,i3#2_fNme4H/<"&7o1o@eo_)-t,/jf^0lQ:QJZ/J78pR^=F%5P^3_*VlSKTGQa#\YEFi05lkjC)a*UCIKr-Ps;!8!28)i0sS.Z
%2MB[HPKDldZ4dNj,%cdV)mU8;mL%U7nZ4NDlD=`qf6ZVAGe5$Z]EdiTC('*9:)?$$E&GJrV''*j:Y^r=hnSnN*!)^_*Z$*Tb#`if
%@Q$U96:[e)H2`B=npO<@l%:cCCBPgHHhFN]9E>lH+T,a.X0qp*]a+#?B=CL\Bj;(/P<0P,N8PT"\,(rq2ABbVJM%;UW)394eJ<$2
%g)u9jo>,JE>Yl`[-p496"qc2Q1FI4aB7G:t`T2W6kR2h+k[BtACT$Z\/d`RAgemU)UCBO6X_P1kY,IEt$I@qm?ogDt#W2UB@*X^-
%_<dkDU9>U),!Jhsn;Jt,J!h?Q2oMgag_.jV:-VfZ8.1,aFDh`6-*\hr-fc*6aD<r&a+:sJ1sKg8;KtYI"cb:jH*TAR$jZ7'5s^43
%:j>J(#'!g$LaKU6WEj-URn)JK2::$1,,fUVMo%8"'KEtI;r2="ij"NDr79dmQ1Ug?N:%/S,O>.i8@\&DZ1!IcgrJ?E`i)47_L\?5
%O'VaKQ$+&oC^9+U"6aE(:2kee*gWk!lTE8&m'8f=$s'1TYOGj,#Ulun!%N(+!5oER6BP\pJ<3+:.<]:<5GUm'/KCA)%>kj;DfKA*
%\`ijSXNGNak"gVs4Gjj;CQ(dck]GdP'YB*@)4HZI#".`<&3h^Xb!H!c>`(m*(P3hdN\E&!`i42WCPJ[M7;OeQ#65([iic&5k_mf%
%8WC%]*dlX:X&Y#"869i-@?e%O+i\of8;Sk\##P#OY\1D_D\9baA]q\jf4`4B9=X3Olk'*:E#E6t(@*k`m/bUYd"YURR0QQhej2-q
%Zehc_A6B2Jk=-srm#92[MuCGi7p[u:[oo6]`BLZ^)J=t0[,\7]K,b#t_!"/24ZEg<f)?W&JR>iqS$t#(l*Nk-grJFd\pE"o4/=$T
%FB&M*Gocu$QPqj#AlaP;]]5-m:DZ3Ub/-EX^rRY.[=%DcCq99"P&%IgL8)OP+d`eBC+l8$;j"lR4D:F_X:3>7):$WS;!`M1fDEa9
%mI%9X&:u9l,`JVWM,Mh8`dem$GS3W7r%0%QhMN72GdqC-6*/IK71m4rqs)a]pec!=jocJ%;l"A&5f>l>7LDS29Vo"@U7#.+,C:FE
%UQ?&:!^W``Q-qgWDd0h[\TiQ>_T3@:'as#34`9#.QtWpQ&U?cK;^P>*#LBe[BZDj#JjmYih:WB0qf%t_fnqj\(SZP?%s\P!5tqX,
%WCEqj==/dDnj#m]M^D?>1/$'8KsK]W'[E%pFEYoQ=KoAoQuljQP"UR[NXA`)T+K\H:?>eME\f'<Qs:FuVFOLUa,$'GgX!lU8%a1g
%[8JEYD3&q.j42fc.+qdWjWNS97S1K`M>hYr]FK2i%i-FB.ju_A1-:A)CuIFR*C9*1g3[\M*4@T7XZ*eL5]p\HZ[&VI0r:D60`+iT
%"m.LCRJG`ZI_dnq3u+/2:(Zgj6BQ0W`"n9Vdl*72h!AA!$q@m6f6/gj=p-PN!Wt-dHZZn;e;>9E-1fE:l)+8m_2*8?)^NnD:mbEo
%;?5Uoc@.a`,u+R=p:WK>0f;0`M0Yu9c$1eL@#+-i<\OeJ;VXIOltgjjS62bI+#621To?Z#Wbl*[d@_DY+(faDVANsCMAeOMQ`eQ!
%V/D8`'$_=AK=Y`OiLK#E[&lKeOWFP*>f0Nj>+-Mu:=hLW>_b1Vg0Vb]'.XcW_;T;.D7Ah3K/*JM8ST3Fk"[6S`?('RCk7-AK;9/+
%ORA`mqNQbm,'VPtL1#\'h>P_Hkk*+^q\@q?m7d+bJbQ0;AcEKOnP2;'n=Y8IO<,t][Dd+T_`jE$/=DCQhUgN^7`<<]lsTBKrXSr@
%L356%<aVF0@)19;g\[#(@L>H3QBd7#J1?6S;c((iU1,:/Sirhj?Cm7NMml4JCp<CR"bWY*6u'Q&\!PnLs"(;2K"fSp,bI`=[g>?C
%fM&F`dRP!iJ!St-;/2qpa_u`QS-[m<dJJ7GW?S`1QQDc,OX#ZqF=1:c9HL$_^J%FQB9F,1_1m?ilmE/Zq:Q#3k\XuoUPj_s-r%cg
%Atg84:$uU]QQ_(@pO%"V<A[h[E[BlhHKb0.M'=+fK:^Vl$C9c=rn)l,E#6D'G-ipo0PpL_#*#-nG2_6(jJi&8!o13?)J`0kO./qg
%6[)lm=VZu_fBm.<g$DhW6!pKT^Z=p22r:2L-nN90Ab%WqYrm*U.>fC@ICk630/L8EB+!eu]<XIjIH.g8noBDhI<^#%![5%G4EI/%
%WXM5"ES_EpTV,--44qab!7;+DY+#-^j73rc2s_0sg@c%s2pFY0.:g]/h\24q$5]>^0li`n3i8@$JiKRAgXT3ED+&?.J+I7`<2;/>
%_nS-VIRM/G,VcNO4C#%-$Yj),UcG^(E4Bd"(:np@]%ucVWhVi$l$V<Tq9GPc_1;I$QIJ0d4hRXrWV;.*eN_a'C0>/Xp!&YU23p<b
%JiG[r9[A*)$i9aJ>$ci/l`;X`r08_O[RHfr(-(Tnk0^r=*dM,K%g6FfT6MFuI\T7X8-u`<qbAfCNer#cn%5Hi)hjt=ImB8LX(TcB
%#G!!2J.H/"ohch(6E`)U</I@&l=[-3R4GWc'btS/PR=t35HK$N,=)S\.j;uhbr*R2:*=7Pd*]ZuD@Y]T]Q1a0?fb-L+cT[Pa(GgZ
%?g5Ob:(cU,6N&'6M#$)92S*4_drfriF87Lo`XJ]P+D&MY]mE(_N8]2dlX:lHAaSWpm0L(Eg`A0dVuhsA]2u`8S-p(X'5?bMrSW`g
%]HF:-\r/1]60,,-<6.&H[mkM9;FpR0k`E2@DG&u)=%*o9(NGd]jJ4G!<,r%3]7Q%Q/ol"Mn)IEq?%5l%`CkR2<=4[5%I\6CLEP"o
%6&2fR[3:a^X9`_n&G!8XfW5pPP$=$V]?ns?7;WOoD6tM"[8(ltYET/Sd^(D!g<o#IP)pj_)SR[p!7A2M\Ai>g*.s93>:3=&BDCVi
%Jf=(-1u7,UU6#`!6Hq#LW=;TpZbgbH[JAH=Cp8KF:@):9(iDt+$8K1k;V/jjCMZV\.jZ>N_I^cVH_oZ`jtJWGEcjj)1*M3!"(UE0
%5+jeL+WpRq;B@C=SPk-r>$J==?%dH,bJUI45&?HdY"Nt2_/PgEA91@?FLe$B/3Tbt;p*Y`A&\UhqrW$GGgGN;Ot7ROI63.@_NERn
%D,r<=o-t>OG1l2s6[rno;5%qLfcTXh[>.VlSfC\qIn9!L#!-VZ$,t(gUO!*8GS^'P&-ej0Y2;I=63,.lSlh@C5,5]#ZqB@-UTueL
%K/0Hq7rJm&?Km@Jc*u@F&Q2;jTc6`NF@1O@P4eMa&JU@q8)\7pRI75>((oc-)%g/?ou,QWr3XeP`s+\gIH3+,9"h^Nh%L_AT.-$e
%Jgr,aKkGMj0>lQu.-Sf\>iDl2A(fgAgmu-E_LA,6#GTN"774S#XbE<UUlg_B1O$7(oC,NJS[ir6U\a8lXV%Q,EQS#2brkCW9@;Nj
%aa@E=2"t<"-V2,'JiQN@f93`e'Yn=p/a#g'PORKB.a_qOk['"8FJ64=<S[Y<l#R<t66$4QZS/O&I7^S6-bOH0cOSbBTEL"-rI\0*
%?@rtb3,I?r4WQs.=QYB&q@8'q8!&_N]M]aF2ATEWT_02JV=?ohjsQ*GOT:n*Z5m<!O;]FHUBuAQrB?%K7tt7SP6#.#TE-ck'NiE6
%ZK`MAVmOBar:ZM8P]GFNq:&*%25.0:i*t>-W/fc,AkX)o7;HL?(PBI*>CUV#+:bT7QG(bGaCSUB,_1SuZG96M*qWYnX^mVgLpjb$
%11=d.mPHmf6^GE-S2rA4dMWa`;r's)Lu--!k:$s9SThIb3EG/@BYOR,'ets#4bec\+ECoP+g6`@Ds6`-7j!q3T8K#5LK:f4I]NY&
%fKV!R^46A*C[0+0%>Jcd0-[%7B67@C$Ul7N<(15KH,'Ma`[_I"S1Ikm`re7E(TlUkImf\i(JnoqTo8#2_!C.#oB6F"1"[-Opqsh]
%`cV'I^qdVa3cu,';T^arYi(1JY:)q][`OFPhe%U'b_p4`#1#ttq/DNf;-9.88pp5]m!G4$a_`C9`p^i,<5H>Eb6O]@R.k5I5Kti;
%kg4s9n#[19-50l4;B-7tB.+eJoRUD<W5%+OEK8<u@M;RFihJ#Pn,<LNOQCIkQT\O\G)VW1Mq6NWYDI]FP6#H_&jGt+Z(u:/1H]dV
%L,X@kTP\=HW6HJ2R_C7eShHE$a[7+#F(f$"?TqLhDK).ZRe8@fbH2GD@WIZ!(@d+DB&]9(o[<Z9alWgOOKP5M;p>hZi='))P9"kg
%.UX0`UW2K?eMC7_jFgbPd?r-ro%PLT8T0D?fqZf1oFIAf`<7=r3`.$U"T`lmNlt7&qC,L4q7R=X!Z:'<%i<%1En$(<,!QJPQR'0E
%f!;(k]`Y#7pp/4j+KSEFa&QZf(bCd!jq&?o>*\-c[<=q/@0dRk+`^rN#<^>D%_jo\",dcHZ]0ZWZ%pkar3ea;g>dGLgiM8JX;l-L
%dUd2Y"*>m]NUVpg+2S]&09rq._X3!7c3g+SOSR=QoR\f3m^ZhWrdYIc3snb2#gbUN0%NI&cZ+[bN]L?Q`%O3:m'o'CDp0ffeU>KR
%Z_LkDIbE]!1\:*V]QVHf-@q=k8%8aB>N;-!\4;c'RKnJdW^>J,/[Um,KUgRI=K&u,NC2UCKJS9sqloUn:F*AXMFEkQ;F>iUOb^0l
%7^X(frq8ua'"F:fdS/1;,l]/$G?8H_c%2cr3V+qT48ZhLQu.!>>==iTr$CWnrAG(\bOTIR4)R0Q.U2PHP1Vo!;[K_T\1ph]/;HT?
%\tnJ5bY<A%J]d$kPZ>#)#u?n.3^6k!m$o8NA1eZZ-[hu>;`%1gN^JOrs)%7\;&?\4QYGf!Qm-7+X7dmPVXO*l&4O`eK,E2D>7S$P
%O%Y0[R];IPc\:XVSGW<k<7e%@Qm+>$ZU,Y@$Q>,h$"a!+YZEq.AM&lNLmI:ShGFi$S%=1nN4+NQo0su=k6X1.^3.TPmT:4X-?#Sf
%^Ql]bm)nceh:L+mn39tDLZ[l[rW'j71<e8b!lFLDkB/MH/EC4KmbLkKQ86YTTkLdg?H<QXR'\B0Z3qOd;=R:CKIHUOefZ?%Zn(A(
%i$,XbnMX].=3Frb,qW^W6gBOAS"LbKFfZ_)*E$c+e.'Vo%Q;_KF_\Mun[I/%QUqo6@RMY_j9/@u/9H&SOdj75)t3O5rrnb!\[0*@
%#6/7R"dSlRbVK7k[@o;G2+p2__(0$@lN>:"9m_b_ei"5K>GIkR>ZSm4+-[(c:30;:0*D`M/rAXkOC`V7@?b+C)%E/GfC2bMligH\
%i95#_l[;\\-lU<BAt^$bfp9E^pt.!jj'$+7+"hTjTnf3m*uk!jp'oRt'+`F*f(G6@JB"gL^,Aq<]_0N"]SXHkFi"rKB,'Mkr4$*\
%cQ5rW_#8NS\\3RB0DYQ&.c^I8It.nmd8W#p4ZPoShUe/0<.!#X15dd\J8Q(t;'2t;&`(#\HhNEd0C/+K4A*fo4Ms[P%dD`X"]`u!
%IrU0(58U?;>83Z+SPeY),H;Gs0;;DB#?6&Y-p4:%9[Crn=)Cu?feto1!Z7f@[uA\Jq_6?]CSR:R.Ss6GYN9p_:kjn`fp=g$hbLWQ
%mHM-AkIn@aG(RI5F%R=>-HB$>K8+7kp?]]<fk\-h>h:*J,I#ru@)MU1I-"<o.GT1&,m;aQ;(K6;7oWgOV6srX++Hb7Y]e6<2pDIH
%AQHs!?V;1J0clt7X`MJI7t*_BFXj^9h0C(`la#&&/"#nmN->UBh7bH^iV*B';'5trESm?0\8u!]AX#JW]b!)liu4F3R[Fs8SYC9V
%ZnrCa?',e@6f!rL75&3Lj\[j-9SRc.[ISHkS3YN*TVI-tg`4?2GXX9M^PZ?biHT<Q<N%mOF6!t.g80o'8l/UMPane$g@!As1HZ1[
%2BVr1NZ!*i[ifO3TsKB0g`4>gGaDa(le@7,B%5;Q%;pd+:_cuD.@+o3):]J9>'ia5Fh\%r#r>LZ<u(??Wo/!JZ^F>+d]9?l/4:>a
%^`dTReeH9WW(:hm2>OmF$C#$7Nh,5F>0SP^h%OgE$u^bul!8d=ksb*kdAfr'4>(A_.NAL=1DW$i9umd;P]iDc_W%&f+s7+iRSm'T
%RB]TWT2;#0GT6%5h88s"W_$TIJDs$V1m?lXTkLk3_iBHe4;fGD_\>N!*'md[:^56Lp.c;)kbN3b[1<d$ErX1%_GNkE^//mf;/1`I
%d]@E#p[;p@s0-:Ona\aGbO#=F20f94\bO$[],"\m[#Q'pKo+O;9F]H(*9:."Tp3iY:gtCpBq9[n_Y.K+]C6H2ORceQE5Ll<(NOS6
%X`eh!#(I<5&#[Ls#mZBM<TDMd#r&-5U<+Gp?b7jPURMolRA"9)D&.flqDkdME!e/U3S`+FF<d]*7hL;qNDq`VT%Hon@f$ugO4=?D
%;8@Gtc[0GGUNgklH)i!P40uu^C;95r6M"\'(0aKHKb]VD*e."15ui6d-<X9$%o=g"nqGup8^!I`oO'+f?@bj)LC3^48QZSTBgkf_
%O`r8ANC.'6I<9>3Sg0)EG.nCPCiqq.q4W!rk@r7SkKUQ^['f$F9h*VtL@$Nnm5pI6=d#!%GNk(YrOn-T7,66Ea=s_!?a*3'Hr1jH
%<A+m)`#oCfJ3^%Vc*8[O%LpCI20V8mr9]N(-8NI1/P4=Qa?u$'<qn64_TXcOc_!B>:P41^,md<]Y\8BZ/o5QPZ4;<[IF;HKk(bB0
%1$(kWSPZ-)D"R%e,Ho@ZAr#oF-Xf3q9*6[EXYF21igkcZ$_#:@CbQcS?-.3NH,KpY"WL1o4=uk/Ab>#r_npcA[+3N0]Z4m11AEM?
%FliX66.*YMTe">W/gsb5S1)[n,DJk4Q%5qA<I+VqOi@3-FS%UeR,e3$hAqKeG3hQ+l-e6+/7b%49Sf:`WS&;<,3XAl\;u":DMe:a
%G$bF:Hl&[P[PAU6NM$"+R4ZBUZS9,DOb'/MXN!+1@bGr\r'B_q&Xuf,ER>O#Z`ilG^P0K6M,`Fq=KB,+p"^O#;=NWJgG"#9/k5Uk
%$G/c+,i"p3dK"d4;OqcIidn"C?qb=_\V@>6533cl$,j.M2p$"GqV"aKO#ea)2UkOgKu._T1$'M6(?dN)5%Y1GmaKi(#jXIuh(rC@
%EpI,B?;0Fpn;nuYoBY^nfrcj\(FtbM]M@9!nA&QE"D$9/QB9^j[N9Sp\U'Zo`'tAoJn<'KkD0Ke%%1[EnqB,KaF\fm_JP!fpqg#s
%AR6.'%>50pV](!UEl16e0K)rqh^!saGdb.Uk52SHBS%'9=o<d'(&q&o_3L<KjT9P[cn,,_5q;-:XnF?e5,8DGS)S?NFQc^10(cUM
%'h+#VXr)^.b<.AaXYePg5#e!S6Yc<-Z^]OT:t6N\-?D-;U8_*N;]e&b=jidBmSTKDTkY2!hXc;1$iC.<&KgE.p^[dsQ^UhH89WUk
%&Rl;='@]N;^T)thWbrr9G_85!:i1ZD&X7aX^Qb0g=k.+)qV&RFkj,M6^)OF=PP@$dlM@i:hI``g7C27IYFU9>n7S>=s2"]/!oS=T
%AB)\2@YTeZ'AA#sbop's5Ljat@YZ"N^>>IHJV6PJ-&3.f4>Z^J)F6gA.T1$+S)+5sN02\_d1:DrMDU<8V8,::r;NB)=^!5Bm4+ib
%+tBrd8JLgt/0W'WBj]TBmXXe2`:L8aX*f_]C=H'JKqr!?7gBj@3K3_&MCD-r.]0#!39BI*F!4%a@EooIV2-m:Tr7^l.Q*8)dUlR"
%;+5)n@gapKJE",'>ECUMU#&#-2?r\8g5"k]MG,hX9%*&='$l\1@'UQWHIcn='-NBY:=(_lMqjiteZMLM$o6qeqB6;;)mtAjWs]o\
%>I;ruh?L%?Z2Uc_JV6ou6&rr:B$PfjPS"9De%(9o3L<3(307"_U9j!;(f%F,]Ko77jhsJUpD1.sL:=EO$-1`eO-AK-c?+sbP\ioe
%h9J:%c9t*H44)$IR^2,:>gk58PWV!n.QHR9&f\N0kdDJ9nlIi5.\c$!>',N7FId/%-q/.#Sop$KY-*bi2hK,<-IuCZ%7?3=kI*GC
%d-Ilj#t&mB):(>km#$6Dh'Qs33]3QAj8Ds"#Em_V1PU!H?=IBfQp>G/!fe.&eE3"/G?h%^rDfa(^2L>;a.+nNATHA+2A?gMkX8&#
%k*u`'_ckuc[>U+$g<5835Kt,;:q!5_'nus/>`O,r<FujcRt^HS6*^_$3[\R'Rp52n=81VS0>i4Em['@uO5)3S:*=7Pd*]ZuD@Y]T
%]XeQU^Zm_I&N!bbR=ZYUQUE\]U<Ha'fK"Z>fO(IXfndiIk@qK]f8")&6Qb@l;J%K0q^9n5+PoW#2W@nu`R:285+:TAf$;umo4=oj
%O3;a.+[L6.K0XZcq$S2h\R3nkBAW?!^BoU<\eEUXX?etD@q^)B'mHRD<atK.XP8!Vg]qS(gr')X_&I$TmoZ/5V7&;)!!q:d\A*A:
%[,Z7@h48A)6g6M%p[3np$iWcb%s;K`Xj#CXPsbcr%.WK(nj$U9#TN`5ZQ;7o5kDmY9[IXPeSA_YK)5?U7tR[P<(8P>H:IY0@d=r5
%)&Hp=0FXaX/i12akhAFhoV1i6$3c^&L2*Se^$WV;CU,Qm")[O?/!o\>$E_:NW,J(jDJZE&Y3`q5l%l6O_ENW),[S%a.jXKh3]adl
%c!e8G=*A!IX6dVR`p%m0-qE?)0t+tK,+T@r[nNX\)lkm/G2Uq/ePa]"I9;:)lQWe\D0M\KIuE##`7ntW%c#JUV*N$I,cGNcXg]9g
%]0\k2_g$Af'N@L>p7O@&Pb><6UBf(Ar>*^?jc/[p[1D^Nqt(YM0:#It9U\c'L`2<[1#tb00@rKe>X?UJ#K\Y-;SOgiO'H>(TE@K"
%hS9:62qfLD=nFP3j;Np1r*`K7\_/Y'%5Ro<m"*kM1jA*VjgV.]fAVd^,aq@RMWg3:=rWr#7#sUea,-t8i&/B'AEK!2Gp<hpdat#6
%G"^*a.n<4D0Wk4*ZZnn7!5lmK&1LOFo`@+W$_I\*(MMjl6;d[MC3K9WG9Ajhh"j&S?:PL/'sp.mr[DL$+=E8X]23[T2cg[`Y:tkq
%L-bf^JK0c4pZmr#[oY9NmpX?+ah<;ii?fsjh?SshiaF*V%;:C,^L-]hCI__nR^u1jat'j0H%Y+u7TP!Do_$kWa(;Y"[YKo071E&a
%'Ats&WsBL]K)!VKd)u)C:(WX[4=CJg5V&W7jD7L(p<^N-KGog`?+Qib!TBq.qP1tsTf?0A[6[LuBiWO5]gZcJidJ2F:8Cgb.gqXW
%'R-\mq$oL5MTjR6`+F"#!c>T;-n</%Ihm(G^jbb&0g0`Rf33maM7+Xf3Yd:;5T;X/3]jjmc!e8GpZqeNI<UA&DjZoI-$W0XY(9fj
%<RR<a/2LT["9'.XL+%rqMW\<A26XB^(XMg':Y!TN0AAAqZ]Z&1=FJ$"H=!a<(+\ii?\1eNN*1:3b8AVcEThG@76.,Opk]<QbZs?K
%$(g@t)0ECWI(;n9os=no4nu:1bP)RHUb,Y06P,<q%-,Qp&]'Ro('?a5+#HJ_BOg0mq_^(I$tFfhGgFHXFml=thko\:PJO:%D(';\
%"*\J]D&eumqA7F0QA@W(,JQ[DUaA0kI'aYQq7rE+s8LW_S/3h<!2km8%J.VXaiBFU2Dk41pY%#XUI*omXM$[M(G7DsJljLM.2_n=
%dFXD%2@NP54JRhODpm>:a&6^Qqc2C3ZrBFB*djVAQ"B@r%BiQD*M/rH@*ouVOYFEQ5JZd`5HQD;LS8866UKGAhR2qaDUW(+&Xi.^
%2'R\-h%HFN2OoGb"8?2[-W\p-G<0s^gaiG9,)Sk7R[C/+"cMcQ'1#CglSH-/01d@a,Q.gQc`9[u)-o2cX`MhX`f`4K&+G?I1K(64
%_V0#jl>V(=s&=7+A/dG3%E@Om2eUHs?.3'EQf&=B`n:eAFif?skgn2g`9aRT(;"XCMj4CU9s_VSgRFQA(Q>peq,E9ZG&\@k2bXI$
%b.BRVc_QrOaHFV^4cNhu(B#'J[k$#+PkhKD*%B`WA>7h[/eT8a?$\Q"qWErBhWCrZk5!dZ*0)q7P;&.6B3rV`UU6N*4&9tn*2T(^
%p(3*]Aj#"d&1j[9@<N>_Xei$lB6?d^+jaV6<jiNk(NJK*<>$!>$Gn=KllB+u%_L#$>O4T.an=U2%'h"^&ql:Wg@LE2@r\Kle8cKq
%]?],QX^<%-h=r-L[*0[6bbeoe+!T0).rJZZ;5k#ZfWegHe?\=-ER+Ac35/[3)H$ZTTk"k,Y5Oo(X*7-@n0X?Wa9VJeWo5@TB2J2H
%LSJXY2`f#"R=56R*s6RS^?pXVMm^TOddm?-m's^m4Mf_b)9rJ3\&=&N#lc@$h7gQUFJBIX^\M5TD(^)!iM?"&lF%Vhg<a=.%4oP4
%TIm!g7cj8A&g(N7Yi!"]q-l"sZHcfV>CrT+Jd>J\5CRXB)1KH+*R;a_2jWlW\\eYiTFL#8#U@*Hh%WUTg#ZB<h!*h_[n3Ht]mYmm
%&aTW^D<,l=E80,o![$'"iu=La1XNgWO<7:F&WkqNZCm:;(ne,K?4;JT%/+hKJmgj/\3B%ZlSe<&gA!KnHq])HomL:U;Ut&?6$(<S
%2l/6I1k;-K^,@fpd8T??Y0%1/^f+XG)IC,GR"sTYTJK+<H;mA?JX.]+o88@&VdmN+1id07<q>)X(p6sC@Ri"OXK1#qJ=kbZ#-(f@
%Zg;CYU"[cJ]3"%**^!'Qr)uV)BH*Qp]Nf)7\b\!7Y>;Ti@9`%K5kuo79;'!4Z:PO+2)6Lo_QOtLRBXL.*3m]jS"%t.+rk"n*qb3X
%-23I_C/$^m^(*+-A%p?FOgMLhedjl=:;..$"Y@u8BKK^[+(1q]c0Pf5emMm*TQ9@(5ZHBYQJ5Nma#\17bj8:JRoVJ$V=1ar0>Zoc
%F'-\,:)ZH9rDsKDFr7[fi*-cXC[nYaZPm$=c)*"Ek!.'4PNF\'_e^A`3kl.qn9>,1ICTg"V-NI0Z*;8lK<Klk<+CC>+@!Y'&Jdu&
%bIpIafIS&,G4<#aZOkEcFmt=_`[^50nF^4-?>nDhh-enNNP;Tg,<7+c0:P`ONORon"1HqrIHM/5&l[liVX(q38qdL<R^m/>"7-mg
%OYW,(ng`d)P`+X);lC(0f*qSt'0XTXn+=nf)RIbq2f/S6STcV@CUZ"$Y00^Z0jXUANWs4^$EnDig^[1S8#?&4bD.`PP^.hBT3#*i
%R;8k#>YKE,l"5euMgU.42&htQXFa]//pI:=`ZNTmT9F!W$hJ2/j6$NanQF$g-cmoeaN"N3a]l7FFa`:b?AHifC'mEbe%1TqPD7kQ
%.+YFD+4uPr?#.Z$S0agHRA"Z:lkIoBE21R3+lZLV$(..>R^m+HIG(15hWQX+RK=$f@H59=NkDkQCh&=;ag/l68\@208"I-7P\W+!
%+*DV2i9JIDWr5\ZHp1]gOa1/j969;,II6@>;7g"=qFd("NL&\YMpYH+,>VI^6D)/+0[)bL[HHr#pnsAi6kJirp4`n<3a$.)'AD[c
%Ih1gKc8Ae6%.it6^RP\ujQV^JaEpRYq(k:B@+&o)NdX'/)oIt<MVio_+e3Og.)Ym;@CF3L]HqrZNREe7j9T#bNn!3kAs`gE/$h>r
%0e5'gF"p=+DqJVJT(2CQK?pH6B7ja%(H??(Ob'UXHF1ep@-PDq=PZsZ20'jLNdH>;I:0L>qH7Z\YQt*s[1t9Kp7fng9:Z)7(eYFl
%8A>5E"*QR3A'!ngpAbFR'FVO3bi^GD#bpIo5;4Sqppu"k!A`>oZtmVsZ6D-[Alsr?%/3hk]1fT)@[>b/:[e!k8Yu=Xlbf3^(tdFm
%1BW*:OO\Ah"B\osk94Z8.2im6[0`XA49g0/r&"8,0ch8/kD<1TK4H4]YYAR@p)Qn!ArFY%em/JU<"K$&Sho$D6F>"c`6e_6K3Wd-
%XFWJ,ot6#qFoBo')`jo@>+:Rq5Q7.X_lk(EZLRq%'DVV9O^VXp[F*Eo_[ET$F"V=p8.4S>ienBh(.'K4KSPgnk0c*=;S4%7QV^(\
%h,QGZZgilH,?Ebt=[&sj)$n?@mB$aYqDg"IE8F+aV+S#bX]Rc3@gl7a15p:iP_.A>>O@tWYT%3j*3Fb"O@4u:psqIGL:+AR6#lqs
%*(^2I8\m=1$s5PO8]lS?a1eY.C56g#rO\Y0QThpY?@on7FAk@ekTk)2`OrnOG<\HoHf"r@4;,t>m^#S_NL0.'`nn^7(9I+)k;F1?
%QCKMfYOD$N:Wi&iE:!1iqK)kTp/>OX:OfF.6_)me+3eetJ<&n63H#I*lVjCdOkZWD8mk+q:4msc#b>kc3*6*"%]%;=)Jl>Odt[S'
%rOm@u+5hQKr4g_Gs3Zqb^YqVmX'">4dbGK'7ELQ!6'4aP+'IPh!Z^E^%78hr2d@SAh`r<dcj2*Fkm.";5TGR0NCbO]Omk('$,m"/
%?a=Z*j5A_/!ls,?,ENGF\a3jb4*ri"-uQ0UK;o0Z4@#<Q7YZr9g+^0%n46f'_Zf-@2tsI5>!g&tD&<B2#F@3p(qk(o!b2+ung-d;
%NO+GCcT>+nh<isPl=aZ:B-l]2H0DZK2Wj6"mURJq<+(rBm;HL9TZLqJEtXiI2h"66dWdj-FJeO>L!#l)>nfJqMhA'?ceoG^2;C\u
%7Z2,[+q):kX:*6T7HS\T!K1]dY8po5E>rEEqIabWmem"gZnj90crRnFTL+44?hM/*(+L>giBDj/[%#*%D4U`Mr!Z8N%X$_IfpbEX
%8[uqY<NqW[Jp<%Ub%K4/mjP6&hjK6n)iSdi;4%d?I6@8\^1;drC_HXjEjdgrh@";tWmSediE>';gV`FVp@Usb[tBlU&O*j?Y`4De
%-[l&-:JqNp;tZ/ieiSJeqA).MKfh*>2h&A8/%PdsREE>_B08YoHJQMBRkM1?7gg#SiqJc=HUhNC.QS`XCWKNm"uF;IEXGr?0KZt`
%d$JTd*1[sB\0]$NqT^U2#)Na"ZLr#aT8YlqH&?DCkWR2L'*R8X[EU\QW^&XF]jcVgGS-nEQW!G"8R$?$C[^38`SS4D638(<k,uDi
%BDYkU=@LhJWY?.A2O]>/:am=D3PTcoDD49NJY!;%+>qa'T)Erupc;n/Z3kJ^2[1!nEpL;R&:uNS>ebd*p+8ACSB.4TZ5H*,A76cB
%V6E5P!&@0=l/"!XAHl1>cfhgR6kninM<^'0#^m"+nCl_eV8J5,,C!_:3V7Q-7)Z,p\l"jI=tE@kR*$dQ]8GlBB=mUI$WR8/995aO
%C[ICsSSXMaA&%;Tc0_lsG\TKHUc6eD&aDXpq``^(*Qqc$FT6d(7>:Vah/u)\'\^n1pV+f/Jj3F5,!B0Tidg<:mY;0r(U$`ugXd[(
%Fgsi8$9O0M*7QVYb1j':$)dsC?Hq*\&#^,>?@i"V-k'7LH3C_504Xi:'aR1Jd=(\sIP"M)0*73m^-\-=+[r-on&]U#ZJFN3:_SiA
%+8aa]K&fE'N<9Q8VP$JGh)?f,#D4/]:>-^"ITq-M_pH*q6ho^YV7$qLFb6rDMq/lcqdAN?UKpJ-=@H9Kft:XCE]AMk8$gu$Uo]q3
%N7>q`,ik%1$`RI?<t948YbkZJq_4_4Cf#-[g6f.ldD87h%c_uM/'K\JO07,YScuE!P"B.PrS`"UY=kEfYpWAE)8?^Vqj*n'XK74G
%FKnu``EPo]UH;?;_V;<Obo+hNL&j$UoOUI%E?:^\82!4Me;4CBgsGnWBQ*/C!b!")^Cr77cRlM(9le;rEs=bPc#tIf)31EJYjpF.
%d>7_BFDRH-"Hmp3*?ADGehGt$X%$I\<C&K`ZT4<5V->=)46tjX4KSU65g#(?idhcB&/I:EI>;%1#)!T);2JWB'?),BqB2?!5T;X/
%3]adlX^Sl'pE:L`gMNVd(K0+O.^+IL\b\^$)iABRQNai(KkF@5XLWlY&Ll]#h-5kXMmM:LoX1IAdR(Wj$I@q1T](qD^>'Om8dKO4
%o>QdV5O\bXk\ENtni'BEfJX'Yd*&#i8E$d3[u]`-CUZs_Sl+_imiKA.%(W+<a'eFL]q[5L9.@;'gfT]?:t#[AS=ZIU[:`HCqePLT
%UbMZP4^$k(cF4dk$d:g"#BUPsc%,!._)nmfFV4LNi>F`(La?OID*4UOS4F;3FKrmi%//,aW7?2s]Zb,66@P;iKku0>O[ok8kTVD$
%C3G30H^!/%`;=4ZVisk5P[D)KTpQi:0"_jO%X@aci=:'r%2)tU&5d@&nh+Zms&tuAN=N/c(C^H;6TiQg(^ISXBsRl$mS.G3&FZCm
%\ukcSVC:VrIHOs1AY?5T!I5:BS"N!?6K'S]*Ub;S%D(:E/gb:&?Q6#@(PQL$.,8oqpRl1[$(>)VJ'>3aRFYuE!RHHX+?ZBkCnX+?
%ngu\jICn_7-0-])d4aksaN[87qH.E!*g3(a5^MuQFEC@#c!e8GpK8$J_@<:^7broTij]r@l@PD];,Em2,q.YOCZi\]=5UPcPoJD?
%>>6r/2%*/STT'n+(;,8d0#)HPDqsjVhZ)4ifY@FhG"Z!Lh_F94')eC*?-d#qYmMo521L\=i#CD3-T9Mni>39g['_N*$?^J<2pW.%
%d;ajREo*G_DMpe[r^`NCQ^<>73]tk,qV"d&_p`I!$6jX`0^Vk/HL@MhN_!!m>>+_''T7(qU"<Z?<c`LB>>0]6?n1FPR!?ud8,UIb
%`mO'?kR600/`:*-l36IKpAHt+E1^l2f39O@mnu='*Gli"^/7/YgQh1T>\:=Wn*i?rjd"ZG;MYS%fRCrhq1..Z_?V.(oc@p/K>0+!
%pIcBX]O*/"jC%pm0U.&J<&bL,*Vo!HQO9kX91>?#TN#[_RJ0H0fjJ5I2o.ORIWj648]+]5d9gBio]aK<lABo^V^l%7PCA<b7.t#O
%'?Jr,ZH<i@MEi?]3o2Df!oisnGqLN%>-LdF@6be#BG[ZVC;1ec[KQQj35bIKd(C/TJ\5:\H_Jm,`Pb8cN;M_UnbCnqgal>SLCV`:
%FFGY7g/0-KoMQb+Ei308'kTbATNQsERL>?DZ-0=G=q3pA?*i9:YI<,6Y-,_mZj]BT@d<Kl/EDQA8_Om]'n,/gC]=rhjnYp@=fETL
%,S+*=:m_D[cdec.n^DfPY(moJX;]$$]EHZ`Ne\M=;VaCod'qO0j9(Tn#e,Y<\k/"F[053NYg>d\=f>&?'&JQ)AR(2Cp)Pp]Qn2JX
%'uU//bV`o(Ft^>2d(Zl4LO!a2oSeYUrFKR/>4_Jbk5+u.5W>^<p4mq"EN1c(,#h:>m1SX;9(93L_Y.Dh';8VX;&ceo(3a"QX2QT+
%UCpmV2jqie=eb)U>%n%3$\sX&.?&-*6t*Df=,*.!Tl7-u#6V2Zk\$qRJPl[Z'shJ">MUAk0/rlL(tL<sZ6*q=N+:aG$ugaL<0#$@
%O#N0*^u1ZcDj9-[^sKB<abS9M]Rh+D1m*FS/H1Ya;Opp#da/ABZQr9?F>sNt!D!.C?RJ;'b2m?F2ppu^5EEBmSn79iGaj_-K;.$j
%^25LS[U:$!&upD!:Z9p;k^EIe_5Fal<q&7b]a/0+4:i.HK"rao`[L%d6R2#7EU:eBi";42cOr=\g#gfET@[`iU7?k1Y76KRA+\I\
%4G*/$haS\R4\Q`";TK*d8cThn1*)M(5[QU!>!2LoVsoWt$@eHVAL4lqC^\@#3%iV]h&F#>k2^<Un;Jt,H\4$3#<s%Al%/73-FX-H
%Ud(N1_SanEFY2i<njc'(,<'-b8Xeiq?c\<dcq316<=81-erFO7cS@-+p7$WI'P3hhfp=-^O/Ps$X,)J@&_Qd.Dcmr15>dqa.FP+c
%i>GW&CWtb_4c[),$$>4a5YG,V%gpX];RihZe@sp`fH72>P.dAj[?;mNHu39)/D\`iqu&=^#l()tX[o=rerTED"(*"GFP#uRdChEu
%aK\@hdMcqX)u/,PV7V3VN:*gmX]&Gn]:cU@5c))As,?BJ+d>*u\@72Cj9E=V;!G.?5GNR@aHBBBXgNU$%ib;t5c))As,?BJ+mPH/
%%GFuNMC/R7)lRl1n"8"0[Jr)oQf*W,&"3I$s56,5/aV*hr;3Tp-WJ;jea9/RmmPHUG'?e\FEo($E8A0)qi!-<0i5C&EIL<pHVGo9
%5c7\=FR0m82bP%V,ImVgoLja*CU+>eP22_sn.8EmJHW8kfH#qIQ28g:p`V#O+T[;)W7Y]Cp]jb)1f*VP22*T92s@C<2QV!?QM#-b
%o>HUFm:JCWFNn\aU0T*1U2+p<@GL#e;41^`n,]*/.iis@-Qcm/O5L7mSV0Pno+:]uP6.''c&l!kjW&`AlCFQ@H+(hOVAMFfo<d7%
%[&fdL%_Jj)oDZCH>O8fh8+HLN.'q-N&DM"R<#E7PV-rh<h>qB#WZ=VkE#Fh3DR_"#l.*`/4EUJ:E1>dX;9LQ^6r>nu-Fana<LJTS
%7?#(tVPSN`;$<HU"mW2/ll"\FU!#inOI//\4*hqrfm'EAia(f/iL,*2"\7KB3_/kh)0d>M++YdM//#QHHIg7./KTXN)2/oF'jZD6
%"9`OISpO'77W;?:4AfcpDABSVT+^b@4S8JA30LkN;(d_PWEs7)+?[!RXS&tDZ"#4D<pV"hr97*WmlLA_B#p3T?kLRb.1%7o/p-f(
%OddTJ7]B=Ue5jHF=/3&t%O#,q?387Vl0p&]]]4\#0N"]]gi>2_68jmdlLmrX,e$*S6/1lF3r6;+bn4cer-j_/R!e2(Hhf!VS@FQ#
%Xn)_]g-Z!/\GNW_\f>=YXUR^TfpMt;(Wua&SahYra>-aP40q1h8,tTS[fPd^&'h7X&'WtXf)($dA!3Z>"9cB7YGA@?`pjp6a8-QB
%8$pWT3G"JEpZA1(:CA-XnaerPq7rcND/'lcPM#><28;kfTJDA)XUVCujBJJs`l>Ycm6[$LJrZf6[A6au2F*herl:j%c`(3`f;TL,
%c(Ya\0RNc$3OQDBL8Qo:!pPLV3i5rVNN%?pp6s]7_XKE^2&4C?DddaFM@+u`)SRnt;,Kk].`*60Sl&KY(PNC`@c?V)1UtAD%JLJ4
%Uo#oqX9MN,^a7c5b,*elr3t\XS#/*J+ItMYLVa0)V347\9)Z?-hM-d%<2Xf&N*q4kI#X!tT28CEi29K1e0p!cV>CW]43sG+45Dh:
%]k$LabL(Uke=P2,<I4k6l!+>oX;3V&edd#RZ9DA@,\iC5Y4`.+U%Z.nqDfY75C=A?-ma5eq\5WZ:bm:=7?Xhk"iVMR.ZkfR^9$7E
%aq2FM5V"j>=S(NDD&NmJoI%MPf1Ln91Qj%e$qfsG;oVT>Sn?nU8E+=4k][2qo=2H`iD5cQ2K=UR&cC1RA\7@Wj=I$3^j64aDNPJ1
%a=OmgpXT3@HC7srj6J5V3;n.YRIJ!Dn^<RqS:Ss:c:V+Mq#`JTnVYHCH1>(bQ%AG@ptL2cXc#j]".DopJoQX]p#II\rKe+sdFcVr
%,\rWNT<,n3r0MAHCL_,;H'+KB2O+;/;A!Q^)XF_]j-OK?BAmcoQ#@mr]j&Y*R;07jn\L`E:R'g0ZqiXe6]<=WK<_%+!?Cr)T?DZu
%i8^eaa3OF-kX;-;)X,.sHu37=P#X9J/ZQ66Z+u]LV,l23?8b6nARSrWWN#KhT3:>"=o&_R*+$k?)K'gckNJU&D@/EpJgtYt\'?_`
%2m.r^8O$(U45%>s<[:SP%_rd''JhqDQ;HZRPT4+G8jJuT!&C'[*mib@rN9=P,T+geo;L77HL%LQ^/S;bQ[FOPNm<MJ9-BWe6`YFV
%f(:if2]P.k?s)Ri%(gngiMsB_)gp>1.6^^)Z(H$6Wi%/q#!34Dj(\LLd<u#1Oq_bUopn14cbt[I0?)fEP,7jRPSiCH-[4@f%4ZG4
%g6$,`*Zh-adt=n?532D8Ui.Qo?pQW937P.CC@FXs5>bGnm>IQY8>qo$>,a_ggBaYgg0pZ8:lLNmn?h8fYYMIk0FMtH[K-20f/<qP
%],H#UTPn$LS;N#@lS1Ts7EDcgR(C#U/q[W@h;X"E09ts9.GPa&J*,MjlRQ%r>=">1\D2uVR_[*WaF`;'=MDBDY1gjS'YrZk8IZIr
%EZ,6rmt5b=9/]r7.K-K3V_L:;eN8m8'AVqe28;1G354`oB)1r)q3Z5)%n%LE^9+&Kq_\F%o'&fW+*[4>i-TB/1$+T2<$jI.\N?NQ
%jaJ3%LOQc(XVeosT%0\16;?7aWh*0'lglf9)lWR"nHh9Z-J+%;H.^YeCIpW.cZ@Zi8]Wg4o#8\.:i*Fr':>)7QH[k6$!q7uagS2=
%N8$0]kqWo7Ehgm;(b2!781M;C-gt*L^PTaWe^]___W$`F5aYV@M6Q.(r3"?AK7d4</@4MSe+KrJ`usbn6!j.dW%uCu3"Y/)l[,!c
%c/d$TB\Ui?lB?BWq.8WS%iq(@qREY1KN6VKRd2V[WJh18XR)O=H,F&$2[Oi#!Eioh24_$J`K1!$agFnPf1B8\?.:dtflLZi*J'/L
%*sOM?'"pE!Xu*>["MMK.$fFVjMaMEq&ekAgiKmIn-8.LDUtL>7D>Edd(&6ekHF=!An;keK41I@H_4]n#6JlrnD\q;2kD'r*p/ing
%P/GkBmGZpVrRsXUqp=G@'JV7Q%spIb_cfaJOSY]MXDH`gX1\"5RgPK2R5HbpdL8C#YTVtma'3O<>c\rr80$^P9#t3Eh3]44>9HWU
%8@8;e[h$BEhOo8QJ'2=`C`dsd#k(AN=.i-)I-bo31!f@hncruWB"X(q<E^rtNsD@E##VFC;pVoZ*RGW/&ld^P4PlakmAIeK'?Fhb
%`ai?rrQ*6(?I/V"4\ji!aZBmBIc&[/]<a2bq2`3->+)bb/Dphse'J6W3!K12+dg8'lC9tu*D`":]Pg8L/:QHG9I3H3AU#6<0DAMs
%IiO.iE(]h>lfAUBW2K96UcTV4iSD\H8gcqYlQ7A2DCK3VS%2n5GgYH`2=b)F8MHEFgb6N)04d4ND_Q:0Wb)dnNMmu]YF)bsiA-^g
%?+06>^U8-4bL;FWcV"-k"?rH5D<A#l\t_PZ&Kdn__4L:/1mmKs!M+WPCZC]+]P16bP6!n\._uQK2W&)@T8dc"]fG_L=bT.Oe0P<Y
%ei;XP]dp#U2UmB:`q`Gi`tGDs*UP?T0ct:NAA(,A*@\g<KRB.)"Iu/#i%RZ1J!GlrUP-XHH/,c&./!A"_*5%mWiuF=r@%O8')UQ[
%)&BB;E&(SuO9*'0KT3!jI/fPZb6N,:cpe)3:N3W&W7S.e+5fT+E[r6QbSsSi/Bo>)*(.7/:sd.N989$EB(-HPltpBs@*O:a0W_?0
%T\P?NJs@X_H_4\WaVspZG`CJk6CqWrT;`/3c;oDLdX1-PqK4MGI6U8_F>^nKq=Er!;t\Ug''/T>8uHSSa0_r2F:X/<n\q-0)&prq
%bA/Hkm$`A@p1;sj89MJ+N'^U4#HgkH3edKr1$kMR1COPXXH?ai1!G)1@5s,h\:^oeV`s6,h(W+-l:<\Bi,`Lec/t^<:O\GZZKpW6
%HRJOS'2mSQpJ7P!D`*=?4Rtrt,H![\+r0j=GQ*Q=h41]h1mmI?3K8gT=`-SD^-o?6YZ'&((A@,/_YOB*,m$;d.oe[QirqjZ;rMXB
%$G/#J.;qQ)/-c#D5/0TfXi#3R:J(Ss_7ElJ%]3NMX(]>\,9T3hDWaMh8H]eU),'''eqNnUlUPgX/Z"87&&-io[]9/^>&SF9?n:>?
%M?i#pCVH'0oGI*Ne1LHaTK/@<;ddXt713]sch`OqZj1',2XIZ:<tq\A(YTL6*AA"erWH"@GBgKM;C7]"?M`3pE%ot"d%\S2XMMbn
%c9un3jdgl>RuF+QFBR9YiN:91?WJkUF#[8Y(6*adFNhWUfB`P4`Abh2FfCajO_5p1k$OF<-of8U*Zn>QD(ULTI>Q[&8(\*aoGB/%
%b%_g&iPaB?fgWtr]F@:aRI(/R*ke.JpL%aHQS_lu4#V*(0J+T%=fS1QnkYI'I$clPMorAgbZtj"+jGu(4Erjg@jpiH?j2Me/BeK^
%W(DBd\ODb?_OG'Als:Z4kV-2O)Y>P*IE8R0?=Nt$:'h'EkZGlZ:3lEU^.k'fPgAP2Oa_Iula+At3a%s&N+&n<((?Sk6s/;b/C`IY
%I^A/=Y:3-giJHY.)J.b^a+HJrRlj2jhpP:R92sst0<^gR)>C9+=ko]R[S-"$>Om[QZ"QgXP\G^/arU/n^mi='VECVQi,u^$+1V:k
%mn6,Xh&qEm#C'H\s7P9^kS*tuOW.aFHForU*CY\2CXe^J#O%oOfBr1VorOik[l=*5,hD+.KuaL$Ltl1YLM`<c<X4"f(%ipY/4;\;
%6KH]I;U#DA"YSj@HtsH_W<60F+5fTKeg_$PbTuTC%DK4WVnN0^OUlEc;T$[b[QUD!_7*Hf=&^@ci,(L=?U?KFSm/5t^9n=*h>o-h
%&+Cc`C\>LA@8o:$Dt'mZ__XU6aFAdXOhFasR-E)*[lWL"%?=IKicQL:!FA03X]>r@]sToZ>H>iF2dds&!FA1nqSrf"s-F-APumtL
%SR3t6#bhd1*o04k5d*C8UE_6^g&>#N["<GtV^N!Xb8j<%MY,sQnMJ,u5/"i*:hk0c"53!TDs6Bc_S_iVXd74Lrt5g+=$5rdLVm_E
%LVOb.i9g[X9G$[uQ6YE1Q1$#,%OqY0W'/P[NWq;,^NKt1kb=_fAX2MZY'IoAF0;89#`-Oo$Vhr7$g_/sLX1!HXHmH%XtSdD5:0p7
%)t2LnY!8\DKr>!g!QMgL"\aCu#LDp]oY$K.8(1.:+"Z4jdE@\5R/\/m`A2Q3ch2Y#"-:C^)Jloqg(?m3cSbt4pOV95lu%^WHUXX\
%cMK@n%\X<?16c/XUfp'MD]`[2:1]h\>-t@emsTZS[,mKjWTUI5`TF.H.sk,7+gq4$^h_+J;U*W,6o980arNoOKQ*7h"KmLReh6%%
%8N.N6n*`oHWH_`i'-Q'J0H)oIP`]+[SS$(MrGok(hnC-\/8Z2CnXe/oR0>N9:SQeT3!Y-;a*:r8biP:3Rff01c9)Gn,fDq&:hA3h
%Fe_0q6D:s%d]Kpd;>a@9(DmMi9=-=Vb4QcD)fW7,7hHH(6-4LZC"XIS"N#5k?UPZ5#5[%NPYCKH[i.R'86uL$D^P+Q4eHDcfOE`T
%i3'H6L-/C],7:P:0!n4m"W]s8ND)f(n51g>14lN27\!;6JjQ:P*P:YI;'G&a;dT^q(IPq,Y"!B4]^^&0)a>^-d3JRIkKlW/8Bs6i
%7KhH?q)%8lq@H^QP7d2Q@pb:Er.h-d:g0Am]MHu9.H(q/Nu&<ZR=TQ].BFD*o<7Jo%$O`Fd?gSPTjE-b'V80uYak%YlViOtb'J(*
%+gPqgX#5L"Z(1IA)CUW&Piu7l<m),sjG>GdJ-T0PG@<8bHZs"MS?7Q0NIrE*E7u6c>_X_l#D>.2IX6QVK;/A]'O.(Acfmr#nVBM9
%$2[Y[+CEQnfC-WSEWn&[+$@M672hsH2F/kAWgQ9]BoV([KRZ+C3uq,WmYWOED#:Xb#9-W6X$FodSnqs1AjA?NZ0B`nBmkdK(j#2;
%jCB$ZB/0k31\elk*==;bePc_NcC(l6,D4%+M&^"%P%B'<VdH=Y^d'&'=+lJ>4I:;$PWm.:]M%u_a2<9-g#oNb>j8P4H\7k5!]CC6
%)<,5ql.R)3^AV.k+djE-!+L1H)*'fSG]16#8mO3C@.hp.=UMnPL9A3p/9Ao$]_Pb*Jp4*.5]U?QH+u0&]Oj*VC&JYYhO0]!<jsjo
%C?LRjdMlU5hSa;*b9N$XOcq4.VTBMZe+a9V1[W&[da#4DhL#mI4MHFm"MAc)9Jn\%B;4UK^"gI9P)a>DFZAbGG4.:0(YlD"'Wq"`
%H!tZI3Qtu5TfFX`\"HjdXGh=-F0fW,X$cB!%m$#3i=4I#LJZA!,is%)[X;U!L"h[=)+QIp7SJV:PAt4SGFB`$^*g\\k)nU\^]PSk
%Y>N7Z7j1+HhDk.Ef>9qTS_nS;Z#H=(9d[]G]hO*&dB?:<W40cuYR=K9?R(#4c+E3'^Tf.HPP`^A[S!s_*d@7aTnhefHYjIg;5)qB
%F'MIgB8'Q)0ZPPQ*2dC1;+?]+WLTi"5#c"<r7`=+/)adpbEj\oK$eOR/kBq0j6"WP(FGs`J#pRI+?LGY-VC$&!I``%6nbA7_in[N
%6?%CJ,?p)d\#4p6@Dp'QR75U,jT\`8M9p5N#\*i7S5pE5>0ZEn-jC19Y^,Cd=9g',5qdiJV`:5_bPL$T'em-=,90@LbMsB.gP$j?
%iedXeEla>pe<?rdJUEs\@)9YE4&EBTU?"MuQo";k(@\Z!j0iOhk@eRn$Ge'k_RoOtFA@,,r%;4#'+e6>;DqGRm/u"*kT^>W!g*[6
%ZIVLQ4KTfT"8[1d/R5OG_e,;_S_Vo?1!(J4"LMCW[tD[#'0^LLRlMT!$frdU!!2BZO$&/4\e8r<EA49"MO;&(O`<)8a2Kh%$(l#&
%>,0i*^a4V&P4`7QWr/CD"fWImF:-592oTO>X7D#J+cV3;+$uFB.F!9t@:<N:%'bkq)?6qrY;B8bGRr-"\uhW'4lsYke=^.g+mPLI
%Lh$dXY$>S)9]=U;`/>G8eIVNeG(hbs%+DF/He_\CYZAZ?G/6<iS\n?I1350/.tiFW;SA<:97,RnoHGiU;6j`25JE7#[XC,mo;+8S
%>@^2nmZmcMK\>)mCLc+uk+(AaGU/*&&kLbAp3,T(jG7S-h6\gaO#s?8c9(Z8#?IKbZ@(kj4<qn;//NZ3pNDa;g^%VMr%353_&Kb*
%-$Em\%W:!D&Xt>5=`rr_-0"nI7)PfLR=>?bDjM>,QfVAHGe3+S+(L\ARY@"<AR#<[=2b1`?H#g^Vt&;;i`Htoaa5d/X`PegrmPmp
%;%E,oaCgu<r=G%?^-K<E!'N`CD'^9EqHgOL062$R]C-jP3<QBOiVF*9Ko&33r=>EXU[c?]h%J6C^22]$7lF^2));XLK`Ra#TrQQZ
%*Y9(Vn"I-m0PTDl$b"r-Ku"X&'Q..LJ1,l_mC)>ub>ZM$Z,B#/=`=ulNFh>J<uiruB7f6;%S](Z0a+j`7r;!CX%<ZjL`@d4Nb5jf
%1`uA+[rl3gJ,+[`2u*1hSpG;'-'4_J':f3/aA"Bl$A+'IL1mu5ep!Z"^=tq7g#J3!Q;X7!0_?!moh9AG'>e!>[O@frbhmI6\2%$N
%`-SRCJ%kI-j'7aDYF*X.2S$<Qn4W-)'OPVL3D=p6Ss5X%PCZV8RAq<K_6WY>q,QM1XQ'DB(/udEi0/uW9\LN6[i*,J.=LML,dtuj
%D'@?m!_;\pXZ;.1_<S;1rd#kPFFS,uM,r6L6#LX*5^J,5TR9jT[d@42(!C!XD*%<+4n5T8qClsC.'\UW)^]6('2#%sn&&+M@-M%Q
%VaVZT>i_*8G],070kG</+R,&^@g8.b))fa??'PZm!\VXd+a0$S$\UdnY+VPBMqf5jgNZ^DemDE&TE3ccHSW!I@&FO`(b^F1@\I9M
%L"Mc.BiTffq8rG][6EY`YtKd9b):t"pD1"oKX\4h=216P`'i^?92kPONo>i2JnB2DNmi\kJVXRRi;3C..KoaVbF-<MeDmO=j.SJd
%-;MGLpWocNGVBe*P;k$rnX3fAn5"-^nAFd6U!ot>Lan+neFKdP/h=Yb/f&p[/T1lTkcM]$otTN!nuoWbr7bO&?.FNO/)oRk.i=T2
%li]B`XU#;ah=.SgT5I']Gk/ciT5c3<&+=U(i<Z@l_>Tq3T-*Q^%UK$QAcI^-r=h;bE8^nirVM)nj'-tA*j*7[5(=2cFm#aI"+/po
%aHkE9N^K@h?=Q>DiNO98%1UmuB(S=H3uu)=h4&g7eeg+]q[lA0PhP\h^6jglTW^G7./Y;ar1FdV3+#6<L_9[mqi[Eb%YYG^_2J*j
%c*oY,V/?,)YiJ"K&X:*[%g=V`DDD7pT4VWiW<UO,]6D(WUMuVKkl,RFmj_FL/P;BQ/WBtCf$))LBc`X]KESm;4ef9_Kt@CNXH8gS
%negp0ZM?YeSdfXtc"qIt0f[$2$uG;\3Sm#0Nl'&DB,aiQOcW^UlbWY:I>5ur]R>`/X_OLV=g3-*k'aP'KZfNu7rV]AL=;p?h^<eB
%TLG"IYIq<0`!@Z!D2e?i&U[dr6K]"7FKF_CfmN3^,Ps1mdI0d;:-6r[\cceMW5$<6Pj;R/!;7-))gnK!gZa+&Tur@.6ga%AHtUjd
%_^GB%\hJ2[fQ8=Eg/urhJ&[H^]M!\#I):).2fiO,#U;R_3B_Q_IX$RUmC#ZY`rg_/[5U.H:\Ydo?ppq78$I7:F2N3"c"aH[#2d!A
%F?\Y5F)^u:WJ'0g,'0DeAsM93,'+]o:UnL$'7V(Rc$SAPkVjj[1$lQPJ)[]0JAG7)"ifNQ%PrnTnJoR"_b:DUph@4W"a:Bq+nZr\
%NL\'>_F?(N$q!LeiXn-J&,n?@B+?9Fd.cl*J!P]G%h%5[qA=gM;lkW61A\D>DnrP<h#:Q`#/p\X5/W)bjPF8p+2uXt*VBs2!sdk'
%\mj]rV!,X#&1@):!cKrM34ae0S+PE0bgji)Qf:\C$m$P;#6aeuKFIddj-TqXh!VNI!M6VL+Y5MHgf=e![QURX<DN&8%>R,+.`a*1
%:UndIbMD"'H02T5]A0b4rjq(BK[T[Lhj[)=8L@ZT23#OO2uIg9[jHdR-iDgXNNH0epSJN^HGa)KHtu(4I)>>HB<3gM%,@<>^FqPD
%Fi1[8K[(tChD?dGbuWoV1nO8Uq!3ZQ9aI:cpq>p6%&IZVqRe@2cFmr.[jHdR-iDgX>Y%J9QZ0IAh!io)hjP*;TC@3VZ?9tXlQ36(
%$beJAF?\Z1dskkBNrQi17dfM2=7@:jQtRF7Zo;Z^XOE.#Jrf/5[@N2!)Kf;B%_bd_(-eD!BE,fk4l\](p'6)gmJ,pKA=\-<Q%`gH
%**U/jOnCSWD)d\#[Z.3b!(TKaPc+f*A-*jj#_P>"f>-.l"RVeC4;$hpLKa.*GTh[o>0&(!]r!HfC"5([\pG[f)V,fKN;ar,=fH)(
%&QF'F>)ds!%a2HZojR]')GM_lLM(\2IMl3l6\>OI2j!@1IhB_,r&?il:C"4?;Wq^H$62s9^HcF'V"3k8MWATYQW/Lcnel9g2S^t1
%,H8*WD?j)0grO"7h%?VjS;44TAB$Pi!OSP4F+BtmOKi`=9U)U1giV42^i(R?#X7RaRWB6earP$M<(%_8XX%+9d7,BNMcDJY1IpEa
%N,09es%r@?s7e\BJB7V$iEe?>0TQ"m#/bSY10(0Ih([:_'.C<J7(TU@:NfD:OTct`lS3=='p^^(Nb!)3gFh/!`/m8D1#"T\+n`,H
%&:D_m+'rqHl'?cW%8.IX1n[JW/A89+:Xp1qffqpb-+ifETsM*H6S=/L7LnPe6R]-r,B?3UFqhLfD-5E8Wol`J(eO,[`Qh]%TOlAW
%l7i&]D3ciZhTCH8VrN&a,amHjK,jU*@OZ-./@0.Ur(B.m=&4`t=sT+GAnm-fHdi+_Q3@L%2-!n@4dZ[>ZjVhLoAtpcQsG3ZqTL('
%rO:&AKMNpDgdEc_A+c%-Ia<+IR2Le([b68of2B-L-*rLjZLi"X91PIQHf6dO=Bjl-rNrXTEJb*KgL$NUgL7XG,8"ZOj5#Ba0J`GK
%j6I_'p)'>s[a<8@Mq:[_'6@?ol"N`M;nQ(oE,?j8o@CZ-rRue0YJSg#nDM4MQ;0Z)[-BQq*^7<SiE,;Z*`p,'7qJ?<Z^S+R`C%=V
%?!4BK1f?I&')`]fD;oNko2Ij0iADo#Ol@u:2`S>W+>EgcYmbdf3J(a><c(MqR`='14n20s+ITD##ifp%?C(G7)iqo2@4j(P7RZ4a
%1b!u9Qo]HTLa(Fiju$Y_IG=qmgJHl8Kr"J/BaF%36ul(hXdTH"Y:X8s_.)N^_"GnOQl3sE=K`-(V)NVUZ)g`;T@:A4GCU@7dB79b
%1g!ZC5Lp4[L.rW`LALea7PU8QD2gXND(5M1@>LGG,,2P'T)lYX!37\YNqq-j6>XNt,.:en&gJ"J3)04Q5i/&WSsrP_[86@rJ0A2Q
%?JD@iR3faq*9!s8L+S-.l>I#%EGeY%\F*tl#ZfJOX2eAGpB1mfUbZT-T+a,-]c(]Bp&UJgK[_kXH.<c*r3"Oo`6,gl"Vs`[$81l8
%q[L4)U`dOe'Yf3q!/hKc!6[.L%R.eAYKGcf^q1%_C-u!BYnOqsgQG&dMEJ/XO$+4&rZ'YHL+R[K[*(be@t,rH.4!?Ob#>`""8X<l
%aKB<RW7YihdF$-+E"1rXgq&-]T>q.'[Uf!3epRc*MeT+bq7'qO(-ta1AS_Li?D;;[[PL(sjjT0-Zb0.78@Tl-kbJi]K6\R5\'u`k
%eVeL4^7QG.$ct9TFH;c!(!=0A-m)i&W1<7ajh"?7$:6s.gZ&2eJsP;$<ts574H/g&H*b<#e<Noi*kdm"O6*pK^S\eC*rE-#kqL[V
%<3F$]R0t>e9BH%^\poPn9]@4('JkH;foK_t,t9m<76?`iC771sZ5r=q@upjR6eV-BI[Lf1BIDf8Let+G9k1A=%2/,lGP#J2\S:/l
%&TJbkG(@f!5;:3d$KU'QF96iVQrReBE)?:A#qq<h@MOT`,+'.Wg/dSRiWb5Pbj#;\pSqimUUFY;:=m3aUV6ifM``IlXj.s.;ueT'
%Q`YOSdb_`.Yh!7F;^^t\'=`Ej+&M,ZPb<G9Tdj,9a0<oFKYs3\C,,fXOgFXQAuTVuI>?&&jYB1dEqdJn%R%*g+A7P!-0&b_<qDfn
%h[6H^jSJ^a2M#ProH_X1^Y-hJhYtuGI<e.jGk$-%akZoF9OfS3ppJ#iWfk#<)UG@DprdjHP0JN<\k/Yk,R;*#Y9!$E18kS?B2hFg
%j6YO'3UcFsSFA^;VPst]hM1Y/(*\5;bOS]SMY3?Q75A#RO$0&/itHlY0SCSXGS0`O/!3tLJQ6UdccLY/@jc6+_64<&m;V`sY,3:L
%-1\6Cl^m/1F\+h'5=-B;Fg6@?_QXgJ^"!OibnAqbegX$UoseF=^p32WfBN+^Brq:S4G_eNj98:t(Q6M!_VD26Gh4)IN-fpAqIT4H
%,3au%+-WL.3Wt#AY6[Gn4fh!^Gd7a'T8n!QpsUdA9e"uR4=rDikJlS(AdVXZA&d>5Ml\0%19@3qUoD[H4ej/Z!n=0)GB-`LCPPn&
%?(IJ3[jgXejt7`2?d^'MQUDa(AqOGOPc]!;"4Y:9Je4A2Y5R]C1uO_;N?/.<>SapE?`c92$\n?#`:g=:[;[4d6bF#V/CX2X\F.en
%^8T:?N`Nod42+b`XJ3TaNk-q$L7"!GDP'#gg>O:#TLU=!!>Zl.8PCaWct[O_FZ\1qIdQWem=tPmM0si-a?Pg>mQ]ojr%Gcbb\Q1P
%s'g!<Fm!Ri%q-m5&)^jWbNp#":e'D12V2]HAl(n-fPM0lUg'.i%JCdUT]hC<;dmEXW`M,PBG\poS5X28h-OO#+FqPpL15ikK%#*U
%#CLZBZu9<@8U\LV"`SMg!di((%*LN;EG'W-T>[j:jg*t7@NGMnR6'BQi<gft(Gpop5U_X]X!hr)W;M(u<)+8KE5/So,i+oo[D"-A
%DgboGO/F/RH3#%1R[R9ETA'mBEFsii'kS\b0Zo.$W%c6CO,AM]m4IZASuUf.`'gXhU6=NHq1V!A?l;`nW7/fTB?ld)/1:6GRgW46
%Col3.pSq:s3@#&_JG5Q$g]fAnI\"rkG$'MPA5-[Lf`ba(RX?-nN^^S'L.tmjL:Ss,.1Vi.2D3RSI.RSa`U31G+4p,m*[E[\2SPmA
%9r5@So0.3"&*]_*5'6JhI@B^Ik0Q_kT's]?'?1;mesq_m)h#0'Q[L8<7p8UoF(?RF`=3Hg#jRu9#gU9!O*fQ8VVG]m.lgM;a\BN;
%H4#uBkJM(hC_J"[oMNsqac#-m#&.?(VQ0bUSoOe;H0uduWRtrjdEt[^3/@)ZEfh=>ZcGj1IDlhV_AlbM&;3%iJdGoioiY=I6Q!1I
%Odg;mji-W95-f:s'Eo,X#Wb#G"NOmk`r./Ad4.'A4(F;GWo1<_.4gr2BnSFCl&;oErcgH]Hq'%$Qe<2=Z?2TRVP%GiL#2%C6hf]d
%QG:SAQD+2ro=d5'n2_S4E#W&;GKb`JKDp&/5r(KTMoFP*id!W&*X;-,0S_+Ac8d6a5%c%rcSpQ#[ZF.Z`:+]_BkXPQFL9.!`_4(o
%*cORYjd`4c,92-Lena[X_^Nsb"Xp7SD3OrQ?Cc5'OW1LSM>9GdD?DWc5!56=-)!#EZGQ<XB''pPZG-N\Qjuo"p\<T9>.5RLs"s!0
%of94XNLq0F"mA985i0-T1(lRu2tggY29KiD)@ENMTPdVS(DhYA;kX0I$i&N8lj5^j7,"jqmr7gfJO)F)0LRCU#1J34j+;Uh4>BOU
%M$pW"\F(C@gOPRp_$5gJ-kV0>'fAk!6&bJVP8hK,#JgVV#JimXqt2e!,rlhpUE7GtgN.4$q9JU!`DU.#,]TAgDu/l+0@_.4NY'D&
%i,q39LjX`,VqSt"=J]+(rrLuKCNK$W0K))3rGR>5r@bLUCY[_F1."%^E`d;T^KcXcmJ*TeWtJoaFT9P.^NA;fs"\W`\R1f8s5E:L
%]DmFoR#@OgIHZfi9\I)YEl$L-/,Q6\ZSdI$rO64Yqeq,Cq[\ZjB#?=9s#+\=s)"ues+*]-k5C(\?fP6k\dUQ*b8qmd!I7Ylo`!%Q
%dYJ*Mrl`LproX-6DpsN*G3;)s1EP/G*fD<'iU%d/P;2trk,5V&9fMOU%9q\=)seJr8t:8.4UJ$'AJs`S@r(q-T,[-+>;%KQYHiss
%Ql&W<fW4<!"81.*Bs^9Gn\u?IZ)(1*D('SjEL%fXD5:ta_6)7oM24.b9Cm./Ru"@K3'l:OjES+S[LBte8E<gu+h#JR)hr-\8Zb6%
%["8dU7ENHSX5=1s@kuhFA1L<hhEFZb"Vo^:H4&)+BPUjJ>U$QJ*,ah1BOSnof<n7\Yr@<)d'c:^!UNaL/Qk`lKN9f>>(p6q<SiJW
%5)?'BD*d^K4<9B8bN];$K.3JRQqg&h4p7ikn[ro]p\7d4:;^?scM[q]2e]b'.]he:g]Ph\PEE`AZF[m??^_RSkao/>f4tLE/Hl.c
%`u[r]%`B(-_33l6/XKIkV6A%l&+BgjeIqF0qhiD(_;SI(aNCYT(=rDARhj-fibe$6_h>mI-l:[LO1W7XW$mu1O8Y"/L9C>K&n*&I
%]tl+mRYP30eBPl&-<$fcUG`mt](s8r;)c=SGjKb<cT[kqD(<+rSW/<>cl<e]8F!U^RN&\7bmehr;[@]9SiXV#bnA4jHs2hVKlsgk
%ht#P`rrL\B&L&<);+pf*DFW-*JsTYEqIR:I,QA6[C?\4K""]Z,^m"Rnot/?^e7U<C#lFgm/]DQD/Y,mMlo5#SAepLci#Gkocf/]%
%hkV@))hqh\c#u7$cZ<.W;&DJbfI!sO(f#>:8>c[c[1?]]03A/<;)Sb=NgH?fP$k%`IM<9:%,l>]a(V<Gad!+FI]^*;D(*r)O52G>
%(NN@iG02M+G$(1'%?is`XF4.%9.F[LGVrm$V,IK.nTVe0D]VJf(5:%jF)Yd!UmT5T^a]^!O3pQmP:J]YNdX(^osGYrln[E[kG3BG
%jjVWi:t+oa_Z=Bs1q-7X+ptRXMP5-04k``H-N*nqFtG;4jN)I.0`Rh)]kg52WKacs04Q\@YSZ/cicB7si9E5Nc'\>$eqo0(P`PC4
%B31V7?_eB^a5b+8[22r@&2S0L*rFP0POmF">>?#^j*hWO@.W[mHUCrskg3&]H"M*W.]I#][KM3D?KVcK)g=q*7]IUKOn/jRA!&`>
%c]*#46gkpso6\>cX)hZB,\*noL97.#Ed$[#pXaQ]XPm>UPBTo,T+'C>&pKZaB9Ru!XC?!C(r:VUjJI,_(C?PXF-@W.*d^3:$00mK
%T0t:K.r<)Z:_l&QFRAtC>_5glW2;%q'>_1RO+nWXaCW1i2$DshL#&@hU,^&eE>tlh;atSTj`Yq_\R;KWJut^tEd$[#pW'i*@;Klm
%egr>G*(+)D+!>j\^eTY@MHaj;0c4rIe4U@\QV_W[Jhi#@+\>,`bqD.(IOITSWEL<sD^qgi$0#rnW&Kk#NLjDP9N-cH(HKc.,KTQ+
%Q/F?B'h72qPYWN[2)<RskhB6HM&2.2A3O/&<=B_X3`^e7/K,M*2j*4HSm;+SB9&QjaJf[GG"=NH^T+9E.:LJO&(L(TR\^URo(t1s
%S6lCQj7&QmU4UGY!A(p!:47YJO;!SN$n-j=#5&Cskj*l4i0^%.\B(\>1LBg1.?ZCQ!ppF`k?a2=qYVti?!qoU$s&dn[dTpDRo.O`
%3fnNtGs["\5&9a,IRE!#MR'W=Y@p:819)?7i##0d!55sQqJ@V%$[t>_l@@>UOQ1O?-5udEdKVNmqsr-5(qr;NQ-mg#J>qoEK25%.
%Y_OOB+j;^3)W0]F$obXr4d\I(b&h>2iO3*Yr]ZB4]cE)Y3uTf))G1Y1dCOc<[?fRPo84-8.;j)Tr*Ef4/dZfR8]]d8..NAX4KSXP
%LEhl6>skQTZsCT>(oC@l885R04`nE;5tWZ'-/X::S!mpDU[ppf2!uD3.g("n!FFSK;A_KUoPj=aLo+]`Ss-?D'>2:Wei:R*??+l*
%B+#Nn;@h$P0?F#M[`bk:!d5<A5UNqkZOh_T?Y:ahH%NRg.1BC;V3b7`R1b^;4Ii;'%efpKc:MZ9-W\"N%.i6V9J`^W.3:;?!7TG,
%+V-9O/T0K0]P))(rW.I=*0oN-c8.KJY6tbfs5Pl`;$S8:k2AtT_V97=^G=$n+Jk1.bCh+-Coq)3GLJLG@S+/t.(O#MlPTma8T@\0
%>@>iGA'5f,fL6*YJ\BMK=^\'7`Gr/u0)_1bfEJ-<Ag%TC*o3,hCP@Z4]XM@(?*J$s?!t"U/g@E'G?pRp;(;<;KA/2I1-k-:A-Up=
%E)Hl?er!%-:^3TB9:?1K0Hd(Ga2lPu%N$XK(5DA0IbHa31kQjc(pIBmb\]Y*0jp,W*5ft?-Qb(33IE%2V]\HBmT(-b$d+fh>huT#
%Mub>N'9D4Z"jRs8C.%5Vm`6*^!3$u\$I%Ti;+..C&?fm=U/ha@m1dQj"e,j-e//9iU3h^kj5`msHDkD7iKZH!('ru[!E//pm^CCX
%YeZG@@$tI70JNc2G-9<607aSoZMY$k*?O_dD:$kh_R.549ktbt#GrN5Kfm/Xb.3)t0Q4#Aq$6\:f9!X1Dn0rgC/Muq&Q>H'?9Z2`
%C>jlZS2LdSQ8]^+>LVig.-Okg1r'N@94i,1d?Wr4or"?$gD;Qd'5VCR?lRm/['2ndMIuO4!d5D:OHa:Wi]fq%!j.n:5M_dZ\H0?g
%3:E`06QdPEket#/]WdO7HaI@t=87&6*HM<_Q5H(VRaJ"CC+R^J.t=&>2)fUUFERoJ:pDK.H4JE'f'-H3<-6<2.m-c\nO\h((2@mV
%kK>:$f&++_,]3Ln:LP2+=l&ol,E39"><bb#j*mOC+/?3^Z/oQ&8SsBa*OjR9AI."uOJVd&KZ9O_NFB>_4^)@H%UbY>6\@T\>f%a(
%?A):[&9@d2[6(kC_]/VaMu"]#PElp@qKe(6[7\$[h]s%@8C^X3nOI8h'*Ft6<O<s"D-Y9"=X`N/ZGLT9;.dWClke)efckOhJJ5HZ
%-l*+E[TqVO.8aY3)<*>p^ht>RW*g]1m&*9Ni>2no*C[0A!b[53,P?4^+6fFFd]-*nkhP*a3i&i$W%@%l^^FM*7*q`,Ptn;9nKO'#
%49YCuMB8Q'RK`d&m)(HfEEdoBjgQ"V+I(Yc*T''QgKfNLW$nL-\EB_MLn`:b,_a@?5O>3'`@;<(XPAe@92\gOmBDaB6D:?=-=t>Z
%gAm,g"Y1L)V.4UH/*7(_-Db2"iU"0+hMT-T2&Q&dSralK><@(a]^3%SBG.i!Vd2s[,3U3<Sd-lY)--TGc)7/3&bTtH((5[l86,s6
%"^Ysh`^C5\lgG*Yi6a;<6J*_q.LQHQN`'pR/.2#=9c.2V:fF$I3VX1C-W`Y#[05?+&7jO)"&[*,qt%gGROYL*JeXtU<uF)R290l9
%qH*,!Cfe@e7rY^)*T:'/1TQ5/VHq^$@-(&3f=[2#[hq5mAaTZP*J;!)dU/!W!pOR<S<bXC,P,rk;M*Ci6(p8#.R4?E8Z!UC'mGtG
%rTnM/=dt@UB![aARhF[/2A\AG\CcPCnWmQOjVdLDm8lW:&8eQl]m!U&$X(N=ODM<8rG/Ml-a8u6C[9.f/(]+tb,G[5d*iVp&=pLN
%Mq+/[bWr:%$KYI05>\%a"/_=`'fuqX6*GDe2cO<_9C_rWTIKI*FW<9SWd3YkN.pIoR28^:Xhmt2(Kd(]:bI#@9P3BZs1FlanCqB@
%mR<lUT[Be4K_i<e:LINoBj3:EBQ058>))RrD6=Wd)-4rtYH6spqbhp9i+.NT2l'JkLNQr@G#:ZOSkH(43t=N$TTRd!BXubd^fGS/
%,.86*_r[ifU";1Ko5"+`0lmH<n]ERu<0>GSim)Z*iK-=fG+X!5Sm4iEk]Vj*%"/.4b7u^>(Jp(9!\If`0V'3W"q]EhJt%e,fW<M`
%a83/0QY"c[,>3=6V$qjBbrf/%G`N5ZNqR/Q%Q>?KagY;@I5,H/QnkL9g;Ypd=?'C70=VAunn/A7Ln7t*i$0KZ86P_RrMWL_@n(B%
%WgW4Vcl[TP%qe^nBIH"*@DOB=2VLn*]XM(EI_F6#>H6I0_:K6nZ6`HnaAd!\]rJkaIFo!<Q[H<#![!nL+D<$\;eaY<OhDU'^!$8Z
%-jg#qK!3<1FhI-bH@*Po@pL+[r@O\RJb$D_Nt_Ft@9!-.?%@Vk^a.tg4ZMQgI/5=qQ7)I@_CV:34M^8amiq@haHChk/!2cF>V(\n
%&R=#5ZAU[nM>h)qlt9Ih$5f)QPT@/L4e?1OjUhEg@r`rNo.dC47D5Fo[t#W]0`EcBUQ$O>o];sjkA,T,c:XX0@;MipG?Cs,@>*M@
%/Wr3#74T$@%!f7<S1YFOesFAo-E>0_%QT#BG7>a)Ob><dRIFl<M&[PIl208Hm__VlrjLFta]`jhCpZ/J=89JG8(+m2HPQ)OPE;D9
%+\!0'L^l-hg*d+NIN.eR"S]7F@2AD6:Ee?TO5o,7SuQ22P(N&[;8]e0D>t*8LTjkbK>Z?$MtmINc6l'`qdEI)$5Rumo#bA_m+NCp
%HJ#at(,s,\Eq2N>[U?&;&@J,%KFot<;_q2p_-&9n<8m,kEtCeiKH[!cB%BHdP<:Fn;>oIAoEp:5.X`f?c6$6/$'AU$-cY+Q6s1B2
%HZjb^U%#W#gpGYAq5Goj!LIra1f,E@CN7"AYc]MI9Pa?H`idIhh#./U>L`u.^buZ?M)3#f[`YX#N]RCO+eVCek]9[2+gcYJ4>'dH
%g#A!IB:Y=DfopFi<h\!Jqd`bEEmq*eIe/1>##TQr/a[N$i)i<'Enj401m)ccC6PGeJR10R;%>cMDptfV;)Ld6>dKp6)A.?$ej^Xr
%=d9E)!N]uW3YSo!]Bfn<6].#]I3KZBPqSNLR?nE[I[X^6'-&k-"'@QQ+O<pSj:IKt@WPQo/C5`V,E2K5_bG#+\=a[o"7FC=@X)l1
%p,XcoK?ZS,p"B]VemHpp^P!f9SeI#O_#j;'QEdAA->e3=$,DS"flPTdHE>b(Es2*'>MqkO<R?8"ne_rnH]D824F$(hRq@&8eS;*C
%>b;M1H$UJ@R5o!5QY"Z'RlSaMHAM!YcA41uObI@hbJq2s;6+=('G!6L'e<DN/S-fT_'AkAqcl"G%L#:Cnm#Qg?C#?jDgq'aH+-99
%-W?#jb!kT#Ya:0LE5Y6#T49Z*BiI7)SC>#e8:e%`D#prUTO`WiEZH*]9W1'(;Pd6U%,+K`a[NYI-DN6Vpot.B7dA_Am?TG\DRR=$
%`gSWQ%NSa1J7D]d\aBacFgo/0#iJAL!nY<kIYEl<h[&DfVA7lo=\`_b)Fk?NUGLKu;0@*8^&G1N6%:#l=NG4+.-0[-+Dj[FCuPqQ
%_nY>;"lZGPQ"o8a'Y#9:Z/!._G@Mdem_%+a6s.5Z*&aSAj%ZT31C=*k.P5t0VbB'l.f3Goo4@:sfh"a^l,B3LpUL$UTBSadL(>CY
%o!hL<0[-(1+V4'0cq$FGY(oTnTTKBfT)u#%k;>E:+1M4"=O)kCihsC;(JXDI+,"4^N8T@<4@FX=Qq)qjUorgC&G2Z&9@ak\.Y>^,
%H.3,2(ptL7L`0F'?r8.m$DXO3BI1"t)WXa?98@-/a9#;.:):]cnu?p:QJRkg*_V>.=g/c$ZG755ZA>l2h0!.cI+Obg(?I,$c7&<!
%A:3KBjL+F@F?.6JSA-UkiUT\$!f&jEGQ@JW](ol89>tTlhR&ag4D`7kHY2qQn?o9YF'\;NNe]Fdc(0[$i$4t[F7<!^%h\/0Y^Ut+
%WrYjJddTDEd6tZPn-i6;+'Oh23\S4W+o/gBLT4,`G_e".#.j_UZ6)6Fe<u,=_8h7nj%`ILh(&^"4S]&DapMJV2\%n]9$7K==f>#.
%\NlA,Ee04u&eaqeh-a`B=,'XnT,0[$(KWRdbq[El$/cU:4:r6]cZtMn5eCck^*k8gI_dA-jT6[Q\A+OVdL>s>9YXN`CG(<si+u2O
%T8C-6GX`$Y:?]cJPQcg>54:V09cSI,%,C+i3fjG$6H_fl"l&OU-_KMKcl&-jf7'8U&E?ss0n1d)0LLU2GfC"@65V>=o>G$Y0CAq+
%43N3b50F*e5"eF/7YqLeeQiFB*Z\0Uk7*tn?VdoS)oREhEbu-:Lp?tegWpU`,$rCgG5>oRUGkbTBG)XGbc:dTT5oe#As`i;(>.7K
%,/Ts"7?7S]E"=?4#5t`h,!^XH:jI'-]VnB@-=HtngfDkg"2#6n7!R2P)G_QP"*4Eb;$FeK60r=(5<ckFKB\R1n,qQ]6loppcY^W'
%ZsD,H,KrF?''']&bOES]:i4j!*]*RA_YL>V&WE7'7<XtVR#C>1N:9/XXL2iMl&<[_3n)\CiZf(Xj2f'G,<j8.Un,j,)\I21U\Mj.
%5Wq:2;aS+OdNdb5e`6T2F,(q";H&QO$Htk!W7Kf&ERj1J%!+M/1CrsnRMU[;C",rLd(EK'+MfchJsCO\.?qodM!16`$FtFm?@N96
%-H<5C*gmi12Rr$71(P#!m-4kcj#0bF?7aJEE:d'X3B;o5Ybs34im8Ij,4eppfOF(!]Gj^(a%rZr*gsM0Hq*6MHCBtAMb5QVO#?AF
%2ieR<n]6`Jj]I!>VYB/4/d]a+0N&1M(7;R%*5d5r+SpbKLqCe[43#kejs^SqmX/FO@@3rO$$h&HCIIUHN+T_Vl-.2c,dqdja9'i(
%KS;P(FKrF)afP[9-G"-g8)a[GW.WMfeg[a<Guk*V_mlhg>b+GP#\=mkc-;D\)=C_<Qn)>#Nhg&fh<=0bIH^L8+)2]65=Mj?ZUht.
%lNE9'P/u%ES%b)!P5ebWmA%1+USNUO"ci'aH/i:8:2.N[eI^NC!&BH`Q?'_sDBF_.0nC+6X?TF%%YBULN4r'VBIJ]W*P1M4s6#fg
%%EjB-MH*CaII5<(38jN<K7gIC?nDb3J4YRPS5A7e3h#4[Km&%)-[=+.of`\-J>\LtGU>*CI]QL!"h9hlIMt6A&rOY=L?/CUop,h&
%;1[e)GC\>@qMV]kU")TN"IH.F(gIotc16qF%6X?'<UhQu3)9#$N+EB!Id*uSi<7/d<rL;U^(7i;'ARdYZ(du#T&'f3L;"6gacY!G
%2gH_5_T0iI1WM4ZD"/\Sl#TlANLZfk$*2CVf1FY8G`qO8^i+\F"R_b0'O(B2dr5nVqK:U!*.FMf$XA+PKFj+%&QRXO%`c.*\O[qP
%FsX_X-pH3=XK_^r9_K7)+KSSH8DUX`HUR^V*8QbkI_i>P.u@_u7?L@?I=dr#U.801cr_GFqr%8lV:Y!'7CEF`K@2*6DsaH&boSiW
%UP1/-Y3sf>Hc\^_ajr)c+7fQO'NW*7liAahA$X.C9p=MLKnu4*m8k4o\Q=,oDn&KqiKKLeeSI*Lltj/HB!FH=?KQAD2[+N>%C,u8
%!Dt.Qe0p&+!bKt^__IPmC#+"SHeiJ[p:m)jKar#J_L%!!oSN/"=A0ccZ/`RR(HAjdHK[,-m%le&_\,FHHNAps2>_I1god1>&p)Z*
%RgC$]9d@$CJDWmkjCti1oG^6Gl?>KP9sp:KEno#q*\pe-4[0L7-eWeBLm&P,bn'dEIc`M'D#js?gpslA\-KO_DOUG]Yj^f67Up&=
%[qRe;\A86MFTJa=DT1P7&p03;.(M4g<F!C<O&gLq>%g"8n=`k6)4iKe%u@sVr8L^r&VV.=oFa(ni]RhqfY>hCm,W.+OrV:Tp4(kp
%jNduF1ol\i,V"Q6hgIktDeh<V$Faa!!OjiXAI'q6pEggMY]`-A`]f,@Y.lLrr=ri0UlL=u.RS&eM>Cq27plmF>8s[q:&S,0W9PB9
%7u=k)MM>7Y8@%,'56V?"d,;4:l!9!5c*=\HVdD4O2t\2;(tnh`P]0:UgKgH29XL0OBr4)-`1*4gO@2*@Um_FNqt.]eP^.JhBRgCY
%*!)4K=l^V]hi,=15i,5Y&QqIkLi\`i.37tMp87G(.`nq+p"-c=a%o:q6R3,'J)*5I5+k+&buO%=mu(]$OL^%IX3J(%3m-1T%ADV8
%&DI'li<c)BIZd>MShD]GfgauIZkN@DiCI/e$$h%maA6PBaitUOr$qEIh%#CRDKQEo&l1h8i4+1-l#-I?LHE0KYlk$qchZJuo#lNq
%5QC,o[i^+d^^pJAq<'F2p?hI$rV)XsJ,[pC^O?+IQVX6'q;p5c5QC`EJ,4YCqYAm4hgYUugQt^NrTCBa$Ntr9rnrPRrph`Bo]JI;
%+,m7K^A~>
%AI9_PrivateDataEnd
